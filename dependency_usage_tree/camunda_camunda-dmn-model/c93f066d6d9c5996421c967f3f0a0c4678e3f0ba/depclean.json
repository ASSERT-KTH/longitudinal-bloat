{
 "usage": {
  "org.camunda.bpm.model.dmn.impl.instance.RuleImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RequiredInputReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TextImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.KnowledgeRequirementImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.InputValuesTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ItemDefinitionReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.KnowledgeRequirementTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ItemComponentImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ExpressionTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TextAnnotationImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ArtifactImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DefinitionsTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImportedElementImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RequiredAuthorityReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.PerformanceIndicatorTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.SourceRefImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputDecisionReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.FunctionDefinitionImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ImportedValuesTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.TypeRefTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.InputTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.KnowledgeSourceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.type.reference.ElementReference",
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.FormalParameterImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ExpressionImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.AuthorityRequirementTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.FormalParameterImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.LiteralExpressionImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DrgElementReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.QuestionImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DmnModelElementInstanceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.impl.instance.ModelElementInstanceImpl"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.BusinessKnowledgeModelImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionMakerReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.InputExpressionTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.UnaryTestsImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionServiceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollectionBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollection",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DefaultOutputEntryTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionMadeReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.UsingTaskReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionOwnerReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.UnaryTestsTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputValuesImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RowImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionOwnedReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ElementCollectionImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollectionBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollection",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.FunctionDefinitionTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.InputClauseTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImpactedPerformanceIndicatorReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InvocationImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.BusinessKnowledgeModelTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.EncapsulatedLogicTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.AssociationImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.attribute.AttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReference",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ItemDefinitionReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.KnowledgeSourceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DmnModelElementInstance": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.instance.ModelElementInstance"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TargetRefImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ParameterImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OwnerReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TargetRefImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.PerformanceIndicatorImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollectionBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollection",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.util.ParseDmnModelRule": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.util.IoUtil"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.Description",
    "org.junit.rules.TestWatcher"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.KnowledgeRequirementImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReference",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImpactingDecisionReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.InformationRequirementTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.AbstractTextContentElementTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ItemComponentTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputDataImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.BindingImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.UsingProcessReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollectionBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollection",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputDataReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DmnElementReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RequiredKnowledgeReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.VariableImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.OutputEntryTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TypeRefImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.FunctionDefinitionImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ListImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InformationRequirementImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReference",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DecisionRuleTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.BindingTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputClauseImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RequiredDecisionReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.DmnParser": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.ModelImpl",
    "org.camunda.bpm.model.xml.impl.util.ReflectUtil",
    "org.camunda.bpm.model.xml.impl.parser.AbstractModelParser",
    "org.camunda.bpm.model.xml.instance.DomDocument",
    "org.camunda.bpm.model.xml.ModelInstance",
    "org.camunda.bpm.model.xml.ModelParseException"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.RuleTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionOwnedReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.RelationTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ItemComponentImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputExpressionImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RelationImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImportedElementImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ExtensionElements": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.instance.ModelElementInstance"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ColumnImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.VariableTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TextAnnotationImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ContextEntryTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.ExampleCompatibilityTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.instance.DomElement"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runners.Parameterized",
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:2.9.1:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.AbstractCharSequenceAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractObjectAssert"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.VariableImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.AllowedValuesTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.TextAnnotationTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.AuthorityRequirementImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ImportTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ItemDefinitionImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionServiceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.LiteralExpressionImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.EncapsulatedLogicImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputEntryImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DmnElementReferenceTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.InputDataTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.EncapsulatedDecisionReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DecisionTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputValuesImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.AllowedValuesImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ItemDefinitionTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ArtifactTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TextImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.BusinessKnowledgeModelImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.InputEntryTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.OutputClauseTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.SupportedObjectiveReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionRuleImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OrganizationUnitImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollectionBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollection",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputValuesImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.UsingProcessReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DefinitionsImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.EncapsulatedDecisionReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.PerformanceIndicatorImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.NamedElementTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InformationRequirementImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputClauseImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TypeImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ParameterImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.LiteralExpressionTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RuleImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.EncapsulatedLogicImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputEntryImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.OutputValuesTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.AllowedValuesImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.DmnModelInstance": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.ModelInstance"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DecisionServiceTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.NamedElementImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.QueryImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.type.ModelElementType",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionMadeReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OrganizationUnitImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ItemDefinitionImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.attribute.AttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ColumnImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ImportedElementTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DmnElementTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RelationImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.AssociationTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RequiredDecisionReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.UsingTaskReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.OutputTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionMakerReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.KnowledgeSourceTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.BindingImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TypeRefImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.QuestionImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputDecisionReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.SourceRefImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DmnElementReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionTableImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.type.attribute.AttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.Query": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.type.ModelElementType",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ElementCollectionImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.InformationItemTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.DmnModelException": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.ModelException"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImportImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ListTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RequiredKnowledgeReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DrgElementReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.TypeImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImportedValuesImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.UnaryTestsImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DescriptionImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputDecisionReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImpactedPerformanceIndicatorReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImportImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.BusinessContextElementImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionRuleImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DrgElementImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputDataImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.Dmn": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.util.IoUtil",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.impl.instance.ModelElementInstanceImpl",
    "org.camunda.bpm.model.xml.Model"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputClauseImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.AllowedAnswersImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputDataReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.BusinessContextElementTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DmnElementImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ParameterTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.RowTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ExtensionElementsTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ContextTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.DmnModelTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.impl.util.ReflectUtil"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Rule",
    "org.junit.rules.TemporaryFolder"
   ],
   "org.assertj:assertj-core:jar:2.9.1:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractObjectAssert"
   ],
   "org.xmlunit:xmlunit-core:jar:2.6.2:test": [
    "org.xmlunit.diff.Diff",
    "org.xmlunit.builder.DiffBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ContextImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DrgElementTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ContextEntryImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RequiredAuthorityReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OutputDecisionReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.AllowedAnswersImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ContextImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputClauseImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImpactingDecisionReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.util.GetDmnModelElementTypeRule": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.type.ModelElementType",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.Model",
    "org.camunda.bpm.model.xml.test.GetModelElementTypeRule",
    "org.camunda.bpm.model.xml.ModelInstance"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.Description",
    "org.junit.rules.TestWatcher"
   ],
   "org.assertj:assertj-core:jar:2.9.1:test": [
    "org.assertj.core.api.AbstractCharSequenceAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.OrganizationUnitTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RowImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ColumnTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InvocationImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InputValuesImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ExtensionElementsImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementType",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.instance.DomElement",
    "org.camunda.bpm.model.xml.impl.ModelInstanceImpl",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.impl.util.ModelUtil",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.FormalParameterTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DefinitionsImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DescriptionImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.InvocationTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InformationItemImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DefaultOutputEntryImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.OwnerReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.AbstractDmnElementReferenceTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DefaultOutputEntryImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ExtensionElementsImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.DmnModelInstanceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.instance.DomDocument",
    "org.camunda.bpm.model.xml.impl.ModelInstanceImpl",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.impl.ModelImpl",
    "org.camunda.bpm.model.xml.ModelInstance"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.InformationItemImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ImportedValuesImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.attribute.Attribute",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.AuthorityRequirementImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReference",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder",
    "org.camunda.bpm.model.xml.type.reference.ElementReferenceBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DmnModelElementInstanceTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.BeforeClass",
    "org.junit.ClassRule"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.SupportedObjectiveReferenceImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.DecisionOwnerReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.ElementCollectionTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ContextEntryImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.child.ChildElement",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.AssociationImpl$1": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.instance.ModelElementInstance",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.RequiredInputReferenceImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.impl.instance.ListImpl": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
    "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
    "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
    "org.camunda.bpm.model.xml.ModelBuilder",
    "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder"
   ]
  },
  "org.camunda.bpm.model.dmn.instance.DecisionTableTest": {
   "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile": [
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
    "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption"
   ]
  },
  "org.camunda.bpm.model.dmn.ReadWriteTest": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:2.9.1:test": [
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractObjectAssert",
    "org.assertj.core.api.AbstractListAssert"
   ]
  },
  "org.camunda.bpm.model.dmn.ExpressionLanguageTest": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:2.9.1:test": [
    "org.assertj.core.api.AbstractCharSequenceAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.camunda.bpm.model.dmn.DmnTest": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:2.9.1:test": [
    "org.assertj.core.api.AbstractObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.camunda.bpm.model.dmn.CamundaExtensionsTest": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.After",
    "org.junit.runners.Parameterized",
    "org.junit.Before",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:2.9.1:test": [
    "org.assertj.core.api.AbstractCharSequenceAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.camunda.bpm.model.dmn.DmnDiTest": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ]
  },
  "org.camunda.bpm.model.dmn.DmnWriterTest": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:2.9.1:test": [
    "org.assertj.core.api.AbstractCharSequenceAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.camunda.bpm.model.dmn.GenerateIdTest": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:2.9.1:test": [
    "org.assertj.core.api.AbstractCharSequenceAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.camunda.bpm.model.dmn.DmnModelInstanceTest": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ],
   "org.hamcrest:hamcrest-core:jar:1.3:test": [
    "org.hamcrest.CoreMatchers"
   ]
  },
  "org.camunda.bpm.model.dmn.util.Java9CDataWhitespaceFilter": {
   "org.xmlunit:xmlunit-core:jar:2.6.2:test": [
    "org.xmlunit.util.Predicate"
   ]
  }
 },
 "dependencies": {
  "id": "org.camunda.bpm.model:camunda-dmn-model:jar:7.12.0-alpha4:null",
  "coordinates": "org.camunda.bpm.model:camunda-dmn-model:7.12.0-alpha4",
  "groupId": "org.camunda.bpm.model",
  "artifactId": "camunda-dmn-model",
  "version": "7.12.0-alpha4",
  "packaging": "jar",
  "omitted": false,
  "type": "unknown",
  "status": "unknown",
  "parent": "unknown",
  "allTypes": [],
  "usedTypes": [],
  "usageRatio": -1.0,
  "children": [
   {
    "id": "org.camunda.bpm.model:camunda-xml-model:jar:7.12.0-alpha4:compile",
    "coordinates": "org.camunda.bpm.model:camunda-xml-model:7.12.0-alpha4",
    "groupId": "org.camunda.bpm.model",
    "artifactId": "camunda-xml-model",
    "version": "7.12.0-alpha4",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 165021,
    "type": "direct",
    "status": "used",
    "parent": "org.camunda.bpm.model:camunda-dmn-model:jar:7.12.0-alpha4",
    "allTypes": [
     "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollectionBuilder",
     "org.camunda.bpm.model.xml.type.reference.AttributeReference",
     "org.camunda.bpm.model.xml.instance.ModelElementInstance",
     "org.camunda.bpm.model.xml.test.assertions.ModelElementTypeAssert",
     "org.camunda.bpm.model.xml.impl.type.attribute.DoubleAttribute",
     "org.camunda.bpm.model.xml.impl.type.attribute.BooleanAttributeBuilder",
     "org.camunda.bpm.model.xml.impl.type.attribute.AttributeImpl",
     "org.camunda.bpm.model.xml.test.assertions.AttributeAssert",
     "org.camunda.bpm.model.xml.type.attribute.AttributeBuilder",
     "org.camunda.bpm.model.xml.impl.ModelInstanceImpl",
     "org.camunda.bpm.model.xml.test.GetModelElementTypeRule",
     "org.camunda.bpm.model.xml.impl.type.reference.AttributeReferenceImpl",
     "org.camunda.bpm.model.xml.impl.type.attribute.BooleanAttribute",
     "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
     "org.camunda.bpm.model.xml.impl.type.reference.UriElementReferenceCollectionBuilderImpl",
     "org.camunda.bpm.model.xml.type.ModelElementType",
     "org.camunda.bpm.model.xml.type.reference.AttributeReferenceCollection$1",
     "org.camunda.bpm.model.xml.instance.DomElement",
     "org.camunda.bpm.model.xml.test.assertions.AttributeReferenceAssert",
     "org.camunda.bpm.model.xml.impl.validation.ModelInstanceValidator",
     "org.camunda.bpm.model.xml.validation.ValidationResultCollector",
     "org.camunda.bpm.model.xml.impl.type.child.ChildElementImpl",
     "org.camunda.bpm.model.xml.ModelParseException",
     "org.camunda.bpm.model.xml.ModelReferenceException",
     "org.camunda.bpm.model.xml.impl.type.child.SequenceBuilderImpl",
     "org.camunda.bpm.model.xml.impl.util.DomUtil$DomErrorHandler",
     "org.camunda.bpm.model.xml.impl.type.reference.QNameElementReferenceCollectionBuilderImpl",
     "org.camunda.bpm.model.xml.impl.util.WrongDocumentException",
     "org.camunda.bpm.model.xml.test.assertions.ChildElementAssert",
     "org.camunda.bpm.model.xml.impl.type.reference.UriElementReferenceBuilderImpl",
     "org.camunda.bpm.model.xml.impl.type.attribute.AttributeBuilderImpl",
     "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
     "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
     "org.camunda.bpm.model.xml.impl.type.reference.UriElementReferenceImpl",
     "org.camunda.bpm.model.xml.test.assertions.AbstractReferenceAssert",
     "org.camunda.bpm.model.xml.impl.util.ModelUtil",
     "org.camunda.bpm.model.xml.impl.util.ModelTypeException",
     "org.camunda.bpm.model.xml.impl.util.DomUtil$NodeListFilter",
     "org.camunda.bpm.model.xml.impl.type.reference.ElementReferenceCollectionImpl",
     "org.camunda.bpm.model.xml.impl.type.child.ChildElementCollectionImpl",
     "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
     "org.camunda.bpm.model.xml.validation.ValidationResultType",
     "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
     "org.camunda.bpm.model.xml.impl.instance.DomDocumentImpl",
     "org.camunda.bpm.model.xml.impl.util.IoUtil",
     "org.camunda.bpm.model.xml.type.reference.ReferenceBuilder",
     "org.camunda.bpm.model.xml.impl.type.child.ChildElementCollectionBuilderImpl",
     "org.camunda.bpm.model.xml.type.reference.AttributeReferenceCollection",
     "org.camunda.bpm.model.xml.impl.type.reference.ElementReferenceImpl",
     "org.camunda.bpm.model.xml.ModelBuilder",
     "org.camunda.bpm.model.xml.type.reference.AttributeReferenceCollectionBuilder",
     "org.camunda.bpm.model.xml.impl.type.reference.AttributeReferenceBuilderImpl",
     "org.camunda.bpm.model.xml.impl.type.attribute.NamedEnumAttribute",
     "org.camunda.bpm.model.xml.impl.ModelBuilderImpl$1",
     "org.camunda.bpm.model.xml.impl.util.DomUtil$ElementByTypeListFilter",
     "org.camunda.bpm.model.xml.impl.ModelImpl",
     "org.camunda.bpm.model.xml.impl.util.ReflectUtil",
     "org.camunda.bpm.model.xml.UnsupportedModelOperationException",
     "org.camunda.bpm.model.xml.impl.parser.AbstractModelParser",
     "org.camunda.bpm.model.xml.impl.util.ModelIoException",
     "org.camunda.bpm.model.xml.impl.instance.DomElementImpl",
     "org.camunda.bpm.model.xml.impl.type.reference.QNameAttributeReferenceImpl",
     "org.camunda.bpm.model.xml.impl.util.XmlQName",
     "org.camunda.bpm.model.xml.impl.type.reference.IdsElementReferenceCollectionImpl",
     "org.camunda.bpm.model.xml.impl.type.reference.QNameElementReferenceBuilderImpl",
     "org.camunda.bpm.model.xml.impl.type.reference.QNameAttributeReferenceBuilderImpl",
     "org.camunda.bpm.model.xml.impl.type.reference.ElementReferenceCollectionImpl$1",
     "org.camunda.bpm.model.xml.validation.ValidationResultFormatter",
     "org.camunda.bpm.model.xml.impl.ModelBuildOperation",
     "org.camunda.bpm.model.xml.impl.validation.ModelValidationResultImpl",
     "org.camunda.bpm.model.xml.validation.ModelElementValidator",
     "org.camunda.bpm.model.xml.impl.type.reference.IdsElementReferenceCollectionBuilderImpl",
     "org.camunda.bpm.model.xml.impl.type.child.ChildElementCollectionImpl$1",
     "org.camunda.bpm.model.xml.impl.type.reference.AttributeReferenceCollectionBuilderImpl",
     "org.camunda.bpm.model.xml.impl.instance.ModelElementInstanceImpl",
     "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
     "org.camunda.bpm.model.xml.Model",
     "org.camunda.bpm.model.xml.impl.type.ModelElementTypeBuilderImpl",
     "org.camunda.bpm.model.xml.validation.ValidationResult",
     "org.camunda.bpm.model.xml.impl.validation.ModelValidationResultsImpl",
     "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
     "org.camunda.bpm.model.xml.impl.type.attribute.DoubleAttributeBuilder",
     "org.camunda.bpm.model.xml.impl.type.attribute.StringAttributeBuilderImpl",
     "org.camunda.bpm.model.xml.impl.type.reference.QNameElementReferenceCollectionImpl",
     "org.camunda.bpm.model.xml.impl.type.reference.ReferenceImpl",
     "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollection",
     "org.camunda.bpm.model.xml.validation.ValidationResults",
     "org.camunda.bpm.model.xml.type.reference.AttributeReferenceBuilder",
     "org.camunda.bpm.model.xml.impl.type.attribute.EnumAttribute",
     "org.camunda.bpm.model.xml.impl.type.child.ChildElementBuilderImpl",
     "org.camunda.bpm.model.xml.impl.type.reference.QNameElementReferenceImpl",
     "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
     "org.camunda.bpm.model.xml.impl.type.reference.ElementReferenceBuilderImpl",
     "org.camunda.bpm.model.xml.impl.validation.ValidationResultsCollectorImpl",
     "org.camunda.bpm.model.xml.impl.ModelBuilderImpl",
     "org.camunda.bpm.model.xml.impl.util.DomUtil$ElementNodeListFilter",
     "org.camunda.bpm.model.xml.impl.type.attribute.EnumAttributeBuilder",
     "org.camunda.bpm.model.xml.instance.DomDocument",
     "org.camunda.bpm.model.xml.type.reference.Reference",
     "org.camunda.bpm.model.xml.ModelValidationException",
     "org.camunda.bpm.model.xml.impl.util.DomUtil",
     "org.camunda.bpm.model.xml.type.attribute.Attribute",
     "org.camunda.bpm.model.xml.type.reference.ElementReference",
     "org.camunda.bpm.model.xml.ModelException",
     "org.camunda.bpm.model.xml.ModelInstance",
     "org.camunda.bpm.model.xml.impl.type.attribute.IntegerAttributeBuilder",
     "org.camunda.bpm.model.xml.impl.type.attribute.StringAttribute",
     "org.camunda.bpm.model.xml.impl.util.DomUtil$ElementByNameListFilter",
     "org.camunda.bpm.model.xml.impl.type.attribute.IntegerAttribute",
     "org.camunda.bpm.model.xml.test.assertions.ElementReferenceCollectionAssert",
     "org.camunda.bpm.model.xml.impl.type.attribute.NamedEnumAttributeBuilder",
     "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
     "org.camunda.bpm.model.xml.impl.util.QName",
     "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
     "org.camunda.bpm.model.xml.impl.type.ModelElementTypeImpl",
     "org.camunda.bpm.model.xml.impl.util.StringUtil",
     "org.camunda.bpm.model.xml.type.child.ChildElement",
     "org.camunda.bpm.model.xml.impl.type.reference.UriElementReferenceCollectionImpl",
     "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption",
     "org.camunda.bpm.model.xml.type.reference.ElementReferenceBuilder",
     "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder",
     "org.camunda.bpm.model.xml.impl.type.reference.ElementReferenceCollectionBuilderImpl",
     "org.camunda.bpm.model.xml.test.assertions.ModelAssertions"
    ],
    "usedTypes": [
     "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollectionBuilder",
     "org.camunda.bpm.model.xml.instance.ModelElementInstance",
     "org.camunda.bpm.model.xml.type.child.ChildElementBuilder",
     "org.camunda.bpm.model.xml.impl.ModelImpl",
     "org.camunda.bpm.model.xml.impl.util.ReflectUtil",
     "org.camunda.bpm.model.xml.impl.parser.AbstractModelParser",
     "org.camunda.bpm.model.xml.type.attribute.AttributeBuilder",
     "org.camunda.bpm.model.xml.instance.DomDocument",
     "org.camunda.bpm.model.xml.type.child.SequenceBuilder",
     "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$ChildElementAssumption",
     "org.camunda.bpm.model.xml.impl.ModelInstanceImpl",
     "org.camunda.bpm.model.xml.test.GetModelElementTypeRule",
     "org.camunda.bpm.model.xml.impl.util.ModelUtil",
     "org.camunda.bpm.model.xml.type.attribute.Attribute",
     "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$AttributeAssumption",
     "org.camunda.bpm.model.xml.type.reference.ElementReference",
     "org.camunda.bpm.model.xml.ModelException",
     "org.camunda.bpm.model.xml.ModelInstance",
     "org.camunda.bpm.model.xml.impl.instance.ModelTypeInstanceContext",
     "org.camunda.bpm.model.xml.type.ModelElementType",
     "org.camunda.bpm.model.xml.type.child.ChildElementCollection",
     "org.camunda.bpm.model.xml.instance.DomElement",
     "org.camunda.bpm.model.xml.impl.util.IoUtil",
     "org.camunda.bpm.model.xml.type.attribute.StringAttributeBuilder",
     "org.camunda.bpm.model.xml.impl.instance.ModelElementInstanceImpl",
     "org.camunda.bpm.model.xml.Model",
     "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder$ModelTypeInstanceProvider",
     "org.camunda.bpm.model.xml.type.child.ChildElementCollectionBuilder",
     "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest",
     "org.camunda.bpm.model.xml.ModelParseException",
     "org.camunda.bpm.model.xml.ModelBuilder",
     "org.camunda.bpm.model.xml.type.reference.ElementReferenceCollection",
     "org.camunda.bpm.model.xml.type.child.ChildElement",
     "org.camunda.bpm.model.xml.type.ModelElementTypeBuilder",
     "org.camunda.bpm.model.xml.test.AbstractModelElementInstanceTest$TypeAssumption",
     "org.camunda.bpm.model.xml.type.reference.ElementReferenceBuilder"
    ],
    "usageRatio": 0.2926829268292683,
    "children": []
   },
   {
    "id": "junit:junit:jar:4.12:test",
    "coordinates": "junit:junit:4.12",
    "groupId": "junit",
    "artifactId": "junit",
    "version": "4.12",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 314932,
    "type": "direct",
    "status": "used",
    "parent": "org.camunda.bpm.model:camunda-dmn-model:jar:7.12.0-alpha4",
    "allTypes": [
     "org.junit.runner.Request",
     "org.junit.experimental.categories.IncludeCategories",
     "org.junit.validator.AnnotationsValidator$AnnotatableValidator",
     "org.junit.rules.Stopwatch$1",
     "org.junit.rules.ExpectedException$ExpectedExceptionStatement",
     "org.junit.experimental.theories.ParameterSignature",
     "org.junit.internal.builders.NullBuilder",
     "junit.framework.TestSuite",
     "org.junit.validator.AnnotationsValidator$FieldValidator",
     "org.junit.runner.Result$1",
     "org.junit.ComparisonFailure$ComparisonCompactor",
     "org.junit.experimental.categories.Categories$IncludeCategory",
     "org.junit.rules.ExpectedExceptionMatcherBuilder",
     "org.junit.runners.model.FrameworkMethod$1",
     "junit.framework.JUnit4TestAdapterCache$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic",
     "org.junit.AfterClass",
     "org.junit.internal.requests.SortingRequest",
     "junit.extensions.TestSetup",
     "org.junit.internal.ArrayComparisonFailure",
     "org.junit.runner.Request$1",
     "org.junit.experimental.theories.internal.AllMembersSupplier$1",
     "org.junit.runner.Computer$1",
     "org.junit.rules.ErrorCollector",
     "org.junit.internal.runners.InitializationError",
     "org.junit.rules.Verifier",
     "org.junit.rules.ExternalResource",
     "org.junit.experimental.results.FailureList",
     "org.junit.experimental.theories.PotentialAssignment$1",
     "junit.textui.ResultPrinter",
     "org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor",
     "org.junit.internal.runners.rules.ValidationError",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic",
     "org.junit.internal.runners.SuiteMethod",
     "junit.extensions.ActiveTestSuite$1",
     "org.junit.runner.RunWith",
     "org.junit.experimental.results.PrintableResult",
     "org.junit.rules.TestWatchman$1",
     "org.junit.internal.runners.statements.InvokeMethod",
     "org.junit.experimental.theories.Theories",
     "junit.extensions.ActiveTestSuite",
     "org.junit.internal.ComparisonCriteria",
     "org.junit.rules.Timeout",
     "org.junit.internal.requests.ClassRequest",
     "junit.framework.TestCase",
     "org.junit.Before",
     "org.junit.AssumptionViolatedException",
     "org.junit.Test$None",
     "org.junit.experimental.categories.IncludeCategories$IncludesAny",
     "org.junit.runner.manipulation.Filter",
     "org.junit.internal.runners.statements.FailOnTimeout$CallableStatement",
     "org.junit.runner.notification.RunNotifier$SafeNotifier",
     "org.junit.runner.notification.RunListener$ThreadSafe",
     "org.junit.Test",
     "junit.framework.JUnit4TestCaseFacade",
     "org.junit.runners.Parameterized$Parameter",
     "org.junit.internal.requests.FilterRequest",
     "org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue",
     "org.junit.experimental.categories.CategoryValidator",
     "org.junit.experimental.categories.Categories$ExcludeCategory",
     "org.junit.runners.model.TestClass$1",
     "org.junit.ComparisonFailure",
     "org.junit.runners.MethodSorters",
     "org.junit.internal.runners.MethodRoadie$1$1",
     "org.junit.runners.model.RunnerBuilder",
     "org.junit.runner.manipulation.Filterable",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1$1",
     "org.junit.validator.AnnotationsValidator$MethodValidator",
     "org.junit.experimental.max.MaxHistory$1",
     "org.junit.rules.RunRules",
     "org.junit.internal.MethodSorter",
     "org.junit.internal.Throwables",
     "org.junit.runner.notification.RunNotifier$1",
     "org.junit.internal.runners.model.EachTestNotifier",
     "org.junit.runner.notification.RunListener",
     "junit.framework.TestFailure",
     "org.junit.runner.Description",
     "org.junit.validator.AnnotationValidator",
     "org.junit.experimental.max.MaxCore$1$1",
     "org.junit.runner.notification.Failure",
     "org.junit.runner.Result$SerializedForm",
     "org.junit.validator.ValidateWith",
     "org.junit.internal.runners.statements.FailOnTimeout",
     "org.junit.internal.builders.AllDefaultPossibilitiesBuilder",
     "org.junit.runner.notification.RunNotifier$6",
     "org.junit.runner.notification.RunNotifier$7",
     "org.junit.rules.DisableOnDebug",
     "org.junit.runner.notification.RunNotifier$2",
     "org.junit.runner.notification.RunNotifier$3",
     "org.junit.runner.notification.RunNotifier$4",
     "org.junit.runners.model.NoGenericTypeParametersValidator",
     "org.junit.runner.notification.RunNotifier$5",
     "org.junit.rules.Verifier$1",
     "org.junit.runners.model.Statement",
     "junit.framework.Test",
     "org.junit.matchers.JUnitMatchers",
     "org.junit.rules.ErrorCollector$1",
     "junit.framework.JUnit4TestAdapter",
     "org.junit.experimental.categories.Categories$CategoryFilter",
     "org.junit.internal.runners.TestClass",
     "org.junit.experimental.ParallelComputer",
     "org.junit.internal.matchers.StacktracePrintingMatcher",
     "org.junit.rules.ExternalResource$1",
     "org.junit.runner.JUnitCommandLineParseResult$CommandLineParserError",
     "org.junit.internal.runners.statements.FailOnTimeout$Builder",
     "org.junit.internal.runners.MethodValidator",
     "org.junit.experimental.categories.ExcludeCategories",
     "org.junit.runner.Result$Listener",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1",
     "org.junit.validator.AnnotationsValidator",
     "org.junit.internal.ExactComparisonCriteria",
     "org.junit.Assume",
     "org.junit.experimental.theories.Theories$TheoryAnchor$2",
     "org.junit.internal.JUnitSystem",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParametersFactory",
     "org.junit.rules.Stopwatch$Clock",
     "org.junit.internal.runners.ClassRoadie",
     "org.junit.internal.builders.JUnit3Builder",
     "org.junit.runners.model.FrameworkMethod",
     "org.junit.internal.builders.IgnoredBuilder",
     "org.junit.runners.model.TestTimedOutException",
     "org.junit.internal.runners.statements.FailOnTimeout$1",
     "org.junit.experimental.theories.internal.SpecificDataPointsSupplier",
     "org.junit.runners.JUnit4",
     "org.junit.internal.runners.JUnit4ClassRunner$1",
     "org.junit.internal.runners.JUnit4ClassRunner$2",
     "org.junit.runner.JUnitCommandLineParseResult",
     "org.junit.Ignore",
     "junit.framework.Assert",
     "org.junit.runners.parameterized.ParametersRunnerFactory",
     "org.junit.experimental.theories.ParametersSuppliedBy",
     "junit.extensions.TestDecorator",
     "org.junit.validator.TestClassValidator",
     "org.junit.internal.runners.rules.RuleMemberValidator$1",
     "org.junit.runner.Result",
     "org.junit.runner.JUnitCore",
     "org.junit.experimental.theories.Theories$TheoryAnchor",
     "junit.extensions.TestSetup$1",
     "org.junit.internal.InexactComparisonCriteria",
     "junit.textui.TestRunner",
     "org.junit.runners.model.RunnerScheduler",
     "org.junit.internal.AssumptionViolatedException",
     "org.junit.runner.FilterFactories",
     "org.junit.internal.matchers.ThrowableMessageMatcher",
     "org.junit.experimental.theories.ParameterSupplier",
     "org.junit.experimental.max.MaxCore",
     "org.junit.runners.BlockJUnit4ClassRunner",
     "org.junit.runner.FilterFactory$FilterNotCreatedException",
     "junit.framework.ComparisonFailure",
     "org.junit.ClassRule",
     "org.junit.runners.model.FrameworkMember",
     "org.junit.internal.runners.JUnit38ClassRunner$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule",
     "org.junit.experimental.results.ResultMatchers$1",
     "org.junit.experimental.theories.Theory",
     "org.junit.internal.MethodSorter$2",
     "org.junit.internal.builders.JUnit4Builder",
     "org.junit.experimental.results.ResultMatchers$2",
     "org.junit.runners.BlockJUnit4ClassRunner$1",
     "org.junit.internal.MethodSorter$1",
     "org.junit.internal.builders.SuiteMethodBuilder",
     "org.junit.experimental.results.ResultMatchers$3",
     "org.junit.runners.parameterized.TestWithParameters",
     "org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener",
     "org.junit.experimental.ParallelComputer$1",
     "org.junit.internal.runners.MethodRoadie$1",
     "org.junit.internal.runners.MethodRoadie$2",
     "org.junit.runners.ParentRunner$3",
     "org.junit.runners.Parameterized$UseParametersRunnerFactory",
     "org.junit.runners.ParentRunner$4",
     "org.junit.runners.ParentRunner$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic",
     "org.junit.runners.ParentRunner$2",
     "org.junit.experimental.categories.Category",
     "org.junit.rules.TestWatcher",
     "org.junit.internal.runners.MethodRoadie",
     "org.junit.runners.Suite",
     "org.junit.runner.manipulation.Sorter$1",
     "org.junit.internal.builders.IgnoredClassRunner",
     "org.junit.experimental.theories.internal.Assignments",
     "org.junit.internal.matchers.TypeSafeMatcher",
     "org.junit.experimental.theories.suppliers.TestedOnSupplier",
     "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule",
     "org.junit.FixMethodOrder",
     "org.junit.internal.runners.FailedBefore",
     "org.junit.internal.RealSystem",
     "org.junit.runners.model.FrameworkField",
     "org.junit.rules.Stopwatch",
     "org.junit.internal.runners.statements.RunAfters",
     "org.junit.experimental.max.MaxHistory$RememberingListener",
     "org.junit.runners.model.MultipleFailureException",
     "org.junit.runners.model.Annotatable",
     "org.junit.experimental.theories.internal.ParameterizedAssertionError",
     "org.junit.rules.TestWatchman",
     "org.junit.runner.Describable",
     "org.junit.runner.Runner",
     "org.junit.rules.TestName",
     "org.junit.experimental.theories.internal.BooleanSupplier",
     "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule",
     "org.junit.runners.model.InitializationError",
     "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator",
     "org.junit.internal.TextListener",
     "org.junit.experimental.categories.CategoryFilterFactory",
     "org.junit.internal.runners.TestMethod",
     "org.junit.runners.Parameterized$Parameters",
     "junit.framework.AssertionFailedError",
     "org.junit.validator.PublicClassValidator",
     "org.junit.experimental.categories.ExcludeCategories$ExcludesAny",
     "junit.framework.JUnit4TestAdapterCache",
     "org.junit.experimental.theories.internal.EnumSupplier",
     "junit.framework.TestSuite$1",
     "junit.framework.TestListener",
     "org.junit.runners.ParentRunner",
     "org.junit.experimental.runners.Enclosed",
     "org.junit.Assert",
     "org.junit.experimental.max.MaxCore$1",
     "junit.framework.Protectable",
     "org.junit.internal.runners.JUnit4ClassRunner",
     "org.junit.rules.Timeout$Builder",
     "org.junit.runner.FilterFactory",
     "org.junit.rules.MethodRule",
     "org.junit.rules.Stopwatch$InternalWatcher",
     "junit.framework.ComparisonCompactor",
     "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException",
     "org.junit.runner.FilterFactoryParams",
     "junit.framework.TestResult$1",
     "org.junit.runners.model.TestClass",
     "org.junit.runner.manipulation.Sortable",
     "org.junit.internal.Classes",
     "org.junit.experimental.theories.DataPoint",
     "org.junit.runners.model.TestClass$FieldComparator",
     "org.junit.runner.Computer",
     "org.junit.After",
     "junit.framework.TestResult",
     "junit.runner.BaseTestRunner",
     "org.junit.runner.notification.SynchronizedRunListener",
     "org.junit.internal.builders.AnnotatedBuilder",
     "org.junit.runners.Parameterized",
     "org.junit.validator.AnnotationsValidator$ClassValidator",
     "org.junit.internal.runners.statements.Fail",
     "org.junit.runner.manipulation.Sorter",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters",
     "org.junit.internal.runners.ErrorReportingRunner",
     "org.junit.experimental.results.ResultMatchers",
     "org.junit.runners.AllTests",
     "org.junit.runners.Suite$SuiteClasses",
     "org.junit.runner.manipulation.NoTestsRemainException",
     "org.junit.experimental.theories.internal.AllMembersSupplier",
     "org.junit.experimental.theories.FromDataPoints",
     "org.junit.runner.notification.StoppedByUserException",
     "org.junit.experimental.theories.suppliers.TestedOn",
     "org.junit.internal.runners.rules.RuleMemberValidator",
     "org.junit.experimental.theories.DataPoints",
     "org.junit.experimental.categories.Categories",
     "junit.runner.TestRunListener",
     "org.junit.experimental.max.MaxHistory",
     "org.junit.BeforeClass",
     "org.junit.rules.TestRule",
     "org.junit.internal.runners.statements.RunBefores",
     "org.junit.internal.runners.JUnit38ClassRunner",
     "org.junit.rules.Timeout$1",
     "org.junit.runner.manipulation.Filter$1",
     "org.junit.ComparisonFailure$1",
     "org.junit.runner.manipulation.Filter$2",
     "org.junit.runner.manipulation.Filter$3",
     "org.junit.validator.AnnotationValidatorFactory",
     "org.junit.experimental.theories.PotentialAssignment",
     "junit.extensions.RepeatedTest",
     "org.junit.rules.TestWatcher$1",
     "org.junit.rules.ExpectedException",
     "org.junit.internal.runners.model.MultipleFailureException",
     "junit.runner.Version",
     "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule",
     "org.junit.experimental.max.MaxHistory$TestComparator",
     "org.junit.internal.runners.rules.RuleMemberValidator$Builder",
     "org.junit.runners.model.TestClass$MethodComparator",
     "org.junit.internal.runners.statements.ExpectException",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule",
     "org.junit.internal.runners.model.ReflectiveCallable",
     "org.junit.rules.RuleChain",
     "org.junit.experimental.max.CouldNotReadCoreException",
     "org.junit.Rule",
     "org.junit.internal.matchers.ThrowableCauseMatcher",
     "org.junit.runner.notification.RunNotifier",
     "org.junit.validator.AnnotationsValidator$1",
     "org.junit.rules.TemporaryFolder"
    ],
    "usedTypes": [
     "org.junit.BeforeClass",
     "org.junit.runners.Parameterized$Parameters",
     "org.junit.runner.RunWith",
     "org.junit.Test",
     "org.junit.runner.Description",
     "org.junit.rules.TestWatcher",
     "org.junit.Rule",
     "org.junit.After",
     "org.junit.ClassRule",
     "org.junit.Assert",
     "org.junit.rules.TemporaryFolder",
     "org.junit.runners.Parameterized",
     "org.junit.Before"
    ],
    "usageRatio": 0.045454545454545456,
    "children": [
     {
      "id": "org.hamcrest:hamcrest-core:jar:1.3:test",
      "coordinates": "org.hamcrest:hamcrest-core:1.3",
      "groupId": "org.hamcrest",
      "artifactId": "hamcrest-core",
      "version": "1.3",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 45024,
      "type": "transitive",
      "status": "used",
      "parent": "junit:junit:jar:4.12:test",
      "allTypes": [
       "org.hamcrest.Condition$1",
       "org.hamcrest.core.IsNull",
       "org.hamcrest.BaseDescription",
       "org.hamcrest.CoreMatchers",
       "org.hamcrest.core.IsNot",
       "org.hamcrest.StringDescription",
       "org.hamcrest.internal.SelfDescribingValue",
       "org.hamcrest.internal.ReflectiveTypeFinder",
       "org.hamcrest.Condition$Step",
       "org.hamcrest.CustomTypeSafeMatcher",
       "org.hamcrest.core.CombinableMatcher",
       "org.hamcrest.core.AllOf",
       "org.hamcrest.core.Every",
       "org.hamcrest.core.Is",
       "org.hamcrest.TypeSafeDiagnosingMatcher",
       "org.hamcrest.BaseMatcher",
       "org.hamcrest.core.AnyOf",
       "org.hamcrest.core.StringContains",
       "org.hamcrest.core.CombinableMatcher$CombinableBothMatcher",
       "org.hamcrest.core.IsAnything",
       "org.hamcrest.core.IsEqual",
       "org.hamcrest.core.ShortcutCombination",
       "org.hamcrest.internal.SelfDescribingValueIterator",
       "org.hamcrest.Factory",
       "org.hamcrest.core.StringEndsWith",
       "org.hamcrest.core.IsInstanceOf",
       "org.hamcrest.core.IsSame",
       "org.hamcrest.Condition$Matched",
       "org.hamcrest.core.StringStartsWith",
       "org.hamcrest.Description",
       "org.hamcrest.core.SubstringMatcher",
       "org.hamcrest.Condition",
       "org.hamcrest.CustomMatcher",
       "org.hamcrest.TypeSafeMatcher",
       "org.hamcrest.core.DescribedAs",
       "org.hamcrest.core.IsCollectionContaining",
       "org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher",
       "org.hamcrest.internal.ArrayIterator",
       "org.hamcrest.FeatureMatcher",
       "org.hamcrest.MatcherAssert",
       "org.hamcrest.Matcher",
       "org.hamcrest.Condition$NotMatched",
       "org.hamcrest.Description$NullDescription",
       "org.hamcrest.SelfDescribing",
       "org.hamcrest.DiagnosingMatcher"
      ],
      "usedTypes": [
       "org.hamcrest.CoreMatchers"
      ],
      "usageRatio": 0.022222222222222223,
      "children": []
     }
    ]
   },
   {
    "id": "org.assertj:assertj-core:jar:2.9.1:test",
    "coordinates": "org.assertj:assertj-core:2.9.1",
    "groupId": "org.assertj",
    "artifactId": "assertj-core",
    "version": "2.9.1",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 1099606,
    "type": "direct",
    "status": "used",
    "parent": "org.camunda.bpm.model:camunda-dmn-model:jar:7.12.0-alpha4",
    "allTypes": [
     "org.assertj.core.api.filter.FilterOperator",
     "org.assertj.core.api.DoubleAssert",
     "org.assertj.core.internal.cglib.proxy.Dispatcher",
     "org.assertj.core.internal.cglib.transform.impl.AddPropertyTransformer",
     "org.assertj.core.error.ShouldBeGreater",
     "org.assertj.core.error.ShouldHaveSameSizeAs",
     "org.assertj.core.internal.cglib.asm.$ByteVector",
     "org.assertj.core.internal.TypeComparators$1",
     "org.assertj.core.error.ShouldHaveContent",
     "org.assertj.core.api.AbstractShortAssert",
     "org.assertj.core.internal.cglib.reflect.FastMethod",
     "org.assertj.core.error.ShouldBeNormalized",
     "org.assertj.core.internal.Files",
     "org.assertj.core.error.ErrorMessageFactory",
     "org.assertj.core.internal.cglib.proxy.Proxy$ProxyImpl",
     "org.assertj.core.util.introspection.PropertyOrFieldSupport",
     "org.assertj.core.error.ShouldBeLess",
     "org.assertj.core.internal.cglib.core.Block",
     "org.assertj.core.internal.RecursiveFieldByFieldComparator",
     "org.assertj.core.error.ShouldHaveLineCount",
     "org.assertj.core.error.uri.ShouldHavePath",
     "org.assertj.core.internal.Failures",
     "org.assertj.core.error.ElementsShouldHaveAtLeast",
     "org.assertj.core.error.ShouldNotContain",
     "org.assertj.core.api.ByteArrayAssert",
     "org.assertj.core.util.BigDecimalComparator",
     "org.assertj.core.error.ShouldBeEmpty",
     "org.assertj.core.internal.cglib.core.DuplicatesPredicate",
     "org.assertj.core.internal.cglib.util.ParallelSorter$IntComparer",
     "org.assertj.core.internal.cglib.core.AbstractClassGenerator$ClassLoaderData",
     "org.assertj.core.internal.cglib.core.EmitUtils$ParameterTyper",
     "org.assertj.core.error.ShouldNotContainCharSequence",
     "org.assertj.core.error.ShouldBeInSameYear",
     "org.assertj.core.configuration.ConfigurationProvider",
     "org.assertj.core.error.ShouldHaveDateField",
     "org.assertj.core.internal.cglib.util.ParallelSorter$ByteComparer",
     "org.assertj.core.error.MessageFormatter",
     "org.assertj.core.api.JUnitSoftAssertions",
     "org.assertj.core.api.AbstractMapAssert",
     "org.assertj.core.api.Fail",
     "org.assertj.core.util.introspection.FieldSupport",
     "org.assertj.core.internal.Conditions",
     "org.assertj.core.internal.cglib.asm.$Handler",
     "org.assertj.core.internal.cglib.beans.FixedKeySet",
     "org.assertj.core.internal.cglib.proxy.Enhancer",
     "org.assertj.core.internal.cglib.asm.$Label",
     "org.assertj.core.error.ShouldContainOnly",
     "org.assertj.core.util.diff.ChangeDelta",
     "org.assertj.core.error.ShouldHaveTime",
     "org.assertj.core.api.GenericComparableAssert",
     "org.assertj.core.api.IntegerAssert",
     "org.assertj.core.internal.cglib.transform.TransformingClassLoader",
     "org.assertj.core.api.FloatAssert",
     "org.assertj.core.internal.InputStreamsException",
     "org.assertj.core.internal.cglib.core.ObjectSwitchCallback",
     "org.assertj.core.internal.cglib.core.Transformer",
     "org.assertj.core.api.ClassBasedNavigableIterableAssert",
     "org.assertj.core.error.ShouldBeBeforeYear",
     "org.assertj.core.error.ShouldBeInSameMonth",
     "org.assertj.core.api.AbstractIntArrayAssert",
     "org.assertj.core.internal.cglib.util.ParallelSorter$Comparer",
     "org.assertj.core.internal.cglib.beans.BeanMap$Generator$BeanMapKey",
     "org.assertj.core.internal.cglib.core.ReflectUtils$1",
     "org.assertj.core.internal.cglib.core.Signature",
     "org.assertj.core.error.ShouldNotBeEqual",
     "org.assertj.core.internal.cglib.core.ReflectUtils$3",
     "org.assertj.core.error.ShouldBeOfClassIn",
     "org.assertj.core.internal.cglib.core.ReflectUtils$2",
     "org.assertj.core.internal.cglib.asm.$Edge",
     "org.assertj.core.internal.cglib.transform.MethodFilterTransformer",
     "org.assertj.core.util.introspection.FieldUtils",
     "org.assertj.core.api.AbstractObjectArrayAssert",
     "org.assertj.core.api.FactoryBasedNavigableIterableAssert",
     "org.assertj.core.internal.cglib.transform.ClassVisitorTee",
     "org.assertj.core.api.ObjectAssert",
     "org.assertj.core.internal.cglib.reflect.MethodDelegate$Generator",
     "org.assertj.core.error.ElementsShouldHaveExactly",
     "org.assertj.core.error.ShouldContainAtIndex",
     "org.assertj.core.internal.cglib.core.ReflectUtils$5",
     "org.assertj.core.internal.cglib.transform.AbstractTransformTask",
     "org.assertj.core.internal.cglib.core.ReflectUtils$4",
     "org.assertj.core.internal.cglib.core.ReflectUtils$6",
     "org.assertj.core.error.ShouldContainOnlyNulls$1",
     "org.assertj.core.internal.cglib.util.ParallelSorter$DoubleComparer",
     "org.assertj.core.api.HamcrestCondition",
     "org.assertj.core.api.AbstractFutureAssert",
     "org.assertj.core.error.future.ShouldBeCancelled",
     "org.assertj.core.api.AbstractIntegerAssert",
     "org.assertj.core.error.ShouldContainSubsequence",
     "org.assertj.core.internal.cglib.reflect.FastConstructor",
     "org.assertj.core.api.AbstractPathAssert",
     "org.assertj.core.error.DescriptionFormatter",
     "org.assertj.core.error.ShouldHaveName",
     "org.assertj.core.internal.Arrays",
     "org.assertj.core.internal.IterableElementComparisonStrategy",
     "org.assertj.core.description.Description",
     "org.assertj.core.api.exception.PathsException",
     "org.assertj.core.error.ShouldBeSorted",
     "org.assertj.core.internal.cglib.core.RejectModifierPredicate",
     "org.assertj.core.internal.cglib.beans.BeanCopier$Generator",
     "org.assertj.core.internal.cglib.transform.impl.AddInitTransformer$1",
     "org.assertj.core.api.ArraySortedAssert",
     "org.assertj.core.error.uri.ShouldHaveProtocol",
     "org.assertj.core.api.SoftProxies$CollectErrorsOrCreateExtractedProxy",
     "org.assertj.core.internal.cglib.proxy.MixinEmitter",
     "org.assertj.core.groups.Tuple",
     "org.assertj.core.error.ShouldHaveReference",
     "org.assertj.core.error.ShouldBeRegularFile",
     "org.assertj.core.util.NullSafeComparator",
     "org.assertj.core.error.ShouldContainSequenceOfCharSequence",
     "org.assertj.core.error.uri.ShouldHaveParameter",
     "org.assertj.core.api.ComparatorFactory$2",
     "org.assertj.core.api.ComparatorFactory$1",
     "org.assertj.core.internal.ExtendedByTypesComparator$1",
     "org.assertj.core.api.UriAssert",
     "org.assertj.core.error.ClassModifierShouldBe",
     "org.assertj.core.internal.cglib.transform.impl.InterceptFieldTransformer$1",
     "org.assertj.core.error.ShouldBeReadable",
     "org.assertj.core.error.ShouldHaveSameHashCode",
     "org.assertj.core.internal.IgnoringFieldsComparator",
     "org.assertj.core.util.diff.DeltaComparator",
     "org.assertj.core.error.ShouldHaveMethods",
     "org.assertj.core.internal.cglib.core.internal.LoadingCache$1",
     "org.assertj.core.internal.cglib.reflect.MethodDelegate",
     "org.assertj.core.internal.cglib.core.internal.LoadingCache$2",
     "org.assertj.core.internal.cglib.core.Constants",
     "org.assertj.core.api.Java6JUnitSoftAssertions$1",
     "org.assertj.core.groups.FieldsOrPropertiesExtractor",
     "org.assertj.core.internal.cglib.transform.ClassTransformerTee",
     "org.assertj.core.internal.cglib.transform.impl.AbstractInterceptFieldCallback",
     "org.assertj.core.internal.cglib.core.FieldTypeCustomizer",
     "org.assertj.core.error.ShouldNotHaveSameClass",
     "org.assertj.core.internal.cglib.beans.BulkBean$BulkBeanKey",
     "org.assertj.core.error.ShouldContainsOnlyOnce",
     "org.assertj.core.api.DateAssert",
     "org.assertj.core.error.ShouldHaveRootCauseExactlyInstance",
     "org.assertj.core.error.ShouldContainExactlyInAnyOrder$ErrorType",
     "org.assertj.core.error.ShouldContainCharSequence",
     "org.assertj.core.internal.Diff",
     "org.assertj.core.api.filter.Filters",
     "org.assertj.core.error.BasicErrorMessageFactory$1",
     "org.assertj.core.api.WritableAssertionInfo",
     "org.assertj.core.condition.AnyOf",
     "org.assertj.core.error.ShouldBeEqualNormalizingWhitespace",
     "org.assertj.core.error.ShouldHaveMessageMatchingRegex",
     "org.assertj.core.api.AbstractListAssert",
     "org.assertj.core.util.FailureMessages",
     "org.assertj.core.api.Java6JUnitBDDSoftAssertions$1",
     "org.assertj.core.error.uri.ShouldHaveQuery",
     "org.assertj.core.error.ShouldBeSame",
     "org.assertj.core.internal.cglib.beans.BeanGenerator$BeanGeneratorKey",
     "org.assertj.core.api.AtomicLongAssert",
     "org.assertj.core.internal.Strings",
     "org.assertj.core.api.ErrorCollector$LastResult",
     "org.assertj.core.error.ShouldHaveRootCauseInstance",
     "org.assertj.core.internal.cglib.asm.$MethodVisitor",
     "org.assertj.core.error.ShouldBeEqualByComparingFieldByFieldRecursively",
     "org.assertj.core.api.Java6JUnitSoftAssertions",
     "org.assertj.core.internal.Longs",
     "org.assertj.core.api.Assumptions$AssumptiomMethodInterceptor",
     "org.assertj.core.api.DoubleArrayAssert",
     "org.assertj.core.internal.cglib.util.ParallelSorterEmitter",
     "org.assertj.core.api.BDDAssertions",
     "org.assertj.core.api.AbstractEnumerableAssert",
     "org.assertj.core.api.AssertionInfo",
     "org.assertj.core.error.ShouldBeLessOrEqual",
     "org.assertj.core.api.AssertFactory",
     "org.assertj.core.internal.LongArrays",
     "org.assertj.core.api.ErrorCollector",
     "org.assertj.core.error.ShouldBeToday",
     "org.assertj.core.internal.cglib.proxy.Proxy$1",
     "org.assertj.core.internal.cglib.util.ParallelSorter",
     "org.assertj.core.internal.cglib.core.ReflectUtils",
     "org.assertj.core.api.Assertions",
     "org.assertj.core.internal.cglib.core.DebuggingClassWriter$1",
     "org.assertj.core.internal.cglib.transform.impl.FieldProvider",
     "org.assertj.core.error.ShouldHaveBinaryContent",
     "org.assertj.core.internal.cglib.transform.ClassFilterTransformer",
     "org.assertj.core.internal.cglib.proxy.Mixin",
     "org.assertj.core.internal.cglib.util.StringSwitcher$Generator$1",
     "org.assertj.core.util.TextFileWriter",
     "org.assertj.core.util.diff.Delta",
     "org.assertj.core.error.ShouldNotBeEqualIgnoringWhitespace",
     "org.assertj.core.error.ShouldBeInSameSecond",
     "org.assertj.core.error.ShouldHavePropertyOrField",
     "org.assertj.core.error.uri.ShouldHaveHost",
     "org.assertj.core.internal.cglib.proxy.MethodInterceptorGenerator$2",
     "org.assertj.core.internal.cglib.core.ClassEmitter$3",
     "org.assertj.core.internal.cglib.core.ClassEmitter$2",
     "org.assertj.core.internal.cglib.asm.$ClassReader",
     "org.assertj.core.error.ShouldBeEqualWithinPercentage",
     "org.assertj.core.api.AutoCloseableBDDSoftAssertions",
     "org.assertj.core.internal.StandardComparisonStrategy$1",
     "org.assertj.core.api.AbstractBooleanArrayAssert",
     "org.assertj.core.error.ShouldBeInSameHourWindow",
     "org.assertj.core.internal.cglib.asm.$TypePath",
     "org.assertj.core.internal.cglib.core.ClassEmitter$1",
     "org.assertj.core.internal.cglib.reflect.FastClassEmitter$1",
     "org.assertj.core.condition.Negative",
     "org.assertj.core.internal.cglib.reflect.FastClassEmitter$4",
     "org.assertj.core.internal.cglib.reflect.FastClassEmitter$2",
     "org.assertj.core.internal.cglib.reflect.FastClassEmitter$3",
     "org.assertj.core.internal.cglib.reflect.FastClassEmitter$GetIndexCallback",
     "org.assertj.core.internal.cglib.beans.BeanMap",
     "org.assertj.core.internal.cglib.transform.MethodFilter",
     "org.assertj.core.api.AbstractShortArrayAssert",
     "org.assertj.core.internal.DeepDifference$Difference",
     "org.assertj.core.internal.cglib.proxy.MethodInterceptorGenerator$1",
     "org.assertj.core.api.AbstractBigDecimalAssert",
     "org.assertj.core.api.SoftAssertionError",
     "org.assertj.core.error.ShouldBeAssignableFrom",
     "org.assertj.core.util.Objects",
     "org.assertj.core.util.Compatibility$System",
     "org.assertj.core.internal.Bytes",
     "org.assertj.core.internal.Objects$ByFieldsComparison",
     "org.assertj.core.internal.cglib.proxy.InvocationHandlerGenerator",
     "org.assertj.core.error.ShouldNotHave",
     "org.assertj.core.internal.cglib.beans.BulkBeanException",
     "org.assertj.core.internal.DeepDifference$1",
     "org.assertj.core.util.FloatComparator",
     "org.assertj.core.error.ShouldHaveCauseExactlyInstance",
     "org.assertj.core.api.AtomicIntegerAssert",
     "org.assertj.core.util.diff.DiffAlgorithm",
     "org.assertj.core.api.AbstractArrayAssert",
     "org.assertj.core.api.ThrowableAssert",
     "org.assertj.core.error.ShouldContain",
     "org.assertj.core.internal.cglib.reflect.MulticastDelegate",
     "org.assertj.core.internal.cglib.util.ParallelSorter$FloatComparer",
     "org.assertj.core.util.diff.myers.MyersDiff",
     "org.assertj.core.api.InputStreamAssert",
     "org.assertj.core.util.Lists",
     "org.assertj.core.error.ShouldBeEqual",
     "org.assertj.core.api.ListAssert",
     "org.assertj.core.internal.cglib.proxy.CallbackGenerator",
     "org.assertj.core.internal.cglib.transform.impl.InterceptFieldTransformer",
     "org.assertj.core.internal.cglib.asm.$Type",
     "org.assertj.core.error.ShouldBeExecutable",
     "org.assertj.core.util.diff.myers.DiffNode",
     "org.assertj.core.api.ComparableAssert",
     "org.assertj.core.internal.cglib.asm.$AnnotationWriter",
     "org.assertj.core.api.AbstractCharSequenceAssert",
     "org.assertj.core.error.uri.ShouldHaveUserInfo",
     "org.assertj.core.internal.NioFilesWrapper",
     "org.assertj.core.api.CharSequenceAssert",
     "org.assertj.core.error.ShouldBeEqualIgnoringNewLines",
     "org.assertj.core.internal.cglib.asm.$Frame",
     "org.assertj.core.error.ShouldBeRelativePath",
     "org.assertj.core.api.AbstractDateAssert",
     "org.assertj.core.util.diff.DiffUtils",
     "org.assertj.core.api.AtomicReferenceAssert",
     "org.assertj.core.internal.cglib.core.MethodInfo",
     "org.assertj.core.api.AtomicIntegerArrayAssert",
     "org.assertj.core.util.Strings$StringsToJoin",
     "org.assertj.core.api.SoftAssertionListAssert",
     "org.assertj.core.api.AbstractFileAssert",
     "org.assertj.core.extractor.ResultOfExtractor",
     "org.assertj.core.error.ShouldNotBeEqualWithinPercentage",
     "org.assertj.core.internal.cglib.core.GeneratorStrategy",
     "org.assertj.core.api.Condition",
     "org.assertj.core.api.IndexedObjectEnumerableAssert",
     "org.assertj.core.internal.cglib.transform.AnnotationVisitorTee",
     "org.assertj.core.internal.Iterables",
     "org.assertj.core.internal.cglib.beans.BeanGenerator",
     "org.assertj.core.internal.cglib.proxy.MethodInterceptorGenerator",
     "org.assertj.core.internal.cglib.transform.impl.UndeclaredThrowableStrategy",
     "org.assertj.core.util.diff.Patch",
     "org.assertj.core.error.ShouldBeNullOrEmpty",
     "org.assertj.core.util.Throwables",
     "org.assertj.core.api.IterableSizeAssert",
     "org.assertj.core.error.ShouldNotBeEmpty",
     "org.assertj.core.internal.DeepDifference$DualKey",
     "org.assertj.core.api.MapAssert",
     "org.assertj.core.error.ShouldNotBeIn",
     "org.assertj.core.internal.cglib.transform.impl.InterceptFieldFilter",
     "org.assertj.core.condition.Join",
     "org.assertj.core.error.ShouldNotContainSequence",
     "org.assertj.core.internal.cglib.transform.ClassFilter",
     "org.assertj.core.internal.cglib.core.HashCodeCustomizer",
     "org.assertj.core.error.ShouldContainNull",
     "org.assertj.core.internal.cglib.core.KeyFactory",
     "org.assertj.core.internal.cglib.core.AbstractClassGenerator$ClassLoaderData$1",
     "org.assertj.core.internal.cglib.core.AbstractClassGenerator$ClassLoaderData$3",
     "org.assertj.core.util.Files",
     "org.assertj.core.internal.cglib.core.AbstractClassGenerator$ClassLoaderData$2",
     "org.assertj.core.api.IterableAssert$LazyIterable",
     "org.assertj.core.api.CharacterAssert",
     "org.assertj.core.presentation.Representation",
     "org.assertj.core.internal.cglib.core.MethodWrapper",
     "org.assertj.core.internal.Paths",
     "org.assertj.core.api.ShortAssert",
     "org.assertj.core.error.ShouldContainKeys",
     "org.assertj.core.error.ShouldOnlyHaveElementsOfTypes",
     "org.assertj.core.error.ShouldBeSubsetOf",
     "org.assertj.core.api.FloatingPointNumberAssert",
     "org.assertj.core.error.ShouldBeExactlyInstanceOf",
     "org.assertj.core.internal.cglib.transform.impl.FieldProviderTransformer",
     "org.assertj.core.internal.cglib.transform.FieldVisitorTee",
     "org.assertj.core.internal.cglib.core.KeyFactoryCustomizer",
     "org.assertj.core.api.AbstractCharArrayAssert",
     "org.assertj.core.error.ShouldMatchPattern",
     "org.assertj.core.internal.cglib.core.CodeEmitter$State",
     "org.assertj.core.internal.cglib.asm.$MethodWriter",
     "org.assertj.core.matcher.AssertionMatcher",
     "org.assertj.core.error.ShouldBeBeforeOrEqualsTo",
     "org.assertj.core.api.ByteAssert",
     "org.assertj.core.error.uri.ShouldHaveScheme",
     "org.assertj.core.internal.cglib.proxy.NoOp",
     "org.assertj.core.internal.cglib.core.CodeGenerationException",
     "org.assertj.core.internal.cglib.transform.ClassTransformerChain",
     "org.assertj.core.api.BigIntegerAssert",
     "org.assertj.core.internal.cglib.transform.TransformingClassGenerator",
     "org.assertj.core.api.AbstractIterableSizeAssert",
     "org.assertj.core.error.ShouldNotBeEqualNormalizingWhitespace",
     "org.assertj.core.error.ShouldBeWritable",
     "org.assertj.core.internal.cglib.proxy.MethodProxy",
     "org.assertj.core.internal.cglib.proxy.MixinEverythingEmitter",
     "org.assertj.core.internal.cglib.core.ClassNameReader$EarlyExitException",
     "org.assertj.core.util.diff.myers.PathNode",
     "org.assertj.core.internal.cglib.core.LocalVariablesSorter$1",
     "org.assertj.core.description.TextDescription",
     "org.assertj.core.error.BasicErrorMessageFactory",
     "org.assertj.core.api.AbstractThrowableAssert",
     "org.assertj.core.internal.DeepDifference",
     "org.assertj.core.internal.Floats",
     "org.assertj.core.internal.BinaryDiffResult",
     "org.assertj.core.api.JUnitSoftAssertions$1",
     "org.assertj.core.error.ShouldBeAfter",
     "org.assertj.core.error.ElementsShouldBeAtLeast",
     "org.assertj.core.error.ShouldBeInSameMinuteWindow",
     "org.assertj.core.internal.cglib.proxy.Mixin$Generator",
     "org.assertj.core.error.ShouldNotBeExactlyInstanceOf",
     "org.assertj.core.internal.cglib.beans.ImmutableBean",
     "org.assertj.core.error.ElementsShouldNotHave",
     "org.assertj.core.internal.Classes",
     "org.assertj.core.internal.cglib.core.EmitUtils$ArrayDelimiters",
     "org.assertj.core.internal.cglib.asm.$CurrentFrame",
     "org.assertj.core.api.Assert",
     "org.assertj.core.internal.cglib.beans.BeanMap$Generator",
     "org.assertj.core.error.ShouldHaveParent",
     "org.assertj.core.error.ShouldNotExist",
     "org.assertj.core.api.ComparatorFactory",
     "org.assertj.core.internal.Shorts",
     "org.assertj.core.util.introspection.PropertySupport",
     "org.assertj.core.internal.cglib.util.ParallelSorter$ShortComparer",
     "org.assertj.core.util.diff.Chunk",
     "org.assertj.core.api.ProxifyExtractingResult",
     "org.assertj.core.error.ShouldHave",
     "org.assertj.core.util.URLs",
     "org.assertj.core.error.ShouldNotBeBetween",
     "org.assertj.core.internal.cglib.reflect.FastClass$Generator",
     "org.assertj.core.internal.cglib.reflect.FastClassEmitter",
     "org.assertj.core.internal.cglib.core.Customizer",
     "org.assertj.core.internal.cglib.core.Predicate",
     "org.assertj.core.api.MapSizeAssert",
     "org.assertj.core.api.AtomicBooleanAssert",
     "org.assertj.core.configuration.Services",
     "org.assertj.core.api.AbstractBooleanAssert",
     "org.assertj.core.internal.ComparisonStrategy",
     "org.assertj.core.api.ErrorCollector$1",
     "org.assertj.core.internal.AtomicReferenceArrayElementComparisonStrategy",
     "org.assertj.core.error.ShouldNotHaveAnyElementsOfTypes",
     "org.assertj.core.internal.cglib.transform.impl.AddStaticInitTransformer",
     "org.assertj.core.error.ShouldContainKey",
     "org.assertj.core.data.Offset",
     "org.assertj.core.internal.cglib.asm.$Handle",
     "org.assertj.core.error.uri.ShouldHaveAuthority",
     "org.assertj.core.internal.cglib.core.WeakCacheKey",
     "org.assertj.core.extractor.ByNameMultipleExtractor",
     "org.assertj.core.internal.cglib.proxy.Proxy",
     "org.assertj.core.api.SoftAssertionMapAssert",
     "org.assertj.core.util.diff.myers.Equalizer",
     "org.assertj.core.internal.cglib.proxy.UndeclaredThrowableException",
     "org.assertj.core.error.ShouldBeInSameHour",
     "org.assertj.core.internal.cglib.util.ParallelSorter$Generator",
     "org.assertj.core.error.ShouldBeIn",
     "org.assertj.core.internal.cglib.reflect.ConstructorDelegate$Generator",
     "org.assertj.core.internal.OnFieldsComparator",
     "org.assertj.core.internal.cglib.transform.MethodVisitorTee",
     "org.assertj.core.error.ElementsShouldHave",
     "org.assertj.core.internal.cglib.util.SorterTemplate",
     "org.assertj.core.error.ShouldContainPattern",
     "org.assertj.core.api.AtomicReferenceFieldUpdaterAssert",
     "org.assertj.core.error.ShouldHaveNoCause",
     "org.assertj.core.presentation.UnicodeRepresentation",
     "org.assertj.core.api.Java6Assertions",
     "org.assertj.core.error.ShouldBeAfterYear",
     "org.assertj.core.internal.cglib.beans.BeanMapEmitter",
     "org.assertj.core.error.ShouldHaveNoParent",
     "org.assertj.core.error.ShouldBeInstance",
     "org.assertj.core.api.AbstractDoubleAssert",
     "org.assertj.core.internal.cglib.proxy.Enhancer$EnhancerKey",
     "org.assertj.core.error.future.ShouldNotBeCancelled",
     "org.assertj.core.api.JUnitBDDSoftAssertions",
     "org.assertj.core.internal.Dates$1",
     "org.assertj.core.internal.BooleanArrays",
     "org.assertj.core.util.Strings",
     "org.assertj.core.condition.AllOf",
     "org.assertj.core.error.ShouldNotBeNull",
     "org.assertj.core.api.SoftProxies",
     "org.assertj.core.error.ConditionAndGroupGenericParameterTypeShouldBeTheSame",
     "org.assertj.core.error.ShouldOnlyHaveFields$ErrorType",
     "org.assertj.core.internal.cglib.proxy.BridgeMethodResolver",
     "org.assertj.core.api.ClassBasedNavigableListAssert",
     "org.assertj.core.api.AtomicMarkableReferenceAssert",
     "org.assertj.core.api.FloatArrayAssert",
     "org.assertj.core.internal.Dates",
     "org.assertj.core.internal.cglib.beans.BeanCopier$BeanCopierKey",
     "org.assertj.core.error.ShouldNotStartWith",
     "org.assertj.core.api.PathAssert",
     "org.assertj.core.error.ShouldBeFile",
     "org.assertj.core.internal.cglib.transform.impl.UndeclaredThrowableStrategy$1",
     "org.assertj.core.description.EmptyTextDescription",
     "org.assertj.core.error.ShouldNotContainOnlyWhitespaces",
     "org.assertj.core.groups.Properties",
     "org.assertj.core.error.ShouldBeCanonicalPath",
     "org.assertj.core.internal.cglib.core.EmitUtils",
     "org.assertj.core.internal.cglib.core.VisibilityPredicate",
     "org.assertj.core.internal.Objects",
     "org.assertj.core.api.AbstractBigIntegerAssert",
     "org.assertj.core.error.uri.ShouldHaveFragment",
     "org.assertj.core.util.IterableUtil",
     "org.assertj.core.internal.cglib.reflect.FastClass",
     "org.assertj.core.error.ShouldBeSubstring",
     "org.assertj.core.error.uri.ShouldHaveAnchor",
     "org.assertj.core.error.ShouldNotEndWith",
     "org.assertj.core.internal.ByteArrays",
     "org.assertj.core.error.ConstructorInvoker$1",
     "org.assertj.core.error.ShouldContainOnlyNulls$ErrorType",
     "org.assertj.core.internal.cglib.proxy.InvocationHandler",
     "org.assertj.core.error.ShouldContainExactly",
     "org.assertj.core.error.ShouldBeAnArray",
     "org.assertj.core.util.Compatibility",
     "org.assertj.core.internal.Urls",
     "org.assertj.core.error.ShouldBeAtIndex",
     "org.assertj.core.internal.cglib.proxy.FixedValueGenerator",
     "org.assertj.core.api.Java6AbstractStandardSoftAssertions",
     "org.assertj.core.data.MapEntry",
     "org.assertj.core.api.Assumptions",
     "org.assertj.core.error.ShouldContainOnlyNulls",
     "org.assertj.core.error.ShouldBe",
     "org.assertj.core.internal.DoubleArrays",
     "org.assertj.core.internal.cglib.core.ClassGenerator",
     "org.assertj.core.internal.cglib.proxy.ProxyRefDispatcher",
     "org.assertj.core.internal.cglib.core.ClassEmitter",
     "org.assertj.core.error.ShouldBeBlank",
     "org.assertj.core.internal.ShortArrays",
     "org.assertj.core.internal.cglib.asm.$Opcodes",
     "org.assertj.core.internal.cglib.proxy.MixinBeanEmitter",
     "org.assertj.core.internal.cglib.beans.ImmutableBean$Generator",
     "org.assertj.core.util.introspection.IntrospectionError",
     "org.assertj.core.internal.BigDecimals",
     "org.assertj.core.internal.cglib.reflect.MulticastDelegate$Generator",
     "org.assertj.core.api.ObjectArrayAssert",
     "org.assertj.core.util.diff.Delta$TYPE",
     "org.assertj.core.error.uri.ShouldHavePort",
     "org.assertj.core.api.ObjectAssertFactory",
     "org.assertj.core.internal.StandardComparisonStrategy",
     "org.assertj.core.error.ShouldHaveAtLeastOneElementOfType",
     "org.assertj.core.util.VisibleForTesting",
     "org.assertj.core.internal.cglib.transform.AbstractClassFilterTransformer",
     "org.assertj.core.error.ConstructorInvoker",
     "org.assertj.core.internal.cglib.proxy.CallbackInfo",
     "org.assertj.core.error.ShouldNotHaveDuplicates",
     "org.assertj.core.internal.cglib.proxy.MethodProxy$CreateInfo",
     "org.assertj.core.internal.cglib.core.KeyFactory$1",
     "org.assertj.core.internal.cglib.core.KeyFactory$2",
     "org.assertj.core.internal.cglib.core.KeyFactory$3",
     "org.assertj.core.internal.cglib.core.KeyFactory$4",
     "org.assertj.core.internal.cglib.proxy.Callback",
     "org.assertj.core.error.ShouldBeMarked",
     "org.assertj.core.error.ShouldContainOnlyWhitespaces",
     "org.assertj.core.api.Assumptions$1",
     "org.assertj.core.error.AssertionErrorFactory",
     "org.assertj.core.error.ShouldHaveStamp",
     "org.assertj.core.internal.cglib.core.DefaultNamingPolicy",
     "org.assertj.core.internal.Doubles",
     "org.assertj.core.error.ShouldHaveOnlyElementsOfType",
     "org.assertj.core.error.ShouldHaveSuppressedException",
     "org.assertj.core.error.ShouldBeAfterOrEqualsTo",
     "org.assertj.core.internal.cglib.core.EmitUtils$1",
     "org.assertj.core.api.AbstractIterableAssert",
     "org.assertj.core.error.AbstractShouldHaveTextContent",
     "org.assertj.core.api.AbstractStandardSoftAssertions",
     "org.assertj.core.error.ShouldNotContainSubsequence",
     "org.assertj.core.internal.cglib.core.ClassesKey$Key",
     "org.assertj.core.api.JUnitBDDSoftAssertions$1",
     "org.assertj.core.api.Java6BDDSoftAssertions",
     "org.assertj.core.util.BigIntegerComparator",
     "org.assertj.core.api.SoftAssertionIterableAssert",
     "org.assertj.core.internal.cglib.core.internal.LoadingCache",
     "org.assertj.core.internal.cglib.asm.$ClassWriter",
     "org.assertj.core.internal.cglib.beans.BulkBeanEmitter",
     "org.assertj.core.internal.cglib.core.ClassEmitter$FieldInfo",
     "org.assertj.core.internal.cglib.core.DebuggingClassWriter",
     "org.assertj.core.error.ShouldNotMatchPattern",
     "org.assertj.core.internal.ObjectArrayElementComparisonStrategy",
     "org.assertj.core.internal.cglib.core.CodeEmitter",
     "org.assertj.core.util.Maps",
     "org.assertj.core.api.filter.NotInFilter",
     "org.assertj.core.internal.RealNumbers",
     "org.assertj.core.presentation.NumberGrouping",
     "org.assertj.core.internal.cglib.proxy.NoOpGenerator",
     "org.assertj.core.util.CheckReturnValue",
     "org.assertj.core.internal.cglib.transform.ClassTransformerFactory",
     "org.assertj.core.error.ShouldBeInSameMinute",
     "org.assertj.core.internal.cglib.core.internal.Function",
     "org.assertj.core.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder$1",
     "org.assertj.core.internal.cglib.core.EmitUtils$7",
     "org.assertj.core.api.BDDSoftAssertions",
     "org.assertj.core.internal.cglib.core.EmitUtils$6",
     "org.assertj.core.internal.cglib.core.Converter",
     "org.assertj.core.internal.cglib.core.EmitUtils$9",
     "org.assertj.core.internal.cglib.core.EmitUtils$8",
     "org.assertj.core.extractor.ByNameSingleExtractor",
     "org.assertj.core.internal.ExtendedByTypesComparator",
     "org.assertj.core.internal.cglib.core.EmitUtils$3",
     "org.assertj.core.internal.cglib.core.EmitUtils$2",
     "org.assertj.core.internal.cglib.core.EmitUtils$5",
     "org.assertj.core.internal.cglib.core.EmitUtils$4",
     "org.assertj.core.util.Preconditions",
     "org.assertj.core.internal.CommonErrors",
     "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
     "org.assertj.core.internal.Futures",
     "org.assertj.core.internal.cglib.util.StringSwitcher$Generator",
     "org.assertj.core.api.SoftAssertions",
     "org.assertj.core.internal.cglib.proxy.Factory",
     "org.assertj.core.api.SoftAssertions$1",
     "org.assertj.core.condition.DoesNotHave",
     "org.assertj.core.api.ExtensionPoints",
     "org.assertj.core.internal.cglib.core.KeyFactory$Generator",
     "org.assertj.core.api.Java6BDDAssertions",
     "org.assertj.core.internal.cglib.transform.AbstractProcessTask",
     "org.assertj.core.internal.cglib.transform.ClassTransformer",
     "org.assertj.core.api.IterableAssert",
     "org.assertj.core.util.DateUtil",
     "org.assertj.core.internal.IterableDiff",
     "org.assertj.core.internal.cglib.proxy.MethodInterceptor",
     "org.assertj.core.internal.cglib.util.StringSwitcher",
     "org.assertj.core.internal.cglib.transform.impl.AddDelegateTransformer",
     "org.assertj.core.api.UrlAssert",
     "org.assertj.core.util.Arrays",
     "org.assertj.core.util.diff.myers.Snake",
     "org.assertj.core.error.ShouldStartWith",
     "org.assertj.core.error.ShouldHaveAtIndex",
     "org.assertj.core.internal.cglib.proxy.Mixin$Route",
     "org.assertj.core.api.NumberAssert",
     "org.assertj.core.util.introspection.MemberUtils",
     "org.assertj.core.error.ShouldBeGreaterOrEqual",
     "org.assertj.core.error.ShouldNotContainKey",
     "org.assertj.core.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder",
     "org.assertj.core.error.ShouldHaveCause",
     "org.assertj.core.internal.cglib.transform.impl.AddDelegateTransformer$1",
     "org.assertj.core.error.ShouldHaveSameContent",
     "org.assertj.core.error.ShouldContainAnyOf",
     "org.assertj.core.internal.cglib.reflect.MulticastDelegate$Generator$1",
     "org.assertj.core.error.ShouldBeInterface",
     "org.assertj.core.internal.cglib.transform.impl.FieldProviderTransformer$2",
     "org.assertj.core.internal.cglib.transform.impl.FieldProviderTransformer$1",
     "org.assertj.core.api.AbstractAssert",
     "org.assertj.core.internal.cglib.transform.impl.FieldProviderTransformer$4",
     "org.assertj.core.internal.cglib.transform.impl.FieldProviderTransformer$3",
     "org.assertj.core.error.ShouldContainValues",
     "org.assertj.core.error.ShouldHaveMessage",
     "org.assertj.core.extractor.Extractors",
     "org.assertj.core.internal.cglib.reflect.ConstructorDelegate",
     "org.assertj.core.api.AbstractComparableAssert",
     "org.assertj.core.error.ShouldBeInstanceOfAny",
     "org.assertj.core.util.introspection.ClassUtils",
     "org.assertj.core.api.AbstractLongArrayAssert",
     "org.assertj.core.api.AutoCloseableSoftAssertions",
     "org.assertj.core.internal.AbstractComparisonStrategy",
     "org.assertj.core.error.ShouldContainEntry",
     "org.assertj.core.error.ShouldBeEqualToIgnoringFields",
     "org.assertj.core.error.ShouldContainExactlyInAnyOrder",
     "org.assertj.core.api.AbstractAtomicReferenceAssert",
     "org.assertj.core.internal.cglib.core.ClassesKey",
     "org.assertj.core.api.FutureAssert",
     "org.assertj.core.error.ShouldHaveSize",
     "org.assertj.core.internal.cglib.transform.impl.InterceptFieldCallback",
     "org.assertj.core.data.Index",
     "org.assertj.core.error.ShouldContainOnly$ErrorType",
     "org.assertj.core.internal.cglib.proxy.Enhancer$4",
     "org.assertj.core.error.ShouldOnlyHaveFields",
     "org.assertj.core.internal.cglib.proxy.Enhancer$3",
     "org.assertj.core.internal.cglib.proxy.Enhancer$2",
     "org.assertj.core.internal.cglib.proxy.Enhancer$1",
     "org.assertj.core.internal.cglib.proxy.DispatcherGenerator",
     "org.assertj.core.internal.cglib.proxy.Enhancer$6",
     "org.assertj.core.internal.cglib.proxy.Enhancer$5",
     "org.assertj.core.internal.Comparables",
     "org.assertj.core.util.Closeables",
     "org.assertj.core.internal.cglib.transform.impl.AddInitTransformer",
     "org.assertj.core.internal.Uris",
     "org.assertj.core.error.ElementsShouldBe",
     "org.assertj.core.api.Java6SoftAssertions",
     "org.assertj.core.internal.FieldByFieldComparator",
     "org.assertj.core.error.ShouldBeLowerCase",
     "org.assertj.core.api.AtomicIntegerFieldUpdaterAssert",
     "org.assertj.core.error.ShouldBeCloseTo",
     "org.assertj.core.extractor.ToStringExtractor",
     "org.assertj.core.internal.cglib.transform.impl.UndeclaredThrowableTransformer",
     "org.assertj.core.error.ShouldBeEqualWithTimePrecision",
     "org.assertj.core.api.iterable.Extractor",
     "org.assertj.core.internal.cglib.proxy.CallbackGenerator$Context",
     "org.assertj.core.api.LongAssert",
     "org.assertj.core.internal.cglib.proxy.Mixin$MixinKey",
     "org.assertj.core.error.ShouldHaveToString",
     "org.assertj.core.internal.cglib.transform.impl.AccessFieldTransformer",
     "org.assertj.core.error.ElementsShouldBeExactly",
     "org.assertj.core.api.AbstractObjectAssert",
     "org.assertj.core.internal.cglib.core.LocalVariablesSorter$State",
     "org.assertj.core.internal.CharArrays",
     "org.assertj.core.internal.cglib.util.ParallelSorter$ComparatorComparer",
     "org.assertj.core.internal.Characters",
     "org.assertj.core.error.ShouldNotBeInstance",
     "org.assertj.core.internal.cglib.proxy.NoOp$1",
     "org.assertj.core.api.AbstractSoftAssertions",
     "org.assertj.core.error.ShouldBeBefore",
     "org.assertj.core.error.ShouldHaveFields",
     "org.assertj.core.internal.cglib.core.TypeUtils",
     "org.assertj.core.api.AbstractInputStreamAssert",
     "org.assertj.core.error.ShouldBeAnnotation",
     "org.assertj.core.error.ShouldNotContainPattern",
     "org.assertj.core.error.ShouldEndWith",
     "org.assertj.core.internal.cglib.util.StringSwitcher$StringSwitcherKey",
     "org.assertj.core.error.ElementsShouldBeAtMost",
     "org.assertj.core.internal.cglib.asm.$Item",
     "org.assertj.core.internal.cglib.core.MethodWrapper$MethodWrapperKey",
     "org.assertj.core.internal.cglib.transform.ClassEmitterTransformer",
     "org.assertj.core.internal.InputStreams",
     "org.assertj.core.error.ConstructorInvoker$SetAccessibleValueAction",
     "org.assertj.core.error.future.ShouldNotBeDone",
     "org.assertj.core.error.ShouldBeBetween",
     "org.assertj.core.api.StringAssert",
     "org.assertj.core.error.ShouldEndWithPath",
     "org.assertj.core.error.ShouldHaveCauseInstance",
     "org.assertj.core.api.AbstractByteAssert",
     "org.assertj.core.util.Strings$StringToAppend",
     "org.assertj.core.internal.cglib.core.internal.CustomizerRegistry",
     "org.assertj.core.api.exception.RuntimeIOException",
     "org.assertj.core.api.BigDecimalAssert",
     "org.assertj.core.internal.cglib.transform.impl.UndeclaredThrowableTransformer$1",
     "org.assertj.core.api.ShortArrayAssert",
     "org.assertj.core.internal.cglib.reflect.FastMember",
     "org.assertj.core.error.ShouldBeEqualIgnoringCase",
     "org.assertj.core.internal.BinaryDiff",
     "org.assertj.core.internal.TypeComparators",
     "org.assertj.core.error.ElementsShouldHaveAtMost",
     "org.assertj.core.internal.cglib.proxy.CallbackFilter",
     "org.assertj.core.internal.cglib.transform.impl.InterceptFieldEnabled",
     "org.assertj.core.util.AbstractComparableNumberComparator",
     "org.assertj.core.util.ArrayWrapperList",
     "org.assertj.core.internal.cglib.proxy.FixedValue",
     "org.assertj.core.error.ShouldHaveNoNullFields",
     "org.assertj.core.internal.cglib.asm.$Attribute",
     "org.assertj.core.internal.cglib.proxy.MethodProxy$1",
     "org.assertj.core.internal.cglib.asm.$ClassVisitor",
     "org.assertj.core.internal.cglib.core.ClassNameReader",
     "org.assertj.core.api.AbstractClassAssert",
     "org.assertj.core.api.AbstractUriAssert",
     "org.assertj.core.api.filter.NotFilter",
     "org.assertj.core.error.ShouldNotBeEqualWithinOffset",
     "org.assertj.core.api.AbstractAtomicFieldUpdaterAssert",
     "org.assertj.core.internal.cglib.core.DefaultGeneratorStrategy",
     "org.assertj.core.api.AbstractLongAssert",
     "org.assertj.core.api.AssertProvider",
     "org.assertj.core.error.ShouldBeSymbolicLink",
     "org.assertj.core.error.ShouldNotBe",
     "org.assertj.core.internal.cglib.proxy.MethodProxy$FastClassInfo",
     "org.assertj.core.util.xml.XmlStringPrettyFormatter",
     "org.assertj.core.error.ShouldHaveSameClass",
     "org.assertj.core.api.AbstractUrlAssert",
     "org.assertj.core.error.future.ShouldBeDone",
     "org.assertj.core.error.ShouldHaveNoFields",
     "org.assertj.core.internal.cglib.proxy.InterfaceMaker",
     "org.assertj.core.error.ShouldContainOnlyDigits",
     "org.assertj.core.api.AtomicStampedReferenceAssert",
     "org.assertj.core.error.ShouldBeInSameSecondWindow",
     "org.assertj.core.error.ShouldHaveNoSuppressedExceptions",
     "org.assertj.core.error.ShouldNotBeBlank",
     "org.assertj.core.internal.cglib.core.ProcessArrayCallback",
     "org.assertj.core.util.DoubleComparator",
     "org.assertj.core.internal.ErrorMessages",
     "org.assertj.core.util.introspection.MethodSupport",
     "org.assertj.core.internal.Numbers",
     "org.assertj.core.internal.cglib.beans.BulkBean$Generator",
     "org.assertj.core.api.Java6AbstractBDDSoftAssertions",
     "org.assertj.core.presentation.BinaryRepresentation",
     "org.assertj.core.internal.cglib.core.TinyBitSet",
     "org.assertj.core.util.Sets",
     "org.assertj.core.error.ShouldNotBeSame",
     "org.assertj.core.internal.cglib.core.Local",
     "org.assertj.core.api.AbstractFloatAssert",
     "org.assertj.core.internal.cglib.reflect.MethodDelegate$MethodDelegateKey",
     "org.assertj.core.internal.cglib.util.ParallelSorter$LongComparer",
     "org.assertj.core.internal.Booleans",
     "org.assertj.core.internal.cglib.core.CollectionUtils",
     "org.assertj.core.error.ShouldHaveSameTime",
     "org.assertj.core.internal.Integers",
     "org.assertj.core.error.ShouldBeUpperCase",
     "org.assertj.core.internal.ComparatorBasedComparisonStrategy",
     "org.assertj.core.api.filter.InFilter",
     "org.assertj.core.error.ShouldNotContainAtIndex",
     "org.assertj.core.api.AbstractCharacterAssert",
     "org.assertj.core.api.CharArrayAssert",
     "org.assertj.core.internal.cglib.beans.BulkBean",
     "org.assertj.core.internal.cglib.transform.AbstractClassTransformer",
     "org.assertj.core.internal.cglib.transform.AbstractClassLoader",
     "org.assertj.core.error.ShouldContainOnlyKeys",
     "org.assertj.core.internal.cglib.core.ClassNameReader$1",
     "org.assertj.core.error.ShouldNotBeOfClassIn",
     "org.assertj.core.data.Percentage",
     "org.assertj.core.error.ShouldBeEqualByComparingOnlyGivenFields",
     "org.assertj.core.error.ShouldHaveExtension",
     "org.assertj.core.internal.cglib.core.AbstractClassGenerator",
     "org.assertj.core.internal.cglib.reflect.ConstructorDelegate$ConstructorKey",
     "org.assertj.core.internal.cglib.core.NamingPolicy",
     "org.assertj.core.error.ShouldBeDirectory",
     "org.assertj.core.util.introspection.Introspection",
     "org.assertj.core.error.ShouldBeInThePast",
     "org.assertj.core.api.Java6JUnitBDDSoftAssertions",
     "org.assertj.core.api.BooleanAssert",
     "org.assertj.core.api.ClassAssert",
     "org.assertj.core.internal.cglib.util.ParallelSorter$ObjectComparer",
     "org.assertj.core.error.ShouldContainSubsequenceOfCharSequence",
     "org.assertj.core.internal.BigIntegers",
     "org.assertj.core.internal.cglib.transform.impl.AccessFieldTransformer$Callback",
     "org.assertj.core.internal.FloatArrays",
     "org.assertj.core.internal.cglib.core.MethodInfoTransformer",
     "org.assertj.core.internal.cglib.asm.$FieldWriter",
     "org.assertj.core.api.AbstractBDDSoftAssertions",
     "org.assertj.core.error.ShouldHavePropertyOrFieldWithValue",
     "org.assertj.core.internal.IntArrays",
     "org.assertj.core.internal.cglib.proxy.CallbackHelper",
     "org.assertj.core.error.ShouldContainSequence",
     "org.assertj.core.api.AbstractFloatArrayAssert",
     "org.assertj.core.internal.CommonValidations",
     "org.assertj.core.error.ShouldBeAbsolutePath",
     "org.assertj.core.internal.cglib.proxy.LazyLoaderGenerator",
     "org.assertj.core.api.FactoryBasedNavigableListAssert",
     "org.assertj.core.error.ShouldHaveValue",
     "org.assertj.core.internal.cglib.proxy.LazyLoader",
     "org.assertj.core.api.AbstractByteArrayAssert",
     "org.assertj.core.api.AssertDelegateTarget",
     "org.assertj.core.internal.cglib.asm.$Context",
     "org.assertj.core.util.Hexadecimals",
     "org.assertj.core.internal.cglib.beans.BeanCopier",
     "org.assertj.core.error.ShouldNotBeEqualIgnoringCase",
     "org.assertj.core.error.ShouldNotBeInstanceOfAny",
     "org.assertj.core.internal.Lists",
     "org.assertj.core.error.ShouldBeInTheFuture",
     "org.assertj.core.api.ObjectEnumerableAssert",
     "org.assertj.core.error.ShouldNotContainNull",
     "org.assertj.core.internal.cglib.transform.ClassReaderGenerator",
     "org.assertj.core.internal.cglib.core.AbstractClassGenerator$Source",
     "org.assertj.core.api.AbstractDoubleArrayAssert",
     "org.assertj.core.error.ShouldBeInSameDay",
     "org.assertj.core.internal.cglib.transform.AbstractClassLoader$1",
     "org.assertj.core.internal.cglib.proxy.Enhancer$EnhancerFactoryData",
     "org.assertj.core.api.AtomicLongArrayAssert",
     "org.assertj.core.api.AbstractDateAssert$1",
     "org.assertj.core.error.ShouldExist",
     "org.assertj.core.error.BasicErrorMessageFactory$UnquotedString",
     "org.assertj.core.error.ShouldContainCharSequenceOnlyOnce",
     "org.assertj.core.internal.cglib.core.ClassInfo",
     "org.assertj.core.api.IntArrayAssert",
     "org.assertj.core.api.AtomicLongFieldUpdaterAssert",
     "org.assertj.core.presentation.StandardRepresentation",
     "org.assertj.core.api.Descriptable",
     "org.assertj.core.internal.cglib.core.EmitUtils$14",
     "org.assertj.core.api.LongArrayAssert",
     "org.assertj.core.api.SoftAssertionClassAssert",
     "org.assertj.core.internal.cglib.core.EmitUtils$13",
     "org.assertj.core.internal.cglib.core.EmitUtils$16",
     "org.assertj.core.internal.cglib.core.EmitUtils$15",
     "org.assertj.core.internal.ObjectArrays",
     "org.assertj.core.internal.cglib.asm.$FieldVisitor",
     "org.assertj.core.internal.cglib.core.EmitUtils$10",
     "org.assertj.core.internal.cglib.core.LocalVariablesSorter",
     "org.assertj.core.internal.cglib.core.EmitUtils$12",
     "org.assertj.core.internal.cglib.core.EmitUtils$11",
     "org.assertj.core.util.diff.DeleteDelta",
     "org.assertj.core.internal.cglib.core.ProcessSwitchCallback",
     "org.assertj.core.error.ShouldBeEqualIgnoringWhitespace",
     "org.assertj.core.api.AbstractMapSizeAssert",
     "org.assertj.core.error.ShouldHaveAnnotations",
     "org.assertj.core.util.diff.InsertDelta",
     "org.assertj.core.internal.Throwables",
     "org.assertj.core.internal.cglib.asm.$AnnotationVisitor",
     "org.assertj.core.error.ShouldBeEqualWithinOffset",
     "org.assertj.core.presentation.HexadecimalRepresentation",
     "org.assertj.core.internal.Maps",
     "org.assertj.core.api.EnumerableAssert",
     "org.assertj.core.api.FileAssert",
     "org.assertj.core.util.diff.myers.MyersDiff$1",
     "org.assertj.core.api.AtomicReferenceArrayAssert",
     "org.assertj.core.error.ElementsShouldNotBe",
     "org.assertj.core.error.ShouldContainValue",
     "org.assertj.core.internal.cglib.beans.BeanMapEmitter$1",
     "org.assertj.core.internal.cglib.beans.BeanMapEmitter$2",
     "org.assertj.core.api.BooleanArrayAssert",
     "org.assertj.core.internal.cglib.beans.BeanMapEmitter$3",
     "org.assertj.core.error.ShouldNotContainValue",
     "org.assertj.core.error.ShouldNotContainKeys",
     "org.assertj.core.error.ShouldBeEqualIgnoringNewLineDifferences",
     "org.assertj.core.error.ShouldStartWithPath",
     "org.assertj.core.condition.Not"
    ],
    "usedTypes": [
     "org.assertj.core.api.IterableAssert",
     "org.assertj.core.api.AbstractListAssert",
     "org.assertj.core.api.AbstractComparableAssert",
     "org.assertj.core.api.AbstractObjectAssert",
     "org.assertj.core.api.ListAssert",
     "org.assertj.core.api.AbstractIntegerAssert",
     "org.assertj.core.api.Assertions",
     "org.assertj.core.api.AbstractCharSequenceAssert"
    ],
    "usageRatio": 0.009913258983890954,
    "children": []
   },
   {
    "id": "org.xmlunit:xmlunit-core:jar:2.6.2:test",
    "coordinates": "org.xmlunit:xmlunit-core:2.6.2",
    "groupId": "org.xmlunit",
    "artifactId": "xmlunit-core",
    "version": "2.6.2",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 167897,
    "type": "direct",
    "status": "used",
    "parent": "org.camunda.bpm.model:camunda-dmn-model:jar:7.12.0-alpha4",
    "allTypes": [
     "org.xmlunit.diff.DOMDifferenceEngine",
     "org.xmlunit.diff.XPathContext$DOMNodeInfo",
     "org.xmlunit.validation.ParsingValidator$Handler",
     "org.xmlunit.util.DocumentBuilderFactoryConfigurer$1",
     "org.xmlunit.validation.ValidationResult",
     "org.xmlunit.XMLUnitException",
     "org.xmlunit.util.DocumentBuilderFactoryConfigurer$Builder",
     "org.xmlunit.util.Convert$1",
     "org.xmlunit.diff.ComparisonListenerSupport",
     "org.xmlunit.diff.ComparisonControllers$StopComparisonController",
     "org.xmlunit.util.Linqy$3",
     "org.xmlunit.diff.Comparison$1",
     "org.xmlunit.util.Linqy$2",
     "org.xmlunit.validation.JAXPValidator",
     "org.xmlunit.builder.Input$1",
     "org.xmlunit.util.Linqy$4",
     "org.xmlunit.util.IsNullPredicate",
     "org.xmlunit.input.ElementContentWhitespaceStrippedSource",
     "org.xmlunit.diff.DefaultConditionalSelectorBuilder",
     "org.xmlunit.diff.MultiLevelByNameAndTextSelector",
     "org.xmlunit.diff.ElementSelectors$ConditionalSelectorBuilderThen",
     "org.xmlunit.diff.Comparison",
     "org.xmlunit.util.Linqy$1",
     "org.xmlunit.builder.Transform",
     "org.xmlunit.util.Linqy$OnceOnlyIterator",
     "org.xmlunit.diff.AbstractDifferenceEngine$ComparisonState$1",
     "org.xmlunit.diff.AbstractDifferenceEngine$ComparisonState$2",
     "org.xmlunit.diff.DOMDifferenceEngine$NormalAttributeComparer",
     "org.xmlunit.diff.ChildNodeXPathContextProvider",
     "org.xmlunit.diff.DifferenceEvaluators",
     "org.xmlunit.diff.Difference",
     "org.xmlunit.builder.Transform$1",
     "org.xmlunit.diff.DefaultNodeMatcher$1",
     "org.xmlunit.diff.ElementSelector",
     "org.xmlunit.util.IterableNodeList$1",
     "org.xmlunit.diff.RecursiveXPathBuilder",
     "org.xmlunit.diff.ComparisonType",
     "org.xmlunit.diff.DifferenceEvaluator",
     "org.xmlunit.util.TransformerFactoryConfigurer",
     "org.xmlunit.diff.ElementSelectors$CanBeComparedPredicate",
     "org.xmlunit.diff.ComparisonController",
     "org.xmlunit.input.WhitespaceStrippedSource",
     "org.xmlunit.xpath.JAXPXPathEngine",
     "org.xmlunit.builder.Input$StreamBuilder",
     "org.xmlunit.diff.XPathContext$Level",
     "org.xmlunit.util.Predicate",
     "org.xmlunit.input.WhitespaceNormalizedSource",
     "org.xmlunit.builder.Input$Transformation",
     "org.xmlunit.diff.XPathContext$NodeInfo",
     "org.xmlunit.xpath.XPathEngine",
     "org.xmlunit.diff.DOMDifferenceEngine$UnmatchedTestNodes",
     "org.xmlunit.diff.AbstractDifferenceEngine$DeferredComparison",
     "org.xmlunit.builder.AbstractTransformationBuilder",
     "org.xmlunit.input.NormalizedSource",
     "org.xmlunit.diff.DefaultNodeMatcher$Match",
     "org.xmlunit.diff.DifferenceEngine",
     "org.xmlunit.validation.Languages",
     "org.xmlunit.diff.ElementSelectors$1",
     "org.xmlunit.diff.XPathContext",
     "org.xmlunit.diff.XPathContext$1",
     "org.xmlunit.builder.Transform$TransformationBuilder",
     "org.xmlunit.diff.ElementSelectors$3",
     "org.xmlunit.diff.ElementSelectors$2",
     "org.xmlunit.diff.ElementSelectors$5",
     "org.xmlunit.validation.ParsingValidator$1",
     "org.xmlunit.diff.ElementSelectors$4",
     "org.xmlunit.diff.DefaultConditionalSelectorBuilder$1",
     "org.xmlunit.diff.ElementSelectors$7",
     "org.xmlunit.diff.ElementSelectors$6",
     "org.xmlunit.builder.Input$StreamBuilder$1",
     "org.xmlunit.diff.ElementSelectors$9",
     "org.xmlunit.diff.ElementSelectors$8",
     "org.xmlunit.builder.Input$StreamBuilder$2",
     "org.xmlunit.diff.NodeMatcher",
     "org.xmlunit.builder.Transform$Builder",
     "org.xmlunit.util.Linqy",
     "org.xmlunit.diff.ByNameAndTextRecSelector",
     "org.xmlunit.transform.Transformation",
     "org.xmlunit.util.IterableNodeList",
     "org.xmlunit.validation.ValidationHandler",
     "org.xmlunit.diff.Diff",
     "org.xmlunit.diff.ComparisonListener",
     "org.xmlunit.builder.TransformationBuilderBase",
     "org.xmlunit.diff.ComparisonControllers$1",
     "org.xmlunit.validation.ParsingValidator$Properties",
     "org.xmlunit.diff.AbstractDifferenceEngine$1",
     "org.xmlunit.validation.ValidationProblem$ProblemType",
     "org.xmlunit.util.DocumentBuilderFactoryConfigurer",
     "org.xmlunit.diff.ElementSelectors",
     "org.xmlunit.util.TransformerFactoryConfigurer$Builder",
     "org.xmlunit.diff.DifferenceEvaluators$8",
     "org.xmlunit.diff.DifferenceEvaluators$7",
     "org.xmlunit.diff.DifferenceEvaluators$6",
     "org.xmlunit.diff.NodeFilters",
     "org.xmlunit.util.Linqy$FilteringIterator",
     "org.xmlunit.diff.DifferenceEvaluators$5",
     "org.xmlunit.diff.DifferenceEvaluators$4",
     "org.xmlunit.diff.DifferenceEvaluators$3",
     "org.xmlunit.diff.NodeFilters$1",
     "org.xmlunit.diff.DifferenceEvaluators$2",
     "org.xmlunit.diff.NodeFilters$2",
     "org.xmlunit.diff.DifferenceEvaluators$1",
     "org.xmlunit.builder.DiffBuilder",
     "org.xmlunit.builder.Input$Builder",
     "org.xmlunit.builder.Input",
     "org.xmlunit.util.Nodes",
     "org.xmlunit.diff.AbstractDifferenceEngine$OngoingComparisonState",
     "org.xmlunit.diff.AbstractDifferenceEngine",
     "org.xmlunit.ConfigurationException",
     "org.xmlunit.diff.DOMDifferenceEngine$NormalAttributeComparer$1",
     "org.xmlunit.diff.DOMDifferenceEngine$9",
     "org.xmlunit.diff.DOMDifferenceEngine$7",
     "org.xmlunit.diff.DOMDifferenceEngine$8",
     "org.xmlunit.diff.AbstractDifferenceEngine$FinishedComparisonState",
     "org.xmlunit.util.Mapper",
     "org.xmlunit.diff.DOMDifferenceEngine$1",
     "org.xmlunit.util.IterableNodeList$NodeListIterator",
     "org.xmlunit.diff.DOMDifferenceEngine$ControlAttributePresentComparer",
     "org.xmlunit.diff.DOMDifferenceEngine$2",
     "org.xmlunit.diff.ComparisonResult",
     "org.xmlunit.diff.DOMDifferenceEngine$5",
     "org.xmlunit.diff.DOMDifferenceEngine$6",
     "org.xmlunit.diff.DOMDifferenceEngine$3",
     "org.xmlunit.diff.DOMDifferenceEngine$4",
     "org.xmlunit.diff.DefaultComparisonFormatter",
     "org.xmlunit.util.TransformerFactoryConfigurer$1",
     "org.xmlunit.diff.ComparisonFormatter",
     "org.xmlunit.diff.Comparison$Detail",
     "org.xmlunit.builder.JaxbBuilder",
     "org.xmlunit.diff.ElementSelectors$14",
     "org.xmlunit.diff.ElementSelectors$13",
     "org.xmlunit.diff.ElementSelectors$12",
     "org.xmlunit.validation.ParsingValidator",
     "org.xmlunit.builder.Input$TransformationBuilder",
     "org.xmlunit.diff.ElementSelectors$11",
     "org.xmlunit.diff.DefaultNodeMatcher$NodeTypeMatcher",
     "org.xmlunit.diff.DOMDifferenceEngine$UnmatchedControlNodes",
     "org.xmlunit.diff.ElementSelectors$ConditionalSelectorBuilder",
     "org.xmlunit.diff.ElementSelectors$15",
     "org.xmlunit.diff.DefaultConditionalSelectorBuilder$ConditionalSelector",
     "org.xmlunit.diff.DefaultNodeMatcher",
     "org.xmlunit.diff.ElementSelectors$10",
     "org.xmlunit.diff.DefaultNodeMatcher$DefaultNodeTypeMatcher",
     "org.xmlunit.diff.ComparisonControllers",
     "org.xmlunit.diff.DOMDifferenceEngine$Attributes",
     "org.xmlunit.builder.Input$SourceHoldingBuilder",
     "org.xmlunit.validation.ValidationProblem",
     "org.xmlunit.util.Convert",
     "org.xmlunit.builder.Transform$TransformationResult",
     "org.xmlunit.input.CommentLessSource",
     "org.xmlunit.builder.DifferenceEngineConfigurer",
     "org.xmlunit.util.Linqy$MappingIterator",
     "org.xmlunit.diff.AbstractDifferenceEngine$ComparisonState",
     "org.xmlunit.validation.Validator",
     "org.xmlunit.builder.DiffBuilder$CollectResultsListener"
    ],
    "usedTypes": [
     "org.xmlunit.util.Predicate",
     "org.xmlunit.diff.Diff",
     "org.xmlunit.builder.DiffBuilder"
    ],
    "usageRatio": 0.01935483870967742,
    "children": [
     {
      "id": "javax.xml.bind:jaxb-api:jar:2.3.0:test",
      "coordinates": "javax.xml.bind:jaxb-api:2.3.0",
      "groupId": "javax.xml.bind",
      "artifactId": "jaxb-api",
      "version": "2.3.0",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 125632,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.xmlunit:xmlunit-core:jar:2.6.2:test",
      "allTypes": [
       "javax.xml.bind.Element",
       "javax.xml.bind.annotation.XmlAccessOrder",
       "javax.xml.bind.annotation.XmlElement$DEFAULT",
       "javax.xml.bind.MarshalException",
       "javax.xml.bind.annotation.XmlIDREF",
       "javax.xml.bind.ValidationEventHandler",
       "javax.xml.bind.annotation.XmlSchemaType",
       "javax.xml.bind.helpers.NotIdentifiableEventImpl",
       "javax.xml.bind.annotation.XmlElementDecl",
       "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter$DEFAULT",
       "javax.xml.bind.UnmarshallerHandler",
       "javax.xml.bind.helpers.ParseConversionEventImpl",
       "javax.xml.bind.Binder",
       "javax.xml.bind.JAXBContext$1",
       "javax.xml.bind.Validator",
       "javax.xml.bind.annotation.XmlNs",
       "javax.xml.bind.ContextFinder",
       "javax.xml.bind.annotation.adapters.HexBinaryAdapter",
       "javax.xml.bind.helpers.PrintConversionEventImpl",
       "javax.xml.bind.annotation.W3CDomHandler",
       "javax.xml.bind.annotation.XmlElementDecl$GLOBAL",
       "javax.xml.bind.JAXBIntrospector",
       "javax.xml.bind.annotation.XmlValue",
       "javax.xml.bind.NotIdentifiableEvent",
       "javax.xml.bind.annotation.XmlSchema",
       "javax.xml.bind.DatatypeConverter",
       "javax.xml.bind.DatatypeConverterInterface",
       "javax.xml.bind.helpers.ValidationEventImpl",
       "javax.xml.bind.PrintConversionEvent",
       "javax.xml.bind.TypeConstraintException",
       "javax.xml.bind.annotation.XmlSeeAlso",
       "javax.xml.bind.annotation.XmlMixed",
       "javax.xml.bind.annotation.XmlType",
       "javax.xml.bind.util.ValidationEventCollector",
       "javax.xml.bind.helpers.DefaultValidationEventHandler",
       "javax.xml.bind.DatatypeConverterImpl",
       "javax.xml.bind.GetPropertyAction",
       "javax.xml.bind.annotation.XmlSchemaType$DEFAULT",
       "javax.xml.bind.helpers.Messages",
       "javax.xml.bind.ServiceLoaderUtil",
       "javax.xml.bind.annotation.XmlAttribute",
       "javax.xml.bind.ParseConversionEvent",
       "javax.xml.bind.annotation.XmlMimeType",
       "javax.xml.bind.ValidationEventLocator",
       "javax.xml.bind.JAXBElement",
       "javax.xml.bind.annotation.XmlRootElement",
       "javax.xml.bind.ServiceLoaderUtil$ExceptionHandler",
       "module-info",
       "javax.xml.bind.helpers.ValidationEventLocatorImpl",
       "javax.xml.bind.annotation.XmlElementRef$DEFAULT",
       "javax.xml.bind.annotation.XmlID",
       "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters",
       "javax.xml.bind.util.JAXBSource",
       "javax.xml.bind.attachment.AttachmentUnmarshaller",
       "javax.xml.bind.annotation.XmlAnyElement",
       "javax.xml.bind.annotation.XmlElementWrapper",
       "javax.xml.bind.helpers.AbstractUnmarshallerImpl",
       "javax.xml.bind.DatatypeConverterImpl$CalendarFormatter",
       "javax.xml.bind.annotation.XmlSchemaTypes",
       "javax.xml.bind.PropertyException",
       "javax.xml.bind.annotation.XmlElementRef",
       "javax.xml.bind.annotation.XmlElements",
       "javax.xml.bind.annotation.adapters.CollapsedStringAdapter",
       "javax.xml.bind.util.JAXBSource$1",
       "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
       "javax.xml.bind.annotation.XmlEnum",
       "javax.xml.bind.JAXB",
       "javax.xml.bind.annotation.XmlAccessorType",
       "javax.xml.bind.Unmarshaller$Listener",
       "javax.xml.bind.annotation.XmlAnyAttribute",
       "javax.xml.bind.ModuleUtil",
       "javax.xml.bind.ContextFinder$4",
       "javax.xml.bind.annotation.XmlEnumValue",
       "javax.xml.bind.ContextFinder$3",
       "javax.xml.bind.JAXB$Cache",
       "javax.xml.bind.annotation.XmlTransient",
       "javax.xml.bind.ContextFinder$2",
       "javax.xml.bind.ContextFinder$1",
       "javax.xml.bind.JAXBException",
       "javax.xml.bind.annotation.XmlAccessType",
       "javax.xml.bind.ContextFinder$5",
       "javax.xml.bind.ValidationEvent",
       "javax.xml.bind.annotation.XmlAttachmentRef",
       "javax.xml.bind.annotation.XmlElementRefs",
       "javax.xml.bind.SchemaOutputResolver",
       "javax.xml.bind.annotation.adapters.NormalizedStringAdapter",
       "javax.xml.bind.JAXBPermission",
       "javax.xml.bind.annotation.XmlInlineBinaryData",
       "javax.xml.bind.util.JAXBResult",
       "META-INF.versions.9.javax.xml.bind.ModuleUtil",
       "javax.xml.bind.JAXBContextFactory",
       "javax.xml.bind.Marshaller",
       "javax.xml.bind.JAXBElement$GlobalScope",
       "javax.xml.bind.WhiteSpaceProcessor",
       "javax.xml.bind.annotation.XmlNsForm",
       "javax.xml.bind.annotation.DomHandler",
       "javax.xml.bind.Messages",
       "javax.xml.bind.DataBindingException",
       "javax.xml.bind.annotation.XmlType$DEFAULT",
       "javax.xml.bind.attachment.AttachmentMarshaller",
       "javax.xml.bind.JAXBContext",
       "javax.xml.bind.Unmarshaller",
       "javax.xml.bind.annotation.adapters.XmlAdapter",
       "javax.xml.bind.annotation.XmlAccessorOrder",
       "javax.xml.bind.UnmarshalException",
       "javax.xml.bind.helpers.AbstractMarshallerImpl",
       "javax.xml.bind.util.Messages",
       "javax.xml.bind.Marshaller$Listener",
       "javax.xml.bind.annotation.XmlRegistry",
       "javax.xml.bind.annotation.XmlList",
       "javax.xml.bind.ValidationException",
       "javax.xml.bind.annotation.XmlElement"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   }
  ]
 }
}