{
 "usage": {
  "com.saucelabs.ci.sauceconnect.SauceConnectFourManager": {
   "org.codehaus.plexus:plexus-archiver:jar:4.2.2:compile": [
    "org.codehaus.plexus.archiver.AbstractUnArchiver",
    "org.codehaus.plexus.archiver.zip.ZipUnArchiver",
    "org.codehaus.plexus.archiver.tar.TarGZipUnArchiver"
   ],
   "commons-io:commons-io:jar:2.7:provided": [
    "org.apache.commons.io.IOUtils",
    "org.apache.commons.io.FileUtils"
   ],
   "org.json:json:jar:20200518:compile": [
    "org.json.JSONObject"
   ],
   "org.codehaus.plexus:plexus-container-default:jar:2.1.0:compile": [
    "org.codehaus.plexus.logging.console.ConsoleLogger",
    "org.codehaus.plexus.logging.Logger"
   ]
  },
  "com.saucelabs.ci.sauceconnect.SauceConnectFourManagerTest": {
   "commons-io:commons-io:jar:2.7:provided": [
    "org.apache.commons.io.IOUtils"
   ],
   "com.saucelabs:saucerest:jar:1.0.44:compile": [
    "com.saucelabs.saucerest.SauceREST"
   ],
   "junit:junit:jar:4.13.1:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Assert",
    "org.junit.rules.TemporaryFolder"
   ],
   "org.mockito:mockito-all:jar:1.10.19:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Spy",
    "org.mockito.Matchers",
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.ArgumentCaptor",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "com.saucelabs.sod.BrowserTest": {
   "commons-io:commons-io:jar:2.7:provided": [
    "org.apache.commons.io.IOUtils"
   ],
   "com.saucelabs:saucerest:jar:1.0.44:compile": [
    "com.saucelabs.saucerest.SauceREST"
   ],
   "junit:junit:jar:4.13.1:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "com.saucelabs.ci.JobInformationTest": {
   "commons-io:commons-io:jar:2.7:provided": [
    "org.apache.commons.io.IOUtils"
   ],
   "org.json:json:jar:20200518:compile": [
    "org.json.JSONObject"
   ],
   "junit:junit:jar:4.13.1:test": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "com.saucelabs.ci.BrowserFactoryTest": {
   "commons-io:commons-io:jar:2.7:provided": [
    "org.apache.commons.io.IOUtils"
   ],
   "com.saucelabs:saucerest:jar:1.0.44:compile": [
    "com.saucelabs.saucerest.SauceREST"
   ],
   "junit:junit:jar:4.13.1:test": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ],
   "org.mockito:mockito-all:jar:1.10.19:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "com.saucelabs.ci.sauceconnect.AbstractSauceTunnelManager$2": {
   "commons-io:commons-io:jar:2.7:provided": [
    "org.apache.commons.io.IOUtils",
    "org.apache.commons.io.output.NullOutputStream"
   ]
  },
  "com.saucelabs.ci.sauceconnect.AbstractSauceTunnelManager$1": {
   "commons-io:commons-io:jar:2.7:provided": [
    "org.apache.commons.io.IOUtils",
    "org.apache.commons.io.output.NullOutputStream"
   ]
  },
  "com.saucelabs.ci.BuildInformationTest": {
   "commons-io:commons-io:jar:2.7:provided": [
    "org.apache.commons.io.IOUtils"
   ],
   "org.json:json:jar:20200518:compile": [
    "org.json.JSONObject"
   ],
   "junit:junit:jar:4.13.1:test": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "com.saucelabs.ci.sauceconnect.SauceConnectFourManager$OperatingSystem": {
   "commons-io:commons-io:jar:2.7:provided": [
    "org.apache.commons.io.IOUtils"
   ]
  },
  "com.saucelabs.ci.sauceconnect.AbstractSauceTunnelManager$SystemOutGobbler": {
   "org.apache.commons:commons-lang3:jar:3.10:compile": [
    "org.apache.commons.lang3.StringUtils"
   ]
  },
  "com.saucelabs.ci.SODSeleniumConfiguration": {
   "org.apache.commons:commons-lang3:jar:3.10:compile": [
    "org.apache.commons.lang3.StringUtils",
    "org.apache.commons.lang3.StringEscapeUtils"
   ],
   "org.json:json:jar:20200518:compile": [
    "org.json.JSONException",
    "org.json.JSONObject",
    "org.json.JSONArray"
   ]
  },
  "com.saucelabs.ci.sauceconnect.AbstractSauceTunnelManager": {
   "org.apache.commons:commons-lang3:jar:3.10:compile": [
    "org.apache.commons.lang3.StringUtils"
   ],
   "com.saucelabs:saucerest:jar:1.0.44:compile": [
    "com.saucelabs.saucerest.SauceREST"
   ],
   "org.json:json:jar:20200518:compile": [
    "org.json.JSONException",
    "org.json.JSONObject",
    "org.json.JSONArray"
   ]
  },
  "com.saucelabs.ci.BrowserFactory": {
   "com.saucelabs:saucerest:jar:1.0.44:compile": [
    "com.saucelabs.saucerest.SauceREST"
   ],
   "org.json:json:jar:20200518:compile": [
    "org.json.JSONException",
    "org.json.JSONObject",
    "org.json.JSONArray"
   ]
  },
  "com.saucelabs.ci.BuildInformation": {
   "org.json:json:jar:20200518:compile": [
    "org.json.JSONException",
    "org.json.JSONObject"
   ],
   "com.google.code.findbugs:jsr305:jar:3.0.2:compile": [
    "javax.annotation.Nullable"
   ]
  },
  "com.saucelabs.ci.JobInformation": {
   "org.json:json:jar:20200518:compile": [
    "org.json.JSONException",
    "org.json.JSONObject"
   ],
   "com.google.code.findbugs:jsr305:jar:3.0.2:compile": [
    "javax.annotation.Nonnull",
    "javax.annotation.Nullable"
   ]
  },
  "com.saucelabs.ci.sauceconnect.SauceConnectDidNotStartExceptionTest": {
   "junit:junit:jar:4.13.1:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "com.saucelabs.ci.sauceconnect.AbstractSauceTunnelManagerTest": {
   "junit:junit:jar:4.13.1:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "com.saucelabs.sod.ExtractFiles": {
   "junit:junit:jar:4.13.1:test": [
    "org.junit.Test"
   ]
  }
 },
 "dependencies": {
  "id": "com.saucelabs:ci-sauce:jar:1.151:null",
  "coordinates": "com.saucelabs:ci-sauce:1.151",
  "groupId": "com.saucelabs",
  "artifactId": "ci-sauce",
  "version": "1.151",
  "packaging": "jar",
  "omitted": false,
  "type": "unknown",
  "status": "unknown",
  "parent": "unknown",
  "allTypes": [],
  "usedTypes": [],
  "usageRatio": -1.0,
  "children": [
   {
    "id": "org.codehaus.plexus:plexus-archiver:jar:4.2.2:compile",
    "coordinates": "org.codehaus.plexus:plexus-archiver:4.2.2",
    "groupId": "org.codehaus.plexus",
    "artifactId": "plexus-archiver",
    "version": "4.2.2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 194265,
    "type": "direct",
    "status": "used",
    "parent": "com.saucelabs:ci-sauce:jar:1.151",
    "allTypes": [
     "org.codehaus.plexus.archiver.AbstractArchiver",
     "org.codehaus.plexus.archiver.ArchiveFile",
     "org.codehaus.plexus.archiver.zip.DeferredScatterOutputStream",
     "org.codehaus.plexus.archiver.zip.ConcurrentJarCreator$1",
     "org.codehaus.plexus.archiver.FinalizerEnabled",
     "org.codehaus.plexus.archiver.bzip2.PlexusIoBzip2ResourceCollection",
     "org.codehaus.plexus.archiver.diags.NoOpArchiver",
     "org.codehaus.plexus.archiver.xz.XZArchiver",
     "org.codehaus.plexus.archiver.tar.PlexusIoTarXZFileResourceCollection",
     "org.codehaus.plexus.archiver.tar.TarFile$2",
     "org.codehaus.plexus.archiver.zip.AnonymousResource",
     "org.codehaus.plexus.archiver.tar.TarFile$1",
     "org.codehaus.plexus.archiver.tar.TarSnappyUnArchiver",
     "org.codehaus.plexus.archiver.tar.PlexusIoTarGZipFileResourceCollection",
     "org.codehaus.plexus.archiver.zip.ZipArchiver",
     "org.codehaus.plexus.archiver.resources.PlexusIoVirtualFileResource",
     "org.codehaus.plexus.archiver.jar.Manifest",
     "org.codehaus.plexus.archiver.tar.TarArchiver",
     "org.codehaus.plexus.archiver.zip.ZipSymlinkResource",
     "org.codehaus.plexus.archiver.dir.DirectoryArchiver",
     "org.codehaus.plexus.archiver.UnArchiver",
     "org.codehaus.plexus.archiver.jar.Manifest$Section",
     "org.codehaus.plexus.archiver.util.AbstractFileSet",
     "org.codehaus.plexus.archiver.tar.TarLongFileMode",
     "org.codehaus.plexus.archiver.AbstractArchiveFinalizer",
     "org.codehaus.plexus.archiver.jar.JarArchiver$1",
     "org.codehaus.plexus.archiver.ArchiveEntry",
     "org.codehaus.plexus.archiver.zip.OffloadingOutputStream",
     "org.codehaus.plexus.archiver.jar.Manifest$BaseAttribute",
     "org.codehaus.plexus.archiver.util.ResourceUtils",
     "org.codehaus.plexus.archiver.tar.PlexusIoTarFileResourceCollection$1",
     "org.codehaus.plexus.archiver.Archiver",
     "org.codehaus.plexus.archiver.zip.PlexusArchiverZipFileResourceCollection$CloseableIterator",
     "org.codehaus.plexus.archiver.tar.TarResource",
     "org.codehaus.plexus.archiver.gzip.GZipUnArchiver",
     "org.codehaus.plexus.archiver.jar.ManifestException",
     "org.codehaus.plexus.archiver.xz.XZUnArchiver",
     "org.codehaus.plexus.archiver.UnixStat",
     "org.codehaus.plexus.archiver.zip.AbstractZipUnArchiver",
     "org.codehaus.plexus.archiver.diags.DryRunArchiver",
     "org.codehaus.plexus.archiver.util.FilterSupport",
     "org.codehaus.plexus.archiver.tar.TarArchiver$TarCompressionMethod",
     "org.codehaus.plexus.archiver.filters.JarSecurityFileSelector",
     "org.codehaus.plexus.archiver.jar.ModularJarArchiver",
     "org.codehaus.plexus.archiver.ArchiveFilterException",
     "org.codehaus.plexus.archiver.BaseFileSet",
     "org.codehaus.plexus.archiver.tar.TarSymlinkResource",
     "org.codehaus.plexus.archiver.util.DefaultFileSet",
     "org.codehaus.plexus.archiver.zip.AddedDirs",
     "org.codehaus.plexus.archiver.jar.Manifest$ExistingAttribute",
     "org.codehaus.plexus.archiver.tar.TarUnArchiver",
     "org.codehaus.plexus.archiver.bzip2.BZip2Archiver",
     "org.codehaus.plexus.archiver.jar.JdkManifestFactory",
     "org.codehaus.plexus.components.io.resources.PlexusIoZipFileResourceCollection",
     "org.codehaus.plexus.archiver.tar.PlexusIoTarSnappyFileResourceCollection",
     "org.codehaus.plexus.archiver.tar.TarXZUnArchiver",
     "org.codehaus.plexus.archiver.jar.JarArchiver$FilesetManifestConfig",
     "org.codehaus.plexus.archiver.zip.ZipResource",
     "org.codehaus.plexus.archiver.util.ArchiveEntryUtils",
     "org.codehaus.plexus.archiver.jar.JarToolModularJarArchiver",
     "org.codehaus.plexus.archiver.snappy.SnappyCompressor",
     "org.codehaus.plexus.archiver.war.WarArchiver",
     "org.codehaus.plexus.archiver.zip.AbstractZipArchiver$2",
     "org.codehaus.plexus.archiver.zip.AbstractZipArchiver$1",
     "org.codehaus.plexus.archiver.util.Compressor",
     "org.codehaus.plexus.archiver.zip.PlexusIoZipFileResourceCollection$ZipFileResourceIterator$ZipFileSymlinkResource",
     "org.codehaus.plexus.archiver.snappy.PlexusIoSnappyResourceCollection",
     "org.codehaus.plexus.archiver.zip.ConcurrentJarCreator",
     "org.codehaus.plexus.archiver.zip.AbstractZipArchiver",
     "org.codehaus.plexus.archiver.bzip2.BZip2UnArchiver",
     "org.codehaus.plexus.archiver.gzip.GZipArchiver",
     "org.codehaus.plexus.archiver.tar.TarBZip2UnArchiver",
     "org.codehaus.plexus.archiver.ArchiverException",
     "org.codehaus.plexus.archiver.diags.TrackingArchiver",
     "org.codehaus.plexus.archiver.jar.JarArchiver",
     "org.codehaus.plexus.archiver.zip.ByteArrayOutputStream",
     "org.codehaus.plexus.archiver.tar.BZip2TarFile",
     "org.codehaus.plexus.archiver.tar.PlexusIoTarFileResourceCollection",
     "org.codehaus.plexus.archiver.exceptions.EmptyArchiveException",
     "org.codehaus.plexus.archiver.zip.PlexusIoZipFileResourceCollection$1",
     "org.codehaus.plexus.archiver.jar.Manifest$ExistingSection",
     "org.codehaus.plexus.archiver.FileSet",
     "org.codehaus.plexus.archiver.ArchiveFileFilter",
     "org.codehaus.plexus.archiver.diags.TrackingArchiver$Addition",
     "org.codehaus.plexus.archiver.ResourceIterator",
     "org.codehaus.plexus.archiver.zip.PlexusIoZipFileResourceCollection$ZipFileResourceIterator",
     "org.codehaus.plexus.archiver.diags.DelgatingArchiver",
     "org.codehaus.plexus.archiver.Archiver$1",
     "org.codehaus.plexus.archiver.snappy.SnappyArchiver",
     "org.codehaus.plexus.archiver.zip.PlexusIoZipFileResourceCollection",
     "org.codehaus.plexus.archiver.ArchiveFinalizer",
     "org.codehaus.plexus.archiver.zip.PlexusIoZipFileResourceCollection$ZipFileResourceIterator$ZipFileResource",
     "org.codehaus.plexus.archiver.snappy.SnappyUnArchiver",
     "org.codehaus.plexus.archiver.util.FilePermissionUtils",
     "org.codehaus.plexus.archiver.tar.TarUnArchiver$UntarCompressionMethod",
     "org.codehaus.plexus.archiver.manager.NoSuchArchiverException",
     "org.codehaus.plexus.archiver.dir.DirectoryArchiver$1",
     "org.codehaus.plexus.archiver.resources.PlexusIoVirtualSymlinkResource",
     "org.codehaus.plexus.archiver.AbstractUnArchiver",
     "org.codehaus.plexus.archiver.jar.ManifestConstants",
     "org.codehaus.plexus.archiver.zip.ZipUnArchiver",
     "org.codehaus.plexus.archiver.jar.Manifest$Attribute",
     "org.codehaus.plexus.archiver.util.DefaultArchivedFileSet",
     "org.codehaus.plexus.archiver.zip.ConcurrentJarCreator$DeferredSupplier",
     "org.codehaus.plexus.archiver.filters.JarSecurityFileFilter",
     "org.codehaus.plexus.archiver.tar.SnappyTarFile",
     "org.codehaus.plexus.archiver.manager.ArchiverManager",
     "org.codehaus.plexus.archiver.tar.GZipTarFile",
     "org.codehaus.plexus.archiver.ArchivedFileSet",
     "org.codehaus.plexus.archiver.ear.EarArchiver",
     "org.codehaus.plexus.archiver.diags.NoOpArchiver$1",
     "org.codehaus.plexus.archiver.AbstractArchiver$2",
     "org.codehaus.plexus.archiver.AbstractArchiver$1",
     "org.codehaus.plexus.archiver.zip.AbstractZipUnArchiver$ZipEntryFileInfo",
     "org.codehaus.plexus.archiver.bzip2.BZip2Compressor",
     "org.codehaus.plexus.archiver.gzip.PlexusIoGzipResourceCollection",
     "org.codehaus.plexus.archiver.AbstractArchiver$AddedResourceCollection",
     "org.codehaus.plexus.archiver.DotDirectiveArchiveFinalizer",
     "org.codehaus.plexus.archiver.gzip.GZipCompressor",
     "org.codehaus.plexus.archiver.tar.TarGZipUnArchiver",
     "org.codehaus.plexus.archiver.zip.PlexusArchiverZipFileResourceCollection",
     "org.codehaus.plexus.archiver.tar.TarArchiver$TarOptions",
     "org.codehaus.plexus.archiver.tar.XZTarFile",
     "org.codehaus.plexus.archiver.tar.TarFile",
     "org.codehaus.plexus.archiver.manager.DefaultArchiverManager",
     "org.codehaus.plexus.archiver.xz.PlexusIoXZResourceCollection",
     "org.codehaus.plexus.archiver.util.FilePermission",
     "org.codehaus.plexus.archiver.tar.PlexusIoTarBZip2FileResourceCollection",
     "org.codehaus.plexus.archiver.zip.ConcurrentJarCreator$2",
     "org.codehaus.plexus.archiver.xz.XZCompressor",
     "org.codehaus.plexus.archiver.zip.ConcurrentJarCreator$3",
     "org.codehaus.plexus.archiver.util.Streams"
    ],
    "usedTypes": [
     "org.codehaus.plexus.archiver.tar.TarGZipUnArchiver",
     "org.codehaus.plexus.archiver.AbstractUnArchiver",
     "org.codehaus.plexus.archiver.zip.ZipUnArchiver"
    ],
    "usageRatio": 0.022727272727272728,
    "children": [
     {
      "id": "org.codehaus.plexus:plexus-utils:jar:3.3.0:compile",
      "coordinates": "org.codehaus.plexus:plexus-utils:3.3.0",
      "groupId": "org.codehaus.plexus",
      "artifactId": "plexus-utils",
      "version": "3.3.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 263253,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.codehaus.plexus:plexus-archiver:jar:4.2.2:compile",
      "allTypes": [
       "org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder",
       "org.codehaus.plexus.util.InterpolationFilterReader",
       "org.codehaus.plexus.util.cli.CommandLineException",
       "org.codehaus.plexus.util.io.RawInputStreamFacade",
       "org.codehaus.plexus.util.cli.AbstractStreamHandler",
       "org.codehaus.plexus.util.CachedMap",
       "org.codehaus.plexus.util.reflection.ReflectorException",
       "org.codehaus.plexus.util.cli.CommandLineUtils",
       "org.codehaus.plexus.util.DirectoryWalkListener",
       "org.codehaus.plexus.util.cli.CommandLineCallable",
       "org.codehaus.plexus.util.cli.Commandline",
       "org.codehaus.plexus.util.xml.XmlStreamWriter",
       "org.codehaus.plexus.util.introspection.ReflectionValueExtractor$Tokenizer",
       "org.codehaus.plexus.util.PropertyUtils",
       "org.codehaus.plexus.util.StringInputStream",
       "org.codehaus.plexus.util.introspection.MethodMap",
       "org.codehaus.plexus.util.SweeperPool",
       "org.codehaus.plexus.util.xml.XmlUtil",
       "org.codehaus.plexus.util.cli.WriterStreamConsumer",
       "org.codehaus.plexus.util.xml.SerializerXMLWriter",
       "org.codehaus.plexus.util.cli.StreamFeeder",
       "org.codehaus.plexus.util.FastMap$1",
       "org.codehaus.plexus.util.xml.PrettyPrintXMLWriter",
       "org.codehaus.plexus.util.CollectionUtils",
       "org.codehaus.plexus.util.FastMap$KeySet",
       "org.codehaus.plexus.util.PathTool",
       "org.codehaus.plexus.util.introspection.ClassMap$CacheMiss",
       "org.codehaus.plexus.util.xml.pull.MXParser",
       "org.codehaus.plexus.util.dag.TopologicalSorter",
       "org.codehaus.plexus.util.Base64",
       "org.codehaus.plexus.util.SweeperPool$Sweeper",
       "org.codehaus.plexus.util.xml.Xpp3Dom",
       "org.codehaus.plexus.util.StringOutputStream",
       "org.codehaus.plexus.util.cli.CommandLineUtils$2",
       "org.codehaus.plexus.util.cli.CommandLineUtils$1",
       "org.codehaus.plexus.util.introspection.ClassMap$MethodInfo",
       "org.codehaus.plexus.util.FastMap$EntrySet",
       "org.codehaus.plexus.util.Scanner",
       "org.codehaus.plexus.util.FastMap",
       "org.codehaus.plexus.util.cli.StreamConsumer",
       "org.codehaus.plexus.util.xml.pull.XmlSerializer",
       "org.codehaus.plexus.util.cli.shell.CmdShell",
       "org.codehaus.plexus.util.introspection.ClassMap$1",
       "org.codehaus.plexus.util.dag.DAG",
       "org.codehaus.plexus.util.xml.XmlWriterUtil",
       "org.codehaus.plexus.util.xml.XmlStreamReaderException",
       "org.codehaus.plexus.util.cli.shell.BourneShell",
       "org.codehaus.plexus.util.SelectorUtils",
       "org.codehaus.plexus.util.TypeFormat",
       "org.codehaus.plexus.util.FileUtils",
       "org.codehaus.plexus.util.io.URLInputStreamFacade",
       "org.codehaus.plexus.util.ExceptionUtils",
       "org.codehaus.plexus.util.xml.Xpp3DomUtils",
       "org.codehaus.plexus.util.introspection.ReflectionValueExtractor",
       "org.codehaus.plexus.util.DirectoryWalker",
       "org.codehaus.plexus.util.DirectoryScanner",
       "org.codehaus.plexus.util.LineOrientedInterpolatingReader",
       "org.codehaus.plexus.util.dag.CycleDetector",
       "org.codehaus.plexus.util.introspection.ClassMap",
       "org.codehaus.plexus.util.cli.DefaultConsumer",
       "org.codehaus.plexus.util.cli.shell.CommandShell",
       "org.codehaus.plexus.util.introspection.MethodMap$AmbiguousException",
       "org.codehaus.plexus.util.cli.shell.Shell",
       "org.codehaus.plexus.util.ReaderFactory",
       "org.codehaus.plexus.util.WriterFactory",
       "org.codehaus.plexus.util.Os",
       "org.codehaus.plexus.util.FastMap$EntryImpl",
       "org.codehaus.plexus.util.FastMap$KeySet$1",
       "org.codehaus.plexus.util.cli.ShutdownHookUtils",
       "org.codehaus.plexus.util.cli.Commandline$Argument",
       "org.codehaus.plexus.util.cli.EnhancedStringTokenizer",
       "org.codehaus.plexus.util.xml.XMLWriter",
       "org.codehaus.plexus.util.StringUtils",
       "org.codehaus.plexus.util.DirectoryWalker$DirStackEntry",
       "org.codehaus.plexus.util.xml.pull.XmlPullParserException",
       "org.codehaus.plexus.util.cli.CommandLineTimeOutException",
       "org.codehaus.plexus.util.reflection.Reflector",
       "org.codehaus.plexus.util.FastMap$Values",
       "org.codehaus.plexus.util.cli.CommandLineUtils$StringStreamConsumer",
       "org.codehaus.plexus.util.Java7Detector",
       "org.codehaus.plexus.util.dag.Vertex",
       "org.codehaus.plexus.util.xml.XmlStreamReader",
       "org.codehaus.plexus.util.xml.pull.MXSerializer",
       "org.codehaus.plexus.util.ReflectionUtils",
       "org.codehaus.plexus.util.cli.Arg",
       "org.codehaus.plexus.util.IOUtil",
       "org.codehaus.plexus.util.xml.Xpp3DomBuilder",
       "org.codehaus.plexus.util.xml.XmlReader",
       "org.codehaus.plexus.util.xml.XmlReaderException",
       "org.codehaus.plexus.util.xml.Xpp3DomWriter",
       "org.codehaus.plexus.util.Expand",
       "org.codehaus.plexus.util.dag.CycleDetectedException",
       "org.codehaus.plexus.util.cli.StreamPumper",
       "org.codehaus.plexus.util.xml.pull.EntityReplacementMap",
       "org.codehaus.plexus.util.xml.pull.XmlPullParser",
       "org.codehaus.plexus.util.MatchPattern",
       "org.codehaus.plexus.util.xml.CompactXMLWriter",
       "org.codehaus.plexus.util.AbstractScanner",
       "org.codehaus.plexus.util.MatchPatterns",
       "org.codehaus.plexus.util.FastMap$EntrySet$1",
       "org.codehaus.plexus.util.NioFiles",
       "org.codehaus.plexus.util.io.InputStreamFacade",
       "org.codehaus.plexus.util.FastMap$Values$1",
       "org.codehaus.plexus.util.cli.Commandline$Marker",
       "org.codehaus.plexus.util.FileUtils$FilterWrapper"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.codehaus.plexus:plexus-io:jar:3.2.0:compile",
      "coordinates": "org.codehaus.plexus:plexus-io:3.2.0",
      "groupId": "org.codehaus.plexus",
      "artifactId": "plexus-io",
      "version": "3.2.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 75557,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.codehaus.plexus:plexus-archiver:jar:4.2.2:compile",
      "allTypes": [
       "org.codehaus.plexus.components.io.functions.PlexusIoResourceConsumer",
       "org.codehaus.plexus.components.io.resources.AbstractPlexusIoResourceCollectionWithAttributes",
       "org.codehaus.plexus.components.io.resources.proxy.ResourceInvocationHandler",
       "org.codehaus.plexus.components.io.resources.proxy.PlexusIoProxyResourceCollection",
       "org.codehaus.plexus.components.io.resources.PlexusIoResource",
       "org.codehaus.plexus.components.io.resources.proxy.PlexusIoProxyResourceCollection$FwdIterator",
       "org.codehaus.plexus.components.io.attributes.AttributeUtils",
       "org.codehaus.plexus.components.io.resources.proxy.ForwardingIterator",
       "org.codehaus.plexus.components.io.resources.proxy.PlexusIoProxyResourceCollection$FwdIterator$1",
       "org.codehaus.plexus.components.io.resources.proxy.PlexusIoProxyResourceCollection$DualSupplier",
       "org.codehaus.plexus.components.io.resources.PlexusIoResourceCollection",
       "org.codehaus.plexus.components.io.functions.ResourceAttributeSupplier",
       "org.codehaus.plexus.components.io.filemappers.MergeFileMapper",
       "org.codehaus.plexus.components.io.attributes.SimpleResourceAttributes",
       "org.codehaus.plexus.components.io.fileselectors.IncludeExcludeFileSelector",
       "org.codehaus.plexus.components.io.resources.PlexusIoFileResource",
       "org.codehaus.plexus.components.io.resources.AbstractPlexusIoResource",
       "org.codehaus.plexus.components.io.filemappers.SuffixFileMapper",
       "org.codehaus.plexus.components.io.resources.LinefeedMode",
       "org.codehaus.plexus.components.io.attributes.AttributeConstants",
       "org.codehaus.plexus.components.io.attributes.proxy.PlexusIoProxyResourceAttributes",
       "org.codehaus.plexus.components.io.attributes.PlexusIoResourceAttributeUtils",
       "org.codehaus.plexus.components.io.resources.ClosingInputStream",
       "org.codehaus.plexus.components.io.resources.proxy.ProxyFactory",
       "org.codehaus.plexus.components.io.resources.PlexusIoFileResourceCollection$1",
       "org.codehaus.plexus.components.io.filemappers.IdentityMapper",
       "org.codehaus.plexus.components.io.fileselectors.FileInfo",
       "org.codehaus.plexus.components.io.filemappers.FileMapper",
       "org.codehaus.plexus.components.io.resources.PlexusIoCompressedFileResourceCollection$1",
       "org.codehaus.plexus.components.io.resources.EncodingSupported",
       "org.codehaus.plexus.components.io.attributes.SymlinkUtils",
       "org.codehaus.plexus.components.io.resources.PlexusIoCompressedFileResourceCollection$2",
       "org.codehaus.plexus.components.io.functions.InputStreamTransformer",
       "org.codehaus.plexus.components.io.resources.AbstractPlexusIoResourceCollection$IdentityTransformer",
       "org.codehaus.plexus.components.io.filemappers.FileExtensionMapper",
       "org.codehaus.plexus.components.io.functions.ContentSupplier",
       "org.codehaus.plexus.components.io.attributes.PlexusIoResourceAttributes",
       "org.codehaus.plexus.components.io.filemappers.FlattenFileMapper",
       "org.codehaus.plexus.components.io.resources.PlexusIoFileResource$1",
       "org.codehaus.plexus.components.io.resources.PlexusIoFileResource$2",
       "org.codehaus.plexus.components.io.filemappers.PrefixFileMapper",
       "org.codehaus.plexus.components.io.resources.Deferred$1",
       "org.codehaus.plexus.components.io.functions.SizeSupplier",
       "org.codehaus.plexus.components.io.functions.FileSupplier",
       "org.codehaus.plexus.components.io.resources.PlexusIoFileResourceCollection",
       "org.codehaus.plexus.components.io.resources.AbstractPlexusIoResourceCollection",
       "org.codehaus.plexus.components.io.fileselectors.FileSelector",
       "org.codehaus.plexus.components.io.filemappers.AbstractFileMapper",
       "org.codehaus.plexus.components.io.resources.AbstractPlexusIoArchiveResourceCollection$FilteringIterator",
       "org.codehaus.plexus.components.io.resources.PlexusIoCompressedFileResourceCollection",
       "org.codehaus.plexus.components.io.attributes.FileAttributes",
       "org.codehaus.plexus.components.io.resources.AbstractPlexusIoArchiveResourceCollection$1",
       "org.codehaus.plexus.components.io.filemappers.RegExpFileMapper",
       "org.codehaus.plexus.components.io.resources.AbstractPlexusIoArchiveResourceCollection",
       "org.codehaus.plexus.components.io.resources.Stream",
       "org.codehaus.plexus.components.io.functions.NameSupplier",
       "org.codehaus.plexus.components.io.resources.PlexusIoFileResourceCollection$1$1",
       "org.codehaus.plexus.components.io.resources.PlexusIoArchivedResourceCollection",
       "org.codehaus.plexus.components.io.resources.PlexusIoURLResource",
       "org.codehaus.plexus.components.io.resources.Deferred",
       "org.codehaus.plexus.components.io.fileselectors.AllFilesFileSelector",
       "org.codehaus.plexus.components.io.functions.SymlinkDestinationSupplier",
       "org.codehaus.plexus.components.io.resources.PlexusIoSymlinkResource",
       "org.codehaus.plexus.components.io.resources.ResourceFactory"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "org.codehaus.plexus:plexus-utils:jar:3.3.0:compile",
        "coordinates": "org.codehaus.plexus:plexus-utils:3.3.0",
        "groupId": "org.codehaus.plexus",
        "artifactId": "plexus-utils",
        "version": "3.3.0",
        "scope": "compile",
        "packaging": "jar",
        "omitted": true,
        "size": 263253,
        "type": "transitive",
        "status": "bloated",
        "parent": "org.codehaus.plexus:plexus-io:jar:3.2.0:compile",
        "allTypes": [
         "org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder",
         "org.codehaus.plexus.util.InterpolationFilterReader",
         "org.codehaus.plexus.util.cli.CommandLineException",
         "org.codehaus.plexus.util.io.RawInputStreamFacade",
         "org.codehaus.plexus.util.cli.AbstractStreamHandler",
         "org.codehaus.plexus.util.CachedMap",
         "org.codehaus.plexus.util.reflection.ReflectorException",
         "org.codehaus.plexus.util.cli.CommandLineUtils",
         "org.codehaus.plexus.util.DirectoryWalkListener",
         "org.codehaus.plexus.util.cli.CommandLineCallable",
         "org.codehaus.plexus.util.cli.Commandline",
         "org.codehaus.plexus.util.xml.XmlStreamWriter",
         "org.codehaus.plexus.util.introspection.ReflectionValueExtractor$Tokenizer",
         "org.codehaus.plexus.util.PropertyUtils",
         "org.codehaus.plexus.util.StringInputStream",
         "org.codehaus.plexus.util.introspection.MethodMap",
         "org.codehaus.plexus.util.SweeperPool",
         "org.codehaus.plexus.util.xml.XmlUtil",
         "org.codehaus.plexus.util.cli.WriterStreamConsumer",
         "org.codehaus.plexus.util.xml.SerializerXMLWriter",
         "org.codehaus.plexus.util.cli.StreamFeeder",
         "org.codehaus.plexus.util.FastMap$1",
         "org.codehaus.plexus.util.xml.PrettyPrintXMLWriter",
         "org.codehaus.plexus.util.CollectionUtils",
         "org.codehaus.plexus.util.FastMap$KeySet",
         "org.codehaus.plexus.util.PathTool",
         "org.codehaus.plexus.util.introspection.ClassMap$CacheMiss",
         "org.codehaus.plexus.util.xml.pull.MXParser",
         "org.codehaus.plexus.util.dag.TopologicalSorter",
         "org.codehaus.plexus.util.Base64",
         "org.codehaus.plexus.util.SweeperPool$Sweeper",
         "org.codehaus.plexus.util.xml.Xpp3Dom",
         "org.codehaus.plexus.util.StringOutputStream",
         "org.codehaus.plexus.util.cli.CommandLineUtils$2",
         "org.codehaus.plexus.util.cli.CommandLineUtils$1",
         "org.codehaus.plexus.util.introspection.ClassMap$MethodInfo",
         "org.codehaus.plexus.util.FastMap$EntrySet",
         "org.codehaus.plexus.util.Scanner",
         "org.codehaus.plexus.util.FastMap",
         "org.codehaus.plexus.util.cli.StreamConsumer",
         "org.codehaus.plexus.util.xml.pull.XmlSerializer",
         "org.codehaus.plexus.util.cli.shell.CmdShell",
         "org.codehaus.plexus.util.introspection.ClassMap$1",
         "org.codehaus.plexus.util.dag.DAG",
         "org.codehaus.plexus.util.xml.XmlWriterUtil",
         "org.codehaus.plexus.util.xml.XmlStreamReaderException",
         "org.codehaus.plexus.util.cli.shell.BourneShell",
         "org.codehaus.plexus.util.SelectorUtils",
         "org.codehaus.plexus.util.TypeFormat",
         "org.codehaus.plexus.util.FileUtils",
         "org.codehaus.plexus.util.io.URLInputStreamFacade",
         "org.codehaus.plexus.util.ExceptionUtils",
         "org.codehaus.plexus.util.xml.Xpp3DomUtils",
         "org.codehaus.plexus.util.introspection.ReflectionValueExtractor",
         "org.codehaus.plexus.util.DirectoryWalker",
         "org.codehaus.plexus.util.DirectoryScanner",
         "org.codehaus.plexus.util.LineOrientedInterpolatingReader",
         "org.codehaus.plexus.util.dag.CycleDetector",
         "org.codehaus.plexus.util.introspection.ClassMap",
         "org.codehaus.plexus.util.cli.DefaultConsumer",
         "org.codehaus.plexus.util.cli.shell.CommandShell",
         "org.codehaus.plexus.util.introspection.MethodMap$AmbiguousException",
         "org.codehaus.plexus.util.cli.shell.Shell",
         "org.codehaus.plexus.util.ReaderFactory",
         "org.codehaus.plexus.util.WriterFactory",
         "org.codehaus.plexus.util.Os",
         "org.codehaus.plexus.util.FastMap$EntryImpl",
         "org.codehaus.plexus.util.FastMap$KeySet$1",
         "org.codehaus.plexus.util.cli.ShutdownHookUtils",
         "org.codehaus.plexus.util.cli.Commandline$Argument",
         "org.codehaus.plexus.util.cli.EnhancedStringTokenizer",
         "org.codehaus.plexus.util.xml.XMLWriter",
         "org.codehaus.plexus.util.StringUtils",
         "org.codehaus.plexus.util.DirectoryWalker$DirStackEntry",
         "org.codehaus.plexus.util.xml.pull.XmlPullParserException",
         "org.codehaus.plexus.util.cli.CommandLineTimeOutException",
         "org.codehaus.plexus.util.reflection.Reflector",
         "org.codehaus.plexus.util.FastMap$Values",
         "org.codehaus.plexus.util.cli.CommandLineUtils$StringStreamConsumer",
         "org.codehaus.plexus.util.Java7Detector",
         "org.codehaus.plexus.util.dag.Vertex",
         "org.codehaus.plexus.util.xml.XmlStreamReader",
         "org.codehaus.plexus.util.xml.pull.MXSerializer",
         "org.codehaus.plexus.util.ReflectionUtils",
         "org.codehaus.plexus.util.cli.Arg",
         "org.codehaus.plexus.util.IOUtil",
         "org.codehaus.plexus.util.xml.Xpp3DomBuilder",
         "org.codehaus.plexus.util.xml.XmlReader",
         "org.codehaus.plexus.util.xml.XmlReaderException",
         "org.codehaus.plexus.util.xml.Xpp3DomWriter",
         "org.codehaus.plexus.util.Expand",
         "org.codehaus.plexus.util.dag.CycleDetectedException",
         "org.codehaus.plexus.util.cli.StreamPumper",
         "org.codehaus.plexus.util.xml.pull.EntityReplacementMap",
         "org.codehaus.plexus.util.xml.pull.XmlPullParser",
         "org.codehaus.plexus.util.MatchPattern",
         "org.codehaus.plexus.util.xml.CompactXMLWriter",
         "org.codehaus.plexus.util.AbstractScanner",
         "org.codehaus.plexus.util.MatchPatterns",
         "org.codehaus.plexus.util.FastMap$EntrySet$1",
         "org.codehaus.plexus.util.NioFiles",
         "org.codehaus.plexus.util.io.InputStreamFacade",
         "org.codehaus.plexus.util.FastMap$Values$1",
         "org.codehaus.plexus.util.cli.Commandline$Marker",
         "org.codehaus.plexus.util.FileUtils$FilterWrapper"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "commons-io:commons-io:jar:2.6:compile",
        "coordinates": "commons-io:commons-io:2.6",
        "groupId": "commons-io",
        "artifactId": "commons-io",
        "version": "2.6",
        "scope": "compile",
        "packaging": "jar",
        "omitted": true,
        "type": "unknown",
        "status": "unknown",
        "parent": "org.codehaus.plexus:plexus-io:jar:3.2.0:compile",
        "allTypes": [],
        "usedTypes": [],
        "usageRatio": -1.0,
        "children": []
       }
      ]
     },
     {
      "id": "org.apache.commons:commons-compress:jar:1.20:compile",
      "coordinates": "org.apache.commons:commons-compress:1.20",
      "groupId": "org.apache.commons",
      "artifactId": "commons-compress",
      "version": "1.20",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 632424,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.codehaus.plexus:plexus-archiver:jar:4.2.2:compile",
      "allTypes": [
       "org.apache.commons.compress.archivers.zip.StreamCompressor$DataOutputCompressor",
       "org.apache.commons.compress.archivers.sevenz.SevenZFileOptions$Builder",
       "org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$InitialState",
       "org.apache.commons.compress.archivers.jar.JarArchiveInputStream",
       "org.apache.commons.compress.archivers.zip.StreamCompressor",
       "org.apache.commons.compress.archivers.ArchiveStreamFactory$2",
       "org.apache.commons.compress.archivers.ArchiveStreamFactory$1",
       "org.apache.commons.compress.archivers.examples.Expander$EntryWriter",
       "org.apache.commons.compress.utils.ServiceLoaderIterator",
       "org.apache.commons.compress.utils.ArchiveUtils",
       "org.apache.commons.compress.compressors.lzw.LZWInputStream",
       "org.apache.commons.compress.utils.ByteUtils$ByteSupplier",
       "org.apache.commons.compress.archivers.sevenz.Coders$DeflateDecoder$DeflateDecoderInputStream",
       "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$BlockSize",
       "org.apache.commons.compress.archivers.zip.JarMarker",
       "org.apache.commons.compress.archivers.sevenz.LZMADecoder",
       "org.apache.commons.compress.utils.BitInputStream",
       "org.apache.commons.compress.archivers.arj.ArjArchiveEntry",
       "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField",
       "org.apache.commons.compress.archivers.StreamingNotSupportedException",
       "org.apache.commons.compress.archivers.zip.CharsetAccessor",
       "org.apache.commons.compress.archivers.zip.InflaterInputStreamWithStatistics",
       "org.apache.commons.compress.archivers.sevenz.NID",
       "org.apache.commons.compress.archivers.zip.CircularBuffer",
       "org.apache.commons.compress.archivers.zip.ZipFile",
       "org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator",
       "org.apache.commons.compress.compressors.lz77support.Parameters",
       "org.apache.commons.compress.archivers.zip.Zip64Mode",
       "org.apache.commons.compress.archivers.zip.ZipExtraField",
       "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$1",
       "org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock",
       "org.apache.commons.compress.archivers.zip.X7875_NewUnix",
       "org.apache.commons.compress.archivers.dump.DumpArchiveSummary",
       "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream",
       "org.apache.commons.compress.archivers.dump.UnrecognizedFormatException",
       "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry",
       "org.apache.commons.compress.archivers.examples.CloseableConsumerAdapter",
       "org.apache.commons.compress.archivers.Lister",
       "org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$1",
       "org.apache.commons.compress.archivers.zip.GeneralPurposeBit",
       "org.apache.commons.compress.compressors.FileNameUtil",
       "org.apache.commons.compress.archivers.dump.UnsupportedCompressionAlgorithmException",
       "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream$1",
       "org.apache.commons.compress.compressors.lzma.LZMACompressorOutputStream",
       "org.apache.commons.compress.compressors.lzma.LZMAUtils",
       "org.apache.commons.compress.compressors.snappy.FramedSnappyDialect",
       "org.apache.commons.compress.archivers.zip.StreamCompressor$SeekableByteChannelCompressor",
       "org.apache.commons.compress.archivers.zip.UnicodePathExtraField",
       "org.apache.commons.compress.compressors.lz77support.Parameters$1",
       "org.apache.commons.compress.archivers.zip.AsiExtraField",
       "org.apache.commons.compress.compressors.deflate64.HuffmanState",
       "org.apache.commons.compress.archivers.tar.TarConstants",
       "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream",
       "org.apache.commons.compress.archivers.dump.InvalidFormatException",
       "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
       "org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecoderState",
       "org.apache.commons.compress.archivers.zip.StreamCompressor$ScatterGatherBackingStoreCompressor",
       "org.apache.commons.compress.compressors.zstandard.ZstdUtils",
       "org.apache.commons.compress.archivers.zip.NioZipEncoding",
       "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$Parameters",
       "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData",
       "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream",
       "org.apache.commons.compress.parallel.InputStreamSupplier",
       "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$CompressedEntry",
       "org.apache.commons.compress.archivers.tar.TarUtils$1",
       "org.apache.commons.compress.archivers.dump.Dirent",
       "org.apache.commons.compress.compressors.deflate64.HuffmanDecoder",
       "org.apache.commons.compress.compressors.lzma.LZMAUtils$CachedAvailability",
       "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream",
       "org.apache.commons.compress.archivers.sevenz.SevenZMethod",
       "org.apache.commons.compress.compressors.lz77support.LZ77Compressor$BackReference",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource",
       "org.apache.commons.compress.archivers.zip.ScatterStatistics",
       "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource",
       "org.apache.commons.compress.compressors.xz.XZCompressorOutputStream",
       "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
       "org.apache.commons.compress.compressors.CompressorOutputStream",
       "org.apache.commons.compress.compressors.brotli.BrotliUtils$CachedAvailability",
       "org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream",
       "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$1",
       "org.apache.commons.compress.archivers.zip.ExtraFieldUtils",
       "org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField",
       "org.apache.commons.compress.compressors.CompressorStreamFactory$1",
       "org.apache.commons.compress.compressors.CompressorStreamFactory$2",
       "org.apache.commons.compress.compressors.pack200.InMemoryCachingStreamBridge",
       "org.apache.commons.compress.compressors.CompressorInputStream",
       "org.apache.commons.compress.compressors.bzip2.Rand",
       "org.apache.commons.compress.changes.ChangeSet",
       "org.apache.commons.compress.archivers.arj.LocalFileHeader$Flags",
       "org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Callback",
       "org.apache.commons.compress.archivers.zip.StreamCompressor$OutputStreamCompressor",
       "org.apache.commons.compress.archivers.cpio.CpioUtil",
       "org.apache.commons.compress.utils.FlushShieldFilterOutputStream",
       "org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel",
       "org.apache.commons.compress.archivers.tar.TarArchiveInputStream$TarArchiveSparseZeroInputStream",
       "org.apache.commons.compress.archivers.zip.UnshrinkingInputStream",
       "org.apache.commons.compress.archivers.arj.LocalFileHeader$Methods",
       "org.apache.commons.compress.archivers.dump.ShortFileException",
       "org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream",
       "org.apache.commons.compress.archivers.zip.ZipEightByteInteger",
       "org.apache.commons.compress.compressors.gzip.GzipUtils",
       "org.apache.commons.compress.archivers.zip.X0019_EncryptionRecipientCertificateList",
       "org.apache.commons.compress.archivers.examples.Archiver",
       "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator",
       "org.apache.commons.compress.archivers.arj.MainHeader",
       "org.apache.commons.compress.archivers.zip.ZipConstants",
       "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream",
       "org.apache.commons.compress.archivers.examples.Archiver$1",
       "org.apache.commons.compress.archivers.tar.TarArchiveInputStream$1",
       "org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream",
       "org.apache.commons.compress.archivers.examples.Archiver$6",
       "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream",
       "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream",
       "org.apache.commons.compress.archivers.zip.ZipEncoding",
       "org.apache.commons.compress.archivers.examples.Archiver$2",
       "org.apache.commons.compress.archivers.examples.Archiver$3",
       "org.apache.commons.compress.archivers.sevenz.Coder",
       "org.apache.commons.compress.archivers.examples.Archiver$4",
       "org.apache.commons.compress.compressors.xz.XZUtils$CachedAvailability",
       "org.apache.commons.compress.archivers.examples.Archiver$5",
       "org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder",
       "org.apache.commons.compress.archivers.zip.ZipFile$1",
       "org.apache.commons.compress.archivers.zip.ZipFile$2",
       "org.apache.commons.compress.archivers.zip.ZipFile$3",
       "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream",
       "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry",
       "org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry",
       "org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$UncompressedState",
       "org.apache.commons.compress.archivers.ArchiveOutputStream",
       "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream$1",
       "org.apache.commons.compress.utils.CloseShieldFilterInputStream",
       "org.apache.commons.compress.parallel.ScatterGatherBackingStore",
       "org.apache.commons.compress.archivers.zip.Zip64RequiredException",
       "org.apache.commons.compress.compressors.pack200.Pack200Strategy",
       "org.apache.commons.compress.archivers.examples.CloseableConsumer$2",
       "org.apache.commons.compress.compressors.gzip.GzipParameters",
       "org.apache.commons.compress.archivers.examples.CloseableConsumer$1",
       "org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier",
       "org.apache.commons.compress.archivers.sevenz.SevenZFile",
       "org.apache.commons.compress.archivers.arj.ArjArchiveEntry$HostOs",
       "org.apache.commons.compress.compressors.lz4.XXHash32",
       "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream",
       "org.apache.commons.compress.archivers.tar.TarArchiveStructSparse",
       "org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge",
       "org.apache.commons.compress.archivers.zip.BinaryTree",
       "org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block",
       "org.apache.commons.compress.archivers.sevenz.Coders$DeflateDecoder",
       "org.apache.commons.compress.utils.ByteUtils",
       "org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder",
       "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
       "org.apache.commons.compress.compressors.CompressorStreamProvider",
       "org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader",
       "org.apache.commons.compress.archivers.arj.MainHeader$Flags",
       "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy",
       "org.apache.commons.compress.compressors.CompressorException",
       "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream$1",
       "org.apache.commons.compress.archivers.sevenz.SubStreamsInfo",
       "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream",
       "org.apache.commons.compress.utils.ChecksumCalculatingInputStream",
       "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream",
       "org.apache.commons.compress.utils.IOUtils",
       "org.apache.commons.compress.archivers.sevenz.Coders$DeflateDecoder$DeflateDecoderOutputStream",
       "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField",
       "org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block$BlockType",
       "org.apache.commons.compress.archivers.zip.ZipFile$BoundedFileChannelInputStream",
       "org.apache.commons.compress.archivers.ArchiveStreamProvider",
       "org.apache.commons.compress.archivers.jar.JarArchiveEntry",
       "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData",
       "org.apache.commons.compress.archivers.examples.Archiver$Finisher",
       "org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE",
       "org.apache.commons.compress.archivers.sevenz.BindPair",
       "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
       "org.apache.commons.compress.archivers.zip.UnixStat",
       "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature",
       "org.apache.commons.compress.utils.FileNameUtils",
       "org.apache.commons.compress.archivers.sevenz.Coders$BZIP2Decoder",
       "org.apache.commons.compress.compressors.pack200.Pack200Strategy$2",
       "org.apache.commons.compress.compressors.pack200.Pack200Strategy$1",
       "org.apache.commons.compress.archivers.sevenz.CLI$1",
       "org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1",
       "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream",
       "org.apache.commons.compress.archivers.sevenz.Folder",
       "org.apache.commons.compress.compressors.bzip2.BlockSort",
       "org.apache.commons.compress.archivers.zip.ZipSplitOutputStream",
       "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField",
       "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream",
       "org.apache.commons.compress.archivers.examples.Expander$1",
       "org.apache.commons.compress.archivers.examples.Expander$2",
       "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream",
       "org.apache.commons.compress.archivers.sevenz.SevenZFileOptions",
       "org.apache.commons.compress.utils.ByteUtils$ByteConsumer",
       "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
       "org.apache.commons.compress.archivers.zip.ZipFile$BoundedInputStream",
       "org.apache.commons.compress.archivers.zip.X0016_CertificateIdForCentralDirectory",
       "org.apache.commons.compress.archivers.sevenz.Archive",
       "org.apache.commons.compress.compressors.pack200.Pack200Utils",
       "org.apache.commons.compress.archivers.sevenz.Coders$1",
       "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream",
       "org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm",
       "org.apache.commons.compress.archivers.ArchiveInputStream",
       "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException",
       "org.apache.commons.compress.archivers.zip.PKWareExtraHeader",
       "org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1",
       "org.apache.commons.compress.archivers.sevenz.StreamMap",
       "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$1",
       "org.apache.commons.compress.archivers.cpio.CpioConstants",
       "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry",
       "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$ZipEntryWriter",
       "org.apache.commons.compress.archivers.zip.ZipLong",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequestSupplier",
       "org.apache.commons.compress.archivers.sevenz.CLI$Mode",
       "org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader",
       "org.apache.commons.compress.utils.CountingInputStream",
       "org.apache.commons.compress.archivers.examples.Expander$5",
       "org.apache.commons.compress.archivers.examples.Expander$6",
       "org.apache.commons.compress.archivers.zip.ZipShort",
       "org.apache.commons.compress.archivers.examples.Expander$3",
       "org.apache.commons.compress.archivers.examples.Expander$4",
       "org.apache.commons.compress.archivers.sevenz.CLI",
       "org.apache.commons.compress.compressors.lz77support.LZ77Compressor",
       "org.apache.commons.compress.archivers.tar.TarUtils",
       "org.apache.commons.compress.archivers.dump.DumpArchiveConstants",
       "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream$State",
       "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder",
       "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp",
       "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$1",
       "org.apache.commons.compress.archivers.examples.Expander$ArchiveEntrySupplier",
       "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$2",
       "org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel",
       "org.apache.commons.compress.changes.ChangeSetPerformer$ZipFileIterator",
       "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream$1",
       "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
       "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode",
       "org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE",
       "org.apache.commons.compress.archivers.jar.JarArchiveOutputStream",
       "org.apache.commons.compress.archivers.examples.Expander",
       "org.apache.commons.compress.utils.FixedLengthBlockOutputStream$BufferAtATimeOutputChannel",
       "org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator",
       "org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$HuffmanCodes",
       "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State",
       "org.apache.commons.compress.utils.CRC32VerifyingInputStream",
       "org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$1",
       "org.apache.commons.compress.utils.SkipShieldingInputStream",
       "org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore",
       "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream",
       "org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream",
       "org.apache.commons.compress.archivers.arj.LocalFileHeader",
       "org.apache.commons.compress.archivers.ArchiveStreamFactory",
       "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStream",
       "org.apache.commons.compress.utils.CharsetNames",
       "org.apache.commons.compress.archivers.arj.MainHeader$HostOS",
       "org.apache.commons.compress.utils.Lists",
       "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration",
       "org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment",
       "org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream$1",
       "org.apache.commons.compress.compressors.bzip2.BZip2Utils",
       "org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream$2",
       "org.apache.commons.compress.archivers.dump.DumpArchiveUtil",
       "org.apache.commons.compress.utils.SeekableInMemoryByteChannel",
       "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$1",
       "org.apache.commons.compress.archivers.zip.ExtraFieldParsingBehavior",
       "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$3",
       "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$2",
       "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$4",
       "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data",
       "org.apache.commons.compress.archivers.zip.ZipFile$Entry",
       "org.apache.commons.compress.archivers.dump.TapeInputStream$1",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode$1",
       "org.apache.commons.compress.utils.FixedLengthBlockOutputStream",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
       "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode$2",
       "org.apache.commons.compress.utils.Sets",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntryPredicate",
       "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile",
       "org.apache.commons.compress.utils.ByteUtils$InputStreamByteSupplier",
       "org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode",
       "org.apache.commons.compress.compressors.zstandard.ZstdUtils$CachedAvailability",
       "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream",
       "org.apache.commons.compress.compressors.xz.XZCompressorInputStream",
       "org.apache.commons.compress.archivers.zip.ZipUtil",
       "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream",
       "org.apache.commons.compress.compressors.brotli.BrotliUtils",
       "org.apache.commons.compress.MemoryLimitException",
       "org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream",
       "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data",
       "org.apache.commons.compress.changes.ChangeSetResults",
       "org.apache.commons.compress.compressors.snappy.PureJavaCrc32C",
       "org.apache.commons.compress.compressors.deflate.DeflateParameters",
       "org.apache.commons.compress.utils.FixedLengthBlockOutputStream$1",
       "org.apache.commons.compress.PasswordRequiredException",
       "org.apache.commons.compress.archivers.ArchiveException",
       "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream",
       "org.apache.commons.compress.utils.ChecksumVerifyingInputStream",
       "org.apache.commons.compress.archivers.arj.LocalFileHeader$FileTypes",
       "org.apache.commons.compress.archivers.sevenz.StartHeader",
       "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair",
       "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry",
       "org.apache.commons.compress.archivers.sevenz.Coders",
       "org.apache.commons.compress.compressors.z.ZCompressorInputStream",
       "org.apache.commons.compress.archivers.sevenz.Coders$CopyDecoder",
       "org.apache.commons.compress.compressors.CompressorStreamFactory",
       "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
       "org.apache.commons.compress.changes.ChangeSetPerformer",
       "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream",
       "org.apache.commons.compress.archivers.dump.DumpArchiveException",
       "org.apache.commons.compress.archivers.dump.TapeInputStream",
       "org.apache.commons.compress.archivers.zip.ZipFile$StoredStatisticsStream",
       "org.apache.commons.compress.archivers.zip.ZipMethod",
       "org.apache.commons.compress.changes.Change",
       "org.apache.commons.compress.compressors.bzip2.BZip2Constants",
       "org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm",
       "org.apache.commons.compress.utils.Charsets",
       "org.apache.commons.compress.archivers.sevenz.CoderBase",
       "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldBehavior",
       "org.apache.commons.compress.compressors.lz77support.Parameters$Builder",
       "org.apache.commons.compress.archivers.zip.ExplodingInputStream",
       "org.apache.commons.compress.utils.Iterators",
       "org.apache.commons.compress.archivers.ar.ArArchiveInputStream",
       "org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION",
       "org.apache.commons.compress.archivers.ArchiveEntry",
       "org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveEntryIterator",
       "org.apache.commons.compress.compressors.bzip2.CRC",
       "org.apache.commons.compress.archivers.examples.CloseableConsumer",
       "org.apache.commons.compress.archivers.sevenz.SevenZFile$1",
       "org.apache.commons.compress.compressors.pack200.StreamBridge",
       "org.apache.commons.compress.archivers.sevenz.SevenZFile$2",
       "org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream$1",
       "org.apache.commons.compress.archivers.zip.BitStream",
       "org.apache.commons.compress.archivers.zip.ExtraFieldUtils$1",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest",
       "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream",
       "org.apache.commons.compress.compressors.xz.XZUtils",
       "org.apache.commons.compress.archivers.sevenz.Coders$Deflate64Decoder",
       "org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField",
       "org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField",
       "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream",
       "org.apache.commons.compress.archivers.zip.X0014_X509Certificates",
       "org.apache.commons.compress.archivers.sevenz.DeltaDecoder",
       "org.apache.commons.compress.archivers.examples.Archiver$ArchiveEntryCreator",
       "org.apache.commons.compress.utils.ByteUtils$OutputStreamByteConsumer",
       "org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory",
       "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorOutputStream",
       "org.apache.commons.compress.archivers.examples.Archiver$ArchiveEntryConsumer",
       "org.apache.commons.compress.utils.BoundedInputStream",
       "org.apache.commons.compress.utils.CountingOutputStream",
       "org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile",
       "org.apache.commons.compress.archivers.zip.X000A_NTFS",
       "org.apache.commons.compress.archivers.zip.ZipEncodingHelper",
       "org.apache.commons.compress.archivers.sevenz.SevenZFileOptions$1",
       "org.apache.commons.compress.archivers.sevenz.CLI$Mode$1",
       "org.apache.commons.compress.utils.InputStreamStatistics",
       "org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE",
       "org.apache.commons.compress.archivers.zip.ZipArchiveEntry$1",
       "org.apache.commons.compress.archivers.ar.ArArchiveEntry",
       "org.apache.commons.compress.compressors.lz77support.LZ77Compressor$EOD",
       "org.apache.commons.compress.archivers.EntryStreamOffsets"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.iq80.snappy:snappy:jar:0.4:compile",
      "coordinates": "org.iq80.snappy:snappy:0.4",
      "groupId": "org.iq80.snappy",
      "artifactId": "snappy",
      "version": "0.4",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 57954,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.codehaus.plexus:plexus-archiver:jar:4.2.2:compile",
      "allTypes": [
       "org.iq80.snappy.SnappyFramedOutputStream",
       "org.iq80.snappy.BufferRecycler",
       "org.iq80.snappy.AbstractSnappyInputStream$FrameMetaData",
       "org.iq80.snappy.AbstractSnappyInputStream$FrameAction",
       "org.iq80.snappy.SlowMemory",
       "org.iq80.snappy.HadoopSnappyCodec",
       "org.iq80.snappy.SnappyFramed",
       "org.iq80.snappy.SnappyOutputStream",
       "org.iq80.snappy.AbstractSnappyInputStream",
       "org.iq80.snappy.Crc32C",
       "org.iq80.snappy.Snappy",
       "org.iq80.snappy.HadoopSnappyCodec$SnappyCompressionInputStream",
       "org.iq80.snappy.SnappyCompressor",
       "org.iq80.snappy.SnappyDecompressor",
       "org.iq80.snappy.CorruptionException",
       "org.iq80.snappy.SnappyInputStream",
       "org.iq80.snappy.Memory",
       "org.iq80.snappy.UnsafeMemory",
       "org.iq80.snappy.HadoopSnappyCodec$SnappyCompressionOutputStream",
       "org.iq80.snappy.SnappyFramedInputStream",
       "org.iq80.snappy.AbstractSnappyOutputStream",
       "org.iq80.snappy.AbstractSnappyInputStream$FrameData",
       "org.iq80.snappy.Main",
       "org.iq80.snappy.SnappyInternalUtils"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.tukaani:xz:jar:1.8:runtime",
      "coordinates": "org.tukaani:xz:1.8",
      "groupId": "org.tukaani",
      "artifactId": "xz",
      "version": "1.8",
      "scope": "runtime",
      "packaging": "jar",
      "omitted": false,
      "size": 108555,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.codehaus.plexus:plexus-archiver:jar:4.2.2:compile",
      "allTypes": [
       "org.tukaani.xz.ArrayCache",
       "org.tukaani.xz.lz.HC4",
       "org.tukaani.xz.LZMA2Options",
       "org.tukaani.xz.MemoryLimitException",
       "org.tukaani.xz.lzma.LZMAEncoder$LiteralEncoder",
       "org.tukaani.xz.BasicArrayCache$CyclicStack",
       "org.tukaani.xz.DeltaOptions",
       "org.tukaani.xz.lz.Hash234",
       "org.tukaani.xz.rangecoder.RangeEncoderToStream",
       "org.tukaani.xz.simple.SimpleFilter",
       "org.tukaani.xz.DeltaInputStream",
       "org.tukaani.xz.SingleXZInputStream",
       "org.tukaani.xz.lz.LZEncoder",
       "org.tukaani.xz.XZInputStream",
       "org.tukaani.xz.ARMOptions",
       "org.tukaani.xz.CountingOutputStream",
       "org.tukaani.xz.check.CRC64",
       "org.tukaani.xz.lzma.LZMAEncoder$LiteralEncoder$LiteralSubencoder",
       "org.tukaani.xz.rangecoder.RangeDecoderFromStream",
       "org.tukaani.xz.LZMA2Encoder",
       "org.tukaani.xz.LZMAInputStream",
       "org.tukaani.xz.common.EncoderUtil",
       "org.tukaani.xz.ARMThumbOptions",
       "org.tukaani.xz.delta.DeltaCoder",
       "org.tukaani.xz.rangecoder.RangeEncoder",
       "org.tukaani.xz.SimpleInputStream",
       "org.tukaani.xz.simple.ARMThumb",
       "org.tukaani.xz.lzma.LZMACoder$LengthCoder",
       "org.tukaani.xz.rangecoder.RangeEncoderToBuffer",
       "org.tukaani.xz.FilterCoder",
       "org.tukaani.xz.delta.DeltaEncoder",
       "org.tukaani.xz.lzma.LZMAEncoder$LengthEncoder",
       "org.tukaani.xz.lzma.LZMAEncoder$1",
       "org.tukaani.xz.simple.SPARC",
       "org.tukaani.xz.simple.PowerPC",
       "org.tukaani.xz.BasicArrayCache$LazyHolder",
       "org.tukaani.xz.lzma.LZMADecoder$LengthDecoder",
       "org.tukaani.xz.SeekableXZInputStream",
       "org.tukaani.xz.simple.IA64",
       "org.tukaani.xz.lzma.LZMADecoder$1",
       "org.tukaani.xz.CountingInputStream",
       "org.tukaani.xz.DeltaEncoder",
       "org.tukaani.xz.index.IndexRecord",
       "org.tukaani.xz.RawCoder",
       "org.tukaani.xz.LZMA2OutputStream",
       "org.tukaani.xz.rangecoder.RangeDecoderFromBuffer",
       "org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder",
       "org.tukaani.xz.LZMA2InputStream",
       "org.tukaani.xz.CorruptedInputException",
       "org.tukaani.xz.DeltaDecoder",
       "org.tukaani.xz.CloseIgnoringInputStream",
       "org.tukaani.xz.delta.DeltaDecoder",
       "org.tukaani.xz.LZMA2Coder",
       "org.tukaani.xz.rangecoder.RangeDecoder",
       "org.tukaani.xz.SPARCOptions",
       "org.tukaani.xz.lz.BT4",
       "org.tukaani.xz.rangecoder.RangeCoder",
       "org.tukaani.xz.BCJEncoder",
       "org.tukaani.xz.SeekableInputStream",
       "org.tukaani.xz.index.IndexHash",
       "org.tukaani.xz.check.CRC32",
       "org.tukaani.xz.lz.Matches",
       "org.tukaani.xz.simple.ARM",
       "org.tukaani.xz.common.Util",
       "org.tukaani.xz.BasicArrayCache",
       "org.tukaani.xz.FilterOptions",
       "org.tukaani.xz.lzma.LZMAEncoderFast",
       "org.tukaani.xz.common.StreamFlags",
       "org.tukaani.xz.common.DecoderUtil",
       "org.tukaani.xz.XZFormatException",
       "org.tukaani.xz.XZIOException",
       "org.tukaani.xz.UnsupportedOptionsException",
       "org.tukaani.xz.BCJCoder",
       "org.tukaani.xz.lz.CRC32Hash",
       "org.tukaani.xz.check.SHA256",
       "org.tukaani.xz.DeltaCoder",
       "org.tukaani.xz.LZMAOutputStream",
       "org.tukaani.xz.lz.LZDecoder",
       "org.tukaani.xz.BasicArrayCache$CacheMap",
       "org.tukaani.xz.SimpleOutputStream",
       "org.tukaani.xz.XZ",
       "org.tukaani.xz.simple.X86",
       "org.tukaani.xz.PowerPCOptions",
       "org.tukaani.xz.check.Check",
       "org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder",
       "org.tukaani.xz.index.IndexBase",
       "org.tukaani.xz.index.BlockInfo",
       "org.tukaani.xz.FilterEncoder",
       "org.tukaani.xz.index.IndexDecoder",
       "org.tukaani.xz.lzma.State",
       "org.tukaani.xz.index.IndexEncoder",
       "org.tukaani.xz.lzma.LZMACoder$LiteralCoder",
       "org.tukaani.xz.ResettableArrayCache",
       "org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder",
       "org.tukaani.xz.lzma.Optimum",
       "org.tukaani.xz.DeltaOutputStream",
       "org.tukaani.xz.lzma.LZMADecoder",
       "org.tukaani.xz.LZMA2Decoder",
       "org.tukaani.xz.BlockInputStream",
       "org.tukaani.xz.check.None",
       "org.tukaani.xz.UncompressedLZMA2OutputStream",
       "org.tukaani.xz.X86Options",
       "org.tukaani.xz.lzma.LZMACoder",
       "org.tukaani.xz.IndexIndicatorException",
       "org.tukaani.xz.FinishableWrapperOutputStream",
       "org.tukaani.xz.lzma.LZMAEncoderNormal",
       "org.tukaani.xz.BlockOutputStream",
       "org.tukaani.xz.BCJOptions",
       "org.tukaani.xz.BasicArrayCache$1",
       "org.tukaani.xz.FilterDecoder",
       "org.tukaani.xz.lzma.LZMAEncoder",
       "org.tukaani.xz.IA64Options",
       "org.tukaani.xz.FinishableOutputStream",
       "org.tukaani.xz.SeekableFileInputStream",
       "org.tukaani.xz.XZOutputStream",
       "org.tukaani.xz.BCJDecoder"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "commons-io:commons-io:jar:2.7:provided",
    "coordinates": "commons-io:commons-io:2.7",
    "groupId": "commons-io",
    "artifactId": "commons-io",
    "version": "2.7",
    "scope": "provided",
    "packaging": "jar",
    "omitted": false,
    "size": 276413,
    "type": "direct",
    "status": "used",
    "parent": "com.saucelabs:ci-sauce:jar:1.151",
    "allTypes": [
     "org.apache.commons.io.LineIterator",
     "org.apache.commons.io.input.ObservableInputStream",
     "org.apache.commons.io.comparator.AbstractFileComparator",
     "org.apache.commons.io.output.FilterCollectionWriter",
     "org.apache.commons.io.input.ReaderInputStream",
     "org.apache.commons.io.output.NullPrintStream",
     "org.apache.commons.io.input.XmlStreamReaderException",
     "org.apache.commons.io.FileCleaningTracker$Tracker",
     "org.apache.commons.io.EndianUtils",
     "org.apache.commons.io.serialization.RegexpClassNameMatcher",
     "org.apache.commons.io.output.FileWriterWithEncoding",
     "org.apache.commons.io.output.AbstractByteArrayOutputStream$InputStreamConstructor",
     "org.apache.commons.io.input.CloseShieldInputStream",
     "org.apache.commons.io.output.AppendableWriter",
     "org.apache.commons.io.filefilter.EmptyFileFilter",
     "org.apache.commons.io.input.XmlStreamReader",
     "org.apache.commons.io.file.CopyDirectoryVisitor",
     "org.apache.commons.io.filefilter.NotFileFilter",
     "org.apache.commons.io.filefilter.TrueFileFilter",
     "org.apache.commons.io.input.ReversedLinesFileReader$FilePart",
     "org.apache.commons.io.input.ObservableInputStream$Observer",
     "org.apache.commons.io.filefilter.AgeFileFilter",
     "org.apache.commons.io.serialization.ValidatingObjectInputStream",
     "org.apache.commons.io.CopyUtils",
     "org.apache.commons.io.IOExceptionWithCause",
     "org.apache.commons.io.DirectoryWalker",
     "org.apache.commons.io.ByteOrderParser",
     "org.apache.commons.io.output.ByteArrayOutputStream",
     "org.apache.commons.io.filefilter.ConditionalFileFilter",
     "org.apache.commons.io.HexDump",
     "org.apache.commons.io.input.ProxyReader",
     "org.apache.commons.io.comparator.ExtensionFileComparator",
     "org.apache.commons.io.input.buffer.CircularBufferInputStream",
     "org.apache.commons.io.serialization.ClassNameMatcher",
     "org.apache.commons.io.output.ProxyCollectionWriter",
     "org.apache.commons.io.filefilter.DirectoryFileFilter",
     "org.apache.commons.io.input.BrokenReader",
     "org.apache.commons.io.file.Counters$Counter",
     "org.apache.commons.io.IOUtils",
     "org.apache.commons.io.filefilter.SuffixFileFilter",
     "org.apache.commons.io.output.ProxyWriter",
     "org.apache.commons.io.input.NullInputStream",
     "org.apache.commons.io.comparator.LastModifiedFileComparator",
     "org.apache.commons.io.file.Counters$LongPathCounters",
     "org.apache.commons.io.TaggedIOException",
     "org.apache.commons.io.FileSystem",
     "org.apache.commons.io.input.buffer.PeekableInputStream",
     "org.apache.commons.io.file.Counters$LongCounter",
     "org.apache.commons.io.FileCleaningTracker",
     "org.apache.commons.io.input.UnixLineEndingInputStream",
     "org.apache.commons.io.filefilter.DelegateFileFilter",
     "org.apache.commons.io.input.Tailer",
     "org.apache.commons.io.filefilter.AndFileFilter",
     "org.apache.commons.io.input.TeeInputStream",
     "org.apache.commons.io.input.BoundedReader",
     "org.apache.commons.io.input.WindowsLineEndingInputStream",
     "org.apache.commons.io.output.ChunkedOutputStream",
     "org.apache.commons.io.file.SimplePathVisitor",
     "org.apache.commons.io.input.CharSequenceReader",
     "org.apache.commons.io.input.MessageDigestCalculatingInputStream",
     "org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream",
     "org.apache.commons.io.comparator.DefaultFileComparator",
     "org.apache.commons.io.filefilter.NameFileFilter",
     "org.apache.commons.io.output.StringBuilderWriter",
     "org.apache.commons.io.filefilter.CanExecuteFileFilter",
     "org.apache.commons.io.output.TaggedWriter",
     "org.apache.commons.io.serialization.FullClassNameMatcher",
     "org.apache.commons.io.file.Counters$1",
     "org.apache.commons.io.output.TeeOutputStream",
     "org.apache.commons.io.file.AccumulatorPathVisitor",
     "org.apache.commons.io.Charsets",
     "org.apache.commons.io.output.XmlStreamWriter",
     "org.apache.commons.io.output.CountingOutputStream",
     "org.apache.commons.io.file.PathUtils$1",
     "org.apache.commons.io.input.InfiniteCircularInputStream",
     "org.apache.commons.io.monitor.FileAlterationListener",
     "org.apache.commons.io.output.DeferredFileOutputStream",
     "org.apache.commons.io.comparator.CompositeFileComparator",
     "org.apache.commons.io.output.ChunkedWriter",
     "org.apache.commons.io.FileUtils",
     "org.apache.commons.io.output.BrokenOutputStream",
     "org.apache.commons.io.input.SwappedDataInputStream",
     "org.apache.commons.io.output.TaggedOutputStream",
     "org.apache.commons.io.comparator.SizeFileComparator",
     "org.apache.commons.io.file.PathUtils$RelativeSortedPaths",
     "org.apache.commons.io.input.NullReader",
     "org.apache.commons.io.filefilter.WildcardFilter",
     "org.apache.commons.io.output.NullOutputStream",
     "org.apache.commons.io.output.LockableFileWriter",
     "org.apache.commons.io.filefilter.WildcardFileFilter",
     "org.apache.commons.io.comparator.DirectoryFileComparator",
     "org.apache.commons.io.output.WriterOutputStream",
     "org.apache.commons.io.filefilter.IOFileFilter",
     "org.apache.commons.io.input.CloseShieldReader",
     "org.apache.commons.io.filefilter.MagicNumberFileFilter",
     "org.apache.commons.io.input.BoundedInputStream",
     "org.apache.commons.io.input.TaggedReader",
     "org.apache.commons.io.output.NullWriter",
     "org.apache.commons.io.monitor.FileAlterationObserver",
     "org.apache.commons.io.input.CharacterSetFilterReader",
     "org.apache.commons.io.file.Counters$BigIntegerPathCounters",
     "org.apache.commons.io.filefilter.FileFilterUtils",
     "org.apache.commons.io.input.AbstractCharacterFilterReader",
     "org.apache.commons.io.input.CharacterFilterReader",
     "org.apache.commons.io.comparator.ReverseComparator",
     "org.apache.commons.io.file.Counters$AbstractPathCounters",
     "org.apache.commons.io.output.CloseShieldWriter",
     "org.apache.commons.io.input.BOMInputStream",
     "org.apache.commons.io.file.Counters$BigIntegerCounter",
     "org.apache.commons.io.input.TaggedInputStream",
     "org.apache.commons.io.output.AbstractByteArrayOutputStream",
     "org.apache.commons.io.input.ReversedLinesFileReader$1",
     "org.apache.commons.io.IOIndexedException",
     "org.apache.commons.io.filefilter.AbstractFileFilter",
     "org.apache.commons.io.ByteOrderMark",
     "org.apache.commons.io.filefilter.FileFileFilter",
     "org.apache.commons.io.input.DemuxInputStream",
     "org.apache.commons.io.output.ProxyOutputStream",
     "org.apache.commons.io.function.IOSupplier",
     "org.apache.commons.io.filefilter.HiddenFileFilter",
     "org.apache.commons.io.file.CountingPathVisitor",
     "org.apache.commons.io.input.buffer.CircularByteBuffer",
     "org.apache.commons.io.FileExistsException",
     "org.apache.commons.io.input.BrokenInputStream",
     "org.apache.commons.io.filefilter.FalseFileFilter",
     "org.apache.commons.io.IOExceptionList",
     "org.apache.commons.io.function.IOConsumer",
     "org.apache.commons.io.input.TailerListener",
     "org.apache.commons.io.file.DeletingPathVisitor",
     "org.apache.commons.io.filefilter.CanReadFileFilter",
     "org.apache.commons.io.output.DemuxOutputStream",
     "org.apache.commons.io.FilenameUtils",
     "org.apache.commons.io.DirectoryWalker$CancelException",
     "org.apache.commons.io.monitor.FileEntry",
     "org.apache.commons.io.IOCase",
     "org.apache.commons.io.file.CleaningPathVisitor",
     "org.apache.commons.io.FileDeleteStrategy",
     "org.apache.commons.io.FileSystemUtils",
     "org.apache.commons.io.output.AppendableOutputStream",
     "org.apache.commons.io.function.IOFunction",
     "org.apache.commons.io.output.BrokenWriter",
     "org.apache.commons.io.comparator.PathFileComparator",
     "org.apache.commons.io.filefilter.SizeFileFilter",
     "org.apache.commons.io.input.ReversedLinesFileReader",
     "org.apache.commons.io.output.TeeWriter",
     "org.apache.commons.io.monitor.FileAlterationListenerAdaptor",
     "org.apache.commons.io.filefilter.OrFileFilter",
     "org.apache.commons.io.input.TeeReader",
     "org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver",
     "org.apache.commons.io.input.TailerListenerAdapter",
     "org.apache.commons.io.filefilter.RegexFileFilter",
     "org.apache.commons.io.file.Counters",
     "org.apache.commons.io.output.ClosedOutputStream",
     "org.apache.commons.io.output.ClosedWriter",
     "org.apache.commons.io.output.CloseShieldOutputStream",
     "org.apache.commons.io.input.ClosedInputStream",
     "org.apache.commons.io.input.CountingInputStream",
     "org.apache.commons.io.input.UnsynchronizedByteArrayInputStream",
     "org.apache.commons.io.monitor.FileAlterationMonitor",
     "org.apache.commons.io.ThreadMonitor",
     "org.apache.commons.io.FileCleaner",
     "org.apache.commons.io.serialization.WildcardClassNameMatcher",
     "org.apache.commons.io.input.CharSequenceInputStream",
     "org.apache.commons.io.filefilter.PrefixFileFilter",
     "org.apache.commons.io.comparator.NameFileComparator",
     "org.apache.commons.io.FileCleaningTracker$Reaper",
     "org.apache.commons.io.file.Counters$PathCounters",
     "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
     "org.apache.commons.io.input.AutoCloseInputStream",
     "org.apache.commons.io.file.PathUtils",
     "org.apache.commons.io.input.ProxyInputStream",
     "org.apache.commons.io.output.ThresholdingOutputStream",
     "org.apache.commons.io.input.ClassLoaderObjectInputStream",
     "org.apache.commons.io.input.ClosedReader",
     "org.apache.commons.io.input.SequenceReader",
     "org.apache.commons.io.filefilter.CanWriteFileFilter"
    ],
    "usedTypes": [
     "org.apache.commons.io.IOUtils",
     "org.apache.commons.io.output.NullOutputStream",
     "org.apache.commons.io.FileUtils"
    ],
    "usageRatio": 0.017045454545454544,
    "children": []
   },
   {
    "id": "org.apache.commons:commons-lang3:jar:3.10:compile",
    "coordinates": "org.apache.commons:commons-lang3:3.10",
    "groupId": "org.apache.commons",
    "artifactId": "commons-lang3",
    "version": "3.10",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 523372,
    "type": "direct",
    "status": "used",
    "parent": "com.saucelabs:ci-sauce:jar:1.151",
    "allTypes": [
     "org.apache.commons.lang3.time.FastDatePrinter$TextField",
     "org.apache.commons.lang3.builder.ToStringSummary",
     "org.apache.commons.lang3.concurrent.ConcurrentUtils",
     "org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover",
     "org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer",
     "org.apache.commons.lang3.reflect.TypeLiteral",
     "org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy",
     "org.apache.commons.lang3.Functions$FailableBiConsumer",
     "org.apache.commons.lang3.time.FastDatePrinter$Rule",
     "org.apache.commons.lang3.StringUtils",
     "org.apache.commons.lang3.exception.DefaultExceptionContext",
     "org.apache.commons.lang3.tuple.Pair",
     "org.apache.commons.lang3.builder.IDKey",
     "org.apache.commons.lang3.CharEncoding",
     "org.apache.commons.lang3.compare.ComparableUtils$1",
     "org.apache.commons.lang3.builder.HashCodeBuilder",
     "org.apache.commons.lang3.time.StopWatch$State$1",
     "org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField",
     "org.apache.commons.lang3.text.FormattableUtils",
     "org.apache.commons.lang3.text.translate.OctalUnescaper",
     "org.apache.commons.lang3.time.StopWatch$State$4",
     "org.apache.commons.lang3.tuple.Triple",
     "org.apache.commons.lang3.time.StopWatch$State$3",
     "org.apache.commons.lang3.time.StopWatch$State$2",
     "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule",
     "org.apache.commons.lang3.concurrent.TimedSemaphore",
     "org.apache.commons.lang3.text.ExtendedMessageFormat",
     "org.apache.commons.lang3.JavaVersion",
     "org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate",
     "org.apache.commons.lang3.concurrent.CircuitBreakingException",
     "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategyClosed",
     "org.apache.commons.lang3.time.StopWatch",
     "org.apache.commons.lang3.concurrent.LazyInitializer",
     "org.apache.commons.lang3.text.translate.UnicodeUnescaper",
     "org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl",
     "org.apache.commons.lang3.exception.ExceptionUtils",
     "org.apache.commons.lang3.RandomUtils",
     "org.apache.commons.lang3.builder.DiffBuilder$1",
     "org.apache.commons.lang3.builder.ReflectionDiffBuilder",
     "org.apache.commons.lang3.time.DateUtils$ModifyType",
     "org.apache.commons.lang3.builder.DiffBuilder$4",
     "org.apache.commons.lang3.builder.DiffBuilder$5",
     "org.apache.commons.lang3.text.StrMatcher$CharMatcher",
     "org.apache.commons.lang3.builder.DiffBuilder$2",
     "org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
     "org.apache.commons.lang3.builder.DiffBuilder$3",
     "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State$1",
     "org.apache.commons.lang3.BooleanUtils",
     "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State$2",
     "org.apache.commons.lang3.SerializationUtils",
     "org.apache.commons.lang3.BitField",
     "org.apache.commons.lang3.builder.StandardToStringStyle",
     "org.apache.commons.lang3.arch.Processor",
     "org.apache.commons.lang3.reflect.InheritanceUtils",
     "org.apache.commons.lang3.builder.DiffBuilder$8",
     "org.apache.commons.lang3.builder.DiffBuilder$9",
     "org.apache.commons.lang3.builder.DiffBuilder$6",
     "org.apache.commons.lang3.builder.DiffBuilder$7",
     "org.apache.commons.lang3.text.StrMatcher$StringMatcher",
     "org.apache.commons.lang3.mutable.MutableByte",
     "org.apache.commons.lang3.builder.EqualsBuilder",
     "org.apache.commons.lang3.tuple.ImmutableTriple",
     "org.apache.commons.lang3.SystemUtils",
     "org.apache.commons.lang3.Functions",
     "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults",
     "org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth",
     "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle",
     "org.apache.commons.lang3.time.DateUtils",
     "org.apache.commons.lang3.time.TimeZones",
     "org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION",
     "org.apache.commons.lang3.reflect.TypeUtils$1",
     "org.apache.commons.lang3.Validate",
     "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategyOpen",
     "org.apache.commons.lang3.tuple.Triple$TripleAdapter",
     "org.apache.commons.lang3.time.DurationFormatUtils",
     "org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler",
     "org.apache.commons.lang3.time.StopWatch$State",
     "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle",
     "org.apache.commons.lang3.exception.CloneFailedException",
     "org.apache.commons.lang3.reflect.ConstructorUtils",
     "org.apache.commons.lang3.time.FastDateParser",
     "org.apache.commons.lang3.mutable.MutableInt",
     "org.apache.commons.lang3.CharRange",
     "org.apache.commons.lang3.Functions$FailableCallable",
     "org.apache.commons.lang3.compare.ComparableUtils",
     "org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker",
     "org.apache.commons.lang3.Functions$FailableSupplier",
     "org.apache.commons.lang3.concurrent.ConcurrentUtils$ConstantFuture",
     "org.apache.commons.lang3.Charsets",
     "org.apache.commons.lang3.reflect.MemberUtils",
     "org.apache.commons.lang3.tuple.MutablePair",
     "org.apache.commons.lang3.time.FastDateParser$StrategyParser",
     "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField",
     "org.apache.commons.lang3.text.StrLookup$MapStrLookup",
     "org.apache.commons.lang3.mutable.MutableObject",
     "org.apache.commons.lang3.text.StrSubstitutor",
     "org.apache.commons.lang3.Functions$FailableBiPredicate",
     "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer",
     "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule",
     "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle",
     "org.apache.commons.lang3.time.FastDatePrinter$DayInWeekField",
     "org.apache.commons.lang3.time.StopWatch$SplitState",
     "org.apache.commons.lang3.Conversion",
     "org.apache.commons.lang3.concurrent.ConstantInitializer",
     "org.apache.commons.lang3.builder.Diff",
     "org.apache.commons.lang3.ClassPathUtils",
     "org.apache.commons.lang3.CharRange$CharacterIterator",
     "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker",
     "org.apache.commons.lang3.ThreadUtils",
     "org.apache.commons.lang3.compare.ComparableUtils$ComparableCheckBuilder",
     "org.apache.commons.lang3.LocaleUtils$SyncAvoid",
     "org.apache.commons.lang3.builder.DiffResult",
     "org.apache.commons.lang3.mutable.MutableBoolean",
     "org.apache.commons.lang3.Functions$FailablePredicate",
     "org.apache.commons.lang3.text.StrBuilder",
     "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
     "org.apache.commons.lang3.mutable.MutableFloat",
     "org.apache.commons.lang3.ObjectUtils$Null",
     "org.apache.commons.lang3.time.FastDateParser$5",
     "org.apache.commons.lang3.time.FastDateParser$4",
     "org.apache.commons.lang3.time.FastDateParser$3",
     "org.apache.commons.lang3.time.FastDateParser$2",
     "org.apache.commons.lang3.time.FastDateParser$1",
     "org.apache.commons.lang3.concurrent.Memoizer",
     "org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule",
     "org.apache.commons.lang3.time.StopWatch$1",
     "org.apache.commons.lang3.builder.ToStringStyle",
     "org.apache.commons.lang3.reflect.MethodUtils",
     "org.apache.commons.lang3.text.StrMatcher$NoMatcher",
     "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy",
     "org.apache.commons.lang3.ArrayUtils",
     "org.apache.commons.lang3.time.FastDatePrinter$StringLiteral",
     "org.apache.commons.lang3.ArchUtils",
     "org.apache.commons.lang3.CharUtils",
     "org.apache.commons.lang3.text.StrMatcher",
     "org.apache.commons.lang3.mutable.MutableDouble",
     "org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField",
     "org.apache.commons.lang3.Functions$FailableConsumer",
     "org.apache.commons.lang3.time.FastDatePrinter$WeekYear",
     "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle",
     "org.apache.commons.lang3.Range",
     "org.apache.commons.lang3.builder.DiffBuilder",
     "org.apache.commons.lang3.time.FastDateParser$Strategy",
     "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1",
     "org.apache.commons.lang3.arch.Processor$Type",
     "org.apache.commons.lang3.time.FastDateFormat",
     "org.apache.commons.lang3.ThreadUtils$AlwaysTruePredicate",
     "org.apache.commons.lang3.StringEscapeUtils$CsvEscaper",
     "org.apache.commons.lang3.time.DateUtils$DateIterator",
     "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy",
     "org.apache.commons.lang3.text.translate.LookupTranslator",
     "org.apache.commons.lang3.ThreadUtils$1",
     "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField",
     "org.apache.commons.lang3.concurrent.BasicThreadFactory$1",
     "org.apache.commons.lang3.concurrent.ConcurrentInitializer",
     "org.apache.commons.lang3.time.DateFormatUtils",
     "org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper",
     "org.apache.commons.lang3.time.FastDatePrinter$NumberRule",
     "org.apache.commons.lang3.time.FormatCache",
     "org.apache.commons.lang3.tuple.MutableTriple",
     "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State",
     "org.apache.commons.lang3.concurrent.BackgroundInitializer$InitializationTask",
     "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey",
     "org.apache.commons.lang3.ClassUtils$Interfaces",
     "org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream",
     "org.apache.commons.lang3.text.translate.UnicodeEscaper",
     "org.apache.commons.lang3.time.FormatCache$MultipartKey",
     "org.apache.commons.lang3.Functions$FailableFunction",
     "org.apache.commons.lang3.CharSet",
     "org.apache.commons.lang3.ClassUtils",
     "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle",
     "org.apache.commons.lang3.Streams$FailableStream",
     "org.apache.commons.lang3.Streams",
     "org.apache.commons.lang3.concurrent.BackgroundInitializer",
     "org.apache.commons.lang3.Streams$ArrayCollector",
     "org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo",
     "org.apache.commons.lang3.concurrent.ConcurrentException",
     "org.apache.commons.lang3.time.FastDatePrinter",
     "org.apache.commons.lang3.mutable.MutableLong",
     "org.apache.commons.lang3.text.translate.AggregateTranslator",
     "org.apache.commons.lang3.event.EventUtils",
     "org.apache.commons.lang3.StringEscapeUtils",
     "org.apache.commons.lang3.time.FastTimeZone",
     "org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl",
     "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$1",
     "org.apache.commons.lang3.time.FastDateFormat$1",
     "org.apache.commons.lang3.concurrent.Computable",
     "org.apache.commons.lang3.ClassUtils$2",
     "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker",
     "org.apache.commons.lang3.time.DurationFormatUtils$Token",
     "org.apache.commons.lang3.time.CalendarUtils",
     "org.apache.commons.lang3.text.translate.NumericEntityEscaper",
     "org.apache.commons.lang3.AnnotationUtils",
     "org.apache.commons.lang3.ClassUtils$1",
     "org.apache.commons.lang3.mutable.Mutable",
     "org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder",
     "org.apache.commons.lang3.math.Fraction",
     "org.apache.commons.lang3.text.CompositeFormat",
     "org.apache.commons.lang3.builder.Diffable",
     "org.apache.commons.lang3.builder.HashCodeExclude",
     "org.apache.commons.lang3.text.translate.CodePointTranslator",
     "org.apache.commons.lang3.Functions$FailableRunnable",
     "org.apache.commons.lang3.ThreadUtils$ThreadPredicate",
     "org.apache.commons.lang3.builder.RecursiveToStringStyle",
     "org.apache.commons.lang3.EnumUtils",
     "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField",
     "org.apache.commons.lang3.reflect.FieldUtils",
     "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField",
     "org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler",
     "org.apache.commons.lang3.text.StrBuilder$StrBuilderReader",
     "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField",
     "org.apache.commons.lang3.reflect.TypeUtils",
     "org.apache.commons.lang3.RegExUtils",
     "org.apache.commons.lang3.text.FormatFactory",
     "org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter",
     "org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy",
     "org.apache.commons.lang3.builder.ReflectionToStringBuilder",
     "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral",
     "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
     "org.apache.commons.lang3.ThreadUtils$NamePredicate",
     "org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy",
     "org.apache.commons.lang3.text.translate.NumericEntityUnescaper",
     "org.apache.commons.lang3.exception.ContextedRuntimeException",
     "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField",
     "org.apache.commons.lang3.SerializationException",
     "org.apache.commons.lang3.reflect.Typed",
     "org.apache.commons.lang3.concurrent.AtomicInitializer",
     "org.apache.commons.lang3.time.DateParser",
     "org.apache.commons.lang3.Range$ComparableComparator",
     "org.apache.commons.lang3.text.StrLookup$SystemPropertiesStrLookup",
     "org.apache.commons.lang3.reflect.MemberUtils$Executable",
     "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$1",
     "org.apache.commons.lang3.concurrent.CircuitBreaker",
     "org.apache.commons.lang3.tuple.Pair$PairAdapter",
     "org.apache.commons.lang3.time.FastDateParser$PatternStrategy",
     "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
     "org.apache.commons.lang3.math.IEEE754rUtils",
     "org.apache.commons.lang3.builder.EqualsExclude",
     "org.apache.commons.lang3.ThreadUtils$ThreadGroupPredicate",
     "org.apache.commons.lang3.ClassLoaderUtils",
     "org.apache.commons.lang3.CharRange$1",
     "org.apache.commons.lang3.concurrent.BasicThreadFactory",
     "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData",
     "org.apache.commons.lang3.builder.DiffBuilder$17",
     "org.apache.commons.lang3.AnnotationUtils$1",
     "org.apache.commons.lang3.builder.DiffBuilder$18",
     "org.apache.commons.lang3.builder.DiffBuilder$13",
     "org.apache.commons.lang3.builder.DiffBuilder$14",
     "org.apache.commons.lang3.builder.DiffBuilder$15",
     "org.apache.commons.lang3.builder.DiffBuilder$16",
     "org.apache.commons.lang3.builder.ToStringBuilder",
     "org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl",
     "org.apache.commons.lang3.builder.DiffBuilder$10",
     "org.apache.commons.lang3.time.DatePrinter",
     "org.apache.commons.lang3.builder.DiffBuilder$11",
     "org.apache.commons.lang3.RandomStringUtils",
     "org.apache.commons.lang3.builder.DiffBuilder$12",
     "org.apache.commons.lang3.exception.ContextedException",
     "org.apache.commons.lang3.NotImplementedException",
     "org.apache.commons.lang3.text.StrTokenizer",
     "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper",
     "org.apache.commons.lang3.text.WordUtils",
     "org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder",
     "org.apache.commons.lang3.CharSetUtils",
     "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer",
     "org.apache.commons.lang3.Functions$FailableBiFunction",
     "org.apache.commons.lang3.builder.ToStringExclude",
     "org.apache.commons.lang3.compare.ObjectToStringComparator",
     "org.apache.commons.lang3.time.GmtTimeZone",
     "org.apache.commons.lang3.CharSequenceUtils",
     "org.apache.commons.lang3.arch.Processor$Arch",
     "org.apache.commons.lang3.LocaleUtils",
     "org.apache.commons.lang3.text.StrMatcher$TrimMatcher",
     "org.apache.commons.lang3.ObjectUtils",
     "org.apache.commons.lang3.text.StrLookup$1",
     "org.apache.commons.lang3.mutable.MutableShort",
     "org.apache.commons.lang3.text.StrLookup",
     "org.apache.commons.lang3.exception.ExceptionContext",
     "org.apache.commons.lang3.text.translate.EntityArrays",
     "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException",
     "org.apache.commons.lang3.builder.CompareToBuilder",
     "org.apache.commons.lang3.tuple.ImmutablePair",
     "org.apache.commons.lang3.event.EventListenerSupport",
     "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle",
     "org.apache.commons.lang3.concurrent.AtomicSafeInitializer",
     "org.apache.commons.lang3.text.StrMatcher$CharSetMatcher",
     "org.apache.commons.lang3.builder.Builder",
     "org.apache.commons.lang3.math.NumberUtils"
    ],
    "usedTypes": [
     "org.apache.commons.lang3.StringEscapeUtils",
     "org.apache.commons.lang3.StringUtils"
    ],
    "usageRatio": 0.006944444444444444,
    "children": []
   },
   {
    "id": "com.saucelabs:saucerest:jar:1.0.44:compile",
    "coordinates": "com.saucelabs:saucerest:1.0.44",
    "groupId": "com.saucelabs",
    "artifactId": "saucerest",
    "version": "1.0.44",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 21596,
    "type": "direct",
    "status": "used",
    "parent": "com.saucelabs:ci-sauce:jar:1.151",
    "allTypes": [
     "com.saucelabs.saucerest.SauceException",
     "com.saucelabs.saucerest.DataCenter",
     "com.saucelabs.saucerest.SauceException$NotAuthorized",
     "com.saucelabs.saucerest.SauceException$TooManyRequests",
     "com.saucelabs.saucerest.SauceSSLSocketFactory",
     "com.saucelabs.saucerest.SecurityUtils",
     "com.saucelabs.saucerest.BuildUtils",
     "com.saucelabs.saucerest.SauceREST"
    ],
    "usedTypes": [
     "com.saucelabs.saucerest.SauceREST"
    ],
    "usageRatio": 0.125,
    "children": [
     {
      "id": "commons-codec:commons-codec:jar:1.10:compile",
      "coordinates": "commons-codec:commons-codec:1.10",
      "groupId": "commons-codec",
      "artifactId": "commons-codec",
      "version": "1.10",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 284184,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.saucelabs:saucerest:jar:1.0.44:compile",
      "allTypes": [
       "org.apache.commons.codec.language.bm.Rule",
       "org.apache.commons.codec.EncoderException",
       "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult",
       "org.apache.commons.codec.StringEncoderComparator",
       "org.apache.commons.codec.language.bm.PhoneticEngine",
       "org.apache.commons.codec.language.bm.PhoneticEngine$1",
       "org.apache.commons.codec.language.ColognePhonetic$CologneBuffer",
       "org.apache.commons.codec.language.SoundexUtils",
       "org.apache.commons.codec.net.Utils",
       "org.apache.commons.codec.digest.UnixCrypt",
       "org.apache.commons.codec.binary.Base32InputStream",
       "org.apache.commons.codec.binary.BaseNCodecOutputStream",
       "org.apache.commons.codec.language.bm.Rule$Phoneme",
       "org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer",
       "org.apache.commons.codec.binary.Base64",
       "org.apache.commons.codec.language.bm.ResourceConstants",
       "org.apache.commons.codec.language.Caverphone1",
       "org.apache.commons.codec.language.bm.Languages$2",
       "org.apache.commons.codec.language.Caverphone2",
       "org.apache.commons.codec.language.bm.Lang",
       "org.apache.commons.codec.language.Caverphone",
       "org.apache.commons.codec.net.BCodec",
       "org.apache.commons.codec.Charsets",
       "org.apache.commons.codec.language.bm.Languages$1",
       "org.apache.commons.codec.binary.Base32OutputStream",
       "org.apache.commons.codec.binary.BaseNCodec",
       "org.apache.commons.codec.Encoder",
       "org.apache.commons.codec.digest.HmacUtils",
       "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication",
       "org.apache.commons.codec.DecoderException",
       "org.apache.commons.codec.digest.Crypt",
       "org.apache.commons.codec.binary.BinaryCodec",
       "org.apache.commons.codec.language.bm.Rule$PhonemeExpr",
       "org.apache.commons.codec.language.bm.Lang$LangRule",
       "org.apache.commons.codec.language.AbstractCaverphone",
       "org.apache.commons.codec.net.QuotedPrintableCodec",
       "org.apache.commons.codec.BinaryDecoder",
       "org.apache.commons.codec.binary.Base32",
       "org.apache.commons.codec.language.DaitchMokotoffSoundex$1",
       "org.apache.commons.codec.binary.BaseNCodec$Context",
       "org.apache.commons.codec.digest.Sha2Crypt",
       "org.apache.commons.codec.language.DaitchMokotoffSoundex",
       "org.apache.commons.codec.binary.Base64InputStream",
       "org.apache.commons.codec.language.bm.NameType",
       "org.apache.commons.codec.net.RFC1522Codec",
       "org.apache.commons.codec.digest.Md5Crypt",
       "org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule",
       "org.apache.commons.codec.language.Nysiis",
       "org.apache.commons.codec.BinaryEncoder",
       "org.apache.commons.codec.binary.Hex",
       "org.apache.commons.codec.binary.CharSequenceUtils",
       "org.apache.commons.codec.net.QCodec",
       "org.apache.commons.codec.StringDecoder",
       "org.apache.commons.codec.language.bm.Languages$LanguageSet",
       "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder",
       "org.apache.commons.codec.language.bm.Rule$10",
       "org.apache.commons.codec.Decoder",
       "org.apache.commons.codec.language.bm.Languages",
       "org.apache.commons.codec.language.bm.Lang$1",
       "org.apache.commons.codec.binary.Base64OutputStream",
       "org.apache.commons.codec.language.Metaphone",
       "org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch",
       "org.apache.commons.codec.language.RefinedSoundex",
       "org.apache.commons.codec.digest.HmacAlgorithms",
       "org.apache.commons.codec.language.Soundex",
       "org.apache.commons.codec.language.MatchRatingApproachEncoder",
       "org.apache.commons.codec.language.bm.Rule$Phoneme$1",
       "org.apache.commons.codec.language.bm.Rule$RPattern",
       "org.apache.commons.codec.StringEncoder",
       "org.apache.commons.codec.language.bm.BeiderMorseEncoder",
       "org.apache.commons.codec.language.bm.Rule$8",
       "org.apache.commons.codec.language.bm.Rule$7",
       "org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer",
       "org.apache.commons.codec.language.DoubleMetaphone",
       "org.apache.commons.codec.language.bm.Rule$9",
       "org.apache.commons.codec.language.bm.Rule$4",
       "org.apache.commons.codec.digest.B64",
       "org.apache.commons.codec.language.bm.Rule$3",
       "org.apache.commons.codec.binary.BaseNCodecInputStream",
       "org.apache.commons.codec.digest.MessageDigestAlgorithms",
       "org.apache.commons.codec.language.bm.Rule$6",
       "org.apache.commons.codec.CharEncoding",
       "org.apache.commons.codec.language.bm.Rule$5",
       "org.apache.commons.codec.language.bm.Rule$2",
       "org.apache.commons.codec.net.URLCodec",
       "org.apache.commons.codec.language.bm.Rule$1",
       "org.apache.commons.codec.binary.StringUtils",
       "org.apache.commons.codec.digest.DigestUtils",
       "org.apache.commons.codec.language.ColognePhonetic",
       "org.apache.commons.codec.language.bm.Rule$PhonemeList",
       "org.apache.commons.codec.language.bm.RuleType",
       "org.apache.commons.codec.language.bm.Languages$SomeLanguages"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.json:json:jar:20171018:compile",
      "coordinates": "org.json:json:20171018",
      "groupId": "org.json",
      "artifactId": "json",
      "version": "20171018",
      "scope": "compile",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "com.saucelabs:saucerest:jar:1.0.44:compile",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     }
    ]
   },
   {
    "id": "org.json:json:jar:20200518:compile",
    "coordinates": "org.json:json:20200518",
    "groupId": "org.json",
    "artifactId": "json",
    "version": "20200518",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 65966,
    "type": "direct",
    "status": "used",
    "parent": "com.saucelabs:ci-sauce:jar:1.151",
    "allTypes": [
     "org.json.JSONML",
     "org.json.XMLParserConfiguration",
     "org.json.JSONObject$Null",
     "org.json.Property",
     "org.json.XML$1",
     "org.json.XML$1$1",
     "org.json.JSONException",
     "org.json.JSONObject$1",
     "org.json.JSONObject",
     "org.json.JSONPointer$Builder",
     "org.json.HTTP",
     "org.json.JSONPointerException",
     "org.json.XML",
     "org.json.JSONStringer",
     "org.json.JSONPropertyIgnore",
     "org.json.JSONPointer",
     "org.json.HTTPTokener",
     "org.json.CDL",
     "org.json.JSONTokener",
     "org.json.Cookie",
     "org.json.JSONPropertyName",
     "org.json.JSONWriter",
     "org.json.JSONString",
     "org.json.CookieList",
     "org.json.JSONArray",
     "org.json.XMLTokener"
    ],
    "usedTypes": [
     "org.json.JSONException",
     "org.json.JSONObject",
     "org.json.JSONArray"
    ],
    "usageRatio": 0.11538461538461539,
    "children": []
   },
   {
    "id": "com.google.code.findbugs:jsr305:jar:3.0.2:compile",
    "coordinates": "com.google.code.findbugs:jsr305:3.0.2",
    "groupId": "com.google.code.findbugs",
    "artifactId": "jsr305",
    "version": "3.0.2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 19936,
    "type": "direct",
    "status": "used",
    "parent": "com.saucelabs:ci-sauce:jar:1.151",
    "allTypes": [
     "javax.annotation.Nonnull$Checker",
     "javax.annotation.Nonnegative",
     "javax.annotation.ParametersAreNullableByDefault",
     "javax.annotation.WillClose",
     "javax.annotation.CheckForSigned",
     "javax.annotation.ParametersAreNonnullByDefault",
     "javax.annotation.MatchesPattern$Checker",
     "javax.annotation.meta.Exclusive",
     "javax.annotation.meta.TypeQualifierNickname",
     "javax.annotation.meta.TypeQualifier",
     "javax.annotation.Syntax",
     "javax.annotation.Untainted",
     "javax.annotation.WillCloseWhenClosed",
     "javax.annotation.Nonnull",
     "javax.annotation.Nullable",
     "javax.annotation.meta.TypeQualifierValidator",
     "javax.annotation.OverridingMethodsMustInvokeSuper",
     "javax.annotation.RegEx$Checker",
     "javax.annotation.WillNotClose",
     "javax.annotation.meta.Exhaustive",
     "javax.annotation.Nonnegative$Checker",
     "javax.annotation.concurrent.ThreadSafe",
     "javax.annotation.MatchesPattern",
     "javax.annotation.meta.TypeQualifierDefault",
     "javax.annotation.concurrent.GuardedBy",
     "javax.annotation.meta.When",
     "javax.annotation.Signed",
     "javax.annotation.RegEx",
     "javax.annotation.CheckReturnValue",
     "javax.annotation.Tainted",
     "javax.annotation.PropertyKey",
     "javax.annotation.Detainted",
     "javax.annotation.CheckForNull",
     "javax.annotation.concurrent.Immutable",
     "javax.annotation.concurrent.NotThreadSafe"
    ],
    "usedTypes": [
     "javax.annotation.Nonnull",
     "javax.annotation.Nullable"
    ],
    "usageRatio": 0.05714285714285714,
    "children": []
   },
   {
    "id": "junit:junit:jar:4.13.1:test",
    "coordinates": "junit:junit:4.13.1",
    "groupId": "junit",
    "artifactId": "junit",
    "version": "4.13.1",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 382708,
    "type": "direct",
    "status": "used",
    "parent": "com.saucelabs:ci-sauce:jar:1.151",
    "allTypes": [
     "org.junit.internal.requests.ClassRequest$CustomSuiteMethodBuilder",
     "org.junit.runner.Request",
     "org.junit.experimental.categories.IncludeCategories",
     "org.junit.validator.AnnotationsValidator$AnnotatableValidator",
     "org.junit.rules.Stopwatch$1",
     "org.junit.experimental.theories.ParameterSignature",
     "org.junit.rules.ExpectedException$ExpectedExceptionStatement",
     "org.junit.runner.manipulation.Ordering",
     "org.junit.internal.builders.NullBuilder",
     "junit.framework.TestSuite",
     "org.junit.validator.AnnotationsValidator$FieldValidator",
     "org.junit.experimental.categories.Categories$IncludeCategory",
     "org.junit.ComparisonFailure$ComparisonCompactor",
     "org.junit.runner.Result$1",
     "org.junit.rules.ExpectedExceptionMatcherBuilder",
     "org.junit.runners.model.FrameworkMethod$1",
     "junit.framework.JUnit4TestAdapterCache$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters$InjectionType",
     "org.junit.internal.requests.SortingRequest",
     "org.junit.AfterClass",
     "junit.extensions.TestSetup",
     "org.junit.internal.ArrayComparisonFailure",
     "org.junit.experimental.theories.internal.AllMembersSupplier$1",
     "org.junit.runner.Request$1",
     "org.junit.runner.Computer$2",
     "org.junit.runner.Computer$1",
     "org.junit.rules.ErrorCollector",
     "org.junit.internal.runners.InitializationError",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters$RunAfterParams",
     "org.junit.rules.Verifier",
     "org.junit.function.ThrowingRunnable",
     "org.junit.rules.ExternalResource",
     "org.junit.experimental.results.FailureList",
     "org.junit.experimental.theories.PotentialAssignment$1",
     "junit.textui.ResultPrinter",
     "org.junit.internal.management.ReflectiveRuntimeMXBean",
     "org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor",
     "org.junit.internal.runners.rules.ValidationError",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic",
     "org.junit.internal.runners.SuiteMethod",
     "junit.extensions.ActiveTestSuite$1",
     "org.junit.runner.RunWith",
     "org.junit.experimental.results.PrintableResult",
     "org.junit.internal.management.ManagementFactory$ThreadHolder",
     "org.junit.internal.runners.statements.InvokeMethod",
     "org.junit.rules.TestWatchman$1",
     "org.junit.internal.management.FakeRuntimeMXBean",
     "junit.extensions.ActiveTestSuite",
     "org.junit.experimental.theories.Theories",
     "org.junit.internal.ComparisonCriteria",
     "org.junit.internal.requests.ClassRequest",
     "org.junit.rules.Timeout",
     "org.junit.runners.Parameterized$BeforeParam",
     "junit.framework.TestCase",
     "org.junit.Before",
     "org.junit.AssumptionViolatedException",
     "org.junit.experimental.categories.IncludeCategories$IncludesAny",
     "org.junit.Test$None",
     "org.junit.runner.manipulation.Filter",
     "org.junit.internal.runners.statements.FailOnTimeout$CallableStatement",
     "org.junit.runner.notification.RunNotifier$SafeNotifier",
     "org.junit.runner.notification.RunListener$ThreadSafe",
     "org.junit.Test",
     "junit.framework.JUnit4TestCaseFacade",
     "org.junit.runners.Parameterized$Parameter",
     "org.junit.internal.requests.FilterRequest",
     "org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue",
     "org.junit.experimental.categories.CategoryValidator",
     "org.junit.experimental.categories.Categories$ExcludeCategory",
     "org.junit.runners.model.TestClass$2",
     "org.junit.runners.model.TestClass$1",
     "org.junit.ComparisonFailure",
     "org.junit.internal.runners.MethodRoadie$1$1",
     "org.junit.runners.MethodSorters",
     "org.junit.internal.ComparisonCriteria$1",
     "org.junit.runners.model.RunnerBuilder",
     "org.junit.internal.Checks",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1$1",
     "org.junit.runner.manipulation.Filterable",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters$1",
     "org.junit.internal.management.ManagementFactory",
     "org.junit.experimental.max.MaxHistory$1",
     "org.junit.validator.AnnotationsValidator$MethodValidator",
     "org.junit.rules.RunRules",
     "org.junit.internal.MethodSorter",
     "org.junit.internal.Throwables",
     "org.junit.runner.notification.RunNotifier$1",
     "org.junit.internal.Throwables$State$4",
     "org.junit.internal.runners.model.EachTestNotifier",
     "org.junit.internal.Throwables$State$3",
     "org.junit.internal.Throwables$State$2",
     "org.junit.runner.notification.RunListener",
     "org.junit.internal.Throwables$State$1",
     "junit.framework.TestFailure",
     "org.junit.validator.AnnotationValidator",
     "org.junit.runner.Description",
     "org.junit.experimental.max.MaxCore$1$1",
     "org.junit.runner.notification.Failure",
     "org.junit.runners.model.InvalidTestClassError",
     "org.junit.validator.ValidateWith",
     "org.junit.runner.Result$SerializedForm",
     "org.junit.runners.Parameterized$RunnersFactory",
     "org.junit.internal.runners.statements.FailOnTimeout",
     "org.junit.internal.builders.AllDefaultPossibilitiesBuilder",
     "org.junit.runner.notification.RunNotifier$6",
     "org.junit.runner.notification.RunNotifier$7",
     "org.junit.runner.manipulation.Ordering$Factory",
     "org.junit.runner.notification.RunNotifier$8",
     "org.junit.runner.notification.RunNotifier$9",
     "org.junit.rules.DisableOnDebug",
     "org.junit.runner.notification.RunNotifier$2",
     "org.junit.runners.Parameterized$AssumptionViolationRunner",
     "org.junit.runner.notification.RunNotifier$3",
     "org.junit.runner.notification.RunNotifier$4",
     "org.junit.runner.notification.RunNotifier$5",
     "org.junit.runners.model.NoGenericTypeParametersValidator",
     "org.junit.runner.manipulation.Alphanumeric$1",
     "org.junit.rules.Verifier$1",
     "org.junit.runners.model.Statement",
     "junit.framework.Test",
     "org.junit.matchers.JUnitMatchers",
     "org.junit.rules.ErrorCollector$1",
     "org.junit.runners.model.MemberValueConsumer",
     "junit.framework.JUnit4TestAdapter",
     "org.junit.experimental.categories.Categories$CategoryFilter",
     "org.junit.internal.management.FakeThreadMXBean",
     "org.junit.internal.runners.TestClass",
     "org.junit.runner.manipulation.InvalidOrderingException",
     "org.junit.internal.management.ManagementFactory$FactoryHolder",
     "org.junit.experimental.ParallelComputer",
     "org.junit.internal.matchers.StacktracePrintingMatcher",
     "org.junit.runner.JUnitCommandLineParseResult$CommandLineParserError",
     "org.junit.internal.runners.statements.FailOnTimeout$Builder",
     "org.junit.rules.ExternalResource$1",
     "org.junit.runners.BlockJUnit4ClassRunner$RuleCollector",
     "org.junit.experimental.categories.ExcludeCategories",
     "org.junit.internal.runners.MethodValidator",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1",
     "org.junit.runner.Result$Listener",
     "org.junit.validator.AnnotationsValidator",
     "org.junit.internal.ExactComparisonCriteria",
     "org.junit.Assume",
     "org.junit.experimental.theories.Theories$TheoryAnchor$2",
     "org.junit.TestCouldNotBeSkippedException",
     "org.junit.internal.JUnitSystem",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParametersFactory",
     "org.junit.internal.runners.ClassRoadie",
     "org.junit.rules.Stopwatch$Clock",
     "org.junit.internal.builders.JUnit3Builder",
     "org.junit.internal.builders.IgnoredBuilder",
     "org.junit.runners.model.FrameworkMethod",
     "org.junit.internal.Throwables$State",
     "org.junit.internal.runners.statements.FailOnTimeout$1",
     "org.junit.runners.model.TestTimedOutException",
     "org.junit.experimental.theories.internal.SpecificDataPointsSupplier",
     "org.junit.runners.JUnit4",
     "org.junit.internal.runners.JUnit4ClassRunner$1",
     "org.junit.internal.runners.JUnit4ClassRunner$2",
     "org.junit.runner.JUnitCommandLineParseResult",
     "org.junit.Ignore",
     "junit.framework.Assert",
     "org.junit.runner.OrderWithValidator",
     "org.junit.runners.parameterized.ParametersRunnerFactory",
     "junit.extensions.TestDecorator",
     "org.junit.experimental.theories.ParametersSuppliedBy",
     "org.junit.internal.requests.MemoizingRequest",
     "org.junit.validator.TestClassValidator",
     "org.junit.runners.Parameterized$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$1",
     "org.junit.runner.JUnitCore",
     "org.junit.runner.Result",
     "org.junit.experimental.theories.Theories$TheoryAnchor",
     "junit.extensions.TestSetup$1",
     "junit.textui.TestRunner",
     "org.junit.internal.InexactComparisonCriteria",
     "org.junit.runners.model.RunnerScheduler",
     "org.junit.internal.AssumptionViolatedException",
     "org.junit.runner.FilterFactories",
     "org.junit.experimental.theories.ParameterSupplier",
     "org.junit.internal.matchers.ThrowableMessageMatcher",
     "org.junit.experimental.max.MaxCore",
     "org.junit.internal.management.ReflectiveThreadMXBean",
     "org.junit.runners.RuleContainer",
     "org.junit.runners.BlockJUnit4ClassRunner",
     "org.junit.runner.FilterFactory$FilterNotCreatedException",
     "org.junit.runners.Parameterized$AfterParam",
     "junit.framework.ComparisonFailure",
     "org.junit.internal.runners.JUnit38ClassRunner$1",
     "org.junit.ClassRule",
     "org.junit.runners.model.FrameworkMember",
     "org.junit.experimental.theories.Theory",
     "org.junit.experimental.results.ResultMatchers$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule",
     "org.junit.experimental.results.ResultMatchers$2",
     "org.junit.internal.builders.JUnit4Builder",
     "org.junit.internal.MethodSorter$2",
     "org.junit.experimental.results.ResultMatchers$3",
     "org.junit.internal.builders.SuiteMethodBuilder",
     "org.junit.internal.MethodSorter$1",
     "org.junit.runners.BlockJUnit4ClassRunner$1",
     "org.junit.experimental.ParallelComputer$1",
     "org.junit.experimental.results.ResultMatchers$4",
     "org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener",
     "org.junit.runners.parameterized.TestWithParameters",
     "org.junit.internal.runners.MethodRoadie$1",
     "org.junit.internal.runners.MethodRoadie$2",
     "org.junit.runners.Parameterized$UseParametersRunnerFactory",
     "org.junit.runners.ParentRunner$3",
     "org.junit.runners.ParentRunner$4",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic",
     "org.junit.runners.ParentRunner$1",
     "org.junit.runners.ParentRunner$2",
     "org.junit.experimental.categories.Category",
     "org.junit.runners.BlockJUnit4ClassRunner$2",
     "org.junit.rules.TestWatcher",
     "org.junit.internal.runners.MethodRoadie",
     "org.junit.runners.Suite",
     "org.junit.experimental.theories.internal.Assignments",
     "org.junit.runner.manipulation.Sorter$1",
     "org.junit.internal.builders.IgnoredClassRunner",
     "org.junit.experimental.theories.suppliers.TestedOnSupplier",
     "org.junit.internal.matchers.TypeSafeMatcher",
     "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule",
     "org.junit.internal.runners.FailedBefore",
     "org.junit.FixMethodOrder",
     "org.junit.internal.RealSystem",
     "org.junit.runners.model.FrameworkField",
     "org.junit.internal.management.ThreadMXBean",
     "org.junit.internal.management.ReflectiveThreadMXBean$Holder",
     "org.junit.internal.requests.ClassRequest$CustomAllDefaultPossibilitiesBuilder",
     "org.junit.internal.runners.statements.RunAfters",
     "org.junit.rules.Stopwatch",
     "org.junit.experimental.max.MaxHistory$RememberingListener",
     "org.junit.runners.model.MultipleFailureException",
     "org.junit.runner.manipulation.Orderable",
     "org.junit.experimental.theories.internal.ParameterizedAssertionError",
     "org.junit.runners.model.Annotatable",
     "org.junit.rules.TestWatchman",
     "org.junit.runner.Describable",
     "org.junit.runner.Runner",
     "org.junit.rules.TestName",
     "org.junit.experimental.theories.internal.BooleanSupplier",
     "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule",
     "org.junit.runners.model.InitializationError",
     "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator",
     "org.junit.internal.requests.ClassRequest$1",
     "org.junit.experimental.categories.CategoryFilterFactory",
     "org.junit.internal.TextListener",
     "org.junit.internal.runners.TestMethod",
     "org.junit.internal.Throwables$1",
     "org.junit.runners.ParentRunner$ClassRuleCollector",
     "org.junit.runners.Parameterized$Parameters",
     "junit.framework.AssertionFailedError",
     "org.junit.validator.PublicClassValidator",
     "org.junit.experimental.categories.ExcludeCategories$ExcludesAny",
     "junit.framework.JUnit4TestAdapterCache",
     "junit.framework.TestSuite$1",
     "org.junit.experimental.theories.internal.EnumSupplier",
     "junit.framework.TestListener",
     "org.junit.runners.ParentRunner",
     "org.junit.experimental.runners.Enclosed",
     "org.junit.Assert",
     "org.junit.experimental.max.MaxCore$1",
     "junit.framework.Protectable",
     "org.junit.internal.runners.JUnit4ClassRunner",
     "org.junit.runner.FilterFactory",
     "org.junit.rules.Timeout$Builder",
     "org.junit.runner.manipulation.Ordering$Context",
     "org.junit.rules.Stopwatch$InternalWatcher",
     "org.junit.rules.MethodRule",
     "junit.framework.ComparisonCompactor",
     "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException",
     "org.junit.runner.OrderWith",
     "org.junit.runner.FilterFactoryParams",
     "junit.framework.TestResult$1",
     "org.junit.runners.model.TestClass",
     "org.junit.experimental.theories.DataPoint",
     "org.junit.runner.manipulation.Sortable",
     "org.junit.internal.Classes",
     "org.junit.runner.Computer",
     "org.junit.runners.model.TestClass$FieldComparator",
     "junit.framework.TestResult",
     "org.junit.After",
     "junit.runner.BaseTestRunner",
     "org.junit.runner.notification.SynchronizedRunListener",
     "org.junit.internal.builders.AnnotatedBuilder",
     "org.junit.runner.manipulation.Alphanumeric",
     "org.junit.validator.AnnotationsValidator$ClassValidator",
     "org.junit.internal.management.RuntimeMXBean",
     "org.junit.internal.runners.statements.Fail",
     "org.junit.runners.Parameterized",
     "org.junit.runner.manipulation.Sorter",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters",
     "org.junit.internal.runners.ErrorReportingRunner",
     "org.junit.experimental.results.ResultMatchers",
     "org.junit.runners.Suite$SuiteClasses",
     "org.junit.runners.AllTests",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters$RunBeforeParams",
     "org.junit.experimental.theories.internal.AllMembersSupplier",
     "org.junit.runner.manipulation.NoTestsRemainException",
     "org.junit.experimental.theories.FromDataPoints",
     "org.junit.runner.notification.StoppedByUserException",
     "org.junit.runners.RuleContainer$1",
     "org.junit.experimental.theories.suppliers.TestedOn",
     "org.junit.internal.runners.rules.RuleMemberValidator",
     "org.junit.experimental.theories.DataPoints",
     "org.junit.experimental.categories.Categories",
     "junit.runner.TestRunListener",
     "org.junit.experimental.max.MaxHistory",
     "org.junit.BeforeClass",
     "org.junit.rules.TestRule",
     "org.junit.internal.runners.statements.RunBefores",
     "org.junit.internal.runners.JUnit38ClassRunner",
     "org.junit.rules.Timeout$1",
     "org.junit.runner.manipulation.Orderer",
     "org.junit.runner.manipulation.Filter$1",
     "org.junit.ComparisonFailure$1",
     "org.junit.runner.manipulation.Filter$2",
     "org.junit.runner.manipulation.Filter$3",
     "org.junit.runners.ParentRunner$5",
     "junit.extensions.RepeatedTest",
     "org.junit.experimental.theories.PotentialAssignment",
     "org.junit.validator.AnnotationValidatorFactory",
     "org.junit.internal.management.ManagementFactory$RuntimeHolder",
     "org.junit.rules.TemporaryFolder$Builder",
     "org.junit.internal.management.ReflectiveRuntimeMXBean$Holder",
     "org.junit.rules.TestWatcher$1",
     "org.junit.rules.ExpectedException",
     "org.junit.runners.RuleContainer$RuleEntry",
     "org.junit.internal.runners.model.MultipleFailureException",
     "junit.runner.Version",
     "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule",
     "org.junit.experimental.max.MaxHistory$TestComparator",
     "org.junit.internal.runners.rules.RuleMemberValidator$Builder",
     "org.junit.runners.model.TestClass$MethodComparator",
     "org.junit.internal.runners.statements.ExpectException",
     "org.junit.runner.manipulation.Ordering$1",
     "org.junit.internal.runners.model.ReflectiveCallable",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule",
     "org.junit.rules.RuleChain",
     "org.junit.experimental.max.CouldNotReadCoreException",
     "org.junit.Rule",
     "org.junit.internal.matchers.ThrowableCauseMatcher",
     "org.junit.internal.requests.OrderingRequest",
     "org.junit.runner.notification.RunNotifier",
     "org.junit.validator.AnnotationsValidator$1",
     "org.junit.rules.TemporaryFolder"
    ],
    "usedTypes": [
     "org.junit.Rule",
     "org.junit.After",
     "org.junit.Test",
     "org.junit.Assert",
     "org.junit.rules.TemporaryFolder",
     "org.junit.Before"
    ],
    "usageRatio": 0.017241379310344827,
    "children": [
     {
      "id": "org.hamcrest:hamcrest-core:jar:1.3:test",
      "coordinates": "org.hamcrest:hamcrest-core:1.3",
      "groupId": "org.hamcrest",
      "artifactId": "hamcrest-core",
      "version": "1.3",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 45024,
      "type": "transitive",
      "status": "bloated",
      "parent": "junit:junit:jar:4.13.1:test",
      "allTypes": [
       "org.hamcrest.Condition$1",
       "org.hamcrest.core.IsNull",
       "org.hamcrest.BaseDescription",
       "org.hamcrest.CoreMatchers",
       "org.hamcrest.core.IsNot",
       "org.hamcrest.StringDescription",
       "org.hamcrest.internal.SelfDescribingValue",
       "org.hamcrest.internal.ReflectiveTypeFinder",
       "org.hamcrest.Condition$Step",
       "org.hamcrest.CustomTypeSafeMatcher",
       "org.hamcrest.core.CombinableMatcher",
       "org.hamcrest.core.AllOf",
       "org.hamcrest.core.Every",
       "org.hamcrest.core.Is",
       "org.hamcrest.TypeSafeDiagnosingMatcher",
       "org.hamcrest.BaseMatcher",
       "org.hamcrest.core.AnyOf",
       "org.hamcrest.core.StringContains",
       "org.hamcrest.core.CombinableMatcher$CombinableBothMatcher",
       "org.hamcrest.core.IsAnything",
       "org.hamcrest.core.IsEqual",
       "org.hamcrest.core.ShortcutCombination",
       "org.hamcrest.internal.SelfDescribingValueIterator",
       "org.hamcrest.Factory",
       "org.hamcrest.core.StringEndsWith",
       "org.hamcrest.core.IsInstanceOf",
       "org.hamcrest.core.IsSame",
       "org.hamcrest.Condition$Matched",
       "org.hamcrest.core.StringStartsWith",
       "org.hamcrest.Description",
       "org.hamcrest.core.SubstringMatcher",
       "org.hamcrest.Condition",
       "org.hamcrest.CustomMatcher",
       "org.hamcrest.TypeSafeMatcher",
       "org.hamcrest.core.DescribedAs",
       "org.hamcrest.core.IsCollectionContaining",
       "org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher",
       "org.hamcrest.internal.ArrayIterator",
       "org.hamcrest.FeatureMatcher",
       "org.hamcrest.MatcherAssert",
       "org.hamcrest.Matcher",
       "org.hamcrest.Condition$NotMatched",
       "org.hamcrest.Description$NullDescription",
       "org.hamcrest.SelfDescribing",
       "org.hamcrest.DiagnosingMatcher"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "org.mockito:mockito-all:jar:1.10.19:test",
    "coordinates": "org.mockito:mockito-all:1.10.19",
    "groupId": "org.mockito",
    "artifactId": "mockito-all",
    "version": "1.10.19",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 1234599,
    "type": "direct",
    "status": "used",
    "parent": "com.saucelabs:ci-sauce:jar:1.151",
    "allTypes": [
     "org.objenesis.instantiator.gcj.GCJInstantiatorBase",
     "org.mockito.asm.tree.LdcInsnNode",
     "org.mockito.cglib.proxy.InvocationHandlerGenerator",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls",
     "org.mockito.cglib.transform.impl.InterceptFieldFilter",
     "org.mockito.asm.tree.InsnList",
     "org.mockito.cglib.core.ClassesKey",
     "org.mockito.cglib.transform.impl.InterceptFieldEnabled",
     "org.mockito.internal.util.ObjectMethodsGuru",
     "org.mockito.internal.verification.AtLeast",
     "org.mockito.cglib.beans.FixedKeySet",
     "org.mockito.cglib.core.LocalVariablesSorter",
     "org.mockito.internal.handler.MockHandlerFactory",
     "org.mockito.cglib.core.ClassNameReader$1",
     "org.mockito.cglib.util.ParallelSorter$ComparatorComparer",
     "org.mockito.cglib.core.ReflectUtils",
     "org.mockito.internal.stubbing.defaultanswers.Answers",
     "org.mockito.internal.matchers.InstanceOf",
     "org.mockito.internal.debugging.VerboseMockInvocationLogger",
     "org.mockito.asm.tree.MemberNode",
     "org.mockito.internal.exceptions.stacktrace.StackTraceFilter",
     "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool",
     "org.mockito.internal.invocation.finder.AllInvocationsFinder",
     "org.mockito.exceptions.misusing.FriendlyReminderException",
     "org.mockito.internal.progress.SequenceNumber",
     "org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings",
     "org.mockito.exceptions.verification.SmartNullPointerException",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks",
     "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder",
     "org.mockito.internal.util.ConsoleMockitoLogger",
     "org.mockito.cglib.core.ClassNameReader$EarlyExitException",
     "org.mockito.cglib.core.MethodInfoTransformer",
     "org.mockito.cglib.core.MethodWrapper",
     "org.mockito.internal.invocation.UnusedStubsFinder",
     "org.mockito.internal.matchers.LessOrEqual",
     "org.mockito.internal.util.reflection.Constructors",
     "org.mockito.internal.verification.VerificationOverTimeImpl",
     "org.objenesis.instantiator.perc.PercInstantiator",
     "org.mockito.asm.Item",
     "org.mockito.cglib.proxy.CallbackGenerator$Context",
     "org.mockito.cglib.transform.impl.FieldProviderTransformer$1",
     "org.mockito.cglib.transform.impl.FieldProviderTransformer$2",
     "org.mockito.cglib.core.Transformer",
     "org.mockito.cglib.transform.impl.AddDelegateTransformer$1",
     "org.mockito.cglib.transform.impl.FieldProviderTransformer$3",
     "org.mockito.internal.util.reflection.AccessibilityChanger",
     "org.mockito.cglib.transform.impl.FieldProviderTransformer$4",
     "org.objenesis.instantiator.sun.SunReflectionFactoryHelper",
     "org.mockito.internal.verification.VerificationModeFactory",
     "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1",
     "org.mockito.internal.runners.JUnit44RunnerImpl$1",
     "org.mockito.exceptions.Pluralizer",
     "org.mockito.cglib.transform.MethodFilterTransformer",
     "org.mockito.asm.util.ASMifiable",
     "org.mockito.asm.util.CheckAnnotationAdapter",
     "org.mockito.cglib.core.CodeEmitter$State",
     "org.mockito.internal.verification.api.VerificationDataInOrder",
     "org.mockito.cglib.core.KeyFactory$Generator",
     "org.mockito.cglib.proxy.Mixin$MixinKey",
     "org.hamcrest.core.AllOf",
     "org.mockito.asm.Type",
     "org.mockito.cglib.beans.BeanMap",
     "org.mockito.cglib.core.ClassEmitter$2",
     "org.mockito.cglib.core.ClassEmitter$3",
     "org.mockito.cglib.proxy.Enhancer",
     "org.mockito.internal.progress.ArgumentMatcherStorageImpl",
     "org.mockito.asm.tree.InsnList$1",
     "org.mockito.cglib.core.ProcessArrayCallback",
     "org.hamcrest.core.IsEqual",
     "org.mockito.internal.verification.NoMoreInteractions",
     "org.mockito.internal.configuration.injection.MockInjectionStrategy",
     "org.objenesis.strategy.StdInstantiatorStrategy",
     "org.mockito.internal.matchers.CompareEqual",
     "org.mockito.cglib.transform.impl.AccessFieldTransformer$Callback",
     "org.mockito.cglib.core.ClassEmitter$1",
     "org.mockito.exceptions.base.MockitoSerializationIssue",
     "org.mockito.internal.runners.util.RunnerProvider",
     "org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator",
     "org.mockito.MockSettings",
     "org.mockito.cglib.transform.AbstractClassFilterTransformer",
     "org.mockito.asm.util.ASMifierMethodVisitor",
     "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner",
     "org.mockito.cglib.reflect.FastClassEmitter",
     "org.mockito.cglib.transform.impl.AddInitTransformer",
     "org.mockito.internal.debugging.LocationImpl",
     "org.mockito.internal.invocation.InvocationsFinder$1",
     "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner",
     "org.mockito.cglib.core.CodeGenerationException",
     "org.mockito.exceptions.verification.NeverWantedButInvoked",
     "org.hamcrest.Matcher",
     "org.mockito.cglib.reflect.MethodDelegate",
     "org.mockito.asm.MethodAdapter",
     "org.mockito.junit.MockitoRule",
     "org.objenesis.instantiator.basic.NewInstanceInstantiator",
     "org.mockito.cglib.core.KeyFactory$2",
     "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler",
     "org.mockito.cglib.core.KeyFactory$1",
     "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching",
     "org.mockito.asm.tree.analysis.AnalyzerException",
     "org.mockito.listeners.MethodInvocationReport",
     "org.mockito.asm.util.TraceMethodVisitor",
     "org.mockito.cglib.core.Block",
     "org.mockito.verification.Timeout",
     "org.mockito.asm.tree.analysis.SimpleVerifier",
     "org.mockito.runners.MockitoJUnit44Runner",
     "org.mockito.exceptions.Reporter",
     "org.mockito.internal.util.reflection.InstanceField",
     "org.mockito.cglib.reflect.FastClass",
     "org.mockito.internal.stubbing.answers.DoesNothing",
     "org.mockito.asm.util.CheckSignatureAdapter",
     "org.objenesis.instantiator.perc.PercSerializationInstantiator",
     "org.mockito.cglib.reflect.ConstructorDelegate",
     "org.mockito.cglib.proxy.InterfaceMaker",
     "org.mockito.Spy",
     "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
     "org.objenesis.instantiator.basic.NullInstantiator",
     "org.mockito.asm.util.TraceAbstractVisitor",
     "org.mockito.cglib.proxy.Mixin$Generator",
     "org.mockito.cglib.proxy.NoOp",
     "org.mockito.cglib.beans.BeanGenerator",
     "org.mockito.internal.verification.RegisteredInvocations",
     "org.mockito.cglib.core.LocalVariablesSorter$State",
     "org.mockito.internal.verification.checkers.MissingInvocationInOrderChecker",
     "org.objenesis.instantiator.sun.SunReflectionFactorySerializationInstantiator",
     "org.mockito.BDDMockito$BDDMyOngoingStubbing",
     "org.mockito.cglib.proxy.Proxy$ProxyImpl",
     "org.mockito.asm.util.TraceSignatureVisitor",
     "org.mockito.cglib.core.DebuggingClassWriter$1",
     "org.mockito.exceptions.verification.ArgumentsAreDifferent",
     "org.mockito.internal.stubbing.answers.Returns",
     "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper",
     "org.mockito.internal.debugging.WarningsFinder",
     "org.mockito.cglib.proxy.MethodInterceptorGenerator",
     "org.mockito.internal.creation.settings.CreationSettings",
     "org.mockito.cglib.proxy.Dispatcher",
     "org.mockito.cglib.beans.BulkBean$BulkBeanKey",
     "org.mockito.AdditionalMatchers",
     "org.mockito.cglib.core.CodeEmitter",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport",
     "org.mockito.internal.util.reflection.BeanPropertySetter",
     "org.mockito.Captor",
     "org.mockito.invocation.DescribedInvocation",
     "org.mockito.cglib.transform.AnnotationVisitorTee",
     "org.mockito.internal.stubbing.StubberImpl",
     "org.mockito.ArgumentCaptor",
     "org.mockito.internal.util.collections.IdentitySet",
     "org.mockito.asm.tree.analysis.BasicInterpreter",
     "org.mockito.cglib.transform.FieldVisitorTee",
     "org.mockito.internal.InternalMockHandler",
     "org.mockito.internal.configuration.MockAnnotationProcessor",
     "org.mockito.asm.tree.LocalVariableNode",
     "org.mockito.junit.MockitoJUnit",
     "org.objenesis.instantiator.basic.FailingInstantiator",
     "org.mockito.cglib.core.Signature",
     "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod",
     "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator$MockStream",
     "org.mockito.internal.stubbing.answers.ReturnsElementsOf",
     "org.mockito.internal.junit.JUnitTool",
     "org.mockito.cglib.proxy.UndeclaredThrowableException",
     "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet",
     "org.mockito.BDDMockito$BDDOngoingStubbingImpl",
     "org.mockito.internal.creation.cglib.DelegatingMockitoMethodProxy",
     "org.mockito.internal.configuration.MockitoAnnotationsMockAnnotationProcessor",
     "org.mockito.internal.configuration.DefaultAnnotationEngine",
     "org.mockito.internal.reporting.Discrepancy",
     "org.mockito.cglib.util.StringSwitcher",
     "org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator",
     "org.mockito.internal.util.reflection.GenericMaster",
     "org.mockito.internal.verification.Calls",
     "org.mockito.asm.tree.InnerClassNode",
     "org.mockito.internal.stubbing.answers.AnswerReturnValuesAdapter",
     "org.mockito.asm.tree.analysis.BasicVerifier",
     "org.mockito.asm.Frame",
     "org.mockito.cglib.reflect.MulticastDelegate",
     "org.mockito.cglib.proxy.MethodProxy$1",
     "org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator",
     "org.mockito.cglib.transform.impl.AddDelegateTransformer",
     "org.mockito.cglib.proxy.Callback",
     "org.mockito.internal.invocation.finder.AllInvocationsFinder$SequenceNumberComparator",
     "org.mockito.mock.MockCreationSettings",
     "org.mockito.cglib.transform.ClassEmitterTransformer",
     "org.mockito.internal.configuration.plugins.PluginFileReader",
     "org.mockito.cglib.util.ParallelSorter$Comparer",
     "org.hamcrest.core.Is",
     "org.mockito.internal.stubbing.InvocationContainerImpl",
     "org.mockito.cglib.beans.BulkBean",
     "org.mockito.cglib.proxy.FixedValue",
     "org.mockito.cglib.core.GeneratorStrategy",
     "org.mockito.internal.InOrderImpl",
     "org.mockito.internal.util.MockitoLogger",
     "org.mockito.exceptions.misusing.MissingMethodInvocationException",
     "org.mockito.exceptions.verification.TooLittleActualInvocations",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback",
     "org.mockito.cglib.transform.AbstractProcessTask",
     "org.mockito.internal.configuration.InjectingAnnotationEngine",
     "org.mockito.internal.creation.cglib.ClassImposterizer",
     "org.objenesis.instantiator.gcj.GCJSerializationInstantiator",
     "org.hamcrest.core.DescribedAs",
     "org.mockito.cglib.reflect.FastClass$Generator",
     "org.mockito.exceptions.verification.TooManyActualInvocations",
     "org.mockito.internal.matchers.ArrayEquals",
     "org.mockito.internal.invocation.InvocationImpl",
     "org.mockito.internal.util.reflection.Fields",
     "org.mockito.internal.matchers.Not",
     "org.mockito.internal.configuration.injection.ConstructorInjection",
     "org.mockito.internal.invocation.MockitoMethod",
     "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter",
     "org.mockito.cglib.beans.BeanGenerator$BeanGeneratorKey",
     "org.mockito.internal.debugging.Localized",
     "org.objenesis.instantiator.android.Android17Instantiator",
     "org.mockito.cglib.util.ParallelSorter$LongComparer",
     "org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator",
     "org.mockito.cglib.transform.impl.UndeclaredThrowableStrategy$1",
     "org.mockito.internal.creation.cglib.ClassImposterizer$1",
     "org.mockito.cglib.proxy.MethodProxy$FastClassInfo",
     "org.mockito.internal.creation.cglib.ClassImposterizer$3",
     "org.objenesis.instantiator.android.Android10Instantiator",
     "org.mockito.cglib.util.ParallelSorter$Generator",
     "org.mockito.internal.creation.cglib.ClassImposterizer$2",
     "org.mockito.cglib.reflect.ConstructorDelegate$Generator",
     "org.mockito.plugins.PluginSwitch",
     "org.mockito.internal.verification.checkers.AtLeastDiscrepancy",
     "org.objenesis.instantiator.android.Android18Instantiator",
     "org.mockito.internal.creation.cglib.SerializableMockitoMethodProxy",
     "org.mockito.internal.verification.Times",
     "org.mockito.internal.util.collections.Iterables",
     "org.mockito.invocation.InvocationOnMock",
     "org.mockito.asm.tree.IntInsnNode",
     "org.mockito.internal.creation.util.MockitoMethodProxy",
     "org.mockito.internal.verification.InOrderWrapper",
     "org.mockito.BDDMockito$BDDStubber",
     "org.mockito.cglib.transform.MethodFilter",
     "org.mockito.internal.configuration.injection.scanner.MockScanner",
     "org.mockito.cglib.beans.BeanCopier$BeanCopierKey",
     "org.mockito.asm.tree.analysis.Subroutine",
     "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl",
     "org.mockito.configuration.IMockitoConfiguration",
     "org.mockito.cglib.util.ParallelSorter$ObjectComparer",
     "org.mockito.MockitoDebugger",
     "org.mockito.cglib.core.Predicate",
     "org.mockito.stubbing.OngoingStubbing",
     "org.mockito.cglib.reflect.MethodDelegate$MethodDelegateKey",
     "org.mockito.internal.configuration.injection.filter.OngoingInjecter",
     "org.mockito.cglib.proxy.LazyLoaderGenerator",
     "org.mockito.internal.matchers.LocalizedMatcher",
     "org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock",
     "org.mockito.internal.util.reflection.Fields$1",
     "org.mockito.internal.util.reflection.LenientCopyTool",
     "org.mockito.internal.util.reflection.Fields$2",
     "org.mockito.exceptions.verification.junit.JUnitTool",
     "org.hamcrest.core.IsNull",
     "org.hamcrest.CoreMatchers",
     "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport",
     "org.mockito.asm.Handler",
     "org.mockito.internal.creation.cglib.ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug",
     "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$AcrossJVMMockitoMockSerializable",
     "org.mockito.internal.invocation.MatchersBinder",
     "org.mockito.BDDMockito$Then",
     "org.mockito.cglib.util.ParallelSorter$DoubleComparer",
     "org.mockito.internal.creation.DelegatingMethod",
     "org.mockito.cglib.proxy.LazyLoader",
     "org.mockito.exceptions.verification.VerificationInOrderFailure",
     "org.mockito.asm.tree.analysis.SourceInterpreter",
     "org.mockito.internal.debugging.WarningsPrinterImpl",
     "org.objenesis.strategy.SerializingInstantiatorStrategy",
     "org.mockito.exceptions.misusing.NullInsteadOfMockException",
     "org.mockito.ReturnValues",
     "org.mockito.internal.matchers.Matches",
     "org.mockito.internal.util.DefaultMockingDetails",
     "org.mockito.asm.tree.analysis.BasicValue",
     "org.mockito.asm.tree.analysis.Interpreter",
     "org.mockito.cglib.proxy.MixinBeanEmitter",
     "org.mockito.internal.stubbing.answers.ReturnsArgumentAt",
     "org.mockito.internal.verification.api.VerificationDataInOrderImpl",
     "org.mockito.cglib.beans.ImmutableBean$Generator",
     "org.mockito.cglib.proxy.CallbackHelper",
     "org.mockito.cglib.proxy.Proxy",
     "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$MockitoMockObjectOutputStream",
     "org.mockito.cglib.transform.TransformingClassLoader",
     "org.mockito.internal.util.SimpleMockitoLogger",
     "org.mockito.cglib.transform.ClassFilterTransformer",
     "org.mockito.internal.stubbing.answers.AnswersValidator",
     "org.mockito.internal.matchers.MatcherDecorator",
     "org.mockito.AdditionalAnswers",
     "org.mockito.internal.runners.util.TestMethodsFinder",
     "org.mockito.cglib.reflect.FastClassEmitter$2",
     "org.mockito.internal.invocation.AbstractAwareMethod",
     "org.mockito.verification.After",
     "org.mockito.cglib.proxy.Proxy$1",
     "org.mockito.cglib.reflect.FastClassEmitter$3",
     "org.mockito.cglib.reflect.FastClassEmitter$4",
     "org.mockito.internal.util.reflection.Whitebox",
     "org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker",
     "org.mockito.cglib.reflect.FastClassEmitter$1",
     "org.mockito.internal.junit.JUnitDetecter",
     "org.mockito.cglib.core.MethodWrapper$MethodWrapperKey",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType",
     "org.mockito.cglib.core.AbstractClassGenerator$Source",
     "org.mockito.cglib.proxy.Mixin$Route",
     "org.mockito.cglib.beans.BeanMap$Generator$BeanMapKey",
     "org.mockito.cglib.core.EmitUtils$ParameterTyper",
     "org.mockito.internal.listeners.MockingProgressListener",
     "org.mockito.internal.invocation.realmethod.DefaultRealMethod",
     "org.mockito.Matchers",
     "org.mockito.exceptions.verification.NoInteractionsWanted",
     "org.mockito.cglib.util.ParallelSorter$FloatComparer",
     "org.mockito.cglib.transform.impl.UndeclaredThrowableTransformer$1",
     "org.mockito.asm.ClassReader",
     "org.mockito.cglib.transform.impl.AddStaticInitTransformer",
     "org.mockito.mock.MockName",
     "org.mockito.internal.creation.cglib.MethodInterceptorFilter",
     "org.mockito.internal.matchers.Same",
     "org.mockito.internal.verification.api.InOrderContext",
     "org.mockito.internal.verification.api.VerificationData",
     "org.hamcrest.core.AnyOf",
     "org.mockito.internal.util.collections.Sets",
     "org.mockito.internal.util.Primitives",
     "org.mockito.exceptions.verification.WantedButNotInvoked",
     "org.hamcrest.Factory",
     "org.mockito.cglib.proxy.CallbackInfo",
     "org.mockito.internal.util.reflection.Fields$InstanceFields",
     "org.mockito.internal.verification.DefaultRegisteredInvocations",
     "org.mockito.Answers",
     "org.mockito.internal.runners.util.FrameworkUsageValidator",
     "org.mockito.asm.AnnotationVisitor",
     "org.mockito.asm.ClassAdapter",
     "org.mockito.asm.util.ASMifierAbstractVisitor",
     "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker",
     "org.mockito.cglib.transform.impl.FieldProvider",
     "org.mockito.asm.tree.IincInsnNode",
     "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter",
     "org.objenesis.instantiator.gcj.GCJInstantiatorBase$DummyStream",
     "org.mockito.cglib.util.ParallelSorterEmitter",
     "org.mockito.internal.configuration.plugins.PluginFinder",
     "org.mockito.internal.util.MockUtil",
     "org.mockito.internal.util.RemoveFirstLine",
     "org.mockito.internal.util.Timer",
     "org.mockito.asm.MethodVisitor",
     "org.mockito.asm.tree.TableSwitchInsnNode",
     "org.mockito.internal.verification.api.VerificationInOrderMode",
     "org.mockito.internal.reporting.PrintSettings",
     "org.mockito.cglib.core.ClassGenerator",
     "org.mockito.internal.stubbing.answers.MethodInfo",
     "org.mockito.internal.junit.JUnitRule",
     "org.mockito.cglib.proxy.FixedValueGenerator",
     "org.mockito.internal.util.reflection.FieldInitializationReport",
     "org.mockito.internal.matchers.Or",
     "org.mockito.mock.SerializableMode",
     "org.mockito.internal.invocation.InvocationMatcher",
     "org.mockito.internal.reporting.SmartPrinter",
     "org.mockito.cglib.beans.BeanCopier$Generator",
     "org.mockito.cglib.transform.ClassReaderGenerator",
     "org.mockito.cglib.transform.ClassVisitorTee",
     "org.mockito.internal.debugging.MockitoDebuggerImpl",
     "org.mockito.internal.matchers.Equality",
     "org.mockito.internal.matchers.CompareTo",
     "org.mockito.cglib.proxy.CallbackGenerator",
     "org.mockito.cglib.core.ClassInfo",
     "org.mockito.cglib.core.ObjectSwitchCallback",
     "org.mockito.internal.handler.MockHandlerImpl",
     "org.mockito.cglib.util.ParallelSorter$ShortComparer",
     "org.mockito.internal.matchers.Find",
     "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$MockitoMockObjectInputStream",
     "org.mockito.internal.matchers.LessThan",
     "org.mockito.cglib.core.ClassEmitter$FieldInfo",
     "org.mockito.exceptions.misusing.NotAMockException",
     "org.mockito.internal.creation.instance.InstantationException",
     "org.mockito.internal.stubbing.OngoingStubbingImpl",
     "org.objenesis.instantiator.SerializationInstantiatorHelper",
     "org.mockito.MockitoAnnotations$Mock",
     "org.mockito.cglib.transform.impl.UndeclaredThrowableStrategy",
     "org.mockito.asm.tree.analysis.SourceValue",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues",
     "org.mockito.cglib.util.ParallelSorter$ByteComparer",
     "org.mockito.asm.tree.InsnList$InsnListIterator",
     "org.mockito.cglib.core.Local",
     "org.mockito.cglib.transform.ClassFilter",
     "org.mockito.internal.progress.MockingProgressImpl",
     "org.mockito.internal.matchers.StartsWith",
     "org.mockito.internal.configuration.GlobalConfiguration",
     "org.objenesis.Objenesis",
     "org.mockito.cglib.core.DuplicatesPredicate",
     "org.mockito.verification.VerificationMode",
     "org.mockito.plugins.MockMaker",
     "org.mockito.asm.tree.analysis.Value",
     "org.mockito.internal.configuration.DefaultInjectionEngine",
     "org.mockito.asm.tree.MethodNode",
     "org.mockito.exceptions.misusing.MockitoConfigurationException",
     "org.mockito.internal.progress.IOngoingStubbing",
     "org.mockito.cglib.beans.BeanMapEmitter",
     "org.mockito.internal.matchers.And",
     "org.mockito.asm.tree.analysis.SmallSet",
     "org.mockito.cglib.proxy.MethodProxy$CreateInfo",
     "org.mockito.internal.util.collections.ListUtil",
     "org.hamcrest.BaseDescription",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$BoundedType",
     "org.hamcrest.core.IsNot",
     "org.mockito.internal.MockitoCore",
     "org.mockito.internal.util.io.IOUtil",
     "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsInOrderChecker",
     "org.mockito.listeners.InvocationListener",
     "org.mockito.cglib.transform.AbstractClassLoader$1",
     "org.mockito.cglib.util.SorterTemplate",
     "org.mockito.internal.debugging.FindingsListener",
     "org.mockito.internal.invocation.finder.AllInvocationsFinder$1",
     "org.mockito.stubbing.Stubber",
     "org.mockito.cglib.core.EmitUtils$15",
     "org.mockito.internal.runners.JUnit44RunnerImpl",
     "org.mockito.cglib.core.EmitUtils$16",
     "org.mockito.stubbing.Answer",
     "org.mockito.cglib.core.EmitUtils$13",
     "org.mockito.internal.matchers.Any",
     "org.mockito.cglib.core.EmitUtils$14",
     "org.mockito.cglib.core.EmitUtils$11",
     "org.mockito.cglib.transform.ClassTransformerChain",
     "org.mockito.cglib.core.EmitUtils$12",
     "org.mockito.cglib.core.EmitUtils$10",
     "org.mockito.cglib.reflect.ConstructorDelegate$ConstructorKey",
     "org.mockito.Incubating",
     "org.mockito.cglib.proxy.MixinEmitter",
     "org.mockito.asm.Opcodes",
     "org.objenesis.instantiator.ObjectInstantiator",
     "org.mockito.asm.AnnotationWriter",
     "org.mockito.cglib.core.ClassesKey$Key",
     "org.mockito.asm.tree.AnnotationNode",
     "org.mockito.cglib.reflect.MethodDelegate$Generator",
     "org.mockito.internal.creation.cglib.CglibMockMaker",
     "org.mockito.cglib.core.VisibilityPredicate",
     "org.mockito.exceptions.misusing.WrongTypeOfReturnValue",
     "org.mockito.cglib.proxy.ProxyRefDispatcher",
     "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner",
     "org.mockito.cglib.core.EmitUtils$ArrayDelimiters",
     "org.mockito.cglib.transform.impl.InterceptFieldTransformer$1",
     "org.mockito.internal.util.junit.JUnitFailureHacker",
     "org.mockito.exceptions.base.MockitoAssertionError",
     "org.mockito.internal.invocation.InvocationMarker",
     "org.mockito.cglib.transform.ClassTransformer",
     "org.mockito.asm.ClassVisitor",
     "org.mockito.internal.runners.RunnerImpl",
     "org.mockito.runners.MockitoJUnitRunner",
     "org.mockito.cglib.core.CollectionUtils",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$LazyHolder",
     "org.mockito.asm.tree.TypeInsnNode",
     "org.mockito.internal.verification.SingleRegisteredInvocation",
     "org.mockito.internal.stubbing.answers.ThrowsException",
     "org.mockito.cglib.core.Customizer",
     "org.mockito.internal.creation.instance.Instantiator",
     "org.mockito.cglib.core.Converter",
     "org.mockito.exceptions.Discrepancy",
     "org.mockito.cglib.beans.BeanCopier",
     "org.mockito.internal.debugging.WarningsCollector",
     "org.mockito.ArgumentMatcher",
     "org.mockito.stubbing.VoidMethodStubbable",
     "org.mockito.cglib.core.DebuggingClassWriter",
     "org.mockito.junit.MockitoJUnitRule",
     "org.mockito.asm.tree.InsnNode",
     "org.mockito.internal.util.Decamelizer",
     "org.mockito.cglib.core.NamingPolicy",
     "org.mockito.cglib.util.ParallelSorter",
     "org.mockito.internal.verification.checkers.MissingInvocationChecker",
     "org.objenesis.strategy.SingleInstantiatorStrategy",
     "org.mockito.internal.matchers.Equals$1",
     "org.mockito.internal.util.Checks",
     "org.mockito.verification.VerificationWithTimeout",
     "org.mockito.asm.util.TraceFieldVisitor",
     "org.mockito.asm.tree.MultiANewArrayInsnNode",
     "org.mockito.cglib.proxy.MixinEverythingEmitter",
     "org.mockito.internal.util.MockCreationValidator",
     "org.mockito.invocation.StubInfo",
     "org.objenesis.instantiator.gcj.GCJInstantiator",
     "org.mockito.internal.verification.AtMost",
     "org.objenesis.ObjenesisHelper",
     "org.mockito.internal.creation.cglib.MockitoNamingPolicy",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType",
     "org.mockito.internal.creation.util.SearchingClassLoader",
     "org.hamcrest.SelfDescribing",
     "org.mockito.asm.FieldWriter",
     "org.mockito.exceptions.misusing.InvalidUseOfMatchersException",
     "org.mockito.internal.matchers.EqualsWithDelta",
     "org.mockito.cglib.reflect.FastMethod",
     "org.mockito.cglib.core.DefaultNamingPolicy",
     "org.hamcrest.internal.SelfDescribingValue",
     "org.mockito.internal.matchers.GreaterThan",
     "org.mockito.internal.configuration.SpyAnnotationEngine",
     "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1",
     "org.mockito.internal.configuration.ClassPathLoader",
     "org.mockito.exceptions.base.MockitoException",
     "org.mockito.internal.junit.FriendlyExceptionMaker",
     "org.mockito.internal.listeners.CollectCreatedMocks",
     "org.mockito.internal.stubbing.answers.ClonesArguments",
     "org.mockito.cglib.util.StringSwitcher$Generator$1",
     "org.mockito.internal.verification.Only",
     "org.mockito.cglib.transform.AbstractClassTransformer",
     "org.mockito.asm.tree.LabelNode",
     "org.mockito.cglib.transform.ClassTransformerFactory",
     "org.mockito.asm.Edge",
     "org.mockito.internal.stubbing.ConsecutiveStubbing",
     "org.mockito.asm.Label",
     "org.mockito.cglib.core.RejectModifierPredicate",
     "org.mockito.asm.util.TraceClassVisitor",
     "org.mockito.cglib.core.EmitUtils$4",
     "org.mockito.internal.stubbing.BaseStubbing",
     "org.mockito.cglib.core.EmitUtils$5",
     "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
     "org.mockito.cglib.core.EmitUtils$2",
     "org.mockito.cglib.proxy.CallbackFilter",
     "org.mockito.cglib.core.EmitUtils$3",
     "org.mockito.cglib.core.EmitUtils$8",
     "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter",
     "org.mockito.cglib.core.EmitUtils$9",
     "org.mockito.internal.util.reflection.FieldReader",
     "org.mockito.cglib.core.EmitUtils$6",
     "org.mockito.cglib.core.EmitUtils$7",
     "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver",
     "org.mockito.asm.tree.ClassNode",
     "org.mockito.internal.matchers.Null",
     "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker",
     "org.mockito.cglib.core.EmitUtils$1",
     "org.hamcrest.internal.ArrayIterator",
     "org.mockito.cglib.transform.impl.AddInitTransformer$1",
     "org.mockito.internal.matchers.VarargCapturingMatcher",
     "org.mockito.cglib.util.ParallelSorter$IntComparer",
     "org.mockito.cglib.beans.BeanMap$Generator",
     "org.mockito.internal.matchers.apachecommons.ReflectionEquals",
     "org.mockito.asm.ClassWriter",
     "org.mockito.cglib.beans.BulkBean$Generator",
     "org.mockito.internal.verification.DefaultRegisteredInvocations$1",
     "org.mockito.internal.matchers.VarargMatcher",
     "org.mockito.cglib.core.MethodInfo",
     "org.mockito.internal.matchers.ContainsExtraTypeInformation",
     "org.mockito.cglib.util.StringSwitcher$StringSwitcherKey",
     "org.hamcrest.StringDescription",
     "org.mockito.exceptions.misusing.UnfinishedVerificationException",
     "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer",
     "org.mockito.cglib.proxy.MethodInterceptorGenerator$1",
     "org.mockito.cglib.transform.impl.UndeclaredThrowableTransformer",
     "org.mockito.cglib.transform.ClassTransformerTee",
     "org.mockito.internal.stubbing.InvocationContainer",
     "org.mockito.asm.tree.analysis.Frame",
     "org.mockito.asm.util.AbstractVisitor",
     "org.mockito.invocation.Location",
     "org.mockito.cglib.core.LocalVariablesSorter$1",
     "org.mockito.cglib.proxy.MethodInterceptorGenerator$2",
     "org.mockito.cglib.reflect.FastMember",
     "org.mockito.internal.creation.MockSettingsImpl",
     "org.objenesis.strategy.PlatformDescription",
     "org.mockito.cglib.beans.ImmutableBean",
     "org.mockito.internal.debugging.LoggingListener",
     "org.mockito.MockitoAnnotations",
     "org.mockito.cglib.util.StringSwitcher$Generator",
     "org.mockito.asm.tree.FrameNode",
     "org.mockito.internal.verification.checkers.NonGreedyNumberOfInvocationsInOrderChecker",
     "org.mockito.cglib.transform.AbstractClassLoader",
     "org.mockito.internal.invocation.realmethod.RealMethod",
     "org.mockito.internal.creation.cglib.CGLIBHacker",
     "org.mockito.internal.verification.MockAwareVerificationMode",
     "org.objenesis.ObjenesisStd",
     "org.mockito.asm.util.Traceable",
     "org.mockito.internal.progress.MockingProgress",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType",
     "org.mockito.internal.exceptions.MockitoLimitations",
     "org.mockito.internal.stubbing.answers.CallsRealMethods",
     "org.mockito.internal.invocation.ArgumentsProcessor",
     "org.mockito.internal.handler.InvocationNotifierHandler",
     "org.mockito.asm.tree.MethodNode$1",
     "org.mockito.cglib.proxy.MethodInterceptor",
     "org.mockito.stubbing.DeprecatedOngoingStubbing",
     "org.mockito.cglib.transform.impl.AddPropertyTransformer",
     "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1",
     "org.mockito.internal.util.collections.ListUtil$Filter",
     "org.mockito.asm.FieldVisitor",
     "org.mockito.cglib.core.ClassEmitter",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
     "org.mockito.internal.stubbing.answers.ThrowsExceptionClass",
     "org.objenesis.strategy.InstantiatorStrategy",
     "org.mockito.cglib.transform.impl.FieldProviderTransformer",
     "org.objenesis.ObjenesisSerializer",
     "org.mockito.asm.util.ASMifierAnnotationVisitor",
     "org.mockito.cglib.core.AbstractClassGenerator",
     "org.mockito.internal.util.reflection.GenericMetadataSupport",
     "org.mockito.asm.tree.MethodInsnNode",
     "org.mockito.internal.creation.instance.ObjenesisInstantiator",
     "org.mockito.internal.runners.RunnerFactory",
     "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString",
     "org.objenesis.instantiator.basic.ConstructorInstantiator",
     "org.mockito.internal.creation.cglib.SerializableNoOp",
     "org.mockito.Mock",
     "org.objenesis.instantiator.basic.ObjectStreamClassInstantiator",
     "org.mockito.asm.util.CheckMethodAdapter",
     "org.mockito.internal.util.reflection.FieldInitializer",
     "org.mockito.internal.invocation.SerializableMethod",
     "org.mockito.BDDMockito$BDDStubberImpl",
     "org.mockito.verification.VerificationWrapper",
     "org.mockito.internal.matchers.GreaterOrEqual",
     "org.hamcrest.BaseMatcher",
     "org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
     "org.hamcrest.internal.SelfDescribingValueIterator",
     "org.mockito.asm.util.CheckClassAdapter",
     "org.mockito.asm.tree.AbstractInsnNode",
     "org.mockito.asm.tree.FieldInsnNode",
     "org.mockito.invocation.MockHandler",
     "org.hamcrest.core.IsSame",
     "org.mockito.InjectMocks",
     "org.mockito.cglib.reflect.MulticastDelegate$Generator",
     "org.mockito.cglib.transform.impl.AccessFieldTransformer",
     "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature",
     "org.objenesis.instantiator.android.AndroidSerializationInstantiator",
     "org.mockito.cglib.proxy.Factory",
     "org.mockito.internal.progress.ArgumentMatcherStorage",
     "org.mockito.cglib.transform.TransformingClassGenerator",
     "org.mockito.asm.tree.FieldNode",
     "org.mockito.internal.util.MockNameImpl",
     "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$1",
     "org.mockito.BDDMockito",
     "org.mockito.internal.matchers.Equals",
     "org.mockito.asm.util.ASMifierFieldVisitor",
     "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification",
     "org.mockito.internal.configuration.DefaultAnnotationEngine$1",
     "org.mockito.runners.VerboseMockitoJUnitRunner$1",
     "org.mockito.internal.invocation.ArgumentsComparator",
     "org.mockito.cglib.proxy.NoOp$1",
     "org.mockito.internal.util.reflection.FieldSetter",
     "org.objenesis.strategy.BaseInstantiatorStrategy",
     "org.mockito.internal.configuration.plugins.PluginRegistry",
     "org.mockito.internal.configuration.CaptorAnnotationProcessor",
     "org.objenesis.ObjenesisException",
     "org.mockito.configuration.AnnotationEngine",
     "org.mockito.invocation.Invocation",
     "org.mockito.cglib.core.EmitUtils",
     "org.mockito.cglib.proxy.Enhancer$5",
     "org.mockito.asm.tree.TryCatchBlockNode",
     "org.mockito.cglib.core.Constants",
     "org.mockito.cglib.proxy.Enhancer$6",
     "org.mockito.internal.stubbing.StubbedInvocationMatcher",
     "org.mockito.asm.util.TraceAnnotationVisitor",
     "org.mockito.asm.util.ASMifierClassVisitor",
     "org.mockito.cglib.reflect.MulticastDelegate$Generator$1",
     "org.mockito.configuration.DefaultMockitoConfiguration",
     "org.mockito.internal.exceptions.VerificationAwareInvocation",
     "org.mockito.internal.listeners.NotifiedMethodInvocationReport",
     "org.mockito.verification.VerificationAfterDelay",
     "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl$1",
     "org.mockito.internal.creation.instance.ConstructorInstantiator",
     "org.mockito.internal.configuration.plugins.PluginLoader",
     "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter",
     "org.mockito.internal.util.collections.ArrayUtils",
     "org.mockito.internal.configuration.injection.MockInjectionStrategy$1",
     "org.mockito.internal.util.StringJoiner",
     "org.mockito.asm.util.CheckFieldAdapter",
     "org.mockito.internal.handler.NullResultGuardian",
     "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer",
     "org.objenesis.instantiator.sun.UnsafeFactoryInstantiator",
     "org.mockito.cglib.core.TinyBitSet",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer",
     "org.mockito.cglib.reflect.FastConstructor",
     "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$FieldTypeAndNameComparator",
     "org.mockito.cglib.proxy.InvocationHandler",
     "org.mockito.cglib.core.ReflectUtils$4",
     "org.objenesis.instantiator.basic.AccessibleInstantiator",
     "org.mockito.cglib.transform.impl.InterceptFieldTransformer",
     "org.mockito.cglib.core.ReflectUtils$2",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport",
     "org.mockito.cglib.core.ReflectUtils$3",
     "org.mockito.asm.ByteVector",
     "org.mockito.cglib.core.ReflectUtils$1",
     "org.mockito.internal.matchers.NotNull",
     "org.mockito.internal.configuration.plugins.Plugins",
     "org.mockito.internal.creation.instance.InstantiatorProvider",
     "org.mockito.internal.configuration.injection.MockInjection$1",
     "org.mockito.internal.configuration.injection.filter.MockCandidateFilter",
     "org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature$AcrossJVMMockSerializationProxy",
     "org.mockito.cglib.core.AbstractClassGenerator$1",
     "org.mockito.runners.VerboseMockitoJUnitRunner",
     "org.mockito.internal.matchers.Contains",
     "org.mockito.cglib.core.DefaultGeneratorStrategy",
     "org.mockito.asm.tree.LookupSwitchInsnNode",
     "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
     "org.mockito.cglib.beans.BeanMapEmitter$1",
     "org.mockito.plugins.StackTraceCleanerProvider",
     "org.mockito.cglib.beans.BeanMapEmitter$2",
     "org.mockito.cglib.beans.BeanMapEmitter$3",
     "org.mockito.cglib.core.ClassNameReader",
     "org.mockito.cglib.core.ProcessSwitchCallback",
     "org.mockito.internal.matchers.CapturingMatcher",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType",
     "org.mockito.internal.junit.JUnitRule$1",
     "org.mockito.internal.matchers.EndsWith",
     "org.mockito.exceptions.misusing.UnfinishedStubbingException",
     "org.mockito.asm.tree.LineNumberNode",
     "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
     "org.mockito.cglib.core.TypeUtils",
     "org.mockito.internal.invocation.StubInfoImpl",
     "org.mockito.cglib.proxy.DispatcherGenerator",
     "org.mockito.internal.invocation.CapturesArgumensFromInvocation",
     "org.mockito.exceptions.PrintableInvocation",
     "org.mockito.internal.matchers.CapturesArguments",
     "org.mockito.internal.verification.VerificationDataImpl",
     "org.mockito.internal.configuration.injection.PropertyAndSetterInjection",
     "org.mockito.internal.util.reflection.FieldCopier",
     "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver",
     "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1",
     "org.mockito.cglib.transform.impl.InterceptFieldCallback",
     "org.mockito.asm.tree.VarInsnNode",
     "org.mockito.internal.stubbing.VoidMethodStubbableImpl",
     "org.mockito.asm.MethodWriter",
     "org.mockito.internal.progress.ThreadSafeMockingProgress",
     "org.hamcrest.core.IsAnything",
     "org.mockito.MockingDetails",
     "org.mockito.stubbing.answers.ReturnsElementsOf",
     "org.mockito.asm.tree.analysis.Analyzer",
     "org.mockito.internal.exceptions.util.ScenarioPrinter",
     "org.hamcrest.core.IsInstanceOf",
     "org.mockito.internal.invocation.InvocationsFinder",
     "org.hamcrest.Description",
     "org.mockito.cglib.proxy.Mixin",
     "org.mockito.asm.Attribute",
     "org.mockito.internal.verification.InOrderContextImpl",
     "org.mockito.InOrder",
     "org.mockito.cglib.beans.BulkBeanException",
     "org.mockito.internal.listeners.MockingStartedListener",
     "org.mockito.cglib.proxy.NoOpGenerator",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
     "org.mockito.cglib.reflect.FastClassEmitter$GetIndexCallback",
     "org.mockito.cglib.transform.AbstractTransformTask",
     "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder",
     "org.mockito.internal.reporting.Pluralizer",
     "org.mockito.cglib.transform.impl.AbstractInterceptFieldCallback",
     "org.mockito.exceptions.stacktrace.StackTraceCleaner",
     "org.mockito.internal.progress.HandyReturnValues",
     "org.mockito.cglib.proxy.MethodProxy",
     "org.mockito.Mockito",
     "org.mockito.cglib.beans.BulkBeanEmitter",
     "org.mockito.cglib.proxy.Enhancer$EnhancerKey",
     "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$2",
     "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$1",
     "org.mockito.cglib.proxy.Enhancer$1",
     "org.mockito.internal.matchers.AnyVararg",
     "org.mockito.cglib.proxy.Enhancer$2",
     "org.mockito.cglib.proxy.Enhancer$3",
     "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue",
     "org.objenesis.ObjenesisBase",
     "org.mockito.cglib.proxy.Enhancer$4",
     "org.mockito.asm.tree.JumpInsnNode",
     "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
     "org.mockito.cglib.transform.MethodVisitorTee",
     "org.mockito.internal.matchers.MatchersPrinter",
     "org.mockito.cglib.core.KeyFactory",
     "org.mockito.internal.configuration.injection.MockInjection",
     "org.mockito.BDDMockito$ThenImpl",
     "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "usedTypes": [
     "org.mockito.MockitoAnnotations",
     "org.mockito.Mockito",
     "org.mockito.ArgumentCaptor",
     "org.mockito.Matchers",
     "org.mockito.Mock",
     "org.mockito.Spy",
     "org.mockito.stubbing.OngoingStubbing",
     "org.mockito.stubbing.Stubber"
    ],
    "usageRatio": 0.010638297872340425,
    "children": []
   },
   {
    "id": "org.codehaus.plexus:plexus-container-default:jar:2.1.0:compile",
    "coordinates": "org.codehaus.plexus:plexus-container-default:2.1.0",
    "groupId": "org.codehaus.plexus",
    "artifactId": "plexus-container-default",
    "version": "2.1.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 229979,
    "type": "direct",
    "status": "used",
    "parent": "com.saucelabs:ci-sauce:jar:1.151",
    "allTypes": [
     "org.codehaus.plexus.component.MapOrientedComponent",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.PhaseExecutionException",
     "org.codehaus.plexus.component.configurator.converters.basic.FileConverter",
     "org.codehaus.plexus.component.manager.ComponentManagerFactory",
     "org.codehaus.plexus.configuration.PlexusConfigurationResourceException",
     "org.codehaus.plexus.component.configurator.converters.composite.ArrayConverter",
     "org.codehaus.plexus.component.configurator.MapOrientedComponentConfigurator",
     "org.codehaus.plexus.component.repository.ComponentRequirement",
     "org.codehaus.plexus.component.repository.exception.ComponentDescriptorUnmarshallingException",
     "org.codehaus.plexus.component.configurator.converters.basic.FloatConverter",
     "org.codehaus.plexus.PlexusJUnit4TestCase",
     "org.codehaus.plexus.PlexusContainerException",
     "org.codehaus.plexus.component.repository.exception.ComponentImplementationNotFoundException",
     "org.codehaus.plexus.DefaultPlexusContainer",
     "org.codehaus.plexus.logging.console.ConsoleLogger",
     "org.codehaus.plexus.component.repository.exception.ComponentConfigurationException",
     "org.codehaus.plexus.component.composition.CycleDetectedInComponentGraphException",
     "org.codehaus.plexus.component.configurator.converters.basic.DoubleConverter",
     "org.codehaus.plexus.component.configurator.ComponentConfigurationException",
     "org.codehaus.plexus.DefaultComponentRegistry",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.Configurable",
     "org.codehaus.plexus.PlexusTestCase",
     "org.codehaus.plexus.component.manager.AbstractComponentManager",
     "org.codehaus.plexus.ContainerConfiguration",
     "org.codehaus.plexus.component.configurator.converters.composite.PlexusConfigurationConverter",
     "org.codehaus.plexus.DefaultComponentRegistry$1",
     "org.codehaus.plexus.container.initialization.ContainerInitializationException",
     "org.codehaus.plexus.component.discovery.DefaultComponentDiscoverer",
     "org.codehaus.plexus.component.factory.java.JavaComponentFactory",
     "org.codehaus.plexus.component.CastUtils",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException",
     "org.codehaus.plexus.component.discovery.ComponentDiscoveryEvent",
     "org.codehaus.plexus.lifecycle.BasicLifecycleHandler",
     "org.codehaus.plexus.ClassRealmUtil",
     "org.codehaus.plexus.component.repository.exception.ComponentLookupRuntimeException",
     "org.codehaus.plexus.component.manager.SingletonComponentManagerFactory",
     "org.codehaus.plexus.component.discovery.DefaultComponentDiscovererManager",
     "org.codehaus.plexus.component.factory.DefaultComponentFactoryManager",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.LogDisablePhase",
     "org.codehaus.plexus.component.configurator.converters.basic.ClassConverter",
     "org.codehaus.plexus.component.configurator.converters.basic.EnumConverter",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.SuspendPhase",
     "org.codehaus.plexus.component.repository.ComponentRequirementList",
     "org.codehaus.plexus.component.discovery.DiscoveryListenerDescriptor",
     "org.codehaus.plexus.logging.Logger",
     "org.codehaus.plexus.configuration.io.PlexusConfigurationWriter",
     "org.codehaus.plexus.component.configurator.converters.basic.ByteConverter",
     "org.codehaus.plexus.component.factory.ComponentInstantiationException",
     "org.codehaus.plexus.component.configurator.converters.composite.MapConverter",
     "org.codehaus.plexus.container.initialization.InitializeComponentRegistryPhase",
     "org.codehaus.plexus.component.repository.DefaultComponentRepository",
     "org.codehaus.plexus.component.configurator.converters.basic.CharConverter",
     "org.codehaus.plexus.component.configurator.converters.special.ClassRealmConverter",
     "org.codehaus.plexus.configuration.xml.XmlPlexusConfiguration",
     "org.codehaus.plexus.component.builder.XBeanComponentBuilder$1",
     "org.codehaus.plexus.logging.LoggerManager",
     "org.codehaus.plexus.component.configurator.expression.DefaultExpressionEvaluator",
     "org.codehaus.plexus.lifecycle.DefaultLifecycleHandlerManager",
     "org.codehaus.plexus.component.manager.UndefinedComponentManagerException",
     "org.codehaus.plexus.component.configurator.BasicComponentConfigurator",
     "org.codehaus.plexus.MutablePlexusContainer",
     "org.codehaus.plexus.configuration.io.PlexusConfigurationReader",
     "org.codehaus.plexus.component.factory.UndefinedComponentFactoryException",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.Startable",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable",
     "org.codehaus.plexus.context.ContextException",
     "org.codehaus.plexus.component.manager.AbstractComponentManager$1",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.StartingException",
     "org.codehaus.plexus.component.configurator.converters.basic.AbstractBasicConverter",
     "org.codehaus.plexus.lifecycle.LifecycleHandlerManager",
     "org.codehaus.plexus.component.factory.AbstractComponentFactory",
     "org.codehaus.plexus.component.discovery.ComponentDiscoverer",
     "org.codehaus.plexus.logging.console.ConsoleLoggerManager",
     "org.codehaus.plexus.container.initialization.ContainerInitializationContext",
     "org.codehaus.plexus.component.configurator.converters.lookup.DefaultConverterLookup",
     "org.codehaus.plexus.DuplicateChildContainerException",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializePhase",
     "org.codehaus.plexus.logging.LogEnabled",
     "org.codehaus.plexus.component.configurator.ComponentConfigurator",
     "org.codehaus.plexus.component.composition.UndefinedComponentComposerException",
     "org.codehaus.plexus.component.configurator.AbstractComponentConfigurator",
     "org.codehaus.plexus.container.initialization.InitializeUserConfigurationSourcePhase",
     "org.codehaus.plexus.component.builder.XBeanComponentBuilder$RequirementRecipe",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.LogEnablePhase",
     "org.codehaus.plexus.configuration.source.ChainedConfigurationSource",
     "org.codehaus.plexus.component.builder.XBeanComponentBuilder$PlexusConfigurationRecipe",
     "org.codehaus.plexus.component.factory.ComponentFactoryManager",
     "org.codehaus.plexus.component.configurator.converters.basic.StringConverter",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.ConfigurablePhase",
     "org.codehaus.plexus.container.initialization.AbstractContainerInitializationPhase",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.Disposable",
     "org.codehaus.plexus.component.repository.ComponentSetDescriptor",
     "org.codehaus.plexus.component.configurator.converters.basic.ShortConverter",
     "org.codehaus.plexus.component.manager.ComponentManager",
     "org.codehaus.plexus.component.repository.exception.ComponentRepositoryException",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.ServiceLocator",
     "org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException",
     "org.codehaus.plexus.lifecycle.phase.AbstractPhase",
     "org.codehaus.plexus.component.discovery.ComponentDiscovererManager",
     "org.codehaus.plexus.component.discovery.AnnotationBasedComponentDiscoverer",
     "org.codehaus.plexus.component.configurator.expression.ExpressionEvaluator",
     "org.codehaus.plexus.component.manager.PerLookupComponentManagerFactory",
     "org.codehaus.plexus.configuration.PlexusConfiguration",
     "org.codehaus.plexus.component.builder.XBeanComponentBuilder",
     "org.codehaus.plexus.component.repository.exception.ComponentManagerImplementationNotFoundException",
     "org.codehaus.plexus.component.builder.ComponentBuilder",
     "org.codehaus.plexus.component.composition.CompositionResolver",
     "org.codehaus.plexus.component.repository.exception.ComponentLifecycleException",
     "org.codehaus.plexus.logging.AbstractLogger",
     "org.codehaus.plexus.configuration.PlexusConfigurationMerger",
     "org.codehaus.plexus.component.collections.ComponentMap",
     "org.codehaus.plexus.component.repository.ComponentDependency",
     "org.codehaus.plexus.ComponentRegistry",
     "org.codehaus.plexus.component.configurator.converters.lookup.ConverterLookup",
     "org.codehaus.plexus.configuration.source.ConfigurationSource",
     "org.codehaus.plexus.lifecycle.UndefinedLifecycleHandlerException",
     "org.codehaus.plexus.component.configurator.converters.basic.IntConverter",
     "org.codehaus.plexus.context.ContextMapAdapter",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.Suspendable",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.ContextualizePhase",
     "org.codehaus.plexus.DefaultContainerConfiguration",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.StopPhase",
     "org.codehaus.plexus.component.configurator.converters.ComponentValueSetter",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.AutoConfigurePhase",
     "org.codehaus.plexus.component.configurator.converters.basic.Converter",
     "org.codehaus.plexus.component.configurator.converters.AbstractConfigurationConverter",
     "org.codehaus.plexus.component.configurator.converters.basic.UrlConverter",
     "org.codehaus.plexus.component.configurator.converters.basic.BooleanConverter",
     "org.codehaus.plexus.component.collections.ComponentList",
     "org.codehaus.plexus.component.discovery.ComponentDiscoveryListener",
     "org.codehaus.plexus.logging.BaseLoggerManager",
     "org.codehaus.plexus.context.Context",
     "org.codehaus.plexus.component.discovery.ResourceBasedComponentDiscoverer",
     "org.codehaus.plexus.container.initialization.InitializeLoggerManagerPhase",
     "org.codehaus.plexus.component.manager.PerLookupComponentManager",
     "org.codehaus.plexus.logging.AbstractLoggerManager",
     "org.codehaus.plexus.component.factory.ComponentFactory",
     "org.codehaus.plexus.component.repository.ComponentDescriptor",
     "org.codehaus.plexus.component.configurator.converters.basic.UriConverter",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.ResumePhase",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.StartPhase",
     "org.codehaus.plexus.container.initialization.ContainerInitializationPhase",
     "org.codehaus.plexus.context.DefaultContext",
     "org.codehaus.plexus.lifecycle.AbstractLifecycleHandler",
     "org.codehaus.plexus.component.configurator.converters.basic.StringBufferConverter",
     "org.codehaus.plexus.component.repository.exception.ComponentLookupException",
     "org.codehaus.plexus.component.builder.AbstractComponentBuildListener",
     "org.codehaus.plexus.component.configurator.converters.composite.PropertiesConverter",
     "org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.ServiceablePhase",
     "org.codehaus.plexus.component.repository.io.PlexusTools",
     "org.codehaus.plexus.component.repository.exception.ComponentProfileException",
     "org.codehaus.plexus.PlexusConstants",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.StoppingException",
     "org.codehaus.plexus.lifecycle.phase.Phase",
     "org.codehaus.plexus.component.discovery.PlexusXmlComponentDiscoverer",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.Serviceable",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.PlexusContainerLocator",
     "org.codehaus.plexus.configuration.io.XmlPlexusConfigurationWriter",
     "org.codehaus.plexus.lifecycle.LifecycleHandler",
     "org.codehaus.plexus.component.manager.SingletonComponentManager",
     "org.codehaus.plexus.component.collections.AbstractComponentCollection",
     "org.codehaus.plexus.DefaultComponentRegistry$Key",
     "org.codehaus.plexus.configuration.io.XmlPlexusConfigurationReader",
     "org.codehaus.plexus.container.initialization.InitializeComponentFactoryManagerPhase",
     "org.codehaus.plexus.component.builder.ComponentBuildListener",
     "org.codehaus.plexus.component.configurator.converters.ConfigurationConverter",
     "org.codehaus.plexus.personality.plexus.lifecycle.phase.DisposePhase",
     "org.codehaus.plexus.configuration.source.ContainerConfigurationSource",
     "org.codehaus.plexus.configuration.PlexusComponentDescriptorMerger",
     "org.codehaus.plexus.component.discovery.AbstractResourceBasedComponentDiscoverer",
     "org.codehaus.plexus.component.composition.DefaultCompositionResolver",
     "org.codehaus.plexus.PlexusContainer",
     "org.codehaus.plexus.component.repository.ComponentRepository",
     "org.codehaus.plexus.container.initialization.InitializeComponentDiscovererManagerPhase",
     "org.codehaus.plexus.container.initialization.AbstractCoreComponentInitializationPhase",
     "org.codehaus.plexus.configuration.PlexusConfigurationException",
     "org.codehaus.plexus.configuration.DefaultPlexusConfiguration",
     "org.codehaus.plexus.container.initialization.InitializeSystemPropertiesPhase",
     "org.codehaus.plexus.container.initialization.InitializeContainerConfigurationSourcePhase",
     "org.codehaus.plexus.component.configurator.converters.basic.LongConverter",
     "org.codehaus.plexus.logging.AbstractLogEnabled",
     "org.codehaus.plexus.component.configurator.converters.basic.DateConverter",
     "org.codehaus.plexus.component.configurator.converters.composite.CollectionConverter",
     "org.codehaus.plexus.component.configurator.ConfigurationListener",
     "org.codehaus.plexus.component.configurator.expression.TypeAwareExpressionEvaluator"
    ],
    "usedTypes": [
     "org.codehaus.plexus.logging.console.ConsoleLogger",
     "org.codehaus.plexus.logging.Logger"
    ],
    "usageRatio": 0.0106951871657754,
    "children": [
     {
      "id": "org.codehaus.plexus:plexus-utils:jar:3.1.1:compile",
      "coordinates": "org.codehaus.plexus:plexus-utils:3.1.1",
      "groupId": "org.codehaus.plexus",
      "artifactId": "plexus-utils",
      "version": "3.1.1",
      "scope": "compile",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "org.codehaus.plexus:plexus-container-default:jar:2.1.0:compile",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     },
     {
      "id": "org.codehaus.plexus:plexus-classworlds:jar:2.6.0:compile",
      "coordinates": "org.codehaus.plexus:plexus-classworlds:2.6.0",
      "groupId": "org.codehaus.plexus",
      "artifactId": "plexus-classworlds",
      "version": "2.6.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 52873,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.codehaus.plexus:plexus-container-default:jar:2.1.0:compile",
      "allTypes": [
       "org.codehaus.classworlds.ClassWorldAdapter",
       "org.codehaus.classworlds.ClassWorldReverseAdapter",
       "org.codehaus.classworlds.ClassRealmAdapter",
       "org.codehaus.classworlds.ConfiguratorAdapter",
       "org.codehaus.plexus.classworlds.launcher.ConfigurationParser$1",
       "org.codehaus.plexus.classworlds.realm.DuplicateRealmException",
       "org.codehaus.classworlds.ClassWorld",
       "org.codehaus.classworlds.ClassWorldException",
       "org.codehaus.plexus.classworlds.realm.NoSuchRealmException",
       "org.codehaus.plexus.classworlds.UrlUtils",
       "org.codehaus.classworlds.NoSuchRealmException",
       "org.codehaus.classworlds.BytesURLConnection",
       "org.codehaus.classworlds.ClassRealmReverseAdapter",
       "org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy",
       "org.codehaus.plexus.classworlds.launcher.Launcher",
       "org.codehaus.plexus.classworlds.strategy.OsgiBundleStrategy",
       "org.codehaus.classworlds.ConfigurationException",
       "org.codehaus.plexus.classworlds.realm.ClassRealm",
       "org.codehaus.plexus.classworlds.launcher.Configurator$1",
       "org.codehaus.plexus.classworlds.strategy.StrategyFactory",
       "org.codehaus.classworlds.Configurator",
       "org.codehaus.classworlds.Launcher",
       "org.codehaus.classworlds.BytesURLStreamHandler",
       "org.codehaus.plexus.classworlds.ClassWorld",
       "org.codehaus.classworlds.DefaultClassRealm",
       "org.codehaus.plexus.classworlds.launcher.ConfigurationHandler",
       "org.codehaus.plexus.classworlds.strategy.AbstractStrategy",
       "org.codehaus.plexus.classworlds.ClassWorldListener",
       "org.codehaus.plexus.classworlds.strategy.Strategy",
       "org.codehaus.plexus.classworlds.launcher.Configurator",
       "org.codehaus.classworlds.ClassRealm",
       "org.codehaus.plexus.classworlds.launcher.ConfigurationException",
       "org.codehaus.plexus.classworlds.launcher.ConfigurationParser",
       "org.codehaus.classworlds.DuplicateRealmException",
       "org.codehaus.plexus.classworlds.realm.Entry",
       "org.codehaus.plexus.classworlds.ClassWorldException",
       "org.codehaus.plexus.classworlds.strategy.ParentFirstStrategy"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.apache.xbean:xbean-reflect:jar:3.7:compile",
      "coordinates": "org.apache.xbean:xbean-reflect:3.7",
      "groupId": "org.apache.xbean",
      "artifactId": "xbean-reflect",
      "version": "3.7",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 148098,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.codehaus.plexus:plexus-container-default:jar:2.1.0:compile",
      "allTypes": [
       "org.apache.xbean.propertyeditor.MapEditor",
       "org.apache.xbean.propertyeditor.SortedMapEditor",
       "org.apache.xbean.recipe.UnsetPropertiesRecipe",
       "org.apache.xbean.recipe.MapRecipe",
       "org.apache.xbean.propertyeditor.PropertyEditorException",
       "org.apache.xbean.recipe.ArrayRecipe$UpdateArray",
       "org.apache.xbean.recipe.DefaultExecutionContext",
       "org.apache.xbean.propertyeditor.AbstractConverter",
       "org.apache.xbean.recipe.ReflectionUtil",
       "org.apache.xbean.propertyeditor.AbstractMapConverter",
       "org.apache.xbean.recipe.AllPropertiesRecipe",
       "org.apache.xbean.recipe.RecipeHelper$RecipeComparator",
       "org.apache.xbean.recipe.CollectionRecipe",
       "org.apache.xbean.propertyeditor.ShortEditor",
       "org.apache.xbean.propertyeditor.DateEditor",
       "org.apache.xbean.propertyeditor.SortedSetEditor",
       "org.apache.xbean.propertyeditor.GenericCollectionConverter",
       "org.apache.xbean.propertyeditor.LinkedHashMapEditor",
       "org.apache.xbean.propertyeditor.ListEditor",
       "org.apache.xbean.propertyeditor.Inet4AddressEditor",
       "org.apache.xbean.propertyeditor.Inet6AddressEditor",
       "org.apache.xbean.recipe.AsmParameterNameLoader",
       "org.apache.xbean.propertyeditor.URLEditor",
       "org.apache.xbean.propertyeditor.FloatEditor",
       "org.apache.xbean.propertyeditor.HashMapEditor",
       "org.apache.xbean.propertyeditor.ObjectNameEditor",
       "org.apache.xbean.recipe.ObjectRecipe$SetterProperty",
       "org.apache.xbean.recipe.Reference",
       "org.apache.xbean.recipe.ObjectRecipe$FieldMember",
       "org.apache.xbean.recipe.ReflectionUtil$Factory",
       "org.apache.xbean.recipe.ObjectGraph$WrapperExecutionContext",
       "org.apache.xbean.propertyeditor.BigIntegerEditor",
       "org.apache.xbean.propertyeditor.EnumConverter",
       "org.apache.xbean.recipe.XbeanAsmParameterNameLoader$AllParameterNamesDiscoveringVisitor",
       "org.apache.xbean.propertyeditor.DoubleEditor",
       "org.apache.xbean.propertyeditor.HashtableEditor",
       "org.apache.xbean.propertyeditor.ArrayListEditor",
       "org.apache.xbean.propertyeditor.ClassEditor",
       "org.apache.xbean.recipe.CollectionRecipe$UpdateCollection",
       "org.apache.xbean.recipe.ReflectionUtil$3",
       "org.apache.xbean.propertyeditor.AbstractCollectionConverter",
       "org.apache.xbean.recipe.AsmParameterNameLoader$AllParameterNamesDiscoveringVisitor$1",
       "org.apache.xbean.propertyeditor.BooleanEditor",
       "org.apache.xbean.recipe.Recipe",
       "org.apache.xbean.recipe.ObjectRecipe$Property",
       "org.apache.xbean.recipe.ReferenceRecipe$1",
       "org.apache.xbean.recipe.Reference$Action",
       "org.apache.xbean.propertyeditor.PatternConverter",
       "org.apache.xbean.propertyeditor.WeakHashMapEditor",
       "org.apache.xbean.recipe.ObjectRecipe$CompoundProperty",
       "org.apache.xbean.propertyeditor.CommonsLoggingConverter",
       "org.apache.xbean.recipe.CircularDependencyException",
       "org.apache.xbean.recipe.ObjectRecipe",
       "org.apache.xbean.recipe.RecipeVisitor",
       "org.apache.xbean.recipe.RecipeHelper",
       "org.apache.xbean.propertyeditor.ArrayConverter",
       "org.apache.xbean.recipe.CollectionRecipe$UpdateList",
       "org.apache.xbean.propertyeditor.StringEditor",
       "org.apache.xbean.recipe.MapRecipe$UpdateValue",
       "org.apache.xbean.recipe.ObjectGraph$Node",
       "org.apache.xbean.recipe.ObjectGraph",
       "org.apache.xbean.propertyeditor.TreeSetEditor",
       "org.apache.xbean.recipe.ReflectionUtil$ConstructorFactory",
       "org.apache.xbean.recipe.ReflectionUtil$StaticFactory",
       "org.apache.xbean.recipe.DefaultRepository",
       "org.apache.xbean.recipe.NoSuchObjectException",
       "org.apache.xbean.recipe.ArrayRecipe",
       "org.apache.xbean.recipe.AbstractRecipe",
       "org.apache.xbean.recipe.ReferenceNameRecipe",
       "org.apache.xbean.recipe.XbeanAsmParameterNameLoader$AllParameterNamesDiscoveringVisitor$1",
       "org.apache.xbean.propertyeditor.Log4jConverter",
       "org.apache.xbean.recipe.MissingAccessorException",
       "org.apache.xbean.recipe.XbeanAsmParameterNameLoader",
       "org.apache.xbean.propertyeditor.LoggerConverter",
       "org.apache.xbean.recipe.ExecutionContext",
       "org.apache.xbean.recipe.MapRecipe$UpdateMap",
       "org.apache.xbean.recipe.ReflectionUtil$2",
       "org.apache.xbean.recipe.ReflectionUtil$1",
       "org.apache.xbean.propertyeditor.PropertyEditors",
       "org.apache.xbean.recipe.MissingFactoryMethodException",
       "org.apache.xbean.recipe.ObjectRecipe$FieldProperty",
       "org.apache.xbean.recipe.ParameterNameLoader",
       "org.apache.xbean.propertyeditor.TreeMapEditor",
       "org.apache.xbean.propertyeditor.ReferenceIdentityMap$1",
       "org.apache.xbean.recipe.ObjectGraph$1",
       "org.apache.xbean.propertyeditor.FileEditor",
       "org.apache.xbean.propertyeditor.BigDecimalEditor",
       "org.apache.xbean.propertyeditor.IdentityHashMapEditor",
       "org.apache.xbean.propertyeditor.CharacterEditor",
       "org.apache.xbean.propertyeditor.GenericMapConverter",
       "org.apache.xbean.recipe.StaticRecipe",
       "org.apache.xbean.recipe.MapRecipe$DummyDictionaryAsMap",
       "org.apache.xbean.propertyeditor.InetAddressEditor",
       "org.apache.xbean.propertyeditor.IntegerEditor",
       "org.apache.xbean.recipe.Option",
       "org.apache.xbean.propertyeditor.Converter",
       "org.apache.xbean.propertyeditor.SetEditor",
       "org.apache.xbean.recipe.UnresolvedReferencesException",
       "org.apache.xbean.propertyeditor.JndiConverter",
       "org.apache.xbean.propertyeditor.CollectionUtil",
       "org.apache.xbean.propertyeditor.LongEditor",
       "org.apache.xbean.recipe.ReferenceRecipe",
       "org.apache.xbean.recipe.ObjectRecipe$Member",
       "org.apache.xbean.recipe.ObjectRecipe$MethodMember",
       "org.apache.xbean.propertyeditor.ReferenceIdentityMap$ReferenceEntry",
       "org.apache.xbean.recipe.ConstructionException",
       "org.apache.xbean.propertyeditor.URIEditor",
       "org.apache.xbean.propertyeditor.VectorEditor",
       "org.apache.xbean.recipe.Repository",
       "org.apache.xbean.recipe.ParameterNames",
       "org.apache.xbean.propertyeditor.PropertiesEditor",
       "org.apache.xbean.recipe.AsmParameterNameLoader$AllParameterNamesDiscoveringVisitor",
       "org.apache.xbean.recipe.ReferenceRecipe$WrapperReference",
       "org.apache.xbean.propertyeditor.ByteEditor",
       "org.apache.xbean.propertyeditor.ReferenceIdentityMap",
       "org.apache.xbean.propertyeditor.LinkedListEditor",
       "org.apache.xbean.propertyeditor.LinkedHashSetEditor",
       "org.apache.xbean.recipe.ObjectRecipe$AutoMatchProperty"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "com.google.collections:google-collections:jar:1.0:compile",
      "coordinates": "com.google.collections:google-collections:1.0",
      "groupId": "com.google.collections",
      "artifactId": "google-collections",
      "version": "1.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 639592,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.codehaus.plexus:plexus-container-default:jar:2.1.0:compile",
      "allTypes": [
       "com.google.common.collect.ArrayListMultimap",
       "com.google.common.base.Suppliers$SupplierOfInstance",
       "com.google.common.collect.StandardBiMap$KeySet$1",
       "com.google.common.collect.Maps$ValueDifferenceImpl",
       "com.google.common.collect.ImmutableMultimap$FieldSettersHolder",
       "com.google.common.collect.LinkedHashMultimap$1",
       "com.google.common.collect.MapConstraints",
       "com.google.common.collect.Collections2",
       "com.google.common.collect.PeekingIterator",
       "com.google.common.collect.Multisets$SetMultiset$ElementSet",
       "com.google.common.collect.Synchronized$SynchronizedRandomAccessList",
       "com.google.common.base.internal.Finalizer",
       "com.google.common.base.FinalizableWeakReference",
       "com.google.common.collect.AbstractMapBasedMultiset$1",
       "com.google.common.collect.ImmutableClassToInstanceMap$Builder",
       "com.google.common.collect.ImmutableBiMap$EmptyBiMap",
       "com.google.common.collect.Multimaps$CustomSortedSetMultimap",
       "com.google.common.collect.NullsLastOrdering",
       "com.google.common.collect.Platform",
       "com.google.common.collect.ImmutableSet$ArrayImmutableSet",
       "com.google.common.collect.LinkedListMultimap$3$1",
       "com.google.common.collect.RegularImmutableBiMap",
       "com.google.common.collect.RegularImmutableMap",
       "com.google.common.collect.ConstrainedMap$ConstrainedEntrySet",
       "com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator",
       "com.google.common.collect.ImmutableBiMap$Builder",
       "com.google.common.base.Predicates$AlwaysFalsePredicate",
       "com.google.common.collect.MapMaker$ReferenceEntry",
       "com.google.common.collect.ForwardingMapEntry",
       "com.google.common.collect.LinkedListMultimap$AsMapEntries",
       "com.google.common.collect.Maps$AbstractFilteredMap$Values$1",
       "com.google.common.base.Joiner",
       "com.google.common.collect.RegularImmutableMap$Values$1",
       "com.google.common.collect.SingletonImmutableMap",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$EntrySet",
       "com.google.common.collect.NullsFirstOrdering",
       "com.google.common.collect.LinkedListMultimap$MultisetView$2$1",
       "com.google.common.collect.AbstractMultimap$Values",
       "com.google.common.collect.StandardSortedSetMultimap",
       "com.google.common.collect.MapMaker$StrategyImpl$Fields",
       "com.google.common.collect.Lists$Partition",
       "com.google.common.collect.Multimaps$MapMultimap$AsMap",
       "com.google.common.collect.AbstractBiMap$EntrySet$1",
       "com.google.common.collect.MapMaker$LinkedWeakEntry",
       "com.google.common.collect.StandardMultimap$RandomAccessWrappedList",
       "com.google.common.base.Functions",
       "com.google.common.collect.LinkedListMultimap$4$1",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$KeyIterator",
       "com.google.common.base.Functions$ConstantFunction",
       "com.google.common.collect.ImmutableSortedSet$Builder",
       "com.google.common.collect.Maps$TransformedValuesMap$EntrySet$1$1",
       "com.google.common.collect.ImmutableSortedMap$EntrySetSerializedForm",
       "com.google.common.collect.Synchronized$SynchronizedBiMap",
       "com.google.common.collect.Multimaps$UnmodifiableMultimap",
       "com.google.common.collect.Maps$FilteredEntryMap$EntrySet",
       "com.google.common.base.Predicates$NotNullPredicate",
       "com.google.common.collect.StandardMultimap$SortedAsMap",
       "com.google.common.collect.AbstractMapBasedMultiset$EntrySet$1$1",
       "com.google.common.base.FinalizableReferenceQueue$DecoupledLoader",
       "com.google.common.collect.ImmutableMultimap$EntryCollection$1",
       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
       "com.google.common.collect.LinkedHashMultimap$SetDecorator$1",
       "com.google.common.collect.EmptyImmutableList",
       "com.google.common.collect.ImmutableEntry",
       "com.google.common.base.Joiner$1",
       "com.google.common.base.Joiner$2",
       "com.google.common.collect.EmptyImmutableSetMultimap",
       "com.google.common.base.Predicates$IsEqualToPredicate",
       "com.google.common.collect.ImmutableCollection",
       "com.google.common.base.Joiner$3",
       "com.google.common.collect.Collections2$TransformedCollection",
       "com.google.common.collect.StandardMultimap$WrappedCollection",
       "com.google.common.collect.MapMaker$ComputationExceptionReference",
       "com.google.common.collect.Multimaps$MapMultimap$AsMapEntries",
       "com.google.common.collect.AbstractMultimap$WrappedSortedSet",
       "com.google.common.collect.Maps$TransformedValuesMap$EntrySet",
       "com.google.common.collect.StandardMultimap$Entries",
       "com.google.common.base.FinalizableReferenceQueue$SystemLoader",
       "com.google.common.collect.Synchronized$SynchronizedAsMap",
       "com.google.common.collect.ConstrainedMap$ConstrainedEntries",
       "com.google.common.collect.ImmutableCollection$Builder",
       "com.google.common.collect.ImmutableSetMultimap",
       "com.google.common.collect.AbstractMapBasedMultiset$EntrySet",
       "com.google.common.base.internal.Finalizer$ShutDown",
       "com.google.common.collect.AbstractMapBasedMultiset",
       "com.google.common.collect.StandardMultimap$WrappedList$WrappedListIterator",
       "com.google.common.annotations.GwtIncompatible",
       "com.google.common.collect.StandardMultimap$KeySet$1",
       "com.google.common.collect.Multimaps$UnmodifiableAsMapValues",
       "com.google.common.collect.StandardBiMap",
       "com.google.common.collect.Maps$FilteredKeyMap",
       "com.google.common.collect.ForwardingSet",
       "com.google.common.base.Functions$ToStringFunction",
       "com.google.common.base.Functions$FunctionComposition",
       "com.google.common.collect.RegularImmutableList$1",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$InternalsImpl",
       "com.google.common.collect.MapMaker$StrategyImpl$1",
       "com.google.common.collect.MapConstraints$ConstrainedEntries$1",
       "com.google.common.collect.EnumBiMap",
       "com.google.common.collect.Multiset",
       "com.google.common.base.Supplier",
       "com.google.common.collect.ImmutableEnumSet$EnumSerializedForm",
       "com.google.common.collect.EmptyImmutableListMultimap",
       "com.google.common.collect.Collections2$FilteredCollection",
       "com.google.common.collect.Maps$ImprovedAbstractMap",
       "com.google.common.collect.ImmutableList",
       "com.google.common.collect.ReverseOrdering",
       "com.google.common.collect.Synchronized",
       "com.google.common.collect.Iterables$10$1",
       "com.google.common.collect.AbstractMultimap$KeySet",
       "com.google.common.collect.MapConstraints$ConstrainedEntries",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$Values",
       "com.google.common.collect.Iterators$PeekingImpl",
       "com.google.common.collect.ForwardingList",
       "com.google.common.collect.Synchronized$SynchronizedSet",
       "com.google.common.collect.AbstractMultimap$MultisetKeyIterator",
       "com.google.common.collect.HashBiMap",
       "com.google.common.collect.ForwardingMultimap",
       "com.google.common.collect.MapMaker$1",
       "com.google.common.collect.Ordering",
       "com.google.common.collect.ImmutableSortedMap$Values$1",
       "com.google.common.collect.StandardBiMap$EntrySet",
       "com.google.common.collect.EnumMultiset",
       "com.google.common.collect.Sets$SetFromMap",
       "com.google.common.collect.Multimaps$CustomListMultimap",
       "com.google.common.collect.AbstractMultiset$ElementSet$1",
       "com.google.common.collect.MapMaker$StrongValueReference",
       "com.google.common.collect.Hashing",
       "com.google.common.collect.StandardBiMap$EntrySet$1$1",
       "com.google.common.collect.LinkedListMultimap$AsMapEntries$1$1",
       "com.google.common.collect.Maps$UnmodifiableEntries",
       "com.google.common.collect.AbstractMultimap$WrappedCollection",
       "com.google.common.collect.StandardBiMap$Inverse",
       "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap",
       "com.google.common.collect.Collections2$FilteredCollection$2",
       "com.google.common.collect.Collections2$FilteredCollection$1",
       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$WriteThroughEntry",
       "com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder",
       "com.google.common.collect.ImmutableMap$SerializedForm",
       "com.google.common.collect.Lists$TwoPlusArrayList",
       "com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator",
       "com.google.common.collect.LinkedHashMultimap",
       "com.google.common.collect.MapConstraints$ConstrainedMap",
       "com.google.common.collect.Synchronized$SynchronizedList",
       "com.google.common.collect.CustomConcurrentHashMap$ComputingStrategy",
       "com.google.common.base.FinalizableReferenceQueue$FinalizerLoader",
       "com.google.common.collect.StandardMultimap$MultisetEntry",
       "com.google.common.collect.RegularImmutableSet",
       "com.google.common.collect.ForwardingSortedSet",
       "com.google.common.collect.ImmutableListMultimap",
       "com.google.common.collect.CustomConcurrentHashMap$ComputingImpl",
       "com.google.common.collect.Multisets$1",
       "com.google.common.collect.MapMaker$SoftValueReference",
       "com.google.common.collect.Iterables",
       "com.google.common.collect.LinkedListMultimap$1",
       "com.google.common.collect.StandardMultimap$MultisetView$EntrySet",
       "com.google.common.collect.LinkedListMultimap$2",
       "com.google.common.collect.StandardMultimap$AsMap",
       "com.google.common.base.FinalizableReferenceQueue",
       "com.google.common.collect.Multimaps$UnmodifiableMultimap$1",
       "com.google.common.collect.SingletonImmutableSet",
       "com.google.common.collect.LinkedListMultimap$3",
       "com.google.common.collect.LinkedListMultimap$4",
       "com.google.common.collect.ImmutableList$SerializedForm",
       "com.google.common.collect.ImmutableSetMultimap$Builder",
       "com.google.common.collect.LinkedListMultimap$5",
       "com.google.common.collect.Multimaps",
       "com.google.common.collect.StandardMultimap$WrappedSortedSet",
       "com.google.common.collect.ClassToInstanceMap",
       "com.google.common.collect.ImmutableMultiset",
       "com.google.common.collect.Multisets$AbstractEntry",
       "com.google.common.collect.CustomConcurrentHashMap",
       "com.google.common.base.Functions$IdentityFunction",
       "com.google.common.collect.ImmutableSortedMap",
       "com.google.common.collect.ObjectArrays",
       "com.google.common.collect.AbstractIterator",
       "com.google.common.collect.LinkedListMultimap$MultisetView",
       "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1",
       "com.google.common.base.Suppliers$MemoizingSupplier",
       "com.google.common.collect.MutableClassToInstanceMap",
       "com.google.common.collect.AbstractMultiset$MultisetIterator",
       "com.google.common.base.FinalizablePhantomReference",
       "com.google.common.collect.UnmodifiableIterator",
       "com.google.common.collect.MapMaker$Strength",
       "com.google.common.collect.ImmutableSet$TransformedImmutableSet",
       "com.google.common.collect.AbstractMultimap$WrappedList",
       "com.google.common.base.Functions$PredicateFunction",
       "com.google.common.collect.EmptyImmutableSortedSet",
       "com.google.common.collect.AbstractMultimap$RandomAccessWrappedList",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$Segment",
       "com.google.common.collect.ImmutableEnumSet",
       "com.google.common.collect.AbstractMultimap$Entries",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$HashIterator",
       "com.google.common.collect.HashMultiset",
       "com.google.common.collect.MapMaker$StrongEntry",
       "com.google.common.collect.AbstractBiMap$ValueSet",
       "com.google.common.collect.SingletonImmutableList",
       "com.google.common.base.Predicates$AndPredicate",
       "com.google.common.collect.LinkedListMultimap",
       "com.google.common.collect.AbstractSetMultimap",
       "com.google.common.base.Function",
       "com.google.common.collect.LinkedListMultimap$MultisetView$2$1$1",
       "com.google.common.collect.ImmutableMap",
       "com.google.common.collect.MapMaker$LinkedSoftEntry",
       "com.google.common.collect.CustomConcurrentHashMap$Internals",
       "com.google.common.collect.Multiset$Entry",
       "com.google.common.base.Predicates$NotPredicate",
       "com.google.common.collect.ImmutableSortedMapFauxverideShim",
       "com.google.common.collect.AbstractMultiset$ElementSet",
       "com.google.common.collect.ForwardingMap",
       "com.google.common.collect.ExplicitOrdering",
       "com.google.common.collect.MapConstraints$ConstrainedEntrySet",
       "com.google.common.collect.ImmutableList$Builder",
       "com.google.common.collect.EnumHashBiMap",
       "com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet$1",
       "com.google.common.collect.AbstractMultiset$1",
       "com.google.common.collect.AbstractMultiset",
       "com.google.common.collect.ImmutableSortedSet$SerializedForm",
       "com.google.common.collect.CompoundOrdering",
       "com.google.common.collect.Iterators",
       "com.google.common.collect.StandardMultimap$MultisetKeyIterator",
       "com.google.common.collect.ImmutableMultiset$Builder",
       "com.google.common.collect.Multimaps$MapMultimap",
       "com.google.common.collect.Synchronized$SynchronizedListMultimap",
       "com.google.common.collect.MapConstraints$1",
       "com.google.common.collect.Ordering$IncomparableValueException",
       "com.google.common.collect.ImmutableMultiset$1",
       "com.google.common.collect.CustomConcurrentHashMap$Strategy",
       "com.google.common.collect.StandardMultimap$SortedKeySet",
       "com.google.common.collect.Maps$TransformedValuesMap$EntrySet$1",
       "com.google.common.collect.Synchronized$SynchronizedMap",
       "com.google.common.collect.ReverseNaturalOrdering",
       "com.google.common.collect.Maps",
       "com.google.common.collect.AbstractMapBasedMultiset$EntrySet$1",
       "com.google.common.collect.SetMultimap",
       "com.google.common.collect.ImmutableSet$SerializedForm",
       "com.google.common.collect.AsynchronousComputationException",
       "com.google.common.collect.Synchronized$SynchronizedObject",
       "com.google.common.collect.Synchronized$SynchronizedAsMapValues",
       "com.google.common.collect.SingletonImmutableMap$Values",
       "com.google.common.annotations.VisibleForTesting",
       "com.google.common.collect.RegularImmutableMap$Values",
       "com.google.common.base.Functions$ForMapWithDefault",
       "com.google.common.collect.LinkedListMultimap$MultisetView$2",
       "com.google.common.base.Predicates$InPredicate",
       "com.google.common.collect.LinkedListMultimap$MultisetView$1",
       "com.google.common.collect.StandardBiMap$ValueSet$1",
       "com.google.common.collect.AbstractMultimap$WrappedSet",
       "com.google.common.collect.AbstractMultimap$MultisetView$EntrySet",
       "com.google.common.collect.Lists$RandomAccessPartition",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$KeySet",
       "com.google.common.collect.Maps$MapDifferenceImpl",
       "com.google.common.annotations.GwtCompatible",
       "com.google.common.collect.LinkedHashMultimap$SetDecorator",
       "com.google.common.collect.LinkedHashMultiset",
       "com.google.common.collect.Sets$2",
       "com.google.common.base.FinalizableReferenceQueue$DirectLoader",
       "com.google.common.collect.Sets$3",
       "com.google.common.collect.Sets$1",
       "com.google.common.collect.ImmutableSortedMap$1",
       "com.google.common.collect.AbstractSortedSetMultimap",
       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
       "com.google.common.base.Functions$FunctionForMapNoDefault",
       "com.google.common.collect.ImmutableMultimap$Values",
       "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1",
       "com.google.common.collect.Maps$AbstractFilteredMap$Values",
       "com.google.common.collect.StandardMultimap$WrappedSet",
       "com.google.common.collect.ByFunctionOrdering",
       "com.google.common.collect.Maps$UnmodifiableBiMap",
       "com.google.common.collect.ImmutableSortedMap$ValuesSerializedForm",
       "com.google.common.collect.Iterators$10",
       "com.google.common.collect.StandardBiMap$KeySet",
       "com.google.common.base.FinalizableReference",
       "com.google.common.collect.AbstractMapEntry",
       "com.google.common.collect.Iterators$12",
       "com.google.common.collect.Iterators$11",
       "com.google.common.collect.MapConstraint",
       "com.google.common.base.Predicate",
       "com.google.common.collect.AbstractMultimap$AsMap",
       "com.google.common.collect.ImmutableListMultimap$Builder",
       "com.google.common.collect.ImmutableSortedMap$SerializedForm",
       "com.google.common.collect.ConstrainedMap",
       "com.google.common.collect.ForwardingSortedMap",
       "com.google.common.collect.ImmutableSetMultimap$BuilderMultimap",
       "com.google.common.collect.Serialization",
       "com.google.common.collect.AbstractListMultimap",
       "com.google.common.collect.Iterables$IterableWithToString",
       "com.google.common.collect.StandardMultimap$MultisetView",
       "com.google.common.base.Predicates$InstanceOfPredicate",
       "com.google.common.collect.ImmutableSet$ImmutableEnumSet",
       "com.google.common.collect.AbstractMultimap$KeySet$1",
       "com.google.common.collect.Synchronized$SynchronizedMultimap",
       "com.google.common.collect.Iterables$10",
       "com.google.common.collect.Iterators$13",
       "com.google.common.collect.CustomConcurrentHashMap$SimpleStrategy",
       "com.google.common.collect.Lists",
       "com.google.common.collect.ImmutableSortedMap$EntrySet",
       "com.google.common.collect.ImmutableMultimap",
       "com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1",
       "com.google.common.collect.ImmutableSortedSet",
       "com.google.common.base.Joiner$MapJoiner",
       "com.google.common.collect.Multisets$SetMultiset",
       "com.google.common.collect.AbstractMultimap$EntryIterator",
       "com.google.common.collect.ImmutableMultimap$BuilderMultimap",
       "com.google.common.collect.MapMaker$ValueReference",
       "com.google.common.base.Preconditions",
       "com.google.common.base.Predicates$CompositionPredicate",
       "com.google.common.base.Predicates$OrPredicate",
       "com.google.common.collect.MapMaker",
       "com.google.common.collect.Multimaps$UnmodifiableAsMapEntries",
       "com.google.common.collect.AbstractBiMap",
       "com.google.common.collect.AbstractMultimap$MultisetEntryIterator",
       "com.google.common.collect.AbstractMultimap$EntrySet",
       "com.google.common.collect.AbstractMultimap$WrappedList$WrappedListIterator",
       "com.google.common.collect.ImmutableMultiset$EntrySet$1",
       "com.google.common.collect.Sets$FilteredSet",
       "com.google.common.collect.TreeMultiset",
       "com.google.common.collect.HashMultimap",
       "com.google.common.collect.Lists$OnePlusArrayList",
       "com.google.common.base.Predicates$1",
       "com.google.common.collect.Maps$FilteredEntryMap$KeySet",
       "com.google.common.collect.LinkedListMultimap$4$1$1",
       "com.google.common.collect.ImmutableMultimap$Values$1",
       "com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1$1",
       "com.google.common.base.Objects",
       "com.google.common.collect.Iterators$6",
       "com.google.common.collect.BiMap",
       "com.google.common.collect.Iterators$7",
       "com.google.common.collect.Iterators$8",
       "com.google.common.collect.ImmutableSet",
       "com.google.common.collect.Iterators$9",
       "com.google.common.collect.SortedSetMultimap",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$EntryIterator",
       "com.google.common.collect.StandardMultimap$Values",
       "com.google.common.collect.StandardMultimap$AsMap$AsMapIterator",
       "com.google.common.collect.Iterators$1",
       "com.google.common.collect.Iterators$2",
       "com.google.common.collect.Iterators$3",
       "com.google.common.collect.Iterators$4",
       "com.google.common.collect.Iterators$5",
       "com.google.common.collect.AbstractIterator$State",
       "com.google.common.collect.ImmutableMultimap$EntryCollection",
       "com.google.common.collect.package-info",
       "com.google.common.collect.AbstractBiMap$KeySet",
       "com.google.common.collect.ImmutableMultimap$Builder",
       "com.google.common.collect.StandardBiMap$1",
       "com.google.common.collect.AbstractMultimap",
       "com.google.common.collect.StandardMultimap$MultisetEntryIterator",
       "com.google.common.collect.EmptyImmutableSet",
       "com.google.common.collect.MapDifference$ValueDifference",
       "com.google.common.collect.StandardMultimap$WrappedCollection$WrappedIterator",
       "com.google.common.collect.AbstractBiMap$Inverse",
       "com.google.common.collect.ForwardingCollection",
       "com.google.common.base.FinalizableSoftReference",
       "com.google.common.base.internal.Finalizer$1",
       "com.google.common.base.Functions$1",
       "com.google.common.collect.MapMaker$SoftEntry",
       "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1",
       "com.google.common.collect.StandardMultimap$1",
       "com.google.common.collect.StandardMultimap$WrappedList",
       "com.google.common.collect.StandardMultimap$EntryIterator",
       "com.google.common.collect.ImmutableMap$Builder",
       "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap",
       "com.google.common.collect.StandardMultimap$KeySet",
       "com.google.common.collect.Multimaps$CustomSetMultimap",
       "com.google.common.collect.AbstractBiMap$1",
       "com.google.common.collect.MutableClassToInstanceMap$1",
       "com.google.common.collect.NaturalOrdering",
       "com.google.common.collect.LinkedListMultimap$Node",
       "com.google.common.collect.AbstractBiMap$EntrySet",
       "com.google.common.collect.ListMultimap",
       "com.google.common.collect.MapMaker$QueueHolder",
       "com.google.common.collect.AbstractMultimap$MultisetEntry",
       "com.google.common.collect.ImmutableSortedMap$Builder",
       "com.google.common.collect.Multimaps$MapMultimap$1",
       "com.google.common.collect.Multimaps$CustomMultimap",
       "com.google.common.collect.AbstractBiMap$EntrySet$1$1",
       "com.google.common.collect.ComputationException",
       "com.google.common.collect.RegularImmutableList",
       "com.google.common.collect.Lists$TransformingRandomAccessList",
       "com.google.common.collect.MapMaker$WeakValueReference",
       "com.google.common.collect.Synchronized$SynchronizedAsMapEntries",
       "com.google.common.collect.RegularImmutableMap$KeySet",
       "com.google.common.collect.ImmutableSet$TransformedImmutableSet$1",
       "com.google.common.collect.StandardBiMap$ValueSet",
       "com.google.common.collect.AbstractIterator$1",
       "com.google.common.collect.ForwardingListIterator",
       "com.google.common.collect.EmptyImmutableMultiset",
       "com.google.common.collect.Maps$FilteredEntryMap$KeySet$1",
       "com.google.common.collect.MapMaker$WeakEntry",
       "com.google.common.collect.Multisets",
       "com.google.common.collect.AbstractMultimap$1",
       "com.google.common.collect.StandardBiMap$EntrySet$1",
       "com.google.common.collect.ImmutableBiMap$SerializedForm",
       "com.google.common.collect.ImmutableCollection$SerializedForm",
       "com.google.common.collect.Multimaps$UnmodifiableSetMultimap",
       "com.google.common.collect.Maps$AbstractFilteredMap",
       "com.google.common.collect.AbstractMultimap$ValueIterator",
       "com.google.common.collect.ImmutableSet$EnumSerializedForm",
       "com.google.common.collect.ImmutableSet$Builder",
       "com.google.common.collect.Sets$SetView",
       "com.google.common.collect.Synchronized$SynchronizedAsMapValues$1",
       "com.google.common.collect.Maps$FilteredEntryMap",
       "com.google.common.collect.Synchronized$SynchronizedSortedSet",
       "com.google.common.collect.Synchronized$SynchronizedMultiset",
       "com.google.common.collect.Maps$UnmodifiableEntries$1",
       "com.google.common.base.Suppliers$ThreadSafeSupplier",
       "com.google.common.collect.Synchronized$SynchronizedCollection",
       "com.google.common.collect.UsingToStringOrdering",
       "com.google.common.collect.Multimaps$UnmodifiableAsMapValues$1",
       "com.google.common.base.Predicates",
       "com.google.common.collect.TreeMultiset$SortedMapBasedElementSet",
       "com.google.common.collect.Lists$TransformingSequentialList",
       "com.google.common.collect.Serialization$FieldSetter",
       "com.google.common.collect.ForwardingIterator",
       "com.google.common.collect.Maps$UnmodifiableEntrySet",
       "com.google.common.collect.ImmutableMultiset$FieldSettersHolder",
       "com.google.common.collect.ImmutableSortedMap$Values",
       "com.google.common.collect.MapMaker$StrategyImpl",
       "com.google.common.collect.Maps$ImprovedAbstractMap$2",
       "com.google.common.collect.Maps$ImprovedAbstractMap$1",
       "com.google.common.collect.StandardListMultimap",
       "com.google.common.collect.MapDifference",
       "com.google.common.collect.ConcurrentHashMultiset$1",
       "com.google.common.collect.ConcurrentHashMultiset",
       "com.google.common.collect.ForwardingQueue",
       "com.google.common.collect.Synchronized$SynchronizedSetMultimap",
       "com.google.common.collect.StandardMultimap$AsMap$AsMapEntries",
       "com.google.common.collect.NullOutputException",
       "com.google.common.collect.Multimaps$UnmodifiableAsMapEntries$1",
       "com.google.common.collect.Multisets$SetMultiset$EntrySet$1",
       "com.google.common.collect.StandardMultimap",
       "com.google.common.collect.CustomConcurrentHashMap$Impl",
       "com.google.common.collect.ImmutableCollection$1",
       "com.google.common.collect.ForwardingMultiset",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$ValueIterator",
       "com.google.common.collect.StandardSetMultimap",
       "com.google.common.base.Platform",
       "com.google.common.collect.ImmutableMultiset$EntrySet",
       "com.google.common.collect.Multimaps$MapMultimap$1$1",
       "com.google.common.collect.TreeMultimap",
       "com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet",
       "com.google.common.collect.ConstrainedMap$1",
       "com.google.common.collect.ComparatorOrdering",
       "com.google.common.collect.CustomConcurrentHashMap$SimpleInternalEntry",
       "com.google.common.collect.Maps$1",
       "com.google.common.collect.AbstractBiMap$ValueSet$1",
       "com.google.common.collect.ConcurrentHashMultiset$EntrySet$1",
       "com.google.common.collect.AbstractMultimap$SortedKeySet",
       "com.google.common.collect.MapMaker$StrategyImpl$FutureValueReference",
       "com.google.common.collect.CustomConcurrentHashMap$Impl$Fields",
       "com.google.common.collect.Maps$2",
       "com.google.common.collect.Sets",
       "com.google.common.collect.ImmutableCollection$EmptyImmutableCollection",
       "com.google.common.collect.Maps$3",
       "com.google.common.collect.ImmutableClassToInstanceMap$1",
       "com.google.common.collect.AbstractBiMap$KeySet$1",
       "com.google.common.collect.ImmutableClassToInstanceMap",
       "com.google.common.collect.AbstractMultimap$SortedAsMap",
       "com.google.common.collect.ConstrainedMap$ConstrainedEntries$1",
       "com.google.common.collect.Iterables$2",
       "com.google.common.collect.Lists$TransformingSequentialList$1",
       "com.google.common.collect.MapMaker$Strength$3",
       "com.google.common.collect.Iterables$3",
       "com.google.common.collect.MapMaker$Strength$2",
       "com.google.common.collect.Iterables$4",
       "com.google.common.collect.Iterables$5",
       "com.google.common.collect.Iterables$6",
       "com.google.common.collect.ForwardingObject",
       "com.google.common.collect.Iterables$7",
       "com.google.common.collect.Iterables$8",
       "com.google.common.collect.MapMaker$Strength$1",
       "com.google.common.collect.Iterables$9",
       "com.google.common.collect.Multimaps$UnmodifiableListMultimap",
       "com.google.common.collect.EmptyImmutableMap",
       "com.google.common.collect.CustomConcurrentHashMap$Builder",
       "com.google.common.collect.Multimap",
       "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator",
       "com.google.common.collect.ImmutableBiMap",
       "com.google.common.collect.Multisets$UnmodifiableMultiset",
       "com.google.common.collect.ForwardingConcurrentMap",
       "com.google.common.collect.ImmutableCollection$ArrayImmutableCollection",
       "com.google.common.base.Suppliers",
       "com.google.common.collect.MapMaker$NullOutputExceptionReference",
       "com.google.common.collect.StandardMultimap$ValueIterator",
       "com.google.common.base.Predicates$IsNullPredicate",
       "com.google.common.base.Suppliers$SupplierComposition",
       "com.google.common.collect.Iterables$1",
       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
       "com.google.common.collect.MapMaker$LinkedStrongEntry",
       "com.google.common.collect.RegularImmutableMap$EntrySet",
       "com.google.common.collect.AbstractMultimap$MultisetView",
       "com.google.common.collect.LinkedListMultimap$AsMapEntries$1",
       "com.google.common.collect.StandardMultimap$EntrySet",
       "com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries",
       "com.google.common.collect.Multisets$SetMultiset$EntrySet",
       "com.google.common.collect.Multimaps$1",
       "com.google.common.base.Predicates$AlwaysTruePredicate",
       "com.google.common.collect.Maps$TransformedValuesMap",
       "com.google.common.collect.LinkedListMultimap$NodeIterator",
       "com.google.common.collect.Serialization$1",
       "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1",
       "com.google.common.collect.RegularImmutableSortedSet",
       "com.google.common.collect.ExpirationTimer"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   }
  ]
 }
}