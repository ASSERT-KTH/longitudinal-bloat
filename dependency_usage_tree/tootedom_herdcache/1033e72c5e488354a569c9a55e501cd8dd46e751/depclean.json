{
 "usage": {
  "org.greencheek.caching.herdcache.memcached.TestSimpleMemcachedCaching": {
   "io.dropwizard.metrics:metrics-core:jar:3.1.0:compile": [
    "com.codahale.metrics.ConsoleReporter$Builder",
    "com.codahale.metrics.MetricRegistry",
    "com.codahale.metrics.ConsoleReporter"
   ],
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "com.netflix.hystrix:hystrix-core:jar:1.4.5:test": [
    "com.netflix.hystrix.HystrixCommand"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.Cache",
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.metrics.YammerMetricsRecorder": {
   "io.dropwizard.metrics:metrics-core:jar:3.1.0:compile": [
    "com.codahale.metrics.MetricRegistry",
    "com.codahale.metrics.Meter",
    "com.codahale.metrics.Counter",
    "com.codahale.metrics.Timer"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestStaleMemcachedCaching": {
   "io.dropwizard.metrics:metrics-core:jar:3.1.0:compile": [
    "com.codahale.metrics.ConsoleReporter$Builder",
    "com.codahale.metrics.MetricRegistry",
    "com.codahale.metrics.ConsoleReporter"
   ],
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.Cache",
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.BaseMemcachedCache": {
   "com.github.ben-manes.caffeine:caffeine:jar:1.3.1:compile": [
    "com.github.benmanes.caffeine.cache.Cache",
    "com.github.benmanes.caffeine.cache.Caffeine"
   ],
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.SettableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.Futures"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactory",
    "net.spy.memcached.ConnectionFactoryBuilder$Locator",
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.greencheek.caching.herdcache.lru.expiry.TimedEntry": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.SettableFuture"
   ]
  },
  "org.greencheek.caching.herdcache.await.AwaitOnFuture": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.SpyMemcachedCache": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ]
  },
  "org.greencheek.caching.herdcache.lru.CacheRequestFutureComputationCompleteNotifier": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.SettableFuture",
    "com.google.common.util.concurrent.FutureCallback"
   ]
  },
  "org.greencheek.caching.herdcache.lru.expiry.ExpiringLastRecentlyUsedCache": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.SettableFuture",
    "com.google.common.util.concurrent.FutureCallback",
    "com.google.common.util.concurrent.Futures",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ],
   "com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:jar:1.4.2:compile": [
    "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap",
    "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder"
   ]
  },
  "org.greencheek.caching.herdcache.lru.expiry.ExpiringLastRecentlyUsedCacheTest": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.SimpleLastRecentlyUsedCacheWithMaxCapacityTest": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.await.AwaitOnFutureTest": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestForceConfigReconnectionElastiCacheMemcachedCaching": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.Cache",
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.FolsomMemcachedCache": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ]
  },
  "org.greencheek.caching.herdcache.util.BackEndRequest": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "com.netflix.hystrix:hystrix-core:jar:1.4.5:test": [
    "com.netflix.hystrix.HystrixCommandProperties",
    "com.netflix.hystrix.HystrixThreadPoolProperties",
    "com.netflix.hystrix.HystrixCommand$Setter",
    "com.netflix.hystrix.HystrixCommandProperties$ExecutionIsolationStrategy",
    "com.netflix.hystrix.HystrixCommandGroupKey$Factory",
    "com.netflix.hystrix.HystrixCommandGroupKey",
    "com.netflix.hystrix.HystrixThreadPoolProperties$Setter",
    "com.netflix.hystrix.HystrixCommand",
    "com.netflix.hystrix.HystrixCommandProperties$Setter"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestFolsomMultipleHostsWithNonCachingConfigElastiCacheMemcachedCaching": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder",
    "net.spy.memcached.HashAlgorithm"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.MemCacheDaemon",
    "com.thimbleware.jmemcached.Cache"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestNullValueMemcachedCaching": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.lru.expiry.CacheEntryRequestFutureComputationCompleteNotifier": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.SettableFuture",
    "com.google.common.util.concurrent.FutureCallback"
   ]
  },
  "org.greencheek.caching.herdcache.SimpleLastRecentlyUsedCacheTest": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.FutureCallback",
    "com.google.common.util.concurrent.Futures",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestSimpleGetMemcachedCaching": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder",
    "net.spy.memcached.FailureMode"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.MemCacheDaemon",
    "com.thimbleware.jmemcached.Cache"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.SerializableOnlyCacheWithExpiry": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.factory.FolsomReferencedClientFactory": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.net.HostAndPort"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.spotify:folsom:jar:0.7.1:compile": [
    "com.spotify.folsom.MemcacheClientBuilder",
    "com.spotify.folsom.MemcacheClient"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.folsom.transcoder.StringTranscoder": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.base.Charsets"
   ],
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ],
   "org.xerial.snappy:snappy-java:jar:1.1.1.7:compile": [
    "org.xerial.snappy.Snappy"
   ],
   "com.spotify:folsom:jar:0.7.1:compile": [
    "com.spotify.folsom.Transcoder"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.BaseMemcachedCache$3": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.SettableFuture",
    "com.google.common.util.concurrent.FutureCallback"
   ],
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.BaseMemcachedCache$2": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.SettableFuture",
    "com.google.common.util.concurrent.FutureCallback"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.cachetests.get.PerfTestApplyCommand": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.annotations.BenchmarkMode",
    "org.openjdk.jmh.annotations.Mode",
    "org.openjdk.jmh.annotations.Benchmark"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.BaseMemcachedCache$1": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.FutureCallback"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.ElastiCacheMemcachedCache": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ]
  },
  "org.greencheek.caching.herdcache.lru.SimpleLastRecentlyUsedCache": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.SettableFuture",
    "com.google.common.util.concurrent.Futures",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ],
   "com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:jar:1.4.2:compile": [
    "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap",
    "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder"
   ]
  },
  "org.greencheek.caching.herdcache.SimpleLastRecentlyUsedCacheTest$1": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.FutureCallback"
   ]
  },
  "org.greencheek.caching.herdcache.SimpleLastRecentlyUsedCacheTest$2": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.FutureCallback"
   ]
  },
  "org.greencheek.caching.herdcache.Cache": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestMultipleHostsElastiCacheMemcachedCaching": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.Cache",
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.lru.expiry.IdleTimedEntryWithExpiry": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.SettableFuture"
   ]
  },
  "org.greencheek.caching.herdcache.lru.expiry.TimedEntryWithExpiry": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.SettableFuture"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestMultipleForceConfigReconnection": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.Cache",
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestNoHostsElastiCacheMemcachedCaching": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.Cache",
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestSimpleElastiCacheMemcachedCaching": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.Cache",
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.CacheWithExpiry": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListenableFuture",
    "com.google.common.util.concurrent.ListeningExecutorService"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestMultipleHostsWithNonCachingConfigElastiCacheMemcachedCaching": {
   "com.google.guava:guava:jar:18.0:compile": [
    "com.google.common.util.concurrent.ListeningExecutorService",
    "com.google.common.util.concurrent.MoreExecutors",
    "com.google.common.util.concurrent.ListenableFuture"
   ],
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.Cache",
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.config.MemcachedCacheConfig": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder",
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.FailureMode",
    "net.spy.memcached.ConnectionFactoryBuilder$Locator",
    "net.spy.memcached.transcoders.Transcoder"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.FastSerializingTranscoder": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.CachedData"
   ],
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ],
   "de.ruedigermoeller:fst:jar:1.63:compile": [
    "de.ruedigermoeller.serialization.FSTConfiguration",
    "de.ruedigermoeller.serialization.FSTObjectInput",
    "de.ruedigermoeller.serialization.FSTObjectOutput"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.cachetests.cacheobjects.XXNativeHashAlgoAndKeyHashingSpyMemcachedCache": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.annotations.Setup",
    "org.openjdk.jmh.annotations.Scope",
    "org.openjdk.jmh.annotations.State",
    "org.openjdk.jmh.annotations.TearDown"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.TestFolsomStaleMemcachedCaching": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.config.builder.MemcachedCacheConfigBuilder": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder",
    "net.spy.memcached.DefaultConnectionFactory",
    "net.spy.memcached.ConnectionFactoryBuilder$Locator",
    "net.spy.memcached.transcoders.Transcoder",
    "net.spy.memcached.DefaultHashAlgorithm",
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.FailureMode"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.connection.NoKeyValidationMemcachedConnection": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.OperationFactory",
    "net.spy.memcached.ConnectionFactory",
    "net.spy.memcached.FailureMode",
    "net.spy.memcached.ops.Operation",
    "net.spy.memcached.MemcachedConnection",
    "net.spy.memcached.ConnectionObserver"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.cachetests.cacheobjects.JenkinsHashSpyMemcachedCache": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.annotations.Setup",
    "org.openjdk.jmh.annotations.Scope",
    "org.openjdk.jmh.annotations.State",
    "org.openjdk.jmh.annotations.TearDown"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.cachetests.cacheobjects.SHA256KeyHashingJenkinsHashSpyMemcachedCache": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.annotations.Setup",
    "org.openjdk.jmh.annotations.Scope",
    "org.openjdk.jmh.annotations.State",
    "org.openjdk.jmh.annotations.TearDown"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.connection.NoValidationConnectionFactory": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.DefaultConnectionFactory",
    "net.spy.memcached.FailureMode",
    "net.spy.memcached.MemcachedConnection"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.hashing.XXHashAlogrithm": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm"
   ],
   "net.jpountz.lz4:lz4:jar:1.3.0:compile": [
    "net.jpountz.xxhash.XXHashFactory",
    "net.jpountz.xxhash.XXHash32"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.factory.SpyReferencedClient": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.MemcachedClientIF",
    "net.spy.memcached.internal.CheckedOperationTimeoutException",
    "net.spy.memcached.OperationTimeoutException"
   ],
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.cachetests.cacheobjects.FolsomMemcachedCache": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.annotations.Setup",
    "org.openjdk.jmh.annotations.Scope",
    "org.openjdk.jmh.annotations.State",
    "org.openjdk.jmh.annotations.TearDown"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.hashing.JenkinsHash": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spyconnectionfactory.SpyConnectionFactoryBuilder": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactory",
    "net.spy.memcached.FailureMode",
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.ConnectionFactoryBuilder$Locator",
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder",
    "net.spy.memcached.transcoders.Transcoder"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.hashing.AsciiXXHashAlogrithm": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm"
   ],
   "net.jpountz.lz4:lz4:jar:1.3.0:compile": [
    "net.jpountz.xxhash.XXHashFactory",
    "net.jpountz.xxhash.XXHash32"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.factory.FolsomReferencedClient": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.internal.CheckedOperationTimeoutException",
    "net.spy.memcached.OperationTimeoutException"
   ],
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ],
   "com.spotify:folsom:jar:0.7.1:compile": [
    "com.spotify.folsom.MemcacheClient"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.SerializingTranscoder": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.CachedData",
    "net.spy.memcached.transcoders.TranscoderUtils",
    "net.spy.memcached.transcoders.Transcoder"
   ],
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.connection.CustomConnectionFactoryBuilder$1": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.NodeLocator",
    "net.spy.memcached.ArrayModNodeLocator",
    "net.spy.memcached.ConnectionFactoryBuilder",
    "net.spy.memcached.ops.OperationQueueFactory",
    "net.spy.memcached.auth.AuthDescriptor",
    "net.spy.memcached.ConnectionFactoryBuilder$Locator",
    "net.spy.memcached.metrics.MetricType",
    "net.spy.memcached.ConnectionObserver",
    "net.spy.memcached.transcoders.Transcoder",
    "net.spy.memcached.ops.Operation",
    "net.spy.memcached.KetamaNodeLocator",
    "net.spy.memcached.metrics.MetricCollector",
    "net.spy.memcached.OperationFactory",
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.FailureMode",
    "net.spy.memcached.MemcachedNode"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.connection.CustomConnectionFactoryBuilder$2": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Locator",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.cachetests.cacheobjects.XXHashAlgoSpyMemcachedCache": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.annotations.Setup",
    "org.openjdk.jmh.annotations.Scope",
    "org.openjdk.jmh.annotations.State",
    "org.openjdk.jmh.annotations.TearDown"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.cachetests.cacheobjects.NoKeyHashingJenkinsHashSpyMemcachedCache": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.annotations.Setup",
    "org.openjdk.jmh.annotations.Scope",
    "org.openjdk.jmh.annotations.State",
    "org.openjdk.jmh.annotations.TearDown"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.factory.SpyMemcachedReferencedClientFactory": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.MemcachedClient",
    "net.spy.memcached.ConnectionFactory"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.cachetests.cacheobjects.BinaryAsciiOnlyKeysSpyMemcachedCache": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
    "net.spy.memcached.ConnectionFactoryBuilder"
   ],
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.annotations.Setup",
    "org.openjdk.jmh.annotations.Scope",
    "org.openjdk.jmh.annotations.State",
    "org.openjdk.jmh.annotations.TearDown"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.BaseSerializingTranscoder": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.CachedData",
    "net.spy.memcached.compat.SpyObject",
    "net.spy.memcached.compat.CloseUtil"
   ],
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ],
   "org.xerial.snappy:snappy-java:jar:1.1.1.7:compile": [
    "org.xerial.snappy.Snappy"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.hashing.XX64HashAlogrithm": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.HashAlgorithm"
   ],
   "net.jpountz.lz4:lz4:jar:1.3.0:compile": [
    "net.jpountz.xxhash.XXHashFactory",
    "net.jpountz.xxhash.XXHash64"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.connection.CustomConnectionFactoryBuilder": {
   "net.spy:spymemcached:jar:2.12.0:compile": [
    "net.spy.memcached.ConnectionFactory",
    "net.spy.memcached.ConnectionFactoryBuilder",
    "net.spy.memcached.ops.OperationQueueFactory",
    "net.spy.memcached.auth.AuthDescriptor",
    "net.spy.memcached.metrics.MetricCollector",
    "net.spy.memcached.OperationFactory",
    "net.spy.memcached.HashAlgorithm",
    "net.spy.memcached.FailureMode",
    "net.spy.memcached.ConnectionFactoryBuilder$Locator",
    "net.spy.memcached.metrics.MetricType",
    "net.spy.memcached.transcoders.Transcoder"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.decoder.ConfigInfoDecoder": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ],
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.handler.codec.ReplayingDecoder",
    "io.netty.channel.ChannelHandlerContext",
    "io.netty.buffer.ByteBuf",
    "io.netty.util.ReferenceCountUtil"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.dns.lookup.AddressByNameHostResolver": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.folsom.transcoder.FastTranscoder": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ],
   "org.xerial.snappy:snappy-java:jar:1.1.1.7:compile": [
    "org.xerial.snappy.Snappy"
   ],
   "de.ruedigermoeller:fst:jar:1.63:compile": [
    "de.ruedigermoeller.serialization.FSTConfiguration",
    "de.ruedigermoeller.serialization.FSTObjectInput",
    "de.ruedigermoeller.serialization.FSTObjectOutput"
   ],
   "com.spotify:folsom:jar:0.7.1:compile": [
    "com.spotify.folsom.Transcoder"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.util.MemcachedDaemonFactory": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ],
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$EvictionPolicy",
    "com.thimbleware.jmemcached.MemCacheDaemon",
    "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap",
    "com.thimbleware.jmemcached.Key",
    "com.thimbleware.jmemcached.LocalCacheElement",
    "com.thimbleware.jmemcached.CacheImpl",
    "com.thimbleware.jmemcached.Cache",
    "com.thimbleware.jmemcached.storage.CacheStorage"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.connection.UpdateReferencedMemcachedClientService$1": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.configparsing.DefaultElastiCacheConfigParser": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.connection.UpdateReferencedMemcachedClientService": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.configprocessing.ElastiCacheConfigInfoProcessor": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.handler.ForceReconnectHandler": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ],
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.ChannelHandlerContext",
    "io.netty.channel.ChannelHandler$Sharable",
    "io.netty.channel.ChannelHandlerAdapter",
    "io.netty.channel.ChannelHandler"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.config.hostparsing.CommaSeparatedHostAndPortStringParser": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.handler.ClientInfoClientHandler$1": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger"
   ],
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.bootstrap.Bootstrap",
    "io.netty.channel.EventLoop"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.client.PeriodicConfigRetrievalClient$2": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.Logger"
   ],
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.ChannelFutureListener",
    "io.netty.util.concurrent.Future",
    "io.netty.channel.ChannelFuture"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.client.PeriodicConfigRetrievalClient": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ],
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.socket.nio.NioSocketChannel",
    "io.netty.channel.EventLoopGroup",
    "io.netty.channel.nio.NioEventLoopGroup",
    "io.netty.channel.ChannelFuture",
    "io.netty.bootstrap.Bootstrap"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.handler.ClientInfoClientHandler": {
   "org.slf4j:slf4j-api:jar:1.7.10:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ],
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.ChannelHandlerContext",
    "io.netty.handler.timeout.IdleState",
    "io.netty.handler.timeout.IdleStateEvent",
    "io.netty.channel.ChannelHandler$Sharable",
    "io.netty.channel.EventLoop",
    "io.netty.channel.Channel",
    "io.netty.channel.SimpleChannelInboundHandler",
    "io.netty.channel.ChannelHandler"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.keyhashing.XXHashKeyHashing": {
   "net.jpountz.lz4:lz4:jar:1.3.0:compile": [
    "net.jpountz.xxhash.XXHashFactory",
    "net.jpountz.xxhash.XXHash32",
    "net.jpountz.xxhash.XXHash64"
   ]
  },
  "org.greencheek.caching.herdcache.util.CompressionTest": {
   "org.xerial.snappy:snappy-java:jar:1.1.1.7:compile": [
    "org.xerial.snappy.Snappy"
   ],
   "org.iq80.snappy:snappy:jar:0.3:compile": [
    "org.iq80.snappy.Snappy"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.compression.SnappyPerfTest": {
   "org.xerial.snappy:snappy-java:jar:1.1.1.7:compile": [
    "org.xerial.snappy.Snappy"
   ],
   "org.iq80.snappy:snappy:jar:0.3:compile": [
    "org.iq80.snappy.Snappy"
   ],
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.annotations.BenchmarkMode",
    "org.openjdk.jmh.annotations.Mode"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.util.TestCacheValues": {
   "org.iq80.snappy:snappy:jar:0.3:compile": [
    "org.iq80.snappy.Snappy"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.server.ConfigGetClusterDecoder": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.ChannelHandlerContext",
    "io.netty.buffer.ByteBuf",
    "io.netty.handler.codec.ByteToMessageDecoder"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.server.StringServer": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.handler.logging.LoggingHandler",
    "io.netty.channel.ChannelOption",
    "io.netty.channel.EventLoopGroup",
    "io.netty.channel.socket.nio.NioServerSocketChannel",
    "io.netty.channel.nio.NioEventLoopGroup",
    "io.netty.channel.ChannelFuture",
    "io.netty.handler.logging.LogLevel",
    "io.netty.bootstrap.ServerBootstrap",
    "io.netty.channel.ChannelHandler"
   ],
   "junit:junit:jar:4.11:test": [
    "org.junit.runners.model.Statement",
    "org.junit.rules.TestRule",
    "org.junit.runner.Description"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.server.StringBasedServerHandler$2": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.ChannelHandlerContext",
    "io.netty.buffer.ByteBuf"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.server.StringBasedServerHandler$1": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.ChannelHandlerContext",
    "io.netty.buffer.ByteBuf"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.server.StringBasedServerHandler": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.ChannelHandler$Sharable",
    "io.netty.channel.EventLoop",
    "io.netty.buffer.Unpooled",
    "io.netty.channel.Channel",
    "io.netty.channel.ChannelHandlerContext",
    "io.netty.buffer.ByteBuf",
    "io.netty.channel.SimpleChannelInboundHandler",
    "io.netty.channel.ChannelHandler"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.decoder.InvalidConfigVersionException": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.handler.codec.DecoderException"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.handler.RequestConfigInfoScheduler": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.util.concurrent.EventExecutor",
    "io.netty.channel.ChannelHandlerContext"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.server.StringServer$2": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.bootstrap.ServerBootstrap",
    "io.netty.channel.ChannelFuture"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.server.StringServer$1": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.Channel",
    "io.netty.channel.ChannelInitializer",
    "io.netty.handler.logging.LogLevel",
    "io.netty.handler.logging.LoggingHandler",
    "io.netty.channel.ChannelHandler",
    "io.netty.channel.ChannelPipeline",
    "io.netty.channel.socket.SocketChannel"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.handler.AsciiRequestConfigInfoScheduler": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.util.concurrent.EventExecutor",
    "io.netty.channel.ChannelHandlerContext",
    "io.netty.buffer.ByteBuf",
    "io.netty.buffer.Unpooled"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.client.PeriodicConfigRetrievalClient$1": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.socket.SocketChannelConfig",
    "io.netty.channel.ChannelInitializer",
    "io.netty.channel.ChannelPipeline",
    "io.netty.channel.Channel",
    "io.netty.handler.timeout.IdleStateHandler",
    "io.netty.channel.ChannelHandler",
    "io.netty.channel.socket.SocketChannel"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.handler.AsciiRequestConfigInfoScheduler$RepeatTask": {
   "io.netty:netty-all:jar:4.0.29.Final:compile": [
    "io.netty.channel.Channel",
    "io.netty.channel.ChannelHandlerContext",
    "io.netty.buffer.ByteBuf"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.util.MemcachedDaemonWrapper": {
   "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test": [
    "com.thimbleware.jmemcached.LocalCacheElement",
    "com.thimbleware.jmemcached.MemCacheDaemon"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.hashing.XXHashAlogrithmTest": {
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.client.SlowPeriodicConfigRetrievalClientTest": {
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.After",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.configparsing.SplitByCharTest": {
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.configparsing.DefaultElastiCacheConfigParserTest": {
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.client.PeriodicConfigRetrievalClientTest": {
   "junit:junit:jar:4.11:test": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.util.ResizeableByteBufferTest": {
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "junit.framework.Assert",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.server.StringServer$3": {
   "junit:junit:jar:4.11:test": [
    "org.junit.runners.model.Statement"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.util.ResizableByteBufferNoBoundsCheckingBackedOutputStreamTest": {
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "junit.framework.Assert",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.elasticacheconfig.client.SlowStartupPeriodicConfigRetrievalClientTest": {
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.After",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.greencheek.caching.herdcache.memcached.spy.extensions.hashing.JenkinsHashTest": {
   "junit:junit:jar:4.11:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.greencheek.caching.herdcache.perf.runner.BenchmarkRunner": {
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.runner.RunnerException",
    "org.openjdk.jmh.results.format.ResultFormatType",
    "org.openjdk.jmh.runner.options.OptionsBuilder",
    "org.openjdk.jmh.runner.options.ChainedOptionsBuilder",
    "org.openjdk.jmh.runner.options.VerboseMode",
    "org.openjdk.jmh.runner.Runner",
    "org.openjdk.jmh.runner.options.Options"
   ]
  },
  "org.openjdk.jmh.infra.generated.Blackhole_jmh_B1": {
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.infra.Blackhole"
   ]
  },
  "org.greencheek.caching.herdcache.perf.benchmarks.cachetests.get.generated.PerfTestApplyCommand_applyFolsomTest": {
   "org.openjdk.jmh:jmh-core:jar:1.7.1:test": [
    "org.openjdk.jmh.infra.ThreadParams",
    "org.openjdk.jmh.util.SampleBuffer",
    "org.openjdk.jmh.results.SampleTimeResult",
    "org.openjdk.jmh.infra.BenchmarkParams",
    "org.openjdk.jmh.results.ResultRole",
    "org.openjdk.jmh.results.AverageTimeResult",
    "org.openjdk.jmh.runner.InfraControl",
    "org.openjdk.jmh.results.BenchmarkTaskResult",
    "org.openjdk.jmh.results.RawResults",
    "org.openjdk.jmh.infra.IterationParams",
    "org.openjdk.jmh.results.SingleShotResult",
    "org.openjdk.jmh.results.ThroughputResult"
   ]
  }
 },
 "dependencies": {
  "id": "org.greencheek.caching:herdcache:jar:1.0.23:null",
  "coordinates": "org.greencheek.caching:herdcache:1.0.23",
  "groupId": "org.greencheek.caching",
  "artifactId": "herdcache",
  "version": "1.0.23",
  "packaging": "jar",
  "omitted": false,
  "type": "unknown",
  "status": "unknown",
  "parent": "unknown",
  "allTypes": [],
  "usedTypes": [],
  "usageRatio": -1.0,
  "children": [
   {
    "id": "io.dropwizard.metrics:metrics-core:jar:3.1.0:compile",
    "coordinates": "io.dropwizard.metrics:metrics-core:3.1.0",
    "groupId": "io.dropwizard.metrics",
    "artifactId": "metrics-core",
    "version": "3.1.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 111908,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "com.codahale.metrics.MetricFilter$1",
     "com.codahale.metrics.MetricRegistry$MetricBuilder",
     "com.codahale.metrics.MetricRegistryListener",
     "com.codahale.metrics.Striped64$ThreadHashCode",
     "com.codahale.metrics.CachedGauge",
     "com.codahale.metrics.MetricSet",
     "com.codahale.metrics.Slf4jReporter$1",
     "com.codahale.metrics.Reservoir",
     "com.codahale.metrics.DerivativeGauge",
     "com.codahale.metrics.WeightedSnapshot$WeightedSample",
     "com.codahale.metrics.WeightedSnapshot",
     "com.codahale.metrics.MetricFilter",
     "com.codahale.metrics.InstrumentedExecutorService$InstrumentedCallable",
     "com.codahale.metrics.JmxReporter",
     "com.codahale.metrics.InstrumentedThreadFactory$InstrumentedRunnable",
     "com.codahale.metrics.JmxReporter$JmxMeter",
     "com.codahale.metrics.ScheduledReporter$1",
     "com.codahale.metrics.JmxReporter$JmxCounterMBean",
     "com.codahale.metrics.Metric",
     "com.codahale.metrics.RatioGauge",
     "com.codahale.metrics.CsvReporter$1",
     "com.codahale.metrics.CsvReporter$Builder",
     "com.codahale.metrics.Striped64",
     "com.codahale.metrics.Slf4jReporter",
     "com.codahale.metrics.Clock$CpuTimeClock",
     "com.codahale.metrics.Sampling",
     "com.codahale.metrics.Timer",
     "com.codahale.metrics.JmxReporter$MetricMBean",
     "com.codahale.metrics.Slf4jReporter$Builder",
     "com.codahale.metrics.ConsoleReporter$Builder",
     "com.codahale.metrics.InstrumentedExecutorService$InstrumentedRunnable",
     "com.codahale.metrics.Striped64$Cell",
     "com.codahale.metrics.MetricRegistryListener$Base",
     "com.codahale.metrics.JmxReporter$JmxHistogramMBean",
     "com.codahale.metrics.InstrumentedScheduledExecutorService$InstrumentedPeriodicRunnable",
     "com.codahale.metrics.JvmAttributeGaugeSet",
     "com.codahale.metrics.JmxReporter$JmxTimerMBean",
     "com.codahale.metrics.LongAdder",
     "com.codahale.metrics.JmxAttributeGauge",
     "com.codahale.metrics.JmxReporter$Builder",
     "com.codahale.metrics.UniformReservoir",
     "com.codahale.metrics.JmxReporter$JmxGauge",
     "com.codahale.metrics.JmxReporter$JmxTimer",
     "com.codahale.metrics.Slf4jReporter$WarnLoggerProxy",
     "com.codahale.metrics.MetricRegistry",
     "com.codahale.metrics.ObjectNameFactory",
     "com.codahale.metrics.ScheduledReporter",
     "com.codahale.metrics.ConsoleReporter",
     "com.codahale.metrics.MetricRegistry$MetricBuilder$2",
     "com.codahale.metrics.MetricRegistry$MetricBuilder$1",
     "com.codahale.metrics.UniformSnapshot",
     "com.codahale.metrics.Slf4jReporter$LoggerProxy",
     "com.codahale.metrics.MetricRegistry$MetricBuilder$4",
     "com.codahale.metrics.MetricRegistry$MetricBuilder$3",
     "com.codahale.metrics.Timer$1",
     "com.codahale.metrics.Slf4jReporter$DebugLoggerProxy",
     "com.codahale.metrics.Counting",
     "com.codahale.metrics.Clock$UserTimeClock",
     "com.codahale.metrics.InstrumentedExecutorService",
     "com.codahale.metrics.Counter",
     "com.codahale.metrics.Metered",
     "com.codahale.metrics.EWMA",
     "com.codahale.metrics.ConsoleReporter$1",
     "com.codahale.metrics.WeightedSnapshot$1",
     "com.codahale.metrics.SharedMetricRegistries",
     "com.codahale.metrics.Snapshot",
     "com.codahale.metrics.ThreadLocalRandom$1",
     "com.codahale.metrics.ThreadLocalRandom",
     "com.codahale.metrics.Slf4jReporter$LoggingLevel",
     "com.codahale.metrics.Slf4jReporter$ErrorLoggerProxy",
     "com.codahale.metrics.JmxReporter$1",
     "com.codahale.metrics.InstrumentedScheduledExecutorService",
     "com.codahale.metrics.Gauge",
     "com.codahale.metrics.JmxReporter$JmxGaugeMBean",
     "com.codahale.metrics.SlidingTimeWindowReservoir",
     "com.codahale.metrics.InstrumentedScheduledExecutorService$InstrumentedCallable",
     "com.codahale.metrics.Histogram",
     "com.codahale.metrics.InstrumentedThreadFactory",
     "com.codahale.metrics.JmxReporter$MetricTimeUnits",
     "com.codahale.metrics.JvmAttributeGaugeSet$1",
     "com.codahale.metrics.JvmAttributeGaugeSet$2",
     "com.codahale.metrics.JvmAttributeGaugeSet$3",
     "com.codahale.metrics.Meter",
     "com.codahale.metrics.JmxReporter$AbstractBean",
     "com.codahale.metrics.SlidingWindowReservoir",
     "com.codahale.metrics.Striped64$1",
     "com.codahale.metrics.Timer$Context",
     "com.codahale.metrics.Clock",
     "com.codahale.metrics.RatioGauge$Ratio",
     "com.codahale.metrics.Striped64$HashCode",
     "com.codahale.metrics.Slf4jReporter$InfoLoggerProxy",
     "com.codahale.metrics.ScheduledReporter$NamedThreadFactory",
     "com.codahale.metrics.DefaultObjectNameFactory",
     "com.codahale.metrics.ExponentiallyDecayingReservoir",
     "com.codahale.metrics.CsvReporter",
     "com.codahale.metrics.InstrumentedScheduledExecutorService$InstrumentedRunnable",
     "com.codahale.metrics.JmxReporter$JmxCounter",
     "com.codahale.metrics.JmxReporter$JmxHistogram",
     "com.codahale.metrics.Slf4jReporter$TraceLoggerProxy",
     "com.codahale.metrics.JmxReporter$JmxMeterMBean",
     "com.codahale.metrics.Reporter",
     "com.codahale.metrics.JmxReporter$JmxListener"
    ],
    "usedTypes": [
     "com.codahale.metrics.Meter",
     "com.codahale.metrics.MetricRegistry",
     "com.codahale.metrics.ConsoleReporter$Builder",
     "com.codahale.metrics.ConsoleReporter",
     "com.codahale.metrics.Counter",
     "com.codahale.metrics.Timer"
    ],
    "usageRatio": 0.058823529411764705,
    "children": [
     {
      "id": "org.slf4j:slf4j-api:jar:1.7.7:compile",
      "coordinates": "org.slf4j:slf4j-api:1.7.7",
      "groupId": "org.slf4j",
      "artifactId": "slf4j-api",
      "version": "1.7.7",
      "scope": "compile",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "io.dropwizard.metrics:metrics-core:jar:3.1.0:compile",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     }
    ]
   },
   {
    "id": "com.github.ben-manes.caffeine:caffeine:jar:1.3.1:compile",
    "coordinates": "com.github.ben-manes.caffeine:caffeine:1.3.1",
    "groupId": "com.github.ben-manes.caffeine",
    "artifactId": "caffeine",
    "version": "1.3.1",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 2145187,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMSAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWAMW",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedEviction",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoA",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoAWRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESAW",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$KeySet",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoAWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWAW",
     "com.github.benmanes.caffeine.SCQHeader$PadHead",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESA",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$WW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMSAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWAMS",
     "com.github.benmanes.caffeine.cache.DisabledBuffer",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiAWR",
     "com.github.benmanes.caffeine.SCQHeader$HeadAndTailRef",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMW",
     "com.github.benmanes.caffeine.locks.NonReentrantLock$Sync",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMWAWR",
     "com.github.benmanes.caffeine.cache.AbstractLinkedDeque$PeekingIterator",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMWWR",
     "com.github.benmanes.caffeine.cache.References$WeakKeyReference",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoWMW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMWR",
     "com.github.benmanes.caffeine.cache.stats.CacheStats",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESAW",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedExpireAfterWrite",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoAMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoAMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$109",
     "com.github.benmanes.caffeine.cache.NodeFactory$1",
     "com.github.benmanes.caffeine.cache.NodeFactory$107",
     "com.github.benmanes.caffeine.cache.NodeFactory$108",
     "com.github.benmanes.caffeine.cache.NodeFactory$105",
     "com.github.benmanes.caffeine.cache.NodeFactory$106",
     "com.github.benmanes.caffeine.cache.NodeFactory$103",
     "com.github.benmanes.caffeine.cache.NodeFactory$104",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$ValuesIterator",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$101",
     "com.github.benmanes.caffeine.cache.NodeFactory$102",
     "com.github.benmanes.caffeine.cache.References$SoftValueReference",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMSA",
     "com.github.benmanes.caffeine.cache.NodeFactory$9",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$100",
     "com.github.benmanes.caffeine.cache.NodeFactory$8",
     "com.github.benmanes.caffeine.cache.NodeFactory$7",
     "com.github.benmanes.caffeine.cache.NodeFactory$6",
     "com.github.benmanes.caffeine.cache.NodeFactory$5",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$4",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMSAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$3",
     "com.github.benmanes.caffeine.cache.NodeFactory$2",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$118",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$119",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMSAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$116",
     "com.github.benmanes.caffeine.cache.NodeFactory$117",
     "com.github.benmanes.caffeine.cache.Weigher",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMWW",
     "com.github.benmanes.caffeine.cache.NodeFactory$114",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$115",
     "com.github.benmanes.caffeine.cache.NodeFactory$112",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$113",
     "com.github.benmanes.caffeine.cache.NodeFactory$110",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$111",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoWRMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESW",
     "com.github.benmanes.caffeine.cache.LoadingCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESR",
     "com.github.benmanes.caffeine.cache.SystemTicker",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMSAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$129",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESR",
     "com.github.benmanes.caffeine.cache.WriteOrderDeque",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$127",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$128",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$AddTask",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESW",
     "com.github.benmanes.caffeine.cache.NodeFactory$125",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$126",
     "com.github.benmanes.caffeine.cache.NodeFactory$123",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMSAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$124",
     "com.github.benmanes.caffeine.cache.NodeFactory$121",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESA",
     "com.github.benmanes.caffeine.cache.NodeFactory$122",
     "com.github.benmanes.caffeine.cache.NodeFactory$120",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMWR",
     "com.github.benmanes.caffeine.cache.Policy$Eviction",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLi",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStAW",
     "com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
     "com.github.benmanes.caffeine.cache.NodeFactory$138",
     "com.github.benmanes.caffeine.cache.NodeFactory$139",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$136",
     "com.github.benmanes.caffeine.cache.NodeFactory$137",
     "com.github.benmanes.caffeine.cache.NodeFactory$134",
     "com.github.benmanes.caffeine.cache.NodeFactory$135",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$132",
     "com.github.benmanes.caffeine.cache.NodeFactory$133",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMSAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$130",
     "com.github.benmanes.caffeine.cache.NodeFactory$131",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoARMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoARMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$143",
     "com.github.benmanes.caffeine.cache.NodeFactory$144",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$141",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$142",
     "com.github.benmanes.caffeine.cache.NodeFactory$140",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMWAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoAWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoAWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMSR",
     "com.github.benmanes.caffeine.cache.BoundedBuffer$RingBuffer",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStAMW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStAMS",
     "com.github.benmanes.caffeine.cache.SingletonWeigher",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMSA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSt",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSo",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEA",
     "com.github.benmanes.caffeine.cache.BLCHeader",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMSR",
     "com.github.benmanes.caffeine.ConcurrentLinkedStack$LinearizableNode",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMSAW",
     "com.github.benmanes.caffeine.cache.Buffer",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMSAR",
     "com.github.benmanes.caffeine.cache.CacheLoader",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMWAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMSA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMWAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWWRMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWARMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWARMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiE",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedExpireAfterAccess",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMWWR",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$EntrySet",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMWAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoMW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMWW",
     "com.github.benmanes.caffeine.cache.AsyncLoadingCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMWW",
     "com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$AsMapView$Values$1",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSAW",
     "com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStAWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStAWRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSAR",
     "com.github.benmanes.caffeine.cache.AbstractLinkedDeque$1",
     "com.github.benmanes.caffeine.cache.AbstractLinkedDeque$2",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WI",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMS",
     "com.github.benmanes.caffeine.cache.RemovalCause",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIAWR",
     "com.github.benmanes.caffeine.cache.LocalCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMSAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoAMS",
     "com.github.benmanes.caffeine.CLSHeader$TopRef",
     "com.github.benmanes.caffeine.cache.DisabledWriter",
     "com.github.benmanes.caffeine.cache.CacheWriter",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMSAR",
     "com.github.benmanes.caffeine.cache.Policy",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMWAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SI",
     "com.github.benmanes.caffeine.SingleConsumerQueue$LinearizableNode",
     "com.github.benmanes.caffeine.locks.NonReentrantLock",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoAMW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStWRMW",
     "com.github.benmanes.caffeine.cache.BBHeader$PadWriteCounter",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStWRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSR",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$EntryIterator",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStARMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStARMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSE",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESR",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalLoadingCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILi",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILo",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWAWR",
     "com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$LoadingCacheView",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMSR",
     "com.github.benmanes.caffeine.cache.Caffeine$1",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSt",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSo",
     "com.github.benmanes.caffeine.cache.LinkedDeque",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMW",
     "com.github.benmanes.caffeine.CLSHeader$PadTop",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStAWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMSAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWRMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStAWMW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWAMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWAMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMW",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMSAWR",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalAsyncLoadingCache",
     "com.github.benmanes.caffeine.cache.RemovalListener",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStAWRMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStAWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSWR",
     "com.github.benmanes.caffeine.SCQHeader",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISW",
     "com.github.benmanes.caffeine.cache.Caffeine$Strength",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSAW",
     "com.github.benmanes.caffeine.SingleConsumerQueue$SerializationProxy",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMSWR",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntryIterator",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESA",
     "com.github.benmanes.caffeine.cache.BBHeader$ReadCounterRef",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMSAWR",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$Values",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMWWR",
     "com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$AsyncBulkCompleter",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLi",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMS",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalAsyncLoadingCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStARMW",
     "com.github.benmanes.caffeine.ConcurrentLinkedStack$Node",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStARMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMSA",
     "com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$AsMapView$EntrySet",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSE",
     "com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$AsMapView$EntrySet$1",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStWRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMWW",
     "com.github.benmanes.caffeine.ConcurrentLinkedStack$AsLifoQueue",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILi",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILo",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMWAWR",
     "com.github.benmanes.caffeine.cache.SerializationProxy",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWAWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiER",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWAWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMWA",
     "com.github.benmanes.caffeine.cache.RemovalNotification",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMSA",
     "com.github.benmanes.caffeine.cache.Policy$Expiration",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMSR",
     "com.github.benmanes.caffeine.cache.DisabledTicker",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMWWR",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$ValuesView",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMWA",
     "com.github.benmanes.caffeine.SingleConsumerQueue$1",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMSAWR",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMS",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedPolicy",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoER",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiES",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalLoadingCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMWW",
     "com.github.benmanes.caffeine.cache.Caffeine",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStAWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESMSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStAWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSW",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$RemovalTask",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMSWR",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$UpdateTask",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMWA",
     "com.github.benmanes.caffeine.cache.WriteThroughEntry",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMSW",
     "com.github.benmanes.caffeine.cache.stats.DisabledStatsCounter",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMWAR",
     "com.github.benmanes.caffeine.cache.BoundedBuffer",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiWR",
     "com.github.benmanes.caffeine.base.UnsafeAccess",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMWW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLi",
     "com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$AsMapView",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMSAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStAMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMSA",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$KeySetView",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStAMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSER",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStRMW",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$KeyIterator",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMWAWR",
     "com.github.benmanes.caffeine.cache.stats.StatsCounter",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEA",
     "com.github.benmanes.caffeine.cache.WriteOrderDeque$WriteOrder",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMWAWR",
     "com.github.benmanes.caffeine.cache.Node",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMSAW",
     "com.github.benmanes.caffeine.cache.Cache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMSAW",
     "com.github.benmanes.caffeine.cache.Async$AsyncWeigher",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMWA",
     "com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$1",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMSAR",
     "com.github.benmanes.caffeine.cache.LocalLoadingCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMWAW",
     "com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoEMWA",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy$BoundedRefreshAfterWrite",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLo",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiS",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoAWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WISAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoAWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMSAW",
     "com.github.benmanes.caffeine.cache.AccessOrderDeque$AccessOrder",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLi",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMW",
     "com.github.benmanes.caffeine.cache.NodeFactory$61",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoAWRMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$60",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$63",
     "com.github.benmanes.caffeine.cache.NodeFactory$62",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoAWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$69",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$68",
     "com.github.benmanes.caffeine.cache.NodeFactory$65",
     "com.github.benmanes.caffeine.cache.NodeFactory$64",
     "com.github.benmanes.caffeine.cache.NodeFactory$67",
     "com.github.benmanes.caffeine.cache.NodeFactory$66",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSA",
     "com.github.benmanes.caffeine.cache.stats.ConcurrentStatsCounter",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMWW",
     "com.github.benmanes.caffeine.cache.NodeFactory$72",
     "com.github.benmanes.caffeine.cache.NodeFactory$71",
     "com.github.benmanes.caffeine.cache.NodeFactory$74",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$73",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$70",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$79",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStW",
     "com.github.benmanes.caffeine.cache.NodeFactory$76",
     "com.github.benmanes.caffeine.cache.NodeFactory$75",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$78",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$77",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMS",
     "com.github.benmanes.caffeine.cache.Async",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$83",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLi",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$82",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWAWMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$85",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMSAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$84",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMSAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$81",
     "com.github.benmanes.caffeine.cache.NodeFactory$80",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMWAW",
     "com.github.benmanes.caffeine.cache.BBHeader$PadReadCounter",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$87",
     "com.github.benmanes.caffeine.cache.NodeFactory$86",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWAWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$89",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$88",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$94",
     "com.github.benmanes.caffeine.cache.NodeFactory$93",
     "com.github.benmanes.caffeine.cache.NodeFactory$96",
     "com.github.benmanes.caffeine.cache.NodeFactory$95",
     "com.github.benmanes.caffeine.cache.NodeFactory$90",
     "com.github.benmanes.caffeine.cache.NodeFactory$92",
     "com.github.benmanes.caffeine.cache.NodeFactory$91",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLo",
     "com.github.benmanes.caffeine.cache.NodeFactory$98",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLi",
     "com.github.benmanes.caffeine.cache.NodeFactory$97",
     "com.github.benmanes.caffeine.SingleConsumerQueue",
     "com.github.benmanes.caffeine.cache.NodeFactory$99",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSA",
     "com.github.benmanes.caffeine.cache.RemovalCause$5",
     "com.github.benmanes.caffeine.cache.NodeFactory$29",
     "com.github.benmanes.caffeine.cache.RemovalCause$4",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$28",
     "com.github.benmanes.caffeine.cache.RemovalCause$3",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMW",
     "com.github.benmanes.caffeine.cache.RemovalCause$2",
     "com.github.benmanes.caffeine.cache.RemovalCause$1",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMSW",
     "com.github.benmanes.caffeine.ConcurrentLinkedStack$StackIterator",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSR",
     "com.github.benmanes.caffeine.cache.AbstractLinkedDeque",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSW",
     "com.github.benmanes.caffeine.cache.NodeFactory$25",
     "com.github.benmanes.caffeine.cache.NodeFactory$24",
     "com.github.benmanes.caffeine.cache.NodeFactory$27",
     "com.github.benmanes.caffeine.cache.NodeFactory$26",
     "com.github.benmanes.caffeine.cache.NodeFactory$21",
     "com.github.benmanes.caffeine.cache.NodeFactory$20",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMSA",
     "com.github.benmanes.caffeine.cache.NodeFactory$23",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$22",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoE",
     "com.github.benmanes.caffeine.cache.NodeFactory$39",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoS",
     "com.github.benmanes.caffeine.cache.NodeFactory$30",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$36",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$35",
     "com.github.benmanes.caffeine.cache.NodeFactory$38",
     "com.github.benmanes.caffeine.cache.NodeFactory$37",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$32",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoW",
     "com.github.benmanes.caffeine.cache.NodeFactory$31",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMSA",
     "com.github.benmanes.caffeine.cache.NodeFactory$34",
     "com.github.benmanes.caffeine.cache.NodeFactory$33",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySetView",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStA",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStWMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$41",
     "com.github.benmanes.caffeine.cache.NodeFactory$40",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$47",
     "com.github.benmanes.caffeine.cache.NodeFactory$46",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStWMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$49",
     "com.github.benmanes.caffeine.cache.NodeFactory$48",
     "com.github.benmanes.caffeine.cache.NodeFactory$43",
     "com.github.benmanes.caffeine.cache.NodeFactory$42",
     "com.github.benmanes.caffeine.cache.NodeFactory$45",
     "com.github.benmanes.caffeine.cache.NodeFactory$44",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$50",
     "com.github.benmanes.caffeine.cache.NodeFactory$52",
     "com.github.benmanes.caffeine.cache.BoundedWeigher",
     "com.github.benmanes.caffeine.cache.NodeFactory$51",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$58",
     "com.github.benmanes.caffeine.cache.NodeFactory$57",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$59",
     "com.github.benmanes.caffeine.cache.NodeFactory$54",
     "com.github.benmanes.caffeine.cache.NodeFactory$53",
     "com.github.benmanes.caffeine.cache.NodeFactory$56",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$55",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMWWR",
     "com.github.benmanes.caffeine.cache.Ticker",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoER",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoES",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMWA",
     "com.github.benmanes.caffeine.cache.BBHeader",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWARMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMSAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWARMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMSWR",
     "com.github.benmanes.caffeine.cache.References$LookupKeyReference",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMWWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWWRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$18",
     "com.github.benmanes.caffeine.cache.NodeFactory$17",
     "com.github.benmanes.caffeine.cache.NodeFactory$19",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiE",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiA",
     "com.github.benmanes.caffeine.cache.StripedBuffer",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$14",
     "com.github.benmanes.caffeine.cache.NodeFactory$13",
     "com.github.benmanes.caffeine.cache.NodeFactory$16",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiW",
     "com.github.benmanes.caffeine.cache.NodeFactory$15",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiESWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$10",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiR",
     "com.github.benmanes.caffeine.cache.NodeFactory$12",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiS",
     "com.github.benmanes.caffeine.cache.NodeFactory$11",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiSMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WStAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMWW",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$ValueIterator",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMWWR",
     "com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$AsMapView$Values",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMWA",
     "com.github.benmanes.caffeine.ConcurrentLinkedStack$SerializationProxy",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMSA",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoARMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMWW",
     "com.github.benmanes.caffeine.Beta",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMWAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoARMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESAWR",
     "com.github.benmanes.caffeine.SCQHeader$HeadRef",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMWA",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiEAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoWRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMW",
     "com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiSMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SISWR",
     "com.github.benmanes.caffeine.cache.BLCHeader$PadDrainStatus",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLiESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMSAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoAW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMSR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiEMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoSMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoESMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMSAR",
     "com.github.benmanes.caffeine.cache.AbstractLinkedDeque$AbstractLinkedIterator",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoLiESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiESMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMSA",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$KeyIterator",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWAWRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SWAWRMW",
     "com.github.benmanes.caffeine.cache.References$WeakValueReference",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMSAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WIESMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMWW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoSMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoEMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiSMSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSESMSAW",
     "com.github.benmanes.caffeine.cache.LocalManualCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiSAR",
     "com.github.benmanes.caffeine.SCQHeader$PadHeadAndTail",
     "com.github.benmanes.caffeine.cache.References",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoEWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiMSAWR",
     "com.github.benmanes.caffeine.SingleConsumerQueue$Node",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiSMWAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WSoA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLiMWWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMWAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWAWRMS",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMWW",
     "com.github.benmanes.caffeine.cache.NodeFactory$WWAWRMW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSESMSWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSLoSMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMWAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMSR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiSMWA",
     "com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalManualCache",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiESMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMSW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILoLiMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILoLiEAWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMWA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SIEMWAR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SStW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMWAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSAW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoLiMWW",
     "com.github.benmanes.caffeine.ConcurrentLinkedStack",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSAR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiSMSA",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SSEAWR",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSLoESW",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$SILiEMSAWR",
     "com.github.benmanes.caffeine.cache.AccessOrderDeque",
     "com.github.benmanes.caffeine.cache.Async$AsyncRemovalListener",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiMSWR",
     "com.github.benmanes.caffeine.CLSHeader",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WILiAW",
     "com.github.benmanes.caffeine.cache.References$InternalReference",
     "com.github.benmanes.caffeine.cache.LocalCacheFactory$WSMSWR",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoWMS",
     "com.github.benmanes.caffeine.cache.NodeFactory$SSoWMW"
    ],
    "usedTypes": [
     "com.github.benmanes.caffeine.cache.Caffeine",
     "com.github.benmanes.caffeine.cache.Cache"
    ],
    "usageRatio": 0.0010230179028132991,
    "children": [
     {
      "id": "com.github.ben-manes.caffeine:tracing-api:jar:1.3.1:compile",
      "coordinates": "com.github.ben-manes.caffeine:tracing-api:1.3.1",
      "groupId": "com.github.ben-manes.caffeine",
      "artifactId": "tracing-api",
      "version": "1.3.1",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 10010,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.github.ben-manes.caffeine:caffeine:jar:1.3.1:compile",
      "allTypes": [
       "com.github.benmanes.caffeine.cache.tracing.TraceEvent$Action",
       "com.github.benmanes.caffeine.cache.tracing.Tracer",
       "com.github.benmanes.caffeine.cache.tracing.TraceEventFormats",
       "com.github.benmanes.caffeine.cache.tracing.DisabledTracer",
       "com.github.benmanes.caffeine.cache.tracing.TraceEvent",
       "com.github.benmanes.caffeine.cache.tracing.TracerIdGenerator",
       "com.github.benmanes.caffeine.cache.tracing.TracerHolder"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "com.google.guava:guava:jar:18.0:compile",
    "coordinates": "com.google.guava:guava:18.0",
    "groupId": "com.google.guava",
    "artifactId": "guava",
    "version": "18.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 2256213,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "com.google.common.reflect.TypeToken$SimpleTypeToken",
     "com.google.common.collect.ImmutableMultimap$Itr",
     "com.google.common.collect.HashBiMap$Inverse$1",
     "com.google.common.collect.Maps$ValueDifferenceImpl",
     "com.google.common.collect.ImmutableMultimap$FieldSettersHolder",
     "com.google.common.collect.DenseImmutableTable$Column",
     "com.google.common.collect.PeekingIterator",
     "com.google.common.collect.FilteredKeyListMultimap",
     "com.google.common.collect.MapMakerInternalMap$EvictionQueue$2",
     "com.google.common.collect.ImmutableClassToInstanceMap$Builder",
     "com.google.common.primitives.SignedBytes$LexicographicalComparator",
     "com.google.common.base.Predicates$ContainsPatternPredicate",
     "com.google.common.collect.MapMakerInternalMap$EvictionQueue$1",
     "com.google.common.collect.LinkedListMultimap$3$1",
     "com.google.common.collect.RegularImmutableMap",
     "com.google.common.base.Objects$ToStringHelper",
     "com.google.common.reflect.ClassPath$1",
     "com.google.common.collect.AbstractSortedKeySortedSetMultimap",
     "com.google.common.collect.TreeTraverser$PostOrderIterator",
     "com.google.common.collect.MultimapBuilder$SetMultimapBuilder",
     "com.google.common.cache.CacheBuilderSpec",
     "com.google.common.base.Joiner",
     "com.google.common.hash.Hashing$ChecksumType$2",
     "com.google.common.hash.Hashing$ChecksumType$1",
     "com.google.common.collect.DenseImmutableTable$ColumnMap",
     "com.google.common.collect.AbstractMultimap$Values",
     "com.google.common.net.HostSpecifier",
     "com.google.thirdparty.publicsuffix.PublicSuffixType",
     "com.google.common.util.concurrent.AbstractIdleService$3",
     "com.google.common.collect.Lists$Partition",
     "com.google.common.hash.Hashing$SipHash24Holder",
     "com.google.common.io.Resources$1",
     "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1",
     "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2",
     "com.google.common.collect.Sets$PowerSet$1",
     "com.google.common.util.concurrent.AbstractIdleService$1",
     "com.google.common.util.concurrent.AbstractIdleService$2",
     "com.google.common.base.Functions",
     "com.google.common.collect.MapMakerInternalMap$Strength",
     "com.google.common.math.DoubleUtils",
     "com.google.common.collect.Constraints$ConstrainedListIterator",
     "com.google.common.collect.ImmutableSortedSet$Builder",
     "com.google.common.util.concurrent.Service",
     "com.google.common.collect.Multimaps$UnmodifiableMultimap",
     "com.google.common.cache.RemovalListeners",
     "com.google.common.collect.Maps$FilteredEntryMap$EntrySet",
     "com.google.common.collect.StandardTable",
     "com.google.common.collect.ImmutableSortedMultiset$SerializedForm",
     "com.google.common.cache.Striped64$Cell",
     "com.google.common.base.Converter$1",
     "com.google.common.collect.ImmutableEntry",
     "com.google.common.base.Joiner$1",
     "com.google.common.io.Closer$SuppressingSuppressor",
     "com.google.common.base.Joiner$2",
     "com.google.common.collect.StandardTable$1",
     "com.google.common.util.concurrent.SimpleTimeLimiter",
     "com.google.common.base.Joiner$3",
     "com.google.common.collect.AbstractTable$1",
     "com.google.common.primitives.Chars$CharArrayAsList",
     "com.google.common.base.CharMatcher$BitSetMatcher",
     "com.google.common.base.FinalizableReferenceQueue$SystemLoader",
     "com.google.common.io.LineReader$1",
     "com.google.common.collect.Lists$AbstractListWrapper",
     "com.google.common.collect.AbstractMapBasedMultiset",
     "com.google.common.math.package-info",
     "com.google.common.collect.Multisets$FilteredMultiset$1",
     "com.google.common.collect.DiscreteDomain$LongDomain",
     "com.google.common.collect.SortedLists$1",
     "com.google.common.hash.ChecksumHashFunction",
     "com.google.common.base.Equivalence$Identity",
     "com.google.common.collect.MapConstraints$ConstrainedEntries$1",
     "com.google.common.collect.EnumBiMap",
     "com.google.common.collect.AbstractNavigableMap$1",
     "com.google.common.base.AbstractIterator$1",
     "com.google.common.escape.Platform",
     "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
     "com.google.common.collect.EmptyImmutableListMultimap",
     "com.google.common.collect.Collections2$FilteredCollection",
     "com.google.common.collect.ImmutableMultiset$SerializedForm",
     "com.google.common.reflect.TypeResolver$1",
     "com.google.common.collect.RegularImmutableTable$CellSet$1",
     "com.google.common.collect.FluentIterable$1",
     "com.google.common.collect.Maps$FilteredEntrySortedMap",
     "com.google.common.cache.CacheBuilderSpec$KeyStrengthParser",
     "com.google.common.collect.ArrayTable$ColumnMap",
     "com.google.common.collect.Iterators$PeekingImpl",
     "com.google.common.hash.Funnels$IntegerFunnel",
     "com.google.common.collect.ForwardingList",
     "com.google.common.collect.Multimaps$Keys$1",
     "com.google.common.escape.Escapers$Builder",
     "com.google.common.cache.LocalCache$Segment",
     "com.google.common.collect.HashBiMap",
     "com.google.common.collect.Maps$EntryTransformer",
     "com.google.common.collect.Ordering",
     "com.google.common.util.concurrent.SerializingExecutor$1",
     "com.google.common.io.ByteSource$ConcatenatedByteSource",
     "com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet",
     "com.google.common.collect.EnumMultiset",
     "com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser",
     "com.google.common.collect.AllEqualOrdering",
     "com.google.common.util.concurrent.CheckedFuture",
     "com.google.common.io.GwtWorkarounds$6",
     "com.google.common.reflect.Types$JavaVersion$3",
     "com.google.common.reflect.Types$JavaVersion$4",
     "com.google.common.reflect.Types$JavaVersion$1",
     "com.google.common.reflect.Types$JavaVersion$2",
     "com.google.common.util.concurrent.Striped$2",
     "com.google.common.io.GwtWorkarounds$1",
     "com.google.common.util.concurrent.Striped$1",
     "com.google.common.cache.CacheLoader$1",
     "com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder",
     "com.google.common.io.GwtWorkarounds$4",
     "com.google.common.collect.Lists$TwoPlusArrayList",
     "com.google.common.io.GwtWorkarounds$5",
     "com.google.common.collect.ForwardingImmutableMap",
     "com.google.common.io.GwtWorkarounds$2",
     "com.google.common.io.GwtWorkarounds$3",
     "com.google.common.io.ByteSource$1",
     "com.google.common.collect.Cut$1",
     "com.google.common.cache.LocalCache$Values",
     "com.google.common.cache.LocalCache$WeakValueReference",
     "com.google.common.collect.MapConstraints$ConstrainedMap",
     "com.google.common.util.concurrent.Futures$ChainingListenableFuture",
     "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2",
     "com.google.common.collect.RegularImmutableMap$1",
     "com.google.common.util.concurrent.Striped$PaddedSemaphore",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$2",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$1",
     "com.google.common.util.concurrent.ServiceManager$1",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$4",
     "com.google.common.base.Equivalence$1",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$3",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$5",
     "com.google.common.util.concurrent.ServiceManager$2",
     "com.google.common.base.FinalizableReferenceQueue",
     "com.google.common.collect.Multimaps$UnmodifiableMultimap$1",
     "com.google.common.collect.Cut$BelowValue",
     "com.google.common.collect.ImmutableSetMultimap$Builder",
     "com.google.common.collect.ImmutableMapEntrySet",
     "com.google.common.collect.Multimaps",
     "com.google.common.collect.ClassToInstanceMap",
     "com.google.common.collect.ImmutableMultiset",
     "com.google.common.util.concurrent.Futures$ChainingListenableFuture$1",
     "com.google.common.collect.ImmutableMultimap$Keys",
     "com.google.common.collect.Multisets$AbstractEntry",
     "com.google.common.util.concurrent.UncheckedTimeoutException",
     "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator",
     "com.google.common.hash.Hasher",
     "com.google.common.io.ByteSource",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputedReference",
     "com.google.common.primitives.UnsignedBytes",
     "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1",
     "com.google.common.util.concurrent.AbstractScheduledService$1$4",
     "com.google.common.base.CharMatcher$And",
     "com.google.common.util.concurrent.AbstractScheduledService$1$3",
     "com.google.common.util.concurrent.AbstractScheduledService$1$2",
     "com.google.common.collect.ForwardingNavigableMap",
     "com.google.common.util.concurrent.AbstractScheduledService$1$1",
     "com.google.common.util.concurrent.Striped$5",
     "com.google.common.util.concurrent.Striped$4",
     "com.google.common.util.concurrent.Striped$3",
     "com.google.common.collect.Sets$FilteredSortedSet",
     "com.google.common.collect.TreeRangeSet$1",
     "com.google.common.reflect.TypeResolver$TypeMappingIntrospector",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
     "com.google.common.base.FinalizablePhantomReference",
     "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1",
     "com.google.common.io.MultiInputStream",
     "com.google.common.base.Objects$ToStringHelper$ValueHolder",
     "com.google.common.collect.Maps$EntryFunction",
     "com.google.common.collect.AbstractTable$CellSet",
     "com.google.common.hash.Hashing$Sha256Holder",
     "com.google.common.collect.EmptyImmutableSortedSet",
     "com.google.common.collect.ImmutableEnumSet",
     "com.google.common.collect.AbstractMultimap$Entries",
     "com.google.common.collect.HashBiMap$EntrySet$1",
     "com.google.common.primitives.Doubles$LexicographicalComparator",
     "com.google.common.collect.ArrayTable",
     "com.google.common.base.Predicates$ContainsPatternFromStringPredicate",
     "com.google.common.base.Converter",
     "com.google.common.collect.LinkedListMultimap",
     "com.google.common.io.ByteSource$SlicedByteSource",
     "com.google.common.base.Suppliers$SupplierFunction",
     "com.google.common.io.CharSource$CharSequenceCharSource$1$1",
     "com.google.common.primitives.Doubles",
     "com.google.common.reflect.Types$WildcardTypeImpl",
     "com.google.common.collect.MapConstraints$ConstrainedEntrySet",
     "com.google.common.collect.ImmutableList$Builder",
     "com.google.common.util.concurrent.ThreadFactoryBuilder",
     "com.google.common.collect.DenseImmutableTable$RowMap",
     "com.google.common.collect.AbstractMultiset",
     "com.google.common.io.LineBuffer",
     "com.google.common.primitives.Shorts",
     "com.google.common.collect.AbstractTable$Values",
     "com.google.common.collect.CompoundOrdering",
     "com.google.common.collect.Iterators",
     "com.google.common.cache.AbstractCache$SimpleStatsCounter",
     "com.google.common.collect.MapMakerInternalMap$WeakEntry",
     "com.google.common.collect.HashBiMap$Inverse$InverseKeySet$1",
     "com.google.common.collect.Ordering$IncomparableValueException",
     "com.google.common.collect.ImmutableMultiset$1",
     "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1",
     "com.google.common.collect.Maps$TransformedEntriesMap$1",
     "com.google.common.reflect.Types$NativeTypeVariableEquals",
     "com.google.common.collect.Synchronized$SynchronizedMap",
     "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher",
     "com.google.common.cache.Striped64$1",
     "com.google.common.util.concurrent.UncaughtExceptionHandlers",
     "com.google.common.primitives.Doubles$DoubleConverter",
     "com.google.common.io.BaseEncoding$StandardBaseEncoding",
     "com.google.common.reflect.ImmutableTypeToInstanceMap",
     "com.google.common.base.CaseFormat$StringConverter",
     "com.google.common.collect.StandardTable$Column$EntrySet",
     "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
     "com.google.common.collect.Tables$UnmodifiableTable",
     "com.google.common.cache.CacheBuilder$1",
     "com.google.common.cache.CacheBuilder$3",
     "com.google.common.collect.Iterators$MergingIterator",
     "com.google.common.cache.CacheBuilder$2",
     "com.google.common.base.Functions$ForMapWithDefault",
     "com.google.common.collect.ArrayTable$1$1",
     "com.google.common.collect.Collections2$OrderedPermutationIterator",
     "com.google.common.collect.Lists$RandomAccessPartition",
     "com.google.common.collect.Lists$RandomAccessReverseList",
     "com.google.common.collect.Multimaps$TransformedEntriesMultimap",
     "com.google.common.collect.SortedLists",
     "com.google.common.reflect.Types$ClassOwnership$1LocalClass",
     "com.google.common.collect.ImmutableRangeSet",
     "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1",
     "com.google.common.collect.AbstractSortedSetMultimap",
     "com.google.common.base.Functions$FunctionForMapNoDefault",
     "com.google.common.collect.ImmutableMultimap$Values",
     "com.google.common.base.Converter$1$1",
     "com.google.common.collect.ByFunctionOrdering",
     "com.google.common.cache.ForwardingLoadingCache",
     "com.google.common.collect.EmptyImmutableBiMap",
     "com.google.common.collect.ImmutableListMultimap$Builder",
     "com.google.common.collect.ImmutableSortedMap$SerializedForm",
     "com.google.common.collect.ForwardingSortedMap",
     "com.google.common.collect.Serialization",
     "com.google.common.collect.Tables$UnmodifiableRowSortedMap",
     "com.google.common.collect.ForwardingBlockingDeque",
     "com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues",
     "com.google.common.collect.Synchronized$SynchronizedMultimap",
     "com.google.common.primitives.UnsignedLong",
     "com.google.common.util.concurrent.ExecutionError",
     "com.google.common.io.CharSequenceReader",
     "com.google.common.primitives.UnsignedInts",
     "com.google.common.base.Enums",
     "com.google.common.collect.TreeTraverser$PreOrderIterator",
     "com.google.common.collect.Multisets$2$1",
     "com.google.common.collect.UnmodifiableListIterator",
     "com.google.common.collect.LinkedHashMultimap$ValueSet",
     "com.google.common.collect.DenseImmutableTable",
     "com.google.common.collect.ArrayTable$ArrayMap$1$1$1",
     "com.google.common.collect.MinMaxPriorityQueue",
     "com.google.common.base.Preconditions",
     "com.google.common.collect.AbstractRangeSet",
     "com.google.common.collect.BinaryTreeTraverser$InOrderIterator",
     "com.google.common.collect.Collections2$OrderedPermutationCollection",
     "com.google.common.collect.AbstractMultimap$EntrySet",
     "com.google.common.util.concurrent.SettableFuture",
     "com.google.common.base.Predicates$AssignableFromPredicate",
     "com.google.common.collect.ImmutableMultiset$EntrySet$1",
     "com.google.common.cache.LocalCache$AccessQueue",
     "com.google.common.collect.TreeMultiset",
     "com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter",
     "com.google.common.util.concurrent.MoreExecutors$Application",
     "com.google.common.cache.CacheBuilderSpec$MaximumWeightParser",
     "com.google.common.collect.HashMultimap",
     "com.google.common.net.PercentEscaper",
     "com.google.common.collect.LinkedListMultimap$KeyList",
     "com.google.common.collect.Lists$OnePlusArrayList",
     "com.google.common.collect.Synchronized$SynchronizedNavigableSet",
     "com.google.common.util.concurrent.AbstractCheckedFuture",
     "com.google.common.util.concurrent.AtomicLongMap",
     "com.google.common.util.concurrent.ExecutionList",
     "com.google.common.collect.DescendingMultiset",
     "com.google.common.collect.Maps$AsMapView",
     "com.google.common.io.ByteSink$1",
     "com.google.common.collect.ImmutableSet",
     "com.google.common.primitives.Chars$LexicographicalComparator",
     "com.google.common.collect.StandardTable$Column$KeySet",
     "com.google.common.reflect.ClassPath$ResourceInfo",
     "com.google.common.util.concurrent.AbstractFuture$Sync",
     "com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet",
     "com.google.common.cache.CacheLoader",
     "com.google.common.collect.MapMakerInternalMap$KeySet",
     "com.google.common.collect.Cut$AboveValue",
     "com.google.common.cache.LocalCache$SoftValueReference",
     "com.google.common.collect.Maps$FilteredEntryBiMap",
     "com.google.common.base.Splitter$Strategy",
     "com.google.common.primitives.Longs$LexicographicalComparator",
     "com.google.common.util.concurrent.AbstractScheduledService$1",
     "com.google.common.util.concurrent.AbstractScheduledService$3",
     "com.google.common.util.concurrent.AbstractScheduledService$2",
     "com.google.common.collect.ArrayTable$ArrayMap$1",
     "com.google.common.collect.Sets$CartesianSet$1",
     "com.google.common.base.Predicates$ObjectPredicate$1",
     "com.google.common.cache.LocalCache$WeakEntry",
     "com.google.common.hash.Hashing",
     "com.google.common.reflect.TypeToken",
     "com.google.common.collect.AbstractSequentialIterator",
     "com.google.common.collect.EmptyImmutableSet",
     "com.google.common.collect.MapDifference$ValueDifference",
     "com.google.common.collect.TreeTraverser",
     "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
     "com.google.common.io.Files",
     "com.google.common.collect.ForwardingCollection",
     "com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry",
     "com.google.common.base.Functions$1",
     "com.google.common.collect.FilteredEntryMultimap$Keys$1$1",
     "com.google.common.collect.FilteredKeyMultimap$AddRejectingList",
     "com.google.common.reflect.Types$JavaVersion",
     "com.google.common.hash.HashCode$BytesHashCode",
     "com.google.common.base.Predicates$ObjectPredicate$4",
     "com.google.common.base.Predicates$ObjectPredicate$3",
     "com.google.common.base.Predicates$ObjectPredicate$2",
     "com.google.common.collect.ImmutableTable",
     "com.google.common.cache.LoadingCache",
     "com.google.common.collect.ImmutableList$SubList",
     "com.google.common.base.FunctionalEquivalence",
     "com.google.common.collect.DenseImmutableTable$Row",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior",
     "com.google.common.base.Suppliers$SupplierFunctionImpl",
     "com.google.common.hash.ChecksumHashFunction$1",
     "com.google.common.collect.ImmutableSortedMap$Builder",
     "com.google.common.collect.Multimaps$MapMultimap$1",
     "com.google.thirdparty.publicsuffix.PublicSuffixPatterns",
     "com.google.common.base.Predicates$ObjectPredicate",
     "com.google.common.collect.WellBehavedMap$EntrySet",
     "com.google.common.cache.CacheBuilderSpec$DurationParser",
     "com.google.common.reflect.TypeToken$InterfaceSet",
     "com.google.common.collect.Sets$SubSet$1",
     "com.google.common.collect.Maps$KeySet",
     "com.google.common.collect.Maps$NavigableAsMapView",
     "com.google.common.collect.AbstractIterator$1",
     "com.google.common.cache.LongAddables$1",
     "com.google.common.io.CountingInputStream",
     "com.google.common.cache.LongAddables$2",
     "com.google.common.collect.HashBiMap$Inverse$1$1",
     "com.google.common.collect.AbstractMapBasedMultimap$1",
     "com.google.common.collect.MultimapBuilder$1",
     "com.google.common.collect.AbstractMapBasedMultimap$2",
     "com.google.common.collect.MultimapBuilder$2",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$3",
     "com.google.common.collect.ImmutableMultimap$1",
     "com.google.common.collect.MultimapBuilder$3",
     "com.google.common.collect.MultimapBuilder$4",
     "com.google.common.util.concurrent.AbstractService$9",
     "com.google.common.util.concurrent.AbstractService$8",
     "com.google.common.base.Present",
     "com.google.common.util.concurrent.AbstractService$7",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$1",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$2",
     "com.google.common.collect.ImmutableMultimap$2",
     "com.google.common.util.concurrent.AbstractService$2",
     "com.google.common.util.concurrent.AbstractService$1",
     "com.google.common.collect.SortedLists$KeyPresentBehavior",
     "com.google.common.util.concurrent.AbstractService$6",
     "com.google.common.util.concurrent.AbstractService$5",
     "com.google.common.reflect.Types$TypeVariableImpl",
     "com.google.common.util.concurrent.AbstractService$4",
     "com.google.common.util.concurrent.AbstractService$3",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator",
     "com.google.common.collect.StandardTable$Row$RowEntrySet$1",
     "com.google.common.html.package-info",
     "com.google.common.io.Files$FilePredicate$1",
     "com.google.common.collect.Lists$TransformingSequentialList",
     "com.google.common.io.Files$FilePredicate$2",
     "com.google.common.util.concurrent.Striped$PaddedLock",
     "com.google.common.collect.ForwardingIterator",
     "com.google.common.reflect.Types$GenericArrayTypeImpl",
     "com.google.common.util.concurrent.Striped$PowerOfTwoStriped",
     "com.google.common.primitives.package-info",
     "com.google.common.base.CharMatcher$NegatedMatcher",
     "com.google.common.math.DoubleMath$MeanAccumulator",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2$1",
     "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet",
     "com.google.common.eventbus.AnnotatedSubscriberFinder$MethodIdentifier",
     "com.google.common.collect.MapMakerInternalMap$NullEntry",
     "com.google.common.primitives.Floats$FloatArrayAsList",
     "com.google.common.collect.FilteredEntryMultimap",
     "com.google.common.collect.TreeRangeMap$RangeMapEntry",
     "com.google.common.io.Files$2",
     "com.google.common.collect.Maps$UnmodifiableNavigableMap",
     "com.google.common.io.Files$1",
     "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
     "com.google.common.collect.Lists$RandomAccessListWrapper",
     "com.google.common.collect.MapMakerInternalMap$ValueIterator",
     "com.google.common.reflect.TypeToken$3",
     "com.google.common.reflect.TypeToken$4",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy",
     "com.google.common.reflect.TypeToken$1",
     "com.google.common.reflect.TypeToken$2",
     "com.google.common.collect.Multimaps$MapMultimap$1$1",
     "com.google.common.io.CharStreams",
     "com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry",
     "com.google.common.eventbus.AllowConcurrentEvents",
     "com.google.common.reflect.AbstractInvocationHandler",
     "com.google.common.util.concurrent.Futures$3",
     "com.google.common.util.concurrent.Runnables$1",
     "com.google.common.collect.ForwardingSortedSetMultimap",
     "com.google.common.util.concurrent.Futures$2",
     "com.google.common.util.concurrent.Futures$5",
     "com.google.common.collect.Multimaps$TransformedEntriesMultimap$1",
     "com.google.common.util.concurrent.Futures$4",
     "com.google.common.util.concurrent.Futures$7",
     "com.google.common.util.concurrent.Futures$6",
     "com.google.common.cache.LocalCache$Segment$1",
     "com.google.common.collect.AbstractIndexedListIterator",
     "com.google.common.util.concurrent.Futures$8",
     "com.google.common.util.concurrent.AbstractService$StateSnapshot",
     "com.google.common.collect.CollectPreconditions",
     "com.google.common.util.concurrent.Futures$1",
     "com.google.common.reflect.TypeCapture",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policy",
     "com.google.common.eventbus.AsyncEventBus",
     "com.google.common.reflect.TypeVisitor",
     "com.google.common.collect.Lists$TransformingRandomAccessList$1",
     "com.google.common.collect.BinaryTreeTraverser$PostOrderIterator",
     "com.google.common.collect.MapConstraints$ConstrainedListMultimap",
     "com.google.common.base.Splitter$1$1",
     "com.google.common.base.Suppliers$ExpiringMemoizingSupplier",
     "com.google.common.base.AbstractIterator$State",
     "com.google.common.base.PairwiseEquivalence",
     "com.google.common.base.Suppliers",
     "com.google.common.math.DoubleMath",
     "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator",
     "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1",
     "com.google.common.collect.Tables$TransformedTable",
     "com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry",
     "com.google.common.collect.Constraint",
     "com.google.thirdparty.publicsuffix.TrieParser",
     "com.google.common.collect.Maps$FilteredEntryNavigableMap$1",
     "com.google.common.base.AbstractIterator",
     "com.google.common.collect.ForwardingImmutableList",
     "com.google.common.primitives.Longs$LongArrayAsList",
     "com.google.common.collect.LinkedListMultimap$NodeIterator",
     "com.google.common.collect.MultimapBuilder$HashSetSupplier",
     "com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp",
     "com.google.common.util.concurrent.Futures$WrappedCombiner",
     "com.google.common.collect.Table",
     "com.google.common.collect.Sets$CartesianSet",
     "com.google.common.primitives.Longs$LongConverter",
     "com.google.common.util.concurrent.Striped$SmallLazyStriped",
     "com.google.common.base.Suppliers$SupplierOfInstance",
     "com.google.common.cache.AbstractCache$StatsCounter",
     "com.google.common.primitives.Booleans$LexicographicalComparator",
     "com.google.common.collect.MapConstraints$2$1",
     "com.google.common.math.LongMath$1",
     "com.google.common.hash.MessageDigestHashFunction$1",
     "com.google.common.collect.MapConstraints",
     "com.google.common.hash.BloomFilter$Strategy",
     "com.google.common.util.concurrent.Futures$ImmediateFailedFuture",
     "com.google.common.collect.AbstractMapBasedMultiset$1",
     "com.google.common.collect.MultimapBuilder$EnumSetSupplier",
     "com.google.common.collect.Multimaps$CustomSortedSetMultimap",
     "com.google.common.collect.Platform",
     "com.google.common.collect.ForwardingImmutableCollection",
     "com.google.common.collect.ImmutableEnumMap$EnumSerializedForm",
     "com.google.common.cache.LocalCache$LocalManualCache",
     "com.google.common.collect.ArrayTable$Row",
     "com.google.common.collect.ForwardingMapEntry",
     "com.google.common.collect.TreeBasedTable$Factory",
     "com.google.common.collect.MinMaxPriorityQueue$1",
     "com.google.common.cache.LocalCache$WeakWriteEntry",
     "com.google.common.collect.NullsFirstOrdering",
     "com.google.common.util.concurrent.MoreExecutors$DirectExecutor",
     "com.google.common.net.InternetDomainName",
     "com.google.common.cache.CacheBuilderSpec$LongParser",
     "com.google.common.collect.ForwardingSortedMultiset$StandardElementSet",
     "com.google.common.reflect.TypeToken$InterfaceSet$1",
     "com.google.common.cache.LocalCache$ValueReference",
     "com.google.common.collect.StandardRowSortedTable",
     "com.google.common.primitives.Ints$IntArrayAsList",
     "com.google.common.collect.Multisets$ImmutableEntry",
     "com.google.common.escape.UnicodeEscaper",
     "com.google.common.base.Absent",
     "com.google.common.base.Functions$ConstantFunction",
     "com.google.common.hash.Funnels$SinkAsStream",
     "com.google.common.io.Files$FilePredicate",
     "com.google.common.collect.Maps$DescendingMap$1",
     "com.google.common.base.Throwables",
     "com.google.common.io.FileWriteMode",
     "com.google.common.base.Equivalence$Equals",
     "com.google.common.reflect.TypeResolver$TypeVariableKey",
     "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1",
     "com.google.common.base.CharMatcher$5",
     "com.google.common.base.CharMatcher$4",
     "com.google.common.base.CharMatcher$3",
     "com.google.common.collect.Synchronized$SynchronizedBiMap",
     "com.google.common.base.CharMatcher$2",
     "com.google.common.cache.ForwardingCache",
     "com.google.common.base.CharMatcher$9",
     "com.google.common.base.CharMatcher$8",
     "com.google.common.base.CharMatcher$7",
     "com.google.common.collect.Sets$ImprovedAbstractSet",
     "com.google.common.collect.StandardTable$Column$EntrySetIterator",
     "com.google.common.base.CharMatcher$6",
     "com.google.common.collect.RegularImmutableSortedMap$EntrySet",
     "com.google.common.base.FinalizableReferenceQueue$DecoupledLoader",
     "com.google.common.base.CharMatcher$1",
     "com.google.common.collect.ImmutableMapValues",
     "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder",
     "com.google.common.util.concurrent.CycleDetectingLockFactory",
     "com.google.common.collect.AbstractNavigableMap",
     "com.google.common.collect.MapMakerInternalMap$StrongValueReference",
     "com.google.common.util.concurrent.SmoothRateLimiter",
     "com.google.common.collect.GwtTransient",
     "com.google.common.util.concurrent.Futures$CombinerFuture",
     "com.google.common.collect.MapMakerInternalMap$EvictionQueue",
     "com.google.common.util.concurrent.AsyncSettableFuture$NestedFuture",
     "com.google.common.util.concurrent.ForwardingListeningExecutorService",
     "com.google.common.eventbus.SynchronizedEventSubscriber",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2",
     "com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector",
     "com.google.common.collect.Interners$1",
     "com.google.common.util.concurrent.Futures$CombinedFuture",
     "com.google.common.collect.ForwardingSet",
     "com.google.common.base.Functions$ToStringFunction",
     "com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap",
     "com.google.common.base.Functions$FunctionComposition",
     "com.google.common.collect.MultimapBuilder$TreeSetSupplier",
     "com.google.common.collect.StandardTable$RowMap$EntrySet$1",
     "com.google.common.base.Ticker$1",
     "com.google.common.collect.ImmutableSetMultimap$EntrySet",
     "com.google.common.collect.Multiset",
     "com.google.common.collect.TreeRangeMap$AsMapOfRanges$1",
     "com.google.common.collect.ImmutableEnumSet$1",
     "com.google.common.collect.Maps$TransformedEntriesNavigableMap",
     "com.google.common.hash.BloomFilter$SerialForm",
     "com.google.common.primitives.UnsignedInts$LexicographicalComparator",
     "com.google.common.reflect.Types$ClassOwnership",
     "com.google.common.collect.Table$Cell",
     "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher",
     "com.google.common.util.concurrent.AbstractService$10",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock",
     "com.google.common.collect.Synchronized$1",
     "com.google.common.collect.MapMakerInternalMap$Values",
     "com.google.common.collect.ArrayTable$ArrayMap$1$1",
     "com.google.common.collect.ForwardingMultimap",
     "com.google.common.collect.MapMaker$1",
     "com.google.common.cache.LocalCache$EntryIterator",
     "com.google.common.collect.TreeMultiset$Aggregate$2",
     "com.google.common.collect.TreeRangeSet$SubRangeSet",
     "com.google.common.collect.TreeMultiset$Aggregate$1",
     "com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture",
     "com.google.common.io.ByteStreams$1",
     "com.google.common.util.concurrent.Futures$FallbackFuture$1",
     "com.google.common.collect.StandardTable$RowMap",
     "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
     "com.google.common.cache.CacheBuilderSpec$AccessDurationParser",
     "com.google.common.collect.ForwardingMap$StandardValues",
     "com.google.common.collect.ImmutableMap$SerializedForm",
     "com.google.common.base.Optional",
     "com.google.common.io.Closeables",
     "com.google.common.collect.TreeBasedTable$TreeRow",
     "com.google.common.reflect.TypeParameter",
     "com.google.common.base.CharMatcher$NegatedFastMatcher",
     "com.google.common.collect.Range",
     "com.google.common.util.concurrent.ForwardingListenableFuture",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator",
     "com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry",
     "com.google.common.collect.FilteredSetMultimap",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap",
     "com.google.common.io.FileBackedOutputStream",
     "com.google.common.io.CharSource$CharSequenceCharSource",
     "com.google.common.collect.ContiguousSet",
     "com.google.common.base.MoreObjects$ToStringHelper",
     "com.google.common.escape.CharEscaperBuilder",
     "com.google.common.util.concurrent.Striped$CompactStriped",
     "com.google.common.cache.LocalCache$HashIterator",
     "com.google.common.collect.RegularImmutableAsList",
     "com.google.common.io.Resources$UrlByteSource",
     "com.google.common.util.concurrent.Striped$LargeLazyStriped",
     "com.google.common.collect.Constraints$ConstrainedCollection",
     "com.google.common.util.concurrent.ServiceManager$ServiceListener",
     "com.google.common.xml.package-info",
     "com.google.common.base.Functions$IdentityFunction",
     "com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture",
     "com.google.common.util.concurrent.ListeningScheduledExecutorService",
     "com.google.common.collect.ImmutableSortedMap",
     "com.google.common.util.concurrent.ForwardingBlockingQueue",
     "com.google.common.io.BaseEncoding",
     "com.google.common.collect.ForwardingSetMultimap",
     "com.google.common.base.MoreObjects",
     "com.google.common.collect.GenericMapMaker",
     "com.google.common.collect.Multimaps$AsMap$EntrySet$1",
     "com.google.common.collect.ImmutableList$1",
     "com.google.common.hash.BloomFilter$1",
     "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
     "com.google.common.net.InetAddresses",
     "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1",
     "com.google.common.collect.StandardTable$Column$Values",
     "com.google.common.io.package-info",
     "com.google.common.collect.TreeMultiset$Aggregate",
     "com.google.common.collect.MapMaker$RemovalCause",
     "com.google.common.collect.ImmutableMapKeySet$1",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
     "com.google.common.collect.MapMakerInternalMap$KeyIterator",
     "com.google.common.reflect.Types$1",
     "com.google.common.reflect.Types$2",
     "com.google.common.util.concurrent.Service$State",
     "com.google.common.collect.AbstractBiMap$ValueSet",
     "com.google.common.base.Function",
     "com.google.common.collect.ImmutableMap",
     "com.google.common.collect.ImmutableAsList$SerializedForm",
     "com.google.common.io.ByteStreams$LimitedInputStream",
     "com.google.common.primitives.Bytes",
     "com.google.common.util.concurrent.ForwardingFuture",
     "com.google.common.collect.MinMaxPriorityQueue$Builder",
     "com.google.common.util.concurrent.TimeLimiter",
     "com.google.common.collect.ImmutableSortedMapFauxverideShim",
     "com.google.common.util.concurrent.Futures$ImmediateFailedCheckedFuture",
     "com.google.common.cache.CacheBuilder",
     "com.google.common.collect.Range$4",
     "com.google.common.collect.EmptyImmutableSortedMultiset",
     "com.google.common.collect.Range$2",
     "com.google.common.collect.Range$3",
     "com.google.common.cache.LocalCache$NullEntry",
     "com.google.common.collect.Range$1",
     "com.google.common.base.Stopwatch",
     "com.google.common.collect.StandardTable$Column",
     "com.google.common.collect.RegularContiguousSet$SerializedForm",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies",
     "com.google.common.collect.Interners$WeakInterner",
     "com.google.common.cache.LocalCache$AbstractCacheSet",
     "com.google.common.collect.ImmutableMultiset$Builder",
     "com.google.common.escape.Escapers$1",
     "com.google.common.cache.LocalCache$LocalLoadingCache",
     "com.google.common.collect.SingletonImmutableBiMap",
     "com.google.common.collect.MapConstraints$2",
     "com.google.common.collect.MinMaxPriorityQueue$MoveDesc",
     "com.google.common.collect.Multisets$EntrySet",
     "com.google.common.collect.MapConstraints$1",
     "com.google.common.escape.Escapers$2",
     "com.google.common.util.concurrent.AbstractIdleService",
     "com.google.common.escape.Platform$1",
     "com.google.common.cache.RemovalNotification",
     "com.google.common.base.Equivalence",
     "com.google.common.cache.LocalCache$WriteQueue$1",
     "com.google.common.cache.LocalCache$LoadingValueReference",
     "com.google.common.cache.LocalCache$WriteQueue$2",
     "com.google.common.collect.Maps",
     "com.google.common.cache.Striped64",
     "com.google.common.collect.SetMultimap",
     "com.google.common.collect.ImmutableSet$SerializedForm",
     "com.google.common.collect.TransformedIterator",
     "com.google.common.collect.DescendingImmutableSortedSet",
     "com.google.common.collect.FilteredKeyMultimap$AddRejectingSet",
     "com.google.common.util.concurrent.Futures$FallbackFuture",
     "com.google.common.collect.Synchronized$SynchronizedObject",
     "com.google.common.util.concurrent.WrappingExecutorService",
     "com.google.common.util.concurrent.ListenerCallQueue",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet",
     "com.google.common.collect.Cut$AboveAll",
     "com.google.common.net.package-info",
     "com.google.common.util.concurrent.AbstractFuture",
     "com.google.common.collect.RegularContiguousSet",
     "com.google.common.hash.Crc32cHashFunction",
     "com.google.common.collect.RangeSet",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock",
     "com.google.common.escape.CharEscaper",
     "com.google.common.annotations.GwtCompatible",
     "com.google.common.collect.RegularContiguousSet$2",
     "com.google.common.collect.RegularContiguousSet$1",
     "com.google.common.collect.LinkedHashMultiset",
     "com.google.common.cache.LocalCache$WriteThroughEntry",
     "com.google.common.collect.Sets$2",
     "com.google.common.collect.Sets$3",
     "com.google.common.io.CharStreams$NullWriter",
     "com.google.common.collect.Sets$1",
     "com.google.common.collect.Maps$Values",
     "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
     "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1",
     "com.google.common.primitives.Booleans$BooleanArrayAsList",
     "com.google.common.collect.Constraints",
     "com.google.common.escape.ArrayBasedUnicodeEscaper",
     "com.google.common.base.FinalizableReference",
     "com.google.common.collect.ImmutableEnumMap$1",
     "com.google.common.collect.ImmutableEnumMap$2",
     "com.google.common.reflect.TypeToken$TypeCollector",
     "com.google.common.util.concurrent.MoreExecutors$ListeningDecorator",
     "com.google.common.collect.FilteredEntryMultimap$ValuePredicate",
     "com.google.common.collect.HashBasedTable$Factory",
     "com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1",
     "com.google.common.collect.AbstractListMultimap",
     "com.google.common.io.MultiReader",
     "com.google.common.base.Predicates$InstanceOfPredicate",
     "com.google.common.cache.CacheBuilderSpec$RefreshDurationParser",
     "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
     "com.google.common.io.Closer$LoggingSuppressor",
     "com.google.common.util.concurrent.ServiceManager$Listener",
     "com.google.common.collect.Lists$ReverseList$1",
     "com.google.common.collect.ForwardingTable",
     "com.google.common.collect.TreeMultiset$1",
     "com.google.common.io.ByteArrayDataInput",
     "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch",
     "com.google.common.collect.TreeMultiset$4",
     "com.google.common.collect.TreeMultiset$3",
     "com.google.common.collect.TreeMultiset$2",
     "com.google.common.cache.LocalCache$KeySet",
     "com.google.common.collect.MapMakerInternalMap$Segment",
     "com.google.common.base.CharMatcher",
     "com.google.common.collect.FilteredKeyMultimap",
     "com.google.common.collect.Sets$UnmodifiableNavigableSet",
     "com.google.common.util.concurrent.AbstractIdleService$2$1",
     "com.google.common.util.concurrent.AbstractIdleService$2$2",
     "com.google.common.util.concurrent.Futures$1$1",
     "com.google.common.collect.Synchronized$SynchronizedSortedMap",
     "com.google.common.collect.Maps$FilteredEntryBiMap$1",
     "com.google.common.collect.RegularImmutableTable$Values",
     "com.google.common.collect.MapMaker",
     "com.google.common.collect.ForwardingDeque",
     "com.google.common.util.concurrent.WrappingExecutorService$1",
     "com.google.common.collect.MapMakerInternalMap$EntryIterator",
     "com.google.common.collect.AbstractBiMap",
     "com.google.common.collect.Sets$FilteredSet",
     "com.google.common.util.concurrent.AsyncSettableFuture",
     "com.google.common.collect.EmptyImmutableSortedMap",
     "com.google.common.base.Predicates$1",
     "com.google.common.collect.Multisets$3$1",
     "com.google.common.collect.Maps$FilteredEntryMap$KeySet",
     "com.google.common.collect.FilteredKeySetMultimap$EntrySet",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock",
     "com.google.common.io.ByteArrayDataOutput",
     "com.google.common.collect.Iterators$6",
     "com.google.common.collect.BiMap",
     "com.google.common.collect.Iterators$7",
     "com.google.common.collect.Iterators$8",
     "com.google.common.collect.TreeRangeMap$SubRangeMap",
     "com.google.common.collect.Iterators$9",
     "com.google.common.escape.Escaper",
     "com.google.common.collect.HashBiMap$EntrySet$1$MapEntry",
     "com.google.common.collect.Iterators$1",
     "com.google.common.math.LongMath",
     "com.google.common.collect.Iterators$2",
     "com.google.common.collect.Iterators$3",
     "com.google.common.collect.Iterators$4",
     "com.google.common.collect.Iterators$5",
     "com.google.common.collect.package-info",
     "com.google.common.collect.RegularImmutableBiMap$Inverse",
     "com.google.common.collect.ImmutableMultimap$Builder",
     "com.google.common.base.Defaults",
     "com.google.common.collect.AbstractMultimap",
     "com.google.common.hash.SipHashFunction$SipHasher",
     "com.google.common.hash.AbstractCompositeHashFunction",
     "com.google.common.collect.StandardTable$Row$RowEntrySet",
     "com.google.common.collect.Ordering$ArbitraryOrdering$1",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference",
     "com.google.common.collect.DescendingMultiset$1",
     "com.google.common.base.FinalizableSoftReference",
     "com.google.common.cache.LocalCache$Strength$3",
     "com.google.common.cache.LocalCache$Strength$2",
     "com.google.common.reflect.Invokable$ConstructorInvokable",
     "com.google.common.cache.LocalCache$Strength$1",
     "com.google.common.collect.MapConstraints$ConstrainedSetMultimap",
     "com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm",
     "com.google.common.collect.AbstractBiMap$1",
     "com.google.common.collect.TreeRangeSet$Complement",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2",
     "com.google.common.util.concurrent.AsyncFunction",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$3",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$4",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$5",
     "com.google.common.collect.Iterables$ConsumingQueueIterator",
     "com.google.common.collect.WellBehavedMap$EntrySet$1$1",
     "com.google.common.util.concurrent.AbstractExecutionThreadService",
     "com.google.common.cache.CacheBuilderSpec$WriteDurationParser",
     "com.google.common.cache.LocalCache$WeightedStrongValueReference",
     "com.google.common.collect.TreeRangeSet$RangesByUpperBound$1",
     "com.google.common.io.ByteStreams$FastByteArrayOutputStream",
     "com.google.common.collect.TreeRangeSet$RangesByUpperBound$2",
     "com.google.common.cache.CacheBuilderSpec$ValueStrengthParser",
     "com.google.common.collect.StandardTable$CellIterator",
     "com.google.common.collect.ComputationException",
     "com.google.common.collect.StandardTable$ColumnKeySet",
     "com.google.common.base.Splitter$2$1",
     "com.google.common.collect.StandardRowSortedTable$RowSortedMap",
     "com.google.common.collect.Lists$TransformingRandomAccessList",
     "com.google.common.cache.CacheLoader$InvalidCacheLoadException",
     "com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry",
     "com.google.common.hash.MessageDigestHashFunction$SerializedForm",
     "com.google.common.hash.Hashing$1",
     "com.google.common.collect.Multisets",
     "com.google.common.collect.AbstractMultimap$1",
     "com.google.common.collect.ComparisonChain",
     "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable",
     "com.google.common.collect.Synchronized$SynchronizedQueue",
     "com.google.common.hash.AbstractCompositeHashFunction$1",
     "com.google.common.util.concurrent.SerializingExecutor$TaskRunner",
     "com.google.common.collect.LinkedHashMultimap$ValueEntry",
     "com.google.common.util.concurrent.AbstractScheduledService",
     "com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning",
     "com.google.common.base.package-info",
     "com.google.common.io.ByteSink$AsCharSink",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$2",
     "com.google.common.collect.Iterators$MergingIterator$1",
     "com.google.common.collect.TreeRangeSet",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$1",
     "com.google.common.collect.RegularImmutableSortedMap$EntrySet$1",
     "com.google.common.collect.Maps$UnmodifiableEntries$1",
     "com.google.common.base.Suppliers$ThreadSafeSupplier",
     "com.google.common.collect.StandardTable$RowMap$EntrySet",
     "com.google.common.hash.Funnels$UnencodedCharsFunnel",
     "com.google.common.math.BigIntegerMath$1",
     "com.google.common.base.Predicates",
     "com.google.common.collect.EmptyContiguousSet",
     "com.google.common.cache.CacheLoader$1$1",
     "com.google.common.net.MediaType",
     "com.google.common.collect.Synchronized$SynchronizedEntry",
     "com.google.common.util.concurrent.Uninterruptibles",
     "com.google.common.cache.LocalCache$LoadingValueReference$1",
     "com.google.common.reflect.package-info",
     "com.google.common.collect.ConcurrentHashMultiset$2",
     "com.google.common.collect.ConcurrentHashMultiset$1",
     "com.google.common.collect.ConcurrentHashMultiset$3",
     "com.google.common.collect.Synchronized$SynchronizedSetMultimap",
     "com.google.common.collect.MapMakerInternalMap$SoftValueReference",
     "com.google.common.collect.StandardTable$Column$EntrySetIterator$1",
     "com.google.common.base.CharMatcher$12",
     "com.google.common.base.CharMatcher$11",
     "com.google.common.base.CharMatcher$10",
     "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1",
     "com.google.common.base.CharMatcher$15",
     "com.google.common.base.CharMatcher$14",
     "com.google.common.base.CharMatcher$13",
     "com.google.common.util.concurrent.Futures$MappingCheckedFuture",
     "com.google.common.primitives.Floats$FloatConverter",
     "com.google.common.escape.package-info",
     "com.google.common.base.Platform",
     "com.google.common.collect.ImmutableList$ReverseImmutableList",
     "com.google.common.util.concurrent.Service$Listener",
     "com.google.common.collect.Collections2$PermutationCollection",
     "com.google.common.hash.Funnels",
     "com.google.common.io.GwtWorkarounds$ByteOutput",
     "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap",
     "com.google.common.collect.ImmutableClassToInstanceMap$1",
     "com.google.common.collect.BoundType",
     "com.google.common.hash.Hashing$Sha512Holder",
     "com.google.common.collect.Maps$DescendingMap",
     "com.google.common.hash.Crc32cHashFunction$Crc32cHasher",
     "com.google.common.collect.ImmutableClassToInstanceMap",
     "com.google.common.reflect.TypeToken$ClassSet",
     "com.google.common.io.BaseEncoding$Alphabet",
     "com.google.common.collect.Multimaps$UnmodifiableListMultimap",
     "com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm",
     "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound",
     "com.google.common.collect.RegularImmutableBiMap$1",
     "com.google.common.collect.MapMakerInternalMap$2",
     "com.google.common.collect.MapMakerInternalMap$1",
     "com.google.common.base.Splitter$3",
     "com.google.common.base.VerifyException",
     "com.google.common.base.Splitter$4",
     "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
     "com.google.common.base.Splitter$5",
     "com.google.common.cache.CacheBuilderSpec$InitialCapacityParser",
     "com.google.common.eventbus.DeadEvent",
     "com.google.common.primitives.Bytes$ByteArrayAsList",
     "com.google.common.hash.HashCode$IntHashCode",
     "com.google.common.base.Splitter$1",
     "com.google.common.base.Splitter$2",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory",
     "com.google.common.collect.Serialization$1",
     "com.google.common.collect.RegularImmutableSortedSet",
     "com.google.common.escape.ArrayBasedEscaperMap",
     "com.google.common.collect.ArrayListMultimap",
     "com.google.common.collect.TreeRangeMap$AsMapOfRanges",
     "com.google.common.collect.HashBasedTable",
     "com.google.common.collect.LinkedHashMultimap$1",
     "com.google.common.collect.MultimapBuilder$ArrayListSupplier",
     "com.google.common.collect.Collections2",
     "com.google.common.collect.ForwardingNavigableSet",
     "com.google.common.math.IntMath",
     "com.google.common.collect.ForwardingImmutableSet",
     "com.google.common.collect.NullsLastOrdering",
     "com.google.common.collect.RegularImmutableMultiset",
     "com.google.common.collect.Maps$AsMapView$1",
     "com.google.common.cache.LocalCache$EntryFactory$6",
     "com.google.common.cache.LocalCache$EntryFactory$7",
     "com.google.common.cache.LocalCache$EntryFactory$8",
     "com.google.common.collect.AbstractSortedMultiset",
     "com.google.common.cache.LocalCache$EntryFactory$2",
     "com.google.common.collect.HashBiMap$1",
     "com.google.common.util.concurrent.Futures$ImmediateSuccessfulFuture",
     "com.google.common.cache.LocalCache$EntryFactory$3",
     "com.google.common.cache.LocalCache$EntryFactory$4",
     "com.google.common.cache.LocalCache$EntryFactory$5",
     "com.google.common.cache.LocalCache$EntryFactory$1",
     "com.google.common.collect.HashBiMap$KeySet$1",
     "com.google.common.base.Strings",
     "com.google.common.collect.AbstractMapBasedMultimap",
     "com.google.common.collect.Constraints$ConstrainedRandomAccessList",
     "com.google.common.collect.DiscreteDomain",
     "com.google.common.util.concurrent.Atomics",
     "com.google.common.collect.MapConstraints$ConstrainedAsMapValues",
     "com.google.common.collect.TreeMultiset$AvlNode",
     "com.google.common.collect.AbstractBiMap$EntrySet$1",
     "com.google.common.collect.Cut",
     "com.google.common.collect.FilteredEntryMultimap$Keys",
     "com.google.common.io.Resources",
     "com.google.common.cache.LocalCache$StrongValueReference",
     "com.google.common.collect.MapConstraints$ConstrainedMultimap",
     "com.google.common.util.concurrent.FutureCallback",
     "com.google.common.io.CharSource$CharSequenceCharSource$1",
     "com.google.common.reflect.Types$ParameterizedTypeImpl",
     "com.google.common.collect.ImmutableSortedSetFauxverideShim",
     "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
     "com.google.common.collect.ImmutableEnumMap",
     "com.google.common.collect.MapConstraints$ConstrainedAsMapEntries",
     "com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry",
     "com.google.common.reflect.TypeResolver$WildcardCapturer",
     "com.google.common.collect.AbstractMapBasedMultimap$KeySet$1",
     "com.google.common.collect.Collections2$TransformedCollection",
     "com.google.common.collect.ArrayTable$RowMap",
     "com.google.common.io.ByteStreams$ByteArrayDataOutputStream",
     "com.google.common.collect.Synchronized$SynchronizedAsMap",
     "com.google.common.collect.ImmutableSetMultimap",
     "com.google.common.cache.LocalCache$EntrySet",
     "com.google.common.escape.ArrayBasedCharEscaper",
     "com.google.common.io.BaseEncoding$DecodingException",
     "com.google.common.collect.DiscreteDomain$IntegerDomain",
     "com.google.common.hash.Funnels$ByteArrayFunnel",
     "com.google.common.reflect.Reflection",
     "com.google.common.collect.Interner",
     "com.google.common.net.MediaType$Tokenizer",
     "com.google.common.collect.ImmutableMapValues$1",
     "com.google.common.collect.ImmutableEnumMap$2$1",
     "com.google.common.collect.TreeTraverser$1",
     "com.google.common.collect.TreeTraverser$2",
     "com.google.common.collect.TreeTraverser$3",
     "com.google.common.collect.StandardTable$ColumnMap",
     "com.google.common.collect.TreeRangeMap",
     "com.google.common.base.Converter$ReverseConverter",
     "com.google.common.reflect.Invokable",
     "com.google.common.collect.Lists$2",
     "com.google.common.hash.HashFunction",
     "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet",
     "com.google.common.collect.Lists$1",
     "com.google.common.hash.Hashing$Murmur3_128Holder",
     "com.google.common.base.Supplier",
     "com.google.common.collect.Maps$ImprovedAbstractMap",
     "com.google.common.eventbus.EventBus",
     "com.google.common.collect.ReverseOrdering",
     "com.google.common.eventbus.AsyncEventBus$1",
     "com.google.common.collect.HashBiMap$Inverse$InverseKeySet",
     "com.google.common.eventbus.Subscribe",
     "com.google.common.collect.Synchronized",
     "com.google.common.io.CharSource",
     "com.google.common.cache.CacheBuilder$NullListener",
     "com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry",
     "com.google.common.collect.FilteredEntryMultimap$AsMap",
     "com.google.common.collect.SortedMultisetBridge",
     "com.google.common.collect.MapMakerInternalMap$ExpirationQueue",
     "com.google.common.collect.Synchronized$SynchronizedSet",
     "com.google.common.primitives.UnsignedLongs",
     "com.google.common.primitives.Shorts$LexicographicalComparator",
     "com.google.common.collect.Tables$TransformedTable$3",
     "com.google.common.collect.Tables$TransformedTable$2",
     "com.google.common.io.LineReader",
     "com.google.common.collect.Tables$TransformedTable$1",
     "com.google.common.collect.RegularImmutableTable",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1",
     "com.google.common.collect.Multimaps$CustomListMultimap",
     "com.google.common.hash.HashCode$LongHashCode",
     "com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm",
     "com.google.common.math.IntMath$1",
     "com.google.common.collect.Hashing",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock",
     "com.google.common.hash.HashingInputStream",
     "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap",
     "com.google.common.collect.BinaryTreeTraverser$1",
     "com.google.common.collect.BinaryTreeTraverser$2",
     "com.google.common.collect.Multimaps$AsMap",
     "com.google.common.collect.ImmutableRangeMap",
     "com.google.common.collect.SortedMultiset",
     "com.google.common.collect.AbstractMapBasedMultiset$1$1",
     "com.google.common.collect.SparseImmutableTable",
     "com.google.common.hash.AbstractNonStreamingHashFunction",
     "com.google.common.collect.FluentIterable",
     "com.google.common.reflect.Element",
     "com.google.common.collect.DescendingImmutableSortedMultiset",
     "com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$5",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$4",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$7",
     "com.google.common.cache.CacheBuilderSpec$RecordStatsParser",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$6",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$1",
     "com.google.common.math.DoubleMath$1",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$3",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$2",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1",
     "com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$8",
     "com.google.common.collect.RegularImmutableTable$1",
     "com.google.common.cache.CacheBuilderSpec$IntegerParser",
     "com.google.common.collect.SortedMapDifference",
     "com.google.common.collect.RegularImmutableSet",
     "com.google.common.collect.FilteredEntrySetMultimap",
     "com.google.common.collect.ForwardingSortedSet",
     "com.google.common.collect.MapMaker$NullConcurrentMap",
     "com.google.common.collect.ImmutableListMultimap",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet",
     "com.google.common.eventbus.SubscriberFindingStrategy",
     "com.google.common.cache.RemovalCause$4",
     "com.google.common.cache.RemovalCause$5",
     "com.google.common.hash.Hashing$ChecksumType",
     "com.google.common.cache.RemovalCause$1",
     "com.google.common.collect.ImmutableAsList",
     "com.google.common.cache.RemovalCause$2",
     "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
     "com.google.common.cache.RemovalCause$3",
     "com.google.common.util.concurrent.AtomicDouble",
     "com.google.common.util.concurrent.SerializingExecutor",
     "com.google.common.collect.WellBehavedMap",
     "com.google.common.collect.SingletonImmutableSet",
     "com.google.common.collect.ImmutableList$SerializedForm",
     "com.google.common.collect.MapMakerInternalMap$HashIterator",
     "com.google.common.util.concurrent.ForwardingExecutorService",
     "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy",
     "com.google.common.util.concurrent.AbstractListeningExecutorService",
     "com.google.common.hash.PrimitiveSink",
     "com.google.common.collect.FluentIterable$FromIterableFunction",
     "com.google.common.collect.AbstractIterator",
     "com.google.common.base.Suppliers$MemoizingSupplier",
     "com.google.common.collect.MutableClassToInstanceMap",
     "com.google.common.util.concurrent.Futures",
     "com.google.common.collect.TreeBasedTable$1",
     "com.google.common.collect.TreeBasedTable$2",
     "com.google.common.cache.RemovalListener",
     "com.google.common.collect.MapMaker$RemovalNotification",
     "com.google.common.base.Functions$PredicateFunction",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
     "com.google.common.collect.ImmutableMapValues$SerializedForm",
     "com.google.common.collect.Maps$TransformedEntriesSortedMap",
     "com.google.common.util.concurrent.AbstractService",
     "com.google.common.io.BaseEncoding$SeparatedBaseEncoding",
     "com.google.common.collect.MapMakerInternalMap$WeakValueReference",
     "com.google.common.collect.Synchronized$SynchronizedNavigableMap",
     "com.google.common.collect.AbstractSetMultimap",
     "com.google.common.collect.ImmutableTable$Builder",
     "com.google.common.primitives.UnsignedLongs$LexicographicalComparator",
     "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter",
     "com.google.common.io.GwtWorkarounds$CharOutput",
     "com.google.common.collect.MapMakerInternalMap$Strength$2",
     "com.google.common.collect.MapMakerInternalMap$Strength$1",
     "com.google.common.collect.Multiset$Entry",
     "com.google.common.base.Predicates$NotPredicate",
     "com.google.common.math.BigIntegerMath",
     "com.google.common.collect.MapMakerInternalMap$Strength$3",
     "com.google.common.collect.AbstractMultiset$ElementSet",
     "com.google.common.collect.SortedMultisets$NavigableElementSet",
     "com.google.common.collect.TreeMultiset$Reference",
     "com.google.common.collect.EnumHashBiMap",
     "com.google.common.cache.LocalCache$WeakAccessEntry",
     "com.google.common.eventbus.AnnotatedSubscriberFinder",
     "com.google.common.collect.ImmutableSortedSet$SerializedForm",
     "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier",
     "com.google.common.collect.SortedMultisets",
     "com.google.common.collect.Multimaps$MapMultimap",
     "com.google.common.util.concurrent.FakeTimeLimiter",
     "com.google.common.collect.EvictingQueue",
     "com.google.common.collect.ComparisonChain$InactiveComparisonChain",
     "com.google.common.cache.LocalCache$AbstractReferenceEntry",
     "com.google.common.cache.ForwardingCache$SimpleForwardingCache",
     "com.google.common.collect.Cut$BelowAll",
     "com.google.common.reflect.MutableTypeToInstanceMap$1",
     "com.google.common.hash.Hashing$Adler32Holder",
     "com.google.common.collect.ReverseNaturalOrdering",
     "com.google.common.collect.MapConstraints$InverseConstraint",
     "com.google.common.collect.BinaryTreeTraverser",
     "com.google.common.collect.HashBiMap$BiEntry",
     "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask",
     "com.google.common.annotations.VisibleForTesting",
     "com.google.common.cache.AbstractLoadingCache",
     "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries",
     "com.google.common.collect.MapMaker$NullComputingConcurrentMap",
     "com.google.common.reflect.MutableTypeToInstanceMap",
     "com.google.common.collect.ComputingConcurrentHashMap",
     "com.google.common.collect.ImmutableRangeMap$2",
     "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher",
     "com.google.common.escape.CharEscaperBuilder$CharArrayDecorator",
     "com.google.common.collect.Multisets$MultisetIteratorImpl",
     "com.google.common.collect.ImmutableRangeMap$1",
     "com.google.common.cache.package-info",
     "com.google.common.collect.AbstractNavigableMap$DescendingMap",
     "com.google.common.base.FinalizableReferenceQueue$DirectLoader",
     "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
     "com.google.common.collect.RowSortedTable",
     "com.google.common.collect.Iterables$UnmodifiableIterable",
     "com.google.common.collect.Maps$UnmodifiableBiMap",
     "com.google.common.collect.AbstractMapEntry",
     "com.google.common.util.concurrent.Service$State$1",
     "com.google.common.util.concurrent.Service$State$2",
     "com.google.common.util.concurrent.Service$State$3",
     "com.google.common.util.concurrent.Service$State$4",
     "com.google.common.collect.Sets$PowerSet",
     "com.google.common.util.concurrent.Service$State$5",
     "com.google.common.util.concurrent.Service$State$6",
     "com.google.common.collect.ImmutableRangeSet$ComplementRanges",
     "com.google.common.collect.Maps$10",
     "com.google.common.collect.Maps$11",
     "com.google.common.io.CharStreams$1",
     "com.google.common.collect.GeneralRange",
     "com.google.common.collect.ImmutableRangeSet$SerializedForm",
     "com.google.common.collect.Iterables$10",
     "com.google.common.collect.Iterables$11",
     "com.google.common.collect.Iterables$12",
     "com.google.common.collect.Iterables$13",
     "com.google.common.collect.Iterables$14",
     "com.google.common.util.concurrent.RateLimiter",
     "com.google.common.collect.Iterables$15",
     "com.google.common.hash.Murmur3_32HashFunction",
     "com.google.common.collect.Lists",
     "com.google.common.reflect.Types",
     "com.google.common.io.PatternFilenameFilter",
     "com.google.common.collect.Maps$BiMapConverter",
     "com.google.common.util.concurrent.Futures$ImmediateFuture",
     "com.google.common.xml.XmlEscapers",
     "com.google.common.collect.Interners$WeakInterner$Dummy",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment",
     "com.google.common.base.Predicates$CompositionPredicate",
     "com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1",
     "com.google.common.collect.MapMaker$ComputingMapAdapter",
     "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule",
     "com.google.common.collect.AbstractSortedMultiset$1",
     "com.google.common.io.Files$FileByteSink",
     "com.google.common.collect.Tables",
     "com.google.common.cache.RemovalListeners$1$1",
     "com.google.common.util.concurrent.ListenableFutureTask",
     "com.google.common.cache.RemovalListeners$1",
     "com.google.common.cache.LocalCache$WeightedWeakValueReference",
     "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound",
     "com.google.common.collect.TransformedListIterator",
     "com.google.common.hash.Hashing$Sha1Holder",
     "com.google.common.collect.TreeTraverser$PostOrderNode",
     "com.google.common.util.concurrent.SmoothRateLimiter$1",
     "com.google.common.collect.ImmutableMapEntry",
     "com.google.common.io.LittleEndianDataInputStream",
     "com.google.common.collect.Lists$ReverseList",
     "com.google.common.base.Equivalence$EquivalentToPredicate",
     "com.google.common.collect.AbstractIterator$State",
     "com.google.common.collect.ImmutableMultimap$EntryCollection",
     "com.google.common.collect.Lists$StringAsImmutableList",
     "com.google.common.cache.CacheLoader$FunctionToCacheLoader",
     "com.google.common.cache.LocalCache$WeightedSoftValueReference",
     "com.google.common.collect.Multimaps$Entries",
     "com.google.common.collect.Multimaps$AsMap$EntrySet",
     "com.google.common.collect.Interners$InternerFunction",
     "com.google.common.collect.MultimapBuilder$LinkedListSupplier",
     "com.google.common.collect.AbstractBiMap$Inverse",
     "com.google.common.util.concurrent.UncheckedExecutionException",
     "com.google.common.collect.Multisets$4$1",
     "com.google.common.cache.CacheBuilderSpec$MaximumSizeParser",
     "com.google.common.cache.LocalCache$StrongEntry",
     "com.google.common.eventbus.SubscriberExceptionContext",
     "com.google.common.util.concurrent.Striped",
     "com.google.common.collect.BinaryTreeTraverser$PreOrderIterator",
     "com.google.common.collect.MapMakerInternalMap$ReferenceEntry",
     "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1",
     "com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference",
     "com.google.common.util.concurrent.Futures$CombinedFuture$1",
     "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap",
     "com.google.common.collect.MapMakerInternalMap$StrongEntry",
     "com.google.common.collect.Multimaps$CustomSetMultimap",
     "com.google.common.io.ByteSource$ByteArrayByteSource",
     "com.google.common.util.concurrent.Futures$CombinedFuture$2",
     "com.google.common.reflect.TypeResolver$TypeTable",
     "com.google.common.util.concurrent.ForwardingCheckedFuture",
     "com.google.common.collect.NaturalOrdering",
     "com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm",
     "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask",
     "com.google.common.cache.Cache",
     "com.google.common.collect.TreeTraverser$BreadthFirstIterator",
     "com.google.common.collect.LinkedListMultimap$Node",
     "com.google.common.collect.ListMultimap",
     "com.google.common.collect.WellBehavedMap$EntrySet$1",
     "com.google.common.collect.AbstractBiMap$EntrySet$1$1",
     "com.google.common.collect.Maps$NavigableKeySet",
     "com.google.common.net.HttpHeaders",
     "com.google.common.reflect.ClassPath$ClassInfo",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering",
     "com.google.common.primitives.ParseRequest",
     "com.google.common.cache.CacheBuilder$OneWeigher",
     "com.google.common.collect.Multimaps$TransformedEntriesListMultimap",
     "com.google.common.escape.Escapers$Builder$1",
     "com.google.common.primitives.Longs",
     "com.google.common.collect.ForwardingListIterator",
     "com.google.common.net.UrlEscapers",
     "com.google.common.collect.MapConstraints$NotNullMapConstraint",
     "com.google.common.collect.ImmutableBiMap$SerializedForm",
     "com.google.common.collect.Multimaps$UnmodifiableSetMultimap",
     "com.google.common.cache.CacheBuilderSpec$1",
     "com.google.common.util.concurrent.package-info",
     "com.google.common.util.concurrent.ListeningExecutorService",
     "com.google.common.hash.Hashing$Md5Holder",
     "com.google.common.collect.Maps$FilteredEntryMap",
     "com.google.common.collect.Synchronized$SynchronizedMultiset",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1",
     "com.google.common.io.FileBackedOutputStream$2",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2",
     "com.google.common.io.FileBackedOutputStream$1",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3",
     "com.google.common.base.Splitter$3$1",
     "com.google.common.base.Stopwatch$1",
     "com.google.common.collect.Synchronized$SynchronizedCollection",
     "com.google.common.collect.Serialization$FieldSetter",
     "com.google.common.collect.Maps$UnmodifiableEntrySet",
     "com.google.common.base.CaseFormat$1",
     "com.google.common.hash.HashCode",
     "com.google.common.base.CaseFormat$2",
     "com.google.common.base.CaseFormat$3",
     "com.google.common.base.CaseFormat$4",
     "com.google.common.base.CaseFormat$5",
     "com.google.common.collect.Sets$FilteredNavigableSet",
     "com.google.common.collect.UnmodifiableSortedMultiset",
     "com.google.common.io.ByteSource$EmptyByteSource",
     "com.google.common.hash.ChecksumHashFunction$ChecksumHasher",
     "com.google.common.collect.MapMakerInternalMap$WriteThroughEntry",
     "com.google.common.collect.ConcurrentHashMultiset",
     "com.google.common.util.concurrent.Service$1",
     "com.google.common.collect.ForwardingQueue",
     "com.google.common.io.GwtWorkarounds",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
     "com.google.common.collect.Sets$SubSet",
     "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator",
     "com.google.common.html.HtmlEscapers",
     "com.google.common.collect.EmptyContiguousSet$SerializedForm",
     "com.google.common.collect.ForwardingMultiset",
     "com.google.common.collect.ImmutableRangeSet$AsSet$2",
     "com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture",
     "com.google.common.collect.ImmutableRangeSet$AsSet$1",
     "com.google.common.collect.ImmutableMultiset$EntrySet",
     "com.google.common.collect.TreeMultimap",
     "com.google.common.hash.Funnels$LongFunnel",
     "com.google.common.base.Splitter",
     "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet",
     "com.google.common.collect.Maps$8",
     "com.google.common.collect.ArrayTable$Column",
     "com.google.common.collect.Maps$9",
     "com.google.common.collect.Maps$6",
     "com.google.common.util.concurrent.MoreExecutors$2",
     "com.google.common.collect.Maps$7",
     "com.google.common.util.concurrent.MoreExecutors$1",
     "com.google.common.util.concurrent.MoreExecutors$4",
     "com.google.common.util.concurrent.MoreExecutors$3",
     "com.google.common.collect.ComparatorOrdering",
     "com.google.common.collect.Maps$1",
     "com.google.common.collect.Maps$4",
     "com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry",
     "com.google.common.collect.Maps$5",
     "com.google.common.collect.Maps$2",
     "com.google.common.collect.Maps$3",
     "com.google.common.collect.ImmutableSortedMultiset$Builder",
     "com.google.common.reflect.Invokable$MethodInvokable",
     "com.google.common.collect.Queues",
     "com.google.common.collect.FilteredKeyMultimap$Entries",
     "com.google.common.hash.AbstractHasher",
     "com.google.common.reflect.TypeResolver",
     "com.google.common.base.Optional$1$1",
     "com.google.common.collect.Ordering$ArbitraryOrdering",
     "com.google.common.hash.Hashing$Crc32cHolder",
     "com.google.common.hash.SipHashFunction",
     "com.google.common.primitives.Doubles$DoubleArrayAsList",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior$2",
     "com.google.common.eventbus.EventBus$1",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior$1",
     "com.google.common.eventbus.EventBus$2",
     "com.google.common.collect.AbstractTable",
     "com.google.common.collect.Tables$1",
     "com.google.common.eventbus.EventBus$3",
     "com.google.common.util.concurrent.ServiceManager",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior$3",
     "com.google.common.collect.StandardRowSortedTable$1",
     "com.google.common.cache.LocalCache$LoadingSerializationProxy",
     "com.google.common.reflect.TypeToken$TypeFilter",
     "com.google.common.collect.Multimap",
     "com.google.common.io.CharSink",
     "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator",
     "com.google.common.collect.ForwardingConcurrentMap",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode",
     "com.google.common.base.StandardSystemProperty",
     "com.google.common.hash.Hashing$Murmur3_32Holder",
     "com.google.common.base.Suppliers$SupplierComposition",
     "com.google.common.io.GwtWorkarounds$CharInput",
     "com.google.common.collect.Tables$TransposeTable",
     "com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher",
     "com.google.common.base.CharMatcher$Or",
     "com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty",
     "com.google.common.collect.ForwardingSortedMap$StandardKeySet",
     "com.google.common.util.concurrent.MoreExecutors$Application$1",
     "com.google.common.escape.Escaper$1",
     "com.google.common.io.FileBackedOutputStream$MemoryOutput",
     "com.google.common.collect.MultimapBuilder",
     "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap",
     "com.google.common.util.concurrent.SimpleTimeLimiter$1",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$1",
     "com.google.common.collect.CartesianList$1",
     "com.google.common.collect.Synchronized$SynchronizedRandomAccessList",
     "com.google.common.base.FinalizableWeakReference",
     "com.google.common.base.internal.Finalizer",
     "com.google.common.base.Enums$StringConverter",
     "com.google.common.collect.RegularImmutableBiMap",
     "com.google.common.io.ByteSink",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace",
     "com.google.common.collect.ImmutableBiMap$Builder",
     "com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream",
     "com.google.common.collect.HashBiMap$KeySet",
     "com.google.common.collect.StandardTable$Row$RowEntrySet$1$1",
     "com.google.common.collect.ImmutableMapEntry$TerminalEntry",
     "com.google.common.hash.BloomFilterStrategies$BitArray",
     "com.google.common.collect.RegularImmutableTable$CellSet",
     "com.google.common.collect.Maps$TransformedEntriesMap",
     "com.google.common.collect.TreeRangeSet$AsRanges",
     "com.google.common.primitives.Chars",
     "com.google.common.cache.LongAdder",
     "com.google.common.collect.WellBehavedMap$1",
     "com.google.common.hash.MessageDigestHashFunction",
     "com.google.common.util.concurrent.Runnables",
     "com.google.common.collect.DenseImmutableTable$1",
     "com.google.common.cache.LocalCache$StrongAccessEntry",
     "com.google.common.collect.Count",
     "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet",
     "com.google.common.cache.LocalCache$LocalManualCache$1",
     "com.google.common.util.concurrent.Callables",
     "com.google.common.primitives.Shorts$ShortConverter",
     "com.google.common.io.ByteStreams$ByteArrayDataInputStream",
     "com.google.common.net.HostAndPort",
     "com.google.common.collect.TreeBasedTable",
     "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1$1",
     "com.google.common.collect.MapConstraints$ConstrainedBiMap",
     "com.google.common.base.Equivalence$Wrapper",
     "com.google.common.util.concurrent.Monitor",
     "com.google.common.base.CharMatcher$FastMatcher",
     "com.google.common.collect.AbstractMapBasedMultimap$Itr",
     "com.google.common.hash.Funnels$StringCharsetFunnel",
     "com.google.common.collect.MapMakerInternalMap$ValueReference",
     "com.google.common.base.Converter$ConverterComposition",
     "com.google.common.collect.EmptyImmutableSetMultimap",
     "com.google.common.collect.HashBiMap$EntrySet",
     "com.google.common.base.Predicates$IsEqualToPredicate",
     "com.google.common.collect.ImmutableCollection",
     "com.google.common.cache.LocalCache$ManualSerializationProxy",
     "com.google.common.hash.BloomFilterStrategies",
     "com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry",
     "com.google.common.io.BaseEncoding$3",
     "com.google.common.io.BaseEncoding$4",
     "com.google.common.collect.ImmutableCollection$Builder",
     "com.google.common.io.BaseEncoding$1",
     "com.google.common.io.BaseEncoding$2",
     "com.google.common.annotations.GwtIncompatible",
     "com.google.common.collect.TreeRangeMap$1",
     "com.google.common.collect.CartesianList",
     "com.google.common.collect.Maps$FilteredKeyMap",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException",
     "com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset",
     "com.google.common.util.concurrent.AbstractScheduledService$Scheduler",
     "com.google.common.collect.RegularImmutableMap$NonTerminalMapEntry",
     "com.google.common.util.concurrent.ListenableFuture",
     "com.google.common.collect.ImmutableEnumSet$EnumSerializedForm",
     "com.google.common.io.CharSource$ConcatenatedCharSource",
     "com.google.common.util.concurrent.JdkFutureAdapters",
     "com.google.common.collect.ImmutableList",
     "com.google.common.collect.ImmutableRangeSet$AsSet",
     "com.google.common.escape.Escapers",
     "com.google.common.io.Flushables",
     "com.google.common.collect.Iterables$10$1",
     "com.google.common.collect.SortedMultisets$ElementSet",
     "com.google.common.collect.MapConstraints$ConstrainedEntries",
     "com.google.common.reflect.TypeResolver$TypeTable$1",
     "com.google.common.hash.HashingOutputStream",
     "com.google.common.hash.BloomFilter",
     "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry",
     "com.google.common.util.concurrent.Callables$3",
     "com.google.common.util.concurrent.Callables$2",
     "com.google.common.cache.LongAddable",
     "com.google.common.collect.MapMaker$RemovalListener",
     "com.google.common.util.concurrent.Callables$1",
     "com.google.common.hash.Hashing$ConcatenatedHashFunction",
     "com.google.common.collect.ImmutableRangeMap$Builder",
     "com.google.common.io.LineProcessor",
     "com.google.common.collect.MapMakerInternalMap",
     "com.google.common.collect.ForwardingSortedMultiset",
     "com.google.common.collect.Multisets$ElementSet$1",
     "com.google.common.collect.HashBiMap$Inverse$1$1$InverseEntry",
     "com.google.common.collect.Maps$UnmodifiableEntries",
     "com.google.common.collect.BoundType$2",
     "com.google.common.util.concurrent.AsyncSettableFuture$1",
     "com.google.common.collect.BoundType$1",
     "com.google.common.io.Closer$Suppressor",
     "com.google.common.collect.RegularImmutableSortedMultiset",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
     "com.google.common.io.GwtWorkarounds$ByteInput",
     "com.google.common.reflect.ClassPath",
     "com.google.common.collect.LinkedHashMultimap",
     "com.google.common.collect.Synchronized$SynchronizedList",
     "com.google.common.base.FinalizableReferenceQueue$FinalizerLoader",
     "com.google.common.cache.AbstractCache",
     "com.google.common.collect.Maps$SortedKeySet",
     "com.google.common.collect.StandardTable$TableSet",
     "com.google.common.util.concurrent.ListenerCallQueue$Callback",
     "com.google.common.collect.LexicographicalOrdering",
     "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
     "com.google.common.collect.Multisets$5",
     "com.google.common.collect.StandardTable$Row",
     "com.google.common.collect.Multisets$3",
     "com.google.common.collect.Multisets$4",
     "com.google.common.collect.Multisets$1",
     "com.google.common.cache.CacheStats",
     "com.google.common.collect.Multisets$2",
     "com.google.common.collect.Iterables",
     "com.google.common.collect.LinkedListMultimap$1",
     "com.google.common.collect.LinkedListMultimap$2",
     "com.google.common.collect.GenericMapMaker$NullListener",
     "com.google.common.io.CountingOutputStream",
     "com.google.common.collect.LinkedListMultimap$3",
     "com.google.common.collect.LinkedListMultimap$4",
     "com.google.common.cache.CacheLoader$SupplierToCacheLoader",
     "com.google.common.util.concurrent.ThreadFactoryBuilder$1",
     "com.google.common.collect.HashBiMap$Itr",
     "com.google.common.util.concurrent.Futures$ImmediateCancelledFuture",
     "com.google.common.collect.ObjectArrays",
     "com.google.common.collect.Synchronized$SynchronizedDeque",
     "com.google.common.collect.Constraints$ConstrainedSet",
     "com.google.common.util.concurrent.Monitor$Guard",
     "com.google.common.io.OutputSupplier",
     "com.google.common.collect.Constraints$ConstrainedSortedSet",
     "com.google.common.collect.SortedIterable",
     "com.google.common.collect.RangeMap",
     "com.google.common.collect.UnmodifiableIterator",
     "com.google.common.io.ByteSource$AsCharSource",
     "com.google.common.base.Functions$SupplierFunction",
     "com.google.common.collect.ImmutableSortedMultiset",
     "com.google.common.eventbus.EventSubscriber",
     "com.google.common.io.InputSupplier",
     "com.google.common.hash.package-info",
     "com.google.common.collect.Maps$EntryFunction$2",
     "com.google.common.collect.Maps$EntryFunction$1",
     "com.google.common.io.BaseEncoding$StandardBaseEncoding$2",
     "com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder",
     "com.google.common.io.BaseEncoding$StandardBaseEncoding$1",
     "com.google.common.io.AppendableWriter",
     "com.google.common.util.concurrent.Futures$ImmediateSuccessfulCheckedFuture",
     "com.google.common.collect.HashMultiset",
     "com.google.common.cache.CacheBuilderSpec$ValueParser",
     "com.google.common.base.SmallCharMatcher",
     "com.google.common.base.CharMatcher$RangesMatcher",
     "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture$1",
     "com.google.common.collect.SingletonImmutableList",
     "com.google.common.base.Predicates$AndPredicate",
     "com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry",
     "com.google.common.primitives.Floats",
     "com.google.common.reflect.TypeToken$TypeCollector$1",
     "com.google.common.collect.Maps$FilteredMapValues",
     "com.google.common.collect.MinMaxPriorityQueue$QueueIterator",
     "com.google.common.collect.ForwardingMap",
     "com.google.common.collect.ForwardingListMultimap",
     "com.google.common.collect.ExplicitOrdering",
     "com.google.common.io.LittleEndianDataOutputStream",
     "com.google.common.reflect.TypeToken$TypeCollector$3",
     "com.google.common.reflect.TypeToken$TypeCollector$2",
     "com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1",
     "com.google.common.reflect.TypeToken$TypeCollector$4",
     "com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2",
     "com.google.common.cache.LocalCache$Strength",
     "com.google.common.collect.MapMakerInternalMap$CleanupMapTask",
     "com.google.common.hash.Murmur3_128HashFunction",
     "com.google.common.util.concurrent.AtomicDoubleArray",
     "com.google.common.collect.Synchronized$SynchronizedListMultimap",
     "com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm",
     "com.google.common.hash.Funnels$SequentialFunnel",
     "com.google.common.hash.AbstractByteHasher",
     "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$1",
     "com.google.common.collect.Tables$AbstractCell",
     "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$2",
     "com.google.common.base.CaseFormat",
     "com.google.common.collect.Interners",
     "com.google.common.primitives.Floats$LexicographicalComparator",
     "com.google.common.cache.LocalCache$ValueIterator",
     "com.google.common.primitives.Ints",
     "com.google.common.annotations.Beta",
     "com.google.common.collect.MapMakerInternalMap$SoftEntry",
     "com.google.common.primitives.Primitives",
     "com.google.common.base.Utf8",
     "com.google.common.base.Splitter$SplittingIterator",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1$1",
     "com.google.common.collect.RegularImmutableSortedMap$1",
     "com.google.common.collect.Synchronized$SynchronizedAsMapValues",
     "com.google.common.base.Predicates$InPredicate",
     "com.google.common.collect.MapMakerInternalMap$EntrySet",
     "com.google.common.collect.Maps$MapDifferenceImpl",
     "com.google.common.net.MediaType$2",
     "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
     "com.google.common.collect.Multisets$1$1",
     "com.google.common.primitives.UnsignedInteger",
     "com.google.common.collect.Multisets$FilteredMultiset",
     "com.google.common.base.Splitter$MapSplitter",
     "com.google.common.cache.Weigher",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference",
     "com.google.common.util.concurrent.MoreExecutors$DirectExecutorService",
     "com.google.common.base.Converter$IdentityConverter",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder",
     "com.google.common.collect.TreeRangeSet$RangesByUpperBound",
     "com.google.common.collect.HashBiMap$Inverse",
     "com.google.common.collect.ForwardingMap$StandardKeySet",
     "com.google.common.collect.Iterators$10",
     "com.google.common.cache.LocalCache$StrongAccessWriteEntry",
     "com.google.common.collect.Iterators$12",
     "com.google.common.collect.Iterators$11",
     "com.google.common.collect.MapConstraint",
     "com.google.common.base.Predicate",
     "com.google.common.collect.ImmutableSetMultimap$BuilderMultimap",
     "com.google.common.collect.Lists$CharSequenceAsList",
     "com.google.common.eventbus.EventBus$EventWithSubscriber",
     "com.google.common.cache.LocalCache$KeyIterator",
     "com.google.common.net.InetAddresses$TeredoInfo",
     "com.google.common.collect.Iterators$14",
     "com.google.common.collect.Iterators$13",
     "com.google.common.hash.AbstractStreamingHashFunction",
     "com.google.common.cache.LocalCache",
     "com.google.common.cache.LongAddables$PureJavaLongAddable",
     "com.google.common.collect.ArrayTable$1",
     "com.google.common.math.MathPreconditions",
     "com.google.common.util.concurrent.Futures$FallbackFuture$1$1",
     "com.google.common.collect.ImmutableMultimap",
     "com.google.common.collect.HashBiMap$InverseSerializedForm",
     "com.google.common.util.concurrent.WrappingScheduledExecutorService",
     "com.google.common.collect.FilteredEntryMultimap$Keys$1",
     "com.google.common.collect.ImmutableSortedSet",
     "com.google.common.base.Charsets",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$1$2",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$1$1",
     "com.google.common.collect.ImmutableRangeSet$Builder",
     "com.google.common.hash.Hashing$LinearCongruentialGenerator",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1",
     "com.google.common.collect.Multimaps$Keys",
     "com.google.common.base.Joiner$MapJoiner",
     "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache",
     "com.google.common.collect.BinaryTreeTraverser$1$1",
     "com.google.common.collect.AbstractMultiset$EntrySet",
     "com.google.common.collect.ImmutableMultimap$BuilderMultimap",
     "com.google.common.base.Predicates$OrPredicate",
     "com.google.common.collect.RegularImmutableSortedMap",
     "com.google.common.base.Objects$1",
     "com.google.common.base.Optional$1",
     "com.google.common.collect.FilteredKeySetMultimap",
     "com.google.common.base.Splitter$4$1",
     "com.google.common.base.Objects",
     "com.google.common.collect.SortedSetMultimap",
     "com.google.common.collect.ImmutableSortedAsList",
     "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2",
     "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1",
     "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap",
     "com.google.common.collect.AbstractBiMap$KeySet",
     "com.google.common.collect.Maps$SortedMapDifferenceImpl",
     "com.google.common.collect.Constraints$ConstrainedList",
     "com.google.common.collect.Maps$EntrySet",
     "com.google.common.util.concurrent.MoreExecutors",
     "com.google.common.util.concurrent.Futures$FutureCombiner",
     "com.google.common.io.CharSource$EmptyCharSource",
     "com.google.common.cache.LocalCache$WeakAccessWriteEntry",
     "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
     "com.google.common.cache.LocalCache$2",
     "com.google.common.collect.ForwardingMultiset$StandardElementSet",
     "com.google.common.cache.LocalCache$1",
     "com.google.common.hash.Hashing$Crc32Holder",
     "com.google.common.collect.EmptyContiguousSet$1",
     "com.google.common.cache.LongAddables",
     "com.google.common.collect.ImmutableMap$Builder",
     "com.google.common.base.Converter$FunctionBasedConverter",
     "com.google.common.cache.LocalCache$ReferenceEntry",
     "com.google.common.collect.MutableClassToInstanceMap$1",
     "com.google.common.collect.AbstractBiMap$EntrySet",
     "com.google.common.reflect.TypeToken$TypeFilter$1",
     "com.google.common.reflect.TypeToken$TypeFilter$2",
     "com.google.common.collect.Multimaps$CustomMultimap",
     "com.google.common.collect.RegularImmutableList",
     "com.google.common.collect.Tables$TransposeTable$1",
     "com.google.common.hash.BloomFilterStrategies$1",
     "com.google.common.hash.BloomFilterStrategies$2",
     "com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException",
     "com.google.common.reflect.Types$ClassOwnership$2",
     "com.google.common.cache.LocalCache$EntryFactory",
     "com.google.common.collect.Synchronized$SynchronizedAsMapEntries",
     "com.google.common.reflect.Types$ClassOwnership$3",
     "com.google.common.collect.SingletonImmutableTable",
     "com.google.common.reflect.Types$ClassOwnership$1",
     "com.google.common.util.concurrent.SimpleTimeLimiter$1$1",
     "com.google.common.collect.ImmutableMapKeySet",
     "com.google.common.base.Verify",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$3",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$2",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1",
     "com.google.common.util.concurrent.FutureFallback",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$6",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$5",
     "com.google.common.base.Ticker",
     "com.google.common.hash.Funnel",
     "com.google.common.eventbus.SubscriberExceptionHandler",
     "com.google.common.io.ByteStreams",
     "com.google.common.collect.Maps$AbstractFilteredMap",
     "com.google.common.collect.FilteredMultimap",
     "com.google.common.collect.FilteredMultimapValues",
     "com.google.common.io.ByteProcessor",
     "com.google.common.collect.MapMakerInternalMap$SerializationProxy",
     "com.google.common.collect.ImmutableSet$Builder",
     "com.google.common.collect.Sets$SetView",
     "com.google.common.collect.Synchronized$SynchronizedAsMapValues$1",
     "com.google.common.collect.Synchronized$SynchronizedSortedSet",
     "com.google.common.collect.Maps$SortedAsMapView",
     "com.google.common.collect.MapMaker$RemovalCause$4",
     "com.google.common.collect.Collections2$PermutationIterator",
     "com.google.common.collect.MapMaker$RemovalCause$5",
     "com.google.common.collect.MapMaker$RemovalCause$2",
     "com.google.common.collect.MapMaker$RemovalCause$3",
     "com.google.common.primitives.Shorts$ShortArrayAsList",
     "com.google.common.io.Closer",
     "com.google.common.collect.Tables$ImmutableCell",
     "com.google.common.collect.UsingToStringOrdering",
     "com.google.common.collect.ArrayTable$ArrayMap",
     "com.google.common.collect.MapMaker$RemovalCause$1",
     "com.google.common.reflect.TypeToken$TypeSet",
     "com.google.common.util.concurrent.AtomicLongMap$1",
     "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
     "com.google.common.collect.ForwardingMap$StandardEntrySet",
     "com.google.common.cache.LocalCache$WriteQueue",
     "com.google.common.collect.MapDifference",
     "com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry",
     "com.google.common.primitives.Ints$LexicographicalComparator",
     "com.google.common.collect.StandardTable$ColumnKeyIterator",
     "com.google.common.collect.MinMaxPriorityQueue$Heap",
     "com.google.common.collect.Maps$FilteredEntryNavigableMap",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$2$1",
     "com.google.common.collect.MultimapBuilder$ListMultimapBuilder",
     "com.google.common.eventbus.EventBus$LoggingSubscriberExceptionHandler",
     "com.google.common.reflect.ClassPath$Scanner",
     "com.google.common.eventbus.AnnotatedSubscriberFinder$1",
     "com.google.common.collect.Sets$DescendingSet",
     "com.google.common.collect.Sets",
     "com.google.common.primitives.Ints$IntConverter",
     "com.google.common.collect.Multisets$ElementSet",
     "com.google.common.collect.ComparisonChain$1",
     "com.google.common.cache.LocalCache$AccessQueue$1",
     "com.google.common.cache.LocalCache$AccessQueue$2",
     "com.google.common.collect.Iterables$2",
     "com.google.common.collect.Lists$TransformingSequentialList$1",
     "com.google.common.primitives.Booleans",
     "com.google.common.collect.Iterables$3",
     "com.google.common.collect.Iterables$4",
     "com.google.common.collect.Iterables$5",
     "com.google.common.collect.Iterables$6",
     "com.google.common.collect.ForwardingObject",
     "com.google.common.collect.Iterables$7",
     "com.google.common.collect.Iterables$8",
     "com.google.common.collect.Iterables$9",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys",
     "com.google.common.base.MoreObjects$1",
     "com.google.common.reflect.TypeToInstanceMap",
     "com.google.common.collect.ImmutableBiMap",
     "com.google.common.collect.Multisets$UnmodifiableMultiset",
     "com.google.common.collect.Multimaps$Keys$1$1",
     "com.google.common.util.concurrent.ServiceManager$NoOpService",
     "com.google.common.io.Files$FileByteSource",
     "com.google.common.collect.Multimaps$Keys$KeysEntrySet",
     "com.google.common.collect.Collections2$1",
     "com.google.common.collect.Iterables$1",
     "com.google.common.reflect.Parameter",
     "com.google.common.collect.RegularImmutableMap$EntrySet",
     "com.google.common.base.Ascii",
     "com.google.common.collect.ImmutableRangeSet$1",
     "com.google.common.collect.LinkedHashMultimap$ValueSet$1",
     "com.google.common.primitives.SignedBytes",
     "com.google.common.cache.LocalCache$StrongWriteEntry",
     "com.google.common.net.MediaType$1",
     "com.google.common.reflect.ImmutableTypeToInstanceMap$1",
     "com.google.common.cache.RemovalCause",
     "com.google.common.collect.MapConstraints$ConstrainedMultimap$2",
     "com.google.common.collect.SortedIterables",
     "com.google.common.util.concurrent.ListenableScheduledFuture",
     "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1",
     "com.google.common.collect.MapConstraints$ConstrainedMultimap$1"
    ],
    "usedTypes": [
     "com.google.common.base.Charsets",
     "com.google.common.util.concurrent.Futures",
     "com.google.common.util.concurrent.MoreExecutors",
     "com.google.common.util.concurrent.ListenableFuture",
     "com.google.common.util.concurrent.SettableFuture",
     "com.google.common.net.HostAndPort",
     "com.google.common.util.concurrent.FutureCallback",
     "com.google.common.util.concurrent.ListeningExecutorService"
    ],
    "usageRatio": 0.004733727810650888,
    "children": []
   },
   {
    "id": "com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:jar:1.4.2:compile",
    "coordinates": "com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4.2",
    "groupId": "com.googlecode.concurrentlinkedhashmap",
    "artifactId": "concurrentlinkedhashmap-lru",
    "version": "1.4.2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 116565,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$WeightedValue",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ReservationNode",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$SerializationProxy",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$LongByLongToLong",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$EntrySetView",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$KeyIterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ObjectToLong",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$BaseIterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$EntryIterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ConcurrentHashMapSpliterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ValueSpliterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ObjectToInt",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$AddTask",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$ValueIterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$KeySpliterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$DrainStatus$1",
     "com.googlecode.concurrentlinkedhashmap.Weighers",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ValueIterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$DrainStatus$2",
     "com.googlecode.concurrentlinkedhashmap.EntryWeigher",
     "com.googlecode.concurrentlinkedhashmap.Weighers$SetWeigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$DoubleByDoubleToDouble",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$TreeNode",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$DrainStatus$3",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$EntryIterator",
     "com.googlecode.concurrentlinkedhashmap.Weigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ObjectToDouble",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$UpdateTask",
     "com.googlecode.concurrentlinkedhashmap.Weighers$EntryWeigherView",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ObjectByObjectToInt",
     "com.googlecode.concurrentlinkedhashmap.Weighers$MapWeigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$BoundedEntryWeigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Node",
     "com.googlecode.concurrentlinkedhashmap.LinkedDeque$AbstractLinkedIterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$BiFun",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Action",
     "com.googlecode.concurrentlinkedhashmap.Weighers$IterableWeigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$DiscardingListener",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterHashCode",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$KeyIterator",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$KeySetView",
     "com.googlecode.concurrentlinkedhashmap.Linked",
     "com.googlecode.concurrentlinkedhashmap.LinkedDeque",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Traverser",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$TreeBin",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Fun",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$MapEntry",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ObjectByObjectToDouble",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8",
     "com.googlecode.concurrentlinkedhashmap.Weighers$ByteArrayWeigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$KeySet",
     "com.googlecode.concurrentlinkedhashmap.Weighers$CollectionWeigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$BiAction",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Values",
     "com.googlecode.concurrentlinkedhashmap.Weighers$SingletonEntryWeigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$IntByIntToInt",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$RemovalTask",
     "com.googlecode.concurrentlinkedhashmap.LinkedDeque$2",
     "com.googlecode.concurrentlinkedhashmap.LinkedDeque$1",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$EntrySet",
     "com.googlecode.concurrentlinkedhashmap.EvictionListener",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$EntrySpliterator",
     "com.googlecode.concurrentlinkedhashmap.Weighers$SingletonWeigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$WriteThroughEntry",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ForwardingNode",
     "com.googlecode.concurrentlinkedhashmap.Weighers$ListWeigher",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ObjectByObjectToLong",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Segment",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$1",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CollectionView",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$1",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$DiscardingQueue",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$DrainStatus",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$ValuesView",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Node"
    ],
    "usedTypes": [
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap",
     "com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap$Builder"
    ],
    "usageRatio": 0.02564102564102564,
    "children": []
   },
   {
    "id": "com.netflix.hystrix:hystrix-core:jar:1.4.5:test",
    "coordinates": "com.netflix.hystrix:hystrix-core:1.4.5",
    "groupId": "com.netflix.hystrix",
    "artifactId": "hystrix-core",
    "version": "1.4.5",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 287892,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "com.netflix.hystrix.util.LongMaxUpdater",
     "com.netflix.hystrix.HystrixCollapser$1",
     "com.netflix.hystrix.AbstractCommand$CommandHookApplication",
     "com.netflix.hystrix.AbstractCommand$ObservableCommand$1",
     "com.netflix.hystrix.exception.HystrixRuntimeException",
     "com.netflix.hystrix.HystrixThreadPoolProperties",
     "com.netflix.hystrix.HystrixCommandGroupKey$Factory$HystrixCommandGroupDefault",
     "com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler$HystrixContextSchedulerWorker",
     "com.netflix.hystrix.collapser.RequestCollapserFactory",
     "com.netflix.hystrix.strategy.HystrixPlugins",
     "com.netflix.hystrix.HystrixCollapserProperties",
     "com.netflix.hystrix.HystrixCommandKey$Factory$HystrixCommandKeyDefault",
     "com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler$1",
     "com.netflix.hystrix.collapser.RequestCollapser$CollapsedTask$1",
     "com.netflix.hystrix.util.Striped64",
     "com.netflix.hystrix.HystrixObservableCommand$Setter",
     "com.netflix.hystrix.util.Striped64$1",
     "com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction",
     "com.netflix.hystrix.HystrixThreadPoolProperties$Setter",
     "com.netflix.hystrix.collapser.RequestCollapserFactory$Scope",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$StringProperty",
     "com.netflix.hystrix.util.HystrixRollingNumber$ActualTime",
     "com.netflix.hystrix.util.Striped64$HashCode",
     "com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableDefault$1",
     "com.netflix.hystrix.HystrixCollapserKey$Factory",
     "com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler$ThreadPoolScheduler",
     "com.netflix.hystrix.strategy.concurrency.HystrixContextCallable",
     "com.netflix.hystrix.exception.HystrixRuntimeException$FailureType",
     "com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler$ThreadPoolWorker",
     "com.netflix.hystrix.util.HystrixRollingNumber$1",
     "com.netflix.hystrix.HystrixInvokable",
     "com.netflix.hystrix.AbstractCommand$ExecutionHookDeprecationWrapper",
     "com.netflix.hystrix.HystrixCollapser$1$1",
     "com.netflix.hystrix.util.HystrixRollingPercentile$1",
     "com.netflix.hystrix.HystrixThreadPool$HystrixThreadPoolDefault",
     "com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1",
     "com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherCommandDefault",
     "com.netflix.hystrix.util.HystrixRollingPercentile$ActualTime",
     "com.netflix.hystrix.AbstractCommand$DeprecatedOnCompleteWithValueHookApplication$1",
     "com.netflix.hystrix.AbstractCommand",
     "com.netflix.hystrix.util.Striped64$Cell",
     "com.netflix.hystrix.strategy.concurrency.HystrixRequestVariable",
     "com.netflix.hystrix.util.HystrixRollingPercentile$PercentileSnapshot",
     "com.netflix.hystrix.util.LongAdder",
     "com.netflix.hystrix.AbstractCommand$FallbackHookApplication",
     "com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler",
     "com.netflix.hystrix.HystrixRequestCache$ValueCacheKey",
     "com.netflix.hystrix.util.Striped64$ThreadHashCode",
     "com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherThreadPool",
     "com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication",
     "com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherCollapser",
     "com.netflix.hystrix.util.HystrixTimer$1",
     "com.netflix.hystrix.util.ExceptionThreadingUtility",
     "com.netflix.hystrix.AbstractCommand$CachedObservableResponse",
     "com.netflix.hystrix.util.HystrixRollingNumber$Bucket",
     "com.netflix.hystrix.HystrixMetrics",
     "com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableDefault$LazyInitializer",
     "com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1",
     "com.netflix.hystrix.util.HystrixTimer$TimerReference",
     "com.netflix.hystrix.util.HystrixTimer$ScheduledExecutor$1",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesCollapserDefault",
     "com.netflix.hystrix.HystrixThreadPoolKey",
     "com.netflix.hystrix.HystrixThreadPoolKey$1",
     "com.netflix.hystrix.collapser.RealCollapserTimer",
     "com.netflix.hystrix.HystrixCommandGroupKey$1",
     "com.netflix.hystrix.HystrixObservableCollapser$Scope",
     "com.netflix.hystrix.HystrixCommandProperties$ExecutionIsolationStrategyHystrixProperty$1",
     "com.netflix.hystrix.HystrixCircuitBreaker",
     "com.netflix.hystrix.util.HystrixTimer",
     "com.netflix.hystrix.HystrixRequestCache$1",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$DynamicBooleanProperty",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$StringProperty$1",
     "com.netflix.hystrix.HystrixCollapser",
     "com.netflix.hystrix.AbstractCommand$ExecutionHookApplication",
     "com.netflix.hystrix.AbstractCommand$CachedObservableOriginal$1",
     "com.netflix.hystrix.util.HystrixTimer$ScheduledExecutor",
     "com.netflix.hystrix.util.HystrixRollingPercentile$PercentileBucketData",
     "com.netflix.hystrix.HystrixCommandMetrics$HealthCounts",
     "com.netflix.hystrix.HystrixCollapserProperties$Setter$TestHystrixCollapserKey",
     "com.netflix.hystrix.AbstractCommand$TimedOutStatus",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesCommandDefault",
     "com.netflix.hystrix.AbstractCommand$ObservableCommand",
     "com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1",
     "com.netflix.hystrix.HystrixThreadPoolProperties$Setter$TestThreadPoolKey",
     "com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication",
     "com.netflix.hystrix.HystrixCollapserProperties$1",
     "com.netflix.hystrix.strategy.properties.HystrixProperty",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$IntegerProperty",
     "com.netflix.hystrix.HystrixRequestLog",
     "com.netflix.hystrix.AbstractCommand$2",
     "com.netflix.hystrix.AbstractCommand$1",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesStrategyDefault",
     "com.netflix.hystrix.AbstractCommand$8",
     "com.netflix.hystrix.AbstractCommand$7",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory",
     "com.netflix.hystrix.HystrixThreadPool",
     "com.netflix.hystrix.HystrixCommandKey$1",
     "com.netflix.hystrix.AbstractCommand$9",
     "com.netflix.hystrix.AbstractCommand$4",
     "com.netflix.hystrix.AbstractCommand$3",
     "com.netflix.hystrix.AbstractCommand$CommandHookApplication$1",
     "com.netflix.hystrix.AbstractCommand$6",
     "com.netflix.hystrix.AbstractCommand$5",
     "com.netflix.hystrix.collapser.CollapsedRequestObservableFunction",
     "com.netflix.hystrix.HystrixRequestCache",
     "com.netflix.hystrix.AbstractCommand$1$1",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$DynamicStringProperty",
     "com.netflix.hystrix.HystrixCollapser$CollapsedRequest",
     "com.netflix.hystrix.HystrixRequestLog$1",
     "com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableDefault",
     "com.netflix.hystrix.HystrixRequestLog$2",
     "com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisher",
     "com.netflix.hystrix.HystrixCommandProperties$1",
     "com.netflix.hystrix.HystrixCircuitBreaker$HystrixCircuitBreakerImpl",
     "com.netflix.hystrix.Hystrix",
     "com.netflix.hystrix.HystrixExecutable",
     "com.netflix.hystrix.HystrixCommandProperties$Setter",
     "com.netflix.hystrix.collapser.RequestBatch$1",
     "com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy",
     "com.netflix.hystrix.util.HystrixRollingPercentile",
     "com.netflix.hystrix.collapser.RequestBatch$2",
     "com.netflix.hystrix.HystrixThreadPoolKey$Factory$HystrixThreadPoolKeyDefault",
     "com.netflix.hystrix.HystrixCollapserMetrics",
     "com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherCollapserDefault",
     "com.netflix.hystrix.strategy.eventnotifier.HystrixEventNotifier",
     "com.netflix.hystrix.HystrixCommandMetrics",
     "com.netflix.hystrix.util.HystrixRollingPercentile$BucketCircularArray",
     "com.netflix.hystrix.util.HystrixTimer$TimerListener",
     "com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategyDefault",
     "com.netflix.hystrix.HystrixObservableCollapser$1$2",
     "com.netflix.hystrix.Hystrix$1",
     "com.netflix.hystrix.AbstractCommand$CachedObservableResponse$1$1",
     "com.netflix.hystrix.HystrixObservableCollapser$1$1",
     "com.netflix.hystrix.Hystrix$2",
     "com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherCommand",
     "com.netflix.hystrix.HystrixThreadPoolKey$Factory",
     "com.netflix.hystrix.collapser.RequestCollapserFactory$RequestCollapserRequestVariable$1",
     "com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherThreadPoolDefault",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesStrategy",
     "com.netflix.hystrix.HystrixCommandGroupKey$Factory",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$BooleanProperty",
     "com.netflix.hystrix.util.HystrixRollingPercentile$Time",
     "com.netflix.hystrix.AbstractCommand$TryableSemaphoreActual",
     "com.netflix.hystrix.HystrixThreadPoolProperties$1",
     "com.netflix.hystrix.util.HystrixRollingPercentile$Bucket",
     "com.netflix.hystrix.HystrixEventType",
     "com.netflix.hystrix.util.HystrixRollingPercentile$BucketCircularArray$ListState",
     "com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1",
     "com.netflix.hystrix.HystrixCommand",
     "com.netflix.hystrix.HystrixCollapser$Setter",
     "com.netflix.hystrix.HystrixCircuitBreaker$NoOpCircuitBreaker",
     "com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook",
     "com.netflix.hystrix.collapser.CollapserTimer",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory$1",
     "com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1",
     "com.netflix.hystrix.HystrixObservableCollapser$Setter",
     "com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableHolder",
     "com.netflix.hystrix.util.HystrixRollingNumber$Time",
     "com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableLifecycle",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$DynamicLongProperty",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$DynamicIntegerProperty",
     "com.netflix.hystrix.strategy.eventnotifier.HystrixEventNotifierDefault",
     "com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory$2",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory$3",
     "com.netflix.hystrix.AbstractCommand$CachedObservableResponse$1",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory$4",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory$5",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory$6",
     "com.netflix.hystrix.AbstractCommand$20",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory$7",
     "com.netflix.hystrix.exception.HystrixBadRequestException",
     "com.netflix.hystrix.AbstractCommand$21",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory$8",
     "com.netflix.hystrix.strategy.properties.HystrixProperty$Factory$9",
     "com.netflix.hystrix.AbstractCommand$CachedObservableOriginal",
     "com.netflix.hystrix.HystrixCommandGroupKey",
     "com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3",
     "com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$2",
     "com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1",
     "com.netflix.hystrix.collapser.CollapsedRequestObservableFunction$ResponseHolder",
     "com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler$FutureCompleterWithConfigurableInterrupt",
     "com.netflix.hystrix.HystrixCommandKey$Factory",
     "com.netflix.hystrix.util.HystrixRollingNumber$BucketCircularArray",
     "com.netflix.hystrix.collapser.RequestCollapserFactory$1",
     "com.netflix.hystrix.HystrixThreadPoolMetrics",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$BooleanProperty$1",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$ChainLink",
     "com.netflix.hystrix.AbstractCommand$16",
     "com.netflix.hystrix.AbstractCommand$17",
     "com.netflix.hystrix.collapser.RequestCollapser$CollapsedTask",
     "com.netflix.hystrix.AbstractCommand$18",
     "com.netflix.hystrix.HystrixCollapserProperties$Setter",
     "com.netflix.hystrix.HystrixCollapserKey$Factory$HystrixCollapserKeyDefault",
     "com.netflix.hystrix.AbstractCommand$19",
     "com.netflix.hystrix.AbstractCommand$12",
     "com.netflix.hystrix.AbstractCommand$13",
     "com.netflix.hystrix.AbstractCommand$14",
     "com.netflix.hystrix.AbstractCommand$15",
     "com.netflix.hystrix.HystrixThreadPoolProperties$Setter$1",
     "com.netflix.hystrix.AbstractCommand$10",
     "com.netflix.hystrix.AbstractCommand$11",
     "com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable",
     "com.netflix.hystrix.HystrixCollapserProperties$Setter$1",
     "com.netflix.hystrix.HystrixCollapserKey",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesFactory",
     "com.netflix.hystrix.util.HystrixRollingNumber",
     "com.netflix.hystrix.HystrixInvokableInfo",
     "com.netflix.hystrix.HystrixCommand$1",
     "com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherDefault",
     "com.netflix.hystrix.HystrixCommand$2",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesThreadPoolDefault",
     "com.netflix.hystrix.HystrixCommand$Setter",
     "com.netflix.hystrix.AbstractCommand$TryableSemaphore",
     "com.netflix.hystrix.HystrixCommandProperties$ExecutionIsolationStrategy",
     "com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory",
     "com.netflix.hystrix.util.HystrixRollingNumber$CumulativeSum",
     "com.netflix.hystrix.collapser.RequestCollapser",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty",
     "com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableHolder$RVCacheKey",
     "com.netflix.hystrix.collapser.RequestBatch",
     "com.netflix.hystrix.HystrixCommandKey",
     "com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty$IntegerProperty$1",
     "com.netflix.hystrix.HystrixCommandProperties$ExecutionIsolationStrategyHystrixProperty",
     "com.netflix.hystrix.HystrixCollapser$Scope",
     "com.netflix.hystrix.strategy.concurrency.HystrixRequestContext",
     "com.netflix.hystrix.collapser.RequestCollapserFactory$Setter",
     "com.netflix.hystrix.collapser.RequestCollapserFactory$Scopes",
     "com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1",
     "com.netflix.hystrix.HystrixObservableCollapser",
     "com.netflix.hystrix.HystrixCommandProperties",
     "com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy$2",
     "com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy$1",
     "com.netflix.hystrix.HystrixCircuitBreaker$Factory",
     "com.netflix.hystrix.HystrixThreadPool$Factory",
     "com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableHolder$1",
     "com.netflix.hystrix.HystrixCollapserKey$1",
     "com.netflix.hystrix.util.HystrixRollingNumberEvent",
     "com.netflix.hystrix.collapser.RequestCollapserFactory$RequestCollapserRequestVariable",
     "com.netflix.hystrix.HystrixRequestCache$RequestCacheKey",
     "com.netflix.hystrix.AbstractCommand$ExecutionResult",
     "com.netflix.hystrix.util.HystrixRollingNumber$BucketCircularArray$ListState",
     "com.netflix.hystrix.HystrixThreadPool$HystrixThreadPoolDefault$1",
     "com.netflix.hystrix.AbstractCommand$DeprecatedOnCompleteWithValueHookApplication",
     "com.netflix.hystrix.HystrixObservable",
     "com.netflix.hystrix.collapser.HystrixCollapserBridge",
     "com.netflix.hystrix.AbstractCommand$TryableSemaphoreNoOp",
     "com.netflix.hystrix.HystrixObservableCommand",
     "com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHookDefault",
     "com.netflix.hystrix.HystrixObservableCollapser$1",
     "com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$HystrixTimeoutException"
    ],
    "usedTypes": [
     "com.netflix.hystrix.HystrixCommandProperties$ExecutionIsolationStrategy",
     "com.netflix.hystrix.HystrixCommandGroupKey",
     "com.netflix.hystrix.HystrixCommand",
     "com.netflix.hystrix.HystrixCommandProperties",
     "com.netflix.hystrix.HystrixCommandProperties$Setter",
     "com.netflix.hystrix.HystrixThreadPoolProperties$Setter",
     "com.netflix.hystrix.HystrixCommand$Setter",
     "com.netflix.hystrix.HystrixThreadPoolProperties",
     "com.netflix.hystrix.HystrixCommandGroupKey$Factory"
    ],
    "usageRatio": 0.035856573705179286,
    "children": [
     {
      "id": "com.netflix.archaius:archaius-core:jar:0.4.1:test",
      "coordinates": "com.netflix.archaius:archaius-core:0.4.1",
      "groupId": "com.netflix.archaius",
      "artifactId": "archaius-core",
      "version": "0.4.1",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 77761,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.netflix.hystrix:hystrix-core:jar:1.4.5:test",
      "allTypes": [
       "com.netflix.config.DynamicStringSetProperty",
       "com.netflix.config.DynamicProperty$2",
       "com.netflix.config.DynamicProperty$1",
       "com.netflix.config.ConcurrentMapConfiguration",
       "com.netflix.config.DynamicIntProperty",
       "com.netflix.config.AbstractDynamicPropertyListener$EventType",
       "com.netflix.config.ConfigurationWithPollingSource",
       "com.netflix.config.samples.SampleApplicationWithDefaultConfiguration",
       "com.netflix.config.DynamicURLConfiguration",
       "com.netflix.config.DynamicProperty",
       "com.netflix.config.ConcurrentCompositeConfiguration$1",
       "com.netflix.config.DynamicStringListProperty",
       "com.netflix.config.FixedDelayPollingScheduler",
       "com.netflix.config.jmx.BaseConfigMBean",
       "com.netflix.config.DynamicSetProperty$1",
       "com.netflix.config.DynamicListProperty$1",
       "com.netflix.config.samples.SampleBean$1",
       "com.netflix.config.PollListener",
       "com.netflix.config.PollListener$EventType",
       "com.netflix.config.DynamicPropertyFactory",
       "com.netflix.config.DynamicDoubleProperty",
       "com.netflix.config.DynamicBooleanProperty",
       "com.netflix.config.DynamicListProperty",
       "com.netflix.config.AbstractPollingScheduler$1",
       "com.netflix.config.jmx.ConfigMBean",
       "com.netflix.config.ClasspathPropertiesConfiguration",
       "com.netflix.config.DynamicProperty$6",
       "com.netflix.config.DynamicProperty$5",
       "com.netflix.config.DynamicProperty$4",
       "com.netflix.config.DeploymentContext",
       "com.netflix.config.WebApplicationProperties",
       "com.netflix.config.DynamicProperty$3",
       "com.netflix.config.util.ConfigurationUtils",
       "com.netflix.config.DynamicProperty$7",
       "com.netflix.config.AbstractDynamicPropertyListener",
       "com.netflix.config.PropertyListener",
       "com.netflix.config.DynamicStringProperty",
       "com.netflix.config.PolledConfigurationSource",
       "com.netflix.config.samples.SampleApplication",
       "com.netflix.config.SimpleDeploymentContext",
       "com.netflix.config.ExpandedConfigurationListenerAdapter",
       "com.netflix.config.DynamicProperty$DynamicPropertyListener",
       "com.netflix.config.AggregatedConfiguration",
       "com.netflix.config.DynamicLongProperty",
       "com.netflix.config.MissingConfigurationSourceException",
       "com.netflix.config.jmx.ConfigJMXManager",
       "com.netflix.config.DynamicPropertySupport",
       "com.netflix.config.PropertyWrapper",
       "com.netflix.config.FixedDelayPollingScheduler$1",
       "com.netflix.config.ConfigurationBackedDynamicPropertySupportImpl",
       "com.netflix.config.DynamicSetProperty",
       "com.netflix.config.ConfigurationBasedDeploymentContext",
       "com.netflix.config.ConfigurationManager",
       "com.netflix.config.DynamicFloatProperty",
       "com.netflix.config.PropertyWrapper$1",
       "com.netflix.config.DynamicConfiguration",
       "com.netflix.config.DynamicStringMapProperty",
       "com.netflix.config.samples.SampleBean",
       "com.netflix.config.ConcurrentCompositeConfiguration",
       "com.netflix.config.PollResult",
       "com.netflix.config.AbstractPollingScheduler",
       "com.netflix.config.sources.URLConfigurationSource",
       "com.netflix.config.sources.JDBCConfigurationSource",
       "com.netflix.config.DynamicProperty$CachedValue",
       "com.netflix.config.DynamicMapProperty"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "commons-configuration:commons-configuration:jar:1.8:test",
        "coordinates": "commons-configuration:commons-configuration:1.8",
        "groupId": "commons-configuration",
        "artifactId": "commons-configuration",
        "version": "1.8",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 354491,
        "type": "transitive",
        "status": "bloated",
        "parent": "com.netflix.archaius:archaius-core:jar:0.4.1:test",
        "allTypes": [
         "org.apache.commons.configuration.ConfigurationFactory$PropertyListConfigurationFactory",
         "org.apache.commons.configuration.interpol.ConstantLookup",
         "org.apache.commons.configuration.interpol.ExprLookup$Variables",
         "org.apache.commons.configuration.beanutils.DefaultBeanFactory",
         "org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser",
         "org.apache.commons.configuration.web.ServletFilterConfiguration",
         "org.apache.commons.configuration.PropertiesConfiguration$IOFactory",
         "org.apache.commons.configuration.interpol.ExprLookup",
         "org.apache.commons.configuration.interpol.ExprLookup$Variable",
         "org.apache.commons.configuration.CompositeConfiguration",
         "org.apache.commons.configuration.ConfigurationXMLReader",
         "org.apache.commons.configuration.HierarchicalConfiguration$3",
         "org.apache.commons.configuration.HierarchicalConfiguration$4",
         "org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor",
         "org.apache.commons.configuration.HierarchicalConfiguration$5",
         "org.apache.commons.configuration.AbstractConfiguration",
         "org.apache.commons.configuration.plist.PropertyListParser",
         "org.apache.commons.configuration.ConfigurationMap$ConfigurationSet$ConfigurationSetIterator",
         "org.apache.commons.configuration.SystemConfiguration",
         "org.apache.commons.configuration.plist.PropertyListParser$JJCalls",
         "org.apache.commons.configuration.MapConfiguration",
         "org.apache.commons.configuration.plist.TokenMgrError",
         "org.apache.commons.configuration.HierarchicalConfiguration$1",
         "org.apache.commons.configuration.PatternSubtreeConfigurationWrapper$1",
         "org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser",
         "org.apache.commons.configuration.HierarchicalConfiguration$2",
         "org.apache.commons.configuration.Lock",
         "org.apache.commons.configuration.reloading.VFSFileChangedReloadingStrategy",
         "org.apache.commons.configuration.web.ServletConfiguration",
         "org.apache.commons.configuration.reloading.InvariantReloadingStrategy",
         "org.apache.commons.configuration.ConfigurationFactory$ConfigurationBuilder",
         "org.apache.commons.configuration.web.ServletRequestConfiguration",
         "org.apache.commons.configuration.tree.TreeUtils",
         "org.apache.commons.configuration.PropertiesConfiguration$DefaultIOFactory",
         "org.apache.commons.configuration.EnvironmentConfiguration",
         "org.apache.commons.configuration.web.ServletContextConfiguration",
         "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider",
         "org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter",
         "org.apache.commons.configuration.FileOptionsProvider",
         "org.apache.commons.configuration.tree.NodeAddData",
         "org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor",
         "org.apache.commons.configuration.plist.SimpleCharStream",
         "org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser",
         "org.apache.commons.configuration.reloading.ReloadingStrategy",
         "org.apache.commons.configuration.PropertyConverter",
         "org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase",
         "org.apache.commons.configuration.ConfigurationException",
         "org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser",
         "org.apache.commons.configuration.SubsetConfiguration$SubsetIterator",
         "org.apache.commons.configuration.Configuration",
         "org.apache.commons.configuration.FileConfiguration",
         "org.apache.commons.configuration.tree.DefaultConfigurationNode$SubNodes",
         "org.apache.commons.configuration.HierarchicalConfigurationXMLReader$SAXVisitor",
         "org.apache.commons.configuration.HierarchicalConfigurationConverter",
         "org.apache.commons.configuration.CombinedConfiguration$ConfigData",
         "org.apache.commons.configuration.resolver.CatalogResolver$Catalog",
         "org.apache.commons.configuration.plist.PropertyListConfiguration$1",
         "org.apache.commons.configuration.tree.UnionCombiner",
         "org.apache.commons.configuration.plist.XMLPropertyListConfiguration$PListNode",
         "org.apache.commons.configuration.DefaultConfigurationBuilder",
         "org.apache.commons.configuration.VFSFileSystem",
         "org.apache.commons.configuration.plist.XMLPropertyListConfiguration",
         "org.apache.commons.configuration.HierarchicalConfigurationXMLReader",
         "org.apache.commons.configuration.plist.XMLPropertyListConfiguration$ArrayNode",
         "org.apache.commons.configuration.ConfigurationComparator",
         "org.apache.commons.configuration.PropertiesConfiguration",
         "org.apache.commons.configuration.XMLConfiguration$XMLNode",
         "org.apache.commons.configuration.DataConfiguration",
         "org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule",
         "org.apache.commons.configuration.XMLPropertiesConfiguration",
         "org.apache.commons.configuration.reloading.ManagedReloadingStrategyMBean",
         "org.apache.commons.configuration.resolver.CatalogResolver$CatalogManager",
         "org.apache.commons.configuration.ConfigurationFactory",
         "org.apache.commons.configuration.AbstractFileConfiguration",
         "org.apache.commons.configuration.event.EventSource",
         "org.apache.commons.configuration.interpol.ConfigurationInterpolator",
         "org.apache.commons.configuration.tree.xpath.ConfigurationNodePointerFactory",
         "org.apache.commons.configuration.DatabaseConfiguration",
         "org.apache.commons.configuration.DynamicCombinedConfiguration",
         "org.apache.commons.configuration.tree.ViewNode",
         "org.apache.commons.configuration.HierarchicalConfiguration$Node",
         "org.apache.commons.configuration.tree.ConfigurationNodeVisitorAdapter",
         "org.apache.commons.configuration.XMLConfiguration$1",
         "org.apache.commons.configuration.web.BaseWebConfiguration",
         "org.apache.commons.configuration.plist.PropertyListParserTokenManager",
         "org.apache.commons.configuration.XMLPropertiesConfiguration$1",
         "org.apache.commons.configuration.DefaultFileSystem",
         "org.apache.commons.configuration.tree.DefaultExpressionEngine",
         "org.apache.commons.configuration.XMLConfiguration$XMLFileConfigurationDelegate",
         "org.apache.commons.configuration.CombinedConfiguration",
         "org.apache.commons.configuration.SubnodeConfiguration",
         "org.apache.commons.configuration.DefaultConfigurationBuilder$FileConfigurationProvider",
         "org.apache.commons.configuration.plist.XMLPropertyListConfiguration$XMLPropertyListHandler",
         "org.apache.commons.configuration.plist.PropertyListParserConstants",
         "org.apache.commons.configuration.ConfigurationFactory$AdditionalConfigurationData",
         "org.apache.commons.configuration.JNDIConfiguration",
         "org.apache.commons.configuration.tree.NodeCombiner",
         "org.apache.commons.configuration.ConfigurationKey",
         "org.apache.commons.configuration.plist.PropertyListParser$1",
         "org.apache.commons.configuration.ConfigurationMap$1",
         "org.apache.commons.configuration.FileSystem",
         "org.apache.commons.configuration.plist.PropertyListConfiguration",
         "org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader",
         "org.apache.commons.configuration.beanutils.BeanDeclaration",
         "org.apache.commons.configuration.DefaultConfigurationBuilder$FileExtensionConfigurationProvider",
         "org.apache.commons.configuration.ConfigurationMap",
         "org.apache.commons.configuration.plist.ParseException",
         "org.apache.commons.configuration.beanutils.ConfigurationDynaClass",
         "org.apache.commons.configuration.ConfigurationConverter",
         "org.apache.commons.configuration.ConfigurationUtils$1",
         "org.apache.commons.configuration.event.ConfigurationListener",
         "org.apache.commons.configuration.ConfigurationKey$KeyIterator",
         "org.apache.commons.configuration.HierarchicalXMLConfiguration",
         "org.apache.commons.configuration.PrefixedKeysIterator",
         "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider",
         "org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream",
         "org.apache.commons.configuration.ConfigurationBuilder",
         "org.apache.commons.configuration.ConfigurationFactory$SystemConfigurationFactory",
         "org.apache.commons.configuration.tree.ExpressionEngine",
         "org.apache.commons.configuration.tree.xpath.XPathExpressionEngine",
         "org.apache.commons.configuration.PropertiesConfigurationLayout",
         "org.apache.commons.configuration.tree.xpath.ConfigurationNodePointer",
         "org.apache.commons.configuration.reloading.FileChangedReloadingStrategy",
         "org.apache.commons.configuration.AbstractConfiguration$2",
         "org.apache.commons.configuration.HierarchicalConfiguration",
         "org.apache.commons.configuration.AbstractConfiguration$1",
         "org.apache.commons.configuration.DynamicCombinedConfiguration$1",
         "org.apache.commons.configuration.plist.XMLPropertyListConfiguration$1",
         "org.apache.commons.configuration.event.ConfigurationErrorListener",
         "org.apache.commons.configuration.HierarchicalConfiguration$DefinedVisitor",
         "org.apache.commons.configuration.plist.PropertyListParser$LookaheadSuccess",
         "org.apache.commons.configuration.tree.OverrideCombiner",
         "org.apache.commons.configuration.ConfigurationMap$ConfigurationSet$Entry",
         "org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData",
         "org.apache.commons.configuration.BaseConfigurationXMLReader",
         "org.apache.commons.configuration.VFSFileSystem$VFSURLStreamHandler",
         "org.apache.commons.configuration.ConfigurationMap$ConfigurationSet",
         "org.apache.commons.configuration.event.ConfigurationEvent",
         "org.apache.commons.configuration.FileSystemBased",
         "org.apache.commons.configuration.beanutils.BeanHelper",
         "org.apache.commons.configuration.HierarchicalReloadableConfiguration",
         "org.apache.commons.configuration.MultiFileHierarchicalConfiguration",
         "org.apache.commons.configuration.resolver.DefaultEntityResolver",
         "org.apache.commons.configuration.web.AppletConfiguration",
         "org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren",
         "org.apache.commons.configuration.ConfigurationUtils",
         "org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate",
         "org.apache.commons.configuration.reloading.ManagedReloadingStrategy",
         "org.apache.commons.configuration.XMLPropertiesConfiguration$XMLPropertiesHandler",
         "org.apache.commons.configuration.ConfigurationFactory$DigesterConfigurationFactory",
         "org.apache.commons.configuration.resolver.EntityResolverSupport",
         "org.apache.commons.configuration.beanutils.BeanFactory",
         "org.apache.commons.configuration.ConversionException",
         "org.apache.commons.configuration.reloading.Reloadable",
         "org.apache.commons.configuration.ConfigurationFactory$FileConfigurationFactory",
         "org.apache.commons.configuration.AbstractHierarchicalFileConfiguration",
         "org.apache.commons.configuration.tree.ConfigurationNodeVisitor",
         "org.apache.commons.configuration.MultiFileHierarchicalConfiguration$1",
         "org.apache.commons.configuration.BaseConfiguration",
         "org.apache.commons.configuration.MultiFileHierarchicalConfiguration$2",
         "org.apache.commons.configuration.beanutils.ConfigurationDynaBean",
         "org.apache.commons.configuration.VerifiableOutputStream",
         "org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor",
         "org.apache.commons.configuration.tree.DefaultConfigurationKey",
         "org.apache.commons.configuration.BaseConfigurationXMLReader$SAXConverter",
         "org.apache.commons.configuration.resolver.EntityRegistry",
         "org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorAttribute",
         "org.apache.commons.configuration.plist.Token",
         "org.apache.commons.configuration.PatternSubtreeConfigurationWrapper",
         "org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator",
         "org.apache.commons.configuration.event.ConfigurationErrorEvent",
         "org.apache.commons.configuration.HierarchicalConfiguration$BuilderVisitor",
         "org.apache.commons.configuration.resolver.CatalogResolver",
         "org.apache.commons.configuration.HierarchicalINIConfiguration",
         "org.apache.commons.configuration.tree.ConfigurationNode",
         "org.apache.commons.configuration.ConfigurationFactory$JNDIConfigurationFactory",
         "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration",
         "org.apache.commons.configuration.ConfigurationRuntimeException",
         "org.apache.commons.configuration.tree.DefaultConfigurationNode",
         "org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor",
         "org.apache.commons.configuration.DefaultConfigurationBuilder$XMLConfigurationProvider",
         "org.apache.commons.configuration.interpol.EnvironmentLookup",
         "org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData",
         "org.apache.commons.configuration.SubsetConfiguration",
         "org.apache.commons.configuration.XMLConfiguration",
         "org.apache.commons.configuration.ConfigurationFactory$PropertiesConfigurationFactory",
         "org.apache.commons.configuration.tree.MergeCombiner",
         "org.apache.commons.configuration.INIConfiguration",
         "org.apache.commons.configuration.StrictConfigurationComparator",
         "org.apache.commons.configuration.beanutils.XMLBeanDeclaration",
         "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": [
         {
          "id": "commons-lang:commons-lang:jar:2.6:test",
          "coordinates": "commons-lang:commons-lang:2.6",
          "groupId": "commons-lang",
          "artifactId": "commons-lang",
          "version": "2.6",
          "scope": "test",
          "packaging": "jar",
          "omitted": true,
          "size": 284220,
          "type": "unknown",
          "status": "unknown",
          "parent": "commons-configuration:commons-configuration:jar:1.8:test",
          "allTypes": [],
          "usedTypes": [],
          "usageRatio": -1.0,
          "children": []
         },
         {
          "id": "commons-logging:commons-logging:jar:1.1.1:test",
          "coordinates": "commons-logging:commons-logging:1.1.1",
          "groupId": "commons-logging",
          "artifactId": "commons-logging",
          "version": "1.1.1",
          "scope": "test",
          "packaging": "jar",
          "omitted": false,
          "size": 60686,
          "type": "transitive",
          "status": "bloated",
          "parent": "commons-configuration:commons-configuration:jar:1.8:test",
          "allTypes": [
           "org.apache.commons.logging.impl.WeakHashtable$WeakKey",
           "org.apache.commons.logging.impl.SimpleLog",
           "org.apache.commons.logging.impl.Log4JLogger",
           "org.apache.commons.logging.impl.WeakHashtable$1",
           "org.apache.commons.logging.LogFactory$1",
           "org.apache.commons.logging.LogFactory$2",
           "org.apache.commons.logging.LogSource",
           "org.apache.commons.logging.impl.LogFactoryImpl",
           "org.apache.commons.logging.impl.AvalonLogger",
           "org.apache.commons.logging.impl.ServletContextCleaner",
           "org.apache.commons.logging.impl.NoOpLog",
           "org.apache.commons.logging.LogFactory$5",
           "org.apache.commons.logging.LogFactory$6",
           "org.apache.commons.logging.LogFactory$3",
           "org.apache.commons.logging.LogFactory$4",
           "org.apache.commons.logging.impl.Jdk13LumberjackLogger",
           "org.apache.commons.logging.impl.LogKitLogger",
           "org.apache.commons.logging.impl.WeakHashtable$Entry",
           "org.apache.commons.logging.impl.WeakHashtable$Referenced",
           "org.apache.commons.logging.impl.WeakHashtable",
           "org.apache.commons.logging.impl.LogFactoryImpl$3",
           "org.apache.commons.logging.impl.LogFactoryImpl$2",
           "org.apache.commons.logging.impl.LogFactoryImpl$1",
           "org.apache.commons.logging.impl.SimpleLog$1",
           "org.apache.commons.logging.Log",
           "org.apache.commons.logging.LogFactory",
           "org.apache.commons.logging.impl.Jdk14Logger",
           "org.apache.commons.logging.LogConfigurationException"
          ],
          "usedTypes": [],
          "usageRatio": 0.0,
          "children": []
         }
        ]
       },
       {
        "id": "org.slf4j:slf4j-api:jar:1.6.4:test",
        "coordinates": "org.slf4j:slf4j-api:1.6.4",
        "groupId": "org.slf4j",
        "artifactId": "slf4j-api",
        "version": "1.6.4",
        "scope": "test",
        "packaging": "jar",
        "omitted": true,
        "type": "unknown",
        "status": "unknown",
        "parent": "com.netflix.archaius:archaius-core:jar:0.4.1:test",
        "allTypes": [],
        "usedTypes": [],
        "usageRatio": -1.0,
        "children": []
       }
      ]
     },
     {
      "id": "io.reactivex:rxjava:jar:1.0.9:test",
      "coordinates": "io.reactivex:rxjava:1.0.9",
      "groupId": "io.reactivex",
      "artifactId": "rxjava",
      "version": "1.0.9",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 739996,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.netflix.hystrix:hystrix-core:jar:1.4.5:test",
      "allTypes": [
       "rx.subjects.ReplaySubject$NodeList$Node",
       "rx.exceptions.CompositeException$WrappedPrintStream",
       "rx.internal.operators.OnSubscribeRange$1",
       "rx.internal.operators.BlockingOperatorLatest$1",
       "rx.internal.operators.OperatorToMultimap$DefaultMultimapCollectionFactory",
       "rx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber",
       "rx.internal.operators.OperatorGroupBy",
       "rx.plugins.RxJavaSchedulersHook",
       "rx.internal.util.IndexedRingBuffer$ElementSection",
       "rx.internal.util.PlatformDependent",
       "rx.internal.util.unsafe.MpmcArrayQueueProducerField",
       "rx.internal.operators.OperatorTimeInterval$1",
       "rx.Observable$OnSubscribe",
       "rx.internal.operators.OperatorDebounceWithTime$1$1",
       "rx.internal.operators.BlockingOperatorMostRecent$1",
       "rx.internal.operators.OperatorBufferWithTime",
       "rx.internal.util.unsafe.MpmcArrayQueueL1Pad",
       "rx.subjects.ReplaySubject$UnboundedReplayState",
       "rx.internal.operators.OperatorDelay",
       "rx.exceptions.MissingBackpressureException",
       "rx.observables.AbstractOnSubscribe",
       "rx.internal.util.unsafe.SpscArrayQueueProducerFields",
       "rx.internal.operators.OperatorTimeoutBase$TimeoutStub",
       "rx.plugins.RxJavaErrorHandler",
       "rx.functions.Actions$EmptyAction",
       "rx.subjects.SubjectSubscriptionManager",
       "rx.internal.operators.OperatorSkipUntil",
       "rx.internal.operators.OperatorMerge$1",
       "rx.observers.TestObserver",
       "rx.internal.operators.OperatorMerge$MergeProducer",
       "rx.internal.operators.OperatorOnBackpressureDrop",
       "rx.internal.operators.OperatorScan",
       "rx.internal.util.ScalarSynchronousObservable$1",
       "rx.internal.operators.OperatorWindowWithSize",
       "rx.internal.operators.OperatorTakeLast",
       "rx.internal.operators.OperatorSwitch$SwitchSubscriber",
       "rx.internal.operators.OperatorWindowWithSize$InexactSubscriber",
       "rx.schedulers.CachedThreadScheduler$CachedWorkerPool",
       "rx.internal.operators.BlockingOperatorLatest$LatestObserverIterator",
       "rx.subscriptions.SerialSubscription$State",
       "rx.internal.util.FrontPadding",
       "rx.internal.operators.OnSubscribeToObservableFuture$ToObservableFuture$1",
       "rx.internal.operators.OperatorWindowWithTime$State",
       "rx.schedulers.Timestamped",
       "rx.internal.operators.OperatorWindowWithSize$ExactSubscriber",
       "rx.internal.operators.OperatorBufferWithSingleObservable",
       "rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$2",
       "rx.internal.operators.OperatorSwitchIfEmpty",
       "rx.internal.operators.OperatorConcat",
       "rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$1",
       "rx.internal.operators.BlockingOperatorToFuture",
       "rx.internal.operators.BlockingOperatorNext$NextObserver",
       "rx.internal.operators.OnSubscribeDelaySubscription",
       "rx.subjects.ReplaySubject$TimeEvictionPolicy",
       "rx.internal.operators.OnSubscribeTimerOnce$1",
       "rx.internal.operators.OnSubscribeTimerPeriodically$1",
       "rx.observers.SafeSubscriber",
       "rx.internal.operators.OperatorOnErrorFlatMap$1$1",
       "rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber",
       "rx.internal.util.unsafe.MpmcArrayQueueConsumerField",
       "rx.internal.operators.OperatorBufferWithSize$1",
       "rx.observers.SerializedObserver$FastList",
       "rx.internal.operators.OperatorBufferWithSize$2",
       "rx.observers.Observers",
       "rx.internal.operators.OperatorTimeoutBase$FirstTimeoutStub",
       "rx.internal.operators.OnSubscribeUsing$1",
       "rx.internal.operators.OperatorReplay",
       "rx.subscriptions.CompositeSubscription",
       "rx.Observable$Operator",
       "rx.observables.GroupedObservable$1",
       "rx.schedulers.TimeInterval",
       "rx.exceptions.OnErrorThrowable",
       "rx.internal.operators.OperatorSkipTimed",
       "rx.internal.operators.OperatorZip$ZipProducer",
       "rx.schedulers.ExecutorScheduler$ExecutorAction",
       "rx.internal.operators.OperatorMerge$HolderDelayErrors",
       "rx.functions.Functions$10",
       "rx.internal.operators.OnSubscribeRefCount",
       "rx.functions.Functions$12",
       "rx.internal.operators.OperatorDefaultIfEmpty",
       "rx.functions.Functions$11",
       "rx.functions.Functions$14",
       "rx.functions.Functions$13",
       "rx.observers.SerializedSubscriber",
       "rx.observables.BlockingObservable$1",
       "rx.internal.operators.OnSubscribeCache",
       "rx.internal.operators.OperatorOnErrorResumeNextViaFunction$1",
       "rx.internal.operators.OperatorToObservableSortedList$1$1",
       "rx.internal.operators.OperatorZip",
       "rx.observables.BlockingObservable$3",
       "rx.internal.operators.OnSubscribeTimerOnce",
       "rx.internal.operators.OperatorReplay$SubjectWrapper",
       "rx.observables.BlockingObservable$2",
       "rx.internal.operators.OperatorTimeoutWithSelector",
       "rx.internal.operators.TakeLastQueueProducer",
       "rx.internal.operators.OperatorConcat$ConcatProducer",
       "rx.schedulers.TestScheduler$TimedAction",
       "rx.internal.operators.OperatorWindowWithStartEndObservable$1",
       "rx.internal.operators.OperatorDefaultIfEmpty$1",
       "rx.internal.operators.OperatorBufferWithTime$InexactSubscriber$2",
       "rx.observers.Subscribers$2",
       "rx.internal.operators.OperatorBufferWithTime$InexactSubscriber$1",
       "rx.subjects.ReplaySubject$ReplayState",
       "rx.observers.Subscribers$3",
       "rx.internal.operators.OperatorWithLatestFrom$1",
       "rx.observers.Subscribers$4",
       "rx.internal.operators.OperatorObserveOn$ScheduledUnsubscribe",
       "rx.internal.operators.OperatorWithLatestFrom$2",
       "rx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber",
       "rx.exceptions.OnErrorNotImplementedException",
       "rx.internal.util.unsafe.SpmcArrayQueueL1Pad",
       "rx.internal.operators.OnSubscribeJoin$ResultSink$RightSubscriber$RightDurationSubscriber",
       "rx.internal.operators.OnSubscribeDefer",
       "rx.internal.operators.OperatorTakeLast$1",
       "rx.subjects.ReplaySubject$PairEvictionPolicy",
       "rx.subjects.ReplaySubject$NodeList",
       "rx.Observer",
       "rx.internal.util.IndexedRingBuffer$IndexSection",
       "rx.internal.operators.OnSubscribeRange",
       "rx.observables.GroupedObservable",
       "rx.schedulers.TestScheduler$CompareActionsByTime",
       "rx.internal.operators.OnSubscribeTimerPeriodically",
       "rx.exceptions.CompositeException",
       "rx.internal.util.unsafe.MpmcArrayQueueL2Pad",
       "rx.internal.operators.OnSubscribeUsing",
       "rx.internal.operators.OperatorSkipLastTimed",
       "rx.internal.operators.OperatorMapNotification",
       "rx.internal.operators.OperatorDematerialize$Holder",
       "rx.internal.operators.OperatorFilter",
       "rx.exceptions.OnErrorFailedException",
       "rx.internal.operators.OperatorDoOnSubscribe",
       "rx.subscriptions.SerialSubscription",
       "rx.internal.schedulers.NewThreadWorker",
       "rx.internal.util.unsafe.UnsafeAccess",
       "rx.internal.operators.OperatorZip$ZipSubscriber",
       "rx.internal.operators.OperatorOnErrorFlatMap$1",
       "rx.internal.util.SubscriptionIndexedRingBuffer",
       "rx.internal.operators.OnSubscribeCombineLatest$MultiSourceProducer",
       "rx.functions.Func0",
       "rx.internal.operators.OperatorFinally$1",
       "rx.functions.Func1",
       "rx.functions.Func2",
       "rx.functions.Func3",
       "rx.functions.Func4",
       "rx.functions.Func5",
       "rx.functions.Func6",
       "rx.internal.operators.OperatorZipIterable$1",
       "rx.functions.Func7",
       "rx.internal.util.ObjectPool$1",
       "rx.functions.Func8",
       "rx.internal.operators.OperatorDelay$1",
       "rx.functions.Func9",
       "rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber",
       "rx.internal.util.unsafe.SpmcArrayQueueConsumerField",
       "rx.internal.operators.OperatorBufferWithTime$ExactSubscriber",
       "rx.internal.operators.OperatorMaterialize$1",
       "rx.internal.operators.OnSubscribeRedo$RedoFinite$1",
       "rx.observers.Subscribers$1",
       "rx.internal.operators.OperatorToObservableList",
       "rx.internal.operators.OperatorConcat$Holder",
       "rx.functions.Actions$1",
       "rx.internal.operators.OperatorDistinct$1",
       "rx.internal.operators.OperatorSubscribeOn$1$1$1",
       "rx.functions.FuncN",
       "rx.internal.operators.OperatorSerialize$Holder",
       "rx.functions.Actions$7",
       "rx.internal.operators.OperatorOnBackpressureDrop$1",
       "rx.subscriptions.Subscriptions$1",
       "rx.functions.Actions$6",
       "rx.functions.Actions$9",
       "rx.internal.operators.BufferUntilSubscriber$State",
       "rx.functions.Actions$8",
       "rx.functions.Actions$3",
       "rx.internal.operators.OperatorOnExceptionResumeNextViaObservable$1",
       "rx.functions.Actions$2",
       "rx.functions.Actions$5",
       "rx.internal.util.unsafe.Pow2",
       "rx.functions.Actions$4",
       "rx.internal.operators.BlockingOperatorToIterator",
       "rx.internal.operators.OperatorOnBackpressureDrop$2",
       "rx.internal.operators.OperatorWindowWithSize$InexactSubscriber$1",
       "rx.internal.util.PaddedAtomicInteger",
       "rx.internal.operators.OperatorSerialize",
       "rx.internal.operators.OnSubscribeGroupJoin$ResultManager$LeftDurationObserver",
       "rx.internal.operators.OnSubscribeJoin$ResultSink",
       "rx.observables.AbstractOnSubscribe$SubscriptionState",
       "rx.Observable$ThrowObservable$1",
       "rx.internal.operators.OperatorGroupBy$GroupBySubscriber$1",
       "rx.internal.operators.OperatorMap$1",
       "rx.internal.util.unsafe.SpmcArrayQueueL2Pad",
       "rx.internal.operators.OperatorGroupBy$GroupBySubscriber$2",
       "rx.internal.operators.OperatorOnBackpressureBuffer",
       "rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber",
       "rx.internal.util.PaddedAtomicIntegerBase",
       "rx.internal.operators.OnSubscribeRefCount$3",
       "rx.internal.operators.OnSubscribeRefCount$2",
       "rx.plugins.RxJavaPlugins",
       "rx.internal.operators.OnSubscribeRefCount$1",
       "rx.observables.AbstractOnSubscribe$1",
       "rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver",
       "rx.schedulers.ImmediateScheduler$InnerImmediateScheduler",
       "rx.schedulers.SleepingAction",
       "rx.internal.operators.OperatorSequenceEqual$1",
       "rx.subjects.ReplaySubject$TimedOnAdd",
       "rx.schedulers.TestScheduler$InnerTestScheduler",
       "rx.internal.operators.OperatorObserveOn",
       "rx.internal.operators.OperatorSampleWithObservable",
       "rx.internal.operators.OperatorSequenceEqual$2",
       "rx.internal.util.ObjectPool",
       "rx.internal.util.IndexedRingBuffer",
       "rx.Observable$15$1",
       "rx.internal.operators.OperatorMerge$HolderNoDelay",
       "rx.observers.SerializedObserver$ErrorSentinel",
       "rx.internal.operators.OperatorBufferWithSize$2$1",
       "rx.internal.operators.OperatorUnsubscribeOn$2$1",
       "rx.internal.operators.OnSubscribeAmb$2",
       "rx.internal.operators.OnSubscribeAmb$1",
       "rx.internal.operators.OperatorMulticast",
       "rx.internal.operators.OperatorTakeWhile",
       "rx.exceptions.CompositeException$PrintStreamOrWriter",
       "rx.internal.operators.OperatorBufferWithStartEndObservable",
       "rx.functions.Functions$3",
       "rx.functions.Functions$2",
       "rx.functions.Functions$1",
       "rx.internal.operators.NotificationLite$1",
       "rx.internal.operators.BlockingOperatorToFuture$1",
       "rx.internal.operators.NotificationLite$2",
       "rx.internal.operators.BlockingOperatorToFuture$2",
       "rx.internal.operators.OperatorDebounceWithSelector$1",
       "rx.internal.operators.OperatorTimestamp",
       "rx.internal.operators.OperatorWindowWithTime$CountedSerializedSubject",
       "rx.internal.operators.OperatorToMultimap",
       "rx.schedulers.ExecutorScheduler$ExecutorSchedulerWorker",
       "rx.functions.Functions$7",
       "rx.internal.operators.OnSubscribeFromIterable",
       "rx.internal.operators.OperatorSkip",
       "rx.subjects.BehaviorSubject",
       "rx.subscriptions.Subscriptions$Unsubscribed",
       "rx.functions.Functions$6",
       "rx.functions.Functions$5",
       "rx.internal.util.BackpressureDrainManager$BackpressureQueueCallback",
       "rx.internal.util.unsafe.SpscArrayQueueL2Pad",
       "rx.functions.Functions$4",
       "rx.internal.operators.OperatorSkipTimed$1",
       "rx.functions.Functions$9",
       "rx.internal.util.ScalarSynchronousObservable$DirectScheduledEmission",
       "rx.functions.Functions$8",
       "rx.internal.operators.OperatorSkipTimed$2",
       "rx.internal.schedulers.ScheduledAction$Remover",
       "rx.internal.operators.OperatorDebounceWithSelector$1$1",
       "rx.internal.operators.OperatorOnErrorReturn$1$1",
       "rx.subjects.ReplaySubject$SizeEvictionPolicy",
       "rx.subjects.TestSubject",
       "rx.exceptions.Exceptions",
       "rx.subjects.PublishSubject$1",
       "rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1",
       "rx.internal.operators.OperatorSwitch$SwitchSubscriber$InnerSubscriber",
       "rx.functions.Function",
       "rx.internal.schedulers.EventLoopsScheduler",
       "rx.internal.operators.OperatorWindowWithTime$ExactSubscriber",
       "rx.internal.operators.OperatorToMap$DefaultToMapFactory",
       "rx.internal.operators.BlockingOperatorNext",
       "rx.internal.operators.OnSubscribeCombineLatest$SingleSourceRequestableSubscriber",
       "rx.internal.operators.OperatorGroupBy$GroupBySubscriber",
       "rx.observers.TestSubscriber$1",
       "rx.internal.operators.OperatorMapPair",
       "rx.annotations.Experimental",
       "rx.subjects.ReplaySubject$DefaultOnAdd",
       "rx.internal.util.SubscriptionRandomList",
       "rx.internal.operators.OperatorBufferWithSize$1$1",
       "rx.internal.util.unsafe.SpscArrayQueueL1Pad",
       "rx.Scheduler$Worker$1",
       "rx.internal.operators.OperatorBufferWithTime$InexactSubscriber",
       "rx.internal.operators.OnSubscribeToObservableFuture",
       "rx.Observable$ThrowObservable",
       "rx.internal.operators.OperatorTimestamp$1",
       "rx.Observable$NeverObservable",
       "rx.internal.operators.OnSubscribeMulticastSelector$1",
       "rx.internal.operators.OperatorWindowWithTime",
       "rx.internal.operators.OperatorPublish$3",
       "rx.internal.operators.OperatorPublish$2",
       "rx.internal.operators.OperatorPublish$1",
       "rx.internal.operators.OperatorSwitch",
       "rx.internal.operators.OperatorMergeMaxConcurrent$SourceSubscriber$MergeItemSubscriber",
       "rx.functions.Action",
       "rx.observables.AbstractOnSubscribe$SubscriptionProducer",
       "rx.internal.operators.OperatorWindowWithObservable$1",
       "rx.internal.operators.OperatorSingle$ParentSubscriber",
       "rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc",
       "rx.exceptions.OnErrorThrowable$OnNextValue",
       "rx.internal.util.unsafe.SpmcArrayQueueProducerIndexCacheField",
       "rx.internal.operators.OperatorWindowWithSize$CountedSubject",
       "rx.observers.Observers$1",
       "rx.internal.schedulers.ScheduledAction$FutureCompleter",
       "rx.observers.Observers$3",
       "rx.observers.Observers$2",
       "rx.observers.Observers$4",
       "rx.internal.util.unsafe.SpscArrayQueueL3Pad",
       "rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1",
       "rx.internal.operators.OperatorToObservableSortedList",
       "rx.internal.operators.OperatorSwitch$1",
       "rx.internal.operators.BlockingOperatorNext$NextIterator",
       "rx.internal.operators.OperatorDoOnEach$1",
       "rx.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1",
       "rx.internal.operators.OperatorOnErrorReturn$1",
       "rx.internal.schedulers.EventLoopsScheduler$FixedSchedulerPool",
       "rx.internal.operators.OnSubscribeDelaySubscription$1",
       "rx.Scheduler",
       "rx.internal.operators.OperatorTakeUntil",
       "rx.internal.operators.OperatorSkipLastTimed$1",
       "rx.internal.operators.OperatorOnErrorResumeNextViaFunction$1$1",
       "rx.Observable$29$1",
       "rx.internal.util.UtilityFunctions$AlwaysFalse",
       "rx.internal.util.unsafe.ConcurrentSequencedCircularArrayQueue",
       "rx.internal.operators.OperatorDebounceWithSelector",
       "rx.internal.operators.OperatorDoOnRequest",
       "rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber",
       "rx.internal.operators.OperatorTakeLastTimed$1",
       "rx.schedulers.CachedThreadScheduler",
       "rx.internal.operators.OperatorSingle",
       "rx.internal.operators.NotificationLite",
       "rx.internal.operators.OnSubscribeFromIterable$IterableProducer",
       "rx.internal.operators.OperatorThrottleFirst",
       "rx.subscriptions.BooleanSubscription",
       "rx.Observable$7",
       "rx.internal.operators.BlockingOperatorNext$1",
       "rx.internal.operators.OnSubscribeAmb$Selection",
       "rx.Observable$8",
       "rx.plugins.RxJavaObservableExecutionHookDefault",
       "rx.internal.operators.OperatorToObservableList$1",
       "rx.Observable$5",
       "rx.Observable$6",
       "rx.schedulers.TestScheduler$1",
       "rx.Observable$3",
       "rx.Observable$4",
       "rx.Observable$1",
       "rx.internal.operators.OperatorDebounceWithTime$DebounceState",
       "rx.Observable$2",
       "rx.Observable$16$1",
       "rx.internal.operators.OperatorTake$1",
       "rx.internal.operators.OperatorAny$1",
       "rx.internal.util.SynchronizedQueue",
       "rx.observables.ConnectableObservable$1",
       "rx.subjects.SubjectSubscriptionManager$State",
       "rx.subjects.ReplaySubject$5",
       "rx.internal.operators.OnSubscribeGroupJoin$ResultManager$RightObserver",
       "rx.subjects.ReplaySubject$4",
       "rx.subjects.ReplaySubject$3",
       "rx.subjects.ReplaySubject$2",
       "rx.subjects.ReplaySubject$1",
       "rx.internal.operators.OnSubscribeRedo$RedoFinite",
       "rx.internal.operators.OnSubscribeJoin$ResultSink$RightSubscriber",
       "rx.internal.util.unsafe.SpmcArrayQueueL3Pad",
       "rx.Subscriber",
       "rx.internal.operators.OperatorMulticast$1",
       "rx.internal.operators.OperatorMulticast$2",
       "rx.internal.operators.OperatorMulticast$3",
       "rx.internal.util.SubscriptionIndexedRingBuffer$1",
       "rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber",
       "rx.internal.operators.OperatorDoOnRequest$ParentSubscriber",
       "rx.internal.operators.OperatorElementAt$1",
       "rx.internal.operators.OperatorTakeTimed",
       "rx.internal.operators.OperatorTimeInterval",
       "rx.internal.operators.OperatorOnErrorFlatMap",
       "rx.subjects.SubjectSubscriptionManager$SubjectObserver",
       "rx.Observable$9",
       "rx.internal.operators.OnSubscribeGroupJoin$ResultManager",
       "rx.internal.operators.OnSubscribeRedo$RetryWithPredicate",
       "rx.schedulers.TestScheduler$InnerTestScheduler$2",
       "rx.internal.operators.OperatorDematerialize$2",
       "rx.internal.operators.OperatorDematerialize$1",
       "rx.schedulers.TestScheduler$InnerTestScheduler$1",
       "rx.schedulers.TrampolineScheduler$TimedAction",
       "rx.internal.operators.OnSubscribeRedo$5",
       "rx.internal.operators.OnSubscribeToObservableFuture$ToObservableFuture",
       "rx.internal.operators.OperatorReplay$1",
       "rx.internal.operators.OperatorSubscribeOn$1",
       "rx.internal.operators.OperatorReplay$2",
       "rx.plugins.RxJavaObservableExecutionHook",
       "rx.internal.util.IndexedRingBuffer$1",
       "rx.internal.operators.OnSubscribeRedo$3",
       "rx.internal.operators.OnSubscribeRedo$4",
       "rx.functions.Action9",
       "rx.internal.operators.OperatorTakeUntilPredicate",
       "rx.functions.Action5",
       "rx.functions.Action6",
       "rx.functions.Action7",
       "rx.internal.operators.OperatorSwitchIfEmpty$SwitchIfEmptySubscriber$2$1",
       "rx.internal.operators.OperatorTakeUntilPredicate$ParentSubscriber",
       "rx.functions.Action8",
       "rx.internal.operators.OperatorZip$Zip$InnerSubscriber",
       "rx.functions.Action1",
       "rx.functions.Action2",
       "rx.functions.Action3",
       "rx.functions.Action4",
       "rx.functions.ActionN",
       "rx.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler",
       "rx.schedulers.TrampolineScheduler$1",
       "rx.internal.operators.OnSubscribeJoin$ResultSink$LeftSubscriber$LeftDurationSubscriber",
       "rx.subjects.SubjectSubscriptionManager$1",
       "rx.schedulers.Schedulers",
       "rx.subjects.SerializedSubject$1",
       "rx.internal.operators.OperatorZipIterable",
       "rx.internal.operators.OperatorTakeWhile$1",
       "rx.internal.operators.OnSubscribeRedo$1",
       "rx.internal.operators.OperatorTakeWhile$2",
       "rx.internal.operators.OnSubscribeRedo$2",
       "rx.subjects.ReplaySubject$EvictionPolicy",
       "rx.internal.operators.OperatorTake",
       "rx.internal.operators.OperatorTakeUntil$1",
       "rx.internal.operators.OperatorTakeUntil$2",
       "rx.internal.operators.OperatorDebounceWithTime$1",
       "rx.internal.operators.OperatorZip$Zip",
       "rx.internal.operators.OperatorCast$1",
       "rx.subjects.Subject",
       "rx.internal.operators.OperatorTimeout",
       "rx.functions.Action0",
       "rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1",
       "rx.internal.operators.OperatorWindowWithObservable$SourceSubscriber",
       "rx.internal.operators.OperatorOnExceptionResumeNextViaObservable",
       "rx.internal.operators.OperatorOnErrorReturn",
       "rx.subscriptions.MultipleAssignmentSubscription",
       "rx.subjects.ReplaySubject$EmptyEvictionPolicy",
       "rx.exceptions.CompositeException$CompositeExceptionCausalChain",
       "rx.internal.operators.OperatorGroupBy$GroupBySubscriber$2$2",
       "rx.internal.operators.OperatorGroupBy$GroupBySubscriber$2$3",
       "rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1",
       "rx.schedulers.TestScheduler",
       "rx.internal.schedulers.EventLoopsScheduler$PoolWorker",
       "rx.functions.Actions",
       "rx.internal.util.UtilityFunctions$1",
       "rx.internal.util.RxRingBuffer$1",
       "rx.internal.operators.OperatorDelayWithSelector$2",
       "rx.internal.util.RxRingBuffer$2",
       "rx.internal.util.UtilityFunctions",
       "rx.internal.util.unsafe.ConcurrentCircularArrayQueueL0Pad",
       "rx.internal.operators.OperatorDelayWithSelector$1",
       "rx.internal.operators.OperatorOnErrorResumeNextViaFunction",
       "rx.internal.operators.OperatorTakeTimed$TakeSubscriber",
       "rx.internal.operators.OperatorSubscribeOn$1$1$1$1",
       "rx.internal.operators.OperatorOnErrorResumeNextViaObservable$1",
       "rx.internal.operators.OperatorSkip$1$1",
       "rx.internal.operators.OperatorDistinctUntilChanged",
       "rx.internal.operators.OperatorTimeoutBase",
       "rx.subjects.SerializedSubject",
       "rx.internal.schedulers.ScheduledAction$1",
       "rx.internal.operators.OperatorObserveOn$ScheduledUnsubscribe$1",
       "rx.internal.operators.OperatorDoOnEach",
       "rx.internal.operators.OperatorWindowWithSize$ExactSubscriber$1",
       "rx.internal.operators.OperatorPublish$OriginSubscriber",
       "rx.subjects.ReplaySubject$RemoveTimestamped",
       "rx.Observable$NeverObservable$1",
       "rx.Scheduler$Worker",
       "rx.internal.util.RxThreadFactory",
       "rx.internal.operators.BufferUntilSubscriber$OnSubscribeAction$1",
       "rx.internal.operators.OperatorBufferWithStartEndObservable$BufferingSubscriber$1",
       "rx.internal.operators.OperatorDelayWithSelector",
       "rx.internal.operators.OperatorMerge",
       "rx.internal.operators.OperatorMergeMaxConcurrent$MergeMaxConcurrentProducer",
       "rx.observables.AbstractOnSubscribe$LambdaOnSubscribe",
       "rx.internal.operators.OperatorSkipUntil$1",
       "rx.exceptions.CompositeException$1",
       "rx.internal.operators.OperatorSkipUntil$2",
       "rx.internal.operators.OperatorSkipWhile$2",
       "rx.internal.operators.OperatorSkipWhile$1",
       "rx.internal.operators.OperatorDebounceWithTime",
       "rx.schedulers.GenericScheduledExecutorService",
       "rx.internal.operators.OperatorSkipLast",
       "rx.internal.operators.OperatorBufferWithStartEndObservable$1",
       "rx.internal.operators.OperatorSwitchIfEmpty$SwitchIfEmptySubscriber$1",
       "rx.internal.operators.OperatorSwitchIfEmpty$SwitchIfEmptySubscriber$2",
       "rx.internal.operators.OperatorThrottleFirst$1",
       "rx.internal.operators.OperatorToMap",
       "rx.observers.TestSubscriber",
       "rx.internal.operators.OperatorConcat$ConcatSubscriber$1",
       "rx.internal.util.BackpressureDrainManager",
       "rx.internal.util.RxRingBuffer",
       "rx.internal.operators.OperatorTakeUntilPredicate$1",
       "rx.observables.AbstractOnSubscribe$SubscriptionCompleter",
       "rx.subscriptions.Subscriptions$FutureSubscription",
       "rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1",
       "rx.internal.operators.BufferUntilSubscriber$OnSubscribeAction",
       "rx.observers.SerializedObserver",
       "rx.schedulers.NewThreadScheduler",
       "rx.internal.operators.OperatorWithLatestFrom",
       "rx.internal.operators.OperatorOnErrorResumeNextViaObservable$1$1",
       "rx.internal.operators.BlockingOperatorLatest",
       "rx.subjects.TestSubject$1",
       "rx.subjects.TestSubject$2",
       "rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject",
       "rx.subjects.TestSubject$3",
       "rx.subjects.TestSubject$4",
       "rx.internal.operators.OperatorGroupBy$GroupBySubscriber$2$1",
       "rx.Subscription",
       "rx.internal.operators.OperatorMerge$MergeSubscriber$1",
       "rx.internal.operators.OperatorPublish$2$1",
       "rx.internal.operators.OperatorPublish$RequestHandler",
       "rx.internal.operators.OperatorPublish$2$2",
       "rx.internal.operators.OnSubscribeRedo$1$1",
       "rx.exceptions.CompositeException$WrappedPrintWriter",
       "rx.internal.operators.OperatorSampleWithTime$SamplerSubscriber",
       "rx.internal.operators.OperatorScan$2",
       "rx.internal.operators.OperatorScan$1",
       "rx.internal.operators.OperatorDoOnUnsubscribe",
       "rx.internal.operators.OperatorMerge$InnerSubscriber",
       "rx.internal.operators.OperatorWindowWithStartEndObservable",
       "rx.internal.operators.OperatorSkipLast$1",
       "rx.Producer",
       "rx.internal.operators.OperatorTimeout$2",
       "rx.internal.operators.OperatorWindowWithObservable",
       "rx.internal.operators.OperatorTimeout$1",
       "rx.internal.util.ScalarSynchronousObservable$ScalarSynchronousAction",
       "rx.internal.schedulers.ScheduledAction$Remover2",
       "rx.internal.operators.OperatorMapNotification$1",
       "rx.internal.schedulers.NewThreadWorker$1",
       "rx.internal.operators.OperatorMergeMaxConcurrent",
       "rx.internal.operators.OnSubscribeGroupJoin$ResultManager$LeftObserver",
       "rx.internal.operators.OperatorMaterialize",
       "rx.internal.operators.OperatorToObservableList$Holder",
       "rx.internal.operators.OperatorToObservableSortedList$1",
       "rx.internal.operators.OperatorSwitch$SwitchSubscriber$1",
       "rx.internal.operators.OnSubscribeRedo",
       "rx.internal.util.UtilityFunctions$AlwaysTrue",
       "rx.internal.operators.OnSubscribeAmb",
       "rx.internal.operators.OperatorBufferWithSize",
       "rx.internal.operators.OperatorSwitch$Holder",
       "rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$1",
       "rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$2",
       "rx.schedulers.CachedThreadScheduler$CachedWorkerPool$1",
       "rx.internal.operators.OperatorSingle$1",
       "rx.internal.util.unsafe.MessagePassingQueue",
       "rx.internal.operators.OperatorFilter$1",
       "rx.internal.util.UtilityFunctions$NullFunction",
       "rx.subjects.ReplaySubject$AddTimestamped",
       "rx.observers.TestObserver$1",
       "rx.internal.operators.OperatorRetryWithPredicate",
       "rx.subjects.AsyncSubject$1",
       "rx.internal.operators.OperatorDelay$1$1",
       "rx.internal.util.unsafe.SpmcArrayQueueMidPad",
       "rx.internal.operators.OnSubscribeUsing$DisposeAction",
       "rx.internal.operators.OperatorDelay$1$2",
       "rx.Observable$Transformer",
       "rx.internal.operators.OperatorTakeLastTimed",
       "rx.internal.operators.NotificationLite$OnErrorSentinel",
       "rx.internal.operators.OnSubscribeRedo$2$1",
       "rx.internal.operators.OperatorBufferWithStartEndObservable$BufferingSubscriber",
       "rx.internal.operators.OperatorConcat$1",
       "rx.internal.operators.OperatorSubscribeOn$1$1",
       "rx.internal.operators.OperatorAll",
       "rx.internal.operators.OnSubscribeRange$RangeProducer",
       "rx.internal.operators.OperatorSerialize$1",
       "rx.internal.operators.OperatorTake$1$1",
       "rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker",
       "rx.internal.operators.OperatorSequenceEqual",
       "rx.internal.operators.BlockingOperatorToIterator$2",
       "rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1",
       "rx.internal.operators.BlockingOperatorToIterator$1",
       "rx.internal.operators.OnSubscribeGroupJoin",
       "rx.Observable$30$1",
       "rx.internal.util.unsafe.SpscArrayQueueColdField",
       "rx.internal.operators.OperatorToMultimap$1",
       "rx.annotations.Beta",
       "rx.internal.util.unsafe.SpmcArrayQueue",
       "rx.internal.util.unsafe.SpscArrayQueue",
       "rx.internal.operators.OperatorMaterialize$Holder",
       "rx.Observable$29",
       "rx.schedulers.CachedThreadScheduler$EventLoopWorker",
       "rx.internal.util.ScalarSynchronousObservable",
       "rx.Observable$34",
       "rx.Observable$35",
       "rx.Observable$32",
       "rx.Observable$33",
       "rx.schedulers.CachedThreadScheduler$ThreadWorker",
       "rx.internal.operators.OnSubscribeCombineLatest$SingleSourceProducer",
       "rx.internal.operators.OperatorElementAt",
       "rx.internal.operators.OperatorSubscribeOn",
       "rx.internal.operators.OperatorUnsubscribeOn",
       "rx.Observable$30",
       "rx.Observable$31",
       "rx.internal.operators.OperatorBufferWithSingleObservable$1",
       "rx.internal.operators.OperatorBufferWithSingleObservable$2",
       "rx.internal.operators.OperatorTimeoutWithSelector$1$1",
       "rx.internal.operators.OnSubscribeRedo$3$1",
       "rx.subscriptions.RefCountSubscription$State",
       "rx.internal.operators.OperatorPublish$State",
       "rx.internal.operators.OperatorMap",
       "rx.internal.operators.OperatorTimeoutBase$1",
       "rx.internal.operators.OperatorToMultimap$DefaultToMultimapFactory",
       "rx.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler$1",
       "rx.internal.operators.OnSubscribeCombineLatest",
       "rx.internal.operators.OperatorAsObservable$Holder",
       "rx.internal.operators.OperatorDoOnRequest$1",
       "rx.internal.operators.BufferUntilSubscriber$1",
       "rx.internal.operators.OperatorAll$1",
       "rx.subjects.ReplaySubject",
       "rx.internal.operators.OnSubscribeFromIterable$1",
       "rx.internal.operators.OperatorMerge$MergeSubscriber",
       "rx.schedulers.ExecutorScheduler",
       "rx.internal.operators.OperatorCast",
       "rx.schedulers.ImmediateScheduler",
       "rx.internal.operators.OperatorMergeMaxConcurrent$SourceSubscriber",
       "rx.internal.operators.OperatorSubscribeOn$1$1$1$1$1",
       "rx.internal.operators.OperatorGroupBy$GroupBySubscriber$GroupState",
       "rx.internal.operators.OperatorOnBackpressureBlock",
       "rx.subscriptions.RefCountSubscription$InnerSubscription",
       "rx.internal.operators.OperatorDelayWithSelector$2$1",
       "rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1",
       "rx.internal.schedulers.ScheduledAction",
       "rx.subjects.AsyncSubject",
       "rx.internal.operators.BlockingOperatorMostRecent",
       "rx.internal.operators.OperatorPublish$1$1",
       "rx.internal.operators.OperatorTimeoutWithSelector$2$1",
       "rx.internal.operators.OperatorToMap$1",
       "rx.internal.operators.OnSubscribeJoin$ResultSink$LeftSubscriber",
       "rx.internal.operators.OperatorSampleWithTime",
       "rx.internal.operators.OnSubscribeRedo$4$1",
       "rx.internal.operators.OperatorDistinctUntilChanged$1",
       "rx.functions.Actions$11",
       "rx.functions.Actions$10",
       "rx.internal.operators.OperatorSwitchIfEmpty$SwitchIfEmptySubscriber",
       "rx.internal.util.unsafe.MpmcArrayQueue",
       "rx.functions.Functions",
       "rx.internal.util.SynchronizedSubscription",
       "rx.internal.operators.OperatorDistinct",
       "rx.internal.operators.OperatorToObservableSortedList$DefaultComparableFunction",
       "rx.internal.operators.BackpressureUtils",
       "rx.plugins.RxJavaPlugins$1",
       "rx.internal.operators.OperatorScan$2$1",
       "rx.internal.operators.OnSubscribeMulticastSelector",
       "rx.internal.operators.OperatorTimeoutWithSelector$2",
       "rx.internal.operators.OperatorSkipWhile",
       "rx.internal.operators.OnSubscribeAmb$AmbSubscriber",
       "rx.internal.operators.OperatorBufferWithTime$ExactSubscriber$1",
       "rx.internal.operators.OperatorTimeoutWithSelector$1",
       "rx.internal.util.unsafe.SpmcArrayQueueProducerField",
       "rx.internal.operators.OperatorSampleWithObservable$2",
       "rx.internal.operators.OperatorSampleWithObservable$1",
       "rx.observables.ConnectableObservable",
       "rx.internal.operators.OperatorTimeout$1$1",
       "rx.subscriptions.RefCountSubscription",
       "rx.internal.operators.OperatorFinally",
       "rx.internal.operators.OperatorPublish",
       "rx.schedulers.ImmediateScheduler$1",
       "rx.internal.util.ScalarSynchronousObservable$NormalScheduledEmission",
       "rx.internal.util.unsafe.ConcurrentCircularArrayQueue",
       "rx.subscriptions.MultipleAssignmentSubscription$State",
       "rx.internal.operators.OperatorConcat$ConcatSubscriber",
       "rx.internal.operators.BufferUntilSubscriber",
       "rx.internal.util.PlatformDependent$1",
       "rx.internal.util.SubscriptionList",
       "rx.subjects.PublishSubject",
       "rx.internal.operators.OperatorMapPair$2",
       "rx.internal.operators.OperatorUnsubscribeOn$1",
       "rx.internal.operators.OperatorWindowWithTime$InexactSubscriber",
       "rx.internal.operators.OperatorUnsubscribeOn$2",
       "rx.internal.operators.OperatorGroupBy$1",
       "rx.internal.operators.OperatorDematerialize",
       "rx.Observable$18",
       "rx.Observable$19",
       "rx.internal.operators.OnSubscribeJoin",
       "rx.internal.operators.OperatorOnExceptionResumeNextViaObservable$1$1",
       "rx.subscriptions.Subscriptions",
       "rx.Notification",
       "rx.Observable",
       "rx.internal.operators.OperatorMapPair$1",
       "rx.Observable$23",
       "rx.Observable$24",
       "rx.internal.operators.OperatorSkip$1",
       "rx.Observable$21",
       "rx.Observable$22",
       "rx.Observable$27",
       "rx.Observable$28",
       "rx.Observable$25",
       "rx.Observable$26",
       "rx.internal.operators.OperatorAsObservable",
       "rx.subjects.ReplaySubject$BoundedState",
       "rx.internal.operators.OnSubscribeGroupJoin$ResultManager$RightDurationObserver",
       "rx.Observable$20",
       "rx.subjects.BehaviorSubject$1",
       "rx.observers.Subscribers",
       "rx.Notification$Kind",
       "rx.internal.operators.OperatorOnErrorResumeNextViaObservable",
       "rx.internal.operators.OnSubscribeCombineLatest$MultiSourceRequestableSubscriber",
       "rx.Observable$12",
       "rx.Observable$13",
       "rx.Observable$10",
       "rx.internal.operators.OperatorTimeout$2$1",
       "rx.Observable$11",
       "rx.Observable$16",
       "rx.Observable$17",
       "rx.Observable$14",
       "rx.internal.util.unsafe.SpscArrayQueueConsumerField",
       "rx.Observable$15",
       "rx.internal.operators.OperatorMapPair$2$1",
       "rx.schedulers.TrampolineScheduler",
       "rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector",
       "rx.internal.operators.OperatorOnBackpressureDrop$Holder",
       "rx.internal.operators.OperatorOnBackpressureBuffer$BufferSubscriber",
       "rx.observables.BlockingObservable",
       "rx.internal.operators.OperatorAsObservable$1",
       "rx.internal.operators.OperatorAny",
       "rx.internal.operators.OperatorOnBackpressureBlock$BlockingSubscriber",
       "rx.internal.operators.OperatorConcat$ConcatInnerSubscriber"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.slf4j:slf4j-api:jar:1.7.0:test",
      "coordinates": "org.slf4j:slf4j-api:1.7.0",
      "groupId": "org.slf4j",
      "artifactId": "slf4j-api",
      "version": "1.7.0",
      "scope": "test",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "com.netflix.hystrix:hystrix-core:jar:1.4.5:test",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     }
    ]
   },
   {
    "id": "net.spy:spymemcached:jar:2.12.0:compile",
    "coordinates": "net.spy:spymemcached:2.12.0",
    "groupId": "net.spy",
    "artifactId": "spymemcached",
    "version": "2.12.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 472171,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "net.spy.memcached.protocol.ascii.ConcatenationOperationImpl",
     "net.spy.memcached.auth.AuthThreadMonitor",
     "net.spy.memcached.protocol.binary.SASLAuthOperationImpl",
     "net.spy.memcached.ops.TimedOutOperationStatus",
     "net.spy.memcached.ops.OperationState",
     "net.spy.memcached.protocol.binary.ConcatenationOperationImpl",
     "net.spy.memcached.ops.VBucketAware",
     "net.spy.memcached.CacheMap",
     "net.spy.memcached.tapmessage.ResponseMessage",
     "net.spy.memcached.ops.StoreType",
     "net.spy.memcached.protocol.BaseOperationImpl",
     "net.spy.memcached.auth.AuthDescriptor",
     "net.spy.memcached.ops.MutatorOperation",
     "net.spy.memcached.protocol.binary.SASLStepOperationImpl",
     "net.spy.memcached.ConnectionFactoryBuilder$Locator",
     "net.spy.memcached.protocol.ascii.StoreOperationImpl",
     "net.spy.memcached.internal.AbstractListenableFuture$1",
     "net.spy.memcached.protocol.binary.SASLMechsOperationImpl",
     "net.spy.memcached.ops.OperationException",
     "net.spy.memcached.util.CacheLoader",
     "net.spy.memcached.ops.OperationErrorType",
     "net.spy.memcached.internal.OperationFuture",
     "net.spy.memcached.ops.BaseOperationFactory",
     "net.spy.memcached.compat.SpyObject",
     "net.spy.memcached.protocol.binary.MultiKeyOperationImpl",
     "net.spy.memcached.protocol.ProxyCallback",
     "net.spy.memcached.protocol.ascii.BaseGetOpImpl",
     "net.spy.memcached.protocol.binary.GetlOperationImpl",
     "net.spy.memcached.protocol.ascii.TouchOperationImpl",
     "net.spy.memcached.protocol.binary.TapDumpOperationImpl",
     "net.spy.memcached.DefaultConnectionFactory$1",
     "net.spy.memcached.OperationTimeoutException",
     "net.spy.memcached.ops.UnlockOperation",
     "net.spy.memcached.CASResponse",
     "net.spy.memcached.util.DefaultKetamaNodeLocatorConfiguration",
     "net.spy.memcached.ops.SASLAuthOperation",
     "net.spy.memcached.compat.log.SunLogger$1",
     "net.spy.memcached.NodeLocator",
     "net.spy.memcached.ops.GetOperation$Callback",
     "net.spy.memcached.protocol.binary.StatsOperationImpl",
     "net.spy.memcached.protocol.ascii.OptimizedGetImpl",
     "net.spy.memcached.HashAlgorithmRegistry",
     "net.spy.memcached.ops.FlushOperation",
     "net.spy.memcached.ops.ObserveOperation",
     "net.spy.memcached.protocol.ascii.GetAndTouchOperationImpl",
     "net.spy.memcached.compat.SpyThread",
     "net.spy.memcached.ops.MultiReplicaGetOperationCallback",
     "net.spy.memcached.tapmessage.TapRequestFlag",
     "net.spy.memcached.protocol.binary.TapCustomOperationImpl",
     "net.spy.memcached.internal.BulkFuture",
     "net.spy.memcached.internal.GenericCompletionListener",
     "net.spy.memcached.ops.ReplicaGetOperation",
     "net.spy.memcached.protocol.binary.OptimizedSetImpl$1",
     "net.spy.memcached.KetamaNodeKeyFormatter$Format",
     "net.spy.memcached.TapClient$1$1",
     "net.spy.memcached.protocol.ascii.AsciiMemcachedNodeImpl",
     "net.spy.memcached.ops.GetAndTouchOperation",
     "net.spy.memcached.protocol.binary.FlushOperationImpl",
     "net.spy.memcached.KetamaNodeKeyFormatter$1",
     "net.spy.memcached.compat.log.Logger",
     "net.spy.memcached.KetamaIterator",
     "net.spy.memcached.CASMutation",
     "net.spy.memcached.compat.log.SLF4JLogger$1",
     "net.spy.memcached.ConnectionFactory",
     "net.spy.memcached.auth.PlainCallbackHandler",
     "net.spy.memcached.protocol.ascii.OperationImpl",
     "net.spy.memcached.protocol.binary.OptimizedGetImpl",
     "net.spy.memcached.ops.StatsOperation",
     "net.spy.memcached.ArrayModNodeLocator",
     "net.spy.memcached.DefaultHashAlgorithm$1",
     "net.spy.memcached.MemcachedConnection$1",
     "net.spy.memcached.ops.GetAndTouchOperation$Callback",
     "net.spy.memcached.protocol.binary.MutatorOperationImpl",
     "net.spy.memcached.internal.AbstractListenableFuture",
     "net.spy.memcached.util.CacheLoader$StorageListener",
     "net.spy.memcached.ops.GetlOperation$Callback",
     "net.spy.memcached.protocol.ascii.DeleteOperationImpl",
     "net.spy.memcached.internal.OperationCompletionListener",
     "net.spy.memcached.internal.SingleElementInfiniteIterator",
     "net.spy.memcached.KetamaNodeKeyFormatter",
     "net.spy.memcached.ops.NoopOperation",
     "net.spy.memcached.PersistTo",
     "net.spy.memcached.BaseCacheMap",
     "net.spy.memcached.TapClient$2$1",
     "net.spy.memcached.protocol.ascii.GetlOperationImpl",
     "net.spy.memcached.internal.CheckedOperationTimeoutException",
     "net.spy.memcached.metrics.MetricCollector",
     "net.spy.memcached.ops.KeyedOperation",
     "net.spy.memcached.util.KetamaNodeLocatorConfiguration",
     "net.spy.memcached.HashAlgorithm",
     "net.spy.memcached.tapmessage.MessageBuilder",
     "net.spy.memcached.TapClient",
     "net.spy.memcached.KetamaConnectionFactory",
     "net.spy.memcached.TapConnectionProvider$1$1",
     "net.spy.memcached.compat.log.DefaultLogger",
     "net.spy.memcached.protocol.binary.NoopOperationImpl",
     "net.spy.memcached.protocol.binary.StoreOperationImpl$1",
     "net.spy.memcached.transcoders.IntegerTranscoder",
     "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
     "net.spy.memcached.ArrayModNodeLocator$NodeIterator",
     "net.spy.memcached.ops.LinkedOperationQueueFactory",
     "net.spy.memcached.ops.OperationQueueFactory",
     "net.spy.memcached.ops.ArrayOperationQueueFactory",
     "net.spy.memcached.protocol.ascii.UnlockOperationImpl",
     "net.spy.memcached.protocol.TCPMemcachedNodeImpl",
     "net.spy.memcached.protocol.binary.OptimizedSetImpl",
     "net.spy.memcached.ConnectionObserver",
     "net.spy.memcached.protocol.binary.MultiGetOperationImpl",
     "net.spy.memcached.transcoders.TranscodeService$Task",
     "net.spy.memcached.internal.GetCompletionListener",
     "net.spy.memcached.protocol.binary.GetsOperationImpl",
     "net.spy.memcached.util.StringUtils",
     "net.spy.memcached.AddrUtil",
     "net.spy.memcached.tapmessage.TapOpcode",
     "net.spy.memcached.KetamaNodeLocator",
     "net.spy.memcached.MemcachedClient$9$1",
     "net.spy.memcached.protocol.binary.SASLBaseOperationImpl",
     "net.spy.memcached.MemcachedClient$14$1",
     "net.spy.memcached.spring.MemcachedClientFactoryBean",
     "net.spy.memcached.protocol.ascii.CASOperationImpl",
     "net.spy.memcached.protocol.binary.ConcatenationOperationImpl$1",
     "net.spy.memcached.transcoders.TranscodeService$1",
     "net.spy.memcached.ops.ReplicaGetOperation$Callback",
     "net.spy.memcached.metrics.AbstractMetricCollector",
     "net.spy.memcached.protocol.binary.ObserveOperationImpl",
     "net.spy.memcached.ops.OperationCallback",
     "net.spy.memcached.ops.ReplicaGetsOperation$Callback",
     "net.spy.memcached.tapmessage.BaseMessage",
     "net.spy.memcached.ops.ConcatenationOperation",
     "net.spy.memcached.ops.VersionOperation",
     "net.spy.memcached.TapConnectionProvider",
     "net.spy.memcached.compat.SyncThread",
     "net.spy.memcached.ops.StatusCode",
     "net.spy.memcached.compat.log.Level",
     "net.spy.memcached.protocol.binary.BinaryOperationFactory",
     "net.spy.memcached.ops.CancelledOperationStatus",
     "net.spy.memcached.ops.TouchOperation",
     "net.spy.memcached.ops.Mutator",
     "net.spy.memcached.tapmessage.TapResponseFlag",
     "net.spy.memcached.ops.GetsOperation$Callback",
     "net.spy.memcached.DefaultConnectionFactory",
     "net.spy.memcached.MemcachedClient$12",
     "net.spy.memcached.transcoders.TranscoderUtils",
     "net.spy.memcached.MemcachedClient$11",
     "net.spy.memcached.MemcachedClient$14",
     "net.spy.memcached.MemcachedClient$13",
     "net.spy.memcached.protocol.binary.TouchOperationImpl",
     "net.spy.memcached.protocol.binary.TapBackfillOperationImpl",
     "net.spy.memcached.MemcachedClient$10",
     "net.spy.memcached.internal.BasicThreadFactory",
     "net.spy.memcached.MemcachedClient",
     "net.spy.memcached.tapmessage.TapAck",
     "net.spy.memcached.MemcachedClient$17$1",
     "net.spy.memcached.transcoders.TranscodeService",
     "net.spy.memcached.protocol.ascii.VersionOperationImpl",
     "net.spy.memcached.CASValue",
     "net.spy.memcached.compat.log.LoggerFactory",
     "net.spy.memcached.MemcachedConnection",
     "net.spy.memcached.transcoders.WhalinV1Transcoder",
     "net.spy.memcached.MemcachedNode",
     "net.spy.memcached.protocol.binary.OperationImpl",
     "net.spy.memcached.protocol.binary.GetOperationImpl",
     "net.spy.memcached.ConnectionFactoryBuilder$1",
     "net.spy.memcached.auth.AuthThread",
     "net.spy.memcached.protocol.ascii.StatsOperationImpl",
     "net.spy.memcached.ConnectionFactoryBuilder$2",
     "net.spy.memcached.ops.DeleteOperation$Callback",
     "net.spy.memcached.protocol.binary.SingleKeyOperationImpl",
     "net.spy.memcached.internal.BulkGetFuture",
     "net.spy.memcached.protocol.BaseOperationImpl$1",
     "net.spy.memcached.protocol.ascii.GetsOperationImpl",
     "net.spy.memcached.protocol.binary.KeyStatsOperationImpl",
     "net.spy.memcached.ops.MultiGetsOperationCallback",
     "net.spy.memcached.MemcachedClient$3",
     "net.spy.memcached.ops.MultiGetOperationCallback",
     "net.spy.memcached.BroadcastOpFactory",
     "net.spy.memcached.MemcachedClient$2",
     "net.spy.memcached.MemcachedClient$1",
     "net.spy.memcached.MemcachedClient$7",
     "net.spy.memcached.MemcachedClient$6",
     "net.spy.memcached.MemcachedClient$5",
     "net.spy.memcached.tapmessage.RequestMessage",
     "net.spy.memcached.MemcachedClient$4",
     "net.spy.memcached.ops.ReplicaGetsOperation",
     "net.spy.memcached.MemcachedClient$9",
     "net.spy.memcached.MemcachedClient$8",
     "net.spy.memcached.ops.SASLMechsOperation",
     "net.spy.memcached.ops.StoreOperation",
     "net.spy.memcached.BinaryConnectionFactory",
     "net.spy.memcached.CachedData",
     "net.spy.memcached.protocol.binary.DeleteOperationImpl",
     "net.spy.memcached.internal.ImmediateFuture",
     "net.spy.memcached.MemcachedClient$16$1",
     "net.spy.memcached.compat.log.Log4JLogger$1",
     "net.spy.memcached.protocol.binary.StoreOperationImpl",
     "net.spy.memcached.tapmessage.TapMagic",
     "net.spy.memcached.TapConnectionProvider$1",
     "net.spy.memcached.protocol.ascii.AsciiOperationFactory",
     "net.spy.memcached.ops.StatsOperation$Callback",
     "net.spy.memcached.protocol.ascii.MutatorOperationImpl",
     "net.spy.memcached.transcoders.SerializingTranscoder",
     "net.spy.memcached.internal.GetFuture",
     "net.spy.memcached.compat.CloseUtil",
     "net.spy.memcached.protocol.binary.ReplicaGetOperationImpl",
     "net.spy.memcached.ops.GetsOperation",
     "net.spy.memcached.ops.TapOperation",
     "net.spy.memcached.ops.CASOperationStatus",
     "net.spy.memcached.ReplicateTo",
     "net.spy.memcached.protocol.binary.TapOperationImpl",
     "net.spy.memcached.CASMutator",
     "net.spy.memcached.protocol.binary.GetAndTouchOperationImpl",
     "net.spy.memcached.protocol.binary.VersionOperationImpl",
     "net.spy.memcached.ops.GetOperation",
     "net.spy.memcached.compat.log.AbstractLogger",
     "net.spy.memcached.protocol.ascii.GetOperationImpl",
     "net.spy.memcached.ops.OperationStatus",
     "net.spy.memcached.protocol.binary.TapAckOperationImpl",
     "net.spy.memcached.metrics.NoopMetricCollector",
     "net.spy.memcached.protocol.ascii.BaseStoreOperationImpl",
     "net.spy.memcached.protocol.binary.UnlockOperationImpl",
     "net.spy.memcached.compat.log.SLF4JLogger",
     "net.spy.memcached.ops.Operation",
     "net.spy.memcached.internal.ListenableFuture",
     "net.spy.memcached.internal.BulkGetCompletionListener",
     "net.spy.memcached.protocol.GetCallbackWrapper",
     "net.spy.memcached.transcoders.LongTranscoder",
     "net.spy.memcached.protocol.ascii.FlushOperationImpl",
     "net.spy.memcached.auth.AuthThread$2",
     "net.spy.memcached.protocol.binary.BinaryMemcachedNodeImpl",
     "net.spy.memcached.auth.AuthThread$1",
     "net.spy.memcached.ops.ConcatenationType",
     "net.spy.memcached.ops.CASOperation",
     "net.spy.memcached.util.CacheLoader$1",
     "net.spy.memcached.BuildInfo",
     "net.spy.memcached.ObserveResponse",
     "net.spy.memcached.ops.StoreOperation$Callback",
     "net.spy.memcached.protocol.ascii.OperationReadType",
     "net.spy.memcached.ConnectionFactoryBuilder",
     "net.spy.memcached.tapmessage.TapStream",
     "net.spy.memcached.transcoders.BaseSerializingTranscoder",
     "net.spy.memcached.ops.TapOperation$Callback",
     "net.spy.memcached.protocol.binary.OptimizedSetImpl$NoopCallback",
     "net.spy.memcached.metrics.DefaultMetricCollector",
     "net.spy.memcached.KeyUtil",
     "net.spy.memcached.metrics.MetricType",
     "net.spy.memcached.ops.MultiOperationCallback",
     "net.spy.memcached.transcoders.Transcoder",
     "net.spy.memcached.compat.log.Log4JLogger",
     "net.spy.memcached.DefaultHashAlgorithm",
     "net.spy.memcached.protocol.binary.ReplicaGetsOperationImpl",
     "net.spy.memcached.MemcachedClient$16",
     "net.spy.memcached.ops.DeleteOperation",
     "net.spy.memcached.MemcachedClient$15",
     "net.spy.memcached.compat.log.SunLogger",
     "net.spy.memcached.tapmessage.Util",
     "net.spy.memcached.MemcachedClientIF",
     "net.spy.memcached.MemcachedClient$17",
     "net.spy.memcached.MemcachedClient$10$1",
     "net.spy.memcached.ops.GetlOperation",
     "net.spy.memcached.MemcachedNodeROImpl",
     "net.spy.memcached.ops.ObserveOperation$Callback",
     "net.spy.memcached.TapClient$1",
     "net.spy.memcached.OperationFactory",
     "net.spy.memcached.TapClient$2",
     "net.spy.memcached.ops.SASLStepOperation",
     "net.spy.memcached.FailureMode",
     "net.spy.memcached.transcoders.WhalinTranscoder"
    ],
    "usedTypes": [
     "net.spy.memcached.ConnectionFactory",
     "net.spy.memcached.NodeLocator",
     "net.spy.memcached.ArrayModNodeLocator",
     "net.spy.memcached.ConnectionFactoryBuilder$Protocol",
     "net.spy.memcached.ConnectionFactoryBuilder",
     "net.spy.memcached.ops.OperationQueueFactory",
     "net.spy.memcached.auth.AuthDescriptor",
     "net.spy.memcached.DefaultConnectionFactory",
     "net.spy.memcached.transcoders.TranscoderUtils",
     "net.spy.memcached.ConnectionFactoryBuilder$Locator",
     "net.spy.memcached.metrics.MetricType",
     "net.spy.memcached.ConnectionObserver",
     "net.spy.memcached.transcoders.Transcoder",
     "net.spy.memcached.DefaultHashAlgorithm",
     "net.spy.memcached.MemcachedClient",
     "net.spy.memcached.CachedData",
     "net.spy.memcached.MemcachedClientIF",
     "net.spy.memcached.compat.SpyObject",
     "net.spy.memcached.ops.Operation",
     "net.spy.memcached.KetamaNodeLocator",
     "net.spy.memcached.metrics.MetricCollector",
     "net.spy.memcached.internal.CheckedOperationTimeoutException",
     "net.spy.memcached.OperationTimeoutException",
     "net.spy.memcached.OperationFactory",
     "net.spy.memcached.FailureMode",
     "net.spy.memcached.HashAlgorithm",
     "net.spy.memcached.MemcachedConnection",
     "net.spy.memcached.compat.CloseUtil",
     "net.spy.memcached.MemcachedNode"
    ],
    "usageRatio": 0.10861423220973783,
    "children": []
   },
   {
    "id": "com.twitter:jsr166e:jar:1.1.0:compile",
    "coordinates": "com.twitter:jsr166e:1.1.0",
    "groupId": "com.twitter",
    "artifactId": "jsr166e",
    "version": "1.1.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 62226,
    "type": "direct",
    "status": "bloated",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "com.twitter.jsr166e.LongAdder",
     "com.twitter.jsr166e.ForkJoinTask",
     "com.twitter.jsr166e.ForkJoinTask$ExceptionNode",
     "com.twitter.jsr166e.Striped64$ThreadHashCode",
     "com.twitter.jsr166e.Striped64$HashCode",
     "com.twitter.jsr166e.ForkJoinPool$Submitter",
     "com.twitter.jsr166e.Striped64$1",
     "com.twitter.jsr166e.ForkJoinTask$RunnableExecuteAction",
     "com.twitter.jsr166e.ForkJoinPool$WorkQueue",
     "com.twitter.jsr166e.CountedCompleter$1",
     "com.twitter.jsr166e.CountedCompleter",
     "com.twitter.jsr166e.ForkJoinTask$AdaptedRunnableAction",
     "com.twitter.jsr166e.ThreadLocalRandom",
     "com.twitter.jsr166e.ForkJoinPool$ForkJoinWorkerThreadFactory",
     "com.twitter.jsr166e.ForkJoinTask$AdaptedRunnable",
     "com.twitter.jsr166e.Striped64",
     "com.twitter.jsr166e.ForkJoinPool$DefaultForkJoinWorkerThreadFactory",
     "com.twitter.jsr166e.ForkJoinPool",
     "com.twitter.jsr166e.ForkJoinWorkerThread",
     "com.twitter.jsr166e.ThreadLocalRandom$1",
     "com.twitter.jsr166e.ForkJoinTask$1",
     "com.twitter.jsr166e.ForkJoinTask$AdaptedCallable",
     "com.twitter.jsr166e.ForkJoinPool$EmptyTask",
     "com.twitter.jsr166e.ForkJoinPool$2",
     "com.twitter.jsr166e.ForkJoinPool$1",
     "com.twitter.jsr166e.ForkJoinPool$ManagedBlocker",
     "com.twitter.jsr166e.Striped64$Cell"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "org.slf4j:slf4j-api:jar:1.7.10:compile",
    "coordinates": "org.slf4j:slf4j-api:1.7.10",
    "groupId": "org.slf4j",
    "artifactId": "slf4j-api",
    "version": "1.7.10",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 32119,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "org.slf4j.LoggerFactory",
     "org.slf4j.helpers.SubstituteLogger",
     "org.slf4j.MarkerFactory",
     "org.slf4j.spi.MarkerFactoryBinder",
     "org.slf4j.spi.MDCAdapter",
     "org.slf4j.spi.LocationAwareLogger",
     "org.slf4j.MDC$MDCCloseable",
     "org.slf4j.helpers.Util",
     "org.slf4j.helpers.BasicMarkerFactory",
     "org.slf4j.helpers.Util$1",
     "org.slf4j.helpers.NOPLoggerFactory",
     "org.slf4j.IMarkerFactory",
     "org.slf4j.helpers.MessageFormatter",
     "org.slf4j.helpers.BasicMDCAdapter",
     "org.slf4j.Logger",
     "org.slf4j.spi.LoggerFactoryBinder",
     "org.slf4j.helpers.FormattingTuple",
     "org.slf4j.helpers.SubstituteLoggerFactory",
     "org.slf4j.helpers.NOPMDCAdapter",
     "org.slf4j.helpers.NOPLogger",
     "org.slf4j.Marker",
     "org.slf4j.MDC",
     "org.slf4j.MDC$1",
     "org.slf4j.helpers.MarkerIgnoringBase",
     "org.slf4j.helpers.BasicMarker",
     "org.slf4j.helpers.NamedLoggerBase",
     "org.slf4j.helpers.Util$ClassContextSecurityManager",
     "org.slf4j.ILoggerFactory"
    ],
    "usedTypes": [
     "org.slf4j.Logger",
     "org.slf4j.LoggerFactory"
    ],
    "usageRatio": 0.07142857142857142,
    "children": []
   },
   {
    "id": "net.jpountz.lz4:lz4:jar:1.3.0:compile",
    "coordinates": "net.jpountz.lz4:lz4:1.3.0",
    "groupId": "net.jpountz.lz4",
    "artifactId": "lz4",
    "version": "1.3.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 236880,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "net.jpountz.lz4.LZ4HCJavaSafeCompressor$HashTable",
     "net.jpountz.lz4.LZ4Compressor",
     "net.jpountz.util.Native",
     "net.jpountz.lz4.LZ4UnknownSizeDecompressor",
     "net.jpountz.lz4.LZ4JavaSafeSafeDecompressor",
     "net.jpountz.xxhash.StreamingXXHash64$Factory",
     "net.jpountz.lz4.LZ4BlockOutputStream",
     "net.jpountz.xxhash.StreamingXXHash32$Factory",
     "net.jpountz.lz4.LZ4JavaUnsafeSafeDecompressor",
     "net.jpountz.xxhash.XXHashConstants",
     "net.jpountz.lz4.LZ4JNISafeDecompressor",
     "net.jpountz.xxhash.XXHash32JavaSafe",
     "net.jpountz.lz4.LZ4Utils$Match",
     "net.jpountz.xxhash.XXHash64JNI",
     "net.jpountz.util.Utils",
     "net.jpountz.xxhash.StreamingXXHash64JavaSafe$Factory",
     "net.jpountz.xxhash.StreamingXXHash64JNI$Factory",
     "net.jpountz.xxhash.XXHash32JavaUnsafe",
     "net.jpountz.xxhash.StreamingXXHash32$1",
     "net.jpountz.xxhash.XXHash64JavaSafe",
     "net.jpountz.lz4.LZ4JavaUnsafeCompressor",
     "net.jpountz.lz4.LZ4Utils",
     "net.jpountz.xxhash.XXHash64JavaUnsafe",
     "net.jpountz.xxhash.StreamingXXHash64",
     "net.jpountz.xxhash.StreamingXXHash64JavaUnsafe",
     "net.jpountz.xxhash.StreamingXXHash32JavaUnsafe",
     "net.jpountz.lz4.LZ4HCJavaUnsafeCompressor$HashTable",
     "net.jpountz.lz4.LZ4Constants",
     "net.jpountz.lz4.LZ4HCJavaSafeCompressor",
     "net.jpountz.xxhash.XXHash32JNI",
     "net.jpountz.xxhash.StreamingXXHash32JNI",
     "net.jpountz.xxhash.StreamingXXHash64JNI",
     "net.jpountz.xxhash.StreamingXXHash32JavaUnsafe$Factory",
     "net.jpountz.xxhash.StreamingXXHash64$1",
     "net.jpountz.lz4.LZ4SafeUtils$Match",
     "net.jpountz.xxhash.AbstractStreamingXXHash64Java",
     "net.jpountz.xxhash.StreamingXXHash32",
     "net.jpountz.xxhash.StreamingXXHash32JavaSafe$Factory",
     "net.jpountz.util.Native$OS",
     "net.jpountz.lz4.LZ4HCJavaUnsafeCompressor",
     "net.jpountz.lz4.LZ4Factory",
     "net.jpountz.lz4.LZ4SafeUtils",
     "net.jpountz.lz4.LZ4ByteBufferUtils$Match",
     "net.jpountz.xxhash.XXHash32",
     "net.jpountz.lz4.LZ4BlockInputStream",
     "net.jpountz.lz4.LZ4JavaUnsafeFastDecompressor",
     "net.jpountz.lz4.LZ4JavaSafeFastDecompressor",
     "net.jpountz.lz4.LZ4UnsafeUtils",
     "net.jpountz.util.SafeUtils",
     "net.jpountz.lz4.LZ4ByteBufferUtils",
     "net.jpountz.lz4.LZ4Exception",
     "net.jpountz.xxhash.StreamingXXHash64JavaUnsafe$Factory",
     "net.jpountz.lz4.LZ4Decompressor",
     "net.jpountz.xxhash.StreamingXXHash64JavaSafe",
     "net.jpountz.xxhash.XXHashJNI",
     "net.jpountz.xxhash.StreamingXXHash32JavaSafe",
     "net.jpountz.lz4.LZ4JavaSafeCompressor",
     "net.jpountz.lz4.LZ4JNICompressor",
     "net.jpountz.lz4.LZ4JNI",
     "net.jpountz.xxhash.XXHashFactory",
     "net.jpountz.lz4.LZ4SafeDecompressor",
     "net.jpountz.xxhash.StreamingXXHash32JNI$Factory",
     "net.jpountz.xxhash.AbstractStreamingXXHash32Java",
     "net.jpountz.util.ByteBufferUtils",
     "net.jpountz.lz4.LZ4FastDecompressor",
     "net.jpountz.xxhash.XXHash64",
     "net.jpountz.lz4.LZ4JNIFastDecompressor",
     "net.jpountz.lz4.LZ4HCJNICompressor",
     "net.jpountz.util.UnsafeUtils"
    ],
    "usedTypes": [
     "net.jpountz.xxhash.XXHashFactory",
     "net.jpountz.xxhash.XXHash32",
     "net.jpountz.xxhash.XXHash64"
    ],
    "usageRatio": 0.043478260869565216,
    "children": []
   },
   {
    "id": "org.xerial.snappy:snappy-java:jar:1.1.1.7:compile",
    "coordinates": "org.xerial.snappy:snappy-java:1.1.1.7",
    "groupId": "org.xerial.snappy",
    "artifactId": "snappy-java",
    "version": "1.1.1.7",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 594033,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "org.xerial.snappy.PureJavaCrc32C",
     "org.xerial.snappy.buffer.DefaultBufferAllocator$1",
     "org.xerial.snappy.SnappyBundleActivator",
     "org.xerial.snappy.Snappy",
     "org.xerial.snappy.SnappyInputStream",
     "org.xerial.snappy.SnappyOutputStream",
     "org.xerial.snappy.buffer.CachedBufferAllocator",
     "org.xerial.snappy.SnappyError",
     "org.xerial.snappy.SnappyFramedInputStream$FrameMetaData",
     "org.xerial.snappy.SnappyFramedInputStream",
     "org.xerial.snappy.buffer.CachedBufferAllocator$1",
     "org.xerial.snappy.SnappyLoader",
     "org.xerial.snappy.SnappyFramedInputStream$FrameAction",
     "org.xerial.snappy.buffer.BufferAllocator",
     "org.xerial.snappy.buffer.DefaultBufferAllocator",
     "org.xerial.snappy.SnappyCodec",
     "org.xerial.snappy.SnappyErrorCode",
     "org.xerial.snappy.buffer.BufferAllocatorFactory",
     "org.xerial.snappy.OSInfo",
     "org.xerial.snappy.SnappyIOException",
     "org.xerial.snappy.SnappyFramed",
     "org.xerial.snappy.SnappyNative",
     "org.xerial.snappy.SnappyFramedInputStream$FrameData",
     "org.xerial.snappy.SnappyException",
     "org.xerial.snappy.SnappyFramedOutputStream"
    ],
    "usedTypes": [
     "org.xerial.snappy.Snappy"
    ],
    "usageRatio": 0.04,
    "children": []
   },
   {
    "id": "org.iq80.snappy:snappy:jar:0.3:compile",
    "coordinates": "org.iq80.snappy:snappy:0.3",
    "groupId": "org.iq80.snappy",
    "artifactId": "snappy",
    "version": "0.3",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 48764,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "org.iq80.snappy.BufferRecycler",
     "org.iq80.snappy.SlowMemory",
     "org.iq80.snappy.HadoopSnappyCodec",
     "org.iq80.snappy.SnappyOutputStream",
     "org.iq80.snappy.Crc32C",
     "org.iq80.snappy.Snappy",
     "org.iq80.snappy.HadoopSnappyCodec$SnappyCompressionInputStream",
     "org.iq80.snappy.SnappyCompressor",
     "org.iq80.snappy.SnappyDecompressor",
     "org.iq80.snappy.CorruptionException",
     "org.iq80.snappy.SnappyInputStream",
     "org.iq80.snappy.Memory",
     "org.iq80.snappy.UnsafeMemory",
     "org.iq80.snappy.HadoopSnappyCodec$SnappyCompressionOutputStream",
     "org.iq80.snappy.Main",
     "org.iq80.snappy.SnappyInternalUtils"
    ],
    "usedTypes": [
     "org.iq80.snappy.Snappy"
    ],
    "usageRatio": 0.0625,
    "children": []
   },
   {
    "id": "de.ruedigermoeller:fst:jar:1.63:compile",
    "coordinates": "de.ruedigermoeller:fst:1.63",
    "groupId": "de.ruedigermoeller",
    "artifactId": "fst",
    "version": "1.63",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 249852,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "de.ruedigermoeller.serialization.FSTConfiguration",
     "de.ruedigermoeller.serialization.util.FSTObject2IntMap",
     "de.ruedigermoeller.serialization.annotations.Predict",
     "de.ruedigermoeller.serialization.serializers.FSTCollectionSerializer",
     "de.ruedigermoeller.serialization.dson.DsonStringCharInput",
     "de.ruedigermoeller.serialization.FSTObjectInputNoShared",
     "de.ruedigermoeller.serialization.util.FSTOrderedConcurrentJobExecutor$OrderedRunnable",
     "de.ruedigermoeller.heapoff.FSTOffheapQueue$ConcurrentWriteContext",
     "de.ruedigermoeller.serialization.FSTObjectInput$ConditionalCallback",
     "de.ruedigermoeller.serialization.serializers.FSTBigNumberSerializers$FSTByteSerializer",
     "de.ruedigermoeller.serialization.FSTSerializerRegistry",
     "de.ruedigermoeller.serialization.annotations.OneOf",
     "de.ruedigermoeller.heapoff.structs.unsafeimpl.FSTStructFactory$ForwardEntry",
     "de.ruedigermoeller.serialization.annotations.Flat",
     "de.ruedigermoeller.serialization.dson.DsonDeserializer$Sel",
     "de.ruedigermoeller.serialization.serializers.FSTMapSerializer",
     "de.ruedigermoeller.heapoff.structs.structtypes.StructArray$StructArrIterator",
     "de.ruedigermoeller.serialization.annotations.EqualnessIsBinary",
     "de.ruedigermoeller.heapoff.FSTOffheapQueue",
     "de.ruedigermoeller.serialization.FSTObjectInput$2",
     "de.ruedigermoeller.heapoff.structs.unsafeimpl.FSTStructGeneration",
     "de.ruedigermoeller.heapoff.structs.structtypes.StructString",
     "de.ruedigermoeller.heapoff.structs.unsafeimpl.FSTStructFactory",
     "de.ruedigermoeller.serialization.FSTObjectInput$1",
     "de.ruedigermoeller.serialization.dson.generators.DartDsonGen",
     "de.ruedigermoeller.serialization.FSTClazzInfo$2",
     "de.ruedigermoeller.serialization.FSTClazzInfo$1",
     "de.ruedigermoeller.heapoff.FSTOffHeapMap",
     "de.ruedigermoeller.serialization.annotations.Thin",
     "de.ruedigermoeller.serialization.FSTObjectInput",
     "de.ruedigermoeller.serialization.annotations.Serialize",
     "de.ruedigermoeller.serialization.serializers.FSTDateSerializer",
     "de.ruedigermoeller.heapoff.bytez.Bytez",
     "de.ruedigermoeller.heapoff.structs.Align",
     "de.ruedigermoeller.serialization.FSTObjectOutput",
     "de.ruedigermoeller.heapoff.structs.Templated",
     "de.ruedigermoeller.serialization.FSTObjectInput$MyObjectStream",
     "de.ruedigermoeller.serialization.dson.DsonDeserializer$Sub",
     "de.ruedigermoeller.heapoff.bytez.BytezAllocator",
     "de.ruedigermoeller.heapoff.structs.FSTArrayElementSizeCalculator",
     "de.ruedigermoeller.serialization.dson.DsonDeserializer",
     "de.ruedigermoeller.serialization.dson.DsonParseException",
     "de.ruedigermoeller.heapoff.structs.structtypes.StructInt",
     "de.ruedigermoeller.serialization.FSTObjectSerializer",
     "de.ruedigermoeller.heapoff.structs.structtypes.StructArray",
     "de.ruedigermoeller.heapoff.FSTByteBufferOffheap$2",
     "de.ruedigermoeller.serialization.serializers.FSTBigNumberSerializers$FSTFloatSerializer",
     "de.ruedigermoeller.heapoff.FSTByteBufferOffheap$1",
     "de.ruedigermoeller.heapoff.FSTByteBufferOffheap$OffHeapIterator",
     "de.ruedigermoeller.serialization.serializers.FSTBigNumberSerializers$FSTDoubleSerializer",
     "de.ruedigermoeller.heapoff.structs.unsafeimpl.FSTStructFactory$3",
     "de.ruedigermoeller.heapoff.structs.unsafeimpl.FSTStructFactory$4",
     "de.ruedigermoeller.heapoff.structs.unsafeimpl.FSTStructFactory$1",
     "de.ruedigermoeller.heapoff.structs.unsafeimpl.FSTStructFactory$2",
     "de.ruedigermoeller.serialization.annotations.Conditional",
     "de.ruedigermoeller.serialization.serializers.FSTStringBuilderSerializer",
     "de.ruedigermoeller.heapoff.structs.FSTEmbeddedBinary",
     "de.ruedigermoeller.heapoff.structs.FSTStructAllocator",
     "de.ruedigermoeller.heapoff.structs.FSTStruct",
     "de.ruedigermoeller.serialization.dson.Dson",
     "de.ruedigermoeller.serialization.FSTObjectCopy",
     "de.ruedigermoeller.serialization.FSTSerializerRegistry$NULLSerializer",
     "de.ruedigermoeller.serialization.FSTClazzInfo$FSTFieldInfo",
     "de.ruedigermoeller.serialization.util.FSTUtil",
     "de.ruedigermoeller.heapoff.bytez.malloc.MallocBytezAllocator",
     "de.ruedigermoeller.serialization.dson.DsonTypeMapper",
     "de.ruedigermoeller.heapoff.FST2ByteCompressed",
     "de.ruedigermoeller.heapoff.FSTByteBufferOffheap$ByteBufferEntry",
     "de.ruedigermoeller.serialization.serializers.FSTStringSerializer",
     "de.ruedigermoeller.serialization.FSTSerializerRegistry$SerEntry",
     "de.ruedigermoeller.heapoff.FSTOffHeapMap$FSTOffHeapMapEntrySet",
     "de.ruedigermoeller.serialization.dson.DsonSerializer",
     "de.ruedigermoeller.serialization.annotations.Transient",
     "de.ruedigermoeller.serialization.FSTObjectOutput$1",
     "de.ruedigermoeller.heapoff.FSTCompressed",
     "de.ruedigermoeller.heapoff.structs.FSTTypedStructAllocator",
     "de.ruedigermoeller.heapoff.structs.unsafeimpl.FSTByteArrayUnsafeStructGeneration",
     "de.ruedigermoeller.serialization.serializers.FSTClassSerializer",
     "de.ruedigermoeller.heapoff.FSTOffheapQueue$ConcurrentReadContext",
     "de.ruedigermoeller.heapoff.bytez.onheap.HeapBytezAllocator",
     "de.ruedigermoeller.serialization.dson.DsonCharInput",
     "de.ruedigermoeller.serialization.FSTObjectOutputNoShared",
     "de.ruedigermoeller.serialization.FSTSerializerRegistryDelegate",
     "de.ruedigermoeller.serialization.FSTObjectInput$CallbackEntry",
     "de.ruedigermoeller.heapoff.FSTByteBufferOffheap$GetObjectBufferResult",
     "de.ruedigermoeller.serialization.util.FSTMap",
     "de.ruedigermoeller.serialization.FSTConfiguration$1",
     "de.ruedigermoeller.serialization.FSTConfiguration$2",
     "de.ruedigermoeller.serialization.FSTClazzInfo$FSTCompatibilityInfo",
     "de.ruedigermoeller.serialization.FSTObjectOutput$1$1",
     "de.ruedigermoeller.serialization.FSTClazzInfo",
     "de.ruedigermoeller.serialization.FSTConfiguration$3",
     "de.ruedigermoeller.serialization.dson.DsonPSCharOut",
     "de.ruedigermoeller.heapoff.FSTOffHeapMap$1",
     "de.ruedigermoeller.serialization.FSTConfiguration$4",
     "de.ruedigermoeller.serialization.annotations.Compress",
     "de.ruedigermoeller.serialization.serializers.FSTEnumSetSerializer",
     "de.ruedigermoeller.heapoff.structs.structtypes.StructMap",
     "de.ruedigermoeller.serialization.dson.DsonCharOutput",
     "de.ruedigermoeller.serialization.serializers.FSTBigNumberSerializers$FSTCharSerializer",
     "de.ruedigermoeller.heapoff.bytez.onheap.HeapBytez",
     "de.ruedigermoeller.serialization.util.FSTIdentity2IdMap",
     "de.ruedigermoeller.serialization.FSTObjectInput$2$1",
     "de.ruedigermoeller.serialization.dson.DsonStringOutput",
     "de.ruedigermoeller.heapoff.FSTOffheapQueue$2",
     "de.ruedigermoeller.heapoff.FSTOffheapQueue$3",
     "de.ruedigermoeller.heapoff.structs.FSTStructChange",
     "de.ruedigermoeller.heapoff.FSTOffheapQueue$1",
     "de.ruedigermoeller.heapoff.FSTOffheapQueue$ByteBufferResult",
     "de.ruedigermoeller.heapoff.FSTByteBufferOffheap$MyFSTInput",
     "de.ruedigermoeller.serialization.util.FSTOrderedConcurrentJobExecutor",
     "de.ruedigermoeller.serialization.util.FSTOutputStream",
     "de.ruedigermoeller.serialization.annotations.EqualnessIsIdentity",
     "de.ruedigermoeller.serialization.serializers.FSTArrayListSerializer",
     "de.ruedigermoeller.heapoff.FSTByteBufferOffheap",
     "de.ruedigermoeller.serialization.util.FSTInputStream",
     "de.ruedigermoeller.serialization.serializers.FSTStringBufferSerializer",
     "de.ruedigermoeller.serialization.util.FSTInt2ObjectMap",
     "de.ruedigermoeller.heapoff.FSTCompressor",
     "de.ruedigermoeller.serialization.serializers.FSTBigNumberSerializers",
     "de.ruedigermoeller.serialization.util.FSTInt2IntMap",
     "de.ruedigermoeller.serialization.FSTBasicObjectSerializer",
     "de.ruedigermoeller.heapoff.FSTOffHeapMap$FSTOffHeapMapEntrySet$1$1",
     "de.ruedigermoeller.heapoff.FSTByteBufferOffheap$OffHeapAccess",
     "de.ruedigermoeller.serialization.serializers.FSTStructSerializer",
     "de.ruedigermoeller.heapoff.structs.NoAssist",
     "de.ruedigermoeller.heapoff.bytez.malloc.MallocBytez",
     "de.ruedigermoeller.serialization.FSTObjectRegistry",
     "de.ruedigermoeller.serialization.util.FSTOrderedConcurrentJobExecutor$1",
     "de.ruedigermoeller.serialization.FSTClazzInfoRegistry",
     "de.ruedigermoeller.serialization.util.FSTOrderedConcurrentJobExecutor$2",
     "de.ruedigermoeller.serialization.FSTClazzNameRegistry",
     "de.ruedigermoeller.serialization.FSTSerialisationListener",
     "de.ruedigermoeller.heapoff.FSTOffHeapMap$FSTOffHeapMapEntrySet$1",
     "de.ruedigermoeller.serialization.util.FSTOrderedConcurrentJobExecutor$FSTRunnable",
     "de.ruedigermoeller.serialization.serializers.FSTBigNumberSerializers$FSTShortSerializer",
     "de.ruedigermoeller.serialization.dson.DsonDeserializer$UD"
    ],
    "usedTypes": [
     "de.ruedigermoeller.serialization.FSTConfiguration",
     "de.ruedigermoeller.serialization.FSTObjectInput",
     "de.ruedigermoeller.serialization.FSTObjectOutput"
    ],
    "usageRatio": 0.021897810218978103,
    "children": [
     {
      "id": "org.javassist:javassist:jar:3.18.1-GA:compile",
      "coordinates": "org.javassist:javassist:3.18.1-GA",
      "groupId": "org.javassist",
      "artifactId": "javassist",
      "version": "3.18.1-GA",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 714194,
      "type": "transitive",
      "status": "bloated",
      "parent": "de.ruedigermoeller:fst:jar:1.63:compile",
      "allTypes": [
       "javassist.bytecode.CodeIterator$Pointers",
       "javassist.tools.reflect.Reflection",
       "javassist.bytecode.DuplicateMemberException",
       "javassist.bytecode.StackMap$Shifter",
       "javassist.expr.Cast$ProceedForCast",
       "javassist.convert.TransformBefore",
       "javassist.bytecode.BootstrapMethodsAttribute",
       "javassist.tools.reflect.CannotInvokeException",
       "javassist.bytecode.Utf8Info",
       "javassist.util.proxy.ProxyObjectInputStream",
       "javassist.bytecode.annotation.BooleanMemberValue",
       "javassist.CodeConverter",
       "javassist.Modifier",
       "javassist.compiler.ast.DoubleConst",
       "javassist.ClassMap",
       "javassist.bytecode.CodeIterator$Jump16",
       "javassist.bytecode.StackMap",
       "javassist.util.proxy.SecurityActions",
       "javassist.CtField$PtreeInitializer",
       "javassist.bytecode.analysis.SubroutineScanner",
       "javassist.bytecode.analysis.ControlFlow$Block",
       "javassist.bytecode.stackmap.BasicBlock$Mark",
       "javassist.bytecode.StackMap$InsertLocal",
       "javassist.bytecode.StackMapTable$RuntimeCopyException",
       "javassist.bytecode.ParameterAnnotationsAttribute",
       "javassist.bytecode.annotation.MemberValue",
       "javassist.bytecode.ByteArray",
       "javassist.CtNewMethod",
       "javassist.CtField$CodeInitializer",
       "javassist.bytecode.annotation.ArrayMemberValue",
       "javassist.util.proxy.SerializedProxy$1",
       "javassist.compiler.SyntaxError",
       "javassist.compiler.ast.InstanceOfExpr",
       "javassist.compiler.KeywordTable",
       "javassist.bytecode.StackMapTable$OffsetShifter",
       "javassist.bytecode.CodeIterator$AlignmentException",
       "javassist.bytecode.CodeIterator$Jump32",
       "javassist.compiler.ast.ASTree",
       "javassist.bytecode.analysis.IntQueue$Entry",
       "javassist.bytecode.analysis.Executor",
       "javassist.tools.web.BadHttpRequest",
       "javassist.bytecode.analysis.MultiArrayType",
       "javassist.bytecode.stackmap.BasicBlock$JsrBytecode",
       "javassist.bytecode.StackMap$Writer",
       "javassist.Translator",
       "javassist.CtNewWrappedConstructor",
       "javassist.bytecode.CodeIterator$Lookup",
       "javassist.CodeConverter$DefaultArrayAccessReplacementMethodNames",
       "javassist.expr.NewArray",
       "javassist.compiler.ast.FieldDecl",
       "javassist.scopedpool.ScopedClassPoolFactory",
       "javassist.CtField$Initializer",
       "javassist.bytecode.SignatureAttribute$MethodSignature",
       "javassist.bytecode.InnerClassesAttribute",
       "javassist.bytecode.stackmap.TypeData",
       "javassist.bytecode.ClassInfo",
       "javassist.bytecode.stackmap.Tracer",
       "javassist.util.HotSwapper$1",
       "javassist.NotFoundException",
       "javassist.bytecode.analysis.ControlFlow$Catcher",
       "javassist.CtClassType",
       "javassist.bytecode.annotation.FloatMemberValue",
       "javassist.compiler.MemberCodeGen$JsrHook2",
       "javassist.bytecode.stackmap.TypeData$AbsTypeVar",
       "javassist.bytecode.CodeIterator$Gap",
       "javassist.bytecode.FloatInfo",
       "javassist.CodeConverter$ArrayAccessReplacementMethodNames",
       "javassist.CtBehavior",
       "javassist.bytecode.annotation.ClassMemberValue",
       "javassist.bytecode.Descriptor$Iterator",
       "javassist.bytecode.LocalVariableTypeAttribute",
       "javassist.CtMethod$StringConstParameter",
       "javassist.CtPrimitiveType",
       "javassist.bytecode.analysis.Frame",
       "javassist.util.proxy.ProxyFactory$2",
       "javassist.compiler.MemberResolver",
       "javassist.util.proxy.ProxyFactory$3",
       "javassist.bytecode.CodeAttribute$LdcEntry",
       "javassist.bytecode.LocalVariableAttribute",
       "javassist.tools.reflect.Compiler",
       "javassist.bytecode.analysis.MultiType",
       "javassist.util.proxy.ProxyFactory$1",
       "javassist.CtNewWrappedMethod",
       "javassist.bytecode.stackmap.MapMaker",
       "javassist.CtField$FloatInitializer",
       "javassist.CtField$MethodInitializer",
       "javassist.bytecode.StackMap$SwitchShifter",
       "javassist.bytecode.SignatureAttribute$ClassSignature",
       "javassist.bytecode.Mnemonic",
       "javassist.bytecode.analysis.ControlFlow$Access",
       "javassist.bytecode.DeprecatedAttribute",
       "javassist.compiler.ast.Variable",
       "javassist.bytecode.analysis.Analyzer$ExceptionInfo",
       "javassist.expr.Cast",
       "javassist.bytecode.Descriptor",
       "javassist.bytecode.AccessFlag",
       "javassist.bytecode.StackMap$Printer",
       "javassist.bytecode.SignatureAttribute$TypeArgument",
       "javassist.bytecode.annotation.NoSuchClassError",
       "javassist.expr.MethodCall",
       "javassist.bytecode.annotation.Annotation",
       "javassist.bytecode.stackmap.TypeData$UninitData",
       "javassist.compiler.JvstTypeChecker",
       "javassist.bytecode.ByteStream",
       "javassist.ClassPool$1",
       "javassist.bytecode.MemberrefInfo",
       "javassist.util.proxy.ProxyFactory$Find2MethodsArgs",
       "javassist.compiler.TypeChecker",
       "javassist.compiler.ast.BinExpr",
       "javassist.bytecode.LineNumberAttribute$Pc",
       "javassist.bytecode.SignatureAttribute$ObjectType",
       "javassist.bytecode.stackmap.TypeData$ClassName",
       "javassist.bytecode.annotation.LongMemberValue",
       "javassist.bytecode.LongInfo",
       "javassist.bytecode.analysis.ControlFlow$1",
       "javassist.bytecode.analysis.ControlFlow$2",
       "javassist.bytecode.analysis.ControlFlow$3",
       "javassist.CtClass$DelayedFileOutputStream",
       "javassist.compiler.ast.Stmnt",
       "javassist.SerialVersionUID",
       "javassist.CtMethod$LongConstParameter",
       "javassist.expr.ConstructorCall",
       "javassist.runtime.Inner",
       "javassist.tools.reflect.CompiledClass",
       "javassist.CtNewConstructor",
       "javassist.bytecode.ClassFileWriter$ConstPoolWriter",
       "javassist.LoaderClassPath",
       "javassist.convert.TransformReadField",
       "javassist.bytecode.StackMapTable$SwitchShifter",
       "javassist.bytecode.ExceptionsAttribute",
       "javassist.compiler.ast.AssignExpr",
       "javassist.tools.rmi.ExportedObject",
       "javassist.bytecode.annotation.AnnotationsWriter",
       "javassist.compiler.ast.Keyword",
       "javassist.bytecode.annotation.StringMemberValue",
       "javassist.compiler.ast.ArrayInit",
       "javassist.bytecode.Descriptor$PrettyPrinter",
       "javassist.bytecode.StackMapTable$Writer",
       "javassist.CtMethod",
       "javassist.compiler.ast.StringL",
       "javassist.util.proxy.ProxyObjectOutputStream",
       "javassist.compiler.ast.Pair",
       "javassist.tools.reflect.Sample",
       "javassist.bytecode.ClassFileWriter$MethodWriter",
       "javassist.tools.rmi.ObjectNotFoundException",
       "javassist.bytecode.analysis.Type",
       "javassist.bytecode.CodeIterator$Branch",
       "javassist.convert.TransformWriteField",
       "javassist.compiler.MemberResolver$Method",
       "javassist.compiler.ast.CallExpr",
       "javassist.bytecode.StackMapTable$Printer",
       "javassist.bytecode.ExceptionTable",
       "javassist.util.proxy.FactoryHelper",
       "javassist.Loader",
       "javassist.bytecode.InvokeDynamicInfo",
       "javassist.convert.TransformAccessArrayField",
       "javassist.runtime.Desc",
       "javassist.CtField$MultiArrayInitializer",
       "javassist.bytecode.StackMapTable$SimpleCopy",
       "javassist.compiler.ast.NewExpr",
       "javassist.bytecode.MethodHandleInfo",
       "javassist.expr.NewExpr",
       "javassist.bytecode.IntegerInfo",
       "javassist.bytecode.stackmap.TypeData$TypeVar",
       "javassist.expr.NewArray$ProceedForArray",
       "javassist.CtField$ArrayInitializer",
       "javassist.bytecode.analysis.IntQueue$1",
       "javassist.compiler.TokenId",
       "javassist.compiler.Token",
       "javassist.bytecode.analysis.FramePrinter",
       "javassist.CtField$LongInitializer",
       "javassist.tools.web.Webserver",
       "javassist.JarDirClassPath",
       "javassist.CtField$NewInitializer",
       "javassist.bytecode.CodeIterator",
       "javassist.bytecode.ExceptionTableEntry",
       "javassist.tools.rmi.ObjectImporter",
       "javassist.bytecode.ClassFile",
       "javassist.bytecode.AnnotationsAttribute$Copier",
       "javassist.compiler.Javac",
       "javassist.expr.ExprEditor$LoopContext",
       "javassist.tools.reflect.ClassMetaobject",
       "javassist.bytecode.CodeAttribute$RuntimeCopyException",
       "javassist.FieldInitLink",
       "javassist.bytecode.StackMapTable$NewRemover",
       "javassist.tools.rmi.StubGenerator",
       "javassist.bytecode.AttributeInfo",
       "javassist.bytecode.StackMap$SimpleCopy",
       "javassist.bytecode.annotation.IntegerMemberValue",
       "javassist.expr.Instanceof",
       "javassist.bytecode.LineNumberAttribute",
       "javassist.scopedpool.SoftValueHashMap$SoftValueRef",
       "javassist.expr.FieldAccess$ProceedForWrite",
       "javassist.scopedpool.ScopedClassPoolRepository",
       "javassist.CtField$CodeInitializer0",
       "javassist.runtime.DotClass",
       "javassist.bytecode.stackmap.TypedBlock",
       "javassist.CtClass",
       "javassist.bytecode.SignatureAttribute$Type",
       "javassist.compiler.Lex",
       "javassist.bytecode.CodeIterator$LdcW",
       "javassist.tools.reflect.CannotCreateException",
       "javassist.bytecode.SignatureAttribute$BaseType",
       "javassist.tools.reflect.Loader",
       "javassist.bytecode.stackmap.TypeTag",
       "javassist.bytecode.stackmap.TypeData$UninitThis",
       "javassist.compiler.CompileError",
       "javassist.compiler.MemberCodeGen$JsrHook",
       "javassist.bytecode.StringInfo",
       "javassist.bytecode.NameAndTypeInfo",
       "javassist.bytecode.CodeIterator$If16",
       "javassist.bytecode.SignatureAttribute",
       "javassist.CtMethod$IntConstParameter",
       "javassist.bytecode.Opcode",
       "javassist.ClassPathList",
       "javassist.tools.web.ServiceThread",
       "javassist.ClassPoolTail",
       "javassist.bytecode.annotation.ShortMemberValue",
       "javassist.expr.NewExpr$ProceedForNew",
       "javassist.bytecode.SyntheticAttribute",
       "javassist.compiler.NoFieldException",
       "javassist.bytecode.stackmap.BasicBlock$Catch",
       "javassist.bytecode.AnnotationsAttribute$Renamer",
       "javassist.bytecode.CodeIterator$Switcher",
       "javassist.bytecode.EnclosingMethodAttribute",
       "javassist.CtField$IntInitializer",
       "javassist.bytecode.stackmap.TypeData$ArrayType",
       "javassist.bytecode.StackMapTable$Copier",
       "javassist.bytecode.analysis.Analyzer$1",
       "javassist.bytecode.StackMap$NewRemover",
       "javassist.convert.TransformFieldAccess",
       "javassist.util.proxy.SerializedProxy",
       "javassist.bytecode.DoubleInfo",
       "javassist.bytecode.InstructionPrinter",
       "javassist.util.proxy.RuntimeSupport$DefaultMethodHandler",
       "javassist.bytecode.LongVector",
       "javassist.util.proxy.SecurityActions$6",
       "javassist.bytecode.annotation.Annotation$Pair",
       "javassist.util.proxy.SecurityActions$5",
       "javassist.bytecode.StackMapTable$Walker",
       "javassist.tools.reflect.Metalevel",
       "javassist.bytecode.ClassFileWriter$AttributeWriter",
       "javassist.scopedpool.ScopedClassPoolFactoryImpl",
       "javassist.util.proxy.SecurityActions$2",
       "javassist.util.proxy.SecurityActions$1",
       "javassist.util.proxy.SecurityActions$4",
       "javassist.util.proxy.SecurityActions$3",
       "javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod",
       "javassist.bytecode.MethodrefInfo",
       "javassist.compiler.ast.CondExpr",
       "javassist.bytecode.stackmap.TypeData$BasicType",
       "javassist.bytecode.StackMapTable$Shifter",
       "javassist.tools.rmi.RemoteRef",
       "javassist.expr.Instanceof$ProceedForInstanceof",
       "javassist.tools.rmi.Sample",
       "javassist.bytecode.StackMapTable$InsertLocal",
       "javassist.bytecode.Bytecode",
       "javassist.CtField$DoubleInitializer",
       "javassist.CtNewClass",
       "javassist.util.proxy.Proxy",
       "javassist.compiler.ast.MethodDecl",
       "javassist.convert.TransformCall",
       "javassist.bytecode.CodeAnalyzer",
       "javassist.compiler.ast.CastExpr",
       "javassist.bytecode.SignatureAttribute$TypeVariable",
       "javassist.bytecode.annotation.AnnotationImpl",
       "javassist.bytecode.ConstInfo",
       "javassist.CtConstructor",
       "javassist.scopedpool.SoftValueHashMap",
       "javassist.tools.rmi.AppletServer",
       "javassist.tools.reflect.Metaobject",
       "javassist.util.proxy.MethodFilter",
       "javassist.ClassPath",
       "javassist.bytecode.InterfaceMethodrefInfo",
       "javassist.CtField",
       "javassist.bytecode.analysis.Subroutine",
       "javassist.expr.Handler",
       "javassist.bytecode.stackmap.TypeData$ArrayElement",
       "javassist.compiler.ast.Member",
       "javassist.ClassPool",
       "javassist.compiler.ast.Symbol",
       "javassist.compiler.Javac$CtFieldWithInit",
       "javassist.JarDirClassPath$1",
       "javassist.bytecode.CodeIterator$Table",
       "javassist.compiler.ProceedHandler",
       "javassist.tools.reflect.CannotReflectException",
       "javassist.scopedpool.ScopedClassPoolRepositoryImpl",
       "javassist.CtField$ParamInitializer",
       "javassist.ByteArrayClassPath",
       "javassist.bytecode.SourceFileAttribute",
       "javassist.CannotCompileException",
       "javassist.tools.Dump",
       "javassist.compiler.MemberCodeGen",
       "javassist.DirClassPath",
       "javassist.compiler.ast.Expr",
       "javassist.expr.ExprEditor$NewOp",
       "javassist.bytecode.analysis.Util",
       "javassist.bytecode.AnnotationsAttribute",
       "javassist.bytecode.ClassFilePrinter",
       "javassist.bytecode.stackmap.BasicBlock",
       "javassist.bytecode.SignatureAttribute$ClassType",
       "javassist.runtime.Cflow",
       "javassist.util.proxy.ProxyFactory",
       "javassist.convert.TransformNew",
       "javassist.bytecode.SignatureAttribute$ArrayType",
       "javassist.bytecode.ConstPool",
       "javassist.bytecode.analysis.Analyzer",
       "javassist.bytecode.stackmap.TypeData$UninitTypeVar",
       "javassist.util.proxy.ProxyFactory$UniqueName",
       "javassist.tools.framedump",
       "javassist.CtClass$1",
       "javassist.bytecode.AnnotationsAttribute$Parser",
       "javassist.util.proxy.RuntimeSupport",
       "javassist.bytecode.SignatureAttribute$TypeParameter",
       "javassist.bytecode.CodeAttribute",
       "javassist.bytecode.FieldInfo",
       "javassist.CtArray",
       "javassist.bytecode.annotation.AnnotationMemberValue",
       "javassist.bytecode.stackmap.BasicBlock$Maker",
       "javassist.compiler.CodeGen$1",
       "javassist.bytecode.ConstantAttribute",
       "javassist.expr.Expr",
       "javassist.compiler.CodeGen$ReturnHook",
       "javassist.compiler.Javac$3",
       "javassist.bytecode.AnnotationsAttribute$Walker",
       "javassist.compiler.Javac$2",
       "javassist.bytecode.analysis.ControlFlow",
       "javassist.compiler.Javac$1",
       "javassist.scopedpool.ScopedClassPool",
       "javassist.bytecode.StackMap$Walker",
       "javassist.bytecode.SignatureAttribute$1",
       "javassist.bytecode.analysis.IntQueue",
       "javassist.bytecode.AnnotationDefaultAttribute",
       "javassist.bytecode.SignatureAttribute$NestedClassType",
       "javassist.tools.rmi.RemoteException",
       "javassist.bytecode.ClassFileWriter$FieldWriter",
       "javassist.CtMember",
       "javassist.CtMember$Cache",
       "javassist.bytecode.StackMap$Copier",
       "javassist.bytecode.analysis.ControlFlow$Node",
       "javassist.compiler.SymbolTable",
       "javassist.SerialVersionUID$2",
       "javassist.SerialVersionUID$3",
       "javassist.bytecode.StackMapTable",
       "javassist.expr.ExprEditor",
       "javassist.util.proxy.MethodHandler",
       "javassist.bytecode.MethodTypeInfo",
       "javassist.convert.TransformAfter",
       "javassist.bytecode.annotation.ByteMemberValue",
       "javassist.bytecode.stackmap.TypeData$NullType",
       "javassist.ClassClassPath",
       "javassist.compiler.AccessorMaker",
       "javassist.compiler.ast.Declarator",
       "javassist.bytecode.annotation.MemberValueVisitor",
       "javassist.CtNewNestedClass",
       "javassist.util.Trigger",
       "javassist.compiler.CodeGen",
       "javassist.expr.FieldAccess$ProceedForRead",
       "javassist.bytecode.ByteVector",
       "javassist.runtime.Cflow$Depth",
       "javassist.CtMethod$ConstParameter",
       "javassist.SerialVersionUID$1",
       "javassist.bytecode.ClassFileWriter",
       "javassist.bytecode.ConstInfoPadding",
       "javassist.compiler.ast.Visitor",
       "javassist.util.proxy.ProxyObject",
       "javassist.util.proxy.ProxyFactory$ProxyDetails",
       "javassist.bytecode.MethodInfo",
       "javassist.tools.rmi.Proxy",
       "javassist.JarClassPath",
       "javassist.URLClassPath",
       "javassist.expr.FieldAccess",
       "javassist.bytecode.CodeIterator$Branch16",
       "javassist.bytecode.BadBytecode",
       "javassist.tools.web.Viewer",
       "javassist.compiler.ast.IntConst",
       "javassist.util.HotSwapper",
       "javassist.bytecode.FieldrefInfo",
       "javassist.bytecode.annotation.CharMemberValue",
       "javassist.compiler.JvstCodeGen",
       "javassist.convert.TransformNewClass",
       "javassist.compiler.Parser",
       "javassist.bytecode.SignatureAttribute$Cursor",
       "javassist.CtField$StringInitializer",
       "javassist.convert.Transformer",
       "javassist.bytecode.annotation.DoubleMemberValue",
       "javassist.util.proxy.ProxyFactory$ClassLoaderProvider",
       "javassist.bytecode.stackmap.TypedBlock$Maker",
       "javassist.compiler.ast.ASTList",
       "javassist.bytecode.annotation.EnumMemberValue"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "io.netty:netty-all:jar:4.0.29.Final:compile",
    "coordinates": "io.netty:netty-all:4.0.29.Final",
    "groupId": "io.netty",
    "artifactId": "netty-all",
    "version": "4.0.29.Final",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 2054931,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "io.netty.channel.unix.DomainSocketChannelConfig",
     "io.netty.handler.codec.spdy.SpdySession",
     "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07",
     "io.netty.channel.group.DefaultChannelGroup",
     "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08",
     "io.netty.channel.ChannelInboundHandlerAdapter",
     "io.netty.util.internal.PlatformDependent0",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesTask",
     "io.netty.handler.codec.http.HttpClientCodec",
     "io.netty.handler.ssl.util.SimpleTrustManagerFactory$2",
     "io.netty.handler.ssl.util.SimpleTrustManagerFactory$1",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReservationNode",
     "io.netty.handler.codec.http.cookie.CookieUtil",
     "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse",
     "io.netty.channel.socket.oio.OioSocketChannel$1",
     "io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig",
     "io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory",
     "io.netty.util.internal.ThreadLocalRandom",
     "io.netty.handler.codec.http.multipart.AbstractDiskHttpData",
     "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1",
     "io.netty.channel.sctp.SctpMessage",
     "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2",
     "io.netty.handler.codec.sctp.SctpInboundByteStreamHandler",
     "io.netty.util.internal.MpscArrayQueueL1Pad",
     "io.netty.channel.group.ChannelMatchers$ClassMatcher",
     "io.netty.channel.rxtx.RxtxChannelOption",
     "io.netty.channel.ChannelOutboundBuffer$MessageProcessor",
     "io.netty.channel.socket.ServerSocketChannelConfig",
     "io.netty.channel.PendingWriteQueue$PendingWrite",
     "io.netty.util.internal.chmv8.ForkJoinPool$1",
     "io.netty.util.internal.chmv8.ForkJoinPool$2",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachValueTask",
     "io.netty.util.concurrent.AbstractScheduledEventExecutor",
     "io.netty.handler.codec.rtsp.RtspObjectEncoder",
     "io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry",
     "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00",
     "io.netty.handler.codec.spdy.SpdySettingsFrame",
     "io.netty.handler.ssl.JdkSslClientContext",
     "io.netty.util.internal.PlatformDependent$1",
     "io.netty.handler.codec.compression.JdkZlibDecoder",
     "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedFullHttpRequest",
     "io.netty.handler.codec.ByteToMessageDecoder$2",
     "io.netty.channel.sctp.oio.OioSctpChannel$OioSctpChannelConfig",
     "io.netty.handler.codec.ByteToMessageDecoder$1",
     "io.netty.handler.ssl.util.InsecureTrustManagerFactory",
     "io.netty.util.internal.logging.AbstractInternalLogger",
     "io.netty.channel.socket.oio.OioSocketChannel",
     "io.netty.handler.ssl.OpenSslEngine$1",
     "io.netty.util.DomainNameMapping",
     "io.netty.handler.codec.http.websocketx.WebSocketFrameAggregator",
     "io.netty.channel.AbstractChannelHandlerContext",
     "io.netty.buffer.PoolArena$SizeClass",
     "io.netty.channel.ThreadPerChannelEventLoopGroup$1",
     "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13",
     "io.netty.handler.codec.http.DefaultCookie",
     "io.netty.handler.codec.http.HttpContent",
     "io.netty.handler.codec.http.QueryStringEncoder",
     "io.netty.handler.ssl.OpenSslEngine$HandshakeState",
     "io.netty.handler.codec.http.HttpObjectDecoder$State",
     "io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache",
     "io.netty.handler.codec.spdy.SpdyCodecUtil",
     "io.netty.channel.ChannelOutboundHandler",
     "io.netty.util.ReferenceCountUtil$ReleasingTask",
     "io.netty.util.internal.logging.Log4JLoggerFactory",
     "io.netty.util.internal.UnpaddedInternalThreadLocalMap",
     "io.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi",
     "io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame",
     "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler",
     "io.netty.util.concurrent.DefaultEventExecutor",
     "io.netty.channel.pool.ChannelPool",
     "io.netty.handler.ssl.JdkNpnSslEngine$2",
     "io.netty.handler.ssl.JdkNpnSslEngine$1",
     "io.netty.util.collection.IntObjectHashMap$1$1",
     "io.netty.handler.codec.http.HttpObjectDecoder$LineParser",
     "io.netty.channel.nio.AbstractNioByteChannel",
     "io.netty.util.concurrent.DefaultThreadFactory",
     "io.netty.handler.codec.http.DefaultHttpObject",
     "io.netty.channel.MultithreadEventLoopGroup",
     "io.netty.buffer.ByteBufAllocator",
     "io.netty.channel.udt.nio.NioUdtMessageRendezvousChannel",
     "io.netty.channel.epoll.AbstractEpollStreamChannel",
     "io.netty.buffer.SwappedByteBuf",
     "io.netty.handler.codec.http.HttpConstants",
     "io.netty.channel.sctp.nio.NioSctpChannel$1",
     "io.netty.channel.sctp.nio.NioSctpChannel$2",
     "io.netty.util.collection.IntObjectHashMap$1",
     "io.netty.util.Recycler$Handle",
     "io.netty.channel.socket.DatagramPacket",
     "io.netty.util.internal.UnsafeAtomicLongFieldUpdater",
     "io.netty.handler.ssl.OpenSslClientContext",
     "io.netty.handler.codec.spdy.DefaultSpdyHeadersFrame",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator",
     "io.netty.buffer.ByteBufProcessor",
     "io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInTask",
     "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame",
     "io.netty.util.internal.PlatformDependent$AtomicLongCounter",
     "io.netty.handler.timeout.ReadTimeoutHandler",
     "io.netty.channel.socket.nio.NioServerSocketChannel",
     "io.netty.buffer.AbstractByteBufAllocator",
     "io.netty.handler.codec.compression.Snappy",
     "io.netty.buffer.ByteBufOutputStream",
     "io.netty.handler.codec.socks.SocksSubnegotiationVersion",
     "io.netty.channel.epoll.IovArray",
     "io.netty.handler.codec.marshalling.DefaultMarshallerProvider",
     "io.netty.handler.codec.spdy.SpdyOrHttpChooser$1",
     "io.netty.util.internal.MpscLinkedQueueHeadRef",
     "io.netty.handler.codec.http.DefaultHttpHeaders",
     "io.netty.channel.DefaultFileRegion",
     "io.netty.handler.codec.socks.SocksRequestType",
     "io.netty.util.internal.ReadOnlyIterator",
     "io.netty.handler.ssl.SslHandler$LazyChannelPromise",
     "io.netty.util.NetUtil$1",
     "io.netty.handler.codec.http.HttpHeaderDateFormat",
     "io.netty.handler.codec.http.DefaultHttpMessage",
     "io.netty.handler.ssl.IdentityCipherSuiteFilter",
     "io.netty.handler.ssl.OpenSslX509Certificate",
     "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$NotEnoughDataDecoderException",
     "io.netty.util.internal.InternalThreadLocalMap",
     "io.netty.channel.socket.oio.OioDatagramChannel",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToIntTask",
     "io.netty.handler.codec.socks.UnknownSocksRequest",
     "io.netty.channel.ChannelHandlerContext",
     "io.netty.channel.socket.oio.DefaultOioSocketChannelConfig",
     "io.netty.channel.FixedRecvByteBufAllocator",
     "io.netty.util.concurrent.BlockingOperationException",
     "io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask",
     "io.netty.channel.nio.AbstractNioChannel",
     "io.netty.handler.codec.http.CookieDecoder",
     "io.netty.channel.FileRegion",
     "io.netty.handler.codec.socks.SocksInitRequest",
     "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent",
     "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$PerChannel",
     "io.netty.handler.timeout.WriteTimeoutHandler",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedValueTask",
     "io.netty.handler.codec.socks.SocksAuthStatus",
     "io.netty.handler.ssl.OpenSslEngine$ClientAuthMode",
     "io.netty.handler.codec.http.cors.CorsConfig$1",
     "io.netty.handler.codec.compression.ZlibUtil",
     "io.netty.channel.Channel$Unsafe",
     "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1",
     "io.netty.channel.sctp.oio.OioSctpServerChannel$1",
     "io.netty.channel.sctp.oio.OioSctpServerChannel$2",
     "io.netty.channel.rxtx.RxtxChannelConfig$Databits",
     "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2",
     "io.netty.handler.codec.socks.SocksCmdStatus",
     "io.netty.handler.codec.compression.ZlibUtil$1",
     "io.netty.buffer.ByteBufUtil$IndexOfProcessor",
     "io.netty.channel.FixedRecvByteBufAllocator$HandleImpl",
     "io.netty.channel.epoll.EpollEventArray",
     "io.netty.handler.codec.base64.Base64Encoder",
     "io.netty.channel.ChannelOutboundBuffer$Entry$1",
     "io.netty.channel.nio.SelectedSelectionKeySet",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueSpliterator",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node",
     "io.netty.channel.epoll.EpollDomainSocketChannel$EpollDomainUnsafe",
     "io.netty.handler.codec.socks.SocksCmdType",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToDoubleTask",
     "io.netty.handler.ssl.CipherSuiteFilter",
     "io.netty.util.internal.chmv8.ForkJoinWorkerThread",
     "io.netty.handler.codec.rtsp.RtspHeaders$Values",
     "io.netty.channel.udt.nio.NioUdtAcceptorChannel",
     "io.netty.util.concurrent.DefaultEventExecutorGroup",
     "io.netty.channel.FailedChannelFuture",
     "io.netty.channel.unix.DomainSocketReadMode",
     "io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder",
     "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeBin",
     "io.netty.util.CharsetUtil",
     "io.netty.util.internal.MpscArrayQueueHeadCacheField",
     "io.netty.handler.codec.bytes.ByteArrayDecoder",
     "io.netty.channel.udt.UdtChannel",
     "io.netty.handler.codec.http.websocketx.Utf8Validator",
     "io.netty.handler.codec.http.multipart.MemoryAttribute",
     "io.netty.util.concurrent.GenericProgressiveFutureListener",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt",
     "io.netty.handler.ssl.JdkSslContext",
     "io.netty.buffer.DefaultByteBufHolder",
     "io.netty.buffer.UnsafeDirectSwappedByteBuf",
     "io.netty.handler.codec.spdy.DefaultSpdyDataFrame",
     "io.netty.buffer.PooledSlicedByteBuf",
     "io.netty.channel.ChannelPipeline",
     "io.netty.handler.codec.DelimiterBasedFrameDecoder",
     "io.netty.channel.oio.OioByteStreamChannel",
     "io.netty.channel.rxtx.RxtxChannelConfig$Paritybit",
     "io.netty.channel.ChannelException",
     "io.netty.handler.logging.LogLevel",
     "io.netty.channel.ChannelProgressiveFutureListener",
     "io.netty.handler.codec.spdy.DefaultSpdySettingsFrame$Setting",
     "io.netty.util.ReferenceCountUtil",
     "io.netty.channel.epoll.NativeDatagramPacketArray",
     "io.netty.channel.ThreadPerChannelEventLoop$1",
     "io.netty.handler.codec.serialization.ObjectDecoder",
     "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachMappingTask",
     "io.netty.handler.codec.http.HttpHeaderDateFormat$1",
     "io.netty.handler.codec.socks.SocksMessageEncoder",
     "io.netty.util.concurrent.CompleteFuture",
     "io.netty.util.ResourceLeakException",
     "io.netty.util.Recycler$DefaultHandle",
     "io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder",
     "io.netty.handler.traffic.GlobalChannelTrafficCounter$MixedTrafficMonitoringTask",
     "io.netty.channel.epoll.EpollDatagramChannel",
     "io.netty.channel.epoll.EpollSocketChannel",
     "io.netty.channel.unix.DomainSocketChannel",
     "io.netty.channel.ThreadPerChannelEventLoop",
     "io.netty.handler.traffic.ChannelTrafficShapingHandler$1",
     "io.netty.handler.codec.serialization.CompactObjectOutputStream",
     "io.netty.handler.codec.http.multipart.MemoryFileUpload",
     "io.netty.channel.group.ChannelGroupException",
     "io.netty.util.concurrent.SingleThreadEventExecutor",
     "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$1",
     "io.netty.channel.sctp.oio.OioSctpServerChannel$OioSctpServerChannelConfig",
     "io.netty.util.Recycler$WeakOrderQueue$Link",
     "io.netty.handler.codec.http.HttpObjectAggregator$1",
     "io.netty.channel.RecvByteBufAllocator$Handle",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchValuesTask",
     "io.netty.channel.rxtx.RxtxChannelConfig",
     "io.netty.util.internal.RecyclableArrayList$1",
     "io.netty.channel.group.ChannelGroupFuture",
     "io.netty.handler.codec.haproxy.HAProxyMessage$1",
     "io.netty.handler.codec.http.DefaultFullHttpRequest",
     "io.netty.channel.DefaultChannelPipeline$TailContext",
     "io.netty.channel.rxtx.RxtxChannel$RxtxUnsafe$1",
     "io.netty.handler.codec.http.HttpHeaders$Names",
     "io.netty.buffer.PoolSubpageMetric",
     "io.netty.handler.codec.socks.SocksInitResponseDecoder$State",
     "io.netty.channel.AbstractServerChannel",
     "io.netty.handler.codec.http.multipart.AbstractHttpData",
     "io.netty.handler.codec.compression.ZlibDecoder",
     "io.netty.buffer.ByteBufProcessor$10",
     "io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler$1",
     "io.netty.handler.codec.socks.SocksCmdRequestDecoder",
     "io.netty.handler.codec.compression.SnappyFramedEncoder",
     "io.netty.channel.socket.DefaultSocketChannelConfig",
     "io.netty.channel.epoll.AbstractEpollServerChannel$EpollServerSocketUnsafe",
     "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder$1",
     "io.netty.util.internal.logging.Log4JLogger",
     "io.netty.handler.codec.serialization.CompatibleObjectEncoder",
     "io.netty.channel.group.CombinedIterator",
     "io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator$1",
     "io.netty.channel.ChannelDuplexHandler",
     "io.netty.handler.codec.marshalling.CompatibleMarshallingEncoder",
     "io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$1",
     "io.netty.channel.oio.AbstractOioChannel",
     "io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1",
     "io.netty.handler.codec.FixedLengthFrameDecoder",
     "io.netty.channel.epoll.EpollSocketChannel$1",
     "io.netty.channel.epoll.EpollSocketChannel$2",
     "io.netty.handler.codec.marshalling.MarshallingEncoder",
     "io.netty.handler.codec.http.multipart.Attribute",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator",
     "io.netty.handler.codec.http.HttpContentEncoder$State",
     "io.netty.handler.codec.http.HttpObjectEncoder",
     "io.netty.buffer.AbstractDerivedByteBuf",
     "io.netty.util.HashedWheelTimer",
     "io.netty.channel.sctp.SctpNotificationHandler",
     "io.netty.channel.group.ChannelGroupFutureListener",
     "io.netty.util.internal.NativeLibraryLoader",
     "io.netty.buffer.AbstractByteBufAllocator$1",
     "io.netty.handler.stream.ChunkedWriteHandler$PendingWrite",
     "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder",
     "io.netty.channel.udt.nio.NioUdtMessageConnectorChannel$1",
     "io.netty.channel.pool.FixedChannelPool$6",
     "io.netty.handler.codec.rtsp.RtspHeaders$Names",
     "io.netty.util.HashedWheelTimer$Worker",
     "io.netty.channel.socket.nio.NioDatagramChannelConfig",
     "io.netty.handler.codec.compression.JdkZlibEncoder$4",
     "io.netty.channel.pool.FixedChannelPool$3",
     "io.netty.handler.codec.http.HttpContentDecoder",
     "io.netty.channel.pool.FixedChannelPool$2",
     "io.netty.channel.pool.FixedChannelPool$5",
     "io.netty.util.concurrent.AbstractEventExecutor$1",
     "io.netty.channel.pool.FixedChannelPool$4",
     "io.netty.buffer.ByteBuf",
     "io.netty.handler.timeout.ReadTimeoutException",
     "io.netty.channel.pool.FixedChannelPool$1",
     "io.netty.handler.codec.http.cookie.ClientCookieEncoder",
     "io.netty.handler.codec.socks.SocksInitRequestDecoder$State",
     "io.netty.handler.codec.socks.SocksCmdResponseDecoder$State",
     "io.netty.handler.ssl.ApplicationProtocolUtil",
     "io.netty.handler.ssl.JdkAlpnSslEngine",
     "io.netty.handler.codec.compression.JdkZlibEncoder$1",
     "io.netty.handler.codec.compression.JdkZlibEncoder$2",
     "io.netty.handler.codec.spdy.SpdyOrHttpChooser",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToLongTask",
     "io.netty.handler.codec.compression.JdkZlibEncoder$3",
     "io.netty.buffer.PoolThreadCache$1",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchKeysTask",
     "io.netty.channel.group.ChannelMatchers",
     "io.netty.handler.codec.http.HttpMethod",
     "io.netty.util.NetUtil",
     "io.netty.buffer.WrappedByteBuf",
     "io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf",
     "io.netty.handler.codec.http.HttpChunkedInput",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun",
     "io.netty.channel.SingleThreadEventLoop$NonWakeupRunnable",
     "io.netty.channel.udt.nio.NioUdtByteAcceptorChannel",
     "io.netty.channel.group.DefaultChannelGroupFuture",
     "io.netty.channel.unix.ServerDomainSocketChannel",
     "io.netty.buffer.CompositeByteBuf$1",
     "io.netty.handler.codec.http.cookie.CookieHeaderNames",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsTask",
     "io.netty.handler.codec.http.HttpContentDecompressor",
     "io.netty.buffer.PoolThreadCache$2",
     "io.netty.handler.traffic.ChannelTrafficShapingHandler$ToSend",
     "io.netty.channel.ChannelPromiseAggregator",
     "io.netty.channel.socket.DefaultDatagramChannelConfig",
     "io.netty.handler.codec.serialization.WeakReferenceMap",
     "io.netty.handler.codec.http.HttpClientCodec$Encoder",
     "io.netty.handler.traffic.TrafficCounter",
     "io.netty.util.AttributeMap",
     "io.netty.util.concurrent.ScheduledFuture",
     "io.netty.handler.codec.http.HttpObject",
     "io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder",
     "io.netty.handler.codec.base64.Base64",
     "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable",
     "io.netty.channel.sctp.SctpChannel",
     "io.netty.buffer.CompositeByteBuf$Component",
     "io.netty.handler.ssl.ApplicationProtocolNegotiator",
     "io.netty.channel.socket.DatagramChannel",
     "io.netty.handler.codec.http.multipart.HttpPostBodyUtil",
     "io.netty.channel.unix.DomainSocketAddress",
     "io.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask",
     "io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHeaders",
     "io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache",
     "io.netty.util.internal.MpscArrayQueueTailField",
     "io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType",
     "io.netty.util.internal.TypeParameterMatcher",
     "io.netty.handler.codec.spdy.DefaultSpdyHeaders",
     "io.netty.handler.ssl.ApplicationProtocolConfig",
     "io.netty.handler.codec.socks.SocksProtocolVersion",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator",
     "io.netty.channel.epoll.EpollServerChannelConfig",
     "io.netty.handler.timeout.IdleStateEvent",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedKeyTask",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchMappingsTask",
     "io.netty.channel.oio.AbstractOioMessageChannel",
     "io.netty.channel.pool.ChannelHealthChecker",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToLongTask",
     "io.netty.handler.ssl.SslContext$1",
     "io.netty.handler.codec.http.FullHttpRequest",
     "io.netty.channel.AbstractChannelHandlerContext$WriteTask",
     "io.netty.channel.udt.nio.NioUdtProvider",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceEntriesTask",
     "io.netty.handler.codec.LineBasedFrameDecoder",
     "io.netty.handler.codec.http.HttpMessageUtil",
     "io.netty.channel.pool.AbstractChannelPoolHandler",
     "io.netty.handler.ssl.SslHandler",
     "io.netty.handler.codec.http.DefaultHttpResponse",
     "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder",
     "io.netty.util.internal.logging.InternalLogger",
     "io.netty.buffer.AbstractReferenceCountedByteBuf",
     "io.netty.handler.codec.spdy.SpdyRstStreamFrame",
     "io.netty.buffer.UnpooledHeapByteBuf",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator",
     "io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender",
     "io.netty.util.concurrent.EventExecutor",
     "io.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction",
     "io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator",
     "io.netty.handler.codec.socks.SocksInitResponseDecoder",
     "io.netty.channel.SucceededChannelFuture",
     "io.netty.channel.ChannelOption",
     "io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction",
     "io.netty.handler.codec.spdy.SpdyHttpHeaders",
     "io.netty.util.internal.ThreadLocalRandom$1",
     "io.netty.util.internal.ThreadLocalRandom$2",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedEntryTask",
     "io.netty.handler.ssl.OpenSslSessionStats",
     "io.netty.handler.codec.socks.SocksCmdRequestDecoder$State",
     "io.netty.util.concurrent.ImmediateEventExecutor",
     "io.netty.channel.epoll.EpollServerSocketChannel",
     "io.netty.handler.ssl.PemReader",
     "io.netty.handler.codec.http.HttpContentCompressor$1",
     "io.netty.handler.codec.ByteToMessageDecoder",
     "io.netty.handler.stream.ChunkedNioStream",
     "io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask",
     "io.netty.util.concurrent.AbstractFuture",
     "io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator",
     "io.netty.handler.codec.spdy.SpdySynReplyFrame",
     "io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator",
     "io.netty.channel.socket.nio.NioSocketChannel$1",
     "io.netty.handler.codec.marshalling.ThreadLocalMarshallerProvider",
     "io.netty.util.ReferenceCounted",
     "io.netty.buffer.PooledDuplicatedByteBuf$1",
     "io.netty.handler.codec.spdy.SpdyHttpDecoder",
     "io.netty.util.internal.NoOpTypeParameterMatcher",
     "io.netty.channel.oio.AbstractOioChannel$DefaultOioUnsafe",
     "io.netty.handler.codec.spdy.SpdyPingFrame",
     "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker",
     "io.netty.util.internal.MpscLinkedQueueNode",
     "io.netty.channel.nio.NioEventLoop",
     "io.netty.util.internal.JavassistTypeParameterMatcherGenerator",
     "io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForwardingNode",
     "io.netty.handler.traffic.GlobalTrafficShapingHandler$ToSend",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Segment",
     "io.netty.util.internal.chmv8.ForkJoinPool",
     "io.netty.handler.timeout.WriteTimeoutException",
     "io.netty.channel.MessageSizeEstimator",
     "io.netty.channel.socket.nio.NioSocketChannel$2",
     "io.netty.handler.codec.http.cookie.ServerCookieDecoder",
     "io.netty.handler.codec.http.HttpResponseEncoder",
     "io.netty.handler.codec.socks.SocksAuthResponseDecoder$State",
     "io.netty.util.internal.MpscArrayQueue",
     "io.netty.channel.pool.ChannelPoolHandler",
     "io.netty.channel.group.ChannelMatchers$1",
     "io.netty.channel.sctp.SctpServerChannel",
     "io.netty.handler.ssl.JdkNpnSslEngine",
     "io.netty.handler.codec.http.multipart.HttpDataFactory",
     "io.netty.handler.codec.socks.SocksCmdResponseDecoder$1",
     "io.netty.channel.epoll.EpollDomainSocketChannel",
     "io.netty.channel.socket.nio.NioServerSocketChannel$1",
     "io.netty.channel.rxtx.RxtxChannel",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble",
     "io.netty.channel.sctp.nio.NioSctpChannel$NioSctpChannelConfig",
     "io.netty.handler.codec.http.HttpResponseStatus",
     "io.netty.handler.codec.string.StringEncoder",
     "io.netty.channel.AbstractChannel$AbstractUnsafe",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1",
     "io.netty.channel.epoll.EpollChannelConfig",
     "io.netty.buffer.PoolThreadCache",
     "io.netty.handler.codec.DecoderResult",
     "io.netty.handler.codec.spdy.SpdySessionStatus",
     "io.netty.channel.local.LocalChannel$2",
     "io.netty.channel.nio.AbstractNioMessageChannel$1",
     "io.netty.channel.local.LocalChannel$3",
     "io.netty.channel.local.LocalChannel$4",
     "io.netty.util.internal.MpscLinkedQueueTailRef",
     "io.netty.channel.local.LocalChannel$5",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask",
     "io.netty.handler.ssl.OpenSslSessionContext",
     "io.netty.channel.local.LocalChannel$1",
     "io.netty.handler.codec.spdy.SpdyHeaders$HttpNames",
     "io.netty.handler.codec.http.cookie.CookieDecoder",
     "io.netty.handler.codec.EncoderException",
     "io.netty.handler.codec.rtsp.RtspMethods",
     "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener",
     "io.netty.handler.logging.LoggingHandler",
     "io.netty.handler.codec.http.HttpHeaders$1",
     "io.netty.handler.codec.spdy.SpdySession$StreamComparator",
     "io.netty.handler.codec.haproxy.HAProxyProtocolException",
     "io.netty.handler.codec.socks.SocksInitRequestDecoder$1",
     "io.netty.handler.codec.http.multipart.DefaultHttpDataFactory",
     "io.netty.handler.codec.MessageToMessageEncoder",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterCell",
     "io.netty.channel.ChannelFutureListener$3",
     "io.netty.channel.ChannelFutureListener$2",
     "io.netty.channel.ChannelFutureListener$1",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToLongTask",
     "io.netty.handler.codec.http.LastHttpContent",
     "io.netty.util.concurrent.AbstractEventExecutor",
     "io.netty.channel.sctp.nio.NioSctpServerChannel$2",
     "io.netty.channel.sctp.nio.NioSctpServerChannel$1",
     "io.netty.bootstrap.ServerBootstrap$1",
     "io.netty.handler.codec.marshalling.ChannelBufferByteOutput",
     "io.netty.channel.pool.FixedChannelPool$TimeoutTask",
     "io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder",
     "io.netty.channel.ChannelProgressivePromise",
     "io.netty.handler.codec.sctp.SctpMessageCompletionHandler",
     "io.netty.util.concurrent.AbstractEventExecutor$EventExecutorIterator",
     "io.netty.util.ThreadDeathWatcher",
     "io.netty.channel.AbstractServerChannel$DefaultServerUnsafe",
     "io.netty.handler.codec.http.cors.CorsConfig",
     "io.netty.util.internal.logging.MessageFormatter",
     "io.netty.util.concurrent.GenericFutureListener",
     "io.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry",
     "io.netty.handler.codec.http.HttpServerCodec",
     "io.netty.handler.ssl.SslParametersUtils",
     "io.netty.handler.codec.haproxy.HAProxyProtocolVersion",
     "io.netty.channel.oio.AbstractOioByteChannel",
     "io.netty.handler.ssl.OpenSslContext$DefaultOpenSslEngineMap",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator",
     "io.netty.handler.codec.socks.SocksRequest",
     "io.netty.channel.udt.UdtMessage",
     "io.netty.util.concurrent.DefaultPromise$LateListenerNotifier",
     "io.netty.handler.codec.marshalling.MarshallerProvider",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong",
     "io.netty.handler.codec.http.cookie.ClientCookieDecoder",
     "io.netty.util.concurrent.GlobalEventExecutor$1",
     "io.netty.util.AttributeKey",
     "io.netty.handler.codec.socks.SocksCmdRequestDecoder$1",
     "io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory",
     "io.netty.handler.codec.ByteToMessageCodec$Encoder",
     "io.netty.channel.local.LocalServerChannel",
     "io.netty.util.concurrent.PromiseNotifier",
     "io.netty.handler.codec.PrematureChannelClosureException",
     "io.netty.handler.codec.http.LastHttpContent$1",
     "io.netty.channel.socket.oio.OioSocketChannelConfig",
     "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest",
     "io.netty.handler.ssl.OpenSslServerSessionContext",
     "io.netty.handler.codec.CodecException",
     "io.netty.channel.rxtx.RxtxDeviceAddress",
     "io.netty.handler.traffic.AbstractTrafficShapingHandler$ReopenReadTimerTask",
     "io.netty.channel.AbstractServerChannel$1",
     "io.netty.handler.codec.spdy.DefaultSpdySynStreamFrame",
     "io.netty.util.internal.MpscArrayQueueConsumerField",
     "io.netty.util.collection.IntObjectHashMap",
     "io.netty.handler.codec.compression.JZlibEncoder",
     "io.netty.handler.codec.spdy.SpdyHeaderBlockDecoder",
     "io.netty.buffer.PoolArena$HeapArena",
     "io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1",
     "io.netty.handler.codec.spdy.SpdyProtocolException",
     "io.netty.util.internal.logging.Slf4JLoggerFactory",
     "io.netty.handler.codec.http.HttpRequest",
     "io.netty.handler.codec.spdy.SpdySessionHandler$1",
     "io.netty.util.concurrent.SucceededFuture",
     "io.netty.channel.ChannelHandler$Sharable",
     "io.netty.handler.traffic.ChannelTrafficShapingHandler",
     "io.netty.util.concurrent.DefaultPromise$CauseHolder",
     "io.netty.channel.nio.AbstractNioByteChannel$1",
     "io.netty.channel.ServerChannel",
     "io.netty.handler.codec.MessageToMessageCodec",
     "io.netty.channel.embedded.EmbeddedChannel$DefaultUnsafe",
     "io.netty.channel.ChannelFlushPromiseNotifier",
     "io.netty.handler.codec.protobuf.ProtobufEncoder",
     "io.netty.channel.pool.FixedChannelPool$AcquireListener",
     "io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1",
     "io.netty.handler.ssl.util.FingerprintTrustManagerFactory$2",
     "io.netty.buffer.UnpooledDirectByteBuf",
     "io.netty.util.internal.chmv8.Striped64$1",
     "io.netty.handler.codec.compression.Snappy$1",
     "io.netty.util.internal.MpscLinkedQueue",
     "io.netty.util.ResourceLeakDetector$Level",
     "io.netty.handler.ssl.OpenSslClientContext$OpenSslClientSessionContext",
     "io.netty.handler.codec.spdy.SpdyFrame",
     "io.netty.channel.sctp.oio.OioSctpChannel",
     "io.netty.util.concurrent.PromiseTask",
     "io.netty.bootstrap.ChannelFactory",
     "io.netty.util.concurrent.DefaultPromise$LateListeners",
     "io.netty.handler.codec.socks.SocksCmdRequest$1",
     "io.netty.channel.MessageSizeEstimator$Handle",
     "io.netty.handler.codec.ReplayingDecoder",
     "io.netty.channel.epoll.AbstractEpollChannel",
     "io.netty.handler.codec.http.multipart.HttpData",
     "io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher",
     "io.netty.util.internal.chmv8.ForkJoinPool$DefaultForkJoinWorkerThreadFactory",
     "io.netty.handler.codec.spdy.SpdySessionHandler$2",
     "io.netty.handler.codec.spdy.SpdySessionHandler$3",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToIntTask",
     "io.netty.handler.codec.spdy.SpdySessionHandler$4",
     "io.netty.channel.sctp.SctpChannelOption",
     "io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise",
     "io.netty.channel.udt.DefaultUdtChannelConfig",
     "io.netty.util.concurrent.Promise",
     "io.netty.channel.udt.nio.NioUdtByteConnectorChannel",
     "io.netty.handler.codec.spdy.SpdySessionHandler$ClosingChannelFutureListener",
     "io.netty.util.internal.logging.Slf4JLoggerFactory$1",
     "io.netty.handler.codec.rtsp.RtspRequestEncoder",
     "io.netty.channel.local.LocalChannelRegistry",
     "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable",
     "io.netty.channel.unix.FileDescriptor",
     "io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToLongTask",
     "io.netty.handler.ssl.OpenSslEngine$OpenSslSession",
     "io.netty.buffer.ReadOnlyUnsafeDirectByteBuf",
     "io.netty.handler.codec.http.HttpRequestDecoder",
     "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask",
     "io.netty.handler.codec.spdy.SpdyStreamFrame",
     "io.netty.channel.epoll.EpollSocketChannel$EpollSocketChannelUnsafe",
     "io.netty.handler.ssl.OpenSslContext$2",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry",
     "io.netty.handler.ssl.OpenSslContext$1",
     "io.netty.handler.codec.compression.JdkZlibDecoder$GzipState",
     "io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler",
     "io.netty.handler.codec.compression.JdkZlibDecoder$1",
     "io.netty.channel.pool.ChannelHealthChecker$1",
     "io.netty.channel.DefaultAddressedEnvelope",
     "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator",
     "io.netty.handler.codec.spdy.SpdyFrameDecoderDelegate",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView",
     "io.netty.handler.codec.CodecUtil",
     "io.netty.handler.codec.ByteToMessageCodec$1",
     "io.netty.channel.DefaultMessageSizeEstimator$HandleImpl",
     "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe",
     "io.netty.util.internal.chmv8.CountedCompleter$1",
     "io.netty.handler.codec.socks.SocksMessageType",
     "io.netty.channel.udt.UdtServerChannelConfig",
     "io.netty.util.internal.logging.JdkLogger",
     "io.netty.channel.DefaultChannelPromise",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble",
     "io.netty.channel.pool.SimpleChannelPool$3",
     "io.netty.channel.pool.SimpleChannelPool$2",
     "io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl",
     "io.netty.channel.pool.SimpleChannelPool$5",
     "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket",
     "io.netty.channel.pool.SimpleChannelPool$4",
     "io.netty.util.internal.chmv8.CountedCompleter",
     "io.netty.util.concurrent.FutureListener",
     "io.netty.handler.codec.ProtocolDetectionResult",
     "io.netty.handler.codec.spdy.SpdySession$StreamState",
     "io.netty.buffer.PoolArena",
     "io.netty.handler.codec.http.cookie.ClientCookieDecoder$CookieBuilder",
     "io.netty.util.internal.logging.InternalLogLevel",
     "io.netty.channel.group.DefaultChannelGroup$1",
     "io.netty.channel.pool.SimpleChannelPool$1",
     "io.netty.buffer.CompositeByteBuf",
     "io.netty.handler.codec.spdy.SpdyHeaderBlockZlibEncoder",
     "io.netty.channel.epoll.EpollDomainSocketChannelConfig",
     "io.netty.buffer.PoolChunk",
     "io.netty.handler.stream.ChunkedInput",
     "io.netty.util.Timer",
     "io.netty.handler.codec.http.HttpResponse",
     "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory",
     "io.netty.handler.timeout.IdleStateHandler$1",
     "io.netty.channel.ChannelOutboundBuffer$Entry",
     "io.netty.util.concurrent.ImmediateExecutor",
     "io.netty.handler.codec.marshalling.DefaultUnmarshallerProvider",
     "io.netty.channel.socket.nio.NioSocketChannel",
     "io.netty.handler.ssl.SniHandler",
     "io.netty.handler.codec.compression.DecompressionException",
     "io.netty.handler.codec.http.multipart.CaseIgnoringComparator",
     "io.netty.channel.socket.SocketChannelConfig",
     "io.netty.util.Recycler$Stack",
     "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator",
     "io.netty.channel.socket.DefaultServerSocketChannelConfig",
     "io.netty.util.collection.IntObjectMap$Entry",
     "io.netty.handler.ssl.OpenSslClientContext$2",
     "io.netty.handler.ssl.OpenSslClientContext$1",
     "io.netty.handler.codec.http.websocketx.WebSocketVersion",
     "io.netty.util.internal.logging.Slf4JLogger",
     "io.netty.util.DefaultAttributeMap",
     "io.netty.util.internal.chmv8.ForkJoinPool$ManagedBlocker",
     "io.netty.handler.codec.socks.SocksResponse",
     "io.netty.channel.oio.AbstractOioChannel$1",
     "io.netty.handler.codec.compression.ZlibCodecFactory",
     "io.netty.handler.codec.http.HttpContentEncoder$1",
     "io.netty.util.concurrent.AbstractScheduledEventExecutor$1",
     "io.netty.util.Timeout",
     "io.netty.channel.socket.nio.ProtocolFamilyConverter",
     "io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceFdTask",
     "io.netty.handler.codec.http.websocketx.WebSocketFrame",
     "io.netty.buffer.PoolThreadCache$MemoryRegionCache",
     "io.netty.handler.ssl.ApplicationProtocolNames",
     "io.netty.handler.codec.serialization.SoftReferenceMap",
     "io.netty.util.internal.chmv8.Striped64$Cell",
     "io.netty.buffer.ByteBufProcessor$1",
     "io.netty.handler.codec.rtsp.RtspResponseEncoder",
     "io.netty.util.internal.PendingWrite",
     "io.netty.util.concurrent.EventExecutorGroup",
     "io.netty.buffer.ByteBufProcessor$2",
     "io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize",
     "io.netty.buffer.ByteBufProcessor$5",
     "io.netty.buffer.ByteBufProcessor$6",
     "io.netty.buffer.ByteBufProcessor$3",
     "io.netty.buffer.ByteBufUtil",
     "io.netty.handler.codec.spdy.SpdyHeaderBlockRawEncoder",
     "io.netty.buffer.ByteBufProcessor$4",
     "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$2",
     "io.netty.buffer.ByteBufProcessor$9",
     "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$1",
     "io.netty.buffer.ByteBufProcessor$7",
     "io.netty.buffer.ByteBufProcessor$8",
     "io.netty.handler.codec.UnsupportedMessageTypeException",
     "io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig",
     "io.netty.channel.pool.AbstractChannelPoolMap",
     "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelectionListener",
     "io.netty.handler.ssl.ApplicationProtocolAccessor",
     "io.netty.handler.codec.http.HttpHeaders",
     "io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$TransportProtocol",
     "io.netty.handler.codec.spdy.SpdyStreamStatus",
     "io.netty.handler.timeout.WriteTimeoutHandler$2",
     "io.netty.handler.timeout.WriteTimeoutHandler$1",
     "io.netty.handler.codec.marshalling.CompatibleMarshallingDecoder",
     "io.netty.channel.epoll.NativeDatagramPacketArray$1",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Traverser",
     "io.netty.handler.traffic.GlobalTrafficShapingHandler$PerChannel",
     "io.netty.bootstrap.Bootstrap$2",
     "io.netty.handler.codec.spdy.SpdyFrameDecoder$State",
     "io.netty.util.concurrent.MultithreadEventExecutorGroup$1",
     "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction",
     "io.netty.buffer.DuplicatedByteBuf",
     "io.netty.util.concurrent.FastThreadLocalThread",
     "io.netty.channel.socket.InternetProtocolFamily",
     "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State",
     "io.netty.handler.codec.socks.SocksCmdResponseDecoder",
     "io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder",
     "io.netty.bootstrap.Bootstrap$1",
     "io.netty.handler.codec.http.QueryStringEncoder$Param",
     "io.netty.handler.codec.http.HttpObjectDecoder",
     "io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe",
     "io.netty.channel.ChannelOutboundHandlerAdapter",
     "io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise",
     "io.netty.util.internal.chmv8.ForkJoinTask",
     "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector",
     "io.netty.util.internal.PlatformDependent0$3",
     "io.netty.handler.stream.ChunkedStream",
     "io.netty.buffer.PooledByteBufAllocator",
     "io.netty.util.HashedWheelTimer$HashedWheelBucket",
     "io.netty.util.internal.PlatformDependent0$1",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachKeyTask",
     "io.netty.util.concurrent.DefaultProgressivePromise",
     "io.netty.util.internal.PlatformDependent0$2",
     "io.netty.handler.stream.ChunkedNioFile",
     "io.netty.handler.codec.http.FullHttpMessage",
     "io.netty.handler.ssl.OpenSslServerContext",
     "io.netty.util.internal.MpscLinkedQueue$DefaultNode",
     "io.netty.util.internal.OneTimeTask",
     "io.netty.handler.ssl.OpenSslSessionContext$EmptyEnumeration",
     "io.netty.handler.codec.http.DefaultFullHttpResponse",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask",
     "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$1",
     "io.netty.handler.codec.http.multipart.AbstractMemoryHttpData",
     "io.netty.handler.codec.http.ClientCookieEncoder",
     "io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator",
     "io.netty.util.internal.logging.JdkLoggerFactory",
     "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
     "io.netty.util.concurrent.MultithreadEventExecutorGroup$GenericEventExecutorChooser",
     "io.netty.buffer.AdvancedLeakAwareByteBuf",
     "io.netty.channel.embedded.EmbeddedChannel$1",
     "io.netty.handler.ssl.util.SimpleTrustManagerFactory",
     "io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator",
     "io.netty.util.internal.StringUtil",
     "io.netty.handler.codec.http.websocketx.WebSocketHandshakeException",
     "io.netty.util.internal.chmv8.ForkJoinPool$EmptyTask",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchEntriesTask",
     "io.netty.handler.codec.marshalling.UnmarshallerProvider",
     "io.netty.channel.group.ChannelMatcher",
     "io.netty.util.TimerTask",
     "io.netty.util.internal.logging.FormattingTuple",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction",
     "io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint",
     "io.netty.channel.CombinedChannelDuplexHandler",
     "io.netty.handler.codec.http.multipart.FileUpload",
     "io.netty.buffer.PooledByteBuf",
     "io.netty.util.HashedWheelTimer$HashedWheelTimeout",
     "io.netty.channel.sctp.nio.NioSctpServerChannel$NioSctpServerChannelConfig",
     "io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig",
     "io.netty.channel.sctp.DefaultSctpServerChannelConfig",
     "io.netty.handler.codec.http.DefaultHttpContent",
     "io.netty.channel.pool.SimpleChannelPool",
     "io.netty.util.concurrent.SingleThreadEventExecutor$4",
     "io.netty.util.concurrent.SingleThreadEventExecutor$1",
     "io.netty.util.concurrent.SingleThreadEventExecutor$3",
     "io.netty.channel.SimpleChannelInboundHandler",
     "io.netty.util.concurrent.SingleThreadEventExecutor$2",
     "io.netty.handler.codec.http.QueryStringDecoder",
     "io.netty.handler.codec.socks.SocksCmdRequest",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToIntTask",
     "io.netty.util.concurrent.Future",
     "io.netty.handler.codec.http.HttpObjectAggregator",
     "io.netty.handler.codec.bytes.ByteArrayEncoder",
     "io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe",
     "io.netty.channel.socket.oio.OioServerSocketChannelConfig",
     "io.netty.channel.epoll.EpollServerDomainSocketChannel",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToIntTask",
     "io.netty.buffer.PoolChunkList",
     "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory",
     "io.netty.util.ThreadDeathWatcher$1",
     "io.netty.channel.embedded.EmbeddedEventLoop",
     "io.netty.buffer.PoolSubpage",
     "io.netty.channel.local.LocalServerChannel$1",
     "io.netty.channel.epoll.AbstractEpollStreamChannel$1",
     "io.netty.buffer.Unpooled",
     "io.netty.util.internal.RecyclableMpscLinkedQueueNode",
     "io.netty.channel.local.LocalServerChannel$2",
     "io.netty.channel.ChannelProgressiveFuture",
     "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$1",
     "io.netty.handler.codec.ByteToMessageDecoder$Cumulator",
     "io.netty.handler.codec.http.HttpClientCodec$Decoder",
     "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderIterator",
     "io.netty.channel.sctp.SctpChannelConfig",
     "io.netty.bootstrap.AbstractBootstrap$2",
     "io.netty.handler.codec.http.HttpObjectDecoder$1",
     "io.netty.util.internal.chmv8.ForkJoinPool$WorkQueue",
     "io.netty.bootstrap.AbstractBootstrap$1",
     "io.netty.handler.ssl.NotSslRecordException",
     "io.netty.handler.codec.rtsp.RtspObjectDecoder",
     "io.netty.handler.codec.http.multipart.DiskFileUpload",
     "io.netty.channel.ConnectTimeoutException",
     "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$1",
     "io.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry",
     "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$4",
     "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$2",
     "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$3",
     "io.netty.handler.codec.spdy.DefaultSpdySettingsFrame",
     "io.netty.util.internal.logging.CommonsLogger",
     "io.netty.util.concurrent.PromiseTask$RunnableAdapter",
     "io.netty.buffer.PooledDuplicatedByteBuf",
     "io.netty.channel.epoll.Native",
     "io.netty.channel.embedded.EmbeddedSocketAddress",
     "io.netty.handler.codec.compression.SnappyFramedDecoder$ChunkType",
     "io.netty.handler.codec.socks.SocksInitResponseDecoder$1",
     "io.netty.channel.SingleThreadEventLoop",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySpliterator",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Action",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceKeysTask",
     "io.netty.handler.codec.socks.UnknownSocksResponse",
     "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelector",
     "io.netty.channel.udt.nio.NioUdtMessageConnectorChannel",
     "io.netty.channel.socket.ChannelInputShutdownEvent",
     "io.netty.handler.ssl.util.InsecureTrustManagerFactory$1",
     "io.netty.handler.codec.MessageToMessageCodec$2",
     "io.netty.handler.codec.MessageToMessageCodec$1",
     "io.netty.util.ResourceLeak",
     "io.netty.channel.unix.UnixChannel",
     "io.netty.handler.ssl.SslHandler$3",
     "io.netty.handler.codec.http.ComposedLastHttpContent",
     "io.netty.channel.epoll.EpollChannelConfig$1",
     "io.netty.handler.ssl.SslHandler$2",
     "io.netty.handler.codec.http.multipart.MixedFileUpload",
     "io.netty.handler.ssl.SslHandler$1",
     "io.netty.channel.ChannelFutureListener",
     "io.netty.handler.ssl.SslHandler$7",
     "io.netty.util.ThreadDeathWatcher$Watcher",
     "io.netty.handler.ssl.OpenSslServerContext$2",
     "io.netty.handler.ssl.SslHandler$6",
     "io.netty.handler.ssl.SslHandler$5",
     "io.netty.handler.ssl.OpenSslServerContext$1",
     "io.netty.handler.ssl.SslHandler$4",
     "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$2",
     "io.netty.buffer.ByteBufInputStream",
     "io.netty.handler.ssl.SslHandler$9",
     "io.netty.handler.ssl.SslHandler$8",
     "io.netty.channel.nio.AbstractNioChannel$NioUnsafe",
     "io.netty.handler.ssl.SupportedCipherSuiteFilter",
     "io.netty.handler.codec.socks.SocksInitResponse",
     "io.netty.handler.codec.socks.SocksAddressType",
     "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1",
     "io.netty.channel.EventLoopGroup",
     "io.netty.handler.codec.http.HttpClientCodec$1",
     "io.netty.handler.codec.serialization.ObjectEncoderOutputStream",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$1",
     "io.netty.channel.epoll.Epoll",
     "io.netty.channel.VoidChannelPromise",
     "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler",
     "io.netty.buffer.EmptyByteBuf",
     "io.netty.handler.codec.spdy.SpdySession$PendingWrite",
     "io.netty.handler.codec.haproxy.HAProxyProxiedProtocol$AddressFamily",
     "io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator",
     "io.netty.handler.codec.spdy.SpdyHeaders",
     "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder",
     "io.netty.handler.codec.spdy.SpdyWindowUpdateFrame",
     "io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe",
     "io.netty.util.concurrent.DefaultPromise$2",
     "io.netty.util.concurrent.DefaultPromise$1",
     "io.netty.buffer.ReadOnlyByteBuf",
     "io.netty.handler.codec.http.cors.CorsConfig$Builder",
     "io.netty.handler.codec.spdy.SpdyFrameDecoder$1",
     "io.netty.channel.epoll.EpollDatagramChannel$DatagramSocketAddress",
     "io.netty.handler.codec.compression.CompressionException",
     "io.netty.handler.codec.spdy.SpdyHttpEncoder",
     "io.netty.handler.codec.http.HttpMessage",
     "io.netty.handler.codec.serialization.ClassLoaderClassResolver",
     "io.netty.handler.codec.compression.ZlibEncoder",
     "io.netty.handler.stream.ChunkedWriteHandler$1",
     "io.netty.handler.codec.socks.SocksAuthResponseDecoder",
     "io.netty.handler.stream.ChunkedWriteHandler$2",
     "io.netty.util.concurrent.DefaultPromise$5",
     "io.netty.util.concurrent.DefaultPromise$4",
     "io.netty.channel.DefaultMessageSizeEstimator",
     "io.netty.handler.codec.compression.SnappyFramedDecoder",
     "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13",
     "io.netty.util.internal.MpscArrayQueueMidPad",
     "io.netty.util.concurrent.DefaultPromise$3",
     "io.netty.handler.codec.serialization.ObjectDecoderInputStream",
     "io.netty.handler.codec.spdy.SpdyFrameCodec",
     "io.netty.handler.stream.ChunkedWriteHandler$3",
     "io.netty.handler.stream.ChunkedWriteHandler$4",
     "io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State",
     "io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException",
     "io.netty.handler.codec.marshalling.MarshallingDecoder",
     "io.netty.handler.codec.spdy.SpdyGoAwayFrame",
     "io.netty.handler.codec.socks.SocksCmdResponse",
     "io.netty.util.ThreadDeathWatcher$Entry",
     "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedHttpRequest",
     "io.netty.channel.RecvByteBufAllocator",
     "io.netty.channel.socket.nio.ProtocolFamilyConverter$1",
     "io.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol",
     "io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder",
     "io.netty.util.concurrent.ProgressivePromise",
     "io.netty.channel.pool.ChannelPoolMap",
     "io.netty.channel.CompleteChannelFuture",
     "io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache",
     "io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator",
     "io.netty.handler.codec.spdy.DefaultSpdyHeaders$1",
     "io.netty.util.concurrent.SingleThreadEventExecutor$PurgeTask",
     "io.netty.channel.AddressedEnvelope",
     "io.netty.util.HashedWheelTimer$HashedWheelTimeout$1",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceValuesTask",
     "io.netty.channel.udt.UdtChannelOption",
     "io.netty.channel.PendingWriteQueue$PendingWrite$1",
     "io.netty.channel.epoll.EpollEventLoop",
     "io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder",
     "io.netty.handler.codec.spdy.SpdyFrameEncoder",
     "io.netty.handler.ssl.util.ThreadLocalInsecureRandom",
     "io.netty.handler.ssl.JdkSslContext$1",
     "io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadNoBackArrayException",
     "io.netty.util.internal.UnsafeAtomicIntegerFieldUpdater",
     "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1",
     "io.netty.handler.codec.compression.JdkZlibEncoder",
     "io.netty.handler.codec.compression.SnappyFramedDecoder$1",
     "io.netty.handler.codec.MessageToByteEncoder",
     "io.netty.handler.codec.socks.SocksResponseType",
     "io.netty.util.concurrent.MultithreadEventExecutorGroup$PowerOfTwoEventExecutorChooser",
     "io.netty.util.internal.chmv8.ForkJoinPool$Submitter",
     "io.netty.handler.ssl.OpenSsl",
     "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00",
     "io.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder",
     "io.netty.util.internal.UnsafeAtomicReferenceFieldUpdater",
     "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysTask",
     "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07",
     "io.netty.channel.Channel",
     "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1$1",
     "io.netty.handler.codec.http.cors.CorsConfig$DateValueGenerator",
     "io.netty.channel.sctp.oio.OioSctpChannel$1",
     "io.netty.channel.udt.nio.NioUdtMessageAcceptorChannel",
     "io.netty.util.internal.logging.InternalLoggerFactory",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterHashCode",
     "io.netty.channel.sctp.oio.OioSctpChannel$2",
     "io.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask",
     "io.netty.handler.codec.serialization.ObjectEncoder",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$1",
     "io.netty.channel.sctp.SctpServerChannelConfig",
     "io.netty.handler.codec.socks.SocksAuthRequestDecoder$State",
     "io.netty.channel.DefaultChannelConfig",
     "io.netty.channel.epoll.IovArrayThreadLocal",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$7",
     "io.netty.util.UniqueName",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$6",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$9",
     "io.netty.channel.nio.NioTask",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$8",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$3",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$2",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$5",
     "io.netty.channel.AbstractChannel$AbstractUnsafe$4",
     "io.netty.handler.codec.serialization.CompactObjectInputStream",
     "io.netty.channel.ChannelPromise",
     "io.netty.util.Recycler$WeakOrderQueue",
     "io.netty.channel.local.LocalChannel",
     "io.netty.channel.pool.FixedChannelPool",
     "io.netty.handler.ssl.ApplicationProtocolNegotiationHandler",
     "io.netty.handler.codec.http.ServerCookieEncoder",
     "io.netty.bootstrap.AbstractBootstrap",
     "io.netty.util.internal.chmv8.Striped64",
     "io.netty.util.HashedWheelTimer$1",
     "io.netty.handler.codec.LengthFieldPrepender",
     "io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe$1",
     "io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe$2",
     "io.netty.channel.group.ChannelGroup",
     "io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe$3",
     "io.netty.channel.epoll.EpollDomainSocketChannel$1",
     "io.netty.channel.ChannelInitializer",
     "io.netty.handler.codec.spdy.SpdyVersion",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView",
     "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator",
     "io.netty.util.internal.AppendableCharSequence",
     "io.netty.channel.ChannelOutboundBuffer",
     "io.netty.handler.codec.haproxy.HAProxyMessageDecoder",
     "io.netty.channel.udt.nio.NioUdtProvider$1",
     "io.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory",
     "io.netty.buffer.PoolChunkMetric",
     "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector",
     "io.netty.channel.DefaultChannelPipeline",
     "io.netty.handler.codec.socks.SocksAuthResponse",
     "io.netty.handler.codec.Delimiters",
     "io.netty.handler.codec.http.HttpContentCompressor",
     "io.netty.handler.codec.socks.SocksCmdResponse$1",
     "io.netty.handler.codec.spdy.DefaultSpdyStreamFrame",
     "io.netty.handler.codec.http.HttpVersion",
     "io.netty.handler.codec.haproxy.HAProxyProxiedProtocol",
     "io.netty.handler.ssl.OpenSslEngine",
     "io.netty.util.internal.ConcurrentCircularArrayQueueL0Pad",
     "io.netty.handler.codec.serialization.ReferenceMap",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask",
     "io.netty.channel.epoll.EpollServerSocketChannelConfig",
     "io.netty.util.DefaultAttributeMap$DefaultAttribute",
     "io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise",
     "io.netty.util.internal.RecyclableArrayList",
     "io.netty.handler.codec.socks.SocksMessage",
     "io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior",
     "io.netty.channel.socket.DatagramChannelConfig",
     "io.netty.channel.sctp.nio.NioSctpServerChannel",
     "io.netty.util.internal.MpscArrayQueueL2Pad",
     "io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceOutTask",
     "io.netty.buffer.SlicedByteBuf",
     "io.netty.channel.udt.UdtServerChannel",
     "io.netty.handler.codec.MessageToMessageDecoder",
     "io.netty.channel.group.ChannelMatchers$InstanceMatcher",
     "io.netty.handler.codec.http.cors.CorsConfig$ConstantValueGenerator",
     "io.netty.channel.epoll.EpollDomainSocketChannel$EpollDomainUnsafe$1",
     "io.netty.channel.PendingWriteQueue",
     "io.netty.channel.embedded.EmbeddedChannel",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8",
     "io.netty.channel.group.ChannelMatchers$CompositeMatcher",
     "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException",
     "io.netty.channel.ChannelFuture",
     "io.netty.handler.codec.http.multipart.InternalAttribute",
     "io.netty.handler.codec.spdy.SpdyHttpResponseStreamIdHandler",
     "io.netty.handler.ssl.JdkSslServerContext",
     "io.netty.handler.codec.http.DefaultLastHttpContent",
     "io.netty.channel.ChannelConfig",
     "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$IncompatibleDataDecoderException",
     "io.netty.handler.codec.socks.SocksCommonUtils",
     "io.netty.handler.codec.CorruptedFrameException",
     "io.netty.util.concurrent.FailedFuture",
     "io.netty.util.concurrent.GlobalEventExecutor$PurgeTask",
     "io.netty.util.internal.SystemPropertyUtil$1",
     "io.netty.handler.codec.http.HttpResponseDecoder",
     "io.netty.channel.pool.FixedChannelPool$AcquireTask",
     "io.netty.util.IllegalReferenceCountException",
     "io.netty.channel.sctp.nio.NioSctpChannel",
     "io.netty.handler.codec.spdy.DefaultSpdyGoAwayFrame",
     "io.netty.handler.codec.http.Cookie",
     "io.netty.handler.codec.socks.SocksAuthRequest",
     "io.netty.util.internal.logging.CommonsLoggerFactory",
     "io.netty.buffer.ByteBufUtil$1",
     "io.netty.handler.ssl.JdkApplicationProtocolNegotiator",
     "io.netty.handler.stream.ChunkedWriteHandler",
     "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder",
     "io.netty.buffer.ByteBufHolder",
     "io.netty.handler.codec.rtsp.RtspRequestDecoder",
     "io.netty.channel.DefaultMessageSizeEstimator$1",
     "io.netty.handler.timeout.IdleState",
     "io.netty.handler.codec.socks.SocksAuthRequestDecoder$1",
     "io.netty.channel.nio.NioEventLoop$1",
     "io.netty.util.concurrent.AbstractEventExecutorGroup",
     "io.netty.handler.codec.socks.SocksAuthRequestDecoder",
     "io.netty.util.concurrent.MultithreadEventExecutorGroup$EventExecutorChooser",
     "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler",
     "io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode",
     "io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder",
     "io.netty.handler.codec.http.HttpHeaders$Values",
     "io.netty.channel.ChannelPipelineException",
     "io.netty.handler.codec.serialization.ClassResolvers",
     "io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1",
     "io.netty.handler.codec.string.StringDecoder",
     "io.netty.channel.socket.nio.NioDatagramChannel",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun",
     "io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException",
     "io.netty.handler.codec.http.HttpRequestEncoder",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView",
     "io.netty.handler.codec.spdy.SpdyHttpHeaders$Names",
     "io.netty.util.internal.LongCounter",
     "io.netty.handler.traffic.GlobalTrafficShapingHandler",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedMappingTask",
     "io.netty.handler.codec.rtsp.RtspVersions",
     "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory",
     "io.netty.handler.ssl.JdkSslSession",
     "io.netty.channel.udt.UdtChannelConfig",
     "io.netty.channel.epoll.EpollEventLoopGroup",
     "io.netty.handler.codec.http.websocketx.CloseWebSocketFrame",
     "io.netty.channel.ChannelMetadata",
     "io.netty.channel.epoll.Native$NativeInetAddress",
     "io.netty.buffer.SimpleLeakAwareByteBuf",
     "io.netty.channel.ChannelOutboundBuffer$1",
     "io.netty.util.Recycler$1",
     "io.netty.channel.ChannelOutboundBuffer$2",
     "io.netty.util.Recycler$2",
     "io.netty.channel.ChannelOutboundBuffer$3",
     "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner",
     "io.netty.util.Attribute",
     "io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask",
     "io.netty.channel.ThreadPerChannelEventLoopGroup",
     "io.netty.buffer.PoolThreadCache$MemoryRegionCache$1",
     "io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder",
     "io.netty.util.concurrent.DefaultFutureListeners",
     "io.netty.handler.codec.http.websocketx.TextWebSocketFrame",
     "io.netty.buffer.PooledHeapByteBuf",
     "io.netty.handler.ssl.SslContextBuilder",
     "io.netty.channel.epoll.EpollTcpInfo",
     "io.netty.util.internal.MpscLinkedQueuePad1",
     "io.netty.channel.epoll.EpollDatagramChannelConfig",
     "io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder",
     "io.netty.util.internal.MpscLinkedQueuePad0",
     "io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf",
     "io.netty.handler.codec.spdy.DefaultSpdyWindowUpdateFrame",
     "io.netty.handler.codec.sctp.SctpOutboundByteStreamHandler",
     "io.netty.buffer.UnreleasableByteBuf",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesTask",
     "io.netty.channel.rxtx.RxtxChannelConfig$Stopbits",
     "io.netty.util.internal.ConcurrentSet",
     "io.netty.channel.udt.DefaultUdtServerChannelConfig",
     "io.netty.util.concurrent.GlobalEventExecutor",
     "io.netty.channel.DefaultChannelProgressivePromise",
     "io.netty.buffer.ReadOnlyByteBufferBuf",
     "io.netty.handler.ssl.ApplicationProtocolConfig$Protocol",
     "io.netty.util.internal.Cleaner0",
     "io.netty.handler.codec.sctp.SctpMessageToMessageDecoder",
     "io.netty.util.internal.PlatformDependent",
     "io.netty.channel.rxtx.DefaultRxtxChannelConfig",
     "io.netty.handler.codec.spdy.SpdySessionHandler",
     "io.netty.channel.udt.nio.NioUdtByteRendezvousChannel",
     "io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInChannelTask",
     "io.netty.channel.rxtx.RxtxChannel$RxtxUnsafe",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachEntryTask",
     "io.netty.channel.ChannelHandlerAdapter",
     "io.netty.handler.ssl.OpenSslEngineMap",
     "io.netty.handler.codec.http.multipart.InterfaceHttpData",
     "io.netty.channel.EventLoop",
     "io.netty.channel.nio.AbstractNioMessageChannel",
     "io.netty.buffer.PoolArenaMetric",
     "io.netty.channel.nio.NioEventLoopGroup",
     "io.netty.buffer.PooledDirectByteBuf$1",
     "io.netty.handler.codec.socks.SocksAuthResponseDecoder$1",
     "io.netty.util.Version",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt",
     "io.netty.handler.ssl.CipherSuiteConverter",
     "io.netty.channel.local.LocalEventLoopGroup",
     "io.netty.handler.codec.http.cookie.DefaultCookie",
     "io.netty.channel.PendingWriteQueue$1",
     "io.netty.handler.codec.spdy.SpdyHeaders$1",
     "io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble",
     "io.netty.util.collection.IntObjectHashMap$IteratorImpl",
     "io.netty.buffer.PooledUnsafeDirectByteBuf",
     "io.netty.handler.ssl.JdkAlpnSslEngine$2",
     "io.netty.channel.epoll.EpollChannelOption",
     "io.netty.handler.ssl.JdkAlpnSslEngine$1",
     "io.netty.handler.ssl.OpenSslEngineMap$1",
     "io.netty.util.collection.IntObjectMap",
     "io.netty.channel.AdaptiveRecvByteBufAllocator",
     "io.netty.channel.AbstractChannelHandlerContext$WriteTask$1",
     "io.netty.channel.epoll.IovArrayThreadLocal$1",
     "io.netty.channel.local.LocalEventLoop",
     "io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe",
     "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelectionListener",
     "io.netty.handler.codec.http.websocketx.WebSocketUtil",
     "io.netty.handler.traffic.AbstractTrafficShapingHandler",
     "io.netty.handler.ssl.util.SelfSignedCertificate",
     "io.netty.handler.ssl.OpenSslContext",
     "io.netty.handler.timeout.TimeoutException",
     "io.netty.handler.codec.rtsp.RtspResponseDecoder",
     "io.netty.channel.oio.OioByteStreamChannel$2",
     "io.netty.handler.codec.compression.ZlibWrapper",
     "io.netty.channel.oio.OioByteStreamChannel$1",
     "io.netty.bootstrap.AbstractBootstrap$BootstrapChannelFactory",
     "io.netty.handler.codec.http.FullHttpResponse",
     "io.netty.handler.ssl.SslProvider",
     "io.netty.channel.sctp.oio.OioSctpServerChannel",
     "io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete1",
     "io.netty.handler.codec.haproxy.HAProxyCommand",
     "io.netty.channel.group.ChannelMatchers$InvertMatcher",
     "io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete2",
     "io.netty.handler.codec.http.multipart.MixedAttribute",
     "io.netty.handler.codec.spdy.SpdyHttpCodec",
     "io.netty.util.concurrent.ScheduledFutureTask",
     "io.netty.handler.codec.spdy.SpdyHeadersFrame",
     "io.netty.buffer.PooledSlicedByteBuf$1",
     "io.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderIterator",
     "io.netty.channel.socket.oio.OioServerSocketChannel",
     "io.netty.channel.ChannelInboundHandler",
     "io.netty.channel.epoll.EpollMode",
     "io.netty.channel.local.LocalAddress",
     "io.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode",
     "io.netty.handler.codec.marshalling.ChannelBufferByteInput",
     "io.netty.channel.DefaultChannelHandlerContext",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySpliterator",
     "io.netty.handler.codec.http.DefaultHttpHeaders$1",
     "io.netty.handler.codec.ProtocolDetectionState",
     "io.netty.channel.socket.SocketChannel",
     "io.netty.buffer.PooledDirectByteBuf",
     "io.netty.handler.codec.spdy.DefaultSpdyPingFrame",
     "io.netty.handler.codec.http.cookie.Cookie",
     "io.netty.util.Recycler",
     "io.netty.channel.AbstractChannelHandlerContext$2",
     "io.netty.channel.AbstractChannelHandlerContext$1",
     "io.netty.channel.AbstractChannelHandlerContext$4",
     "io.netty.channel.AbstractChannelHandlerContext$3",
     "io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler",
     "io.netty.channel.AbstractChannelHandlerContext$6",
     "io.netty.channel.AbstractChannelHandlerContext$5",
     "io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent",
     "io.netty.channel.AbstractChannelHandlerContext$8",
     "io.netty.handler.codec.serialization.ClassResolver",
     "io.netty.handler.codec.http.HttpContentEncoder",
     "io.netty.handler.codec.http.HttpContentEncoder$Result",
     "io.netty.channel.AbstractChannelHandlerContext$7",
     "io.netty.channel.AbstractChannelHandlerContext$9",
     "io.netty.buffer.UnpooledByteBufAllocator",
     "io.netty.handler.ssl.JdkSslEngine",
     "io.netty.handler.codec.compression.Crc32c",
     "io.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider",
     "io.netty.handler.codec.spdy.SpdyFrameCodec$1",
     "io.netty.util.internal.chmv8.LongAdderV8",
     "io.netty.handler.codec.serialization.CachingClassResolver",
     "io.netty.handler.codec.compression.JZlibEncoder$3",
     "io.netty.util.concurrent.ProgressiveFuture",
     "io.netty.handler.ssl.OpenSslSessionContext$1",
     "io.netty.handler.codec.compression.JZlibEncoder$1",
     "io.netty.handler.codec.compression.JZlibEncoder$2",
     "io.netty.util.internal.chmv8.ForkJoinTask$1",
     "io.netty.channel.AbstractChannel",
     "io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler",
     "io.netty.util.internal.logging.AbstractInternalLogger$1",
     "io.netty.channel.socket.ServerSocketChannel",
     "io.netty.util.internal.PendingWrite$1",
     "io.netty.util.internal.EmptyArrays",
     "io.netty.handler.codec.http.websocketx.PongWebSocketFrame",
     "io.netty.channel.rxtx.RxtxChannel$1",
     "io.netty.buffer.PooledUnsafeDirectByteBuf$1",
     "io.netty.handler.codec.http.cors.CorsHandler",
     "io.netty.handler.codec.haproxy.HAProxyConstants",
     "io.netty.util.internal.ConcurrentCircularArrayQueue",
     "io.netty.handler.codec.rtsp.RtspHeaders",
     "io.netty.channel.group.DefaultChannelGroupFuture$1",
     "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$ToSend",
     "io.netty.handler.ssl.SslContext",
     "io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder",
     "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe",
     "io.netty.handler.codec.http.websocketx.PingWebSocketFrame",
     "io.netty.channel.udt.nio.NioUdtByteConnectorChannel$1",
     "io.netty.handler.codec.marshalling.ThreadLocalUnmarshallerProvider",
     "io.netty.handler.codec.http.HttpHeaderEntity",
     "io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame",
     "io.netty.buffer.PoolArena$1",
     "io.netty.bootstrap.Bootstrap",
     "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker",
     "io.netty.buffer.PoolArena$DirectArena",
     "io.netty.channel.local.LocalChannel$LocalUnsafe",
     "io.netty.handler.codec.http.cookie.ServerCookieEncoder",
     "io.netty.handler.codec.compression.Snappy$State",
     "io.netty.handler.codec.base64.Base64Dialect",
     "io.netty.handler.codec.spdy.SpdyHeaderBlockEncoder",
     "io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator",
     "io.netty.handler.codec.compression.JZlibDecoder",
     "io.netty.channel.AbstractChannelHandlerContext$11",
     "io.netty.channel.AbstractChannelHandlerContext$10",
     "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1",
     "io.netty.channel.AbstractChannelHandlerContext$13",
     "io.netty.channel.AbstractChannelHandlerContext$12",
     "io.netty.handler.ssl.OpenSslContext$AbstractCertificateVerifier",
     "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2",
     "io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe",
     "io.netty.handler.codec.http.DefaultHttpRequest",
     "io.netty.channel.embedded.EmbeddedChannel$LastInboundHandler",
     "io.netty.channel.epoll.AbstractEpollServerChannel",
     "io.netty.handler.ssl.util.FingerprintTrustManagerFactory",
     "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$EndOfDataDecoderException",
     "io.netty.util.internal.ObjectUtil",
     "io.netty.util.Mapping",
     "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry",
     "io.netty.buffer.AbstractByteBuf",
     "io.netty.handler.codec.DecoderException",
     "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
     "io.netty.channel.epoll.AbstractEpollChannel$1",
     "io.netty.buffer.UnpooledUnsafeDirectByteBuf",
     "io.netty.handler.codec.ReplayingDecoderByteBuf",
     "io.netty.handler.codec.spdy.SpdyFrameDecoder",
     "io.netty.handler.codec.ByteToMessageCodec",
     "io.netty.handler.codec.TooLongFrameException",
     "io.netty.handler.codec.http.cookie.CookieEncoder",
     "io.netty.util.ResourceLeakDetector",
     "io.netty.handler.codec.protobuf.ProtobufDecoder",
     "io.netty.util.concurrent.PromiseAggregator",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong",
     "io.netty.util.concurrent.DefaultPromise",
     "io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior",
     "io.netty.channel.AbstractChannelHandlerContext$15",
     "io.netty.buffer.PooledHeapByteBuf$1",
     "io.netty.channel.AbstractChannelHandlerContext$14",
     "io.netty.handler.codec.marshalling.LimitingByteInput",
     "io.netty.channel.AbstractChannelHandlerContext$16",
     "io.netty.handler.codec.spdy.SpdyHeaderBlockJZlibEncoder",
     "io.netty.handler.codec.http.multipart.DiskAttribute",
     "io.netty.handler.codec.spdy.SpdyDataFrame",
     "io.netty.util.concurrent.MultithreadEventExecutorGroup",
     "io.netty.handler.stream.ChunkedFile",
     "io.netty.util.AbstractReferenceCounted",
     "io.netty.handler.traffic.GlobalTrafficShapingHandler$1",
     "io.netty.channel.epoll.EpollSocketChannelConfig",
     "io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser",
     "io.netty.channel.EventLoopException",
     "io.netty.channel.DefaultChannelPipeline$HeadContext",
     "io.netty.util.concurrent.FastThreadLocal",
     "io.netty.handler.ssl.SslHandshakeCompletionEvent",
     "io.netty.handler.codec.http.CookieUtil",
     "io.netty.handler.codec.spdy.DefaultSpdySynReplyFrame",
     "io.netty.handler.traffic.GlobalChannelTrafficCounter",
     "io.netty.handler.codec.socks.SocksAuthScheme",
     "io.netty.handler.traffic.TrafficCounter$1",
     "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus",
     "io.netty.util.internal.IntegerHolder",
     "io.netty.handler.codec.LengthFieldBasedFrameDecoder",
     "io.netty.handler.codec.base64.Base64Decoder",
     "io.netty.handler.ssl.SslConstants",
     "io.netty.handler.timeout.ReadTimeoutHandler$ReadTimeoutTask",
     "io.netty.channel.oio.OioEventLoopGroup",
     "io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$1",
     "io.netty.channel.ChannelPromiseNotifier",
     "io.netty.handler.codec.spdy.SpdySynStreamFrame",
     "io.netty.util.internal.SystemPropertyUtil",
     "io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism",
     "io.netty.channel.AbstractChannel$CloseFuture",
     "io.netty.handler.timeout.IdleStateHandler",
     "io.netty.handler.codec.haproxy.HAProxyMessage",
     "io.netty.buffer.PoolChunkListMetric",
     "io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder",
     "io.netty.handler.codec.rtsp.RtspResponseStatuses",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt",
     "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToDoubleTask",
     "io.netty.handler.codec.socks.SocksInitRequestDecoder",
     "io.netty.channel.sctp.DefaultSctpChannelConfig",
     "io.netty.channel.DefaultChannelPipeline$6",
     "io.netty.bootstrap.ServerBootstrap",
     "io.netty.channel.DefaultChannelPipeline$5",
     "io.netty.channel.ChannelHandler",
     "io.netty.channel.DefaultChannelPipeline$2",
     "io.netty.util.Signal",
     "io.netty.channel.DefaultChannelPipeline$1",
     "io.netty.channel.DefaultChannelPipeline$4",
     "io.netty.channel.DefaultChannelPipeline$3"
    ],
    "usedTypes": [
     "io.netty.util.concurrent.EventExecutor",
     "io.netty.channel.socket.nio.NioSocketChannel",
     "io.netty.channel.socket.SocketChannelConfig",
     "io.netty.channel.ChannelOption",
     "io.netty.handler.logging.LoggingHandler",
     "io.netty.buffer.Unpooled",
     "io.netty.channel.ChannelHandlerContext",
     "io.netty.handler.codec.ReplayingDecoder",
     "io.netty.buffer.ByteBuf",
     "io.netty.handler.timeout.IdleState",
     "io.netty.channel.ChannelFutureListener",
     "io.netty.handler.codec.ByteToMessageDecoder",
     "io.netty.channel.socket.SocketChannel",
     "io.netty.handler.codec.DecoderException",
     "io.netty.handler.timeout.IdleStateEvent",
     "io.netty.channel.EventLoopGroup",
     "io.netty.channel.ChannelHandler$Sharable",
     "io.netty.channel.ChannelInitializer",
     "io.netty.channel.ChannelHandlerAdapter",
     "io.netty.channel.socket.nio.NioServerSocketChannel",
     "io.netty.channel.ChannelPipeline",
     "io.netty.channel.EventLoop",
     "io.netty.channel.nio.NioEventLoopGroup",
     "io.netty.channel.ChannelFuture",
     "io.netty.channel.Channel",
     "io.netty.bootstrap.Bootstrap",
     "io.netty.handler.timeout.IdleStateHandler",
     "io.netty.handler.logging.LogLevel",
     "io.netty.channel.SimpleChannelInboundHandler",
     "io.netty.util.ReferenceCountUtil",
     "io.netty.bootstrap.ServerBootstrap",
     "io.netty.channel.ChannelHandler",
     "io.netty.util.concurrent.Future"
    ],
    "usageRatio": 0.02526799387442573,
    "children": []
   },
   {
    "id": "com.spotify:folsom:jar:0.7.1:compile",
    "coordinates": "com.spotify:folsom:0.7.1",
    "groupId": "com.spotify",
    "artifactId": "folsom",
    "version": "0.7.1",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 139515,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "com.spotify.folsom.client.OpCode",
     "com.spotify.folsom.client.binary.MultigetRequest",
     "com.spotify.folsom.MemcacheStatus",
     "com.spotify.folsom.client.TransformerUtil$ListResultUnwrapper",
     "com.spotify.folsom.ketama.SrvKetamaClient$HostAndPortComparator",
     "com.spotify.folsom.reconnect.ReconnectingClient$2",
     "com.spotify.folsom.retry.RetryingClient$1",
     "com.spotify.folsom.reconnect.ReconnectingClient$3",
     "com.spotify.folsom.reconnect.ReconnectingClient$1",
     "com.spotify.folsom.client.DefaultRawMemcacheClient$RequestWritePromise",
     "com.spotify.folsom.reconnect.ReconnectingClient$2$1",
     "com.spotify.folsom.client.ascii.GetRequest",
     "com.spotify.folsom.reconnect.ReconnectingClient",
     "com.spotify.folsom.client.binary.NoopRequest",
     "com.spotify.folsom.MemcacheClientBuilder$DefaultExecutor",
     "com.spotify.folsom.client.binary.DefaultBinaryMemcacheClient",
     "com.spotify.folsom.client.TimeoutChecker",
     "com.spotify.folsom.client.TransformerUtil$ResultDecoder",
     "com.spotify.folsom.client.ascii.SetRequest$1",
     "com.spotify.folsom.reconnect.ReconnectingClient$Connector",
     "com.spotify.folsom.client.ascii.DeleteRequest",
     "com.spotify.folsom.Metrics",
     "com.spotify.folsom.client.ascii.DefaultAsciiMemcacheClient",
     "com.spotify.folsom.client.ascii.SetRequest",
     "com.spotify.folsom.client.binary.IncrRequest",
     "com.spotify.folsom.UncaughtExceptionHandler",
     "com.spotify.folsom.client.binary.GetRequest",
     "com.spotify.folsom.client.binary.TouchRequest",
     "com.spotify.folsom.client.Utils$2",
     "com.spotify.folsom.client.Utils$1",
     "com.spotify.folsom.client.AbstractMultiMemcacheClient",
     "com.spotify.folsom.ConnectFuture",
     "com.spotify.folsom.retry.RetryingClient",
     "com.spotify.folsom.MemcacheClientBuilder$DefaultScheduledExecutor",
     "com.spotify.folsom.client.YammerMetrics$7",
     "com.spotify.folsom.client.YammerMetrics$6",
     "com.spotify.folsom.client.YammerMetrics$3",
     "com.spotify.folsom.client.YammerMetrics$2",
     "com.spotify.folsom.client.YammerMetrics$5",
     "com.spotify.folsom.client.YammerMetrics$4",
     "com.spotify.folsom.transcoder.StringTranscoder",
     "com.spotify.folsom.ObservableClient",
     "com.spotify.folsom.ketama.SrvKetamaClient$ShutdownJob",
     "com.spotify.folsom.client.YammerMetrics$1",
     "com.spotify.folsom.transcoder.ByteArrayTranscoder",
     "com.spotify.folsom.MemcacheClientBuilder$1",
     "com.spotify.folsom.client.TcpTuningHandler",
     "com.spotify.folsom.client.ascii.ValueResponse",
     "com.spotify.folsom.ketama.Continuum",
     "com.spotify.folsom.client.Utils",
     "com.spotify.folsom.client.BatchFlusher",
     "com.spotify.folsom.client.binary.BinaryRequest",
     "com.spotify.folsom.AbstractRawMemcacheClient",
     "com.spotify.folsom.client.ascii.AsciiResponse",
     "com.spotify.folsom.BackoffFunction",
     "com.spotify.folsom.client.ascii.SetRequest$Operation",
     "com.spotify.folsom.Metrics$OutstandingRequestsGauge",
     "com.spotify.folsom.transcoder.SerializableObjectTranscoder",
     "com.spotify.folsom.client.DefaultRawMemcacheClient",
     "com.spotify.folsom.client.NoopMetrics",
     "com.spotify.folsom.client.NotConnectedClient",
     "com.spotify.folsom.client.ascii.AsciiRequest",
     "com.spotify.folsom.MemcacheClientBuilder",
     "com.spotify.folsom.client.DefaultRawMemcacheClient$2",
     "com.spotify.folsom.client.YammerMetrics",
     "com.spotify.folsom.client.DefaultRawMemcacheClient$1",
     "com.spotify.folsom.client.GetRequest",
     "com.spotify.folsom.RawMemcacheClient",
     "com.spotify.folsom.client.DefaultRawMemcacheClient$3",
     "com.spotify.folsom.client.MemcacheEncoder",
     "com.spotify.folsom.MemcacheClient",
     "com.spotify.folsom.client.ascii.MultigetRequest",
     "com.spotify.folsom.client.SetRequest",
     "com.spotify.folsom.client.ascii.ValueAsciiResponse",
     "com.spotify.folsom.client.MultiRequest",
     "com.spotify.folsom.client.TransformerUtil$1",
     "com.spotify.folsom.ketama.SrvKetamaClient$Connector",
     "com.spotify.folsom.client.binary.BinaryMemcacheDecoder",
     "com.spotify.folsom.ketama.KetamaMemcacheClient$Assembler",
     "com.spotify.folsom.client.binary.BinaryResponse",
     "com.spotify.folsom.ConnectionChangeListener",
     "com.spotify.folsom.client.ascii.AsciiResponse$Type",
     "com.spotify.folsom.client.TransformerUtil$ResultUnwrapper",
     "com.spotify.folsom.client.Request",
     "com.spotify.folsom.ketama.AddressAndClient",
     "com.spotify.folsom.client.ascii.NumericAsciiResponse",
     "com.spotify.folsom.GetResult",
     "com.spotify.folsom.client.CallbackSettableFuture",
     "com.spotify.folsom.client.ascii.DeleteRequest$1",
     "com.spotify.folsom.client.BatchFlusher$1",
     "com.spotify.folsom.client.BatchFlusher$2",
     "com.spotify.folsom.client.TransformerUtil$ListResultDecoder",
     "com.spotify.folsom.client.SimpleSizeEstimator",
     "com.spotify.folsom.client.ascii.AsciiMemcacheDecoder",
     "com.spotify.folsom.MemcacheClosedException",
     "com.spotify.folsom.Transcoder",
     "com.spotify.folsom.ketama.SrvKetamaClient",
     "com.spotify.folsom.client.binary.ResponsePacket",
     "com.spotify.folsom.client.ascii.TouchRequest",
     "com.spotify.folsom.client.binary.SetRequest",
     "com.spotify.folsom.ketama.Hasher",
     "com.spotify.folsom.client.DefaultRawMemcacheClient$ConnectionHandler$1",
     "com.spotify.folsom.AsciiMemcacheClient",
     "com.spotify.folsom.BinaryMemcacheClient",
     "com.spotify.folsom.ketama.SrvKetamaClient$MyConnectionChangeListener",
     "com.spotify.folsom.client.binary.DeleteRequest",
     "com.spotify.folsom.MemcacheClientBuilder$DefaultDnsResolver",
     "com.spotify.folsom.client.DefaultRawMemcacheClient$ConnectionHandler",
     "com.spotify.folsom.MemcacheOverloadedException",
     "com.spotify.folsom.client.TransformerUtil",
     "com.spotify.folsom.client.ascii.IncrRequest",
     "com.spotify.folsom.ketama.SrvKetamaClient$1",
     "com.spotify.folsom.roundrobin.RoundRobinMemcacheClient",
     "com.spotify.folsom.ketama.SrvKetamaClient$2",
     "com.spotify.folsom.ketama.KetamaMemcacheClient",
     "com.spotify.folsom.ExponentialBackoff"
    ],
    "usedTypes": [
     "com.spotify.folsom.Transcoder",
     "com.spotify.folsom.MemcacheClientBuilder",
     "com.spotify.folsom.MemcacheClient"
    ],
    "usageRatio": 0.02586206896551724,
    "children": [
     {
      "id": "com.google.guava:guava:jar:18.0:compile",
      "coordinates": "com.google.guava:guava:18.0",
      "groupId": "com.google.guava",
      "artifactId": "guava",
      "version": "18.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": true,
      "size": 2256213,
      "type": "direct",
      "status": "used",
      "parent": "com.spotify:folsom:jar:0.7.1:compile",
      "allTypes": [
       "com.google.common.reflect.TypeToken$SimpleTypeToken",
       "com.google.common.collect.ImmutableMultimap$Itr",
       "com.google.common.collect.HashBiMap$Inverse$1",
       "com.google.common.collect.Maps$ValueDifferenceImpl",
       "com.google.common.collect.ImmutableMultimap$FieldSettersHolder",
       "com.google.common.collect.DenseImmutableTable$Column",
       "com.google.common.collect.PeekingIterator",
       "com.google.common.collect.FilteredKeyListMultimap",
       "com.google.common.collect.MapMakerInternalMap$EvictionQueue$2",
       "com.google.common.collect.ImmutableClassToInstanceMap$Builder",
       "com.google.common.primitives.SignedBytes$LexicographicalComparator",
       "com.google.common.base.Predicates$ContainsPatternPredicate",
       "com.google.common.collect.MapMakerInternalMap$EvictionQueue$1",
       "com.google.common.collect.LinkedListMultimap$3$1",
       "com.google.common.collect.RegularImmutableMap",
       "com.google.common.base.Objects$ToStringHelper",
       "com.google.common.reflect.ClassPath$1",
       "com.google.common.collect.AbstractSortedKeySortedSetMultimap",
       "com.google.common.collect.TreeTraverser$PostOrderIterator",
       "com.google.common.collect.MultimapBuilder$SetMultimapBuilder",
       "com.google.common.cache.CacheBuilderSpec",
       "com.google.common.base.Joiner",
       "com.google.common.hash.Hashing$ChecksumType$2",
       "com.google.common.hash.Hashing$ChecksumType$1",
       "com.google.common.collect.DenseImmutableTable$ColumnMap",
       "com.google.common.collect.AbstractMultimap$Values",
       "com.google.common.net.HostSpecifier",
       "com.google.thirdparty.publicsuffix.PublicSuffixType",
       "com.google.common.util.concurrent.AbstractIdleService$3",
       "com.google.common.collect.Lists$Partition",
       "com.google.common.hash.Hashing$SipHash24Holder",
       "com.google.common.io.Resources$1",
       "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1",
       "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2",
       "com.google.common.collect.Sets$PowerSet$1",
       "com.google.common.util.concurrent.AbstractIdleService$1",
       "com.google.common.util.concurrent.AbstractIdleService$2",
       "com.google.common.base.Functions",
       "com.google.common.collect.MapMakerInternalMap$Strength",
       "com.google.common.math.DoubleUtils",
       "com.google.common.collect.Constraints$ConstrainedListIterator",
       "com.google.common.collect.ImmutableSortedSet$Builder",
       "com.google.common.util.concurrent.Service",
       "com.google.common.collect.Multimaps$UnmodifiableMultimap",
       "com.google.common.cache.RemovalListeners",
       "com.google.common.collect.Maps$FilteredEntryMap$EntrySet",
       "com.google.common.collect.StandardTable",
       "com.google.common.collect.ImmutableSortedMultiset$SerializedForm",
       "com.google.common.cache.Striped64$Cell",
       "com.google.common.base.Converter$1",
       "com.google.common.collect.ImmutableEntry",
       "com.google.common.base.Joiner$1",
       "com.google.common.io.Closer$SuppressingSuppressor",
       "com.google.common.base.Joiner$2",
       "com.google.common.collect.StandardTable$1",
       "com.google.common.util.concurrent.SimpleTimeLimiter",
       "com.google.common.base.Joiner$3",
       "com.google.common.collect.AbstractTable$1",
       "com.google.common.primitives.Chars$CharArrayAsList",
       "com.google.common.base.CharMatcher$BitSetMatcher",
       "com.google.common.base.FinalizableReferenceQueue$SystemLoader",
       "com.google.common.io.LineReader$1",
       "com.google.common.collect.Lists$AbstractListWrapper",
       "com.google.common.collect.AbstractMapBasedMultiset",
       "com.google.common.math.package-info",
       "com.google.common.collect.Multisets$FilteredMultiset$1",
       "com.google.common.collect.DiscreteDomain$LongDomain",
       "com.google.common.collect.SortedLists$1",
       "com.google.common.hash.ChecksumHashFunction",
       "com.google.common.base.Equivalence$Identity",
       "com.google.common.collect.MapConstraints$ConstrainedEntries$1",
       "com.google.common.collect.EnumBiMap",
       "com.google.common.collect.AbstractNavigableMap$1",
       "com.google.common.base.AbstractIterator$1",
       "com.google.common.escape.Platform",
       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
       "com.google.common.collect.EmptyImmutableListMultimap",
       "com.google.common.collect.Collections2$FilteredCollection",
       "com.google.common.collect.ImmutableMultiset$SerializedForm",
       "com.google.common.reflect.TypeResolver$1",
       "com.google.common.collect.RegularImmutableTable$CellSet$1",
       "com.google.common.collect.FluentIterable$1",
       "com.google.common.collect.Maps$FilteredEntrySortedMap",
       "com.google.common.cache.CacheBuilderSpec$KeyStrengthParser",
       "com.google.common.collect.ArrayTable$ColumnMap",
       "com.google.common.collect.Iterators$PeekingImpl",
       "com.google.common.hash.Funnels$IntegerFunnel",
       "com.google.common.collect.ForwardingList",
       "com.google.common.collect.Multimaps$Keys$1",
       "com.google.common.escape.Escapers$Builder",
       "com.google.common.cache.LocalCache$Segment",
       "com.google.common.collect.HashBiMap",
       "com.google.common.collect.Maps$EntryTransformer",
       "com.google.common.collect.Ordering",
       "com.google.common.util.concurrent.SerializingExecutor$1",
       "com.google.common.io.ByteSource$ConcatenatedByteSource",
       "com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet",
       "com.google.common.collect.EnumMultiset",
       "com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser",
       "com.google.common.collect.AllEqualOrdering",
       "com.google.common.util.concurrent.CheckedFuture",
       "com.google.common.io.GwtWorkarounds$6",
       "com.google.common.reflect.Types$JavaVersion$3",
       "com.google.common.reflect.Types$JavaVersion$4",
       "com.google.common.reflect.Types$JavaVersion$1",
       "com.google.common.reflect.Types$JavaVersion$2",
       "com.google.common.util.concurrent.Striped$2",
       "com.google.common.io.GwtWorkarounds$1",
       "com.google.common.util.concurrent.Striped$1",
       "com.google.common.cache.CacheLoader$1",
       "com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder",
       "com.google.common.io.GwtWorkarounds$4",
       "com.google.common.collect.Lists$TwoPlusArrayList",
       "com.google.common.io.GwtWorkarounds$5",
       "com.google.common.collect.ForwardingImmutableMap",
       "com.google.common.io.GwtWorkarounds$2",
       "com.google.common.io.GwtWorkarounds$3",
       "com.google.common.io.ByteSource$1",
       "com.google.common.collect.Cut$1",
       "com.google.common.cache.LocalCache$Values",
       "com.google.common.cache.LocalCache$WeakValueReference",
       "com.google.common.collect.MapConstraints$ConstrainedMap",
       "com.google.common.util.concurrent.Futures$ChainingListenableFuture",
       "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2",
       "com.google.common.collect.RegularImmutableMap$1",
       "com.google.common.util.concurrent.Striped$PaddedSemaphore",
       "com.google.common.collect.SortedLists$KeyPresentBehavior$2",
       "com.google.common.collect.SortedLists$KeyPresentBehavior$1",
       "com.google.common.util.concurrent.ServiceManager$1",
       "com.google.common.collect.SortedLists$KeyPresentBehavior$4",
       "com.google.common.base.Equivalence$1",
       "com.google.common.collect.SortedLists$KeyPresentBehavior$3",
       "com.google.common.collect.SortedLists$KeyPresentBehavior$5",
       "com.google.common.util.concurrent.ServiceManager$2",
       "com.google.common.base.FinalizableReferenceQueue",
       "com.google.common.collect.Multimaps$UnmodifiableMultimap$1",
       "com.google.common.collect.Cut$BelowValue",
       "com.google.common.collect.ImmutableSetMultimap$Builder",
       "com.google.common.collect.ImmutableMapEntrySet",
       "com.google.common.collect.Multimaps",
       "com.google.common.collect.ClassToInstanceMap",
       "com.google.common.collect.ImmutableMultiset",
       "com.google.common.util.concurrent.Futures$ChainingListenableFuture$1",
       "com.google.common.collect.ImmutableMultimap$Keys",
       "com.google.common.collect.Multisets$AbstractEntry",
       "com.google.common.util.concurrent.UncheckedTimeoutException",
       "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator",
       "com.google.common.hash.Hasher",
       "com.google.common.io.ByteSource",
       "com.google.common.collect.ComputingConcurrentHashMap$ComputedReference",
       "com.google.common.primitives.UnsignedBytes",
       "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1",
       "com.google.common.util.concurrent.AbstractScheduledService$1$4",
       "com.google.common.base.CharMatcher$And",
       "com.google.common.util.concurrent.AbstractScheduledService$1$3",
       "com.google.common.util.concurrent.AbstractScheduledService$1$2",
       "com.google.common.collect.ForwardingNavigableMap",
       "com.google.common.util.concurrent.AbstractScheduledService$1$1",
       "com.google.common.util.concurrent.Striped$5",
       "com.google.common.util.concurrent.Striped$4",
       "com.google.common.util.concurrent.Striped$3",
       "com.google.common.collect.Sets$FilteredSortedSet",
       "com.google.common.collect.TreeRangeSet$1",
       "com.google.common.reflect.TypeResolver$TypeMappingIntrospector",
       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
       "com.google.common.base.FinalizablePhantomReference",
       "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1",
       "com.google.common.io.MultiInputStream",
       "com.google.common.base.Objects$ToStringHelper$ValueHolder",
       "com.google.common.collect.Maps$EntryFunction",
       "com.google.common.collect.AbstractTable$CellSet",
       "com.google.common.hash.Hashing$Sha256Holder",
       "com.google.common.collect.EmptyImmutableSortedSet",
       "com.google.common.collect.ImmutableEnumSet",
       "com.google.common.collect.AbstractMultimap$Entries",
       "com.google.common.collect.HashBiMap$EntrySet$1",
       "com.google.common.primitives.Doubles$LexicographicalComparator",
       "com.google.common.collect.ArrayTable",
       "com.google.common.base.Predicates$ContainsPatternFromStringPredicate",
       "com.google.common.base.Converter",
       "com.google.common.collect.LinkedListMultimap",
       "com.google.common.io.ByteSource$SlicedByteSource",
       "com.google.common.base.Suppliers$SupplierFunction",
       "com.google.common.io.CharSource$CharSequenceCharSource$1$1",
       "com.google.common.primitives.Doubles",
       "com.google.common.reflect.Types$WildcardTypeImpl",
       "com.google.common.collect.MapConstraints$ConstrainedEntrySet",
       "com.google.common.collect.ImmutableList$Builder",
       "com.google.common.util.concurrent.ThreadFactoryBuilder",
       "com.google.common.collect.DenseImmutableTable$RowMap",
       "com.google.common.collect.AbstractMultiset",
       "com.google.common.io.LineBuffer",
       "com.google.common.primitives.Shorts",
       "com.google.common.collect.AbstractTable$Values",
       "com.google.common.collect.CompoundOrdering",
       "com.google.common.collect.Iterators",
       "com.google.common.cache.AbstractCache$SimpleStatsCounter",
       "com.google.common.collect.MapMakerInternalMap$WeakEntry",
       "com.google.common.collect.HashBiMap$Inverse$InverseKeySet$1",
       "com.google.common.collect.Ordering$IncomparableValueException",
       "com.google.common.collect.ImmutableMultiset$1",
       "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1",
       "com.google.common.collect.Maps$TransformedEntriesMap$1",
       "com.google.common.reflect.Types$NativeTypeVariableEquals",
       "com.google.common.collect.Synchronized$SynchronizedMap",
       "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher",
       "com.google.common.cache.Striped64$1",
       "com.google.common.util.concurrent.UncaughtExceptionHandlers",
       "com.google.common.primitives.Doubles$DoubleConverter",
       "com.google.common.io.BaseEncoding$StandardBaseEncoding",
       "com.google.common.reflect.ImmutableTypeToInstanceMap",
       "com.google.common.base.CaseFormat$StringConverter",
       "com.google.common.collect.StandardTable$Column$EntrySet",
       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
       "com.google.common.collect.Tables$UnmodifiableTable",
       "com.google.common.cache.CacheBuilder$1",
       "com.google.common.cache.CacheBuilder$3",
       "com.google.common.collect.Iterators$MergingIterator",
       "com.google.common.cache.CacheBuilder$2",
       "com.google.common.base.Functions$ForMapWithDefault",
       "com.google.common.collect.ArrayTable$1$1",
       "com.google.common.collect.Collections2$OrderedPermutationIterator",
       "com.google.common.collect.Lists$RandomAccessPartition",
       "com.google.common.collect.Lists$RandomAccessReverseList",
       "com.google.common.collect.Multimaps$TransformedEntriesMultimap",
       "com.google.common.collect.SortedLists",
       "com.google.common.reflect.Types$ClassOwnership$1LocalClass",
       "com.google.common.collect.ImmutableRangeSet",
       "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1",
       "com.google.common.collect.AbstractSortedSetMultimap",
       "com.google.common.base.Functions$FunctionForMapNoDefault",
       "com.google.common.collect.ImmutableMultimap$Values",
       "com.google.common.base.Converter$1$1",
       "com.google.common.collect.ByFunctionOrdering",
       "com.google.common.cache.ForwardingLoadingCache",
       "com.google.common.collect.EmptyImmutableBiMap",
       "com.google.common.collect.ImmutableListMultimap$Builder",
       "com.google.common.collect.ImmutableSortedMap$SerializedForm",
       "com.google.common.collect.ForwardingSortedMap",
       "com.google.common.collect.Serialization",
       "com.google.common.collect.Tables$UnmodifiableRowSortedMap",
       "com.google.common.collect.ForwardingBlockingDeque",
       "com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues",
       "com.google.common.collect.Synchronized$SynchronizedMultimap",
       "com.google.common.primitives.UnsignedLong",
       "com.google.common.util.concurrent.ExecutionError",
       "com.google.common.io.CharSequenceReader",
       "com.google.common.primitives.UnsignedInts",
       "com.google.common.base.Enums",
       "com.google.common.collect.TreeTraverser$PreOrderIterator",
       "com.google.common.collect.Multisets$2$1",
       "com.google.common.collect.UnmodifiableListIterator",
       "com.google.common.collect.LinkedHashMultimap$ValueSet",
       "com.google.common.collect.DenseImmutableTable",
       "com.google.common.collect.ArrayTable$ArrayMap$1$1$1",
       "com.google.common.collect.MinMaxPriorityQueue",
       "com.google.common.base.Preconditions",
       "com.google.common.collect.AbstractRangeSet",
       "com.google.common.collect.BinaryTreeTraverser$InOrderIterator",
       "com.google.common.collect.Collections2$OrderedPermutationCollection",
       "com.google.common.collect.AbstractMultimap$EntrySet",
       "com.google.common.util.concurrent.SettableFuture",
       "com.google.common.base.Predicates$AssignableFromPredicate",
       "com.google.common.collect.ImmutableMultiset$EntrySet$1",
       "com.google.common.cache.LocalCache$AccessQueue",
       "com.google.common.collect.TreeMultiset",
       "com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter",
       "com.google.common.util.concurrent.MoreExecutors$Application",
       "com.google.common.cache.CacheBuilderSpec$MaximumWeightParser",
       "com.google.common.collect.HashMultimap",
       "com.google.common.net.PercentEscaper",
       "com.google.common.collect.LinkedListMultimap$KeyList",
       "com.google.common.collect.Lists$OnePlusArrayList",
       "com.google.common.collect.Synchronized$SynchronizedNavigableSet",
       "com.google.common.util.concurrent.AbstractCheckedFuture",
       "com.google.common.util.concurrent.AtomicLongMap",
       "com.google.common.util.concurrent.ExecutionList",
       "com.google.common.collect.DescendingMultiset",
       "com.google.common.collect.Maps$AsMapView",
       "com.google.common.io.ByteSink$1",
       "com.google.common.collect.ImmutableSet",
       "com.google.common.primitives.Chars$LexicographicalComparator",
       "com.google.common.collect.StandardTable$Column$KeySet",
       "com.google.common.reflect.ClassPath$ResourceInfo",
       "com.google.common.util.concurrent.AbstractFuture$Sync",
       "com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet",
       "com.google.common.cache.CacheLoader",
       "com.google.common.collect.MapMakerInternalMap$KeySet",
       "com.google.common.collect.Cut$AboveValue",
       "com.google.common.cache.LocalCache$SoftValueReference",
       "com.google.common.collect.Maps$FilteredEntryBiMap",
       "com.google.common.base.Splitter$Strategy",
       "com.google.common.primitives.Longs$LexicographicalComparator",
       "com.google.common.util.concurrent.AbstractScheduledService$1",
       "com.google.common.util.concurrent.AbstractScheduledService$3",
       "com.google.common.util.concurrent.AbstractScheduledService$2",
       "com.google.common.collect.ArrayTable$ArrayMap$1",
       "com.google.common.collect.Sets$CartesianSet$1",
       "com.google.common.base.Predicates$ObjectPredicate$1",
       "com.google.common.cache.LocalCache$WeakEntry",
       "com.google.common.hash.Hashing",
       "com.google.common.reflect.TypeToken",
       "com.google.common.collect.AbstractSequentialIterator",
       "com.google.common.collect.EmptyImmutableSet",
       "com.google.common.collect.MapDifference$ValueDifference",
       "com.google.common.collect.TreeTraverser",
       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
       "com.google.common.io.Files",
       "com.google.common.collect.ForwardingCollection",
       "com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry",
       "com.google.common.base.Functions$1",
       "com.google.common.collect.FilteredEntryMultimap$Keys$1$1",
       "com.google.common.collect.FilteredKeyMultimap$AddRejectingList",
       "com.google.common.reflect.Types$JavaVersion",
       "com.google.common.hash.HashCode$BytesHashCode",
       "com.google.common.base.Predicates$ObjectPredicate$4",
       "com.google.common.base.Predicates$ObjectPredicate$3",
       "com.google.common.base.Predicates$ObjectPredicate$2",
       "com.google.common.collect.ImmutableTable",
       "com.google.common.cache.LoadingCache",
       "com.google.common.collect.ImmutableList$SubList",
       "com.google.common.base.FunctionalEquivalence",
       "com.google.common.collect.DenseImmutableTable$Row",
       "com.google.common.collect.SortedLists$KeyAbsentBehavior",
       "com.google.common.base.Suppliers$SupplierFunctionImpl",
       "com.google.common.hash.ChecksumHashFunction$1",
       "com.google.common.collect.ImmutableSortedMap$Builder",
       "com.google.common.collect.Multimaps$MapMultimap$1",
       "com.google.thirdparty.publicsuffix.PublicSuffixPatterns",
       "com.google.common.base.Predicates$ObjectPredicate",
       "com.google.common.collect.WellBehavedMap$EntrySet",
       "com.google.common.cache.CacheBuilderSpec$DurationParser",
       "com.google.common.reflect.TypeToken$InterfaceSet",
       "com.google.common.collect.Sets$SubSet$1",
       "com.google.common.collect.Maps$KeySet",
       "com.google.common.collect.Maps$NavigableAsMapView",
       "com.google.common.collect.AbstractIterator$1",
       "com.google.common.cache.LongAddables$1",
       "com.google.common.io.CountingInputStream",
       "com.google.common.cache.LongAddables$2",
       "com.google.common.collect.HashBiMap$Inverse$1$1",
       "com.google.common.collect.AbstractMapBasedMultimap$1",
       "com.google.common.collect.MultimapBuilder$1",
       "com.google.common.collect.AbstractMapBasedMultimap$2",
       "com.google.common.collect.MultimapBuilder$2",
       "com.google.common.collect.FilteredEntryMultimap$AsMap$3",
       "com.google.common.collect.ImmutableMultimap$1",
       "com.google.common.collect.MultimapBuilder$3",
       "com.google.common.collect.MultimapBuilder$4",
       "com.google.common.util.concurrent.AbstractService$9",
       "com.google.common.util.concurrent.AbstractService$8",
       "com.google.common.base.Present",
       "com.google.common.util.concurrent.AbstractService$7",
       "com.google.common.collect.FilteredEntryMultimap$AsMap$1",
       "com.google.common.collect.FilteredEntryMultimap$AsMap$2",
       "com.google.common.collect.ImmutableMultimap$2",
       "com.google.common.util.concurrent.AbstractService$2",
       "com.google.common.util.concurrent.AbstractService$1",
       "com.google.common.collect.SortedLists$KeyPresentBehavior",
       "com.google.common.util.concurrent.AbstractService$6",
       "com.google.common.util.concurrent.AbstractService$5",
       "com.google.common.reflect.Types$TypeVariableImpl",
       "com.google.common.util.concurrent.AbstractService$4",
       "com.google.common.util.concurrent.AbstractService$3",
       "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator",
       "com.google.common.collect.StandardTable$Row$RowEntrySet$1",
       "com.google.common.html.package-info",
       "com.google.common.io.Files$FilePredicate$1",
       "com.google.common.collect.Lists$TransformingSequentialList",
       "com.google.common.io.Files$FilePredicate$2",
       "com.google.common.util.concurrent.Striped$PaddedLock",
       "com.google.common.collect.ForwardingIterator",
       "com.google.common.reflect.Types$GenericArrayTypeImpl",
       "com.google.common.util.concurrent.Striped$PowerOfTwoStriped",
       "com.google.common.primitives.package-info",
       "com.google.common.base.CharMatcher$NegatedMatcher",
       "com.google.common.math.DoubleMath$MeanAccumulator",
       "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2$1",
       "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet",
       "com.google.common.eventbus.AnnotatedSubscriberFinder$MethodIdentifier",
       "com.google.common.collect.MapMakerInternalMap$NullEntry",
       "com.google.common.primitives.Floats$FloatArrayAsList",
       "com.google.common.collect.FilteredEntryMultimap",
       "com.google.common.collect.TreeRangeMap$RangeMapEntry",
       "com.google.common.io.Files$2",
       "com.google.common.collect.Maps$UnmodifiableNavigableMap",
       "com.google.common.io.Files$1",
       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
       "com.google.common.collect.Lists$RandomAccessListWrapper",
       "com.google.common.collect.MapMakerInternalMap$ValueIterator",
       "com.google.common.reflect.TypeToken$3",
       "com.google.common.reflect.TypeToken$4",
       "com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy",
       "com.google.common.reflect.TypeToken$1",
       "com.google.common.reflect.TypeToken$2",
       "com.google.common.collect.Multimaps$MapMultimap$1$1",
       "com.google.common.io.CharStreams",
       "com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry",
       "com.google.common.eventbus.AllowConcurrentEvents",
       "com.google.common.reflect.AbstractInvocationHandler",
       "com.google.common.util.concurrent.Futures$3",
       "com.google.common.util.concurrent.Runnables$1",
       "com.google.common.collect.ForwardingSortedSetMultimap",
       "com.google.common.util.concurrent.Futures$2",
       "com.google.common.util.concurrent.Futures$5",
       "com.google.common.collect.Multimaps$TransformedEntriesMultimap$1",
       "com.google.common.util.concurrent.Futures$4",
       "com.google.common.util.concurrent.Futures$7",
       "com.google.common.util.concurrent.Futures$6",
       "com.google.common.cache.LocalCache$Segment$1",
       "com.google.common.collect.AbstractIndexedListIterator",
       "com.google.common.util.concurrent.Futures$8",
       "com.google.common.util.concurrent.AbstractService$StateSnapshot",
       "com.google.common.collect.CollectPreconditions",
       "com.google.common.util.concurrent.Futures$1",
       "com.google.common.reflect.TypeCapture",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$Policy",
       "com.google.common.eventbus.AsyncEventBus",
       "com.google.common.reflect.TypeVisitor",
       "com.google.common.collect.Lists$TransformingRandomAccessList$1",
       "com.google.common.collect.BinaryTreeTraverser$PostOrderIterator",
       "com.google.common.collect.MapConstraints$ConstrainedListMultimap",
       "com.google.common.base.Splitter$1$1",
       "com.google.common.base.Suppliers$ExpiringMemoizingSupplier",
       "com.google.common.base.AbstractIterator$State",
       "com.google.common.base.PairwiseEquivalence",
       "com.google.common.base.Suppliers",
       "com.google.common.math.DoubleMath",
       "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler",
       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator",
       "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1",
       "com.google.common.collect.Tables$TransformedTable",
       "com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry",
       "com.google.common.collect.Constraint",
       "com.google.thirdparty.publicsuffix.TrieParser",
       "com.google.common.collect.Maps$FilteredEntryNavigableMap$1",
       "com.google.common.base.AbstractIterator",
       "com.google.common.collect.ForwardingImmutableList",
       "com.google.common.primitives.Longs$LongArrayAsList",
       "com.google.common.collect.LinkedListMultimap$NodeIterator",
       "com.google.common.collect.MultimapBuilder$HashSetSupplier",
       "com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp",
       "com.google.common.util.concurrent.Futures$WrappedCombiner",
       "com.google.common.collect.Table",
       "com.google.common.collect.Sets$CartesianSet",
       "com.google.common.primitives.Longs$LongConverter",
       "com.google.common.util.concurrent.Striped$SmallLazyStriped",
       "com.google.common.base.Suppliers$SupplierOfInstance",
       "com.google.common.cache.AbstractCache$StatsCounter",
       "com.google.common.primitives.Booleans$LexicographicalComparator",
       "com.google.common.collect.MapConstraints$2$1",
       "com.google.common.math.LongMath$1",
       "com.google.common.hash.MessageDigestHashFunction$1",
       "com.google.common.collect.MapConstraints",
       "com.google.common.hash.BloomFilter$Strategy",
       "com.google.common.util.concurrent.Futures$ImmediateFailedFuture",
       "com.google.common.collect.AbstractMapBasedMultiset$1",
       "com.google.common.collect.MultimapBuilder$EnumSetSupplier",
       "com.google.common.collect.Multimaps$CustomSortedSetMultimap",
       "com.google.common.collect.Platform",
       "com.google.common.collect.ForwardingImmutableCollection",
       "com.google.common.collect.ImmutableEnumMap$EnumSerializedForm",
       "com.google.common.cache.LocalCache$LocalManualCache",
       "com.google.common.collect.ArrayTable$Row",
       "com.google.common.collect.ForwardingMapEntry",
       "com.google.common.collect.TreeBasedTable$Factory",
       "com.google.common.collect.MinMaxPriorityQueue$1",
       "com.google.common.cache.LocalCache$WeakWriteEntry",
       "com.google.common.collect.NullsFirstOrdering",
       "com.google.common.util.concurrent.MoreExecutors$DirectExecutor",
       "com.google.common.net.InternetDomainName",
       "com.google.common.cache.CacheBuilderSpec$LongParser",
       "com.google.common.collect.ForwardingSortedMultiset$StandardElementSet",
       "com.google.common.reflect.TypeToken$InterfaceSet$1",
       "com.google.common.cache.LocalCache$ValueReference",
       "com.google.common.collect.StandardRowSortedTable",
       "com.google.common.primitives.Ints$IntArrayAsList",
       "com.google.common.collect.Multisets$ImmutableEntry",
       "com.google.common.escape.UnicodeEscaper",
       "com.google.common.base.Absent",
       "com.google.common.base.Functions$ConstantFunction",
       "com.google.common.hash.Funnels$SinkAsStream",
       "com.google.common.io.Files$FilePredicate",
       "com.google.common.collect.Maps$DescendingMap$1",
       "com.google.common.base.Throwables",
       "com.google.common.io.FileWriteMode",
       "com.google.common.base.Equivalence$Equals",
       "com.google.common.reflect.TypeResolver$TypeVariableKey",
       "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1",
       "com.google.common.base.CharMatcher$5",
       "com.google.common.base.CharMatcher$4",
       "com.google.common.base.CharMatcher$3",
       "com.google.common.collect.Synchronized$SynchronizedBiMap",
       "com.google.common.base.CharMatcher$2",
       "com.google.common.cache.ForwardingCache",
       "com.google.common.base.CharMatcher$9",
       "com.google.common.base.CharMatcher$8",
       "com.google.common.base.CharMatcher$7",
       "com.google.common.collect.Sets$ImprovedAbstractSet",
       "com.google.common.collect.StandardTable$Column$EntrySetIterator",
       "com.google.common.base.CharMatcher$6",
       "com.google.common.collect.RegularImmutableSortedMap$EntrySet",
       "com.google.common.base.FinalizableReferenceQueue$DecoupledLoader",
       "com.google.common.base.CharMatcher$1",
       "com.google.common.collect.ImmutableMapValues",
       "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder",
       "com.google.common.util.concurrent.CycleDetectingLockFactory",
       "com.google.common.collect.AbstractNavigableMap",
       "com.google.common.collect.MapMakerInternalMap$StrongValueReference",
       "com.google.common.util.concurrent.SmoothRateLimiter",
       "com.google.common.collect.GwtTransient",
       "com.google.common.util.concurrent.Futures$CombinerFuture",
       "com.google.common.collect.MapMakerInternalMap$EvictionQueue",
       "com.google.common.util.concurrent.AsyncSettableFuture$NestedFuture",
       "com.google.common.util.concurrent.ForwardingListeningExecutorService",
       "com.google.common.eventbus.SynchronizedEventSubscriber",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2",
       "com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector",
       "com.google.common.collect.Interners$1",
       "com.google.common.util.concurrent.Futures$CombinedFuture",
       "com.google.common.collect.ForwardingSet",
       "com.google.common.base.Functions$ToStringFunction",
       "com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap",
       "com.google.common.base.Functions$FunctionComposition",
       "com.google.common.collect.MultimapBuilder$TreeSetSupplier",
       "com.google.common.collect.StandardTable$RowMap$EntrySet$1",
       "com.google.common.base.Ticker$1",
       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
       "com.google.common.collect.Multiset",
       "com.google.common.collect.TreeRangeMap$AsMapOfRanges$1",
       "com.google.common.collect.ImmutableEnumSet$1",
       "com.google.common.collect.Maps$TransformedEntriesNavigableMap",
       "com.google.common.hash.BloomFilter$SerialForm",
       "com.google.common.primitives.UnsignedInts$LexicographicalComparator",
       "com.google.common.reflect.Types$ClassOwnership",
       "com.google.common.collect.Table$Cell",
       "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher",
       "com.google.common.util.concurrent.AbstractService$10",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock",
       "com.google.common.collect.Synchronized$1",
       "com.google.common.collect.MapMakerInternalMap$Values",
       "com.google.common.collect.ArrayTable$ArrayMap$1$1",
       "com.google.common.collect.ForwardingMultimap",
       "com.google.common.collect.MapMaker$1",
       "com.google.common.cache.LocalCache$EntryIterator",
       "com.google.common.collect.TreeMultiset$Aggregate$2",
       "com.google.common.collect.TreeRangeSet$SubRangeSet",
       "com.google.common.collect.TreeMultiset$Aggregate$1",
       "com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture",
       "com.google.common.io.ByteStreams$1",
       "com.google.common.util.concurrent.Futures$FallbackFuture$1",
       "com.google.common.collect.StandardTable$RowMap",
       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
       "com.google.common.cache.CacheBuilderSpec$AccessDurationParser",
       "com.google.common.collect.ForwardingMap$StandardValues",
       "com.google.common.collect.ImmutableMap$SerializedForm",
       "com.google.common.base.Optional",
       "com.google.common.io.Closeables",
       "com.google.common.collect.TreeBasedTable$TreeRow",
       "com.google.common.reflect.TypeParameter",
       "com.google.common.base.CharMatcher$NegatedFastMatcher",
       "com.google.common.collect.Range",
       "com.google.common.util.concurrent.ForwardingListenableFuture",
       "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator",
       "com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry",
       "com.google.common.collect.FilteredSetMultimap",
       "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap",
       "com.google.common.io.FileBackedOutputStream",
       "com.google.common.io.CharSource$CharSequenceCharSource",
       "com.google.common.collect.ContiguousSet",
       "com.google.common.base.MoreObjects$ToStringHelper",
       "com.google.common.escape.CharEscaperBuilder",
       "com.google.common.util.concurrent.Striped$CompactStriped",
       "com.google.common.cache.LocalCache$HashIterator",
       "com.google.common.collect.RegularImmutableAsList",
       "com.google.common.io.Resources$UrlByteSource",
       "com.google.common.util.concurrent.Striped$LargeLazyStriped",
       "com.google.common.collect.Constraints$ConstrainedCollection",
       "com.google.common.util.concurrent.ServiceManager$ServiceListener",
       "com.google.common.xml.package-info",
       "com.google.common.base.Functions$IdentityFunction",
       "com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture",
       "com.google.common.util.concurrent.ListeningScheduledExecutorService",
       "com.google.common.collect.ImmutableSortedMap",
       "com.google.common.util.concurrent.ForwardingBlockingQueue",
       "com.google.common.io.BaseEncoding",
       "com.google.common.collect.ForwardingSetMultimap",
       "com.google.common.base.MoreObjects",
       "com.google.common.collect.GenericMapMaker",
       "com.google.common.collect.Multimaps$AsMap$EntrySet$1",
       "com.google.common.collect.ImmutableList$1",
       "com.google.common.hash.BloomFilter$1",
       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
       "com.google.common.net.InetAddresses",
       "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1",
       "com.google.common.collect.StandardTable$Column$Values",
       "com.google.common.io.package-info",
       "com.google.common.collect.TreeMultiset$Aggregate",
       "com.google.common.collect.MapMaker$RemovalCause",
       "com.google.common.collect.ImmutableMapKeySet$1",
       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
       "com.google.common.collect.MapMakerInternalMap$KeyIterator",
       "com.google.common.reflect.Types$1",
       "com.google.common.reflect.Types$2",
       "com.google.common.util.concurrent.Service$State",
       "com.google.common.collect.AbstractBiMap$ValueSet",
       "com.google.common.base.Function",
       "com.google.common.collect.ImmutableMap",
       "com.google.common.collect.ImmutableAsList$SerializedForm",
       "com.google.common.io.ByteStreams$LimitedInputStream",
       "com.google.common.primitives.Bytes",
       "com.google.common.util.concurrent.ForwardingFuture",
       "com.google.common.collect.MinMaxPriorityQueue$Builder",
       "com.google.common.util.concurrent.TimeLimiter",
       "com.google.common.collect.ImmutableSortedMapFauxverideShim",
       "com.google.common.util.concurrent.Futures$ImmediateFailedCheckedFuture",
       "com.google.common.cache.CacheBuilder",
       "com.google.common.collect.Range$4",
       "com.google.common.collect.EmptyImmutableSortedMultiset",
       "com.google.common.collect.Range$2",
       "com.google.common.collect.Range$3",
       "com.google.common.cache.LocalCache$NullEntry",
       "com.google.common.collect.Range$1",
       "com.google.common.base.Stopwatch",
       "com.google.common.collect.StandardTable$Column",
       "com.google.common.collect.RegularContiguousSet$SerializedForm",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies",
       "com.google.common.collect.Interners$WeakInterner",
       "com.google.common.cache.LocalCache$AbstractCacheSet",
       "com.google.common.collect.ImmutableMultiset$Builder",
       "com.google.common.escape.Escapers$1",
       "com.google.common.cache.LocalCache$LocalLoadingCache",
       "com.google.common.collect.SingletonImmutableBiMap",
       "com.google.common.collect.MapConstraints$2",
       "com.google.common.collect.MinMaxPriorityQueue$MoveDesc",
       "com.google.common.collect.Multisets$EntrySet",
       "com.google.common.collect.MapConstraints$1",
       "com.google.common.escape.Escapers$2",
       "com.google.common.util.concurrent.AbstractIdleService",
       "com.google.common.escape.Platform$1",
       "com.google.common.cache.RemovalNotification",
       "com.google.common.base.Equivalence",
       "com.google.common.cache.LocalCache$WriteQueue$1",
       "com.google.common.cache.LocalCache$LoadingValueReference",
       "com.google.common.cache.LocalCache$WriteQueue$2",
       "com.google.common.collect.Maps",
       "com.google.common.cache.Striped64",
       "com.google.common.collect.SetMultimap",
       "com.google.common.collect.ImmutableSet$SerializedForm",
       "com.google.common.collect.TransformedIterator",
       "com.google.common.collect.DescendingImmutableSortedSet",
       "com.google.common.collect.FilteredKeyMultimap$AddRejectingSet",
       "com.google.common.util.concurrent.Futures$FallbackFuture",
       "com.google.common.collect.Synchronized$SynchronizedObject",
       "com.google.common.util.concurrent.WrappingExecutorService",
       "com.google.common.util.concurrent.ListenerCallQueue",
       "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet",
       "com.google.common.collect.Cut$AboveAll",
       "com.google.common.net.package-info",
       "com.google.common.util.concurrent.AbstractFuture",
       "com.google.common.collect.RegularContiguousSet",
       "com.google.common.hash.Crc32cHashFunction",
       "com.google.common.collect.RangeSet",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock",
       "com.google.common.escape.CharEscaper",
       "com.google.common.annotations.GwtCompatible",
       "com.google.common.collect.RegularContiguousSet$2",
       "com.google.common.collect.RegularContiguousSet$1",
       "com.google.common.collect.LinkedHashMultiset",
       "com.google.common.cache.LocalCache$WriteThroughEntry",
       "com.google.common.collect.Sets$2",
       "com.google.common.collect.Sets$3",
       "com.google.common.io.CharStreams$NullWriter",
       "com.google.common.collect.Sets$1",
       "com.google.common.collect.Maps$Values",
       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
       "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1",
       "com.google.common.primitives.Booleans$BooleanArrayAsList",
       "com.google.common.collect.Constraints",
       "com.google.common.escape.ArrayBasedUnicodeEscaper",
       "com.google.common.base.FinalizableReference",
       "com.google.common.collect.ImmutableEnumMap$1",
       "com.google.common.collect.ImmutableEnumMap$2",
       "com.google.common.reflect.TypeToken$TypeCollector",
       "com.google.common.util.concurrent.MoreExecutors$ListeningDecorator",
       "com.google.common.collect.FilteredEntryMultimap$ValuePredicate",
       "com.google.common.collect.HashBasedTable$Factory",
       "com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1",
       "com.google.common.collect.AbstractListMultimap",
       "com.google.common.io.MultiReader",
       "com.google.common.base.Predicates$InstanceOfPredicate",
       "com.google.common.cache.CacheBuilderSpec$RefreshDurationParser",
       "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
       "com.google.common.io.Closer$LoggingSuppressor",
       "com.google.common.util.concurrent.ServiceManager$Listener",
       "com.google.common.collect.Lists$ReverseList$1",
       "com.google.common.collect.ForwardingTable",
       "com.google.common.collect.TreeMultiset$1",
       "com.google.common.io.ByteArrayDataInput",
       "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch",
       "com.google.common.collect.TreeMultiset$4",
       "com.google.common.collect.TreeMultiset$3",
       "com.google.common.collect.TreeMultiset$2",
       "com.google.common.cache.LocalCache$KeySet",
       "com.google.common.collect.MapMakerInternalMap$Segment",
       "com.google.common.base.CharMatcher",
       "com.google.common.collect.FilteredKeyMultimap",
       "com.google.common.collect.Sets$UnmodifiableNavigableSet",
       "com.google.common.util.concurrent.AbstractIdleService$2$1",
       "com.google.common.util.concurrent.AbstractIdleService$2$2",
       "com.google.common.util.concurrent.Futures$1$1",
       "com.google.common.collect.Synchronized$SynchronizedSortedMap",
       "com.google.common.collect.Maps$FilteredEntryBiMap$1",
       "com.google.common.collect.RegularImmutableTable$Values",
       "com.google.common.collect.MapMaker",
       "com.google.common.collect.ForwardingDeque",
       "com.google.common.util.concurrent.WrappingExecutorService$1",
       "com.google.common.collect.MapMakerInternalMap$EntryIterator",
       "com.google.common.collect.AbstractBiMap",
       "com.google.common.collect.Sets$FilteredSet",
       "com.google.common.util.concurrent.AsyncSettableFuture",
       "com.google.common.collect.EmptyImmutableSortedMap",
       "com.google.common.base.Predicates$1",
       "com.google.common.collect.Multisets$3$1",
       "com.google.common.collect.Maps$FilteredEntryMap$KeySet",
       "com.google.common.collect.FilteredKeySetMultimap$EntrySet",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock",
       "com.google.common.io.ByteArrayDataOutput",
       "com.google.common.collect.Iterators$6",
       "com.google.common.collect.BiMap",
       "com.google.common.collect.Iterators$7",
       "com.google.common.collect.Iterators$8",
       "com.google.common.collect.TreeRangeMap$SubRangeMap",
       "com.google.common.collect.Iterators$9",
       "com.google.common.escape.Escaper",
       "com.google.common.collect.HashBiMap$EntrySet$1$MapEntry",
       "com.google.common.collect.Iterators$1",
       "com.google.common.math.LongMath",
       "com.google.common.collect.Iterators$2",
       "com.google.common.collect.Iterators$3",
       "com.google.common.collect.Iterators$4",
       "com.google.common.collect.Iterators$5",
       "com.google.common.collect.package-info",
       "com.google.common.collect.RegularImmutableBiMap$Inverse",
       "com.google.common.collect.ImmutableMultimap$Builder",
       "com.google.common.base.Defaults",
       "com.google.common.collect.AbstractMultimap",
       "com.google.common.hash.SipHashFunction$SipHasher",
       "com.google.common.hash.AbstractCompositeHashFunction",
       "com.google.common.collect.StandardTable$Row$RowEntrySet",
       "com.google.common.collect.Ordering$ArbitraryOrdering$1",
       "com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference",
       "com.google.common.collect.DescendingMultiset$1",
       "com.google.common.base.FinalizableSoftReference",
       "com.google.common.cache.LocalCache$Strength$3",
       "com.google.common.cache.LocalCache$Strength$2",
       "com.google.common.reflect.Invokable$ConstructorInvokable",
       "com.google.common.cache.LocalCache$Strength$1",
       "com.google.common.collect.MapConstraints$ConstrainedSetMultimap",
       "com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm",
       "com.google.common.collect.AbstractBiMap$1",
       "com.google.common.collect.TreeRangeSet$Complement",
       "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1",
       "com.google.common.util.concurrent.ServiceManager$ServiceManagerState",
       "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2",
       "com.google.common.util.concurrent.AsyncFunction",
       "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$3",
       "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$4",
       "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$5",
       "com.google.common.collect.Iterables$ConsumingQueueIterator",
       "com.google.common.collect.WellBehavedMap$EntrySet$1$1",
       "com.google.common.util.concurrent.AbstractExecutionThreadService",
       "com.google.common.cache.CacheBuilderSpec$WriteDurationParser",
       "com.google.common.cache.LocalCache$WeightedStrongValueReference",
       "com.google.common.collect.TreeRangeSet$RangesByUpperBound$1",
       "com.google.common.io.ByteStreams$FastByteArrayOutputStream",
       "com.google.common.collect.TreeRangeSet$RangesByUpperBound$2",
       "com.google.common.cache.CacheBuilderSpec$ValueStrengthParser",
       "com.google.common.collect.StandardTable$CellIterator",
       "com.google.common.collect.ComputationException",
       "com.google.common.collect.StandardTable$ColumnKeySet",
       "com.google.common.base.Splitter$2$1",
       "com.google.common.collect.StandardRowSortedTable$RowSortedMap",
       "com.google.common.collect.Lists$TransformingRandomAccessList",
       "com.google.common.cache.CacheLoader$InvalidCacheLoadException",
       "com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry",
       "com.google.common.hash.MessageDigestHashFunction$SerializedForm",
       "com.google.common.hash.Hashing$1",
       "com.google.common.collect.Multisets",
       "com.google.common.collect.AbstractMultimap$1",
       "com.google.common.collect.ComparisonChain",
       "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable",
       "com.google.common.collect.Synchronized$SynchronizedQueue",
       "com.google.common.hash.AbstractCompositeHashFunction$1",
       "com.google.common.util.concurrent.SerializingExecutor$TaskRunner",
       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
       "com.google.common.util.concurrent.AbstractScheduledService",
       "com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning",
       "com.google.common.base.package-info",
       "com.google.common.io.ByteSink$AsCharSink",
       "com.google.common.util.concurrent.AbstractExecutionThreadService$2",
       "com.google.common.collect.Iterators$MergingIterator$1",
       "com.google.common.collect.TreeRangeSet",
       "com.google.common.util.concurrent.AbstractExecutionThreadService$1",
       "com.google.common.collect.RegularImmutableSortedMap$EntrySet$1",
       "com.google.common.collect.Maps$UnmodifiableEntries$1",
       "com.google.common.base.Suppliers$ThreadSafeSupplier",
       "com.google.common.collect.StandardTable$RowMap$EntrySet",
       "com.google.common.hash.Funnels$UnencodedCharsFunnel",
       "com.google.common.math.BigIntegerMath$1",
       "com.google.common.base.Predicates",
       "com.google.common.collect.EmptyContiguousSet",
       "com.google.common.cache.CacheLoader$1$1",
       "com.google.common.net.MediaType",
       "com.google.common.collect.Synchronized$SynchronizedEntry",
       "com.google.common.util.concurrent.Uninterruptibles",
       "com.google.common.cache.LocalCache$LoadingValueReference$1",
       "com.google.common.reflect.package-info",
       "com.google.common.collect.ConcurrentHashMultiset$2",
       "com.google.common.collect.ConcurrentHashMultiset$1",
       "com.google.common.collect.ConcurrentHashMultiset$3",
       "com.google.common.collect.Synchronized$SynchronizedSetMultimap",
       "com.google.common.collect.MapMakerInternalMap$SoftValueReference",
       "com.google.common.collect.StandardTable$Column$EntrySetIterator$1",
       "com.google.common.base.CharMatcher$12",
       "com.google.common.base.CharMatcher$11",
       "com.google.common.base.CharMatcher$10",
       "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1",
       "com.google.common.base.CharMatcher$15",
       "com.google.common.base.CharMatcher$14",
       "com.google.common.base.CharMatcher$13",
       "com.google.common.util.concurrent.Futures$MappingCheckedFuture",
       "com.google.common.primitives.Floats$FloatConverter",
       "com.google.common.escape.package-info",
       "com.google.common.base.Platform",
       "com.google.common.collect.ImmutableList$ReverseImmutableList",
       "com.google.common.util.concurrent.Service$Listener",
       "com.google.common.collect.Collections2$PermutationCollection",
       "com.google.common.hash.Funnels",
       "com.google.common.io.GwtWorkarounds$ByteOutput",
       "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap",
       "com.google.common.collect.ImmutableClassToInstanceMap$1",
       "com.google.common.collect.BoundType",
       "com.google.common.hash.Hashing$Sha512Holder",
       "com.google.common.collect.Maps$DescendingMap",
       "com.google.common.hash.Crc32cHashFunction$Crc32cHasher",
       "com.google.common.collect.ImmutableClassToInstanceMap",
       "com.google.common.reflect.TypeToken$ClassSet",
       "com.google.common.io.BaseEncoding$Alphabet",
       "com.google.common.collect.Multimaps$UnmodifiableListMultimap",
       "com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm",
       "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound",
       "com.google.common.collect.RegularImmutableBiMap$1",
       "com.google.common.collect.MapMakerInternalMap$2",
       "com.google.common.collect.MapMakerInternalMap$1",
       "com.google.common.base.Splitter$3",
       "com.google.common.base.VerifyException",
       "com.google.common.base.Splitter$4",
       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
       "com.google.common.base.Splitter$5",
       "com.google.common.cache.CacheBuilderSpec$InitialCapacityParser",
       "com.google.common.eventbus.DeadEvent",
       "com.google.common.primitives.Bytes$ByteArrayAsList",
       "com.google.common.hash.HashCode$IntHashCode",
       "com.google.common.base.Splitter$1",
       "com.google.common.base.Splitter$2",
       "com.google.common.collect.MapMakerInternalMap$EntryFactory",
       "com.google.common.collect.Serialization$1",
       "com.google.common.collect.RegularImmutableSortedSet",
       "com.google.common.escape.ArrayBasedEscaperMap",
       "com.google.common.collect.ArrayListMultimap",
       "com.google.common.collect.TreeRangeMap$AsMapOfRanges",
       "com.google.common.collect.HashBasedTable",
       "com.google.common.collect.LinkedHashMultimap$1",
       "com.google.common.collect.MultimapBuilder$ArrayListSupplier",
       "com.google.common.collect.Collections2",
       "com.google.common.collect.ForwardingNavigableSet",
       "com.google.common.math.IntMath",
       "com.google.common.collect.ForwardingImmutableSet",
       "com.google.common.collect.NullsLastOrdering",
       "com.google.common.collect.RegularImmutableMultiset",
       "com.google.common.collect.Maps$AsMapView$1",
       "com.google.common.cache.LocalCache$EntryFactory$6",
       "com.google.common.cache.LocalCache$EntryFactory$7",
       "com.google.common.cache.LocalCache$EntryFactory$8",
       "com.google.common.collect.AbstractSortedMultiset",
       "com.google.common.cache.LocalCache$EntryFactory$2",
       "com.google.common.collect.HashBiMap$1",
       "com.google.common.util.concurrent.Futures$ImmediateSuccessfulFuture",
       "com.google.common.cache.LocalCache$EntryFactory$3",
       "com.google.common.cache.LocalCache$EntryFactory$4",
       "com.google.common.cache.LocalCache$EntryFactory$5",
       "com.google.common.cache.LocalCache$EntryFactory$1",
       "com.google.common.collect.HashBiMap$KeySet$1",
       "com.google.common.base.Strings",
       "com.google.common.collect.AbstractMapBasedMultimap",
       "com.google.common.collect.Constraints$ConstrainedRandomAccessList",
       "com.google.common.collect.DiscreteDomain",
       "com.google.common.util.concurrent.Atomics",
       "com.google.common.collect.MapConstraints$ConstrainedAsMapValues",
       "com.google.common.collect.TreeMultiset$AvlNode",
       "com.google.common.collect.AbstractBiMap$EntrySet$1",
       "com.google.common.collect.Cut",
       "com.google.common.collect.FilteredEntryMultimap$Keys",
       "com.google.common.io.Resources",
       "com.google.common.cache.LocalCache$StrongValueReference",
       "com.google.common.collect.MapConstraints$ConstrainedMultimap",
       "com.google.common.util.concurrent.FutureCallback",
       "com.google.common.io.CharSource$CharSequenceCharSource$1",
       "com.google.common.reflect.Types$ParameterizedTypeImpl",
       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
       "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
       "com.google.common.collect.ImmutableEnumMap",
       "com.google.common.collect.MapConstraints$ConstrainedAsMapEntries",
       "com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry",
       "com.google.common.reflect.TypeResolver$WildcardCapturer",
       "com.google.common.collect.AbstractMapBasedMultimap$KeySet$1",
       "com.google.common.collect.Collections2$TransformedCollection",
       "com.google.common.collect.ArrayTable$RowMap",
       "com.google.common.io.ByteStreams$ByteArrayDataOutputStream",
       "com.google.common.collect.Synchronized$SynchronizedAsMap",
       "com.google.common.collect.ImmutableSetMultimap",
       "com.google.common.cache.LocalCache$EntrySet",
       "com.google.common.escape.ArrayBasedCharEscaper",
       "com.google.common.io.BaseEncoding$DecodingException",
       "com.google.common.collect.DiscreteDomain$IntegerDomain",
       "com.google.common.hash.Funnels$ByteArrayFunnel",
       "com.google.common.reflect.Reflection",
       "com.google.common.collect.Interner",
       "com.google.common.net.MediaType$Tokenizer",
       "com.google.common.collect.ImmutableMapValues$1",
       "com.google.common.collect.ImmutableEnumMap$2$1",
       "com.google.common.collect.TreeTraverser$1",
       "com.google.common.collect.TreeTraverser$2",
       "com.google.common.collect.TreeTraverser$3",
       "com.google.common.collect.StandardTable$ColumnMap",
       "com.google.common.collect.TreeRangeMap",
       "com.google.common.base.Converter$ReverseConverter",
       "com.google.common.reflect.Invokable",
       "com.google.common.collect.Lists$2",
       "com.google.common.hash.HashFunction",
       "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet",
       "com.google.common.collect.Lists$1",
       "com.google.common.hash.Hashing$Murmur3_128Holder",
       "com.google.common.base.Supplier",
       "com.google.common.collect.Maps$ImprovedAbstractMap",
       "com.google.common.eventbus.EventBus",
       "com.google.common.collect.ReverseOrdering",
       "com.google.common.eventbus.AsyncEventBus$1",
       "com.google.common.collect.HashBiMap$Inverse$InverseKeySet",
       "com.google.common.eventbus.Subscribe",
       "com.google.common.collect.Synchronized",
       "com.google.common.io.CharSource",
       "com.google.common.cache.CacheBuilder$NullListener",
       "com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry",
       "com.google.common.collect.FilteredEntryMultimap$AsMap",
       "com.google.common.collect.SortedMultisetBridge",
       "com.google.common.collect.MapMakerInternalMap$ExpirationQueue",
       "com.google.common.collect.Synchronized$SynchronizedSet",
       "com.google.common.primitives.UnsignedLongs",
       "com.google.common.primitives.Shorts$LexicographicalComparator",
       "com.google.common.collect.Tables$TransformedTable$3",
       "com.google.common.collect.Tables$TransformedTable$2",
       "com.google.common.io.LineReader",
       "com.google.common.collect.Tables$TransformedTable$1",
       "com.google.common.collect.RegularImmutableTable",
       "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1",
       "com.google.common.collect.Multimaps$CustomListMultimap",
       "com.google.common.hash.HashCode$LongHashCode",
       "com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm",
       "com.google.common.math.IntMath$1",
       "com.google.common.collect.Hashing",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock",
       "com.google.common.hash.HashingInputStream",
       "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap",
       "com.google.common.collect.BinaryTreeTraverser$1",
       "com.google.common.collect.BinaryTreeTraverser$2",
       "com.google.common.collect.Multimaps$AsMap",
       "com.google.common.collect.ImmutableRangeMap",
       "com.google.common.collect.SortedMultiset",
       "com.google.common.collect.AbstractMapBasedMultiset$1$1",
       "com.google.common.collect.SparseImmutableTable",
       "com.google.common.hash.AbstractNonStreamingHashFunction",
       "com.google.common.collect.FluentIterable",
       "com.google.common.reflect.Element",
       "com.google.common.collect.DescendingImmutableSortedMultiset",
       "com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher",
       "com.google.common.collect.MapMakerInternalMap$EntryFactory$5",
       "com.google.common.collect.MapMakerInternalMap$EntryFactory$4",
       "com.google.common.collect.MapMakerInternalMap$EntryFactory$7",
       "com.google.common.cache.CacheBuilderSpec$RecordStatsParser",
       "com.google.common.collect.MapMakerInternalMap$EntryFactory$6",
       "com.google.common.collect.MapMakerInternalMap$EntryFactory$1",
       "com.google.common.math.DoubleMath$1",
       "com.google.common.collect.MapMakerInternalMap$EntryFactory$3",
       "com.google.common.collect.MapMakerInternalMap$EntryFactory$2",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock",
       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1",
       "com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm",
       "com.google.common.collect.MapMakerInternalMap$EntryFactory$8",
       "com.google.common.collect.RegularImmutableTable$1",
       "com.google.common.cache.CacheBuilderSpec$IntegerParser",
       "com.google.common.collect.SortedMapDifference",
       "com.google.common.collect.RegularImmutableSet",
       "com.google.common.collect.FilteredEntrySetMultimap",
       "com.google.common.collect.ForwardingSortedSet",
       "com.google.common.collect.MapMaker$NullConcurrentMap",
       "com.google.common.collect.ImmutableListMultimap",
       "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet",
       "com.google.common.eventbus.SubscriberFindingStrategy",
       "com.google.common.cache.RemovalCause$4",
       "com.google.common.cache.RemovalCause$5",
       "com.google.common.hash.Hashing$ChecksumType",
       "com.google.common.cache.RemovalCause$1",
       "com.google.common.collect.ImmutableAsList",
       "com.google.common.cache.RemovalCause$2",
       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
       "com.google.common.cache.RemovalCause$3",
       "com.google.common.util.concurrent.AtomicDouble",
       "com.google.common.util.concurrent.SerializingExecutor",
       "com.google.common.collect.WellBehavedMap",
       "com.google.common.collect.SingletonImmutableSet",
       "com.google.common.collect.ImmutableList$SerializedForm",
       "com.google.common.collect.MapMakerInternalMap$HashIterator",
       "com.google.common.util.concurrent.ForwardingExecutorService",
       "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy",
       "com.google.common.util.concurrent.AbstractListeningExecutorService",
       "com.google.common.hash.PrimitiveSink",
       "com.google.common.collect.FluentIterable$FromIterableFunction",
       "com.google.common.collect.AbstractIterator",
       "com.google.common.base.Suppliers$MemoizingSupplier",
       "com.google.common.collect.MutableClassToInstanceMap",
       "com.google.common.util.concurrent.Futures",
       "com.google.common.collect.TreeBasedTable$1",
       "com.google.common.collect.TreeBasedTable$2",
       "com.google.common.cache.RemovalListener",
       "com.google.common.collect.MapMaker$RemovalNotification",
       "com.google.common.base.Functions$PredicateFunction",
       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
       "com.google.common.collect.ImmutableMapValues$SerializedForm",
       "com.google.common.collect.Maps$TransformedEntriesSortedMap",
       "com.google.common.util.concurrent.AbstractService",
       "com.google.common.io.BaseEncoding$SeparatedBaseEncoding",
       "com.google.common.collect.MapMakerInternalMap$WeakValueReference",
       "com.google.common.collect.Synchronized$SynchronizedNavigableMap",
       "com.google.common.collect.AbstractSetMultimap",
       "com.google.common.collect.ImmutableTable$Builder",
       "com.google.common.primitives.UnsignedLongs$LexicographicalComparator",
       "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter",
       "com.google.common.io.GwtWorkarounds$CharOutput",
       "com.google.common.collect.MapMakerInternalMap$Strength$2",
       "com.google.common.collect.MapMakerInternalMap$Strength$1",
       "com.google.common.collect.Multiset$Entry",
       "com.google.common.base.Predicates$NotPredicate",
       "com.google.common.math.BigIntegerMath",
       "com.google.common.collect.MapMakerInternalMap$Strength$3",
       "com.google.common.collect.AbstractMultiset$ElementSet",
       "com.google.common.collect.SortedMultisets$NavigableElementSet",
       "com.google.common.collect.TreeMultiset$Reference",
       "com.google.common.collect.EnumHashBiMap",
       "com.google.common.cache.LocalCache$WeakAccessEntry",
       "com.google.common.eventbus.AnnotatedSubscriberFinder",
       "com.google.common.collect.ImmutableSortedSet$SerializedForm",
       "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier",
       "com.google.common.collect.SortedMultisets",
       "com.google.common.collect.Multimaps$MapMultimap",
       "com.google.common.util.concurrent.FakeTimeLimiter",
       "com.google.common.collect.EvictingQueue",
       "com.google.common.collect.ComparisonChain$InactiveComparisonChain",
       "com.google.common.cache.LocalCache$AbstractReferenceEntry",
       "com.google.common.cache.ForwardingCache$SimpleForwardingCache",
       "com.google.common.collect.Cut$BelowAll",
       "com.google.common.reflect.MutableTypeToInstanceMap$1",
       "com.google.common.hash.Hashing$Adler32Holder",
       "com.google.common.collect.ReverseNaturalOrdering",
       "com.google.common.collect.MapConstraints$InverseConstraint",
       "com.google.common.collect.BinaryTreeTraverser",
       "com.google.common.collect.HashBiMap$BiEntry",
       "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask",
       "com.google.common.annotations.VisibleForTesting",
       "com.google.common.cache.AbstractLoadingCache",
       "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries",
       "com.google.common.collect.MapMaker$NullComputingConcurrentMap",
       "com.google.common.reflect.MutableTypeToInstanceMap",
       "com.google.common.collect.ComputingConcurrentHashMap",
       "com.google.common.collect.ImmutableRangeMap$2",
       "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher",
       "com.google.common.escape.CharEscaperBuilder$CharArrayDecorator",
       "com.google.common.collect.Multisets$MultisetIteratorImpl",
       "com.google.common.collect.ImmutableRangeMap$1",
       "com.google.common.cache.package-info",
       "com.google.common.collect.AbstractNavigableMap$DescendingMap",
       "com.google.common.base.FinalizableReferenceQueue$DirectLoader",
       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
       "com.google.common.collect.RowSortedTable",
       "com.google.common.collect.Iterables$UnmodifiableIterable",
       "com.google.common.collect.Maps$UnmodifiableBiMap",
       "com.google.common.collect.AbstractMapEntry",
       "com.google.common.util.concurrent.Service$State$1",
       "com.google.common.util.concurrent.Service$State$2",
       "com.google.common.util.concurrent.Service$State$3",
       "com.google.common.util.concurrent.Service$State$4",
       "com.google.common.collect.Sets$PowerSet",
       "com.google.common.util.concurrent.Service$State$5",
       "com.google.common.util.concurrent.Service$State$6",
       "com.google.common.collect.ImmutableRangeSet$ComplementRanges",
       "com.google.common.collect.Maps$10",
       "com.google.common.collect.Maps$11",
       "com.google.common.io.CharStreams$1",
       "com.google.common.collect.GeneralRange",
       "com.google.common.collect.ImmutableRangeSet$SerializedForm",
       "com.google.common.collect.Iterables$10",
       "com.google.common.collect.Iterables$11",
       "com.google.common.collect.Iterables$12",
       "com.google.common.collect.Iterables$13",
       "com.google.common.collect.Iterables$14",
       "com.google.common.util.concurrent.RateLimiter",
       "com.google.common.collect.Iterables$15",
       "com.google.common.hash.Murmur3_32HashFunction",
       "com.google.common.collect.Lists",
       "com.google.common.reflect.Types",
       "com.google.common.io.PatternFilenameFilter",
       "com.google.common.collect.Maps$BiMapConverter",
       "com.google.common.util.concurrent.Futures$ImmediateFuture",
       "com.google.common.xml.XmlEscapers",
       "com.google.common.collect.Interners$WeakInterner$Dummy",
       "com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment",
       "com.google.common.base.Predicates$CompositionPredicate",
       "com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1",
       "com.google.common.collect.MapMaker$ComputingMapAdapter",
       "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule",
       "com.google.common.collect.AbstractSortedMultiset$1",
       "com.google.common.io.Files$FileByteSink",
       "com.google.common.collect.Tables",
       "com.google.common.cache.RemovalListeners$1$1",
       "com.google.common.util.concurrent.ListenableFutureTask",
       "com.google.common.cache.RemovalListeners$1",
       "com.google.common.cache.LocalCache$WeightedWeakValueReference",
       "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound",
       "com.google.common.collect.TransformedListIterator",
       "com.google.common.hash.Hashing$Sha1Holder",
       "com.google.common.collect.TreeTraverser$PostOrderNode",
       "com.google.common.util.concurrent.SmoothRateLimiter$1",
       "com.google.common.collect.ImmutableMapEntry",
       "com.google.common.io.LittleEndianDataInputStream",
       "com.google.common.collect.Lists$ReverseList",
       "com.google.common.base.Equivalence$EquivalentToPredicate",
       "com.google.common.collect.AbstractIterator$State",
       "com.google.common.collect.ImmutableMultimap$EntryCollection",
       "com.google.common.collect.Lists$StringAsImmutableList",
       "com.google.common.cache.CacheLoader$FunctionToCacheLoader",
       "com.google.common.cache.LocalCache$WeightedSoftValueReference",
       "com.google.common.collect.Multimaps$Entries",
       "com.google.common.collect.Multimaps$AsMap$EntrySet",
       "com.google.common.collect.Interners$InternerFunction",
       "com.google.common.collect.MultimapBuilder$LinkedListSupplier",
       "com.google.common.collect.AbstractBiMap$Inverse",
       "com.google.common.util.concurrent.UncheckedExecutionException",
       "com.google.common.collect.Multisets$4$1",
       "com.google.common.cache.CacheBuilderSpec$MaximumSizeParser",
       "com.google.common.cache.LocalCache$StrongEntry",
       "com.google.common.eventbus.SubscriberExceptionContext",
       "com.google.common.util.concurrent.Striped",
       "com.google.common.collect.BinaryTreeTraverser$PreOrderIterator",
       "com.google.common.collect.MapMakerInternalMap$ReferenceEntry",
       "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1",
       "com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference",
       "com.google.common.util.concurrent.Futures$CombinedFuture$1",
       "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap",
       "com.google.common.collect.MapMakerInternalMap$StrongEntry",
       "com.google.common.collect.Multimaps$CustomSetMultimap",
       "com.google.common.io.ByteSource$ByteArrayByteSource",
       "com.google.common.util.concurrent.Futures$CombinedFuture$2",
       "com.google.common.reflect.TypeResolver$TypeTable",
       "com.google.common.util.concurrent.ForwardingCheckedFuture",
       "com.google.common.collect.NaturalOrdering",
       "com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm",
       "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask",
       "com.google.common.cache.Cache",
       "com.google.common.collect.TreeTraverser$BreadthFirstIterator",
       "com.google.common.collect.LinkedListMultimap$Node",
       "com.google.common.collect.ListMultimap",
       "com.google.common.collect.WellBehavedMap$EntrySet$1",
       "com.google.common.collect.AbstractBiMap$EntrySet$1$1",
       "com.google.common.collect.Maps$NavigableKeySet",
       "com.google.common.net.HttpHeaders",
       "com.google.common.reflect.ClassPath$ClassInfo",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering",
       "com.google.common.primitives.ParseRequest",
       "com.google.common.cache.CacheBuilder$OneWeigher",
       "com.google.common.collect.Multimaps$TransformedEntriesListMultimap",
       "com.google.common.escape.Escapers$Builder$1",
       "com.google.common.primitives.Longs",
       "com.google.common.collect.ForwardingListIterator",
       "com.google.common.net.UrlEscapers",
       "com.google.common.collect.MapConstraints$NotNullMapConstraint",
       "com.google.common.collect.ImmutableBiMap$SerializedForm",
       "com.google.common.collect.Multimaps$UnmodifiableSetMultimap",
       "com.google.common.cache.CacheBuilderSpec$1",
       "com.google.common.util.concurrent.package-info",
       "com.google.common.util.concurrent.ListeningExecutorService",
       "com.google.common.hash.Hashing$Md5Holder",
       "com.google.common.collect.Maps$FilteredEntryMap",
       "com.google.common.collect.Synchronized$SynchronizedMultiset",
       "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1",
       "com.google.common.io.FileBackedOutputStream$2",
       "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2",
       "com.google.common.io.FileBackedOutputStream$1",
       "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3",
       "com.google.common.base.Splitter$3$1",
       "com.google.common.base.Stopwatch$1",
       "com.google.common.collect.Synchronized$SynchronizedCollection",
       "com.google.common.collect.Serialization$FieldSetter",
       "com.google.common.collect.Maps$UnmodifiableEntrySet",
       "com.google.common.base.CaseFormat$1",
       "com.google.common.hash.HashCode",
       "com.google.common.base.CaseFormat$2",
       "com.google.common.base.CaseFormat$3",
       "com.google.common.base.CaseFormat$4",
       "com.google.common.base.CaseFormat$5",
       "com.google.common.collect.Sets$FilteredNavigableSet",
       "com.google.common.collect.UnmodifiableSortedMultiset",
       "com.google.common.io.ByteSource$EmptyByteSource",
       "com.google.common.hash.ChecksumHashFunction$ChecksumHasher",
       "com.google.common.collect.MapMakerInternalMap$WriteThroughEntry",
       "com.google.common.collect.ConcurrentHashMultiset",
       "com.google.common.util.concurrent.Service$1",
       "com.google.common.collect.ForwardingQueue",
       "com.google.common.io.GwtWorkarounds",
       "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
       "com.google.common.collect.Sets$SubSet",
       "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator",
       "com.google.common.html.HtmlEscapers",
       "com.google.common.collect.EmptyContiguousSet$SerializedForm",
       "com.google.common.collect.ForwardingMultiset",
       "com.google.common.collect.ImmutableRangeSet$AsSet$2",
       "com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture",
       "com.google.common.collect.ImmutableRangeSet$AsSet$1",
       "com.google.common.collect.ImmutableMultiset$EntrySet",
       "com.google.common.collect.TreeMultimap",
       "com.google.common.hash.Funnels$LongFunnel",
       "com.google.common.base.Splitter",
       "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet",
       "com.google.common.collect.Maps$8",
       "com.google.common.collect.ArrayTable$Column",
       "com.google.common.collect.Maps$9",
       "com.google.common.collect.Maps$6",
       "com.google.common.util.concurrent.MoreExecutors$2",
       "com.google.common.collect.Maps$7",
       "com.google.common.util.concurrent.MoreExecutors$1",
       "com.google.common.util.concurrent.MoreExecutors$4",
       "com.google.common.util.concurrent.MoreExecutors$3",
       "com.google.common.collect.ComparatorOrdering",
       "com.google.common.collect.Maps$1",
       "com.google.common.collect.Maps$4",
       "com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry",
       "com.google.common.collect.Maps$5",
       "com.google.common.collect.Maps$2",
       "com.google.common.collect.Maps$3",
       "com.google.common.collect.ImmutableSortedMultiset$Builder",
       "com.google.common.reflect.Invokable$MethodInvokable",
       "com.google.common.collect.Queues",
       "com.google.common.collect.FilteredKeyMultimap$Entries",
       "com.google.common.hash.AbstractHasher",
       "com.google.common.reflect.TypeResolver",
       "com.google.common.base.Optional$1$1",
       "com.google.common.collect.Ordering$ArbitraryOrdering",
       "com.google.common.hash.Hashing$Crc32cHolder",
       "com.google.common.hash.SipHashFunction",
       "com.google.common.primitives.Doubles$DoubleArrayAsList",
       "com.google.common.collect.SortedLists$KeyAbsentBehavior$2",
       "com.google.common.eventbus.EventBus$1",
       "com.google.common.collect.SortedLists$KeyAbsentBehavior$1",
       "com.google.common.eventbus.EventBus$2",
       "com.google.common.collect.AbstractTable",
       "com.google.common.collect.Tables$1",
       "com.google.common.eventbus.EventBus$3",
       "com.google.common.util.concurrent.ServiceManager",
       "com.google.common.collect.SortedLists$KeyAbsentBehavior$3",
       "com.google.common.collect.StandardRowSortedTable$1",
       "com.google.common.cache.LocalCache$LoadingSerializationProxy",
       "com.google.common.reflect.TypeToken$TypeFilter",
       "com.google.common.collect.Multimap",
       "com.google.common.io.CharSink",
       "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator",
       "com.google.common.collect.ForwardingConcurrentMap",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode",
       "com.google.common.base.StandardSystemProperty",
       "com.google.common.hash.Hashing$Murmur3_32Holder",
       "com.google.common.base.Suppliers$SupplierComposition",
       "com.google.common.io.GwtWorkarounds$CharInput",
       "com.google.common.collect.Tables$TransposeTable",
       "com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher",
       "com.google.common.base.CharMatcher$Or",
       "com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty",
       "com.google.common.collect.ForwardingSortedMap$StandardKeySet",
       "com.google.common.util.concurrent.MoreExecutors$Application$1",
       "com.google.common.escape.Escaper$1",
       "com.google.common.io.FileBackedOutputStream$MemoryOutput",
       "com.google.common.collect.MultimapBuilder",
       "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap",
       "com.google.common.util.concurrent.SimpleTimeLimiter$1",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$1",
       "com.google.common.collect.CartesianList$1",
       "com.google.common.collect.Synchronized$SynchronizedRandomAccessList",
       "com.google.common.base.FinalizableWeakReference",
       "com.google.common.base.internal.Finalizer",
       "com.google.common.base.Enums$StringConverter",
       "com.google.common.collect.RegularImmutableBiMap",
       "com.google.common.io.ByteSink",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace",
       "com.google.common.collect.ImmutableBiMap$Builder",
       "com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream",
       "com.google.common.collect.HashBiMap$KeySet",
       "com.google.common.collect.StandardTable$Row$RowEntrySet$1$1",
       "com.google.common.collect.ImmutableMapEntry$TerminalEntry",
       "com.google.common.hash.BloomFilterStrategies$BitArray",
       "com.google.common.collect.RegularImmutableTable$CellSet",
       "com.google.common.collect.Maps$TransformedEntriesMap",
       "com.google.common.collect.TreeRangeSet$AsRanges",
       "com.google.common.primitives.Chars",
       "com.google.common.cache.LongAdder",
       "com.google.common.collect.WellBehavedMap$1",
       "com.google.common.hash.MessageDigestHashFunction",
       "com.google.common.util.concurrent.Runnables",
       "com.google.common.collect.DenseImmutableTable$1",
       "com.google.common.cache.LocalCache$StrongAccessEntry",
       "com.google.common.collect.Count",
       "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet",
       "com.google.common.cache.LocalCache$LocalManualCache$1",
       "com.google.common.util.concurrent.Callables",
       "com.google.common.primitives.Shorts$ShortConverter",
       "com.google.common.io.ByteStreams$ByteArrayDataInputStream",
       "com.google.common.net.HostAndPort",
       "com.google.common.collect.TreeBasedTable",
       "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1$1",
       "com.google.common.collect.MapConstraints$ConstrainedBiMap",
       "com.google.common.base.Equivalence$Wrapper",
       "com.google.common.util.concurrent.Monitor",
       "com.google.common.base.CharMatcher$FastMatcher",
       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
       "com.google.common.hash.Funnels$StringCharsetFunnel",
       "com.google.common.collect.MapMakerInternalMap$ValueReference",
       "com.google.common.base.Converter$ConverterComposition",
       "com.google.common.collect.EmptyImmutableSetMultimap",
       "com.google.common.collect.HashBiMap$EntrySet",
       "com.google.common.base.Predicates$IsEqualToPredicate",
       "com.google.common.collect.ImmutableCollection",
       "com.google.common.cache.LocalCache$ManualSerializationProxy",
       "com.google.common.hash.BloomFilterStrategies",
       "com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry",
       "com.google.common.io.BaseEncoding$3",
       "com.google.common.io.BaseEncoding$4",
       "com.google.common.collect.ImmutableCollection$Builder",
       "com.google.common.io.BaseEncoding$1",
       "com.google.common.io.BaseEncoding$2",
       "com.google.common.annotations.GwtIncompatible",
       "com.google.common.collect.TreeRangeMap$1",
       "com.google.common.collect.CartesianList",
       "com.google.common.collect.Maps$FilteredKeyMap",
       "com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException",
       "com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset",
       "com.google.common.util.concurrent.AbstractScheduledService$Scheduler",
       "com.google.common.collect.RegularImmutableMap$NonTerminalMapEntry",
       "com.google.common.util.concurrent.ListenableFuture",
       "com.google.common.collect.ImmutableEnumSet$EnumSerializedForm",
       "com.google.common.io.CharSource$ConcatenatedCharSource",
       "com.google.common.util.concurrent.JdkFutureAdapters",
       "com.google.common.collect.ImmutableList",
       "com.google.common.collect.ImmutableRangeSet$AsSet",
       "com.google.common.escape.Escapers",
       "com.google.common.io.Flushables",
       "com.google.common.collect.Iterables$10$1",
       "com.google.common.collect.SortedMultisets$ElementSet",
       "com.google.common.collect.MapConstraints$ConstrainedEntries",
       "com.google.common.reflect.TypeResolver$TypeTable$1",
       "com.google.common.hash.HashingOutputStream",
       "com.google.common.hash.BloomFilter",
       "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry",
       "com.google.common.util.concurrent.Callables$3",
       "com.google.common.util.concurrent.Callables$2",
       "com.google.common.cache.LongAddable",
       "com.google.common.collect.MapMaker$RemovalListener",
       "com.google.common.util.concurrent.Callables$1",
       "com.google.common.hash.Hashing$ConcatenatedHashFunction",
       "com.google.common.collect.ImmutableRangeMap$Builder",
       "com.google.common.io.LineProcessor",
       "com.google.common.collect.MapMakerInternalMap",
       "com.google.common.collect.ForwardingSortedMultiset",
       "com.google.common.collect.Multisets$ElementSet$1",
       "com.google.common.collect.HashBiMap$Inverse$1$1$InverseEntry",
       "com.google.common.collect.Maps$UnmodifiableEntries",
       "com.google.common.collect.BoundType$2",
       "com.google.common.util.concurrent.AsyncSettableFuture$1",
       "com.google.common.collect.BoundType$1",
       "com.google.common.io.Closer$Suppressor",
       "com.google.common.collect.RegularImmutableSortedMultiset",
       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
       "com.google.common.io.GwtWorkarounds$ByteInput",
       "com.google.common.reflect.ClassPath",
       "com.google.common.collect.LinkedHashMultimap",
       "com.google.common.collect.Synchronized$SynchronizedList",
       "com.google.common.base.FinalizableReferenceQueue$FinalizerLoader",
       "com.google.common.cache.AbstractCache",
       "com.google.common.collect.Maps$SortedKeySet",
       "com.google.common.collect.StandardTable$TableSet",
       "com.google.common.util.concurrent.ListenerCallQueue$Callback",
       "com.google.common.collect.LexicographicalOrdering",
       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
       "com.google.common.collect.Multisets$5",
       "com.google.common.collect.StandardTable$Row",
       "com.google.common.collect.Multisets$3",
       "com.google.common.collect.Multisets$4",
       "com.google.common.collect.Multisets$1",
       "com.google.common.cache.CacheStats",
       "com.google.common.collect.Multisets$2",
       "com.google.common.collect.Iterables",
       "com.google.common.collect.LinkedListMultimap$1",
       "com.google.common.collect.LinkedListMultimap$2",
       "com.google.common.collect.GenericMapMaker$NullListener",
       "com.google.common.io.CountingOutputStream",
       "com.google.common.collect.LinkedListMultimap$3",
       "com.google.common.collect.LinkedListMultimap$4",
       "com.google.common.cache.CacheLoader$SupplierToCacheLoader",
       "com.google.common.util.concurrent.ThreadFactoryBuilder$1",
       "com.google.common.collect.HashBiMap$Itr",
       "com.google.common.util.concurrent.Futures$ImmediateCancelledFuture",
       "com.google.common.collect.ObjectArrays",
       "com.google.common.collect.Synchronized$SynchronizedDeque",
       "com.google.common.collect.Constraints$ConstrainedSet",
       "com.google.common.util.concurrent.Monitor$Guard",
       "com.google.common.io.OutputSupplier",
       "com.google.common.collect.Constraints$ConstrainedSortedSet",
       "com.google.common.collect.SortedIterable",
       "com.google.common.collect.RangeMap",
       "com.google.common.collect.UnmodifiableIterator",
       "com.google.common.io.ByteSource$AsCharSource",
       "com.google.common.base.Functions$SupplierFunction",
       "com.google.common.collect.ImmutableSortedMultiset",
       "com.google.common.eventbus.EventSubscriber",
       "com.google.common.io.InputSupplier",
       "com.google.common.hash.package-info",
       "com.google.common.collect.Maps$EntryFunction$2",
       "com.google.common.collect.Maps$EntryFunction$1",
       "com.google.common.io.BaseEncoding$StandardBaseEncoding$2",
       "com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder",
       "com.google.common.io.BaseEncoding$StandardBaseEncoding$1",
       "com.google.common.io.AppendableWriter",
       "com.google.common.util.concurrent.Futures$ImmediateSuccessfulCheckedFuture",
       "com.google.common.collect.HashMultiset",
       "com.google.common.cache.CacheBuilderSpec$ValueParser",
       "com.google.common.base.SmallCharMatcher",
       "com.google.common.base.CharMatcher$RangesMatcher",
       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture$1",
       "com.google.common.collect.SingletonImmutableList",
       "com.google.common.base.Predicates$AndPredicate",
       "com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry",
       "com.google.common.primitives.Floats",
       "com.google.common.reflect.TypeToken$TypeCollector$1",
       "com.google.common.collect.Maps$FilteredMapValues",
       "com.google.common.collect.MinMaxPriorityQueue$QueueIterator",
       "com.google.common.collect.ForwardingMap",
       "com.google.common.collect.ForwardingListMultimap",
       "com.google.common.collect.ExplicitOrdering",
       "com.google.common.io.LittleEndianDataOutputStream",
       "com.google.common.reflect.TypeToken$TypeCollector$3",
       "com.google.common.reflect.TypeToken$TypeCollector$2",
       "com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1",
       "com.google.common.reflect.TypeToken$TypeCollector$4",
       "com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2",
       "com.google.common.cache.LocalCache$Strength",
       "com.google.common.collect.MapMakerInternalMap$CleanupMapTask",
       "com.google.common.hash.Murmur3_128HashFunction",
       "com.google.common.util.concurrent.AtomicDoubleArray",
       "com.google.common.collect.Synchronized$SynchronizedListMultimap",
       "com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm",
       "com.google.common.hash.Funnels$SequentialFunnel",
       "com.google.common.hash.AbstractByteHasher",
       "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$1",
       "com.google.common.collect.Tables$AbstractCell",
       "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$2",
       "com.google.common.base.CaseFormat",
       "com.google.common.collect.Interners",
       "com.google.common.primitives.Floats$LexicographicalComparator",
       "com.google.common.cache.LocalCache$ValueIterator",
       "com.google.common.primitives.Ints",
       "com.google.common.annotations.Beta",
       "com.google.common.collect.MapMakerInternalMap$SoftEntry",
       "com.google.common.primitives.Primitives",
       "com.google.common.base.Utf8",
       "com.google.common.base.Splitter$SplittingIterator",
       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1$1",
       "com.google.common.collect.RegularImmutableSortedMap$1",
       "com.google.common.collect.Synchronized$SynchronizedAsMapValues",
       "com.google.common.base.Predicates$InPredicate",
       "com.google.common.collect.MapMakerInternalMap$EntrySet",
       "com.google.common.collect.Maps$MapDifferenceImpl",
       "com.google.common.net.MediaType$2",
       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
       "com.google.common.collect.Multisets$1$1",
       "com.google.common.primitives.UnsignedInteger",
       "com.google.common.collect.Multisets$FilteredMultiset",
       "com.google.common.base.Splitter$MapSplitter",
       "com.google.common.cache.Weigher",
       "com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference",
       "com.google.common.util.concurrent.MoreExecutors$DirectExecutorService",
       "com.google.common.base.Converter$IdentityConverter",
       "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder",
       "com.google.common.collect.TreeRangeSet$RangesByUpperBound",
       "com.google.common.collect.HashBiMap$Inverse",
       "com.google.common.collect.ForwardingMap$StandardKeySet",
       "com.google.common.collect.Iterators$10",
       "com.google.common.cache.LocalCache$StrongAccessWriteEntry",
       "com.google.common.collect.Iterators$12",
       "com.google.common.collect.Iterators$11",
       "com.google.common.collect.MapConstraint",
       "com.google.common.base.Predicate",
       "com.google.common.collect.ImmutableSetMultimap$BuilderMultimap",
       "com.google.common.collect.Lists$CharSequenceAsList",
       "com.google.common.eventbus.EventBus$EventWithSubscriber",
       "com.google.common.cache.LocalCache$KeyIterator",
       "com.google.common.net.InetAddresses$TeredoInfo",
       "com.google.common.collect.Iterators$14",
       "com.google.common.collect.Iterators$13",
       "com.google.common.hash.AbstractStreamingHashFunction",
       "com.google.common.cache.LocalCache",
       "com.google.common.cache.LongAddables$PureJavaLongAddable",
       "com.google.common.collect.ArrayTable$1",
       "com.google.common.math.MathPreconditions",
       "com.google.common.util.concurrent.Futures$FallbackFuture$1$1",
       "com.google.common.collect.ImmutableMultimap",
       "com.google.common.collect.HashBiMap$InverseSerializedForm",
       "com.google.common.util.concurrent.WrappingScheduledExecutorService",
       "com.google.common.collect.FilteredEntryMultimap$Keys$1",
       "com.google.common.collect.ImmutableSortedSet",
       "com.google.common.base.Charsets",
       "com.google.common.util.concurrent.AbstractExecutionThreadService$1$2",
       "com.google.common.util.concurrent.AbstractExecutionThreadService$1$1",
       "com.google.common.collect.ImmutableRangeSet$Builder",
       "com.google.common.hash.Hashing$LinearCongruentialGenerator",
       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1",
       "com.google.common.collect.Multimaps$Keys",
       "com.google.common.base.Joiner$MapJoiner",
       "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache",
       "com.google.common.collect.BinaryTreeTraverser$1$1",
       "com.google.common.collect.AbstractMultiset$EntrySet",
       "com.google.common.collect.ImmutableMultimap$BuilderMultimap",
       "com.google.common.base.Predicates$OrPredicate",
       "com.google.common.collect.RegularImmutableSortedMap",
       "com.google.common.base.Objects$1",
       "com.google.common.base.Optional$1",
       "com.google.common.collect.FilteredKeySetMultimap",
       "com.google.common.base.Splitter$4$1",
       "com.google.common.base.Objects",
       "com.google.common.collect.SortedSetMultimap",
       "com.google.common.collect.ImmutableSortedAsList",
       "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2",
       "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1",
       "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap",
       "com.google.common.collect.AbstractBiMap$KeySet",
       "com.google.common.collect.Maps$SortedMapDifferenceImpl",
       "com.google.common.collect.Constraints$ConstrainedList",
       "com.google.common.collect.Maps$EntrySet",
       "com.google.common.util.concurrent.MoreExecutors",
       "com.google.common.util.concurrent.Futures$FutureCombiner",
       "com.google.common.io.CharSource$EmptyCharSource",
       "com.google.common.cache.LocalCache$WeakAccessWriteEntry",
       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
       "com.google.common.cache.LocalCache$2",
       "com.google.common.collect.ForwardingMultiset$StandardElementSet",
       "com.google.common.cache.LocalCache$1",
       "com.google.common.hash.Hashing$Crc32Holder",
       "com.google.common.collect.EmptyContiguousSet$1",
       "com.google.common.cache.LongAddables",
       "com.google.common.collect.ImmutableMap$Builder",
       "com.google.common.base.Converter$FunctionBasedConverter",
       "com.google.common.cache.LocalCache$ReferenceEntry",
       "com.google.common.collect.MutableClassToInstanceMap$1",
       "com.google.common.collect.AbstractBiMap$EntrySet",
       "com.google.common.reflect.TypeToken$TypeFilter$1",
       "com.google.common.reflect.TypeToken$TypeFilter$2",
       "com.google.common.collect.Multimaps$CustomMultimap",
       "com.google.common.collect.RegularImmutableList",
       "com.google.common.collect.Tables$TransposeTable$1",
       "com.google.common.hash.BloomFilterStrategies$1",
       "com.google.common.hash.BloomFilterStrategies$2",
       "com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException",
       "com.google.common.reflect.Types$ClassOwnership$2",
       "com.google.common.cache.LocalCache$EntryFactory",
       "com.google.common.collect.Synchronized$SynchronizedAsMapEntries",
       "com.google.common.reflect.Types$ClassOwnership$3",
       "com.google.common.collect.SingletonImmutableTable",
       "com.google.common.reflect.Types$ClassOwnership$1",
       "com.google.common.util.concurrent.SimpleTimeLimiter$1$1",
       "com.google.common.collect.ImmutableMapKeySet",
       "com.google.common.base.Verify",
       "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4",
       "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$3",
       "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$2",
       "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1",
       "com.google.common.util.concurrent.FutureFallback",
       "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$6",
       "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$5",
       "com.google.common.base.Ticker",
       "com.google.common.hash.Funnel",
       "com.google.common.eventbus.SubscriberExceptionHandler",
       "com.google.common.io.ByteStreams",
       "com.google.common.collect.Maps$AbstractFilteredMap",
       "com.google.common.collect.FilteredMultimap",
       "com.google.common.collect.FilteredMultimapValues",
       "com.google.common.io.ByteProcessor",
       "com.google.common.collect.MapMakerInternalMap$SerializationProxy",
       "com.google.common.collect.ImmutableSet$Builder",
       "com.google.common.collect.Sets$SetView",
       "com.google.common.collect.Synchronized$SynchronizedAsMapValues$1",
       "com.google.common.collect.Synchronized$SynchronizedSortedSet",
       "com.google.common.collect.Maps$SortedAsMapView",
       "com.google.common.collect.MapMaker$RemovalCause$4",
       "com.google.common.collect.Collections2$PermutationIterator",
       "com.google.common.collect.MapMaker$RemovalCause$5",
       "com.google.common.collect.MapMaker$RemovalCause$2",
       "com.google.common.collect.MapMaker$RemovalCause$3",
       "com.google.common.primitives.Shorts$ShortArrayAsList",
       "com.google.common.io.Closer",
       "com.google.common.collect.Tables$ImmutableCell",
       "com.google.common.collect.UsingToStringOrdering",
       "com.google.common.collect.ArrayTable$ArrayMap",
       "com.google.common.collect.MapMaker$RemovalCause$1",
       "com.google.common.reflect.TypeToken$TypeSet",
       "com.google.common.util.concurrent.AtomicLongMap$1",
       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
       "com.google.common.collect.ForwardingMap$StandardEntrySet",
       "com.google.common.cache.LocalCache$WriteQueue",
       "com.google.common.collect.MapDifference",
       "com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry",
       "com.google.common.primitives.Ints$LexicographicalComparator",
       "com.google.common.collect.StandardTable$ColumnKeyIterator",
       "com.google.common.collect.MinMaxPriorityQueue$Heap",
       "com.google.common.collect.Maps$FilteredEntryNavigableMap",
       "com.google.common.collect.FilteredEntryMultimap$AsMap$2$1",
       "com.google.common.collect.MultimapBuilder$ListMultimapBuilder",
       "com.google.common.eventbus.EventBus$LoggingSubscriberExceptionHandler",
       "com.google.common.reflect.ClassPath$Scanner",
       "com.google.common.eventbus.AnnotatedSubscriberFinder$1",
       "com.google.common.collect.Sets$DescendingSet",
       "com.google.common.collect.Sets",
       "com.google.common.primitives.Ints$IntConverter",
       "com.google.common.collect.Multisets$ElementSet",
       "com.google.common.collect.ComparisonChain$1",
       "com.google.common.cache.LocalCache$AccessQueue$1",
       "com.google.common.cache.LocalCache$AccessQueue$2",
       "com.google.common.collect.Iterables$2",
       "com.google.common.collect.Lists$TransformingSequentialList$1",
       "com.google.common.primitives.Booleans",
       "com.google.common.collect.Iterables$3",
       "com.google.common.collect.Iterables$4",
       "com.google.common.collect.Iterables$5",
       "com.google.common.collect.Iterables$6",
       "com.google.common.collect.ForwardingObject",
       "com.google.common.collect.Iterables$7",
       "com.google.common.collect.Iterables$8",
       "com.google.common.collect.Iterables$9",
       "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys",
       "com.google.common.base.MoreObjects$1",
       "com.google.common.reflect.TypeToInstanceMap",
       "com.google.common.collect.ImmutableBiMap",
       "com.google.common.collect.Multisets$UnmodifiableMultiset",
       "com.google.common.collect.Multimaps$Keys$1$1",
       "com.google.common.util.concurrent.ServiceManager$NoOpService",
       "com.google.common.io.Files$FileByteSource",
       "com.google.common.collect.Multimaps$Keys$KeysEntrySet",
       "com.google.common.collect.Collections2$1",
       "com.google.common.collect.Iterables$1",
       "com.google.common.reflect.Parameter",
       "com.google.common.collect.RegularImmutableMap$EntrySet",
       "com.google.common.base.Ascii",
       "com.google.common.collect.ImmutableRangeSet$1",
       "com.google.common.collect.LinkedHashMultimap$ValueSet$1",
       "com.google.common.primitives.SignedBytes",
       "com.google.common.cache.LocalCache$StrongWriteEntry",
       "com.google.common.net.MediaType$1",
       "com.google.common.reflect.ImmutableTypeToInstanceMap$1",
       "com.google.common.cache.RemovalCause",
       "com.google.common.collect.MapConstraints$ConstrainedMultimap$2",
       "com.google.common.collect.SortedIterables",
       "com.google.common.util.concurrent.ListenableScheduledFuture",
       "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1",
       "com.google.common.collect.MapConstraints$ConstrainedMultimap$1"
      ],
      "usedTypes": [
       "com.google.common.base.Charsets",
       "com.google.common.util.concurrent.Futures",
       "com.google.common.util.concurrent.MoreExecutors",
       "com.google.common.util.concurrent.ListenableFuture",
       "com.google.common.util.concurrent.SettableFuture",
       "com.google.common.net.HostAndPort",
       "com.google.common.util.concurrent.FutureCallback",
       "com.google.common.util.concurrent.ListeningExecutorService"
      ],
      "usageRatio": 0.004733727810650888,
      "children": []
     },
     {
      "id": "org.slf4j:slf4j-api:jar:1.7.5:compile",
      "coordinates": "org.slf4j:slf4j-api:1.7.5",
      "groupId": "org.slf4j",
      "artifactId": "slf4j-api",
      "version": "1.7.5",
      "scope": "compile",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "com.spotify:folsom:jar:0.7.1:compile",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     },
     {
      "id": "io.netty:netty-all:jar:4.0.25.Final:compile",
      "coordinates": "io.netty:netty-all:4.0.25.Final",
      "groupId": "io.netty",
      "artifactId": "netty-all",
      "version": "4.0.25.Final",
      "scope": "compile",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "com.spotify:folsom:jar:0.7.1:compile",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     },
     {
      "id": "com.yammer.metrics:metrics-core:jar:2.2.0:compile",
      "coordinates": "com.yammer.metrics:metrics-core:2.2.0",
      "groupId": "com.yammer.metrics",
      "artifactId": "metrics-core",
      "version": "2.2.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 82123,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.spotify:folsom:jar:0.7.1:compile",
      "allTypes": [
       "com.yammer.metrics.core.VirtualMachineMetrics$GarbageCollectorStats",
       "com.yammer.metrics.core.Clock$UserTimeClock",
       "com.yammer.metrics.reporting.JmxReporter$MeterMBean",
       "com.yammer.metrics.util.DeadlockHealthCheck",
       "com.yammer.metrics.core.MetricPredicate",
       "com.yammer.metrics.stats.ThreadLocalRandom",
       "com.yammer.metrics.core.MetricsRegistry",
       "com.yammer.metrics.reporting.JmxReporter$Gauge",
       "com.yammer.metrics.util.DeathRattleExceptionHandler",
       "com.yammer.metrics.core.MetricsRegistryListener",
       "com.yammer.metrics.stats.UniformSample",
       "com.yammer.metrics.util.JmxGauge",
       "com.yammer.metrics.core.ThreadPools$NamedThreadFactory",
       "com.yammer.metrics.Metrics$1",
       "com.yammer.metrics.core.HealthCheckRegistry",
       "com.yammer.metrics.core.HealthCheck$Result",
       "com.yammer.metrics.core.Sampling",
       "com.yammer.metrics.reporting.ConsoleReporter$1",
       "com.yammer.metrics.core.Histogram$1",
       "com.yammer.metrics.stats.ExponentiallyDecayingSample",
       "com.yammer.metrics.stats.ThreadLocalRandom$1",
       "com.yammer.metrics.util.RatioGauge",
       "com.yammer.metrics.core.TimerContext",
       "com.yammer.metrics.core.ThreadPools",
       "com.yammer.metrics.core.Stoppable",
       "com.yammer.metrics.core.Metered",
       "com.yammer.metrics.core.Gauge",
       "com.yammer.metrics.core.Metric",
       "com.yammer.metrics.core.Timer",
       "com.yammer.metrics.HealthChecks",
       "com.yammer.metrics.core.VirtualMachineMetrics$BufferPoolStats",
       "com.yammer.metrics.reporting.JmxReporter$Meter",
       "com.yammer.metrics.reporting.JmxReporter$Counter",
       "com.yammer.metrics.core.VirtualMachineMetrics",
       "com.yammer.metrics.reporting.JmxReporter$HistogramMBean",
       "com.yammer.metrics.core.Histogram",
       "com.yammer.metrics.core.MetricPredicate$1",
       "com.yammer.metrics.reporting.JmxReporter$CounterMBean",
       "com.yammer.metrics.reporting.JmxReporter",
       "com.yammer.metrics.reporting.CsvReporter",
       "com.yammer.metrics.reporting.JmxReporter$Histogram",
       "com.yammer.metrics.stats.EWMA",
       "com.yammer.metrics.reporting.JmxReporter$AbstractBean",
       "com.yammer.metrics.core.Clock",
       "com.yammer.metrics.reporting.AbstractReporter",
       "com.yammer.metrics.stats.Snapshot",
       "com.yammer.metrics.core.MetricName",
       "com.yammer.metrics.reporting.CsvReporter$Context",
       "com.yammer.metrics.reporting.JmxReporter$TimerMBean",
       "com.yammer.metrics.core.Meter$1",
       "com.yammer.metrics.core.Meter",
       "com.yammer.metrics.core.Summarizable",
       "com.yammer.metrics.reporting.JmxReporter$Timer",
       "com.yammer.metrics.core.Histogram$SampleType$1",
       "com.yammer.metrics.core.Histogram$SampleType$2",
       "com.yammer.metrics.core.Counter",
       "com.yammer.metrics.core.HealthCheck",
       "com.yammer.metrics.core.Clock$CpuTimeClock",
       "com.yammer.metrics.reporting.ConsoleReporter",
       "com.yammer.metrics.core.MetricProcessor",
       "com.yammer.metrics.reporting.JmxReporter$MetricMBean",
       "com.yammer.metrics.util.ToggleGauge",
       "com.yammer.metrics.reporting.JmxReporter$1",
       "com.yammer.metrics.reporting.AbstractPollingReporter",
       "com.yammer.metrics.reporting.CsvReporter$1",
       "com.yammer.metrics.stats.Sample",
       "com.yammer.metrics.reporting.JmxReporter$Context",
       "com.yammer.metrics.reporting.JmxReporter$GaugeMBean",
       "com.yammer.metrics.core.VirtualMachineMetrics$1",
       "com.yammer.metrics.Metrics",
       "com.yammer.metrics.util.PercentGauge",
       "com.yammer.metrics.core.Histogram$SampleType"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "org.slf4j:slf4j-api:jar:1.7.2:compile",
        "coordinates": "org.slf4j:slf4j-api:1.7.2",
        "groupId": "org.slf4j",
        "artifactId": "slf4j-api",
        "version": "1.7.2",
        "scope": "compile",
        "packaging": "jar",
        "omitted": true,
        "type": "unknown",
        "status": "unknown",
        "parent": "com.yammer.metrics:metrics-core:jar:2.2.0:compile",
        "allTypes": [],
        "usedTypes": [],
        "usageRatio": -1.0,
        "children": []
       }
      ]
     },
     {
      "id": "com.spotify:dns:jar:3.0.1:compile",
      "coordinates": "com.spotify:dns:3.0.1",
      "groupId": "com.spotify",
      "artifactId": "dns",
      "version": "3.0.1",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 36494,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.spotify:folsom:jar:0.7.1:compile",
      "allTypes": [
       "com.spotify.dns.AutoValue_LookupResult",
       "com.spotify.dns.AbstractChangeNotifier",
       "com.spotify.dns.LookupResult",
       "com.spotify.dns.MeteredDnsSrvResolver",
       "com.spotify.dns.ChangeNotifier",
       "com.spotify.dns.DnsSrvResolvers$1",
       "com.spotify.dns.CachingLookupFactory$2",
       "com.spotify.dns.AggregatingChangeNotifier",
       "com.spotify.dns.CachingLookupFactory$1",
       "com.spotify.dns.DnsSrvWatcher",
       "com.spotify.dns.AbstractChangeNotifier$ChangeNotificationImpl",
       "com.spotify.dns.DnsSrvResolvers$DnsSrvResolverBuilder",
       "com.spotify.dns.DnsSrvWatchers",
       "com.spotify.dns.PollingDnsSrvWatcher",
       "com.spotify.dns.ChangeNotifierFactory$RunnableChangeNotifier",
       "com.spotify.dns.StaticChangeNotifier",
       "com.spotify.dns.DnsSrvWatchers$1",
       "com.spotify.dns.DnsSrvWatchers$DnsSrvWatcherBuilder$2",
       "com.spotify.dns.DnsSrvWatchers$DnsSrvWatcherBuilder$1",
       "com.spotify.dns.ErrorHandler",
       "com.spotify.dns.ChangeNotifier$ChangeNotification",
       "com.spotify.dns.DnsSrvResolver",
       "com.spotify.dns.LookupFactory",
       "com.spotify.dns.ChangeNotifiers",
       "com.spotify.dns.DirectChangeNotifier",
       "com.spotify.dns.DnsSrvResolvers",
       "com.spotify.dns.DnsSrvWatchers$DnsSrvWatcherBuilder",
       "com.spotify.dns.XBillDnsSrvResolver",
       "com.spotify.dns.ChangeNotifiers$1",
       "com.spotify.dns.DnsException",
       "com.spotify.dns.statistics.DnsReporter",
       "com.spotify.dns.CachingLookupFactory",
       "com.spotify.dns.statistics.DnsTimingContext",
       "com.spotify.dns.ChangeNotifier$Listener",
       "com.spotify.dns.DnsSrvWatcherFactory",
       "com.spotify.dns.SimpleLookupFactory",
       "com.spotify.dns.ChangeNotifierFactory",
       "com.spotify.dns.RetainingDnsSrvResolver",
       "com.spotify.dns.AggregatingChangeNotifier$1",
       "com.spotify.dns.ServiceResolvingChangeNotifier"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "dnsjava:dnsjava:jar:2.1.7:compile",
        "coordinates": "dnsjava:dnsjava:2.1.7",
        "groupId": "dnsjava",
        "artifactId": "dnsjava",
        "version": "2.1.7",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 307637,
        "type": "transitive",
        "status": "bloated",
        "parent": "com.spotify:dns:jar:3.0.1:compile",
        "allTypes": [
         "org.xbill.DNS.DNSSEC$ECKeyInfo",
         "jnamed$3",
         "org.xbill.DNS.DHCIDRecord",
         "jnamed$2",
         "org.xbill.DNS.ExtendedFlags",
         "jnamed$1",
         "org.xbill.DNS.CNAMERecord",
         "org.xbill.DNS.DNSKEYRecord$Protocol",
         "org.xbill.DNS.ReverseMap",
         "org.xbill.DNS.KEYBase",
         "org.xbill.DNS.Update",
         "org.xbill.DNS.IPSECKEYRecord",
         "org.xbill.DNS.Generator",
         "org.xbill.DNS.WKSRecord$Service",
         "jnamed",
         "org.xbill.DNS.InvalidTTLException",
         "org.xbill.DNS.TCPClient",
         "org.xbill.DNS.TKEYRecord",
         "org.xbill.DNS.Client",
         "org.xbill.DNS.OPTRecord",
         "org.xbill.DNS.PTRRecord",
         "org.xbill.DNS.InvalidTypeException",
         "org.xbill.DNS.TLSARecord$MatchingType",
         "org.xbill.DNS.DNSSEC$SignatureVerificationException",
         "org.xbill.DNS.DNSSEC$SignatureExpiredException",
         "org.xbill.DNS.NXTRecord",
         "org.xbill.DNS.Lookup",
         "org.xbill.DNS.SOARecord",
         "org.xbill.DNS.Cache$CacheRRset",
         "org.xbill.DNS.DClass",
         "org.xbill.DNS.ISDNRecord",
         "org.xbill.DNS.DNSKEYRecord",
         "org.xbill.DNS.MDRecord",
         "org.xbill.DNS.SPFRecord",
         "org.xbill.DNS.DNSSEC$IncompatibleKeyException",
         "org.xbill.DNS.WKSRecord$Protocol",
         "org.xbill.DNS.MRRecord",
         "org.xbill.DNS.DNSSEC$SignatureNotYetValidException",
         "org.xbill.DNS.KEYRecord",
         "org.xbill.DNS.Tokenizer$Token",
         "org.xbill.DNS.DNSKEYRecord$Flags",
         "org.xbill.DNS.Tokenizer",
         "org.xbill.DNS.ZoneTransferIn$ZoneTransferHandler",
         "org.xbill.DNS.SingleNameBase",
         "org.xbill.DNS.DNSSEC$MalformedKeyException",
         "org.xbill.DNS.U16NameBase",
         "org.xbill.DNS.utils.base16",
         "org.xbill.DNS.SIG0",
         "org.xbill.DNS.utils.HMAC",
         "org.xbill.DNS.Master",
         "org.xbill.DNS.MXRecord",
         "org.xbill.DNS.NSAPRecord",
         "org.xbill.DNS.APLRecord$Element",
         "org.xbill.DNS.spi.DNSJavaNameService",
         "org.xbill.DNS.NSECRecord",
         "org.xbill.DNS.ResolveThread",
         "org.xbill.DNS.ZoneTransferIn",
         "org.xbill.DNS.Serial",
         "org.xbill.DNS.APLRecord$1",
         "org.xbill.DNS.TSIG$StreamVerifier",
         "org.xbill.DNS.Cache$CacheMap",
         "org.xbill.DNS.Opcode",
         "org.xbill.DNS.Rcode",
         "org.xbill.DNS.A6Record",
         "org.xbill.DNS.ClientSubnetOption",
         "org.xbill.DNS.TextParseException",
         "org.xbill.DNS.DNSSEC$Algorithm",
         "org.xbill.DNS.RRSIGRecord",
         "org.xbill.DNS.Tokenizer$1",
         "org.xbill.DNS.Name",
         "org.xbill.DNS.UDPClient$1",
         "org.xbill.DNS.CERTRecord$CertificateType",
         "org.xbill.DNS.DNSInput",
         "org.xbill.DNS.NameTooLongException",
         "org.xbill.DNS.GenericEDNSOption",
         "org.xbill.DNS.SSHFPRecord$Algorithm",
         "org.xbill.DNS.Credibility",
         "org.xbill.DNS.UNKRecord",
         "org.xbill.DNS.RRset",
         "org.xbill.DNS.TTL",
         "org.xbill.DNS.IPSECKEYRecord$Algorithm",
         "org.xbill.DNS.Zone",
         "org.xbill.DNS.ZoneTransferIn$Delta",
         "org.xbill.DNS.utils.base32",
         "org.xbill.DNS.DNAMERecord",
         "org.xbill.DNS.Zone$ZoneIterator",
         "org.xbill.DNS.Mnemonic",
         "org.xbill.DNS.ResolverConfig",
         "org.xbill.DNS.NSIDOption",
         "org.xbill.DNS.Compression",
         "org.xbill.DNS.TSIG",
         "org.xbill.DNS.InvalidDClassException",
         "org.xbill.DNS.NSEC3Record$Digest",
         "org.xbill.DNS.IPSECKEYRecord$Gateway",
         "org.xbill.DNS.ZoneTransferIn$BasicHandler",
         "org.xbill.DNS.Compression$Entry",
         "org.xbill.DNS.TLSARecord",
         "org.xbill.DNS.EDNSOption$Code",
         "org.xbill.DNS.TXTBase",
         "org.xbill.DNS.SSHFPRecord",
         "org.xbill.DNS.Address",
         "dig",
         "org.xbill.DNS.DNSSEC",
         "org.xbill.DNS.DSRecord",
         "org.xbill.DNS.WKSRecord",
         "org.xbill.DNS.TSIGRecord",
         "org.xbill.DNS.Header",
         "org.xbill.DNS.CERTRecord",
         "org.xbill.DNS.ZoneTransferIn$1",
         "org.xbill.DNS.NSEC3PARAMRecord",
         "org.xbill.DNS.DNSSEC$UnsupportedAlgorithmException",
         "org.xbill.DNS.MBRecord",
         "org.xbill.DNS.DNSSEC$KeyMismatchException",
         "org.xbill.DNS.SIGBase",
         "org.xbill.DNS.DNSOutput",
         "org.xbill.DNS.TLSARecord$CertificateUsage",
         "org.xbill.DNS.Section",
         "org.xbill.DNS.URIRecord",
         "org.xbill.DNS.DClass$DClassMnemonic",
         "org.xbill.DNS.FormattedTime",
         "org.xbill.DNS.KEYRecord$Flags",
         "org.xbill.DNS.DNSSEC$NoSignatureException",
         "org.xbill.DNS.DNSSEC$DNSSECException",
         "org.xbill.DNS.RelativeNameException",
         "org.xbill.DNS.NSRecord",
         "org.xbill.DNS.NSAP_PTRRecord",
         "org.xbill.DNS.ExtendedResolver$Resolution",
         "org.xbill.DNS.SIGRecord",
         "org.xbill.DNS.HINFORecord",
         "org.xbill.DNS.SRVRecord",
         "org.xbill.DNS.DLVRecord",
         "org.xbill.DNS.EmptyRecord",
         "org.xbill.DNS.Type$TypeMnemonic",
         "org.xbill.DNS.Tokenizer$TokenizerException",
         "org.xbill.DNS.LOCRecord",
         "org.xbill.DNS.SSHFPRecord$Digest",
         "org.xbill.DNS.RPRecord",
         "org.xbill.DNS.DSRecord$Digest",
         "org.xbill.DNS.utils.hexdump",
         "org.xbill.DNS.AAAARecord",
         "org.xbill.DNS.TXTRecord",
         "org.xbill.DNS.NSEC3Record",
         "org.xbill.DNS.SingleCompressedNameBase",
         "org.xbill.DNS.ZoneTransferException",
         "org.xbill.DNS.NULLRecord",
         "org.xbill.DNS.NSEC3Record$Flags",
         "org.xbill.DNS.KXRecord",
         "org.xbill.DNS.Message",
         "org.xbill.DNS.Options",
         "org.xbill.DNS.utils.base64",
         "update",
         "org.xbill.DNS.Cache",
         "org.xbill.DNS.SetResponse",
         "org.xbill.DNS.PacketLogger",
         "org.xbill.DNS.X25Record",
         "org.xbill.DNS.TypeBitmap",
         "org.xbill.DNS.UDPClient",
         "org.xbill.DNS.MGRecord",
         "org.xbill.DNS.ResolverListener",
         "org.xbill.DNS.ARecord",
         "org.xbill.DNS.NAPTRRecord",
         "org.xbill.DNS.Cache$Element",
         "org.xbill.DNS.spi.DNSJavaNameServiceDescriptor",
         "org.xbill.DNS.AFSDBRecord",
         "org.xbill.DNS.TLSARecord$Selector",
         "org.xbill.DNS.Record",
         "org.xbill.DNS.RTRecord",
         "org.xbill.DNS.APLRecord",
         "org.xbill.DNS.utils.base32$Alphabet",
         "org.xbill.DNS.Cache$NegativeElement",
         "org.xbill.DNS.EDNSOption",
         "lookup",
         "org.xbill.DNS.Type",
         "org.xbill.DNS.Compression$1",
         "org.xbill.DNS.GPOSRecord",
         "org.xbill.DNS.PXRecord",
         "org.xbill.DNS.SimpleResolver",
         "org.xbill.DNS.Flags",
         "org.xbill.DNS.KEYRecord$Protocol",
         "org.xbill.DNS.WireParseException",
         "org.xbill.DNS.MINFORecord",
         "org.xbill.DNS.ExtendedResolver",
         "org.xbill.DNS.MFRecord",
         "org.xbill.DNS.Resolver"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "com.google.guava:guava:jar:18.0:compile",
        "coordinates": "com.google.guava:guava:18.0",
        "groupId": "com.google.guava",
        "artifactId": "guava",
        "version": "18.0",
        "scope": "compile",
        "packaging": "jar",
        "omitted": true,
        "size": 2256213,
        "type": "direct",
        "status": "used",
        "parent": "com.spotify:dns:jar:3.0.1:compile",
        "allTypes": [
         "com.google.common.reflect.TypeToken$SimpleTypeToken",
         "com.google.common.collect.ImmutableMultimap$Itr",
         "com.google.common.collect.HashBiMap$Inverse$1",
         "com.google.common.collect.Maps$ValueDifferenceImpl",
         "com.google.common.collect.ImmutableMultimap$FieldSettersHolder",
         "com.google.common.collect.DenseImmutableTable$Column",
         "com.google.common.collect.PeekingIterator",
         "com.google.common.collect.FilteredKeyListMultimap",
         "com.google.common.collect.MapMakerInternalMap$EvictionQueue$2",
         "com.google.common.collect.ImmutableClassToInstanceMap$Builder",
         "com.google.common.primitives.SignedBytes$LexicographicalComparator",
         "com.google.common.base.Predicates$ContainsPatternPredicate",
         "com.google.common.collect.MapMakerInternalMap$EvictionQueue$1",
         "com.google.common.collect.LinkedListMultimap$3$1",
         "com.google.common.collect.RegularImmutableMap",
         "com.google.common.base.Objects$ToStringHelper",
         "com.google.common.reflect.ClassPath$1",
         "com.google.common.collect.AbstractSortedKeySortedSetMultimap",
         "com.google.common.collect.TreeTraverser$PostOrderIterator",
         "com.google.common.collect.MultimapBuilder$SetMultimapBuilder",
         "com.google.common.cache.CacheBuilderSpec",
         "com.google.common.base.Joiner",
         "com.google.common.hash.Hashing$ChecksumType$2",
         "com.google.common.hash.Hashing$ChecksumType$1",
         "com.google.common.collect.DenseImmutableTable$ColumnMap",
         "com.google.common.collect.AbstractMultimap$Values",
         "com.google.common.net.HostSpecifier",
         "com.google.thirdparty.publicsuffix.PublicSuffixType",
         "com.google.common.util.concurrent.AbstractIdleService$3",
         "com.google.common.collect.Lists$Partition",
         "com.google.common.hash.Hashing$SipHash24Holder",
         "com.google.common.io.Resources$1",
         "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1",
         "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2",
         "com.google.common.collect.Sets$PowerSet$1",
         "com.google.common.util.concurrent.AbstractIdleService$1",
         "com.google.common.util.concurrent.AbstractIdleService$2",
         "com.google.common.base.Functions",
         "com.google.common.collect.MapMakerInternalMap$Strength",
         "com.google.common.math.DoubleUtils",
         "com.google.common.collect.Constraints$ConstrainedListIterator",
         "com.google.common.collect.ImmutableSortedSet$Builder",
         "com.google.common.util.concurrent.Service",
         "com.google.common.collect.Multimaps$UnmodifiableMultimap",
         "com.google.common.cache.RemovalListeners",
         "com.google.common.collect.Maps$FilteredEntryMap$EntrySet",
         "com.google.common.collect.StandardTable",
         "com.google.common.collect.ImmutableSortedMultiset$SerializedForm",
         "com.google.common.cache.Striped64$Cell",
         "com.google.common.base.Converter$1",
         "com.google.common.collect.ImmutableEntry",
         "com.google.common.base.Joiner$1",
         "com.google.common.io.Closer$SuppressingSuppressor",
         "com.google.common.base.Joiner$2",
         "com.google.common.collect.StandardTable$1",
         "com.google.common.util.concurrent.SimpleTimeLimiter",
         "com.google.common.base.Joiner$3",
         "com.google.common.collect.AbstractTable$1",
         "com.google.common.primitives.Chars$CharArrayAsList",
         "com.google.common.base.CharMatcher$BitSetMatcher",
         "com.google.common.base.FinalizableReferenceQueue$SystemLoader",
         "com.google.common.io.LineReader$1",
         "com.google.common.collect.Lists$AbstractListWrapper",
         "com.google.common.collect.AbstractMapBasedMultiset",
         "com.google.common.math.package-info",
         "com.google.common.collect.Multisets$FilteredMultiset$1",
         "com.google.common.collect.DiscreteDomain$LongDomain",
         "com.google.common.collect.SortedLists$1",
         "com.google.common.hash.ChecksumHashFunction",
         "com.google.common.base.Equivalence$Identity",
         "com.google.common.collect.MapConstraints$ConstrainedEntries$1",
         "com.google.common.collect.EnumBiMap",
         "com.google.common.collect.AbstractNavigableMap$1",
         "com.google.common.base.AbstractIterator$1",
         "com.google.common.escape.Platform",
         "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
         "com.google.common.collect.EmptyImmutableListMultimap",
         "com.google.common.collect.Collections2$FilteredCollection",
         "com.google.common.collect.ImmutableMultiset$SerializedForm",
         "com.google.common.reflect.TypeResolver$1",
         "com.google.common.collect.RegularImmutableTable$CellSet$1",
         "com.google.common.collect.FluentIterable$1",
         "com.google.common.collect.Maps$FilteredEntrySortedMap",
         "com.google.common.cache.CacheBuilderSpec$KeyStrengthParser",
         "com.google.common.collect.ArrayTable$ColumnMap",
         "com.google.common.collect.Iterators$PeekingImpl",
         "com.google.common.hash.Funnels$IntegerFunnel",
         "com.google.common.collect.ForwardingList",
         "com.google.common.collect.Multimaps$Keys$1",
         "com.google.common.escape.Escapers$Builder",
         "com.google.common.cache.LocalCache$Segment",
         "com.google.common.collect.HashBiMap",
         "com.google.common.collect.Maps$EntryTransformer",
         "com.google.common.collect.Ordering",
         "com.google.common.util.concurrent.SerializingExecutor$1",
         "com.google.common.io.ByteSource$ConcatenatedByteSource",
         "com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet",
         "com.google.common.collect.EnumMultiset",
         "com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser",
         "com.google.common.collect.AllEqualOrdering",
         "com.google.common.util.concurrent.CheckedFuture",
         "com.google.common.io.GwtWorkarounds$6",
         "com.google.common.reflect.Types$JavaVersion$3",
         "com.google.common.reflect.Types$JavaVersion$4",
         "com.google.common.reflect.Types$JavaVersion$1",
         "com.google.common.reflect.Types$JavaVersion$2",
         "com.google.common.util.concurrent.Striped$2",
         "com.google.common.io.GwtWorkarounds$1",
         "com.google.common.util.concurrent.Striped$1",
         "com.google.common.cache.CacheLoader$1",
         "com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder",
         "com.google.common.io.GwtWorkarounds$4",
         "com.google.common.collect.Lists$TwoPlusArrayList",
         "com.google.common.io.GwtWorkarounds$5",
         "com.google.common.collect.ForwardingImmutableMap",
         "com.google.common.io.GwtWorkarounds$2",
         "com.google.common.io.GwtWorkarounds$3",
         "com.google.common.io.ByteSource$1",
         "com.google.common.collect.Cut$1",
         "com.google.common.cache.LocalCache$Values",
         "com.google.common.cache.LocalCache$WeakValueReference",
         "com.google.common.collect.MapConstraints$ConstrainedMap",
         "com.google.common.util.concurrent.Futures$ChainingListenableFuture",
         "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2",
         "com.google.common.collect.RegularImmutableMap$1",
         "com.google.common.util.concurrent.Striped$PaddedSemaphore",
         "com.google.common.collect.SortedLists$KeyPresentBehavior$2",
         "com.google.common.collect.SortedLists$KeyPresentBehavior$1",
         "com.google.common.util.concurrent.ServiceManager$1",
         "com.google.common.collect.SortedLists$KeyPresentBehavior$4",
         "com.google.common.base.Equivalence$1",
         "com.google.common.collect.SortedLists$KeyPresentBehavior$3",
         "com.google.common.collect.SortedLists$KeyPresentBehavior$5",
         "com.google.common.util.concurrent.ServiceManager$2",
         "com.google.common.base.FinalizableReferenceQueue",
         "com.google.common.collect.Multimaps$UnmodifiableMultimap$1",
         "com.google.common.collect.Cut$BelowValue",
         "com.google.common.collect.ImmutableSetMultimap$Builder",
         "com.google.common.collect.ImmutableMapEntrySet",
         "com.google.common.collect.Multimaps",
         "com.google.common.collect.ClassToInstanceMap",
         "com.google.common.collect.ImmutableMultiset",
         "com.google.common.util.concurrent.Futures$ChainingListenableFuture$1",
         "com.google.common.collect.ImmutableMultimap$Keys",
         "com.google.common.collect.Multisets$AbstractEntry",
         "com.google.common.util.concurrent.UncheckedTimeoutException",
         "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator",
         "com.google.common.hash.Hasher",
         "com.google.common.io.ByteSource",
         "com.google.common.collect.ComputingConcurrentHashMap$ComputedReference",
         "com.google.common.primitives.UnsignedBytes",
         "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1",
         "com.google.common.util.concurrent.AbstractScheduledService$1$4",
         "com.google.common.base.CharMatcher$And",
         "com.google.common.util.concurrent.AbstractScheduledService$1$3",
         "com.google.common.util.concurrent.AbstractScheduledService$1$2",
         "com.google.common.collect.ForwardingNavigableMap",
         "com.google.common.util.concurrent.AbstractScheduledService$1$1",
         "com.google.common.util.concurrent.Striped$5",
         "com.google.common.util.concurrent.Striped$4",
         "com.google.common.util.concurrent.Striped$3",
         "com.google.common.collect.Sets$FilteredSortedSet",
         "com.google.common.collect.TreeRangeSet$1",
         "com.google.common.reflect.TypeResolver$TypeMappingIntrospector",
         "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
         "com.google.common.base.FinalizablePhantomReference",
         "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1",
         "com.google.common.io.MultiInputStream",
         "com.google.common.base.Objects$ToStringHelper$ValueHolder",
         "com.google.common.collect.Maps$EntryFunction",
         "com.google.common.collect.AbstractTable$CellSet",
         "com.google.common.hash.Hashing$Sha256Holder",
         "com.google.common.collect.EmptyImmutableSortedSet",
         "com.google.common.collect.ImmutableEnumSet",
         "com.google.common.collect.AbstractMultimap$Entries",
         "com.google.common.collect.HashBiMap$EntrySet$1",
         "com.google.common.primitives.Doubles$LexicographicalComparator",
         "com.google.common.collect.ArrayTable",
         "com.google.common.base.Predicates$ContainsPatternFromStringPredicate",
         "com.google.common.base.Converter",
         "com.google.common.collect.LinkedListMultimap",
         "com.google.common.io.ByteSource$SlicedByteSource",
         "com.google.common.base.Suppliers$SupplierFunction",
         "com.google.common.io.CharSource$CharSequenceCharSource$1$1",
         "com.google.common.primitives.Doubles",
         "com.google.common.reflect.Types$WildcardTypeImpl",
         "com.google.common.collect.MapConstraints$ConstrainedEntrySet",
         "com.google.common.collect.ImmutableList$Builder",
         "com.google.common.util.concurrent.ThreadFactoryBuilder",
         "com.google.common.collect.DenseImmutableTable$RowMap",
         "com.google.common.collect.AbstractMultiset",
         "com.google.common.io.LineBuffer",
         "com.google.common.primitives.Shorts",
         "com.google.common.collect.AbstractTable$Values",
         "com.google.common.collect.CompoundOrdering",
         "com.google.common.collect.Iterators",
         "com.google.common.cache.AbstractCache$SimpleStatsCounter",
         "com.google.common.collect.MapMakerInternalMap$WeakEntry",
         "com.google.common.collect.HashBiMap$Inverse$InverseKeySet$1",
         "com.google.common.collect.Ordering$IncomparableValueException",
         "com.google.common.collect.ImmutableMultiset$1",
         "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1",
         "com.google.common.collect.Maps$TransformedEntriesMap$1",
         "com.google.common.reflect.Types$NativeTypeVariableEquals",
         "com.google.common.collect.Synchronized$SynchronizedMap",
         "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher",
         "com.google.common.cache.Striped64$1",
         "com.google.common.util.concurrent.UncaughtExceptionHandlers",
         "com.google.common.primitives.Doubles$DoubleConverter",
         "com.google.common.io.BaseEncoding$StandardBaseEncoding",
         "com.google.common.reflect.ImmutableTypeToInstanceMap",
         "com.google.common.base.CaseFormat$StringConverter",
         "com.google.common.collect.StandardTable$Column$EntrySet",
         "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
         "com.google.common.collect.Tables$UnmodifiableTable",
         "com.google.common.cache.CacheBuilder$1",
         "com.google.common.cache.CacheBuilder$3",
         "com.google.common.collect.Iterators$MergingIterator",
         "com.google.common.cache.CacheBuilder$2",
         "com.google.common.base.Functions$ForMapWithDefault",
         "com.google.common.collect.ArrayTable$1$1",
         "com.google.common.collect.Collections2$OrderedPermutationIterator",
         "com.google.common.collect.Lists$RandomAccessPartition",
         "com.google.common.collect.Lists$RandomAccessReverseList",
         "com.google.common.collect.Multimaps$TransformedEntriesMultimap",
         "com.google.common.collect.SortedLists",
         "com.google.common.reflect.Types$ClassOwnership$1LocalClass",
         "com.google.common.collect.ImmutableRangeSet",
         "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1",
         "com.google.common.collect.AbstractSortedSetMultimap",
         "com.google.common.base.Functions$FunctionForMapNoDefault",
         "com.google.common.collect.ImmutableMultimap$Values",
         "com.google.common.base.Converter$1$1",
         "com.google.common.collect.ByFunctionOrdering",
         "com.google.common.cache.ForwardingLoadingCache",
         "com.google.common.collect.EmptyImmutableBiMap",
         "com.google.common.collect.ImmutableListMultimap$Builder",
         "com.google.common.collect.ImmutableSortedMap$SerializedForm",
         "com.google.common.collect.ForwardingSortedMap",
         "com.google.common.collect.Serialization",
         "com.google.common.collect.Tables$UnmodifiableRowSortedMap",
         "com.google.common.collect.ForwardingBlockingDeque",
         "com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues",
         "com.google.common.collect.Synchronized$SynchronizedMultimap",
         "com.google.common.primitives.UnsignedLong",
         "com.google.common.util.concurrent.ExecutionError",
         "com.google.common.io.CharSequenceReader",
         "com.google.common.primitives.UnsignedInts",
         "com.google.common.base.Enums",
         "com.google.common.collect.TreeTraverser$PreOrderIterator",
         "com.google.common.collect.Multisets$2$1",
         "com.google.common.collect.UnmodifiableListIterator",
         "com.google.common.collect.LinkedHashMultimap$ValueSet",
         "com.google.common.collect.DenseImmutableTable",
         "com.google.common.collect.ArrayTable$ArrayMap$1$1$1",
         "com.google.common.collect.MinMaxPriorityQueue",
         "com.google.common.base.Preconditions",
         "com.google.common.collect.AbstractRangeSet",
         "com.google.common.collect.BinaryTreeTraverser$InOrderIterator",
         "com.google.common.collect.Collections2$OrderedPermutationCollection",
         "com.google.common.collect.AbstractMultimap$EntrySet",
         "com.google.common.util.concurrent.SettableFuture",
         "com.google.common.base.Predicates$AssignableFromPredicate",
         "com.google.common.collect.ImmutableMultiset$EntrySet$1",
         "com.google.common.cache.LocalCache$AccessQueue",
         "com.google.common.collect.TreeMultiset",
         "com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter",
         "com.google.common.util.concurrent.MoreExecutors$Application",
         "com.google.common.cache.CacheBuilderSpec$MaximumWeightParser",
         "com.google.common.collect.HashMultimap",
         "com.google.common.net.PercentEscaper",
         "com.google.common.collect.LinkedListMultimap$KeyList",
         "com.google.common.collect.Lists$OnePlusArrayList",
         "com.google.common.collect.Synchronized$SynchronizedNavigableSet",
         "com.google.common.util.concurrent.AbstractCheckedFuture",
         "com.google.common.util.concurrent.AtomicLongMap",
         "com.google.common.util.concurrent.ExecutionList",
         "com.google.common.collect.DescendingMultiset",
         "com.google.common.collect.Maps$AsMapView",
         "com.google.common.io.ByteSink$1",
         "com.google.common.collect.ImmutableSet",
         "com.google.common.primitives.Chars$LexicographicalComparator",
         "com.google.common.collect.StandardTable$Column$KeySet",
         "com.google.common.reflect.ClassPath$ResourceInfo",
         "com.google.common.util.concurrent.AbstractFuture$Sync",
         "com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet",
         "com.google.common.cache.CacheLoader",
         "com.google.common.collect.MapMakerInternalMap$KeySet",
         "com.google.common.collect.Cut$AboveValue",
         "com.google.common.cache.LocalCache$SoftValueReference",
         "com.google.common.collect.Maps$FilteredEntryBiMap",
         "com.google.common.base.Splitter$Strategy",
         "com.google.common.primitives.Longs$LexicographicalComparator",
         "com.google.common.util.concurrent.AbstractScheduledService$1",
         "com.google.common.util.concurrent.AbstractScheduledService$3",
         "com.google.common.util.concurrent.AbstractScheduledService$2",
         "com.google.common.collect.ArrayTable$ArrayMap$1",
         "com.google.common.collect.Sets$CartesianSet$1",
         "com.google.common.base.Predicates$ObjectPredicate$1",
         "com.google.common.cache.LocalCache$WeakEntry",
         "com.google.common.hash.Hashing",
         "com.google.common.reflect.TypeToken",
         "com.google.common.collect.AbstractSequentialIterator",
         "com.google.common.collect.EmptyImmutableSet",
         "com.google.common.collect.MapDifference$ValueDifference",
         "com.google.common.collect.TreeTraverser",
         "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
         "com.google.common.io.Files",
         "com.google.common.collect.ForwardingCollection",
         "com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry",
         "com.google.common.base.Functions$1",
         "com.google.common.collect.FilteredEntryMultimap$Keys$1$1",
         "com.google.common.collect.FilteredKeyMultimap$AddRejectingList",
         "com.google.common.reflect.Types$JavaVersion",
         "com.google.common.hash.HashCode$BytesHashCode",
         "com.google.common.base.Predicates$ObjectPredicate$4",
         "com.google.common.base.Predicates$ObjectPredicate$3",
         "com.google.common.base.Predicates$ObjectPredicate$2",
         "com.google.common.collect.ImmutableTable",
         "com.google.common.cache.LoadingCache",
         "com.google.common.collect.ImmutableList$SubList",
         "com.google.common.base.FunctionalEquivalence",
         "com.google.common.collect.DenseImmutableTable$Row",
         "com.google.common.collect.SortedLists$KeyAbsentBehavior",
         "com.google.common.base.Suppliers$SupplierFunctionImpl",
         "com.google.common.hash.ChecksumHashFunction$1",
         "com.google.common.collect.ImmutableSortedMap$Builder",
         "com.google.common.collect.Multimaps$MapMultimap$1",
         "com.google.thirdparty.publicsuffix.PublicSuffixPatterns",
         "com.google.common.base.Predicates$ObjectPredicate",
         "com.google.common.collect.WellBehavedMap$EntrySet",
         "com.google.common.cache.CacheBuilderSpec$DurationParser",
         "com.google.common.reflect.TypeToken$InterfaceSet",
         "com.google.common.collect.Sets$SubSet$1",
         "com.google.common.collect.Maps$KeySet",
         "com.google.common.collect.Maps$NavigableAsMapView",
         "com.google.common.collect.AbstractIterator$1",
         "com.google.common.cache.LongAddables$1",
         "com.google.common.io.CountingInputStream",
         "com.google.common.cache.LongAddables$2",
         "com.google.common.collect.HashBiMap$Inverse$1$1",
         "com.google.common.collect.AbstractMapBasedMultimap$1",
         "com.google.common.collect.MultimapBuilder$1",
         "com.google.common.collect.AbstractMapBasedMultimap$2",
         "com.google.common.collect.MultimapBuilder$2",
         "com.google.common.collect.FilteredEntryMultimap$AsMap$3",
         "com.google.common.collect.ImmutableMultimap$1",
         "com.google.common.collect.MultimapBuilder$3",
         "com.google.common.collect.MultimapBuilder$4",
         "com.google.common.util.concurrent.AbstractService$9",
         "com.google.common.util.concurrent.AbstractService$8",
         "com.google.common.base.Present",
         "com.google.common.util.concurrent.AbstractService$7",
         "com.google.common.collect.FilteredEntryMultimap$AsMap$1",
         "com.google.common.collect.FilteredEntryMultimap$AsMap$2",
         "com.google.common.collect.ImmutableMultimap$2",
         "com.google.common.util.concurrent.AbstractService$2",
         "com.google.common.util.concurrent.AbstractService$1",
         "com.google.common.collect.SortedLists$KeyPresentBehavior",
         "com.google.common.util.concurrent.AbstractService$6",
         "com.google.common.util.concurrent.AbstractService$5",
         "com.google.common.reflect.Types$TypeVariableImpl",
         "com.google.common.util.concurrent.AbstractService$4",
         "com.google.common.util.concurrent.AbstractService$3",
         "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator",
         "com.google.common.collect.StandardTable$Row$RowEntrySet$1",
         "com.google.common.html.package-info",
         "com.google.common.io.Files$FilePredicate$1",
         "com.google.common.collect.Lists$TransformingSequentialList",
         "com.google.common.io.Files$FilePredicate$2",
         "com.google.common.util.concurrent.Striped$PaddedLock",
         "com.google.common.collect.ForwardingIterator",
         "com.google.common.reflect.Types$GenericArrayTypeImpl",
         "com.google.common.util.concurrent.Striped$PowerOfTwoStriped",
         "com.google.common.primitives.package-info",
         "com.google.common.base.CharMatcher$NegatedMatcher",
         "com.google.common.math.DoubleMath$MeanAccumulator",
         "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2$1",
         "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet",
         "com.google.common.eventbus.AnnotatedSubscriberFinder$MethodIdentifier",
         "com.google.common.collect.MapMakerInternalMap$NullEntry",
         "com.google.common.primitives.Floats$FloatArrayAsList",
         "com.google.common.collect.FilteredEntryMultimap",
         "com.google.common.collect.TreeRangeMap$RangeMapEntry",
         "com.google.common.io.Files$2",
         "com.google.common.collect.Maps$UnmodifiableNavigableMap",
         "com.google.common.io.Files$1",
         "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
         "com.google.common.collect.Lists$RandomAccessListWrapper",
         "com.google.common.collect.MapMakerInternalMap$ValueIterator",
         "com.google.common.reflect.TypeToken$3",
         "com.google.common.reflect.TypeToken$4",
         "com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy",
         "com.google.common.reflect.TypeToken$1",
         "com.google.common.reflect.TypeToken$2",
         "com.google.common.collect.Multimaps$MapMultimap$1$1",
         "com.google.common.io.CharStreams",
         "com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry",
         "com.google.common.eventbus.AllowConcurrentEvents",
         "com.google.common.reflect.AbstractInvocationHandler",
         "com.google.common.util.concurrent.Futures$3",
         "com.google.common.util.concurrent.Runnables$1",
         "com.google.common.collect.ForwardingSortedSetMultimap",
         "com.google.common.util.concurrent.Futures$2",
         "com.google.common.util.concurrent.Futures$5",
         "com.google.common.collect.Multimaps$TransformedEntriesMultimap$1",
         "com.google.common.util.concurrent.Futures$4",
         "com.google.common.util.concurrent.Futures$7",
         "com.google.common.util.concurrent.Futures$6",
         "com.google.common.cache.LocalCache$Segment$1",
         "com.google.common.collect.AbstractIndexedListIterator",
         "com.google.common.util.concurrent.Futures$8",
         "com.google.common.util.concurrent.AbstractService$StateSnapshot",
         "com.google.common.collect.CollectPreconditions",
         "com.google.common.util.concurrent.Futures$1",
         "com.google.common.reflect.TypeCapture",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$Policy",
         "com.google.common.eventbus.AsyncEventBus",
         "com.google.common.reflect.TypeVisitor",
         "com.google.common.collect.Lists$TransformingRandomAccessList$1",
         "com.google.common.collect.BinaryTreeTraverser$PostOrderIterator",
         "com.google.common.collect.MapConstraints$ConstrainedListMultimap",
         "com.google.common.base.Splitter$1$1",
         "com.google.common.base.Suppliers$ExpiringMemoizingSupplier",
         "com.google.common.base.AbstractIterator$State",
         "com.google.common.base.PairwiseEquivalence",
         "com.google.common.base.Suppliers",
         "com.google.common.math.DoubleMath",
         "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler",
         "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator",
         "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1",
         "com.google.common.collect.Tables$TransformedTable",
         "com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry",
         "com.google.common.collect.Constraint",
         "com.google.thirdparty.publicsuffix.TrieParser",
         "com.google.common.collect.Maps$FilteredEntryNavigableMap$1",
         "com.google.common.base.AbstractIterator",
         "com.google.common.collect.ForwardingImmutableList",
         "com.google.common.primitives.Longs$LongArrayAsList",
         "com.google.common.collect.LinkedListMultimap$NodeIterator",
         "com.google.common.collect.MultimapBuilder$HashSetSupplier",
         "com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp",
         "com.google.common.util.concurrent.Futures$WrappedCombiner",
         "com.google.common.collect.Table",
         "com.google.common.collect.Sets$CartesianSet",
         "com.google.common.primitives.Longs$LongConverter",
         "com.google.common.util.concurrent.Striped$SmallLazyStriped",
         "com.google.common.base.Suppliers$SupplierOfInstance",
         "com.google.common.cache.AbstractCache$StatsCounter",
         "com.google.common.primitives.Booleans$LexicographicalComparator",
         "com.google.common.collect.MapConstraints$2$1",
         "com.google.common.math.LongMath$1",
         "com.google.common.hash.MessageDigestHashFunction$1",
         "com.google.common.collect.MapConstraints",
         "com.google.common.hash.BloomFilter$Strategy",
         "com.google.common.util.concurrent.Futures$ImmediateFailedFuture",
         "com.google.common.collect.AbstractMapBasedMultiset$1",
         "com.google.common.collect.MultimapBuilder$EnumSetSupplier",
         "com.google.common.collect.Multimaps$CustomSortedSetMultimap",
         "com.google.common.collect.Platform",
         "com.google.common.collect.ForwardingImmutableCollection",
         "com.google.common.collect.ImmutableEnumMap$EnumSerializedForm",
         "com.google.common.cache.LocalCache$LocalManualCache",
         "com.google.common.collect.ArrayTable$Row",
         "com.google.common.collect.ForwardingMapEntry",
         "com.google.common.collect.TreeBasedTable$Factory",
         "com.google.common.collect.MinMaxPriorityQueue$1",
         "com.google.common.cache.LocalCache$WeakWriteEntry",
         "com.google.common.collect.NullsFirstOrdering",
         "com.google.common.util.concurrent.MoreExecutors$DirectExecutor",
         "com.google.common.net.InternetDomainName",
         "com.google.common.cache.CacheBuilderSpec$LongParser",
         "com.google.common.collect.ForwardingSortedMultiset$StandardElementSet",
         "com.google.common.reflect.TypeToken$InterfaceSet$1",
         "com.google.common.cache.LocalCache$ValueReference",
         "com.google.common.collect.StandardRowSortedTable",
         "com.google.common.primitives.Ints$IntArrayAsList",
         "com.google.common.collect.Multisets$ImmutableEntry",
         "com.google.common.escape.UnicodeEscaper",
         "com.google.common.base.Absent",
         "com.google.common.base.Functions$ConstantFunction",
         "com.google.common.hash.Funnels$SinkAsStream",
         "com.google.common.io.Files$FilePredicate",
         "com.google.common.collect.Maps$DescendingMap$1",
         "com.google.common.base.Throwables",
         "com.google.common.io.FileWriteMode",
         "com.google.common.base.Equivalence$Equals",
         "com.google.common.reflect.TypeResolver$TypeVariableKey",
         "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1",
         "com.google.common.base.CharMatcher$5",
         "com.google.common.base.CharMatcher$4",
         "com.google.common.base.CharMatcher$3",
         "com.google.common.collect.Synchronized$SynchronizedBiMap",
         "com.google.common.base.CharMatcher$2",
         "com.google.common.cache.ForwardingCache",
         "com.google.common.base.CharMatcher$9",
         "com.google.common.base.CharMatcher$8",
         "com.google.common.base.CharMatcher$7",
         "com.google.common.collect.Sets$ImprovedAbstractSet",
         "com.google.common.collect.StandardTable$Column$EntrySetIterator",
         "com.google.common.base.CharMatcher$6",
         "com.google.common.collect.RegularImmutableSortedMap$EntrySet",
         "com.google.common.base.FinalizableReferenceQueue$DecoupledLoader",
         "com.google.common.base.CharMatcher$1",
         "com.google.common.collect.ImmutableMapValues",
         "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder",
         "com.google.common.util.concurrent.CycleDetectingLockFactory",
         "com.google.common.collect.AbstractNavigableMap",
         "com.google.common.collect.MapMakerInternalMap$StrongValueReference",
         "com.google.common.util.concurrent.SmoothRateLimiter",
         "com.google.common.collect.GwtTransient",
         "com.google.common.util.concurrent.Futures$CombinerFuture",
         "com.google.common.collect.MapMakerInternalMap$EvictionQueue",
         "com.google.common.util.concurrent.AsyncSettableFuture$NestedFuture",
         "com.google.common.util.concurrent.ForwardingListeningExecutorService",
         "com.google.common.eventbus.SynchronizedEventSubscriber",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2",
         "com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector",
         "com.google.common.collect.Interners$1",
         "com.google.common.util.concurrent.Futures$CombinedFuture",
         "com.google.common.collect.ForwardingSet",
         "com.google.common.base.Functions$ToStringFunction",
         "com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap",
         "com.google.common.base.Functions$FunctionComposition",
         "com.google.common.collect.MultimapBuilder$TreeSetSupplier",
         "com.google.common.collect.StandardTable$RowMap$EntrySet$1",
         "com.google.common.base.Ticker$1",
         "com.google.common.collect.ImmutableSetMultimap$EntrySet",
         "com.google.common.collect.Multiset",
         "com.google.common.collect.TreeRangeMap$AsMapOfRanges$1",
         "com.google.common.collect.ImmutableEnumSet$1",
         "com.google.common.collect.Maps$TransformedEntriesNavigableMap",
         "com.google.common.hash.BloomFilter$SerialForm",
         "com.google.common.primitives.UnsignedInts$LexicographicalComparator",
         "com.google.common.reflect.Types$ClassOwnership",
         "com.google.common.collect.Table$Cell",
         "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher",
         "com.google.common.util.concurrent.AbstractService$10",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock",
         "com.google.common.collect.Synchronized$1",
         "com.google.common.collect.MapMakerInternalMap$Values",
         "com.google.common.collect.ArrayTable$ArrayMap$1$1",
         "com.google.common.collect.ForwardingMultimap",
         "com.google.common.collect.MapMaker$1",
         "com.google.common.cache.LocalCache$EntryIterator",
         "com.google.common.collect.TreeMultiset$Aggregate$2",
         "com.google.common.collect.TreeRangeSet$SubRangeSet",
         "com.google.common.collect.TreeMultiset$Aggregate$1",
         "com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture",
         "com.google.common.io.ByteStreams$1",
         "com.google.common.util.concurrent.Futures$FallbackFuture$1",
         "com.google.common.collect.StandardTable$RowMap",
         "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
         "com.google.common.cache.CacheBuilderSpec$AccessDurationParser",
         "com.google.common.collect.ForwardingMap$StandardValues",
         "com.google.common.collect.ImmutableMap$SerializedForm",
         "com.google.common.base.Optional",
         "com.google.common.io.Closeables",
         "com.google.common.collect.TreeBasedTable$TreeRow",
         "com.google.common.reflect.TypeParameter",
         "com.google.common.base.CharMatcher$NegatedFastMatcher",
         "com.google.common.collect.Range",
         "com.google.common.util.concurrent.ForwardingListenableFuture",
         "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator",
         "com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry",
         "com.google.common.collect.FilteredSetMultimap",
         "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap",
         "com.google.common.io.FileBackedOutputStream",
         "com.google.common.io.CharSource$CharSequenceCharSource",
         "com.google.common.collect.ContiguousSet",
         "com.google.common.base.MoreObjects$ToStringHelper",
         "com.google.common.escape.CharEscaperBuilder",
         "com.google.common.util.concurrent.Striped$CompactStriped",
         "com.google.common.cache.LocalCache$HashIterator",
         "com.google.common.collect.RegularImmutableAsList",
         "com.google.common.io.Resources$UrlByteSource",
         "com.google.common.util.concurrent.Striped$LargeLazyStriped",
         "com.google.common.collect.Constraints$ConstrainedCollection",
         "com.google.common.util.concurrent.ServiceManager$ServiceListener",
         "com.google.common.xml.package-info",
         "com.google.common.base.Functions$IdentityFunction",
         "com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture",
         "com.google.common.util.concurrent.ListeningScheduledExecutorService",
         "com.google.common.collect.ImmutableSortedMap",
         "com.google.common.util.concurrent.ForwardingBlockingQueue",
         "com.google.common.io.BaseEncoding",
         "com.google.common.collect.ForwardingSetMultimap",
         "com.google.common.base.MoreObjects",
         "com.google.common.collect.GenericMapMaker",
         "com.google.common.collect.Multimaps$AsMap$EntrySet$1",
         "com.google.common.collect.ImmutableList$1",
         "com.google.common.hash.BloomFilter$1",
         "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
         "com.google.common.net.InetAddresses",
         "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1",
         "com.google.common.collect.StandardTable$Column$Values",
         "com.google.common.io.package-info",
         "com.google.common.collect.TreeMultiset$Aggregate",
         "com.google.common.collect.MapMaker$RemovalCause",
         "com.google.common.collect.ImmutableMapKeySet$1",
         "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
         "com.google.common.collect.MapMakerInternalMap$KeyIterator",
         "com.google.common.reflect.Types$1",
         "com.google.common.reflect.Types$2",
         "com.google.common.util.concurrent.Service$State",
         "com.google.common.collect.AbstractBiMap$ValueSet",
         "com.google.common.base.Function",
         "com.google.common.collect.ImmutableMap",
         "com.google.common.collect.ImmutableAsList$SerializedForm",
         "com.google.common.io.ByteStreams$LimitedInputStream",
         "com.google.common.primitives.Bytes",
         "com.google.common.util.concurrent.ForwardingFuture",
         "com.google.common.collect.MinMaxPriorityQueue$Builder",
         "com.google.common.util.concurrent.TimeLimiter",
         "com.google.common.collect.ImmutableSortedMapFauxverideShim",
         "com.google.common.util.concurrent.Futures$ImmediateFailedCheckedFuture",
         "com.google.common.cache.CacheBuilder",
         "com.google.common.collect.Range$4",
         "com.google.common.collect.EmptyImmutableSortedMultiset",
         "com.google.common.collect.Range$2",
         "com.google.common.collect.Range$3",
         "com.google.common.cache.LocalCache$NullEntry",
         "com.google.common.collect.Range$1",
         "com.google.common.base.Stopwatch",
         "com.google.common.collect.StandardTable$Column",
         "com.google.common.collect.RegularContiguousSet$SerializedForm",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies",
         "com.google.common.collect.Interners$WeakInterner",
         "com.google.common.cache.LocalCache$AbstractCacheSet",
         "com.google.common.collect.ImmutableMultiset$Builder",
         "com.google.common.escape.Escapers$1",
         "com.google.common.cache.LocalCache$LocalLoadingCache",
         "com.google.common.collect.SingletonImmutableBiMap",
         "com.google.common.collect.MapConstraints$2",
         "com.google.common.collect.MinMaxPriorityQueue$MoveDesc",
         "com.google.common.collect.Multisets$EntrySet",
         "com.google.common.collect.MapConstraints$1",
         "com.google.common.escape.Escapers$2",
         "com.google.common.util.concurrent.AbstractIdleService",
         "com.google.common.escape.Platform$1",
         "com.google.common.cache.RemovalNotification",
         "com.google.common.base.Equivalence",
         "com.google.common.cache.LocalCache$WriteQueue$1",
         "com.google.common.cache.LocalCache$LoadingValueReference",
         "com.google.common.cache.LocalCache$WriteQueue$2",
         "com.google.common.collect.Maps",
         "com.google.common.cache.Striped64",
         "com.google.common.collect.SetMultimap",
         "com.google.common.collect.ImmutableSet$SerializedForm",
         "com.google.common.collect.TransformedIterator",
         "com.google.common.collect.DescendingImmutableSortedSet",
         "com.google.common.collect.FilteredKeyMultimap$AddRejectingSet",
         "com.google.common.util.concurrent.Futures$FallbackFuture",
         "com.google.common.collect.Synchronized$SynchronizedObject",
         "com.google.common.util.concurrent.WrappingExecutorService",
         "com.google.common.util.concurrent.ListenerCallQueue",
         "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet",
         "com.google.common.collect.Cut$AboveAll",
         "com.google.common.net.package-info",
         "com.google.common.util.concurrent.AbstractFuture",
         "com.google.common.collect.RegularContiguousSet",
         "com.google.common.hash.Crc32cHashFunction",
         "com.google.common.collect.RangeSet",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock",
         "com.google.common.escape.CharEscaper",
         "com.google.common.annotations.GwtCompatible",
         "com.google.common.collect.RegularContiguousSet$2",
         "com.google.common.collect.RegularContiguousSet$1",
         "com.google.common.collect.LinkedHashMultiset",
         "com.google.common.cache.LocalCache$WriteThroughEntry",
         "com.google.common.collect.Sets$2",
         "com.google.common.collect.Sets$3",
         "com.google.common.io.CharStreams$NullWriter",
         "com.google.common.collect.Sets$1",
         "com.google.common.collect.Maps$Values",
         "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
         "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1",
         "com.google.common.primitives.Booleans$BooleanArrayAsList",
         "com.google.common.collect.Constraints",
         "com.google.common.escape.ArrayBasedUnicodeEscaper",
         "com.google.common.base.FinalizableReference",
         "com.google.common.collect.ImmutableEnumMap$1",
         "com.google.common.collect.ImmutableEnumMap$2",
         "com.google.common.reflect.TypeToken$TypeCollector",
         "com.google.common.util.concurrent.MoreExecutors$ListeningDecorator",
         "com.google.common.collect.FilteredEntryMultimap$ValuePredicate",
         "com.google.common.collect.HashBasedTable$Factory",
         "com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1",
         "com.google.common.collect.AbstractListMultimap",
         "com.google.common.io.MultiReader",
         "com.google.common.base.Predicates$InstanceOfPredicate",
         "com.google.common.cache.CacheBuilderSpec$RefreshDurationParser",
         "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
         "com.google.common.io.Closer$LoggingSuppressor",
         "com.google.common.util.concurrent.ServiceManager$Listener",
         "com.google.common.collect.Lists$ReverseList$1",
         "com.google.common.collect.ForwardingTable",
         "com.google.common.collect.TreeMultiset$1",
         "com.google.common.io.ByteArrayDataInput",
         "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch",
         "com.google.common.collect.TreeMultiset$4",
         "com.google.common.collect.TreeMultiset$3",
         "com.google.common.collect.TreeMultiset$2",
         "com.google.common.cache.LocalCache$KeySet",
         "com.google.common.collect.MapMakerInternalMap$Segment",
         "com.google.common.base.CharMatcher",
         "com.google.common.collect.FilteredKeyMultimap",
         "com.google.common.collect.Sets$UnmodifiableNavigableSet",
         "com.google.common.util.concurrent.AbstractIdleService$2$1",
         "com.google.common.util.concurrent.AbstractIdleService$2$2",
         "com.google.common.util.concurrent.Futures$1$1",
         "com.google.common.collect.Synchronized$SynchronizedSortedMap",
         "com.google.common.collect.Maps$FilteredEntryBiMap$1",
         "com.google.common.collect.RegularImmutableTable$Values",
         "com.google.common.collect.MapMaker",
         "com.google.common.collect.ForwardingDeque",
         "com.google.common.util.concurrent.WrappingExecutorService$1",
         "com.google.common.collect.MapMakerInternalMap$EntryIterator",
         "com.google.common.collect.AbstractBiMap",
         "com.google.common.collect.Sets$FilteredSet",
         "com.google.common.util.concurrent.AsyncSettableFuture",
         "com.google.common.collect.EmptyImmutableSortedMap",
         "com.google.common.base.Predicates$1",
         "com.google.common.collect.Multisets$3$1",
         "com.google.common.collect.Maps$FilteredEntryMap$KeySet",
         "com.google.common.collect.FilteredKeySetMultimap$EntrySet",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock",
         "com.google.common.io.ByteArrayDataOutput",
         "com.google.common.collect.Iterators$6",
         "com.google.common.collect.BiMap",
         "com.google.common.collect.Iterators$7",
         "com.google.common.collect.Iterators$8",
         "com.google.common.collect.TreeRangeMap$SubRangeMap",
         "com.google.common.collect.Iterators$9",
         "com.google.common.escape.Escaper",
         "com.google.common.collect.HashBiMap$EntrySet$1$MapEntry",
         "com.google.common.collect.Iterators$1",
         "com.google.common.math.LongMath",
         "com.google.common.collect.Iterators$2",
         "com.google.common.collect.Iterators$3",
         "com.google.common.collect.Iterators$4",
         "com.google.common.collect.Iterators$5",
         "com.google.common.collect.package-info",
         "com.google.common.collect.RegularImmutableBiMap$Inverse",
         "com.google.common.collect.ImmutableMultimap$Builder",
         "com.google.common.base.Defaults",
         "com.google.common.collect.AbstractMultimap",
         "com.google.common.hash.SipHashFunction$SipHasher",
         "com.google.common.hash.AbstractCompositeHashFunction",
         "com.google.common.collect.StandardTable$Row$RowEntrySet",
         "com.google.common.collect.Ordering$ArbitraryOrdering$1",
         "com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference",
         "com.google.common.collect.DescendingMultiset$1",
         "com.google.common.base.FinalizableSoftReference",
         "com.google.common.cache.LocalCache$Strength$3",
         "com.google.common.cache.LocalCache$Strength$2",
         "com.google.common.reflect.Invokable$ConstructorInvokable",
         "com.google.common.cache.LocalCache$Strength$1",
         "com.google.common.collect.MapConstraints$ConstrainedSetMultimap",
         "com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm",
         "com.google.common.collect.AbstractBiMap$1",
         "com.google.common.collect.TreeRangeSet$Complement",
         "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1",
         "com.google.common.util.concurrent.ServiceManager$ServiceManagerState",
         "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2",
         "com.google.common.util.concurrent.AsyncFunction",
         "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$3",
         "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$4",
         "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$5",
         "com.google.common.collect.Iterables$ConsumingQueueIterator",
         "com.google.common.collect.WellBehavedMap$EntrySet$1$1",
         "com.google.common.util.concurrent.AbstractExecutionThreadService",
         "com.google.common.cache.CacheBuilderSpec$WriteDurationParser",
         "com.google.common.cache.LocalCache$WeightedStrongValueReference",
         "com.google.common.collect.TreeRangeSet$RangesByUpperBound$1",
         "com.google.common.io.ByteStreams$FastByteArrayOutputStream",
         "com.google.common.collect.TreeRangeSet$RangesByUpperBound$2",
         "com.google.common.cache.CacheBuilderSpec$ValueStrengthParser",
         "com.google.common.collect.StandardTable$CellIterator",
         "com.google.common.collect.ComputationException",
         "com.google.common.collect.StandardTable$ColumnKeySet",
         "com.google.common.base.Splitter$2$1",
         "com.google.common.collect.StandardRowSortedTable$RowSortedMap",
         "com.google.common.collect.Lists$TransformingRandomAccessList",
         "com.google.common.cache.CacheLoader$InvalidCacheLoadException",
         "com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry",
         "com.google.common.hash.MessageDigestHashFunction$SerializedForm",
         "com.google.common.hash.Hashing$1",
         "com.google.common.collect.Multisets",
         "com.google.common.collect.AbstractMultimap$1",
         "com.google.common.collect.ComparisonChain",
         "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable",
         "com.google.common.collect.Synchronized$SynchronizedQueue",
         "com.google.common.hash.AbstractCompositeHashFunction$1",
         "com.google.common.util.concurrent.SerializingExecutor$TaskRunner",
         "com.google.common.collect.LinkedHashMultimap$ValueEntry",
         "com.google.common.util.concurrent.AbstractScheduledService",
         "com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning",
         "com.google.common.base.package-info",
         "com.google.common.io.ByteSink$AsCharSink",
         "com.google.common.util.concurrent.AbstractExecutionThreadService$2",
         "com.google.common.collect.Iterators$MergingIterator$1",
         "com.google.common.collect.TreeRangeSet",
         "com.google.common.util.concurrent.AbstractExecutionThreadService$1",
         "com.google.common.collect.RegularImmutableSortedMap$EntrySet$1",
         "com.google.common.collect.Maps$UnmodifiableEntries$1",
         "com.google.common.base.Suppliers$ThreadSafeSupplier",
         "com.google.common.collect.StandardTable$RowMap$EntrySet",
         "com.google.common.hash.Funnels$UnencodedCharsFunnel",
         "com.google.common.math.BigIntegerMath$1",
         "com.google.common.base.Predicates",
         "com.google.common.collect.EmptyContiguousSet",
         "com.google.common.cache.CacheLoader$1$1",
         "com.google.common.net.MediaType",
         "com.google.common.collect.Synchronized$SynchronizedEntry",
         "com.google.common.util.concurrent.Uninterruptibles",
         "com.google.common.cache.LocalCache$LoadingValueReference$1",
         "com.google.common.reflect.package-info",
         "com.google.common.collect.ConcurrentHashMultiset$2",
         "com.google.common.collect.ConcurrentHashMultiset$1",
         "com.google.common.collect.ConcurrentHashMultiset$3",
         "com.google.common.collect.Synchronized$SynchronizedSetMultimap",
         "com.google.common.collect.MapMakerInternalMap$SoftValueReference",
         "com.google.common.collect.StandardTable$Column$EntrySetIterator$1",
         "com.google.common.base.CharMatcher$12",
         "com.google.common.base.CharMatcher$11",
         "com.google.common.base.CharMatcher$10",
         "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1",
         "com.google.common.base.CharMatcher$15",
         "com.google.common.base.CharMatcher$14",
         "com.google.common.base.CharMatcher$13",
         "com.google.common.util.concurrent.Futures$MappingCheckedFuture",
         "com.google.common.primitives.Floats$FloatConverter",
         "com.google.common.escape.package-info",
         "com.google.common.base.Platform",
         "com.google.common.collect.ImmutableList$ReverseImmutableList",
         "com.google.common.util.concurrent.Service$Listener",
         "com.google.common.collect.Collections2$PermutationCollection",
         "com.google.common.hash.Funnels",
         "com.google.common.io.GwtWorkarounds$ByteOutput",
         "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap",
         "com.google.common.collect.ImmutableClassToInstanceMap$1",
         "com.google.common.collect.BoundType",
         "com.google.common.hash.Hashing$Sha512Holder",
         "com.google.common.collect.Maps$DescendingMap",
         "com.google.common.hash.Crc32cHashFunction$Crc32cHasher",
         "com.google.common.collect.ImmutableClassToInstanceMap",
         "com.google.common.reflect.TypeToken$ClassSet",
         "com.google.common.io.BaseEncoding$Alphabet",
         "com.google.common.collect.Multimaps$UnmodifiableListMultimap",
         "com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm",
         "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound",
         "com.google.common.collect.RegularImmutableBiMap$1",
         "com.google.common.collect.MapMakerInternalMap$2",
         "com.google.common.collect.MapMakerInternalMap$1",
         "com.google.common.base.Splitter$3",
         "com.google.common.base.VerifyException",
         "com.google.common.base.Splitter$4",
         "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
         "com.google.common.base.Splitter$5",
         "com.google.common.cache.CacheBuilderSpec$InitialCapacityParser",
         "com.google.common.eventbus.DeadEvent",
         "com.google.common.primitives.Bytes$ByteArrayAsList",
         "com.google.common.hash.HashCode$IntHashCode",
         "com.google.common.base.Splitter$1",
         "com.google.common.base.Splitter$2",
         "com.google.common.collect.MapMakerInternalMap$EntryFactory",
         "com.google.common.collect.Serialization$1",
         "com.google.common.collect.RegularImmutableSortedSet",
         "com.google.common.escape.ArrayBasedEscaperMap",
         "com.google.common.collect.ArrayListMultimap",
         "com.google.common.collect.TreeRangeMap$AsMapOfRanges",
         "com.google.common.collect.HashBasedTable",
         "com.google.common.collect.LinkedHashMultimap$1",
         "com.google.common.collect.MultimapBuilder$ArrayListSupplier",
         "com.google.common.collect.Collections2",
         "com.google.common.collect.ForwardingNavigableSet",
         "com.google.common.math.IntMath",
         "com.google.common.collect.ForwardingImmutableSet",
         "com.google.common.collect.NullsLastOrdering",
         "com.google.common.collect.RegularImmutableMultiset",
         "com.google.common.collect.Maps$AsMapView$1",
         "com.google.common.cache.LocalCache$EntryFactory$6",
         "com.google.common.cache.LocalCache$EntryFactory$7",
         "com.google.common.cache.LocalCache$EntryFactory$8",
         "com.google.common.collect.AbstractSortedMultiset",
         "com.google.common.cache.LocalCache$EntryFactory$2",
         "com.google.common.collect.HashBiMap$1",
         "com.google.common.util.concurrent.Futures$ImmediateSuccessfulFuture",
         "com.google.common.cache.LocalCache$EntryFactory$3",
         "com.google.common.cache.LocalCache$EntryFactory$4",
         "com.google.common.cache.LocalCache$EntryFactory$5",
         "com.google.common.cache.LocalCache$EntryFactory$1",
         "com.google.common.collect.HashBiMap$KeySet$1",
         "com.google.common.base.Strings",
         "com.google.common.collect.AbstractMapBasedMultimap",
         "com.google.common.collect.Constraints$ConstrainedRandomAccessList",
         "com.google.common.collect.DiscreteDomain",
         "com.google.common.util.concurrent.Atomics",
         "com.google.common.collect.MapConstraints$ConstrainedAsMapValues",
         "com.google.common.collect.TreeMultiset$AvlNode",
         "com.google.common.collect.AbstractBiMap$EntrySet$1",
         "com.google.common.collect.Cut",
         "com.google.common.collect.FilteredEntryMultimap$Keys",
         "com.google.common.io.Resources",
         "com.google.common.cache.LocalCache$StrongValueReference",
         "com.google.common.collect.MapConstraints$ConstrainedMultimap",
         "com.google.common.util.concurrent.FutureCallback",
         "com.google.common.io.CharSource$CharSequenceCharSource$1",
         "com.google.common.reflect.Types$ParameterizedTypeImpl",
         "com.google.common.collect.ImmutableSortedSetFauxverideShim",
         "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
         "com.google.common.collect.ImmutableEnumMap",
         "com.google.common.collect.MapConstraints$ConstrainedAsMapEntries",
         "com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry",
         "com.google.common.reflect.TypeResolver$WildcardCapturer",
         "com.google.common.collect.AbstractMapBasedMultimap$KeySet$1",
         "com.google.common.collect.Collections2$TransformedCollection",
         "com.google.common.collect.ArrayTable$RowMap",
         "com.google.common.io.ByteStreams$ByteArrayDataOutputStream",
         "com.google.common.collect.Synchronized$SynchronizedAsMap",
         "com.google.common.collect.ImmutableSetMultimap",
         "com.google.common.cache.LocalCache$EntrySet",
         "com.google.common.escape.ArrayBasedCharEscaper",
         "com.google.common.io.BaseEncoding$DecodingException",
         "com.google.common.collect.DiscreteDomain$IntegerDomain",
         "com.google.common.hash.Funnels$ByteArrayFunnel",
         "com.google.common.reflect.Reflection",
         "com.google.common.collect.Interner",
         "com.google.common.net.MediaType$Tokenizer",
         "com.google.common.collect.ImmutableMapValues$1",
         "com.google.common.collect.ImmutableEnumMap$2$1",
         "com.google.common.collect.TreeTraverser$1",
         "com.google.common.collect.TreeTraverser$2",
         "com.google.common.collect.TreeTraverser$3",
         "com.google.common.collect.StandardTable$ColumnMap",
         "com.google.common.collect.TreeRangeMap",
         "com.google.common.base.Converter$ReverseConverter",
         "com.google.common.reflect.Invokable",
         "com.google.common.collect.Lists$2",
         "com.google.common.hash.HashFunction",
         "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet",
         "com.google.common.collect.Lists$1",
         "com.google.common.hash.Hashing$Murmur3_128Holder",
         "com.google.common.base.Supplier",
         "com.google.common.collect.Maps$ImprovedAbstractMap",
         "com.google.common.eventbus.EventBus",
         "com.google.common.collect.ReverseOrdering",
         "com.google.common.eventbus.AsyncEventBus$1",
         "com.google.common.collect.HashBiMap$Inverse$InverseKeySet",
         "com.google.common.eventbus.Subscribe",
         "com.google.common.collect.Synchronized",
         "com.google.common.io.CharSource",
         "com.google.common.cache.CacheBuilder$NullListener",
         "com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry",
         "com.google.common.collect.FilteredEntryMultimap$AsMap",
         "com.google.common.collect.SortedMultisetBridge",
         "com.google.common.collect.MapMakerInternalMap$ExpirationQueue",
         "com.google.common.collect.Synchronized$SynchronizedSet",
         "com.google.common.primitives.UnsignedLongs",
         "com.google.common.primitives.Shorts$LexicographicalComparator",
         "com.google.common.collect.Tables$TransformedTable$3",
         "com.google.common.collect.Tables$TransformedTable$2",
         "com.google.common.io.LineReader",
         "com.google.common.collect.Tables$TransformedTable$1",
         "com.google.common.collect.RegularImmutableTable",
         "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1",
         "com.google.common.collect.Multimaps$CustomListMultimap",
         "com.google.common.hash.HashCode$LongHashCode",
         "com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm",
         "com.google.common.math.IntMath$1",
         "com.google.common.collect.Hashing",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock",
         "com.google.common.hash.HashingInputStream",
         "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap",
         "com.google.common.collect.BinaryTreeTraverser$1",
         "com.google.common.collect.BinaryTreeTraverser$2",
         "com.google.common.collect.Multimaps$AsMap",
         "com.google.common.collect.ImmutableRangeMap",
         "com.google.common.collect.SortedMultiset",
         "com.google.common.collect.AbstractMapBasedMultiset$1$1",
         "com.google.common.collect.SparseImmutableTable",
         "com.google.common.hash.AbstractNonStreamingHashFunction",
         "com.google.common.collect.FluentIterable",
         "com.google.common.reflect.Element",
         "com.google.common.collect.DescendingImmutableSortedMultiset",
         "com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher",
         "com.google.common.collect.MapMakerInternalMap$EntryFactory$5",
         "com.google.common.collect.MapMakerInternalMap$EntryFactory$4",
         "com.google.common.collect.MapMakerInternalMap$EntryFactory$7",
         "com.google.common.cache.CacheBuilderSpec$RecordStatsParser",
         "com.google.common.collect.MapMakerInternalMap$EntryFactory$6",
         "com.google.common.collect.MapMakerInternalMap$EntryFactory$1",
         "com.google.common.math.DoubleMath$1",
         "com.google.common.collect.MapMakerInternalMap$EntryFactory$3",
         "com.google.common.collect.MapMakerInternalMap$EntryFactory$2",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock",
         "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1",
         "com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm",
         "com.google.common.collect.MapMakerInternalMap$EntryFactory$8",
         "com.google.common.collect.RegularImmutableTable$1",
         "com.google.common.cache.CacheBuilderSpec$IntegerParser",
         "com.google.common.collect.SortedMapDifference",
         "com.google.common.collect.RegularImmutableSet",
         "com.google.common.collect.FilteredEntrySetMultimap",
         "com.google.common.collect.ForwardingSortedSet",
         "com.google.common.collect.MapMaker$NullConcurrentMap",
         "com.google.common.collect.ImmutableListMultimap",
         "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet",
         "com.google.common.eventbus.SubscriberFindingStrategy",
         "com.google.common.cache.RemovalCause$4",
         "com.google.common.cache.RemovalCause$5",
         "com.google.common.hash.Hashing$ChecksumType",
         "com.google.common.cache.RemovalCause$1",
         "com.google.common.collect.ImmutableAsList",
         "com.google.common.cache.RemovalCause$2",
         "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
         "com.google.common.cache.RemovalCause$3",
         "com.google.common.util.concurrent.AtomicDouble",
         "com.google.common.util.concurrent.SerializingExecutor",
         "com.google.common.collect.WellBehavedMap",
         "com.google.common.collect.SingletonImmutableSet",
         "com.google.common.collect.ImmutableList$SerializedForm",
         "com.google.common.collect.MapMakerInternalMap$HashIterator",
         "com.google.common.util.concurrent.ForwardingExecutorService",
         "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy",
         "com.google.common.util.concurrent.AbstractListeningExecutorService",
         "com.google.common.hash.PrimitiveSink",
         "com.google.common.collect.FluentIterable$FromIterableFunction",
         "com.google.common.collect.AbstractIterator",
         "com.google.common.base.Suppliers$MemoizingSupplier",
         "com.google.common.collect.MutableClassToInstanceMap",
         "com.google.common.util.concurrent.Futures",
         "com.google.common.collect.TreeBasedTable$1",
         "com.google.common.collect.TreeBasedTable$2",
         "com.google.common.cache.RemovalListener",
         "com.google.common.collect.MapMaker$RemovalNotification",
         "com.google.common.base.Functions$PredicateFunction",
         "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
         "com.google.common.collect.ImmutableMapValues$SerializedForm",
         "com.google.common.collect.Maps$TransformedEntriesSortedMap",
         "com.google.common.util.concurrent.AbstractService",
         "com.google.common.io.BaseEncoding$SeparatedBaseEncoding",
         "com.google.common.collect.MapMakerInternalMap$WeakValueReference",
         "com.google.common.collect.Synchronized$SynchronizedNavigableMap",
         "com.google.common.collect.AbstractSetMultimap",
         "com.google.common.collect.ImmutableTable$Builder",
         "com.google.common.primitives.UnsignedLongs$LexicographicalComparator",
         "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter",
         "com.google.common.io.GwtWorkarounds$CharOutput",
         "com.google.common.collect.MapMakerInternalMap$Strength$2",
         "com.google.common.collect.MapMakerInternalMap$Strength$1",
         "com.google.common.collect.Multiset$Entry",
         "com.google.common.base.Predicates$NotPredicate",
         "com.google.common.math.BigIntegerMath",
         "com.google.common.collect.MapMakerInternalMap$Strength$3",
         "com.google.common.collect.AbstractMultiset$ElementSet",
         "com.google.common.collect.SortedMultisets$NavigableElementSet",
         "com.google.common.collect.TreeMultiset$Reference",
         "com.google.common.collect.EnumHashBiMap",
         "com.google.common.cache.LocalCache$WeakAccessEntry",
         "com.google.common.eventbus.AnnotatedSubscriberFinder",
         "com.google.common.collect.ImmutableSortedSet$SerializedForm",
         "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier",
         "com.google.common.collect.SortedMultisets",
         "com.google.common.collect.Multimaps$MapMultimap",
         "com.google.common.util.concurrent.FakeTimeLimiter",
         "com.google.common.collect.EvictingQueue",
         "com.google.common.collect.ComparisonChain$InactiveComparisonChain",
         "com.google.common.cache.LocalCache$AbstractReferenceEntry",
         "com.google.common.cache.ForwardingCache$SimpleForwardingCache",
         "com.google.common.collect.Cut$BelowAll",
         "com.google.common.reflect.MutableTypeToInstanceMap$1",
         "com.google.common.hash.Hashing$Adler32Holder",
         "com.google.common.collect.ReverseNaturalOrdering",
         "com.google.common.collect.MapConstraints$InverseConstraint",
         "com.google.common.collect.BinaryTreeTraverser",
         "com.google.common.collect.HashBiMap$BiEntry",
         "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask",
         "com.google.common.annotations.VisibleForTesting",
         "com.google.common.cache.AbstractLoadingCache",
         "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries",
         "com.google.common.collect.MapMaker$NullComputingConcurrentMap",
         "com.google.common.reflect.MutableTypeToInstanceMap",
         "com.google.common.collect.ComputingConcurrentHashMap",
         "com.google.common.collect.ImmutableRangeMap$2",
         "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher",
         "com.google.common.escape.CharEscaperBuilder$CharArrayDecorator",
         "com.google.common.collect.Multisets$MultisetIteratorImpl",
         "com.google.common.collect.ImmutableRangeMap$1",
         "com.google.common.cache.package-info",
         "com.google.common.collect.AbstractNavigableMap$DescendingMap",
         "com.google.common.base.FinalizableReferenceQueue$DirectLoader",
         "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
         "com.google.common.collect.RowSortedTable",
         "com.google.common.collect.Iterables$UnmodifiableIterable",
         "com.google.common.collect.Maps$UnmodifiableBiMap",
         "com.google.common.collect.AbstractMapEntry",
         "com.google.common.util.concurrent.Service$State$1",
         "com.google.common.util.concurrent.Service$State$2",
         "com.google.common.util.concurrent.Service$State$3",
         "com.google.common.util.concurrent.Service$State$4",
         "com.google.common.collect.Sets$PowerSet",
         "com.google.common.util.concurrent.Service$State$5",
         "com.google.common.util.concurrent.Service$State$6",
         "com.google.common.collect.ImmutableRangeSet$ComplementRanges",
         "com.google.common.collect.Maps$10",
         "com.google.common.collect.Maps$11",
         "com.google.common.io.CharStreams$1",
         "com.google.common.collect.GeneralRange",
         "com.google.common.collect.ImmutableRangeSet$SerializedForm",
         "com.google.common.collect.Iterables$10",
         "com.google.common.collect.Iterables$11",
         "com.google.common.collect.Iterables$12",
         "com.google.common.collect.Iterables$13",
         "com.google.common.collect.Iterables$14",
         "com.google.common.util.concurrent.RateLimiter",
         "com.google.common.collect.Iterables$15",
         "com.google.common.hash.Murmur3_32HashFunction",
         "com.google.common.collect.Lists",
         "com.google.common.reflect.Types",
         "com.google.common.io.PatternFilenameFilter",
         "com.google.common.collect.Maps$BiMapConverter",
         "com.google.common.util.concurrent.Futures$ImmediateFuture",
         "com.google.common.xml.XmlEscapers",
         "com.google.common.collect.Interners$WeakInterner$Dummy",
         "com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment",
         "com.google.common.base.Predicates$CompositionPredicate",
         "com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1",
         "com.google.common.collect.MapMaker$ComputingMapAdapter",
         "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule",
         "com.google.common.collect.AbstractSortedMultiset$1",
         "com.google.common.io.Files$FileByteSink",
         "com.google.common.collect.Tables",
         "com.google.common.cache.RemovalListeners$1$1",
         "com.google.common.util.concurrent.ListenableFutureTask",
         "com.google.common.cache.RemovalListeners$1",
         "com.google.common.cache.LocalCache$WeightedWeakValueReference",
         "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound",
         "com.google.common.collect.TransformedListIterator",
         "com.google.common.hash.Hashing$Sha1Holder",
         "com.google.common.collect.TreeTraverser$PostOrderNode",
         "com.google.common.util.concurrent.SmoothRateLimiter$1",
         "com.google.common.collect.ImmutableMapEntry",
         "com.google.common.io.LittleEndianDataInputStream",
         "com.google.common.collect.Lists$ReverseList",
         "com.google.common.base.Equivalence$EquivalentToPredicate",
         "com.google.common.collect.AbstractIterator$State",
         "com.google.common.collect.ImmutableMultimap$EntryCollection",
         "com.google.common.collect.Lists$StringAsImmutableList",
         "com.google.common.cache.CacheLoader$FunctionToCacheLoader",
         "com.google.common.cache.LocalCache$WeightedSoftValueReference",
         "com.google.common.collect.Multimaps$Entries",
         "com.google.common.collect.Multimaps$AsMap$EntrySet",
         "com.google.common.collect.Interners$InternerFunction",
         "com.google.common.collect.MultimapBuilder$LinkedListSupplier",
         "com.google.common.collect.AbstractBiMap$Inverse",
         "com.google.common.util.concurrent.UncheckedExecutionException",
         "com.google.common.collect.Multisets$4$1",
         "com.google.common.cache.CacheBuilderSpec$MaximumSizeParser",
         "com.google.common.cache.LocalCache$StrongEntry",
         "com.google.common.eventbus.SubscriberExceptionContext",
         "com.google.common.util.concurrent.Striped",
         "com.google.common.collect.BinaryTreeTraverser$PreOrderIterator",
         "com.google.common.collect.MapMakerInternalMap$ReferenceEntry",
         "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1",
         "com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference",
         "com.google.common.util.concurrent.Futures$CombinedFuture$1",
         "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap",
         "com.google.common.collect.MapMakerInternalMap$StrongEntry",
         "com.google.common.collect.Multimaps$CustomSetMultimap",
         "com.google.common.io.ByteSource$ByteArrayByteSource",
         "com.google.common.util.concurrent.Futures$CombinedFuture$2",
         "com.google.common.reflect.TypeResolver$TypeTable",
         "com.google.common.util.concurrent.ForwardingCheckedFuture",
         "com.google.common.collect.NaturalOrdering",
         "com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm",
         "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask",
         "com.google.common.cache.Cache",
         "com.google.common.collect.TreeTraverser$BreadthFirstIterator",
         "com.google.common.collect.LinkedListMultimap$Node",
         "com.google.common.collect.ListMultimap",
         "com.google.common.collect.WellBehavedMap$EntrySet$1",
         "com.google.common.collect.AbstractBiMap$EntrySet$1$1",
         "com.google.common.collect.Maps$NavigableKeySet",
         "com.google.common.net.HttpHeaders",
         "com.google.common.reflect.ClassPath$ClassInfo",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering",
         "com.google.common.primitives.ParseRequest",
         "com.google.common.cache.CacheBuilder$OneWeigher",
         "com.google.common.collect.Multimaps$TransformedEntriesListMultimap",
         "com.google.common.escape.Escapers$Builder$1",
         "com.google.common.primitives.Longs",
         "com.google.common.collect.ForwardingListIterator",
         "com.google.common.net.UrlEscapers",
         "com.google.common.collect.MapConstraints$NotNullMapConstraint",
         "com.google.common.collect.ImmutableBiMap$SerializedForm",
         "com.google.common.collect.Multimaps$UnmodifiableSetMultimap",
         "com.google.common.cache.CacheBuilderSpec$1",
         "com.google.common.util.concurrent.package-info",
         "com.google.common.util.concurrent.ListeningExecutorService",
         "com.google.common.hash.Hashing$Md5Holder",
         "com.google.common.collect.Maps$FilteredEntryMap",
         "com.google.common.collect.Synchronized$SynchronizedMultiset",
         "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1",
         "com.google.common.io.FileBackedOutputStream$2",
         "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2",
         "com.google.common.io.FileBackedOutputStream$1",
         "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3",
         "com.google.common.base.Splitter$3$1",
         "com.google.common.base.Stopwatch$1",
         "com.google.common.collect.Synchronized$SynchronizedCollection",
         "com.google.common.collect.Serialization$FieldSetter",
         "com.google.common.collect.Maps$UnmodifiableEntrySet",
         "com.google.common.base.CaseFormat$1",
         "com.google.common.hash.HashCode",
         "com.google.common.base.CaseFormat$2",
         "com.google.common.base.CaseFormat$3",
         "com.google.common.base.CaseFormat$4",
         "com.google.common.base.CaseFormat$5",
         "com.google.common.collect.Sets$FilteredNavigableSet",
         "com.google.common.collect.UnmodifiableSortedMultiset",
         "com.google.common.io.ByteSource$EmptyByteSource",
         "com.google.common.hash.ChecksumHashFunction$ChecksumHasher",
         "com.google.common.collect.MapMakerInternalMap$WriteThroughEntry",
         "com.google.common.collect.ConcurrentHashMultiset",
         "com.google.common.util.concurrent.Service$1",
         "com.google.common.collect.ForwardingQueue",
         "com.google.common.io.GwtWorkarounds",
         "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
         "com.google.common.collect.Sets$SubSet",
         "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator",
         "com.google.common.html.HtmlEscapers",
         "com.google.common.collect.EmptyContiguousSet$SerializedForm",
         "com.google.common.collect.ForwardingMultiset",
         "com.google.common.collect.ImmutableRangeSet$AsSet$2",
         "com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture",
         "com.google.common.collect.ImmutableRangeSet$AsSet$1",
         "com.google.common.collect.ImmutableMultiset$EntrySet",
         "com.google.common.collect.TreeMultimap",
         "com.google.common.hash.Funnels$LongFunnel",
         "com.google.common.base.Splitter",
         "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet",
         "com.google.common.collect.Maps$8",
         "com.google.common.collect.ArrayTable$Column",
         "com.google.common.collect.Maps$9",
         "com.google.common.collect.Maps$6",
         "com.google.common.util.concurrent.MoreExecutors$2",
         "com.google.common.collect.Maps$7",
         "com.google.common.util.concurrent.MoreExecutors$1",
         "com.google.common.util.concurrent.MoreExecutors$4",
         "com.google.common.util.concurrent.MoreExecutors$3",
         "com.google.common.collect.ComparatorOrdering",
         "com.google.common.collect.Maps$1",
         "com.google.common.collect.Maps$4",
         "com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry",
         "com.google.common.collect.Maps$5",
         "com.google.common.collect.Maps$2",
         "com.google.common.collect.Maps$3",
         "com.google.common.collect.ImmutableSortedMultiset$Builder",
         "com.google.common.reflect.Invokable$MethodInvokable",
         "com.google.common.collect.Queues",
         "com.google.common.collect.FilteredKeyMultimap$Entries",
         "com.google.common.hash.AbstractHasher",
         "com.google.common.reflect.TypeResolver",
         "com.google.common.base.Optional$1$1",
         "com.google.common.collect.Ordering$ArbitraryOrdering",
         "com.google.common.hash.Hashing$Crc32cHolder",
         "com.google.common.hash.SipHashFunction",
         "com.google.common.primitives.Doubles$DoubleArrayAsList",
         "com.google.common.collect.SortedLists$KeyAbsentBehavior$2",
         "com.google.common.eventbus.EventBus$1",
         "com.google.common.collect.SortedLists$KeyAbsentBehavior$1",
         "com.google.common.eventbus.EventBus$2",
         "com.google.common.collect.AbstractTable",
         "com.google.common.collect.Tables$1",
         "com.google.common.eventbus.EventBus$3",
         "com.google.common.util.concurrent.ServiceManager",
         "com.google.common.collect.SortedLists$KeyAbsentBehavior$3",
         "com.google.common.collect.StandardRowSortedTable$1",
         "com.google.common.cache.LocalCache$LoadingSerializationProxy",
         "com.google.common.reflect.TypeToken$TypeFilter",
         "com.google.common.collect.Multimap",
         "com.google.common.io.CharSink",
         "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator",
         "com.google.common.collect.ForwardingConcurrentMap",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode",
         "com.google.common.base.StandardSystemProperty",
         "com.google.common.hash.Hashing$Murmur3_32Holder",
         "com.google.common.base.Suppliers$SupplierComposition",
         "com.google.common.io.GwtWorkarounds$CharInput",
         "com.google.common.collect.Tables$TransposeTable",
         "com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher",
         "com.google.common.base.CharMatcher$Or",
         "com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty",
         "com.google.common.collect.ForwardingSortedMap$StandardKeySet",
         "com.google.common.util.concurrent.MoreExecutors$Application$1",
         "com.google.common.escape.Escaper$1",
         "com.google.common.io.FileBackedOutputStream$MemoryOutput",
         "com.google.common.collect.MultimapBuilder",
         "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap",
         "com.google.common.util.concurrent.SimpleTimeLimiter$1",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$1",
         "com.google.common.collect.CartesianList$1",
         "com.google.common.collect.Synchronized$SynchronizedRandomAccessList",
         "com.google.common.base.FinalizableWeakReference",
         "com.google.common.base.internal.Finalizer",
         "com.google.common.base.Enums$StringConverter",
         "com.google.common.collect.RegularImmutableBiMap",
         "com.google.common.io.ByteSink",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace",
         "com.google.common.collect.ImmutableBiMap$Builder",
         "com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream",
         "com.google.common.collect.HashBiMap$KeySet",
         "com.google.common.collect.StandardTable$Row$RowEntrySet$1$1",
         "com.google.common.collect.ImmutableMapEntry$TerminalEntry",
         "com.google.common.hash.BloomFilterStrategies$BitArray",
         "com.google.common.collect.RegularImmutableTable$CellSet",
         "com.google.common.collect.Maps$TransformedEntriesMap",
         "com.google.common.collect.TreeRangeSet$AsRanges",
         "com.google.common.primitives.Chars",
         "com.google.common.cache.LongAdder",
         "com.google.common.collect.WellBehavedMap$1",
         "com.google.common.hash.MessageDigestHashFunction",
         "com.google.common.util.concurrent.Runnables",
         "com.google.common.collect.DenseImmutableTable$1",
         "com.google.common.cache.LocalCache$StrongAccessEntry",
         "com.google.common.collect.Count",
         "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet",
         "com.google.common.cache.LocalCache$LocalManualCache$1",
         "com.google.common.util.concurrent.Callables",
         "com.google.common.primitives.Shorts$ShortConverter",
         "com.google.common.io.ByteStreams$ByteArrayDataInputStream",
         "com.google.common.net.HostAndPort",
         "com.google.common.collect.TreeBasedTable",
         "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1$1",
         "com.google.common.collect.MapConstraints$ConstrainedBiMap",
         "com.google.common.base.Equivalence$Wrapper",
         "com.google.common.util.concurrent.Monitor",
         "com.google.common.base.CharMatcher$FastMatcher",
         "com.google.common.collect.AbstractMapBasedMultimap$Itr",
         "com.google.common.hash.Funnels$StringCharsetFunnel",
         "com.google.common.collect.MapMakerInternalMap$ValueReference",
         "com.google.common.base.Converter$ConverterComposition",
         "com.google.common.collect.EmptyImmutableSetMultimap",
         "com.google.common.collect.HashBiMap$EntrySet",
         "com.google.common.base.Predicates$IsEqualToPredicate",
         "com.google.common.collect.ImmutableCollection",
         "com.google.common.cache.LocalCache$ManualSerializationProxy",
         "com.google.common.hash.BloomFilterStrategies",
         "com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry",
         "com.google.common.io.BaseEncoding$3",
         "com.google.common.io.BaseEncoding$4",
         "com.google.common.collect.ImmutableCollection$Builder",
         "com.google.common.io.BaseEncoding$1",
         "com.google.common.io.BaseEncoding$2",
         "com.google.common.annotations.GwtIncompatible",
         "com.google.common.collect.TreeRangeMap$1",
         "com.google.common.collect.CartesianList",
         "com.google.common.collect.Maps$FilteredKeyMap",
         "com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException",
         "com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset",
         "com.google.common.util.concurrent.AbstractScheduledService$Scheduler",
         "com.google.common.collect.RegularImmutableMap$NonTerminalMapEntry",
         "com.google.common.util.concurrent.ListenableFuture",
         "com.google.common.collect.ImmutableEnumSet$EnumSerializedForm",
         "com.google.common.io.CharSource$ConcatenatedCharSource",
         "com.google.common.util.concurrent.JdkFutureAdapters",
         "com.google.common.collect.ImmutableList",
         "com.google.common.collect.ImmutableRangeSet$AsSet",
         "com.google.common.escape.Escapers",
         "com.google.common.io.Flushables",
         "com.google.common.collect.Iterables$10$1",
         "com.google.common.collect.SortedMultisets$ElementSet",
         "com.google.common.collect.MapConstraints$ConstrainedEntries",
         "com.google.common.reflect.TypeResolver$TypeTable$1",
         "com.google.common.hash.HashingOutputStream",
         "com.google.common.hash.BloomFilter",
         "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry",
         "com.google.common.util.concurrent.Callables$3",
         "com.google.common.util.concurrent.Callables$2",
         "com.google.common.cache.LongAddable",
         "com.google.common.collect.MapMaker$RemovalListener",
         "com.google.common.util.concurrent.Callables$1",
         "com.google.common.hash.Hashing$ConcatenatedHashFunction",
         "com.google.common.collect.ImmutableRangeMap$Builder",
         "com.google.common.io.LineProcessor",
         "com.google.common.collect.MapMakerInternalMap",
         "com.google.common.collect.ForwardingSortedMultiset",
         "com.google.common.collect.Multisets$ElementSet$1",
         "com.google.common.collect.HashBiMap$Inverse$1$1$InverseEntry",
         "com.google.common.collect.Maps$UnmodifiableEntries",
         "com.google.common.collect.BoundType$2",
         "com.google.common.util.concurrent.AsyncSettableFuture$1",
         "com.google.common.collect.BoundType$1",
         "com.google.common.io.Closer$Suppressor",
         "com.google.common.collect.RegularImmutableSortedMultiset",
         "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
         "com.google.common.io.GwtWorkarounds$ByteInput",
         "com.google.common.reflect.ClassPath",
         "com.google.common.collect.LinkedHashMultimap",
         "com.google.common.collect.Synchronized$SynchronizedList",
         "com.google.common.base.FinalizableReferenceQueue$FinalizerLoader",
         "com.google.common.cache.AbstractCache",
         "com.google.common.collect.Maps$SortedKeySet",
         "com.google.common.collect.StandardTable$TableSet",
         "com.google.common.util.concurrent.ListenerCallQueue$Callback",
         "com.google.common.collect.LexicographicalOrdering",
         "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
         "com.google.common.collect.Multisets$5",
         "com.google.common.collect.StandardTable$Row",
         "com.google.common.collect.Multisets$3",
         "com.google.common.collect.Multisets$4",
         "com.google.common.collect.Multisets$1",
         "com.google.common.cache.CacheStats",
         "com.google.common.collect.Multisets$2",
         "com.google.common.collect.Iterables",
         "com.google.common.collect.LinkedListMultimap$1",
         "com.google.common.collect.LinkedListMultimap$2",
         "com.google.common.collect.GenericMapMaker$NullListener",
         "com.google.common.io.CountingOutputStream",
         "com.google.common.collect.LinkedListMultimap$3",
         "com.google.common.collect.LinkedListMultimap$4",
         "com.google.common.cache.CacheLoader$SupplierToCacheLoader",
         "com.google.common.util.concurrent.ThreadFactoryBuilder$1",
         "com.google.common.collect.HashBiMap$Itr",
         "com.google.common.util.concurrent.Futures$ImmediateCancelledFuture",
         "com.google.common.collect.ObjectArrays",
         "com.google.common.collect.Synchronized$SynchronizedDeque",
         "com.google.common.collect.Constraints$ConstrainedSet",
         "com.google.common.util.concurrent.Monitor$Guard",
         "com.google.common.io.OutputSupplier",
         "com.google.common.collect.Constraints$ConstrainedSortedSet",
         "com.google.common.collect.SortedIterable",
         "com.google.common.collect.RangeMap",
         "com.google.common.collect.UnmodifiableIterator",
         "com.google.common.io.ByteSource$AsCharSource",
         "com.google.common.base.Functions$SupplierFunction",
         "com.google.common.collect.ImmutableSortedMultiset",
         "com.google.common.eventbus.EventSubscriber",
         "com.google.common.io.InputSupplier",
         "com.google.common.hash.package-info",
         "com.google.common.collect.Maps$EntryFunction$2",
         "com.google.common.collect.Maps$EntryFunction$1",
         "com.google.common.io.BaseEncoding$StandardBaseEncoding$2",
         "com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder",
         "com.google.common.io.BaseEncoding$StandardBaseEncoding$1",
         "com.google.common.io.AppendableWriter",
         "com.google.common.util.concurrent.Futures$ImmediateSuccessfulCheckedFuture",
         "com.google.common.collect.HashMultiset",
         "com.google.common.cache.CacheBuilderSpec$ValueParser",
         "com.google.common.base.SmallCharMatcher",
         "com.google.common.base.CharMatcher$RangesMatcher",
         "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture$1",
         "com.google.common.collect.SingletonImmutableList",
         "com.google.common.base.Predicates$AndPredicate",
         "com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry",
         "com.google.common.primitives.Floats",
         "com.google.common.reflect.TypeToken$TypeCollector$1",
         "com.google.common.collect.Maps$FilteredMapValues",
         "com.google.common.collect.MinMaxPriorityQueue$QueueIterator",
         "com.google.common.collect.ForwardingMap",
         "com.google.common.collect.ForwardingListMultimap",
         "com.google.common.collect.ExplicitOrdering",
         "com.google.common.io.LittleEndianDataOutputStream",
         "com.google.common.reflect.TypeToken$TypeCollector$3",
         "com.google.common.reflect.TypeToken$TypeCollector$2",
         "com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1",
         "com.google.common.reflect.TypeToken$TypeCollector$4",
         "com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2",
         "com.google.common.cache.LocalCache$Strength",
         "com.google.common.collect.MapMakerInternalMap$CleanupMapTask",
         "com.google.common.hash.Murmur3_128HashFunction",
         "com.google.common.util.concurrent.AtomicDoubleArray",
         "com.google.common.collect.Synchronized$SynchronizedListMultimap",
         "com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm",
         "com.google.common.hash.Funnels$SequentialFunnel",
         "com.google.common.hash.AbstractByteHasher",
         "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$1",
         "com.google.common.collect.Tables$AbstractCell",
         "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$2",
         "com.google.common.base.CaseFormat",
         "com.google.common.collect.Interners",
         "com.google.common.primitives.Floats$LexicographicalComparator",
         "com.google.common.cache.LocalCache$ValueIterator",
         "com.google.common.primitives.Ints",
         "com.google.common.annotations.Beta",
         "com.google.common.collect.MapMakerInternalMap$SoftEntry",
         "com.google.common.primitives.Primitives",
         "com.google.common.base.Utf8",
         "com.google.common.base.Splitter$SplittingIterator",
         "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1$1",
         "com.google.common.collect.RegularImmutableSortedMap$1",
         "com.google.common.collect.Synchronized$SynchronizedAsMapValues",
         "com.google.common.base.Predicates$InPredicate",
         "com.google.common.collect.MapMakerInternalMap$EntrySet",
         "com.google.common.collect.Maps$MapDifferenceImpl",
         "com.google.common.net.MediaType$2",
         "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
         "com.google.common.collect.Multisets$1$1",
         "com.google.common.primitives.UnsignedInteger",
         "com.google.common.collect.Multisets$FilteredMultiset",
         "com.google.common.base.Splitter$MapSplitter",
         "com.google.common.cache.Weigher",
         "com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference",
         "com.google.common.util.concurrent.MoreExecutors$DirectExecutorService",
         "com.google.common.base.Converter$IdentityConverter",
         "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder",
         "com.google.common.collect.TreeRangeSet$RangesByUpperBound",
         "com.google.common.collect.HashBiMap$Inverse",
         "com.google.common.collect.ForwardingMap$StandardKeySet",
         "com.google.common.collect.Iterators$10",
         "com.google.common.cache.LocalCache$StrongAccessWriteEntry",
         "com.google.common.collect.Iterators$12",
         "com.google.common.collect.Iterators$11",
         "com.google.common.collect.MapConstraint",
         "com.google.common.base.Predicate",
         "com.google.common.collect.ImmutableSetMultimap$BuilderMultimap",
         "com.google.common.collect.Lists$CharSequenceAsList",
         "com.google.common.eventbus.EventBus$EventWithSubscriber",
         "com.google.common.cache.LocalCache$KeyIterator",
         "com.google.common.net.InetAddresses$TeredoInfo",
         "com.google.common.collect.Iterators$14",
         "com.google.common.collect.Iterators$13",
         "com.google.common.hash.AbstractStreamingHashFunction",
         "com.google.common.cache.LocalCache",
         "com.google.common.cache.LongAddables$PureJavaLongAddable",
         "com.google.common.collect.ArrayTable$1",
         "com.google.common.math.MathPreconditions",
         "com.google.common.util.concurrent.Futures$FallbackFuture$1$1",
         "com.google.common.collect.ImmutableMultimap",
         "com.google.common.collect.HashBiMap$InverseSerializedForm",
         "com.google.common.util.concurrent.WrappingScheduledExecutorService",
         "com.google.common.collect.FilteredEntryMultimap$Keys$1",
         "com.google.common.collect.ImmutableSortedSet",
         "com.google.common.base.Charsets",
         "com.google.common.util.concurrent.AbstractExecutionThreadService$1$2",
         "com.google.common.util.concurrent.AbstractExecutionThreadService$1$1",
         "com.google.common.collect.ImmutableRangeSet$Builder",
         "com.google.common.hash.Hashing$LinearCongruentialGenerator",
         "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1",
         "com.google.common.collect.Multimaps$Keys",
         "com.google.common.base.Joiner$MapJoiner",
         "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache",
         "com.google.common.collect.BinaryTreeTraverser$1$1",
         "com.google.common.collect.AbstractMultiset$EntrySet",
         "com.google.common.collect.ImmutableMultimap$BuilderMultimap",
         "com.google.common.base.Predicates$OrPredicate",
         "com.google.common.collect.RegularImmutableSortedMap",
         "com.google.common.base.Objects$1",
         "com.google.common.base.Optional$1",
         "com.google.common.collect.FilteredKeySetMultimap",
         "com.google.common.base.Splitter$4$1",
         "com.google.common.base.Objects",
         "com.google.common.collect.SortedSetMultimap",
         "com.google.common.collect.ImmutableSortedAsList",
         "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2",
         "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1",
         "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap",
         "com.google.common.collect.AbstractBiMap$KeySet",
         "com.google.common.collect.Maps$SortedMapDifferenceImpl",
         "com.google.common.collect.Constraints$ConstrainedList",
         "com.google.common.collect.Maps$EntrySet",
         "com.google.common.util.concurrent.MoreExecutors",
         "com.google.common.util.concurrent.Futures$FutureCombiner",
         "com.google.common.io.CharSource$EmptyCharSource",
         "com.google.common.cache.LocalCache$WeakAccessWriteEntry",
         "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
         "com.google.common.cache.LocalCache$2",
         "com.google.common.collect.ForwardingMultiset$StandardElementSet",
         "com.google.common.cache.LocalCache$1",
         "com.google.common.hash.Hashing$Crc32Holder",
         "com.google.common.collect.EmptyContiguousSet$1",
         "com.google.common.cache.LongAddables",
         "com.google.common.collect.ImmutableMap$Builder",
         "com.google.common.base.Converter$FunctionBasedConverter",
         "com.google.common.cache.LocalCache$ReferenceEntry",
         "com.google.common.collect.MutableClassToInstanceMap$1",
         "com.google.common.collect.AbstractBiMap$EntrySet",
         "com.google.common.reflect.TypeToken$TypeFilter$1",
         "com.google.common.reflect.TypeToken$TypeFilter$2",
         "com.google.common.collect.Multimaps$CustomMultimap",
         "com.google.common.collect.RegularImmutableList",
         "com.google.common.collect.Tables$TransposeTable$1",
         "com.google.common.hash.BloomFilterStrategies$1",
         "com.google.common.hash.BloomFilterStrategies$2",
         "com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException",
         "com.google.common.reflect.Types$ClassOwnership$2",
         "com.google.common.cache.LocalCache$EntryFactory",
         "com.google.common.collect.Synchronized$SynchronizedAsMapEntries",
         "com.google.common.reflect.Types$ClassOwnership$3",
         "com.google.common.collect.SingletonImmutableTable",
         "com.google.common.reflect.Types$ClassOwnership$1",
         "com.google.common.util.concurrent.SimpleTimeLimiter$1$1",
         "com.google.common.collect.ImmutableMapKeySet",
         "com.google.common.base.Verify",
         "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4",
         "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$3",
         "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$2",
         "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1",
         "com.google.common.util.concurrent.FutureFallback",
         "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$6",
         "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$5",
         "com.google.common.base.Ticker",
         "com.google.common.hash.Funnel",
         "com.google.common.eventbus.SubscriberExceptionHandler",
         "com.google.common.io.ByteStreams",
         "com.google.common.collect.Maps$AbstractFilteredMap",
         "com.google.common.collect.FilteredMultimap",
         "com.google.common.collect.FilteredMultimapValues",
         "com.google.common.io.ByteProcessor",
         "com.google.common.collect.MapMakerInternalMap$SerializationProxy",
         "com.google.common.collect.ImmutableSet$Builder",
         "com.google.common.collect.Sets$SetView",
         "com.google.common.collect.Synchronized$SynchronizedAsMapValues$1",
         "com.google.common.collect.Synchronized$SynchronizedSortedSet",
         "com.google.common.collect.Maps$SortedAsMapView",
         "com.google.common.collect.MapMaker$RemovalCause$4",
         "com.google.common.collect.Collections2$PermutationIterator",
         "com.google.common.collect.MapMaker$RemovalCause$5",
         "com.google.common.collect.MapMaker$RemovalCause$2",
         "com.google.common.collect.MapMaker$RemovalCause$3",
         "com.google.common.primitives.Shorts$ShortArrayAsList",
         "com.google.common.io.Closer",
         "com.google.common.collect.Tables$ImmutableCell",
         "com.google.common.collect.UsingToStringOrdering",
         "com.google.common.collect.ArrayTable$ArrayMap",
         "com.google.common.collect.MapMaker$RemovalCause$1",
         "com.google.common.reflect.TypeToken$TypeSet",
         "com.google.common.util.concurrent.AtomicLongMap$1",
         "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
         "com.google.common.collect.ForwardingMap$StandardEntrySet",
         "com.google.common.cache.LocalCache$WriteQueue",
         "com.google.common.collect.MapDifference",
         "com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry",
         "com.google.common.primitives.Ints$LexicographicalComparator",
         "com.google.common.collect.StandardTable$ColumnKeyIterator",
         "com.google.common.collect.MinMaxPriorityQueue$Heap",
         "com.google.common.collect.Maps$FilteredEntryNavigableMap",
         "com.google.common.collect.FilteredEntryMultimap$AsMap$2$1",
         "com.google.common.collect.MultimapBuilder$ListMultimapBuilder",
         "com.google.common.eventbus.EventBus$LoggingSubscriberExceptionHandler",
         "com.google.common.reflect.ClassPath$Scanner",
         "com.google.common.eventbus.AnnotatedSubscriberFinder$1",
         "com.google.common.collect.Sets$DescendingSet",
         "com.google.common.collect.Sets",
         "com.google.common.primitives.Ints$IntConverter",
         "com.google.common.collect.Multisets$ElementSet",
         "com.google.common.collect.ComparisonChain$1",
         "com.google.common.cache.LocalCache$AccessQueue$1",
         "com.google.common.cache.LocalCache$AccessQueue$2",
         "com.google.common.collect.Iterables$2",
         "com.google.common.collect.Lists$TransformingSequentialList$1",
         "com.google.common.primitives.Booleans",
         "com.google.common.collect.Iterables$3",
         "com.google.common.collect.Iterables$4",
         "com.google.common.collect.Iterables$5",
         "com.google.common.collect.Iterables$6",
         "com.google.common.collect.ForwardingObject",
         "com.google.common.collect.Iterables$7",
         "com.google.common.collect.Iterables$8",
         "com.google.common.collect.Iterables$9",
         "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys",
         "com.google.common.base.MoreObjects$1",
         "com.google.common.reflect.TypeToInstanceMap",
         "com.google.common.collect.ImmutableBiMap",
         "com.google.common.collect.Multisets$UnmodifiableMultiset",
         "com.google.common.collect.Multimaps$Keys$1$1",
         "com.google.common.util.concurrent.ServiceManager$NoOpService",
         "com.google.common.io.Files$FileByteSource",
         "com.google.common.collect.Multimaps$Keys$KeysEntrySet",
         "com.google.common.collect.Collections2$1",
         "com.google.common.collect.Iterables$1",
         "com.google.common.reflect.Parameter",
         "com.google.common.collect.RegularImmutableMap$EntrySet",
         "com.google.common.base.Ascii",
         "com.google.common.collect.ImmutableRangeSet$1",
         "com.google.common.collect.LinkedHashMultimap$ValueSet$1",
         "com.google.common.primitives.SignedBytes",
         "com.google.common.cache.LocalCache$StrongWriteEntry",
         "com.google.common.net.MediaType$1",
         "com.google.common.reflect.ImmutableTypeToInstanceMap$1",
         "com.google.common.cache.RemovalCause",
         "com.google.common.collect.MapConstraints$ConstrainedMultimap$2",
         "com.google.common.collect.SortedIterables",
         "com.google.common.util.concurrent.ListenableScheduledFuture",
         "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1",
         "com.google.common.collect.MapConstraints$ConstrainedMultimap$1"
        ],
        "usedTypes": [
         "com.google.common.base.Charsets",
         "com.google.common.util.concurrent.Futures",
         "com.google.common.util.concurrent.MoreExecutors",
         "com.google.common.util.concurrent.ListenableFuture",
         "com.google.common.util.concurrent.SettableFuture",
         "com.google.common.net.HostAndPort",
         "com.google.common.util.concurrent.FutureCallback",
         "com.google.common.util.concurrent.ListeningExecutorService"
        ],
        "usageRatio": 0.004733727810650888,
        "children": []
       },
       {
        "id": "com.google.code.findbugs:jsr305:jar:2.0.1:compile",
        "coordinates": "com.google.code.findbugs:jsr305:2.0.1",
        "groupId": "com.google.code.findbugs",
        "artifactId": "jsr305",
        "version": "2.0.1",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 31866,
        "type": "transitive",
        "status": "bloated",
        "parent": "com.spotify:dns:jar:3.0.1:compile",
        "allTypes": [
         "javax.annotation.Nonnull$Checker",
         "javax.annotation.Nonnegative",
         "javax.annotation.WillClose",
         "javax.annotation.CheckForSigned",
         "javax.annotation.ParametersAreNonnullByDefault",
         "javax.annotation.MatchesPattern$Checker",
         "javax.annotation.meta.Exclusive",
         "javax.annotation.meta.TypeQualifierNickname",
         "javax.annotation.meta.TypeQualifier",
         "javax.annotation.Syntax",
         "javax.annotation.Untainted",
         "javax.annotation.WillCloseWhenClosed",
         "javax.annotation.Nonnull",
         "javax.annotation.Nullable",
         "javax.annotation.OverridingMethodsMustInvokeSuper",
         "javax.annotation.RegEx$Checker",
         "javax.annotation.meta.TypeQualifierValidator",
         "javax.annotation.WillNotClose",
         "javax.annotation.meta.Exhaustive",
         "javax.annotation.Nonnegative$Checker",
         "javax.annotation.MatchesPattern",
         "javax.annotation.concurrent.ThreadSafe",
         "javax.annotation.meta.TypeQualifierDefault",
         "javax.annotation.concurrent.GuardedBy",
         "javax.annotation.Signed",
         "javax.annotation.meta.When",
         "javax.annotation.RegEx",
         "javax.annotation.CheckReturnValue",
         "javax.annotation.Tainted",
         "javax.annotation.PropertyKey",
         "javax.annotation.Detainted",
         "javax.annotation.CheckForNull",
         "javax.annotation.concurrent.Immutable",
         "javax.annotation.concurrent.NotThreadSafe"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "org.slf4j:slf4j-api:jar:1.7.5:compile",
        "coordinates": "org.slf4j:slf4j-api:1.7.5",
        "groupId": "org.slf4j",
        "artifactId": "slf4j-api",
        "version": "1.7.5",
        "scope": "compile",
        "packaging": "jar",
        "omitted": true,
        "type": "unknown",
        "status": "unknown",
        "parent": "com.spotify:dns:jar:3.0.1:compile",
        "allTypes": [],
        "usedTypes": [],
        "usageRatio": -1.0,
        "children": []
       }
      ]
     },
     {
      "id": "commons-lang:commons-lang:jar:2.6:compile",
      "coordinates": "commons-lang:commons-lang:2.6",
      "groupId": "commons-lang",
      "artifactId": "commons-lang",
      "version": "2.6",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 284220,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.spotify:folsom:jar:0.7.1:compile",
      "allTypes": [
       "org.apache.commons.lang.StringUtils",
       "org.apache.commons.lang.time.FastDateFormat$CharacterLiteral",
       "org.apache.commons.lang.Entities$PrimitiveEntityMap",
       "org.apache.commons.lang.math.Range",
       "org.apache.commons.lang.time.FastDateFormat$NumberRule",
       "org.apache.commons.lang.BooleanUtils",
       "org.apache.commons.lang.math.RandomUtils",
       "org.apache.commons.lang.exception.NestableException",
       "org.apache.commons.lang.builder.ReflectionToStringBuilder",
       "org.apache.commons.lang.Entities$LookupEntityMap",
       "org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule",
       "org.apache.commons.lang.Entities$HashEntityMap",
       "org.apache.commons.lang.text.StrBuilder$StrBuilderReader",
       "org.apache.commons.lang.text.StrMatcher$StringMatcher",
       "org.apache.commons.lang.IncompleteArgumentException",
       "org.apache.commons.lang.SystemUtils",
       "org.apache.commons.lang.mutable.MutableInt",
       "org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField",
       "org.apache.commons.lang.builder.CompareToBuilder",
       "org.apache.commons.lang.reflect.MethodUtils",
       "org.apache.commons.lang.math.IEEE754rUtils",
       "org.apache.commons.lang.builder.ToStringStyle$MultiLineToStringStyle",
       "org.apache.commons.lang.text.StrLookup$MapStrLookup",
       "org.apache.commons.lang.reflect.ConstructorUtils",
       "org.apache.commons.lang.mutable.Mutable",
       "org.apache.commons.lang.builder.ToStringStyle$SimpleToStringStyle",
       "org.apache.commons.lang.time.DateUtils$DateIterator",
       "org.apache.commons.lang.enum.ValuedEnum",
       "org.apache.commons.lang.math.FloatRange",
       "org.apache.commons.lang.text.StrSubstitutor",
       "org.apache.commons.lang.enums.Enum",
       "org.apache.commons.lang.exception.CloneFailedException",
       "org.apache.commons.lang.time.DurationFormatUtils",
       "org.apache.commons.lang.Validate",
       "org.apache.commons.lang.time.FastDateFormat$PaddedNumberField",
       "org.apache.commons.lang.time.FastDateFormat$TwentyFourHourField",
       "org.apache.commons.lang.WordUtils",
       "org.apache.commons.lang.mutable.MutableByte",
       "org.apache.commons.lang.reflect.FieldUtils",
       "org.apache.commons.lang.time.FastDateFormat",
       "org.apache.commons.lang.builder.ToStringStyle$DefaultToStringStyle",
       "org.apache.commons.lang.exception.NestableRuntimeException",
       "org.apache.commons.lang.SerializationUtils",
       "org.apache.commons.lang.builder.ToStringBuilder",
       "org.apache.commons.lang.mutable.MutableShort",
       "org.apache.commons.lang.CharSet",
       "org.apache.commons.lang.time.FastDateFormat$TextField",
       "org.apache.commons.lang.enums.Enum$Entry",
       "org.apache.commons.lang.text.StrMatcher$CharMatcher",
       "org.apache.commons.lang.time.DateUtils",
       "org.apache.commons.lang.time.FastDateFormat$TwelveHourField",
       "org.apache.commons.lang.NullArgumentException",
       "org.apache.commons.lang.RandomStringUtils",
       "org.apache.commons.lang.time.FastDateFormat$UnpaddedMonthField",
       "org.apache.commons.lang.time.FastDateFormat$TwoDigitMonthField",
       "org.apache.commons.lang.CharUtils",
       "org.apache.commons.lang.builder.ToStringStyle$NoFieldNameToStringStyle",
       "org.apache.commons.lang.exception.ExceptionUtils",
       "org.apache.commons.lang.math.JVMRandom",
       "org.apache.commons.lang.time.DateFormatUtils",
       "org.apache.commons.lang.mutable.MutableFloat",
       "org.apache.commons.lang.ObjectUtils$Null",
       "org.apache.commons.lang.builder.EqualsBuilder",
       "org.apache.commons.lang.enums.EnumUtils",
       "org.apache.commons.lang.mutable.MutableBoolean",
       "org.apache.commons.lang.reflect.MemberUtils",
       "org.apache.commons.lang.time.FastDateFormat$Rule",
       "org.apache.commons.lang.NumberUtils",
       "org.apache.commons.lang.text.FormatFactory",
       "org.apache.commons.lang.CharRange$1",
       "org.apache.commons.lang.builder.IDKey",
       "org.apache.commons.lang.math.LongRange",
       "org.apache.commons.lang.mutable.MutableObject",
       "org.apache.commons.lang.ClassUtils",
       "org.apache.commons.lang.time.FastDateFormat$TimeZoneNameRule",
       "org.apache.commons.lang.BitField",
       "org.apache.commons.lang.math.NumberUtils",
       "org.apache.commons.lang.exception.NestableDelegate",
       "org.apache.commons.lang.NotImplementedException",
       "org.apache.commons.lang.Entities$BinaryEntityMap",
       "org.apache.commons.lang.IllegalClassException",
       "org.apache.commons.lang.time.FastDateFormat$Pair",
       "org.apache.commons.lang.NumberRange",
       "org.apache.commons.lang.enum.EnumUtils",
       "org.apache.commons.lang.text.StrTokenizer",
       "org.apache.commons.lang.time.FastDateFormat$TwoDigitYearField",
       "org.apache.commons.lang.enum.Enum",
       "org.apache.commons.lang.text.ExtendedMessageFormat",
       "org.apache.commons.lang.time.FastDateFormat$StringLiteral",
       "org.apache.commons.lang.enum.Enum$Entry",
       "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter",
       "org.apache.commons.lang.ObjectUtils",
       "org.apache.commons.lang.enums.ValuedEnum",
       "org.apache.commons.lang.builder.StandardToStringStyle",
       "org.apache.commons.lang.text.CompositeFormat",
       "org.apache.commons.lang.text.StrMatcher$CharSetMatcher",
       "org.apache.commons.lang.time.StopWatch",
       "org.apache.commons.lang.SerializationException",
       "org.apache.commons.lang.text.StrMatcher$NoMatcher",
       "org.apache.commons.lang.Entities$MapIntMap",
       "org.apache.commons.lang.text.StrMatcher",
       "org.apache.commons.lang.mutable.MutableLong",
       "org.apache.commons.lang.text.StrBuilder",
       "org.apache.commons.lang.math.NumberRange",
       "org.apache.commons.lang.time.FastDateFormat$TwoDigitNumberField",
       "org.apache.commons.lang.exception.NestableError",
       "org.apache.commons.lang.builder.HashCodeBuilder",
       "org.apache.commons.lang.IntHashMap$Entry",
       "org.apache.commons.lang.text.StrLookup",
       "org.apache.commons.lang.UnhandledException",
       "org.apache.commons.lang.builder.ToStringStyle",
       "org.apache.commons.lang.IntHashMap",
       "org.apache.commons.lang.Entities$ArrayEntityMap",
       "org.apache.commons.lang.Entities",
       "org.apache.commons.lang.Entities$EntityMap",
       "org.apache.commons.lang.Entities$TreeEntityMap",
       "org.apache.commons.lang.LocaleUtils",
       "org.apache.commons.lang.CharRange",
       "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer",
       "org.apache.commons.lang.math.DoubleRange",
       "org.apache.commons.lang.time.FastDateFormat$TimeZoneDisplayKey",
       "org.apache.commons.lang.math.Fraction",
       "org.apache.commons.lang.CharSetUtils",
       "org.apache.commons.lang.builder.ToStringStyle$ShortPrefixToStringStyle",
       "org.apache.commons.lang.text.StrMatcher$TrimMatcher",
       "org.apache.commons.lang.exception.Nestable",
       "org.apache.commons.lang.time.DurationFormatUtils$Token",
       "org.apache.commons.lang.mutable.MutableDouble",
       "org.apache.commons.lang.math.IntRange",
       "org.apache.commons.lang.StringEscapeUtils",
       "org.apache.commons.lang.ArrayUtils",
       "org.apache.commons.lang.CharEncoding",
       "org.apache.commons.lang.CharRange$CharacterIterator"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "io.netty:netty:jar:3.9.2.Final:test",
    "coordinates": "io.netty:netty:3.9.2.Final",
    "groupId": "io.netty",
    "artifactId": "netty",
    "version": "3.9.2.Final",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 1303237,
    "type": "direct",
    "status": "bloated",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "org.jboss.netty.channel.AdaptiveReceiveBufferSizePredictorFactory",
     "org.jboss.netty.channel.DefaultChildChannelStateEvent",
     "org.jboss.netty.util.internal.CaseIgnoringComparator",
     "org.jboss.netty.logging.JdkLoggerFactory",
     "org.jboss.netty.handler.codec.http.HttpMethod",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketPipelineSink$1",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$EntryIterator",
     "org.jboss.netty.handler.codec.rtsp.RtspVersions",
     "org.jboss.netty.channel.socket.oio.OioDatagramPipelineSink",
     "org.jboss.netty.handler.codec.spdy.SpdyHttpDecoder",
     "org.jboss.netty.channel.socket.Worker",
     "org.jboss.netty.handler.timeout.IdleStateHandler",
     "org.jboss.netty.channel.socket.nio.Boss",
     "org.jboss.netty.handler.codec.socks.SocksInitRequestDecoder$State",
     "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$SendBuffer",
     "org.jboss.netty.handler.codec.socks.SocksResponse$SocksResponseType",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaderBlockJZlibEncoder",
     "org.jboss.netty.util.internal.jzlib.StaticTree",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketHandshakeException",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler",
     "org.jboss.netty.util.internal.jzlib.JZlib$WrapperType",
     "org.jboss.netty.handler.codec.socks.SocksInitResponse",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07$1",
     "org.jboss.netty.handler.codec.serialization.CompactObjectOutputStream",
     "org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor$Settings",
     "org.jboss.netty.handler.ipfilter.IpV4Subnet",
     "org.jboss.netty.handler.timeout.IdleStateEvent",
     "org.jboss.netty.channel.socket.oio.AbstractOioWorker",
     "org.jboss.netty.handler.codec.spdy.SpdyFrameDecoderDelegate",
     "org.jboss.netty.handler.execution.ChainedExecutor",
     "org.jboss.netty.handler.codec.spdy.SpdyCodecUtil",
     "org.jboss.netty.util.VirtualExecutorService$ChildExecutorRunnable",
     "org.jboss.netty.channel.socket.nio.AbstractNioWorkerPool",
     "org.jboss.netty.handler.ipfilter.PatternRule",
     "org.jboss.netty.channel.socket.oio.OioDatagramWorker",
     "org.jboss.netty.logging.OsgiLoggerFactory$1",
     "org.jboss.netty.handler.codec.marshalling.ChannelBufferByteInput",
     "org.jboss.netty.util.Timeout",
     "org.jboss.netty.channel.StaticChannelPipeline",
     "org.jboss.netty.channel.socket.nio.NioServerBoss$RegisterTask",
     "org.jboss.netty.handler.codec.marshalling.MarshallerProvider",
     "org.jboss.netty.logging.Log4JLoggerFactory",
     "org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$1",
     "org.jboss.netty.handler.codec.serialization.WeakReferenceMap",
     "org.jboss.netty.handler.codec.serialization.CompatibleObjectDecoder",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize",
     "org.jboss.netty.util.internal.jzlib.Deflate$1",
     "org.jboss.netty.util.HashedWheelTimer$HashedWheelBucket",
     "org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$2",
     "org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink",
     "org.jboss.netty.handler.codec.socks.SocksAuthRequestDecoder$1",
     "org.jboss.netty.util.VirtualExecutorService",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdySettingsFrame",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$HashEntry",
     "org.jboss.netty.handler.codec.spdy.SpdySessionStatus",
     "org.jboss.netty.logging.CommonsLogger",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostBodyUtil",
     "org.jboss.netty.handler.ipfilter.IpFilterRuleList",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyGoAwayFrame",
     "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$PreallocationRef",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1",
     "org.jboss.netty.handler.ipfilter.IpFilteringHandlerImpl",
     "org.jboss.netty.handler.codec.embedder.EmbeddedChannel",
     "org.jboss.netty.channel.SimpleChannelDownstreamHandler$1",
     "org.jboss.netty.handler.codec.http.CookieDecoder",
     "org.jboss.netty.handler.codec.spdy.SpdyFrameEncoder",
     "org.jboss.netty.channel.ChannelFutureListener$2",
     "org.jboss.netty.handler.traffic.ChannelTrafficShapingHandler",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$HashEntry",
     "org.jboss.netty.handler.codec.http.HttpConstants",
     "org.jboss.netty.channel.socket.nio.NioDatagramWorkerPool",
     "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext",
     "org.jboss.netty.channel.ChannelFutureListener$1",
     "org.jboss.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketFrameAggregator",
     "org.jboss.netty.channel.socket.nio.NioDatagramChannel$1",
     "org.jboss.netty.handler.codec.http.CookieDateFormat",
     "org.jboss.netty.handler.execution.ExecutionHandler",
     "org.jboss.netty.channel.ChannelHandlerContext",
     "org.jboss.netty.handler.timeout.ReadTimeoutHandler$ReadTimeoutTask$1",
     "org.jboss.netty.handler.codec.http.multipart.HttpData",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap",
     "org.jboss.netty.handler.codec.http.HttpContentEncoder",
     "org.jboss.netty.handler.codec.string.StringEncoder",
     "org.jboss.netty.handler.codec.http.websocket.DefaultWebSocketFrame",
     "org.jboss.netty.handler.codec.spdy.SpdyHttpHeaders",
     "org.jboss.netty.handler.codec.compression.CompressionException",
     "org.jboss.netty.channel.MessageEvent",
     "org.jboss.netty.handler.codec.http.multipart.InternalAttribute",
     "org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder",
     "org.jboss.netty.channel.ChildChannelStateEvent",
     "org.jboss.netty.channel.socket.nio.AbstractNioSelector",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$ValueIterator",
     "org.jboss.netty.channel.ChannelPipeline",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder",
     "org.jboss.netty.handler.codec.http.HttpMessageDecoder$State",
     "org.jboss.netty.channel.ChannelHandlerLifeCycleException",
     "org.jboss.netty.channel.group.DefaultChannelGroup$1",
     "org.jboss.netty.handler.codec.http.multipart.FileUpload",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$WriteThroughEntry",
     "org.jboss.netty.handler.codec.frame.DelimiterBasedFrameDecoder",
     "org.jboss.netty.channel.socket.nio.NioClientBoss",
     "org.jboss.netty.util.internal.ConversionUtil",
     "org.jboss.netty.handler.codec.spdy.SpdySessionHandler$ClosingChannelFutureListener",
     "org.jboss.netty.util.internal.StringUtil",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$KeyIterator",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder",
     "org.jboss.netty.channel.ChannelEvent",
     "org.jboss.netty.handler.codec.socks.SocksInitResponseDecoder$1",
     "org.jboss.netty.handler.codec.spdy.SpdyHttpEncoder$SpdyFrameWriter",
     "org.jboss.netty.handler.ssl.JdkSslServerContext",
     "org.jboss.netty.bootstrap.ServerBootstrap",
     "org.jboss.netty.channel.socket.nio.SocketReceiveBufferAllocator",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder",
     "org.jboss.netty.handler.codec.compression.JdkZlibEncoder$2",
     "org.jboss.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask",
     "org.jboss.netty.handler.codec.compression.JdkZlibEncoder$1",
     "org.jboss.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask",
     "org.jboss.netty.channel.socket.oio.AbstractOioChannel",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13",
     "org.jboss.netty.buffer.ChannelBufferInputStream",
     "org.jboss.netty.handler.codec.marshalling.UnmarshallerProvider",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyHeaders$1",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State",
     "org.jboss.netty.handler.codec.compression.ZlibEncoder",
     "org.jboss.netty.handler.codec.http.multipart.AbstractDiskHttpData",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07",
     "org.jboss.netty.util.HashedWheelTimer",
     "org.jboss.netty.handler.timeout.WriteTimeoutHandler$TimeoutCanceller",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00",
     "org.jboss.netty.channel.socket.nio.NioClientSocketChannel",
     "org.jboss.netty.handler.codec.replay.VoidEnum",
     "org.jboss.netty.handler.codec.http.multipart.AbstractMemoryHttpData",
     "org.jboss.netty.buffer.TruncatedChannelBuffer",
     "org.jboss.netty.handler.codec.base64.Base64",
     "org.jboss.netty.handler.codec.http.multipart.DiskFileUpload",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$WeakKeyReference",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaderBlockDecoder",
     "org.jboss.netty.util.ThreadNameDeterminer$2",
     "org.jboss.netty.util.ThreadNameDeterminer$1",
     "org.jboss.netty.channel.group.ChannelGroupFuture",
     "org.jboss.netty.util.internal.jzlib.Tree",
     "org.jboss.netty.handler.codec.http.HttpRequest",
     "org.jboss.netty.handler.ssl.util.SelfSignedCertificate",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$Segment",
     "org.jboss.netty.handler.codec.marshalling.CompatibleMarshallingEncoder",
     "org.jboss.netty.channel.local.LocalAddress",
     "org.jboss.netty.logging.InternalLoggerFactory",
     "org.jboss.netty.channel.ExceptionEvent",
     "org.jboss.netty.handler.codec.socks.UnknownSocksResponse",
     "org.jboss.netty.handler.ipfilter.IpFilterRule",
     "org.jboss.netty.util.HashedWheelTimer$HashedWheelTimeout",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannelFactory",
     "org.jboss.netty.handler.codec.http.HttpContentDecompressor",
     "org.jboss.netty.handler.codec.socks.UnknownSocksMessage",
     "org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory",
     "org.jboss.netty.handler.codec.http.websocket.WebSocketFrameDecoder",
     "org.jboss.netty.handler.codec.http.DefaultCookie",
     "org.jboss.netty.channel.local.DefaultLocalChannel$1",
     "org.jboss.netty.util.internal.jzlib.JZlib",
     "org.jboss.netty.handler.ssl.JettyNpnSslSession",
     "org.jboss.netty.handler.codec.base64.Base64Dialect",
     "org.jboss.netty.util.internal.jzlib.CRC32",
     "org.jboss.netty.handler.codec.socks.SocksCmdRequestDecoder",
     "org.jboss.netty.handler.codec.spdy.SpdyFrameDecoder$1",
     "org.jboss.netty.handler.codec.spdy.SpdyStreamFrame",
     "org.jboss.netty.handler.codec.spdy.SpdyHttpResponseStreamIdHandler",
     "org.jboss.netty.handler.codec.socks.SocksInitResponseDecoder",
     "org.jboss.netty.handler.codec.http.HttpClientCodec",
     "org.jboss.netty.logging.InternalLogger",
     "org.jboss.netty.channel.local.DefaultLocalClientChannelFactory",
     "org.jboss.netty.handler.codec.marshalling.DefaultUnmarshallerProvider",
     "org.jboss.netty.util.internal.jzlib.Adler32",
     "org.jboss.netty.handler.ssl.util.InsecureTrustManagerFactory$1",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder",
     "org.jboss.netty.channel.DefaultChannelPipeline$DiscardingChannelSink",
     "org.jboss.netty.channel.ReceiveBufferSizePredictorFactory",
     "org.jboss.netty.channel.socket.oio.OioClientSocketPipelineSink$1",
     "org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor$1",
     "org.jboss.netty.handler.traffic.AbstractTrafficShapingHandler",
     "org.jboss.netty.channel.socket.oio.OioServerSocketChannel",
     "org.jboss.netty.channel.FileRegion",
     "org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer$TrailingHeaders",
     "org.jboss.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder",
     "org.jboss.netty.handler.stream.ChunkedInput",
     "org.jboss.netty.channel.socket.nio.DefaultNioDatagramChannelConfig",
     "org.jboss.netty.handler.codec.socks.SocksAuthResponse",
     "org.jboss.netty.handler.codec.http.websocket.WebSocketFrame",
     "org.jboss.netty.channel.DefaultChannelConfig",
     "org.jboss.netty.handler.codec.socks.SocksMessage$CmdType",
     "org.jboss.netty.channel.ChannelStateEvent",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$6$1",
     "org.jboss.netty.channel.socket.nio.SelectorUtil",
     "org.jboss.netty.handler.ssl.OpenSsl",
     "org.jboss.netty.handler.codec.marshalling.ChannelBufferByteOutput",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderEntry",
     "org.jboss.netty.channel.local.LocalChannel",
     "org.jboss.netty.handler.codec.replay.ReplayingDecoderBuffer",
     "org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor",
     "org.jboss.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi",
     "org.jboss.netty.handler.codec.http.multipart.InterfaceHttpData",
     "org.jboss.netty.util.internal.jzlib.ZStream",
     "org.jboss.netty.handler.ssl.NotSslRecordException",
     "org.jboss.netty.channel.SimpleChannelUpstreamHandler$1",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$10",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerHandshaker",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00$1",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$WriteThroughEntry",
     "org.jboss.netty.util.ThreadRenamingRunnable",
     "org.jboss.netty.handler.queue.BlockingReadTimeoutException",
     "org.jboss.netty.util.internal.jzlib.ZStream$1",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$5$1",
     "org.jboss.netty.handler.codec.http.HttpVersion",
     "org.jboss.netty.handler.ssl.PemReader",
     "org.jboss.netty.channel.group.DefaultChannelGroup",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderIterator",
     "org.jboss.netty.handler.ssl.JdkSslContext",
     "org.jboss.netty.channel.ChannelLocal",
     "org.jboss.netty.handler.timeout.DefaultIdleStateEvent",
     "org.jboss.netty.channel.DefaultWriteCompletionEvent",
     "org.jboss.netty.util.internal.ExecutorUtil",
     "org.jboss.netty.handler.codec.socks.SocksMessage$AuthScheme",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$ValueIterator",
     "org.jboss.netty.util.ObjectSizeEstimator",
     "org.jboss.netty.logging.JBossLoggerFactory",
     "org.jboss.netty.channel.ChannelUpstreamHandler",
     "org.jboss.netty.util.internal.ConcurrentHashMap$HashEntry",
     "org.jboss.netty.channel.ChannelHandler",
     "org.jboss.netty.util.internal.ConcurrentHashMap",
     "org.jboss.netty.handler.codec.spdy.SpdySessionHandler",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory",
     "org.jboss.netty.channel.socket.nio.AbstractNioChannelSink",
     "org.jboss.netty.channel.socket.nio.NioWorker",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$KeyIterator",
     "org.jboss.netty.handler.queue.BufferedWriteHandler$1",
     "org.jboss.netty.handler.codec.frame.TooLongFrameException",
     "org.jboss.netty.handler.codec.serialization.CompatibleObjectDecoderState",
     "org.jboss.netty.channel.WriteCompletionEvent",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$1",
     "org.jboss.netty.handler.execution.ChannelEventRunnable",
     "org.jboss.netty.buffer.HeapChannelBuffer",
     "org.jboss.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider",
     "org.jboss.netty.handler.codec.serialization.ReferenceMap",
     "org.jboss.netty.channel.local.LocalServerChannelFactory",
     "org.jboss.netty.handler.codec.socks.SocksRequest",
     "org.jboss.netty.logging.Slf4JLoggerFactory",
     "org.jboss.netty.handler.ssl.util.SimpleTrustManagerFactory$2",
     "org.jboss.netty.handler.codec.embedder.DecoderEmbedder",
     "org.jboss.netty.handler.codec.http.HttpHeaders$1",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13$1",
     "org.jboss.netty.handler.codec.marshalling.ThreadLocalMarshallerProvider",
     "org.jboss.netty.handler.codec.http.HttpResponseDecoder",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$Segment",
     "org.jboss.netty.channel.Channels",
     "org.jboss.netty.handler.ipfilter.CIDR",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$Segment",
     "org.jboss.netty.handler.execution.ChannelUpstreamEventRunnable",
     "org.jboss.netty.util.internal.jzlib.InfTree",
     "org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer",
     "org.jboss.netty.handler.ssl.util.SimpleTrustManagerFactory$1",
     "org.jboss.netty.handler.ssl.util.FingerprintTrustManagerFactory",
     "org.jboss.netty.channel.socket.oio.AbstractOioChannelSink",
     "org.jboss.netty.util.internal.DetectionUtil$1",
     "org.jboss.netty.channel.socket.nio.AbstractNioWorker$1",
     "org.jboss.netty.channel.StaticChannelPipeline$StaticChannelHandlerContext",
     "org.jboss.netty.handler.codec.spdy.SpdyFrameCodec",
     "org.jboss.netty.handler.codec.socks.SocksCmdResponseDecoder$State",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$HashIterator",
     "org.jboss.netty.handler.codec.spdy.SpdyFrameCodec$1",
     "org.jboss.netty.handler.codec.http.HttpCodecUtil",
     "org.jboss.netty.handler.codec.spdy.SpdyStreamStatus",
     "org.jboss.netty.channel.socket.nio.AbstractNioChannel",
     "org.jboss.netty.channel.socket.SocketChannel",
     "org.jboss.netty.handler.codec.http.websocket.WebSocketFrameEncoder",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaders",
     "org.jboss.netty.buffer.HeapChannelBufferFactory",
     "org.jboss.netty.channel.socket.oio.OioServerSocketPipelineSink",
     "org.jboss.netty.buffer.WrappedChannelBuffer",
     "org.jboss.netty.channel.ChannelFuture",
     "org.jboss.netty.channel.socket.nio.NioDatagramChannel",
     "org.jboss.netty.handler.execution.ChannelDownstreamEventRunnableFilter",
     "org.jboss.netty.logging.Log4JLogger",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$Values",
     "org.jboss.netty.handler.codec.replay.UnreplayableOperationException",
     "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$PooledSendBuffer",
     "org.jboss.netty.handler.codec.oneone.OneToOneEncoder",
     "org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor$Limiter",
     "org.jboss.netty.handler.codec.rtsp.RtspRequestDecoder",
     "org.jboss.netty.util.MapBackedSet",
     "org.jboss.netty.handler.codec.frame.FrameDecoder",
     "org.jboss.netty.logging.Slf4JLogger",
     "org.jboss.netty.channel.local.LocalClientChannelFactory",
     "org.jboss.netty.handler.codec.http.HttpHeaders$Values",
     "org.jboss.netty.handler.codec.http.HttpChunkAggregator",
     "org.jboss.netty.handler.codec.frame.FixedLengthFrameDecoder",
     "org.jboss.netty.channel.ChannelFactory",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$9",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$8",
     "org.jboss.netty.handler.codec.frame.Delimiters",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$7",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$6",
     "org.jboss.netty.channel.socket.nio.NioClientBoss$RegisterTask",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostRequestDecoder$IncompatibleDataDecoderException",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$KeySet",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$1",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory",
     "org.jboss.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder",
     "org.jboss.netty.channel.ChannelHandler$Sharable",
     "org.jboss.netty.channel.socket.nio.NioServerBossPool",
     "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$UnpooledSendBuffer",
     "org.jboss.netty.handler.queue.BufferedWriteHandler",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$5",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$4",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$3",
     "org.jboss.netty.buffer.ChannelBufferIndexFinder$2",
     "org.jboss.netty.handler.codec.rtsp.RtspHeaders$Names",
     "org.jboss.netty.handler.codec.spdy.SpdyOrHttpChooser$1",
     "org.jboss.netty.channel.socket.oio.OioDatagramPipelineSink$1",
     "org.jboss.netty.handler.traffic.GlobalTrafficShapingHandler",
     "org.jboss.netty.channel.LifeCycleAwareChannelHandler",
     "org.jboss.netty.channel.UpstreamMessageEvent",
     "org.jboss.netty.util.internal.DeadLockProofWorker",
     "org.jboss.netty.handler.timeout.IdleState",
     "org.jboss.netty.handler.codec.http.Cookie",
     "org.jboss.netty.handler.codec.socks.SocksResponse",
     "org.jboss.netty.channel.socket.nio.NioSocketChannelConfig",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$SimpleEntry",
     "org.jboss.netty.buffer.ReadOnlyChannelBuffer",
     "org.jboss.netty.handler.codec.socks.SocksAuthResponseDecoder$1",
     "org.jboss.netty.handler.codec.compression.ZlibWrapper",
     "org.jboss.netty.handler.codec.socks.SocksAuthRequestDecoder",
     "org.jboss.netty.util.DebugUtil",
     "org.jboss.netty.buffer.LittleEndianHeapChannelBuffer",
     "org.jboss.netty.channel.socket.nio.NioSelector",
     "org.jboss.netty.util.internal.SharedResourceMisuseDetector",
     "org.jboss.netty.channel.DownstreamMessageEvent",
     "org.jboss.netty.channel.socket.nio.ProtocolFamilyConverter",
     "org.jboss.netty.channel.local.LocalServerChannel",
     "org.jboss.netty.util.internal.ConcurrentHashMap$HashIterator",
     "org.jboss.netty.handler.codec.socks.SocksAuthRequest",
     "org.jboss.netty.handler.codec.spdy.SpdySynStreamFrame",
     "org.jboss.netty.handler.codec.spdy.SpdySessionHandler$5",
     "org.jboss.netty.handler.codec.serialization.ObjectEncoderOutputStream",
     "org.jboss.netty.handler.codec.spdy.SpdySessionHandler$3",
     "org.jboss.netty.handler.codec.spdy.SpdySessionHandler$4",
     "org.jboss.netty.channel.DownstreamChannelStateEvent$1",
     "org.jboss.netty.handler.codec.spdy.SpdySessionHandler$1",
     "org.jboss.netty.handler.codec.spdy.SpdySessionHandler$2",
     "org.jboss.netty.handler.codec.spdy.SpdyHttpEncoder",
     "org.jboss.netty.handler.timeout.ReadTimeoutHandler",
     "org.jboss.netty.handler.codec.http.HttpMessage",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$EntryIterator",
     "org.jboss.netty.channel.socket.oio.OioServerSocketChannelFactory",
     "org.jboss.netty.handler.codec.http.multipart.Attribute",
     "org.jboss.netty.channel.ChannelLocal$1",
     "org.jboss.netty.handler.codec.http.HttpMessageDecoder",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyStreamFrame",
     "org.jboss.netty.handler.ipfilter.IpFilteringHandlerImpl$1",
     "org.jboss.netty.handler.codec.socks.SocksCmdRequestDecoder$State",
     "org.jboss.netty.logging.JBossLogger",
     "org.jboss.netty.buffer.ChannelBufferFactory",
     "org.jboss.netty.handler.timeout.ReadTimeoutHandler$ReadTimeoutTask",
     "org.jboss.netty.channel.socket.ClientSocketChannelFactory",
     "org.jboss.netty.util.internal.ConcurrentHashMap$Segment",
     "org.jboss.netty.util.internal.DetectionUtil",
     "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet",
     "org.jboss.netty.handler.codec.socks.SocksCmdRequest",
     "org.jboss.netty.handler.codec.http.HttpRequestEncoder",
     "org.jboss.netty.channel.socket.nio.AbstractNioSelector$1",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder$1",
     "org.jboss.netty.handler.codec.socks.SocksCommonUtils",
     "org.jboss.netty.channel.local.LocalServerChannelSink$1",
     "org.jboss.netty.handler.codec.oneone.OneToOneStrictEncoder",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyWindowUpdateFrame",
     "org.jboss.netty.util.EstimatableObjectWrapper",
     "org.jboss.netty.handler.codec.http.multipart.MixedFileUpload",
     "org.jboss.netty.buffer.AbstractChannelBufferFactory",
     "org.jboss.netty.handler.ssl.SslHandler$2",
     "org.jboss.netty.handler.ssl.SslHandler$1",
     "org.jboss.netty.handler.codec.spdy.SpdySession$StreamState",
     "org.jboss.netty.handler.ssl.SslContext",
     "org.jboss.netty.channel.UpstreamChannelStateEvent$1",
     "org.jboss.netty.channel.socket.InternetProtocolFamily",
     "org.jboss.netty.handler.execution.ChannelEventRunnableFilter",
     "org.jboss.netty.bootstrap.Bootstrap",
     "org.jboss.netty.handler.codec.http.DefaultHttpRequest",
     "org.jboss.netty.channel.SimpleChannelHandler$1",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame",
     "org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory",
     "org.jboss.netty.handler.codec.embedder.EmbeddedSocketAddress",
     "org.jboss.netty.handler.timeout.ReadTimeoutException",
     "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$GatheringSendBuffer",
     "org.jboss.netty.handler.ssl.SslHandler$8",
     "org.jboss.netty.handler.ssl.SslHandler$7",
     "org.jboss.netty.handler.codec.http.HttpResponse",
     "org.jboss.netty.handler.ssl.SslHandler$4",
     "org.jboss.netty.handler.ssl.SslHandler$3",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$ServletChannelHandler",
     "org.jboss.netty.handler.ssl.SslHandler$6",
     "org.jboss.netty.handler.ssl.SslHandler$5",
     "org.jboss.netty.handler.ipfilter.IpV4SubnetFilterRule",
     "org.jboss.netty.util.internal.ThreadLocalRandom$1",
     "org.jboss.netty.handler.codec.http.websocketx.BinaryWebSocketFrame",
     "org.jboss.netty.channel.CompleteChannelFuture",
     "org.jboss.netty.channel.local.LocalClientChannelSink$1",
     "org.jboss.netty.handler.codec.frame.CorruptedFrameException",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08$1",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$1",
     "org.jboss.netty.handler.codec.http.DefaultHttpHeaders",
     "org.jboss.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException",
     "org.jboss.netty.handler.ipfilter.IpFilteringHandler",
     "org.jboss.netty.handler.codec.rtsp.RtspMessageEncoder",
     "org.jboss.netty.handler.codec.spdy.SpdyFrameDecoder",
     "org.jboss.netty.util.Version",
     "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet",
     "org.jboss.netty.handler.ssl.JettyNpnSslEngine",
     "org.jboss.netty.logging.InternalLoggerFactory$1",
     "org.jboss.netty.channel.FixedReceiveBufferSizePredictorFactory",
     "org.jboss.netty.logging.OsgiLogger",
     "org.jboss.netty.handler.codec.rtsp.RtspMethods",
     "org.jboss.netty.channel.socket.ChannelRunnableWrapper",
     "org.jboss.netty.channel.ChannelException",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$HashEntry",
     "org.jboss.netty.channel.SucceededChannelFuture",
     "org.jboss.netty.handler.codec.http.HttpServerCodec",
     "org.jboss.netty.handler.ssl.OpenSslSessionStats",
     "org.jboss.netty.handler.codec.compression.ZlibDecoder",
     "org.jboss.netty.handler.codec.http.websocketx.Utf8Validator",
     "org.jboss.netty.handler.codec.http.QueryStringEncoder",
     "org.jboss.netty.util.internal.jzlib.InfCodes",
     "org.jboss.netty.channel.SimpleChannelHandler",
     "org.jboss.netty.channel.group.CombinedIterator",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$WriteThroughEntry",
     "org.jboss.netty.channel.socket.DatagramChannel",
     "org.jboss.netty.handler.codec.http.websocketx.PingWebSocketFrame",
     "org.jboss.netty.channel.socket.nio.NioDatagramWorker$ChannelRegistionTask",
     "org.jboss.netty.handler.codec.http.websocketx.PongWebSocketFrame",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00",
     "org.jboss.netty.handler.stream.ChunkedNioStream",
     "org.jboss.netty.handler.codec.http.HttpChunk",
     "org.jboss.netty.handler.codec.spdy.SpdyProtocolException",
     "org.jboss.netty.handler.execution.ChannelUpstreamEventRunnableFilter",
     "org.jboss.netty.handler.codec.http.CookieHeaderNames",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07",
     "org.jboss.netty.handler.codec.serialization.CompatibleObjectEncoder",
     "org.jboss.netty.channel.socket.DatagramChannelFactory",
     "org.jboss.netty.channel.socket.nio.ShareableWorkerPool",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaderBlockZlibEncoder",
     "org.jboss.netty.handler.execution.OrderedMemoryAwareThreadPoolExecutor$ChildExecutor",
     "org.jboss.netty.handler.codec.embedder.AbstractCodecEmbedder$EmbeddedChannelSink",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$ValueIterator",
     "org.jboss.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask$1",
     "org.jboss.netty.handler.ssl.SslBufferPool",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13",
     "org.jboss.netty.logging.JdkLogger",
     "org.jboss.netty.handler.codec.protobuf.ProtobufDecoder",
     "org.jboss.netty.handler.codec.http.HttpHeaderDateFormat",
     "org.jboss.netty.handler.ssl.OpenSslServerContext",
     "org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor$MemoryAwareRunnable",
     "org.jboss.netty.util.CharsetUtil",
     "org.jboss.netty.util.ThreadNameDeterminer",
     "org.jboss.netty.handler.codec.embedder.AbstractCodecEmbedder",
     "org.jboss.netty.handler.queue.BlockingReadHandler",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdySynStreamFrame",
     "org.jboss.netty.buffer.AbstractChannelBuffer",
     "org.jboss.netty.handler.codec.socks.SocksRequest$SocksRequestType",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder",
     "org.jboss.netty.handler.ssl.OpenSslEngine",
     "org.jboss.netty.handler.codec.http.HttpContentCompressor$1",
     "org.jboss.netty.handler.ipfilter.IpFilterRuleHandler",
     "org.jboss.netty.channel.AbstractChannel$ChannelCloseFuture",
     "org.jboss.netty.handler.codec.spdy.SpdySynReplyFrame",
     "org.jboss.netty.handler.codec.serialization.ObjectDecoderInputStream",
     "org.jboss.netty.handler.codec.embedder.CodecEmbedderException",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostRequestDecoder$NotEnoughDataDecoderException",
     "org.jboss.netty.channel.socket.oio.OioDatagramChannel",
     "org.jboss.netty.handler.ipfilter.IpFilterListener",
     "org.jboss.netty.handler.codec.serialization.ClassResolver",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$KeySet",
     "org.jboss.netty.handler.codec.http.HttpRequestDecoder",
     "org.jboss.netty.handler.codec.socks.SocksCmdResponse",
     "org.jboss.netty.handler.execution.OrderedMemoryAwareThreadPoolExecutor",
     "org.jboss.netty.handler.ipfilter.IpSet",
     "org.jboss.netty.handler.ssl.util.FingerprintTrustManagerFactory$1",
     "org.jboss.netty.util.internal.ConcurrentHashMap$WriteThroughEntry",
     "org.jboss.netty.handler.stream.ChunkedFile",
     "org.jboss.netty.handler.ssl.util.FingerprintTrustManagerFactory$2",
     "org.jboss.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask",
     "org.jboss.netty.handler.codec.frame.LengthFieldPrepender",
     "org.jboss.netty.bootstrap.ConnectionlessBootstrap",
     "org.jboss.netty.handler.codec.marshalling.DefaultMarshallerProvider",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$EntrySet",
     "org.jboss.netty.channel.ChannelSink",
     "org.jboss.netty.channel.socket.nio.AbstractNioWorker",
     "org.jboss.netty.util.internal.ConcurrentHashMap$ValueIterator",
     "org.jboss.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol",
     "org.jboss.netty.handler.codec.spdy.SpdyHttpHeaders$Names",
     "org.jboss.netty.buffer.EmptyChannelBuffer",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$EntrySet",
     "org.jboss.netty.channel.socket.oio.OioAcceptedSocketChannel",
     "org.jboss.netty.util.internal.NativeLibraryLoader",
     "org.jboss.netty.channel.socket.nio.NioAcceptedSocketChannel",
     "org.jboss.netty.handler.ssl.SslContext$1",
     "org.jboss.netty.bootstrap.ServerBootstrap$Binder",
     "org.jboss.netty.channel.socket.nio.NioDatagramPipelineSink$1",
     "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$FileSendBuffer",
     "org.jboss.netty.handler.codec.serialization.ObjectEncoder",
     "org.jboss.netty.buffer.DynamicChannelBuffer",
     "org.jboss.netty.buffer.ChannelBufferOutputStream",
     "org.jboss.netty.channel.socket.DefaultSocketChannelConfig",
     "org.jboss.netty.util.internal.jzlib.Inflate$1",
     "org.jboss.netty.handler.logging.LoggingHandler",
     "org.jboss.netty.util.DefaultObjectSizeEstimator",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$1",
     "org.jboss.netty.channel.socket.oio.OioClientSocketChannelFactory",
     "org.jboss.netty.handler.codec.socks.SocksInitResponseDecoder$State",
     "org.jboss.netty.channel.socket.oio.OioWorker",
     "org.jboss.netty.util.internal.jzlib.Deflate$Config",
     "org.jboss.netty.channel.ChannelConfig",
     "org.jboss.netty.channel.local.LocalChannelRegistry",
     "org.jboss.netty.channel.ChannelPipelineCoverage",
     "org.jboss.netty.handler.codec.socks.UnknownSocksRequest",
     "org.jboss.netty.handler.codec.http.CookieEncoder",
     "org.jboss.netty.handler.ssl.util.SimpleTrustManagerFactory",
     "org.jboss.netty.handler.execution.ChannelDownstreamEventRunnable",
     "org.jboss.netty.logging.AbstractInternalLogger",
     "org.jboss.netty.channel.group.DefaultChannelGroupFuture",
     "org.jboss.netty.handler.ssl.SslHandler",
     "org.jboss.netty.handler.codec.http.DefaultHttpHeaders$HeaderIterator",
     "org.jboss.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask",
     "org.jboss.netty.buffer.ChannelBuffers",
     "org.jboss.netty.handler.codec.serialization.SwitchableInputStream",
     "org.jboss.netty.channel.socket.ServerSocketChannelFactory",
     "org.jboss.netty.handler.codec.marshalling.MarshallingEncoder",
     "org.jboss.netty.handler.codec.socks.SocksInitRequestDecoder$1",
     "org.jboss.netty.handler.ssl.SslHandler$ClosingChannelFutureListener",
     "org.jboss.netty.handler.codec.embedder.AbstractCodecEmbedder$EmbeddedChannelPipeline",
     "org.jboss.netty.handler.codec.http.websocketx.TextWebSocketFrame",
     "org.jboss.netty.handler.ssl.JettyNpnSslEngine$2",
     "org.jboss.netty.handler.ssl.JettyNpnSslEngine$1",
     "org.jboss.netty.handler.codec.base64.Base64Decoder",
     "org.jboss.netty.handler.ipfilter.CIDR6",
     "org.jboss.netty.handler.ipfilter.CIDR4",
     "org.jboss.netty.util.internal.ByteBufferUtil",
     "org.jboss.netty.handler.codec.http.HttpMessageEncoder",
     "org.jboss.netty.handler.codec.socks.SocksMessage$AuthStatus",
     "org.jboss.netty.handler.codec.compression.ZlibEncoder$2",
     "org.jboss.netty.channel.Channel",
     "org.jboss.netty.handler.codec.compression.ZlibEncoder$1",
     "org.jboss.netty.handler.execution.OrderedDownstreamThreadPoolExecutor$1",
     "org.jboss.netty.channel.socket.nio.AbstractNioChannel$WriteRequestQueue",
     "org.jboss.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender",
     "org.jboss.netty.handler.codec.socks.SocksMessage$SubnegotiationVersion",
     "org.jboss.netty.channel.UpstreamChannelStateEvent",
     "org.jboss.netty.logging.OsgiLoggerFactory",
     "org.jboss.netty.handler.codec.http.websocketx.CloseWebSocketFrame",
     "org.jboss.netty.handler.codec.http.HttpContentCompressor",
     "org.jboss.netty.buffer.SlicedChannelBuffer",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism",
     "org.jboss.netty.handler.codec.replay.UnsafeDynamicChannelBuffer",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaders$HttpNames",
     "org.jboss.netty.channel.socket.ServerSocketChannel",
     "org.jboss.netty.handler.codec.PrematureChannelClosureException",
     "org.jboss.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask",
     "org.jboss.netty.util.internal.ConcurrentHashMap$Values",
     "org.jboss.netty.buffer.BigEndianHeapChannelBuffer",
     "org.jboss.netty.handler.codec.marshalling.LimitingByteInput",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$KeySet",
     "org.jboss.netty.logging.AbstractInternalLogger$1",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$SimpleEntry",
     "org.jboss.netty.util.HashedWheelTimer$1",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyDataFrame",
     "org.jboss.netty.handler.codec.spdy.SpdyHeadersFrame",
     "org.jboss.netty.util.internal.jzlib.Deflate",
     "org.jboss.netty.channel.socket.SocketChannelConfig",
     "org.jboss.netty.handler.codec.socks.SocksAuthResponseDecoder",
     "org.jboss.netty.util.internal.EmptyArrays",
     "org.jboss.netty.handler.codec.socks.SocksMessage",
     "org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink",
     "org.jboss.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame",
     "org.jboss.netty.handler.traffic.TrafficCounter",
     "org.jboss.netty.handler.ssl.ImmediateExecutor",
     "org.jboss.netty.handler.codec.http.multipart.MemoryAttribute",
     "org.jboss.netty.handler.codec.replay.ReplayingDecoder",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder",
     "org.jboss.netty.channel.ChannelFutureNotifier",
     "org.jboss.netty.handler.codec.spdy.SpdyPingFrame",
     "org.jboss.netty.handler.codec.rtsp.RtspResponseDecoder",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder",
     "org.jboss.netty.util.internal.ThreadLocalBoolean",
     "org.jboss.netty.channel.socket.nio.NioWorker$RegisterTask",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$7$1",
     "org.jboss.netty.handler.codec.oneone.OneToOneDecoder",
     "org.jboss.netty.container.spring.NettyLoggerConfigurator",
     "org.jboss.netty.buffer.CompositeChannelBuffer",
     "org.jboss.netty.channel.socket.oio.OioClientSocketPipelineSink",
     "org.jboss.netty.handler.codec.socks.SocksMessageEncoder",
     "org.jboss.netty.util.internal.DeadLockProofWorker$1",
     "org.jboss.netty.handler.codec.http.HttpContentDecoder",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$HashIterator",
     "org.jboss.netty.channel.AbstractServerChannel",
     "org.jboss.netty.handler.codec.replay.ReplayError",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap",
     "org.jboss.netty.util.internal.ConcurrentHashMap$EntryIterator",
     "org.jboss.netty.buffer.DirectChannelBufferFactory",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdySettingsFrame$Setting",
     "org.jboss.netty.channel.socket.http.HttpTunnelingSocketChannelConfig",
     "org.jboss.netty.channel.local.DefaultLocalChannel",
     "org.jboss.netty.util.HashedWheelTimer$Worker",
     "org.jboss.netty.handler.codec.serialization.CompactObjectInputStream",
     "org.jboss.netty.channel.FixedReceiveBufferSizePredictor",
     "org.jboss.netty.handler.ssl.util.ThreadLocalInsecureRandom",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadNoBackArrayException",
     "org.jboss.netty.handler.timeout.IdleStateHandler$1",
     "org.jboss.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete1",
     "org.jboss.netty.channel.DefaultChannelFuture",
     "org.jboss.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete2",
     "org.jboss.netty.handler.codec.spdy.SpdySession$PriorityComparator",
     "org.jboss.netty.channel.socket.nio.AbstractNioChannel$WriteTask",
     "org.jboss.netty.channel.socket.DefaultServerSocketChannelConfig",
     "org.jboss.netty.handler.codec.spdy.SpdyVersion",
     "org.jboss.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry",
     "org.jboss.netty.handler.timeout.WriteTimeoutException",
     "org.jboss.netty.handler.traffic.AbstractTrafficShapingHandler$ReopenReadTimerTask",
     "org.jboss.netty.handler.codec.frame.LineBasedFrameDecoder",
     "org.jboss.netty.handler.codec.socks.SocksInitRequest",
     "org.jboss.netty.handler.timeout.TimeoutException",
     "org.jboss.netty.channel.ChannelFutureListener",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException",
     "org.jboss.netty.handler.codec.compression.JdkZlibEncoder",
     "org.jboss.netty.channel.socket.oio.OioClientSocketChannel",
     "org.jboss.netty.util.internal.ThreadLocalRandom",
     "org.jboss.netty.channel.socket.nio.BossPool",
     "org.jboss.netty.channel.socket.DefaultDatagramChannelConfig",
     "org.jboss.netty.handler.codec.http.multipart.AbstractHttpData",
     "org.jboss.netty.handler.codec.http.multipart.MixedAttribute",
     "org.jboss.netty.channel.group.ChannelGroup",
     "org.jboss.netty.handler.codec.socks.SocksCmdResponse$1",
     "org.jboss.netty.buffer.ByteBufferBackedChannelBuffer",
     "org.jboss.netty.handler.codec.socks.SocksMessage$ProtocolVersion",
     "org.jboss.netty.handler.codec.http.HttpClientCodec$Encoder",
     "org.jboss.netty.handler.codec.base64.Base64Encoder",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$SimpleEntry",
     "org.jboss.netty.handler.timeout.WriteTimeoutHandler",
     "org.jboss.netty.handler.ipfilter.IpSubnetFilterRule",
     "org.jboss.netty.handler.codec.http.HttpResponseEncoder",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdySynReplyFrame",
     "org.jboss.netty.handler.codec.socks.SocksMessage$CmdStatus",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode",
     "org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink$1",
     "org.jboss.netty.handler.codec.http.HttpHeaders$Names",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaderBlockRawEncoder",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostRequestEncoder",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyHeaders",
     "org.jboss.netty.channel.socket.http.HttpTunnelingServlet$OutboundConnectionHandler",
     "org.jboss.netty.handler.codec.http.multipart.MemoryFileUpload",
     "org.jboss.netty.util.internal.ConcurrentHashMap$KeyIterator",
     "org.jboss.netty.handler.codec.serialization.SoftReferenceMap",
     "org.jboss.netty.handler.codec.socks.SocksInitRequestDecoder",
     "org.jboss.netty.logging.InternalLogLevel",
     "org.jboss.netty.handler.codec.http.HttpHeaders",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketFrame",
     "org.jboss.netty.util.NetUtil",
     "org.jboss.netty.handler.ipfilter.OneIpFilterHandler",
     "org.jboss.netty.channel.SimpleChannelDownstreamHandler",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$Values",
     "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$Preallocation",
     "org.jboss.netty.channel.local.LocalClientChannelSink",
     "org.jboss.netty.handler.codec.serialization.ClassLoaderClassResolver",
     "org.jboss.netty.handler.ssl.SslHandler$PendingWrite",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostRequestDecoder$EndOfDataDecoderException",
     "org.jboss.netty.channel.socket.nio.NioSocketChannel",
     "org.jboss.netty.handler.codec.rtsp.RtspHeaders",
     "org.jboss.netty.util.CharsetUtil$1",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$WeakKeyReference",
     "org.jboss.netty.util.CharsetUtil$2",
     "org.jboss.netty.util.internal.jzlib.InfBlocks",
     "org.jboss.netty.channel.local.DefaultLocalServerChannel",
     "org.jboss.netty.channel.ChannelFutureProgressListener",
     "org.jboss.netty.channel.group.DefaultChannelGroupFuture$1",
     "org.jboss.netty.channel.socket.nio.WorkerPool",
     "org.jboss.netty.buffer.DuplicatedChannelBuffer",
     "org.jboss.netty.channel.socket.nio.NioChannelConfig",
     "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory",
     "org.jboss.netty.handler.codec.http.DefaultHttpChunk",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$EntrySet",
     "org.jboss.netty.channel.ConnectTimeoutException",
     "org.jboss.netty.handler.codec.compression.ZlibUtil",
     "org.jboss.netty.handler.codec.http.DefaultHttpHeaders$1",
     "org.jboss.netty.handler.codec.serialization.CachingClassResolver",
     "org.jboss.netty.handler.timeout.ReadTimeoutHandler$State",
     "org.jboss.netty.channel.socket.nio.NioDatagramPipelineSink",
     "org.jboss.netty.handler.codec.http.HttpClientCodec$Decoder",
     "org.jboss.netty.channel.socket.nio.NioDatagramWorker",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyHeadersFrame",
     "org.jboss.netty.handler.codec.compression.ZlibUtil$1",
     "org.jboss.netty.channel.socket.nio.ProtocolFamilyConverter$1",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostRequestDecoder",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException",
     "org.jboss.netty.util.Timer",
     "org.jboss.netty.handler.codec.rtsp.RtspResponseEncoder",
     "org.jboss.netty.handler.timeout.IdleStateHandler$State",
     "org.jboss.netty.util.ExternalResourceReleasable",
     "org.jboss.netty.handler.ssl.util.InsecureTrustManagerFactory",
     "org.jboss.netty.channel.socket.oio.OioSocketChannel",
     "org.jboss.netty.channel.socket.nio.NioServerBoss",
     "org.jboss.netty.handler.codec.rtsp.RtspHeaders$Values",
     "org.jboss.netty.handler.ssl.JdkSslClientContext",
     "org.jboss.netty.channel.Channels$3",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketFrameType",
     "org.jboss.netty.channel.Channels$2",
     "org.jboss.netty.channel.Channels$1",
     "org.jboss.netty.bootstrap.ServerBootstrap$1",
     "org.jboss.netty.channel.socket.oio.OioDatagramChannelFactory",
     "org.jboss.netty.logging.CommonsLoggerFactory",
     "org.jboss.netty.channel.Channels$7",
     "org.jboss.netty.channel.socket.nio.SocketSendBufferPool",
     "org.jboss.netty.channel.Channels$6",
     "org.jboss.netty.channel.Channels$5",
     "org.jboss.netty.channel.Channels$4",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketVersion",
     "org.jboss.netty.channel.ReceiveBufferSizePredictor",
     "org.jboss.netty.channel.Channels$8",
     "org.jboss.netty.handler.codec.spdy.SpdySession",
     "org.jboss.netty.container.osgi.NettyBundleActivator",
     "org.jboss.netty.channel.socket.ServerSocketChannelConfig",
     "org.jboss.netty.handler.codec.http.multipart.DefaultHttpDataFactory",
     "org.jboss.netty.handler.ssl.SslProvider",
     "org.jboss.netty.channel.ServerChannelFactory",
     "org.jboss.netty.channel.socket.nio.DefaultNioSocketChannelConfig",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaderBlockEncoder",
     "org.jboss.netty.handler.codec.http.HttpMessageDecoder$1",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$6",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$7",
     "org.jboss.netty.channel.ChannelDownstreamHandler",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$2$1",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$2",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$3",
     "org.jboss.netty.channel.group.ChannelGroupFutureListener",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$4",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$5",
     "org.jboss.netty.handler.codec.spdy.SpdyHeaders$1",
     "org.jboss.netty.handler.ssl.SslHandler$SSLEngineInboundCloseFuture",
     "org.jboss.netty.handler.codec.embedder.EmbeddedChannelFactory",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel$1",
     "org.jboss.netty.handler.codec.marshalling.CompatibleMarshallingDecoder",
     "org.jboss.netty.channel.DefaultServerChannelConfig",
     "org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor$NewThreadRunsPolicy",
     "org.jboss.netty.channel.socket.nio.NioClientBoss$1",
     "org.jboss.netty.handler.codec.http.DefaultHttpMessage",
     "org.jboss.netty.handler.stream.ChunkedStream",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker",
     "org.jboss.netty.channel.socket.oio.OioServerSocketPipelineSink$1",
     "org.jboss.netty.util.internal.AtomicFieldUpdaterUtil",
     "org.jboss.netty.handler.codec.socks.SocksCmdResponseDecoder$1",
     "org.jboss.netty.handler.codec.socks.SocksMessage$MessageType",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder",
     "org.jboss.netty.handler.codec.spdy.SpdyWindowUpdateFrame",
     "org.jboss.netty.handler.codec.socks.SocksCmdResponseDecoder",
     "org.jboss.netty.channel.SimpleChannelUpstreamHandler",
     "org.jboss.netty.handler.codec.http.HttpHeaderDateFormat$1",
     "org.jboss.netty.handler.codec.http.HttpChunk$1",
     "org.jboss.netty.handler.codec.http.multipart.HttpDataFactory",
     "org.jboss.netty.handler.codec.http.QueryStringDecoder",
     "org.jboss.netty.handler.execution.OrderedDownstreamThreadPoolExecutor",
     "org.jboss.netty.handler.timeout.IdleStateAwareChannelUpstreamHandler",
     "org.jboss.netty.bootstrap.ServerBootstrap$Binder$1",
     "org.jboss.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType",
     "org.jboss.netty.handler.codec.socks.SocksAuthRequestDecoder$State",
     "org.jboss.netty.channel.socket.nio.NioClientBossPool",
     "org.jboss.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator",
     "org.jboss.netty.handler.codec.spdy.SpdyHttpCodec",
     "org.jboss.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus",
     "org.jboss.netty.util.internal.ReusableIterator",
     "org.jboss.netty.util.internal.StackTraceSimplifier",
     "org.jboss.netty.handler.codec.spdy.SpdySettingsFrame",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$1",
     "org.jboss.netty.util.internal.ConcurrentWeakKeyHashMap$EntryIterator",
     "org.jboss.netty.handler.codec.http.QueryStringEncoder$Param",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannel",
     "org.jboss.netty.handler.codec.serialization.CompatibleObjectDecoder$1",
     "org.jboss.netty.handler.codec.spdy.SpdyGoAwayFrame",
     "org.jboss.netty.handler.ssl.OpenSslEngine$1",
     "org.jboss.netty.handler.codec.socks.SocksAuthResponseDecoder$State",
     "org.jboss.netty.channel.ServerChannel",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$KeyIterator",
     "org.jboss.netty.channel.socket.nio.NioDatagramChannelConfig",
     "org.jboss.netty.container.microcontainer.NettyLoggerConfigurator",
     "org.jboss.netty.channel.local.DefaultLocalServerChannelFactory",
     "org.jboss.netty.handler.codec.marshalling.MarshallingDecoder",
     "org.jboss.netty.util.ExternalResourceUtil",
     "org.jboss.netty.channel.AbstractChannel",
     "org.jboss.netty.handler.codec.http.HttpResponseStatus",
     "org.jboss.netty.handler.stream.ChunkedNioFile",
     "org.jboss.netty.channel.FailedChannelFuture",
     "org.jboss.netty.channel.socket.nio.NioWorkerPool",
     "org.jboss.netty.channel.AbstractChannelSink",
     "org.jboss.netty.bootstrap.ClientBootstrap",
     "org.jboss.netty.handler.codec.serialization.ObjectDecoder",
     "org.jboss.netty.handler.codec.socks.SocksCmdRequestDecoder$1",
     "org.jboss.netty.handler.codec.rtsp.RtspMessageDecoder",
     "org.jboss.netty.buffer.ChannelBuffer",
     "org.jboss.netty.handler.codec.spdy.SpdyFrame",
     "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$Values",
     "org.jboss.netty.handler.codec.rtsp.RtspResponseStatuses",
     "org.jboss.netty.handler.codec.spdy.SpdyFrameDecoder$State",
     "org.jboss.netty.handler.codec.spdy.SpdyRstStreamFrame",
     "org.jboss.netty.handler.codec.string.StringDecoder",
     "org.jboss.netty.handler.codec.http.DefaultHttpResponse",
     "org.jboss.netty.handler.codec.http.multipart.DiskAttribute",
     "org.jboss.netty.channel.socket.nio.AbstractNioBossPool",
     "org.jboss.netty.handler.codec.spdy.SpdyOrHttpChooser",
     "org.jboss.netty.channel.ChannelState",
     "org.jboss.netty.util.internal.ConcurrentHashMap$SimpleEntry",
     "org.jboss.netty.handler.codec.spdy.DefaultSpdyPingFrame",
     "org.jboss.netty.handler.codec.protobuf.ProtobufEncoder",
     "org.jboss.netty.handler.codec.marshalling.ThreadLocalUnmarshallerProvider",
     "org.jboss.netty.util.internal.SystemPropertyUtil",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder",
     "org.jboss.netty.handler.codec.embedder.EncoderEmbedder",
     "org.jboss.netty.handler.ipfilter.IpSubnet",
     "org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketPipelineSink",
     "org.jboss.netty.channel.DefaultChannelPipeline",
     "org.jboss.netty.handler.stream.ChunkedWriteHandler",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder",
     "org.jboss.netty.handler.codec.socks.SocksCmdRequest$1",
     "org.jboss.netty.channel.ChannelPipelineFactory",
     "org.jboss.netty.channel.socket.http.HttpTunnelingServlet",
     "org.jboss.netty.channel.AdaptiveReceiveBufferSizePredictor",
     "org.jboss.netty.channel.DefaultExceptionEvent",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State",
     "org.jboss.netty.handler.timeout.IdleStateAwareChannelHandler",
     "org.jboss.netty.handler.codec.socks.SocksMessage$AddressType",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2",
     "org.jboss.netty.channel.socket.nio.NioServerSocketChannel",
     "org.jboss.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1",
     "org.jboss.netty.handler.codec.rtsp.RtspRequestEncoder",
     "org.jboss.netty.channel.DefaultFileRegion",
     "org.jboss.netty.handler.stream.ChunkedWriteHandler$1",
     "org.jboss.netty.channel.socket.nio.NioSelectorPool",
     "org.jboss.netty.util.internal.ConcurrentIdentityWeakKeyHashMap$HashIterator",
     "org.jboss.netty.channel.local.LocalServerChannelSink",
     "org.jboss.netty.util.internal.UnterminatableExecutor",
     "org.jboss.netty.handler.stream.ChunkedWriteHandler$2",
     "org.jboss.netty.handler.stream.ChunkedWriteHandler$3",
     "org.jboss.netty.util.TimerTask",
     "org.jboss.netty.util.internal.NonReentrantLock",
     "org.jboss.netty.channel.socket.oio.OioServerSocketPipelineSink$Boss",
     "org.jboss.netty.handler.codec.http.HttpChunkTrailer",
     "org.jboss.netty.util.internal.jzlib.Inflate",
     "org.jboss.netty.util.internal.AtomicFieldUpdaterUtil$Node",
     "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$EmptySendBuffer",
     "org.jboss.netty.channel.socket.DatagramChannelConfig",
     "org.jboss.netty.channel.ChannelPipelineException",
     "org.jboss.netty.handler.codec.embedder.CodecEmbedder",
     "org.jboss.netty.channel.DownstreamChannelStateEvent",
     "org.jboss.netty.handler.codec.serialization.ClassResolvers",
     "org.jboss.netty.handler.codec.spdy.SpdyDataFrame"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "ch.qos.logback:logback-classic:jar:1.1.1:test",
    "coordinates": "ch.qos.logback:logback-classic:1.1.1",
    "groupId": "ch.qos.logback",
    "artifactId": "logback-classic",
    "version": "1.1.1",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 270858,
    "type": "direct",
    "status": "bloated",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "ch.qos.logback.classic.turbo.MatchingFilter",
     "ch.qos.logback.classic.spi.ILoggingEvent",
     "ch.qos.logback.classic.filter.ThresholdFilter",
     "ch.qos.logback.classic.net.SocketReceiver",
     "ch.qos.logback.classic.spi.STEUtil",
     "ch.qos.logback.classic.db.names.ColumnName",
     "ch.qos.logback.classic.pattern.FileOfCallerConverter",
     "ch.qos.logback.classic.pattern.LevelConverter",
     "ch.qos.logback.classic.pattern.LineSeparatorConverter",
     "ch.qos.logback.classic.gaffer.ComponentDelegate",
     "ch.qos.logback.classic.selector.ContextJNDISelector",
     "ch.qos.logback.classic.gaffer.GafferUtil",
     "ch.qos.logback.classic.ClassicConstants",
     "ch.qos.logback.classic.pattern.PropertyConverter",
     "ch.qos.logback.classic.db.DBHelper",
     "ch.qos.logback.classic.helpers.MDCInsertingServletFilter",
     "ch.qos.logback.classic.gaffer.AsyncAppenderDelegate",
     "ch.qos.logback.classic.gaffer.PropertyUtil$_upperCaseFirstLetter_closure1",
     "ch.qos.logback.classic.filter.LevelFilter",
     "ch.qos.logback.classic.html.DefaultCssBuilder",
     "ch.qos.logback.classic.joran.action.LoggerAction",
     "ch.qos.logback.classic.spi.IThrowableProxy",
     "ch.qos.logback.classic.gaffer.ConfigurationDelegate",
     "ch.qos.logback.classic.joran.action.LoggerContextListenerAction",
     "ch.qos.logback.classic.net.SSLSocketAppender",
     "ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter",
     "ch.qos.logback.classic.pattern.NamedConverter",
     "ch.qos.logback.classic.util.ContextInitializer",
     "ch.qos.logback.classic.spi.LoggerRemoteView",
     "ch.qos.logback.classic.spi.PlatformInfo",
     "ch.qos.logback.classic.turbo.DynamicThresholdFilter",
     "ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter",
     "ch.qos.logback.classic.html.DefaultThrowableRenderer",
     "ch.qos.logback.classic.gaffer.ConfigurationDelegate$_copyContributions_closure2",
     "ch.qos.logback.classic.util.LevelToSyslogSeverity",
     "ch.qos.logback.classic.net.SimpleSocketServer",
     "ch.qos.logback.classic.Logger",
     "ch.qos.logback.classic.pattern.DateConverter",
     "ch.qos.logback.classic.selector.servlet.LoggerContextFilter",
     "ch.qos.logback.classic.pattern.LoggerConverter",
     "ch.qos.logback.classic.net.server.RemoteAppenderServerRunner",
     "ch.qos.logback.classic.pattern.ThrowableHandlingConverter",
     "ch.qos.logback.classic.db.DBAppender",
     "ch.qos.logback.classic.util.EnvUtil",
     "ch.qos.logback.classic.pattern.ContextNameConverter",
     "ch.qos.logback.classic.turbo.MDCFilter",
     "ch.qos.logback.classic.db.names.TableName",
     "ch.qos.logback.classic.gaffer.AsyncAppenderDelegate$_closure1",
     "ch.qos.logback.classic.net.server.RemoteAppenderServerListener",
     "ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator",
     "ch.qos.logback.classic.LoggerContext",
     "ch.qos.logback.classic.spi.LoggerContextVO",
     "ch.qos.logback.classic.turbo.LRUMessageCache",
     "ch.qos.logback.classic.pattern.ClassicConverter",
     "ch.qos.logback.classic.pattern.LocalSequenceNumberConverter",
     "ch.qos.logback.classic.pattern.EnsureExceptionHandling",
     "ch.qos.logback.classic.util.ContextSelectorStaticBinder",
     "ch.qos.logback.classic.gaffer.GafferConfigurator",
     "ch.qos.logback.classic.joran.action.ConfigurationAction",
     "ch.qos.logback.classic.spi.StackTraceElementProxy",
     "ch.qos.logback.classic.net.server.ServerSocketReceiver",
     "ch.qos.logback.classic.net.server.RemoteAppenderStreamClient",
     "ch.qos.logback.classic.net.server.SSLServerSocketAppender",
     "ch.qos.logback.classic.pattern.MarkerConverter",
     "ch.qos.logback.classic.util.LogbackMDCAdapter",
     "ch.qos.logback.classic.util.DefaultNestedComponentRules",
     "ch.qos.logback.classic.boolex.GEventEvaluator",
     "ch.qos.logback.classic.joran.action.RootLoggerAction",
     "ch.qos.logback.classic.sift.ContextBasedDiscriminator",
     "ch.qos.logback.classic.pattern.MethodOfCallerConverter",
     "ch.qos.logback.classic.net.SocketNode",
     "ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter",
     "ch.qos.logback.classic.pattern.ThrowableProxyConverter",
     "ch.qos.logback.classic.boolex.IEvaluator",
     "ch.qos.logback.classic.boolex.EvaluatorTemplate",
     "ch.qos.logback.classic.db.names.SimpleDBNameResolver",
     "ch.qos.logback.classic.gaffer.PropertyUtil",
     "ch.qos.logback.classic.db.names.DBNameResolver",
     "ch.qos.logback.classic.jmx.MBeanUtil",
     "ch.qos.logback.classic.gaffer.ConfigurationContributor",
     "ch.qos.logback.classic.spi.CallerData",
     "org.slf4j.impl.StaticMarkerBinder",
     "ch.qos.logback.classic.spi.LoggerContextAwareBase",
     "ch.qos.logback.classic.pattern.Abbreviator",
     "ch.qos.logback.classic.pattern.Util",
     "ch.qos.logback.classic.joran.action.ContextNameAction",
     "ch.qos.logback.classic.spi.LoggerContextListener",
     "ch.qos.logback.classic.turbo.TurboFilter",
     "ch.qos.logback.classic.joran.JoranConfigurator",
     "ch.qos.logback.classic.joran.action.JMXConfiguratorAction",
     "ch.qos.logback.classic.net.SMTPAppender",
     "ch.qos.logback.classic.boolex.JaninoEventEvaluator",
     "ch.qos.logback.classic.joran.action.EvaluatorAction",
     "ch.qos.logback.classic.net.JMSQueueAppender",
     "ch.qos.logback.classic.db.SQLBuilder",
     "ch.qos.logback.classic.pattern.ThreadConverter",
     "ch.qos.logback.classic.jmx.JMXConfiguratorMBean",
     "ch.qos.logback.classic.selector.ContextSelector",
     "ch.qos.logback.classic.spi.ThrowableProxyUtil",
     "ch.qos.logback.classic.net.SimpleSSLSocketServer",
     "ch.qos.logback.classic.spi.ClassPackagingData",
     "ch.qos.logback.classic.spi.LoggingEvent",
     "ch.qos.logback.classic.net.SyslogAppender",
     "ch.qos.logback.classic.gaffer.NestingType",
     "ch.qos.logback.classic.AsyncAppender",
     "ch.qos.logback.classic.spi.ThrowableProxyVO",
     "ch.qos.logback.classic.turbo.MarkerFilter",
     "ch.qos.logback.classic.net.JMSQueueSink",
     "ch.qos.logback.classic.util.JNDIUtil",
     "ch.qos.logback.classic.pattern.NopThrowableInformationConverter",
     "ch.qos.logback.classic.spi.LoggerComparator",
     "ch.qos.logback.classic.pattern.RelativeTimeConverter",
     "ch.qos.logback.classic.selector.DefaultContextSelector",
     "ch.qos.logback.classic.net.LoggingEventPreSerializationTransformer",
     "ch.qos.logback.classic.joran.action.ConsolePluginAction",
     "ch.qos.logback.classic.net.SSLSocketReceiver",
     "ch.qos.logback.classic.gaffer.GafferConfigurator$_run_closure1",
     "ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
     "ch.qos.logback.classic.html.UrlCssBuilder",
     "ch.qos.logback.classic.net.SocketAcceptor",
     "ch.qos.logback.classic.net.JMSTopicAppender",
     "ch.qos.logback.classic.util.StatusListenerConfigHelper",
     "ch.qos.logback.classic.db.names.DefaultDBNameResolver",
     "ch.qos.logback.classic.jul.LevelChangePropagator",
     "ch.qos.logback.classic.pattern.LineOfCallerConverter",
     "ch.qos.logback.classic.sift.AppenderFactoryUsingJoran",
     "ch.qos.logback.classic.sift.SiftingAppender",
     "ch.qos.logback.classic.pattern.CallerDataConverter",
     "ch.qos.logback.classic.sift.JNDIBasedContextDiscriminator",
     "ch.qos.logback.classic.pattern.MDCConverter",
     "ch.qos.logback.classic.html.HTMLLayout",
     "ch.qos.logback.classic.pattern.ClassNameOnlyAbbreviator",
     "ch.qos.logback.classic.util.LoggerNameUtil",
     "ch.qos.logback.classic.joran.action.ReceiverAction",
     "ch.qos.logback.classic.net.server.RemoteAppenderClient",
     "ch.qos.logback.classic.gaffer.ConfigurationDelegate$_logger_closure1",
     "ch.qos.logback.classic.PatternLayout",
     "ch.qos.logback.classic.sift.SiftingJoranConfigurator",
     "ch.qos.logback.classic.jul.JULHelper",
     "ch.qos.logback.classic.log4j.XMLLayout",
     "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
     "ch.qos.logback.classic.net.JMSTopicSink",
     "ch.qos.logback.classic.util.CopyOnInheritThreadLocal",
     "ch.qos.logback.classic.pattern.MessageConverter",
     "ch.qos.logback.classic.boolex.OnMarkerEvaluator",
     "ch.qos.logback.classic.spi.ThrowableProxy",
     "ch.qos.logback.classic.boolex.OnErrorEvaluator",
     "ch.qos.logback.classic.pattern.ClassOfCallerConverter",
     "ch.qos.logback.classic.spi.TurboFilterList",
     "ch.qos.logback.classic.jmx.JMXConfigurator",
     "ch.qos.logback.classic.ViewStatusMessagesServlet",
     "ch.qos.logback.classic.spi.LoggingEventVO",
     "ch.qos.logback.classic.joran.action.InsertFromJNDIAction",
     "ch.qos.logback.classic.turbo.MDCValueLevelPair",
     "ch.qos.logback.classic.spi.LoggerContextAware",
     "ch.qos.logback.classic.joran.action.LevelAction",
     "ch.qos.logback.classic.gaffer.AppenderDelegate",
     "ch.qos.logback.classic.pattern.SyslogStartConverter",
     "org.slf4j.impl.StaticLoggerBinder",
     "ch.qos.logback.classic.spi.PackagingDataCalculator",
     "ch.qos.logback.classic.spi.EventArgUtil",
     "org.slf4j.impl.StaticMDCBinder",
     "ch.qos.logback.classic.net.server.ServerSocketAppender",
     "ch.qos.logback.classic.net.SocketAppender",
     "ch.qos.logback.classic.net.server.SSLServerSocketReceiver",
     "ch.qos.logback.classic.sift.MDCBasedDiscriminator",
     "ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread",
     "ch.qos.logback.classic.Level",
     "ch.qos.logback.classic.selector.servlet.ContextDetachingSCL",
     "ch.qos.logback.classic.sift.SiftAction",
     "ch.qos.logback.classic.turbo.DuplicateMessageFilter",
     "ch.qos.logback.classic.net.ReceiverBase",
     "ch.qos.logback.classic.BasicConfigurator"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "ch.qos.logback:logback-core:jar:1.1.1:test",
      "coordinates": "ch.qos.logback:logback-core:1.1.1",
      "groupId": "ch.qos.logback",
      "artifactId": "logback-core",
      "version": "1.1.1",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 427794,
      "type": "transitive",
      "status": "bloated",
      "parent": "ch.qos.logback:logback-classic:jar:1.1.1:test",
      "allTypes": [
       "ch.qos.logback.core.db.dialect.DBUtil$1",
       "ch.qos.logback.core.net.SMTPAppenderBase",
       "ch.qos.logback.core.net.SyslogOutputStream",
       "ch.qos.logback.core.pattern.color.BlackCompositeConverter",
       "ch.qos.logback.core.util.PropertySetterException",
       "ch.qos.logback.core.joran.event.InPlayListener",
       "ch.qos.logback.core.boolex.JaninoEventEvaluatorBase",
       "ch.qos.logback.core.FileAppender",
       "ch.qos.logback.core.joran.action.ContextPropertyAction",
       "ch.qos.logback.core.net.server.ConcurrentServerRunner$1",
       "ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState",
       "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP",
       "ch.qos.logback.core.joran.spi.EventPlayer",
       "ch.qos.logback.core.joran.action.NOPAction",
       "ch.qos.logback.core.spi.CyclicBufferTracker",
       "ch.qos.logback.core.util.LocationUtil",
       "ch.qos.logback.core.db.dialect.SQLDialect",
       "ch.qos.logback.core.rolling.helper.MonoTypedConverter",
       "ch.qos.logback.core.joran.conditional.ThenAction",
       "ch.qos.logback.core.joran.spi.NoAutoStart",
       "ch.qos.logback.core.net.ssl.SSL",
       "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
       "ch.qos.logback.core.status.OnErrorConsoleStatusListener",
       "ch.qos.logback.core.util.EnvUtil",
       "ch.qos.logback.core.subst.Parser$1",
       "ch.qos.logback.core.util.InvocationGate",
       "ch.qos.logback.core.encoder.NonClosableInputStream",
       "ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean",
       "ch.qos.logback.core.spi.ContextAwareImpl",
       "ch.qos.logback.core.pattern.ConverterUtil",
       "ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy",
       "ch.qos.logback.core.encoder.ByteArrayUtil",
       "ch.qos.logback.core.joran.GenericConfigurator",
       "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilder",
       "ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction",
       "ch.qos.logback.core.rolling.helper.RollingCalendar",
       "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
       "ch.qos.logback.core.joran.action.ActionConst",
       "ch.qos.logback.core.net.server.RemoteReceiverClient",
       "ch.qos.logback.core.joran.event.BodyEvent",
       "ch.qos.logback.core.status.ErrorStatus",
       "ch.qos.logback.core.boolex.Matcher",
       "ch.qos.logback.core.subst.Node",
       "ch.qos.logback.core.pattern.PostCompileProcessor",
       "ch.qos.logback.core.pattern.IdentityCompositeConverter",
       "ch.qos.logback.core.joran.conditional.Condition",
       "ch.qos.logback.core.subst.Tokenizer$1",
       "ch.qos.logback.core.boolex.EvaluationException",
       "ch.qos.logback.core.pattern.FormatInfo",
       "ch.qos.logback.core.rolling.helper.Compressor$1",
       "ch.qos.logback.core.boolex.EventEvaluatorBase",
       "ch.qos.logback.core.rolling.TriggeringPolicy",
       "ch.qos.logback.core.util.Loader",
       "ch.qos.logback.core.joran.util.StringToObjectConverter",
       "ch.qos.logback.core.rolling.RollingPolicy",
       "ch.qos.logback.core.pattern.CompositeConverter",
       "ch.qos.logback.core.util.Duration",
       "ch.qos.logback.core.util.OptionHelper",
       "ch.qos.logback.core.pattern.color.RedCompositeConverter",
       "ch.qos.logback.core.rolling.helper.Compressor",
       "ch.qos.logback.core.spi.AbstractComponentTracker",
       "ch.qos.logback.core.spi.ContextAware",
       "ch.qos.logback.core.CoreConstants",
       "ch.qos.logback.core.util.CharSequenceToRegexMapper",
       "ch.qos.logback.core.util.ContextUtil",
       "ch.qos.logback.core.filter.Filter",
       "ch.qos.logback.core.helpers.CyclicBuffer",
       "ch.qos.logback.core.pattern.LiteralConverter",
       "ch.qos.logback.core.pattern.PatternLayoutBase",
       "ch.qos.logback.core.spi.DeferredProcessingAware",
       "ch.qos.logback.core.db.JNDIConnectionSource",
       "ch.qos.logback.core.joran.spi.RuleStore",
       "ch.qos.logback.core.spi.AppenderAttachableImpl",
       "ch.qos.logback.core.net.SyslogAppenderBase",
       "ch.qos.logback.core.pattern.util.AsIsEscapeUtil",
       "ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy",
       "ch.qos.logback.core.joran.action.IADataForComplexProperty",
       "ch.qos.logback.core.util.FixedDelay",
       "ch.qos.logback.core.util.Loader$1",
       "ch.qos.logback.core.util.Loader$2",
       "ch.qos.logback.core.net.server.SSLServerSocketAppenderBase",
       "ch.qos.logback.core.pattern.util.IEscapeUtil",
       "ch.qos.logback.core.pattern.ReplacingCompositeConverter",
       "ch.qos.logback.core.joran.conditional.PropertyWrapperForScripts",
       "ch.qos.logback.core.boolex.EventEvaluator",
       "ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran",
       "ch.qos.logback.core.joran.conditional.IfAction",
       "ch.qos.logback.core.AsyncAppenderBase$Worker",
       "ch.qos.logback.core.joran.util.PropertySetter$1",
       "ch.qos.logback.core.net.ssl.SSLConfiguration",
       "ch.qos.logback.core.status.Status",
       "ch.qos.logback.core.ConsoleAppender",
       "ch.qos.logback.core.Context",
       "ch.qos.logback.core.joran.action.PropertyAction",
       "ch.qos.logback.core.AsyncAppenderBase",
       "ch.qos.logback.core.util.AggregationType",
       "ch.qos.logback.core.db.dialect.H2Dialect",
       "ch.qos.logback.core.rolling.RollingPolicyBase",
       "ch.qos.logback.core.UnsynchronizedAppenderBase",
       "ch.qos.logback.core.joran.event.EndEvent",
       "ch.qos.logback.core.OutputStreamAppender",
       "ch.qos.logback.core.spi.FilterAttachable",
       "ch.qos.logback.core.encoder.ObjectStreamEncoder",
       "ch.qos.logback.core.rolling.helper.ArchiveRemover",
       "ch.qos.logback.core.status.StatusBase",
       "ch.qos.logback.core.subst.Node$Type",
       "ch.qos.logback.core.net.DefaultSocketConnector$1",
       "ch.qos.logback.core.pattern.color.ANSIConstants",
       "ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport",
       "ch.qos.logback.core.rolling.RolloverFailure",
       "ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator",
       "ch.qos.logback.core.pattern.color.BoldMagentaCompositeConverter",
       "ch.qos.logback.core.status.OnPrintStreamStatusListenerBase",
       "ch.qos.logback.core.pattern.color.BoldRedCompositeConverter",
       "ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules",
       "ch.qos.logback.core.sift.AbstractDiscriminator",
       "ch.qos.logback.core.pattern.color.CyanCompositeConverter",
       "ch.qos.logback.core.joran.util.ConfigurationWatchListUtil",
       "ch.qos.logback.core.db.BindDataSourceToJNDIAction",
       "ch.qos.logback.core.db.dialect.SybaseSqlAnywhereDialect",
       "ch.qos.logback.core.rolling.helper.CompressionMode",
       "ch.qos.logback.core.db.DataSourceConnectionSource",
       "ch.qos.logback.core.status.StatusManager",
       "ch.qos.logback.core.util.StringCollectionUtil",
       "ch.qos.logback.core.util.StatusPrinter",
       "ch.qos.logback.core.joran.node.ComponentNode",
       "ch.qos.logback.core.pattern.color.BoldYellowCompositeConverter",
       "ch.qos.logback.core.joran.spi.ActionException",
       "ch.qos.logback.core.LifeCycleManager",
       "ch.qos.logback.core.property.FileExistsPropertyDefiner",
       "ch.qos.logback.core.rolling.helper.CompressionRunnable",
       "ch.qos.logback.core.joran.action.IncludeAction",
       "ch.qos.logback.core.helpers.ThrowableToStringArray",
       "ch.qos.logback.core.pattern.FormattingConverter",
       "ch.qos.logback.core.sift.AppenderTracker",
       "ch.qos.logback.core.spi.FilterReply",
       "ch.qos.logback.core.util.TimeUtil",
       "ch.qos.logback.core.pattern.color.BoldCyanCompositeConverter",
       "ch.qos.logback.core.net.SocketConnector",
       "ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy",
       "ch.qos.logback.core.joran.spi.NoAutoStartUtil",
       "ch.qos.logback.core.joran.conditional.ThenOrElseActionBase",
       "ch.qos.logback.core.net.AbstractSSLSocketAppender",
       "ch.qos.logback.core.rolling.helper.TokenConverter",
       "ch.qos.logback.core.db.dialect.SQLiteDialect",
       "ch.qos.logback.core.sift.DefaultDiscriminator",
       "ch.qos.logback.core.joran.event.StartEvent",
       "ch.qos.logback.core.db.dialect.PostgreSQLDialect",
       "ch.qos.logback.core.subst.Node$1",
       "ch.qos.logback.core.sift.AppenderFactory",
       "ch.qos.logback.core.Appender",
       "ch.qos.logback.core.html.CssBuilder",
       "ch.qos.logback.core.net.ssl.ConfigurableSSLSocketFactory",
       "ch.qos.logback.core.pattern.Converter",
       "ch.qos.logback.core.rolling.helper.DefaultArchiveRemover",
       "ch.qos.logback.core.joran.spi.ConsoleTarget$1",
       "ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean",
       "ch.qos.logback.core.net.ssl.SSLParametersConfiguration",
       "ch.qos.logback.core.joran.spi.ConsoleTarget$2",
       "ch.qos.logback.core.pattern.parser.Node",
       "ch.qos.logback.core.util.CachingDateFormatter",
       "ch.qos.logback.core.joran.spi.ElementPath",
       "ch.qos.logback.core.joran.action.NewRuleAction",
       "ch.qos.logback.core.joran.action.NestedBasicPropertyIA$1",
       "ch.qos.logback.core.joran.action.ActionUtil$1",
       "ch.qos.logback.core.net.server.Client",
       "ch.qos.logback.core.pattern.parser.TokenStream",
       "ch.qos.logback.core.spi.AppenderAttachable",
       "ch.qos.logback.core.spi.PreSerializationTransformer",
       "ch.qos.logback.core.joran.event.stax.StartEvent",
       "ch.qos.logback.core.joran.spi.JoranException",
       "ch.qos.logback.core.pattern.parser.SimpleKeywordNode",
       "ch.qos.logback.core.subst.Token$Type",
       "ch.qos.logback.core.rolling.FixedWindowRollingPolicy",
       "ch.qos.logback.core.joran.action.StatusListenerAction",
       "ch.qos.logback.core.pattern.color.WhiteCompositeConverter",
       "ch.qos.logback.core.joran.action.ParamAction",
       "ch.qos.logback.core.net.ssl.ConfigurableSSLServerSocketFactory",
       "ch.qos.logback.core.rolling.helper.RollingCalendar$1",
       "ch.qos.logback.core.helpers.NOPAppender",
       "ch.qos.logback.core.pattern.util.RestrictedEscapeUtil",
       "ch.qos.logback.core.html.HTMLLayoutBase",
       "ch.qos.logback.core.joran.event.stax.StaxEventRecorder",
       "ch.qos.logback.core.joran.action.DefinePropertyAction",
       "ch.qos.logback.core.util.ExecutorServiceUtil",
       "ch.qos.logback.core.net.AbstractSocketAppender",
       "ch.qos.logback.core.net.server.RemoteReceiverServerListener",
       "ch.qos.logback.core.pattern.parser.OptionTokenizer",
       "ch.qos.logback.core.joran.spi.ConfigurationWatchList",
       "ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover",
       "ch.qos.logback.core.util.ContentTypeUtil",
       "ch.qos.logback.core.joran.action.NestedBasicPropertyIA",
       "ch.qos.logback.core.net.server.RemoteReceiverServerRunner",
       "ch.qos.logback.core.status.WarnStatus",
       "ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase",
       "ch.qos.logback.core.LogbackException",
       "ch.qos.logback.core.spi.PropertyDefiner",
       "ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil",
       "ch.qos.logback.core.status.NopStatusListener",
       "ch.qos.logback.core.db.DBAppenderBase",
       "ch.qos.logback.core.read.ListAppender",
       "ch.qos.logback.core.subst.NodeToStringTransformer$1",
       "ch.qos.logback.core.net.server.AbstractServerSocketAppender$1",
       "ch.qos.logback.core.pattern.util.RegularEscapeUtil",
       "ch.qos.logback.core.encoder.EventObjectInputStream",
       "ch.qos.logback.core.joran.spi.Interpreter",
       "ch.qos.logback.core.net.SocketConnector$ExceptionHandler",
       "ch.qos.logback.core.status.StatusListenerAsList",
       "ch.qos.logback.core.subst.Tokenizer$TokenizerState",
       "ch.qos.logback.core.joran.conditional.IfState",
       "ch.qos.logback.core.pattern.parser.CompositeNode",
       "ch.qos.logback.core.spi.LifeCycle",
       "ch.qos.logback.core.joran.spi.DefaultClass",
       "ch.qos.logback.core.net.ssl.SSLConfigurable",
       "ch.qos.logback.core.rolling.helper.DateTokenConverter",
       "ch.qos.logback.core.subst.Token",
       "ch.qos.logback.core.joran.event.SaxEventRecorder",
       "ch.qos.logback.core.net.server.ServerSocketListener",
       "ch.qos.logback.core.rolling.RollingFileAppender",
       "ch.qos.logback.core.joran.action.ActionUtil",
       "ch.qos.logback.core.net.server.ServerListener",
       "ch.qos.logback.core.net.ssl.SSLComponent",
       "ch.qos.logback.core.db.dialect.DBUtil",
       "ch.qos.logback.core.joran.action.IADataForBasicProperty",
       "ch.qos.logback.core.recovery.ResilientOutputStreamBase",
       "ch.qos.logback.core.rolling.helper.FileStoreUtil",
       "ch.qos.logback.core.net.SyslogConstants",
       "ch.qos.logback.core.rolling.helper.SizeAndTimeBasedArchiveRemover",
       "ch.qos.logback.core.net.server.ClientVisitor",
       "ch.qos.logback.core.html.IThrowableRenderer",
       "ch.qos.logback.core.spi.ScanException",
       "ch.qos.logback.core.rolling.helper.PeriodicityType",
       "ch.qos.logback.core.LayoutBase",
       "ch.qos.logback.core.AppenderBase",
       "ch.qos.logback.core.pattern.color.GreenCompositeConverter",
       "ch.qos.logback.core.recovery.ResilientFileOutputStream",
       "ch.qos.logback.core.net.SMTPAppenderBase$SenderRunnable",
       "ch.qos.logback.core.util.SystemInfo",
       "ch.qos.logback.core.util.IncompatibleClassException",
       "ch.qos.logback.core.sift.SiftingAppenderBase",
       "ch.qos.logback.core.net.ssl.SSLConfigurableSocket",
       "ch.qos.logback.core.joran.action.ImplicitAction",
       "ch.qos.logback.core.pattern.parser.Parser",
       "ch.qos.logback.core.PropertyDefinerBase",
       "ch.qos.logback.core.pattern.color.BlueCompositeConverter",
       "ch.qos.logback.core.status.ViewStatusMessagesServletBase",
       "ch.qos.logback.core.spi.LogbackLock",
       "ch.qos.logback.core.joran.action.ActionUtil$Scope",
       "ch.qos.logback.core.pattern.color.BoldGreenCompositeConverter",
       "ch.qos.logback.core.filter.AbstractMatcherFilter",
       "ch.qos.logback.core.subst.Tokenizer",
       "ch.qos.logback.core.util.CloseUtil",
       "ch.qos.logback.core.recovery.ResilientSyslogOutputStream",
       "ch.qos.logback.core.joran.event.stax.BodyEvent",
       "ch.qos.logback.core.pattern.parser.Compiler",
       "ch.qos.logback.core.spi.ContextAwareBase",
       "ch.qos.logback.core.status.OnConsoleStatusListener",
       "ch.qos.logback.core.util.DatePatternToRegexUtil",
       "ch.qos.logback.core.spi.FilterAttachableImpl",
       "ch.qos.logback.core.db.DBHelper",
       "ch.qos.logback.core.pattern.color.GrayCompositeConverter",
       "ch.qos.logback.core.joran.action.ConversionRuleAction",
       "ch.qos.logback.core.util.DelayStrategy",
       "ch.qos.logback.core.util.DynamicClassLoadingException",
       "ch.qos.logback.core.util.FileUtil",
       "ch.qos.logback.core.net.server.RemoteReceiverStreamClient",
       "ch.qos.logback.core.encoder.Encoder",
       "ch.qos.logback.core.ContextBase",
       "ch.qos.logback.core.filter.EvaluatorFilter",
       "ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper",
       "ch.qos.logback.core.subst.Parser",
       "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
       "ch.qos.logback.core.db.dialect.MySQLDialect",
       "ch.qos.logback.core.net.server.ConcurrentServerRunner",
       "ch.qos.logback.core.pattern.color.ForegroundCompositeConverterBase",
       "ch.qos.logback.core.rolling.helper.RenameUtil",
       "ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble",
       "ch.qos.logback.core.encoder.EncoderBase",
       "ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry",
       "ch.qos.logback.core.BasicStatusManager",
       "ch.qos.logback.core.db.dialect.MsSQLDialect",
       "ch.qos.logback.core.spi.AbstractComponentTracker$2",
       "ch.qos.logback.core.status.StatusUtil",
       "ch.qos.logback.core.net.DefaultSocketConnector$ConsoleExceptionHandler",
       "ch.qos.logback.core.spi.AbstractComponentTracker$1",
       "ch.qos.logback.core.joran.conditional.ThenActionState",
       "ch.qos.logback.core.net.ssl.SecureRandomFactoryBean",
       "ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
       "ch.qos.logback.core.pattern.parser.Token",
       "ch.qos.logback.core.db.ConnectionSourceBase",
       "ch.qos.logback.core.spi.AbstractComponentTracker$3",
       "ch.qos.logback.core.pattern.color.YellowCompositeConverter",
       "ch.qos.logback.core.db.dialect.SQLDialectCode",
       "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
       "ch.qos.logback.core.db.dialect.HSQLDBDialect",
       "ch.qos.logback.core.joran.spi.SimpleRuleStore",
       "ch.qos.logback.core.util.FileSize",
       "ch.qos.logback.core.helpers.Transform",
       "ch.qos.logback.core.joran.spi.ConsoleTarget",
       "ch.qos.logback.core.layout.EchoLayout",
       "ch.qos.logback.core.util.CharSequenceState",
       "ch.qos.logback.core.net.LoginAuthenticator",
       "ch.qos.logback.core.rolling.helper.FileFilterUtil$3",
       "ch.qos.logback.core.rolling.helper.FileFilterUtil$2",
       "ch.qos.logback.core.rolling.helper.FileFilterUtil$1",
       "ch.qos.logback.core.joran.spi.InterpretationContext",
       "ch.qos.logback.core.pattern.DynamicConverter",
       "ch.qos.logback.core.encoder.EchoEncoder",
       "ch.qos.logback.core.recovery.RecoveryCoordinator",
       "ch.qos.logback.core.html.NOPThrowableRenderer",
       "ch.qos.logback.core.joran.action.Action",
       "ch.qos.logback.core.joran.util.PropertySetter",
       "ch.qos.logback.core.spi.PropertyContainer",
       "ch.qos.logback.core.db.dialect.OracleDialect",
       "ch.qos.logback.core.net.ssl.KeyStoreFactoryBean",
       "ch.qos.logback.core.joran.event.stax.EndEvent",
       "ch.qos.logback.core.joran.action.AppenderAction",
       "ch.qos.logback.core.spi.AbstractComponentTracker$Entry",
       "ch.qos.logback.core.pattern.parser.FormattingNode",
       "ch.qos.logback.core.rolling.helper.AsynchronousCompressor",
       "ch.qos.logback.core.net.ssl.SSLContextFactoryBean",
       "ch.qos.logback.core.rolling.helper.FileFilterUtil",
       "ch.qos.logback.core.status.InfoStatus",
       "ch.qos.logback.core.net.DefaultSocketConnector",
       "ch.qos.logback.core.property.ResourceExistsPropertyDefiner",
       "ch.qos.logback.core.joran.action.NestedComplexPropertyIA$1",
       "ch.qos.logback.core.pattern.color.BoldWhiteCompositeConverter",
       "ch.qos.logback.core.sift.SiftingJoranConfiguratorBase",
       "ch.qos.logback.core.read.CyclicBufferAppender",
       "ch.qos.logback.core.sift.Discriminator",
       "ch.qos.logback.core.rolling.TriggeringPolicyBase",
       "ch.qos.logback.core.subst.NodeToStringTransformer",
       "ch.qos.logback.core.joran.action.NestedComplexPropertyIA",
       "ch.qos.logback.core.status.StatusListener",
       "ch.qos.logback.core.net.ssl.SSLConfigurableServerSocket",
       "ch.qos.logback.core.rolling.helper.FileNamePattern",
       "ch.qos.logback.core.spi.ComponentTracker",
       "ch.qos.logback.core.db.ConnectionSource",
       "ch.qos.logback.core.net.JMSAppenderBase",
       "ch.qos.logback.core.net.server.AbstractServerSocketAppender",
       "ch.qos.logback.core.joran.event.stax.StaxEvent",
       "ch.qos.logback.core.pattern.SpacePadder",
       "ch.qos.logback.core.rolling.FixedWindowRollingPolicy$1",
       "ch.qos.logback.core.joran.action.TimestampAction",
       "ch.qos.logback.core.joran.JoranConfiguratorBase",
       "ch.qos.logback.core.Layout",
       "ch.qos.logback.core.joran.conditional.ElseAction",
       "ch.qos.logback.core.joran.spi.XMLUtil",
       "ch.qos.logback.core.db.DriverManagerConnectionSource",
       "ch.qos.logback.core.pattern.parser.TokenStream$1",
       "ch.qos.logback.core.joran.spi.ElementSelector",
       "ch.qos.logback.core.pattern.color.BoldBlueCompositeConverter",
       "ch.qos.logback.core.joran.action.AppenderRefAction",
       "ch.qos.logback.core.joran.event.SaxEvent",
       "ch.qos.logback.core.net.server.ServerRunner"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.slf4j:slf4j-api:jar:1.7.6:test",
      "coordinates": "org.slf4j:slf4j-api:1.7.6",
      "groupId": "org.slf4j",
      "artifactId": "slf4j-api",
      "version": "1.7.6",
      "scope": "test",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "ch.qos.logback:logback-classic:jar:1.1.1:test",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     }
    ]
   },
   {
    "id": "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test",
    "coordinates": "com.thimbleware.jmemcached:jmemcached-core:1.0.0",
    "groupId": "com.thimbleware.jmemcached",
    "artifactId": "jmemcached-core",
    "version": "1.0.0",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 101467,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "com.thimbleware.jmemcached.protocol.SessionStatus",
     "com.thimbleware.jmemcached.protocol.text.MemcachedCommandDecoder",
     "com.thimbleware.jmemcached.protocol.exceptions.UnknownCommandException",
     "com.thimbleware.jmemcached.protocol.Op",
     "com.thimbleware.jmemcached.util.BufferUtils",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$EntryIterator",
     "com.thimbleware.jmemcached.storage.bytebuffer.ByteBufferBlockStore$BadAllocationException",
     "com.thimbleware.jmemcached.protocol.MemcachedCommandHandler",
     "com.thimbleware.jmemcached.protocol.ResponseMessage",
     "com.thimbleware.jmemcached.LocalCacheElement$IncrDecrResult",
     "com.thimbleware.jmemcached.storage.bytebuffer.ByteBufferBlockStore",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$KeyIterator",
     "com.thimbleware.jmemcached.protocol.binary.MemcachedBinaryResponseEncoder$1",
     "com.thimbleware.jmemcached.protocol.text.MemcachedResponseEncoder",
     "com.thimbleware.jmemcached.storage.bytebuffer.BlockStorageCacheStorage$StoredValue",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$NodeEntry",
     "com.thimbleware.jmemcached.storage.bytebuffer.ByteBufferBlockStore$ByteBufferBlockStoreFactory",
     "com.thimbleware.jmemcached.Key",
     "com.thimbleware.jmemcached.storage.hash.SizedItem",
     "com.thimbleware.jmemcached.protocol.CommandMessage",
     "com.thimbleware.jmemcached.CacheImpl$1",
     "com.thimbleware.jmemcached.LocalCacheElement",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$EvictionPolicy$1",
     "com.thimbleware.jmemcached.protocol.binary.MemcachedBinaryResponseEncoder",
     "com.thimbleware.jmemcached.protocol.text.MemcachedPipelineFactory",
     "com.thimbleware.jmemcached.AbstractCache",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$EvictionPolicy$3",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$EvictionPolicy$2",
     "com.thimbleware.jmemcached.storage.mmap.MemoryMappedBlockStore$1",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$ValueIterator",
     "com.thimbleware.jmemcached.protocol.exceptions.ClientException",
     "com.thimbleware.jmemcached.protocol.SessionStatus$State",
     "com.thimbleware.jmemcached.Cache",
     "com.thimbleware.jmemcached.storage.bytebuffer.ByteBufferBlockStore$1",
     "com.thimbleware.jmemcached.storage.CacheStorage",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$SimpleEntry",
     "com.thimbleware.jmemcached.CacheImpl$DelayedMCElement",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$Identity",
     "com.thimbleware.jmemcached.protocol.exceptions.InvalidProtocolStateException",
     "com.thimbleware.jmemcached.Cache$StoreResponse",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$EvictionListener",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$EntrySet",
     "com.thimbleware.jmemcached.storage.bytebuffer.BlockStorageCacheStorage",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$KeySet",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$EvictionPolicy",
     "com.thimbleware.jmemcached.protocol.binary.MemcachedBinaryCommandDecoder",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$Values",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$1",
     "com.thimbleware.jmemcached.protocol.text.MemcachedCommandDecoder$1",
     "com.thimbleware.jmemcached.protocol.text.MemcachedCommandDecoder$2",
     "com.thimbleware.jmemcached.MemCacheDaemon",
     "com.thimbleware.jmemcached.CacheElement",
     "com.thimbleware.jmemcached.storage.mmap.MemoryMappedBlockStore",
     "com.thimbleware.jmemcached.storage.bytebuffer.Region",
     "com.thimbleware.jmemcached.storage.bytebuffer.BlockStorageCacheStorage$1",
     "com.thimbleware.jmemcached.storage.mmap.MemoryMappedBlockStore$MemoryMappedBlockStoreFactory",
     "com.thimbleware.jmemcached.CacheImpl",
     "com.thimbleware.jmemcached.protocol.binary.MemcachedBinaryPipelineFactory",
     "com.thimbleware.jmemcached.protocol.exceptions.MalformedCommandException",
     "com.thimbleware.jmemcached.protocol.binary.MemcachedBinaryCommandDecoder$BinaryOp",
     "com.thimbleware.jmemcached.storage.bytebuffer.BlockStoreFactory",
     "com.thimbleware.jmemcached.protocol.text.MemcachedResponseEncoder$1",
     "com.thimbleware.jmemcached.protocol.exceptions.IncorrectlyTerminatedPayloadException",
     "com.thimbleware.jmemcached.protocol.MemcachedCommandHandler$1",
     "com.thimbleware.jmemcached.protocol.binary.MemcachedBinaryResponseEncoder$ResponseCode",
     "com.thimbleware.jmemcached.Cache$DeleteResponse",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$Node"
    ],
    "usedTypes": [
     "com.thimbleware.jmemcached.Key",
     "com.thimbleware.jmemcached.LocalCacheElement",
     "com.thimbleware.jmemcached.CacheImpl",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap$EvictionPolicy",
     "com.thimbleware.jmemcached.MemCacheDaemon",
     "com.thimbleware.jmemcached.Cache",
     "com.thimbleware.jmemcached.storage.hash.ConcurrentLinkedHashMap",
     "com.thimbleware.jmemcached.storage.CacheStorage"
    ],
    "usageRatio": 0.11764705882352941,
    "children": [
     {
      "id": "org.slf4j:slf4j-api:jar:1.5.11:test",
      "coordinates": "org.slf4j:slf4j-api:1.5.11",
      "groupId": "org.slf4j",
      "artifactId": "slf4j-api",
      "version": "1.5.11",
      "scope": "test",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "com.thimbleware.jmemcached:jmemcached-core:jar:1.0.0:test",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     }
    ]
   },
   {
    "id": "junit:junit:jar:4.11:test",
    "coordinates": "junit:junit:4.11",
    "groupId": "junit",
    "artifactId": "junit",
    "version": "4.11",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 245039,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "org.junit.runner.Request",
     "org.junit.experimental.theories.ParameterSignature",
     "org.junit.rules.ExpectedException$ExpectedExceptionStatement",
     "org.junit.internal.builders.NullBuilder",
     "junit.framework.TestSuite",
     "org.junit.ComparisonFailure$ComparisonCompactor",
     "org.junit.experimental.categories.Categories$IncludeCategory",
     "org.junit.runner.Result$1",
     "org.junit.rules.ExpectedExceptionMatcherBuilder",
     "org.junit.runners.model.FrameworkMethod$1",
     "junit.framework.JUnit4TestAdapterCache$1",
     "org.junit.AfterClass",
     "org.junit.internal.requests.SortingRequest",
     "junit.extensions.TestSetup",
     "org.junit.internal.ArrayComparisonFailure",
     "org.junit.experimental.theories.internal.AllMembersSupplier$1",
     "org.junit.runner.Request$1",
     "org.junit.runner.Computer$1",
     "org.junit.rules.ErrorCollector",
     "org.junit.internal.runners.InitializationError",
     "org.junit.rules.Verifier",
     "org.junit.rules.ExternalResource",
     "org.junit.experimental.results.FailureList",
     "org.junit.matchers.package-info",
     "org.junit.experimental.theories.PotentialAssignment$1",
     "org.junit.internal.requests.package-info",
     "junit.textui.ResultPrinter",
     "org.junit.runners.package-info",
     "org.junit.internal.runners.SuiteMethod",
     "junit.extensions.ActiveTestSuite$1",
     "org.junit.runner.RunWith",
     "org.junit.experimental.results.PrintableResult",
     "org.junit.internal.runners.statements.InvokeMethod",
     "org.junit.rules.TestWatchman$1",
     "org.junit.runners.Parameterized$TestClassRunnerForParameters",
     "junit.extensions.ActiveTestSuite",
     "org.junit.experimental.theories.Theories",
     "org.junit.internal.ComparisonCriteria",
     "org.junit.internal.requests.ClassRequest",
     "org.junit.rules.Timeout",
     "junit.framework.TestCase",
     "org.junit.runner.package-info",
     "org.junit.Before",
     "junit.runner.package-info",
     "org.junit.Test$None",
     "org.junit.runner.manipulation.Filter",
     "org.junit.runner.notification.RunNotifier$SafeNotifier",
     "org.junit.Test",
     "junit.framework.JUnit4TestCaseFacade",
     "org.junit.runners.Parameterized$Parameter",
     "org.junit.internal.requests.FilterRequest",
     "org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue",
     "org.junit.experimental.categories.Categories$ExcludeCategory",
     "org.junit.ComparisonFailure",
     "org.junit.internal.runners.MethodRoadie$1$1",
     "org.junit.runners.MethodSorters",
     "org.junit.runners.model.RunnerBuilder",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1$1",
     "org.junit.internal.runners.package-info",
     "org.junit.runner.manipulation.Filterable",
     "org.junit.experimental.max.MaxHistory$1",
     "org.junit.rules.RunRules",
     "org.junit.internal.MethodSorter",
     "org.junit.runner.notification.RunNotifier$1",
     "org.junit.internal.runners.model.EachTestNotifier",
     "org.junit.runner.notification.RunListener",
     "junit.framework.TestFailure",
     "org.junit.runner.Description",
     "org.junit.experimental.max.MaxCore$1$1",
     "org.junit.runner.notification.Failure",
     "org.junit.internal.runners.statements.FailOnTimeout",
     "org.junit.internal.builders.AllDefaultPossibilitiesBuilder",
     "org.junit.runner.notification.RunNotifier$6",
     "org.junit.runner.notification.RunNotifier$7",
     "org.junit.runner.notification.RunNotifier$2",
     "org.junit.runner.notification.RunNotifier$3",
     "org.junit.runner.notification.RunNotifier$4",
     "org.junit.runner.notification.RunNotifier$5",
     "org.junit.runners.model.NoGenericTypeParametersValidator",
     "junit.textui.package-info",
     "org.junit.rules.Verifier$1",
     "org.junit.runners.model.Statement",
     "junit.framework.Test",
     "org.junit.matchers.JUnitMatchers",
     "org.junit.rules.ErrorCollector$1",
     "junit.framework.JUnit4TestAdapter",
     "org.junit.experimental.categories.Categories$CategoryFilter",
     "org.junit.internal.runners.TestClass",
     "junit.extensions.package-info",
     "org.junit.experimental.ParallelComputer",
     "org.junit.internal.matchers.StacktracePrintingMatcher",
     "org.junit.rules.ExternalResource$1",
     "org.junit.internal.runners.MethodValidator",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1",
     "org.junit.runner.Result$Listener",
     "org.junit.internal.ExactComparisonCriteria",
     "org.junit.Assume",
     "org.junit.experimental.theories.Theories$TheoryAnchor$2",
     "org.junit.internal.JUnitSystem",
     "org.junit.internal.runners.ClassRoadie",
     "org.junit.internal.builders.JUnit3Builder",
     "org.junit.internal.builders.IgnoredBuilder",
     "org.junit.runners.model.FrameworkMethod",
     "org.junit.runners.JUnit4",
     "org.junit.internal.runners.JUnit4ClassRunner$1",
     "org.junit.internal.runners.JUnit4ClassRunner$2",
     "org.junit.Ignore",
     "junit.framework.Assert",
     "junit.extensions.TestDecorator",
     "org.junit.experimental.theories.ParametersSuppliedBy",
     "org.junit.runner.JUnitCore",
     "org.junit.runner.Result",
     "org.junit.experimental.theories.Theories$TheoryAnchor",
     "junit.extensions.TestSetup$1",
     "junit.textui.TestRunner",
     "org.junit.internal.InexactComparisonCriteria",
     "org.junit.runners.model.RunnerScheduler",
     "org.junit.internal.AssumptionViolatedException",
     "org.junit.experimental.theories.ParameterSupplier",
     "org.junit.internal.matchers.ThrowableMessageMatcher",
     "org.junit.experimental.max.MaxCore",
     "org.junit.runners.BlockJUnit4ClassRunner",
     "junit.framework.ComparisonFailure",
     "org.junit.ClassRule",
     "org.junit.internal.runners.JUnit38ClassRunner$1",
     "org.junit.runners.model.FrameworkMember",
     "org.junit.experimental.results.ResultMatchers$1",
     "org.junit.experimental.theories.Theory",
     "org.junit.experimental.results.ResultMatchers$2",
     "org.junit.internal.MethodSorter$2",
     "org.junit.internal.builders.JUnit4Builder",
     "org.junit.experimental.results.ResultMatchers$3",
     "org.junit.internal.MethodSorter$1",
     "org.junit.internal.builders.SuiteMethodBuilder",
     "org.junit.runners.BlockJUnit4ClassRunner$1",
     "org.junit.experimental.ParallelComputer$1",
     "org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener",
     "org.junit.internal.runners.MethodRoadie$1",
     "org.junit.internal.runners.MethodRoadie$2",
     "org.junit.runners.ParentRunner$3",
     "org.junit.runners.ParentRunner$4",
     "org.junit.runners.ParentRunner$1",
     "org.junit.runners.ParentRunner$2",
     "org.junit.experimental.categories.Category",
     "org.junit.rules.TestWatcher",
     "org.junit.internal.runners.MethodRoadie",
     "org.junit.runners.Suite",
     "org.junit.experimental.theories.internal.Assignments",
     "org.junit.internal.builders.IgnoredClassRunner",
     "org.junit.runner.manipulation.Sorter$1",
     "org.junit.experimental.theories.suppliers.TestedOnSupplier",
     "org.junit.internal.matchers.TypeSafeMatcher",
     "org.junit.FixMethodOrder",
     "org.junit.internal.runners.FailedBefore",
     "org.junit.internal.RealSystem",
     "org.junit.runners.model.FrameworkField",
     "org.junit.internal.runners.statements.RunAfters",
     "org.junit.experimental.max.MaxHistory$RememberingListener",
     "org.junit.runners.model.MultipleFailureException",
     "org.junit.experimental.theories.internal.ParameterizedAssertionError",
     "org.junit.rules.TestWatchman",
     "org.junit.runner.Describable",
     "org.junit.runner.Runner",
     "org.junit.rules.TestName",
     "org.junit.runners.model.InitializationError",
     "org.junit.internal.TextListener",
     "org.junit.internal.runners.TestMethod",
     "org.junit.runners.Parameterized$Parameters",
     "junit.framework.AssertionFailedError",
     "junit.framework.JUnit4TestAdapterCache",
     "junit.framework.TestSuite$1",
     "junit.framework.TestListener",
     "org.junit.runners.ParentRunner",
     "junit.framework.package-info",
     "org.junit.experimental.runners.Enclosed",
     "org.junit.Assert",
     "org.junit.experimental.max.MaxCore$1",
     "junit.framework.Protectable",
     "org.junit.runner.manipulation.package-info",
     "org.junit.internal.runners.JUnit4ClassRunner",
     "org.junit.rules.MethodRule",
     "junit.framework.ComparisonCompactor",
     "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException",
     "junit.framework.TestResult$1",
     "org.junit.runners.model.TestClass",
     "org.junit.experimental.theories.DataPoint",
     "org.junit.runner.manipulation.Sortable",
     "org.junit.runner.Computer",
     "junit.framework.TestResult",
     "org.junit.After",
     "junit.runner.BaseTestRunner",
     "org.junit.internal.builders.AnnotatedBuilder",
     "org.junit.internal.runners.statements.Fail",
     "org.junit.runners.Parameterized",
     "org.junit.runner.manipulation.Sorter",
     "org.junit.internal.runners.ErrorReportingRunner",
     "org.junit.experimental.results.ResultMatchers",
     "org.junit.runners.AllTests",
     "org.junit.runners.Suite$SuiteClasses",
     "org.junit.experimental.theories.internal.AllMembersSupplier",
     "org.junit.runner.manipulation.NoTestsRemainException",
     "org.junit.runner.notification.StoppedByUserException",
     "org.junit.experimental.theories.suppliers.TestedOn",
     "org.junit.experimental.theories.DataPoints",
     "org.junit.experimental.categories.Categories",
     "junit.runner.TestRunListener",
     "org.junit.experimental.max.MaxHistory",
     "org.junit.BeforeClass",
     "org.junit.rules.TestRule",
     "org.junit.internal.runners.statements.RunBefores",
     "org.junit.internal.runners.JUnit38ClassRunner",
     "org.junit.internal.runners.statements.FailOnTimeout$StatementThread",
     "org.junit.runner.manipulation.Filter$1",
     "org.junit.runner.manipulation.Filter$2",
     "org.junit.runner.manipulation.Filter$3",
     "junit.extensions.RepeatedTest",
     "org.junit.experimental.theories.PotentialAssignment",
     "org.junit.rules.ExpectedException",
     "org.junit.rules.TestWatcher$1",
     "org.junit.internal.runners.model.MultipleFailureException",
     "junit.runner.Version",
     "org.junit.experimental.max.MaxHistory$TestComparator",
     "org.junit.internal.runners.statements.ExpectException",
     "org.junit.internal.runners.model.ReflectiveCallable",
     "org.junit.rules.RuleChain",
     "org.junit.package-info",
     "org.junit.experimental.max.CouldNotReadCoreException",
     "org.junit.Rule",
     "org.junit.internal.matchers.ThrowableCauseMatcher",
     "org.junit.runner.notification.package-info",
     "org.junit.runner.notification.RunNotifier",
     "org.junit.internal.runners.rules.RuleFieldValidator",
     "org.junit.rules.TemporaryFolder"
    ],
    "usedTypes": [
     "org.junit.runners.model.Statement",
     "org.junit.Rule",
     "junit.framework.Assert",
     "org.junit.rules.TestRule",
     "org.junit.After",
     "org.junit.Test",
     "org.junit.runner.Description",
     "org.junit.Assert",
     "org.junit.Before"
    ],
    "usageRatio": 0.03862660944206009,
    "children": [
     {
      "id": "org.hamcrest:hamcrest-core:jar:1.3:test",
      "coordinates": "org.hamcrest:hamcrest-core:1.3",
      "groupId": "org.hamcrest",
      "artifactId": "hamcrest-core",
      "version": "1.3",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 45024,
      "type": "transitive",
      "status": "bloated",
      "parent": "junit:junit:jar:4.11:test",
      "allTypes": [
       "org.hamcrest.Condition$1",
       "org.hamcrest.core.IsNull",
       "org.hamcrest.BaseDescription",
       "org.hamcrest.CoreMatchers",
       "org.hamcrest.core.IsNot",
       "org.hamcrest.StringDescription",
       "org.hamcrest.internal.SelfDescribingValue",
       "org.hamcrest.internal.ReflectiveTypeFinder",
       "org.hamcrest.Condition$Step",
       "org.hamcrest.CustomTypeSafeMatcher",
       "org.hamcrest.core.CombinableMatcher",
       "org.hamcrest.core.AllOf",
       "org.hamcrest.core.Every",
       "org.hamcrest.core.Is",
       "org.hamcrest.TypeSafeDiagnosingMatcher",
       "org.hamcrest.BaseMatcher",
       "org.hamcrest.core.AnyOf",
       "org.hamcrest.core.StringContains",
       "org.hamcrest.core.CombinableMatcher$CombinableBothMatcher",
       "org.hamcrest.core.IsAnything",
       "org.hamcrest.core.IsEqual",
       "org.hamcrest.core.ShortcutCombination",
       "org.hamcrest.internal.SelfDescribingValueIterator",
       "org.hamcrest.Factory",
       "org.hamcrest.core.StringEndsWith",
       "org.hamcrest.core.IsInstanceOf",
       "org.hamcrest.core.IsSame",
       "org.hamcrest.Condition$Matched",
       "org.hamcrest.core.StringStartsWith",
       "org.hamcrest.Description",
       "org.hamcrest.core.SubstringMatcher",
       "org.hamcrest.Condition",
       "org.hamcrest.CustomMatcher",
       "org.hamcrest.TypeSafeMatcher",
       "org.hamcrest.core.DescribedAs",
       "org.hamcrest.core.IsCollectionContaining",
       "org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher",
       "org.hamcrest.internal.ArrayIterator",
       "org.hamcrest.FeatureMatcher",
       "org.hamcrest.MatcherAssert",
       "org.hamcrest.Matcher",
       "org.hamcrest.Condition$NotMatched",
       "org.hamcrest.Description$NullDescription",
       "org.hamcrest.SelfDescribing",
       "org.hamcrest.DiagnosingMatcher"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "org.openjdk.jmh:jmh-core:jar:1.7.1:test",
    "coordinates": "org.openjdk.jmh:jmh-core:1.7.1",
    "groupId": "org.openjdk.jmh",
    "artifactId": "jmh-core",
    "version": "1.7.1",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 436991,
    "type": "direct",
    "status": "used",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "org.openjdk.jmh.profile.LinuxPerfNormProfiler$PerfResult",
     "org.openjdk.jmh.profile.ExternalProfiler",
     "org.openjdk.jmh.annotations.Group",
     "org.openjdk.jmh.results.format.ResultFormat",
     "org.openjdk.jmh.infra.Blackhole",
     "org.openjdk.jmh.infra.ThreadParams",
     "org.openjdk.jmh.results.format.ResultFormatFactory$2",
     "org.openjdk.jmh.results.format.ResultFormatFactory$1",
     "org.openjdk.jmh.infra.Control",
     "org.openjdk.jmh.Main",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$ASMLine",
     "org.openjdk.jmh.generators.core.SourceElementError",
     "org.openjdk.jmh.runner.WorkerThreadFactory",
     "org.openjdk.jmh.results.SampleTimeResult",
     "org.openjdk.jmh.profile.StackProfiler",
     "org.openjdk.jmh.util.AbstractStatistics",
     "org.openjdk.jmh.annotations.TearDown",
     "org.openjdk.jmh.util.Utils$BurningTask",
     "org.openjdk.jmh.profile.StackProfiler$StackRecord",
     "org.openjdk.jmh.runner.RunnerException",
     "org.openjdk.jmh.profile.LinuxPerfNormProfiler",
     "org.openjdk.jmh.util.Multiset",
     "org.openjdk.jmh.util.ListStatistics",
     "org.openjdk.jmh.runner.link.BinaryLinkServer$1",
     "org.openjdk.jmh.runner.link.ExceptionFrame",
     "org.openjdk.jmh.generators.core.FileSystemDestination",
     "org.openjdk.jmh.results.format.ResultFormatType",
     "org.openjdk.jmh.util.Multisets",
     "org.openjdk.jmh.runner.ActionMode",
     "org.openjdk.jmh.util.Version",
     "org.openjdk.jmh.profile.Profiler",
     "org.openjdk.jmh.profile.LinuxPerfProfiler",
     "org.openjdk.jmh.results.BenchmarkResultMetaData",
     "org.openjdk.jmh.runner.BenchmarkListEntry",
     "org.openjdk.jmh.results.Result$1",
     "org.openjdk.jmh.runner.WorkloadParams",
     "org.openjdk.jmh.runner.options.CommandLineOptions",
     "org.openjdk.jmh.infra.IterationParamsL0",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$PerfResult",
     "org.openjdk.jmh.annotations.Measurement",
     "org.openjdk.jmh.runner.ForkedMain$HangupThread",
     "org.openjdk.jmh.runner.ActionPlan$1",
     "org.openjdk.jmh.runner.Action",
     "org.openjdk.jmh.runner.link.InfraFrame",
     "org.openjdk.jmh.util.Statistics",
     "org.openjdk.jmh.infra.BenchmarkParams",
     "org.openjdk.jmh.runner.link.ClassConventions",
     "org.openjdk.jmh.infra.IterationParamsL2",
     "org.openjdk.jmh.infra.IterationParamsL1",
     "org.openjdk.jmh.generators.core.SourceThrowableError",
     "org.openjdk.jmh.infra.IterationParamsL4",
     "org.openjdk.jmh.infra.IterationParamsL3",
     "org.openjdk.jmh.runner.ForkedMain",
     "org.openjdk.jmh.util.Utils",
     "org.openjdk.jmh.profile.WinPerfAsmProfiler",
     "org.openjdk.jmh.runner.ForkedMain$ShutdownTimeoutThread",
     "org.openjdk.jmh.results.BenchmarkResult",
     "org.openjdk.jmh.runner.options.OptionFormatter",
     "org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask",
     "org.openjdk.jmh.runner.link.ActionPlanFrame",
     "org.openjdk.jmh.generators.core.ClassInfo",
     "org.openjdk.jmh.annotations.Fork",
     "org.openjdk.jmh.util.Optional",
     "org.openjdk.jmh.annotations.BenchmarkMode",
     "org.openjdk.jmh.util.HashMultimap",
     "org.openjdk.jmh.profile.StackProfiler$1",
     "org.openjdk.jmh.profile.HotspotClassloadingProfiler",
     "org.openjdk.jmh.util.Optional$Unmarshaller",
     "org.openjdk.jmh.results.IterationResult",
     "org.openjdk.jmh.annotations.CompilerControl$Mode",
     "org.openjdk.jmh.annotations.GroupThreads",
     "org.openjdk.jmh.runner.link.OutputFrame$Type",
     "org.openjdk.jmh.util.Deduplicator",
     "org.openjdk.jmh.results.AggregationPolicy",
     "org.openjdk.jmh.runner.InfraControl",
     "org.openjdk.jmh.generators.core.SourceElementWarning",
     "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType",
     "org.openjdk.jmh.util.TreeMultiset",
     "org.openjdk.jmh.runner.BenchmarkHandler$2",
     "org.openjdk.jmh.runner.BenchmarkHandler$1",
     "org.openjdk.jmh.profile.StackProfiler$StackResult$1",
     "org.openjdk.jmh.runner.BenchmarkListEntry$9",
     "org.openjdk.jmh.util.MultisetStatistics",
     "org.openjdk.jmh.runner.BenchmarkListEntry$4",
     "org.openjdk.jmh.profile.StackProfiler$StackResult",
     "org.openjdk.jmh.runner.BenchmarkListEntry$3",
     "org.openjdk.jmh.runner.BenchmarkListEntry$2",
     "org.openjdk.jmh.runner.BenchmarkListEntry$1",
     "org.openjdk.jmh.results.SingleShotResult",
     "org.openjdk.jmh.runner.BenchmarkListEntry$8",
     "org.openjdk.jmh.profile.LinuxPerfProfiler$PerfResult",
     "org.openjdk.jmh.runner.BenchmarkListEntry$7",
     "org.openjdk.jmh.runner.link.BinaryLinkServer$Acceptor",
     "org.openjdk.jmh.runner.BenchmarkListEntry$6",
     "org.openjdk.jmh.runner.ForkedMain$1",
     "org.openjdk.jmh.runner.BenchmarkListEntry$5",
     "org.openjdk.jmh.profile.StackProfiler$StackResultAggregator",
     "org.openjdk.jmh.results.SingleShotResult$AveragingAggregator",
     "org.openjdk.jmh.runner.options.VerboseMode",
     "org.openjdk.jmh.generators.core.SourceWarning",
     "org.openjdk.jmh.infra.BenchmarkParamsL4",
     "org.openjdk.jmh.infra.BenchmarkParamsL3",
     "org.openjdk.jmh.infra.BenchmarkParamsL2",
     "org.openjdk.jmh.infra.BenchmarkParamsL1",
     "org.openjdk.jmh.generators.core.Identifiers",
     "org.openjdk.jmh.runner.link.BinaryLinkClient$ForwardingPrintStream$1",
     "org.openjdk.jmh.util.Optional$Marshaller",
     "org.openjdk.jmh.runner.format.OutputFormatFactory",
     "org.openjdk.jmh.generators.core.BenchmarkInfo",
     "org.openjdk.jmh.generators.core.GeneratorSource",
     "org.openjdk.jmh.util.NullOutputStream",
     "org.openjdk.jmh.generators.core.HelperMethodInvocation",
     "org.openjdk.jmh.profile.StackProfiler$SamplingTask",
     "org.openjdk.jmh.infra.BenchmarkParamsL0",
     "org.openjdk.jmh.annotations.OperationsPerInvocation",
     "org.openjdk.jmh.runner.link.ResultMetadataFrame",
     "org.openjdk.jmh.results.format.LaTeXResultFormat",
     "org.openjdk.jmh.profile.ProfilerResult$1",
     "org.openjdk.jmh.runner.AbstractResourceReader",
     "org.openjdk.jmh.profile.LinuxPerfNormProfiler$PerfResultAggregator",
     "org.openjdk.jmh.runner.CompilerHints",
     "org.openjdk.jmh.generators.core.GeneratorDestination",
     "org.openjdk.jmh.generators.core.HelperType",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$Region",
     "org.openjdk.jmh.generators.core.StateObjectHandler",
     "org.openjdk.jmh.profile.GCProfiler",
     "org.openjdk.jmh.profile.LinuxPerfAsmProfiler",
     "org.openjdk.jmh.generators.core.StateObject",
     "org.openjdk.jmh.generators.core.StateObjectHandler$1",
     "org.openjdk.jmh.runner.options.CommandLineOptionException",
     "org.openjdk.jmh.util.ClassUtils",
     "org.openjdk.jmh.generators.core.MethodInvocation",
     "org.openjdk.jmh.profile.HotspotThreadProfiler",
     "org.openjdk.jmh.util.SampleBuffer",
     "org.openjdk.jmh.runner.format.OutputFormatFactory$1",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$PerfResultAggregator",
     "org.openjdk.jmh.runner.BaseRunner$1",
     "org.openjdk.jmh.runner.BaseRunner$2",
     "org.openjdk.jmh.generators.core.MethodInfo",
     "org.openjdk.jmh.runner.options.ChainedOptionsBuilder",
     "org.openjdk.jmh.runner.ForkedRunner",
     "org.openjdk.jmh.results.format.XSVResultFormat",
     "org.openjdk.jmh.results.HandlerResult",
     "org.openjdk.jmh.runner.format.OutputFormat",
     "org.openjdk.jmh.generators.core.Paddings",
     "org.openjdk.jmh.runner.Defaults",
     "org.openjdk.jmh.util.FileUtils",
     "org.openjdk.jmh.runner.BenchmarkList",
     "org.openjdk.jmh.util.Multimap",
     "org.openjdk.jmh.util.SingletonStatistics",
     "org.openjdk.jmh.generators.core.SourceError",
     "org.openjdk.jmh.profile.ProfilerResultAggregator",
     "org.openjdk.jmh.runner.BenchmarkException",
     "org.openjdk.jmh.runner.WorkloadParams$Value",
     "org.openjdk.jmh.runner.format.TextReportFormat$1",
     "org.openjdk.jmh.runner.options.OptionsBuilder",
     "org.openjdk.jmh.results.AggregatorUtils",
     "org.openjdk.jmh.infra.IterationParams",
     "org.openjdk.jmh.runner.link.FinishingFrame",
     "org.openjdk.jmh.runner.link.OutputFormatFrame",
     "org.openjdk.jmh.runner.link.BinaryLinkClient",
     "org.openjdk.jmh.runner.link.BinaryLinkServer$Handler",
     "org.openjdk.jmh.runner.options.Options",
     "org.openjdk.jmh.profile.ProfilerResult",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$KernelRegion",
     "org.openjdk.jmh.infra.ControlL1",
     "org.openjdk.jmh.infra.ControlL2",
     "org.openjdk.jmh.runner.options.WarmupMode",
     "org.openjdk.jmh.annotations.Scope",
     "org.openjdk.jmh.infra.ControlL0",
     "org.openjdk.jmh.profile.InternalProfiler",
     "org.openjdk.jmh.infra.ControlL3",
     "org.openjdk.jmh.runner.BenchmarkListEntry$10",
     "org.openjdk.jmh.infra.ControlL4",
     "org.openjdk.jmh.profile.AbstractHotspotProfiler$HotspotInternalResult",
     "org.openjdk.jmh.results.ResultRole",
     "org.openjdk.jmh.annotations.AuxCounters",
     "org.openjdk.jmh.results.RunResult$1",
     "org.openjdk.jmh.results.AverageTimeResult",
     "org.openjdk.jmh.generators.core.BenchmarkGenerator$1",
     "org.openjdk.jmh.results.SampleTimeResult$JoiningAggregator",
     "org.openjdk.jmh.results.BenchmarkTaskResult",
     "org.openjdk.jmh.runner.Runner",
     "org.openjdk.jmh.annotations.Threads",
     "org.openjdk.jmh.results.format.ResultFormatFactory",
     "org.openjdk.jmh.results.Result",
     "org.openjdk.jmh.runner.IterationResultAcceptor",
     "org.openjdk.jmh.generators.core.SourceThrowableWarning",
     "org.openjdk.jmh.results.AverageTimeResult$ResultAggregator",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$1",
     "org.openjdk.jmh.results.format.TextResultFormat",
     "org.openjdk.jmh.runner.format.TextReportFormat",
     "org.openjdk.jmh.runner.link.ResultsFrame",
     "org.openjdk.jmh.annotations.Mode",
     "org.openjdk.jmh.profile.HotspotMemoryProfiler",
     "org.openjdk.jmh.generators.core.StateObject$1",
     "org.openjdk.jmh.infra.BlackholeL3",
     "org.openjdk.jmh.infra.BlackholeL4",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$Assembly",
     "org.openjdk.jmh.results.format.JSONResultFormat",
     "org.openjdk.jmh.infra.BlackholeL1",
     "org.openjdk.jmh.runner.OutputFormatAdapter",
     "org.openjdk.jmh.infra.BlackholeL2",
     "org.openjdk.jmh.runner.ForkedRunner$1",
     "org.openjdk.jmh.infra.BlackholeL0",
     "org.openjdk.jmh.generators.core.BenchmarkGeneratorUtils",
     "org.openjdk.jmh.profile.AbstractHotspotProfiler",
     "org.openjdk.jmh.generators.core.MetadataInfo",
     "org.openjdk.jmh.annotations.Timeout",
     "org.openjdk.jmh.util.Multisets$2",
     "org.openjdk.jmh.util.Multisets$1",
     "org.openjdk.jmh.annotations.Level",
     "org.openjdk.jmh.profile.HotspotRuntimeProfiler",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$GeneratedRegion",
     "org.openjdk.jmh.annotations.CompilerControl",
     "org.openjdk.jmh.results.Aggregator",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$PerfEvents",
     "org.openjdk.jmh.runner.Runner$1",
     "org.openjdk.jmh.runner.ActionType",
     "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$4",
     "org.openjdk.jmh.generators.core.ParameterInfo",
     "org.openjdk.jmh.runner.link.BinaryLinkClient$ForwardingPrintStream",
     "org.openjdk.jmh.runner.link.BinaryLinkClient$1",
     "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$5",
     "org.openjdk.jmh.results.RunResult",
     "org.openjdk.jmh.runner.link.HandshakeInitFrame",
     "org.openjdk.jmh.runner.format.AbstractOutputFormat",
     "org.openjdk.jmh.runner.ActionPlan",
     "org.openjdk.jmh.annotations.Warmup",
     "org.openjdk.jmh.util.HashMultiset",
     "org.openjdk.jmh.runner.link.BinaryLinkServer",
     "org.openjdk.jmh.util.InputStreamDrainer",
     "org.openjdk.jmh.annotations.OutputTimeUnit",
     "org.openjdk.jmh.util.ScoreFormatter",
     "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$2",
     "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$3",
     "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$1",
     "org.openjdk.jmh.runner.IterationType",
     "org.openjdk.jmh.runner.link.HandshakeResponseFrame",
     "org.openjdk.jmh.generators.core.CompilerControlPlugin",
     "org.openjdk.jmh.runner.format.SilentFormat",
     "org.openjdk.jmh.annotations.Setup",
     "org.openjdk.jmh.generators.core.MethodGroup",
     "org.openjdk.jmh.annotations.Param",
     "org.openjdk.jmh.util.TreeMultimap",
     "org.openjdk.jmh.generators.core.CompilerControlPlugin$1",
     "org.openjdk.jmh.profile.HotspotCompilationProfiler",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$NativeRegion",
     "org.openjdk.jmh.generators.core.BenchmarkGenerator",
     "org.openjdk.jmh.runner.NoBenchmarksException",
     "org.openjdk.jmh.runner.ForkedRunner$SavedIOException",
     "org.openjdk.jmh.results.ThroughputResult",
     "org.openjdk.jmh.generators.core.BenchmarkGeneratorSession",
     "org.openjdk.jmh.results.ThroughputResult$ThroughputAggregator",
     "org.openjdk.jmh.runner.link.InfraFrame$Type",
     "org.openjdk.jmh.util.UnCloseablePrintStream",
     "org.openjdk.jmh.util.Multisets$Pair",
     "org.openjdk.jmh.runner.BenchmarkHandler",
     "org.openjdk.jmh.util.HashsetMultimap",
     "org.openjdk.jmh.results.RawResults",
     "org.openjdk.jmh.profile.CompilerProfiler",
     "org.openjdk.jmh.runner.options.TimeValue$1",
     "org.openjdk.jmh.runner.BaseRunner",
     "org.openjdk.jmh.infra.ThreadParamsL1",
     "org.openjdk.jmh.annotations.State",
     "org.openjdk.jmh.runner.link.OutputFrame",
     "org.openjdk.jmh.infra.ThreadParamsL0",
     "org.openjdk.jmh.infra.ThreadParamsL3",
     "org.openjdk.jmh.annotations.Benchmark",
     "org.openjdk.jmh.infra.ThreadParamsL2",
     "org.openjdk.jmh.generators.core.Identifiers$1",
     "org.openjdk.jmh.generators.core.GenerationException",
     "org.openjdk.jmh.infra.ThreadParamsL4",
     "org.openjdk.jmh.runner.InfraControlL4",
     "org.openjdk.jmh.profile.AbstractPerfAsmProfiler",
     "org.openjdk.jmh.profile.ProfilerFactory",
     "org.openjdk.jmh.runner.InfraControlL3",
     "org.openjdk.jmh.runner.options.TimeValue",
     "org.openjdk.jmh.generators.core.FieldInfo",
     "org.openjdk.jmh.profile.LinuxPerfProfiler$PerfResultAggregator",
     "org.openjdk.jmh.runner.InfraControlL2",
     "org.openjdk.jmh.runner.InfraControlL1",
     "org.openjdk.jmh.runner.InfraControlL0",
     "org.openjdk.jmh.profile.ClassloaderProfiler"
    ],
    "usedTypes": [
     "org.openjdk.jmh.annotations.BenchmarkMode",
     "org.openjdk.jmh.infra.Blackhole",
     "org.openjdk.jmh.infra.ThreadParams",
     "org.openjdk.jmh.annotations.Scope",
     "org.openjdk.jmh.util.SampleBuffer",
     "org.openjdk.jmh.results.ResultRole",
     "org.openjdk.jmh.results.SampleTimeResult",
     "org.openjdk.jmh.infra.BenchmarkParams",
     "org.openjdk.jmh.runner.options.ChainedOptionsBuilder",
     "org.openjdk.jmh.results.AverageTimeResult",
     "org.openjdk.jmh.annotations.TearDown",
     "org.openjdk.jmh.runner.InfraControl",
     "org.openjdk.jmh.results.BenchmarkTaskResult",
     "org.openjdk.jmh.runner.Runner",
     "org.openjdk.jmh.results.RawResults",
     "org.openjdk.jmh.runner.RunnerException",
     "org.openjdk.jmh.annotations.Setup",
     "org.openjdk.jmh.annotations.Mode",
     "org.openjdk.jmh.annotations.State",
     "org.openjdk.jmh.annotations.Benchmark",
     "org.openjdk.jmh.results.format.ResultFormatType",
     "org.openjdk.jmh.runner.options.OptionsBuilder",
     "org.openjdk.jmh.infra.IterationParams",
     "org.openjdk.jmh.results.SingleShotResult",
     "org.openjdk.jmh.runner.options.VerboseMode",
     "org.openjdk.jmh.results.ThroughputResult",
     "org.openjdk.jmh.runner.options.Options"
    ],
    "usageRatio": 0.09507042253521127,
    "children": [
     {
      "id": "net.sf.jopt-simple:jopt-simple:jar:4.6:test",
      "coordinates": "net.sf.jopt-simple:jopt-simple:4.6",
      "groupId": "net.sf.jopt-simple",
      "artifactId": "jopt-simple",
      "version": "4.6",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 62477,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.openjdk.jmh:jmh-core:jar:1.7.1:test",
      "allTypes": [
       "joptsimple.BuiltinHelpFormatter",
       "joptsimple.util.KeyValuePair",
       "joptsimple.NoArgumentOptionSpec",
       "joptsimple.MultipleArgumentsForOptionException",
       "joptsimple.OptionDeclarer",
       "joptsimple.internal.Strings",
       "joptsimple.internal.Reflection",
       "joptsimple.OptionMissingRequiredArgumentException",
       "joptsimple.internal.AbbreviationMap",
       "joptsimple.AbstractOptionSpec",
       "joptsimple.util.DateConverter",
       "joptsimple.internal.Row",
       "joptsimple.OptionSpecTokenizer",
       "joptsimple.ValueConversionException",
       "joptsimple.internal.Columns",
       "joptsimple.NonOptionArgumentSpec",
       "joptsimple.RequiredArgumentOptionSpec",
       "joptsimple.internal.ConstructorInvokingValueConverter",
       "joptsimple.OptionException",
       "joptsimple.internal.Rows",
       "joptsimple.OptionParser",
       "joptsimple.BuiltinHelpFormatter$1",
       "joptsimple.HelpFormatter",
       "joptsimple.internal.Objects",
       "joptsimple.OptionDescriptor",
       "joptsimple.OptionSet",
       "joptsimple.OptionSpec",
       "joptsimple.ValueConverter",
       "joptsimple.OptionParserState$2",
       "joptsimple.OptionArgumentConversionException",
       "joptsimple.MissingRequiredOptionException",
       "joptsimple.UnacceptableNumberOfNonOptionsException",
       "joptsimple.internal.MethodInvokingValueConverter",
       "joptsimple.util.RegexMatcher",
       "joptsimple.AlternativeLongOptionSpec",
       "joptsimple.OptionParserState$1",
       "joptsimple.util.InetAddressConverter",
       "joptsimple.IllegalOptionSpecificationException",
       "joptsimple.OptionalArgumentOptionSpec",
       "joptsimple.ArgumentAcceptingOptionSpec",
       "joptsimple.ParserRules",
       "joptsimple.ArgumentList",
       "joptsimple.OptionParserState",
       "joptsimple.UnrecognizedOptionException",
       "joptsimple.internal.ReflectionException",
       "joptsimple.UnconfiguredOptionException",
       "joptsimple.OptionSpecBuilder",
       "joptsimple.internal.Classes"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.apache.commons:commons-math3:jar:3.2:test",
      "coordinates": "org.apache.commons:commons-math3:3.2",
      "groupId": "org.apache.commons",
      "artifactId": "commons-math3",
      "version": "3.2",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 1692782,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.openjdk.jmh:jmh-core:jar:1.7.1:test",
      "allTypes": [
       "org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor",
       "org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1",
       "org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator",
       "org.apache.commons.math3.optimization.univariate.BracketFinder",
       "org.apache.commons.math3.ode.SecondaryEquations",
       "org.apache.commons.math3.stat.Frequency$1",
       "org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner",
       "org.apache.commons.math3.ode.nonstiff.GillIntegrator",
       "org.apache.commons.math3.analysis.FunctionUtils$10",
       "org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer",
       "org.apache.commons.math3.analysis.FunctionUtils$12",
       "org.apache.commons.math3.complex.ComplexField",
       "org.apache.commons.math3.analysis.FunctionUtils$11",
       "org.apache.commons.math3.stat.inference.ChiSquareTest",
       "org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer",
       "org.apache.commons.math3.exception.ZeroException",
       "org.apache.commons.math3.optim.nonlinear.vector.ModelFunction",
       "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
       "org.apache.commons.math3.analysis.function.Ulp",
       "org.apache.commons.math3.analysis.UnivariateVectorFunction",
       "org.apache.commons.math3.FieldElement",
       "org.apache.commons.math3.linear.BiDiagonalTransformer",
       "org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction",
       "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer",
       "org.apache.commons.math3.dfp.UnivariateDfpFunction",
       "org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator",
       "org.apache.commons.math3.genetics.Population",
       "org.apache.commons.math3.optim.SimpleBounds",
       "org.apache.commons.math3.stat.descriptive.WeightedEvaluation",
       "org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction",
       "org.apache.commons.math3.fraction.FractionField",
       "org.apache.commons.math3.stat.inference.TestUtils",
       "org.apache.commons.math3.optimization.Weight",
       "org.apache.commons.math3.linear.NonSquareMatrixException",
       "org.apache.commons.math3.genetics.BinaryMutation",
       "org.apache.commons.math3.optim.linear.SimplexTableau",
       "org.apache.commons.math3.linear.Array2DRowRealMatrix",
       "org.apache.commons.math3.optimization.MultivariateOptimizer",
       "org.apache.commons.math3.util.MathUtils",
       "org.apache.commons.math3.stat.clustering.Clusterable",
       "org.apache.commons.math3.distribution.BinomialDistribution",
       "org.apache.commons.math3.ode.sampling.StepHandler",
       "org.apache.commons.math3.analysis.differentiation.JacobianFunction",
       "org.apache.commons.math3.random.EmpiricalDistribution$ArrayDataAdapter",
       "org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer",
       "org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D",
       "org.apache.commons.math3.analysis.FunctionUtils$14$1",
       "org.apache.commons.math3.util.BigReal",
       "org.apache.commons.math3.util.ArithmeticUtils",
       "org.apache.commons.math3.geometry.partitioning.Embedding",
       "org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory",
       "org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer",
       "org.apache.commons.math3.linear.AbstractFieldMatrix$2",
       "org.apache.commons.math3.linear.AbstractFieldMatrix$1",
       "org.apache.commons.math3.primes.Primes",
       "org.apache.commons.math3.linear.AbstractFieldMatrix$3",
       "org.apache.commons.math3.optim.nonlinear.vector.Weight",
       "org.apache.commons.math3.distribution.TriangularDistribution",
       "org.apache.commons.math3.special.Gamma$1",
       "org.apache.commons.math3.fraction.BigFraction",
       "org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator",
       "org.apache.commons.math3.analysis.FunctionUtils$9$1",
       "org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver",
       "org.apache.commons.math3.fitting.CurveFitter",
       "org.apache.commons.math3.analysis.differentiation.DerivativeStructure",
       "org.apache.commons.math3.stat.ranking.RankingAlgorithm",
       "org.apache.commons.math3.fitting.PolynomialFitter",
       "org.apache.commons.math3.exception.NonMonotonicSequenceException",
       "org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$1",
       "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order",
       "org.apache.commons.math3.ml.distance.DistanceMeasure",
       "org.apache.commons.math3.transform.TransformUtils",
       "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer",
       "org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
       "org.apache.commons.math3.analysis.function.Atan2",
       "org.apache.commons.math3.linear.LUDecomposition$1",
       "org.apache.commons.math3.fraction.ProperBigFractionFormat",
       "org.apache.commons.math3.analysis.ParametricUnivariateFunction",
       "org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane",
       "org.apache.commons.math3.ode.ParameterJacobianProvider",
       "org.apache.commons.math3.optimization.ConvergenceChecker",
       "org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction",
       "org.apache.commons.math3.random.UniformRandomGenerator",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex",
       "org.apache.commons.math3.linear.ArrayFieldVector",
       "org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator",
       "org.apache.commons.math3.stat.descriptive.moment.StandardDeviation",
       "org.apache.commons.math3.geometry.Vector",
       "org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction",
       "org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$LazyHolder",
       "org.apache.commons.math3.optimization.BaseOptimizer",
       "org.apache.commons.math3.analysis.function.Atan",
       "org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew",
       "org.apache.commons.math3.analysis.function.Sin",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer",
       "org.apache.commons.math3.util.Incrementor$1",
       "org.apache.commons.math3.transform.FastSineTransformer",
       "org.apache.commons.math3.analysis.polynomials.PolynomialsUtils",
       "org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic",
       "org.apache.commons.math3.ode.events.Transformer",
       "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
       "org.apache.commons.math3.analysis.FunctionUtils$18",
       "org.apache.commons.math3.genetics.OrderedCrossover",
       "org.apache.commons.math3.analysis.FunctionUtils$17",
       "org.apache.commons.math3.analysis.FunctionUtils$19",
       "org.apache.commons.math3.linear.LUDecomposition$Solver",
       "org.apache.commons.math3.analysis.FunctionUtils$14",
       "org.apache.commons.math3.analysis.FunctionUtils$13",
       "org.apache.commons.math3.analysis.FunctionUtils$16",
       "org.apache.commons.math3.analysis.FunctionUtils$15",
       "org.apache.commons.math3.linear.TriDiagonalTransformer",
       "org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator",
       "org.apache.commons.math3.ml.distance.ManhattanDistance",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex",
       "org.apache.commons.math3.analysis.function.Cosh",
       "org.apache.commons.math3.analysis.function.Atanh",
       "org.apache.commons.math3.analysis.FunctionUtils$16$1",
       "org.apache.commons.math3.analysis.FunctionUtils$16$2",
       "org.apache.commons.math3.ode.ParameterConfiguration",
       "org.apache.commons.math3.optimization.SimplePointChecker",
       "org.apache.commons.math3.analysis.solvers.BaseSecantSolver$1",
       "org.apache.commons.math3.exception.MathRuntimeException",
       "org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper",
       "org.apache.commons.math3.optimization.direct.NelderMeadSimplex",
       "org.apache.commons.math3.optim.linear.NoFeasibleSolutionException",
       "org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1",
       "org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator",
       "org.apache.commons.math3.transform.DstNormalization",
       "org.apache.commons.math3.util.IterationEvent",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer",
       "org.apache.commons.math3.ode.EquationsMapper",
       "org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint",
       "org.apache.commons.math3.optimization.GoalType",
       "org.apache.commons.math3.linear.IterativeLinearSolver",
       "org.apache.commons.math3.genetics.OnePointCrossover",
       "org.apache.commons.math3.linear.FieldMatrix",
       "org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$Mapper",
       "org.apache.commons.math3.linear.RRQRDecomposition$1",
       "org.apache.commons.math3.util.BigRealField$1",
       "org.apache.commons.math3.analysis.solvers.SecantSolver",
       "org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair",
       "org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator",
       "org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator",
       "org.apache.commons.math3.optim.OptimizationData",
       "org.apache.commons.math3.fraction.BigFractionField$1",
       "org.apache.commons.math3.fraction.Fraction",
       "org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat",
       "org.apache.commons.math3.util.ContinuedFraction",
       "org.apache.commons.math3.analysis.differentiation.UnivariateFunctionDifferentiator",
       "org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient",
       "org.apache.commons.math3.analysis.solvers.PegasusSolver",
       "org.apache.commons.math3.util.IterationListener",
       "org.apache.commons.math3.complex.ComplexUtils",
       "org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement",
       "org.apache.commons.math3.geometry.euclidean.twod.NestedLoops",
       "org.apache.commons.math3.analysis.function.Asinh",
       "org.apache.commons.math3.optimization.linear.UnboundedSolutionException",
       "org.apache.commons.math3.optimization.BaseMultivariateSimpleBoundsOptimizer",
       "org.apache.commons.math3.complex.Complex",
       "org.apache.commons.math3.exception.NumberIsTooSmallException",
       "org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableVectorFunction",
       "org.apache.commons.math3.util.BigRealField",
       "org.apache.commons.math3.util.FastMath$ExpIntTable",
       "org.apache.commons.math3.random.SynchronizedRandomGenerator",
       "org.apache.commons.math3.optimization.direct.BOBYQAOptimizer$PathIsExploredException",
       "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
       "org.apache.commons.math3.ode.sampling.DummyStepHandler$1",
       "org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D",
       "org.apache.commons.math3.linear.MatrixUtils",
       "org.apache.commons.math3.analysis.function.Log",
       "org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics",
       "org.apache.commons.math3.distribution.AbstractIntegerDistribution",
       "org.apache.commons.math3.analysis.function.Logistic$Parametric",
       "org.apache.commons.math3.util.CompositeFormat",
       "org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator",
       "org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback",
       "org.apache.commons.math3.analysis.FunctionUtils$18$1",
       "org.apache.commons.math3.optimization.MultivariateDifferentiableOptimizer",
       "org.apache.commons.math3.geometry.euclidean.twod.Line$1",
       "org.apache.commons.math3.linear.RealVectorChangingVisitor",
       "org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator",
       "org.apache.commons.math3.transform.FastFourierTransformer",
       "org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian",
       "org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer",
       "org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator",
       "org.apache.commons.math3.analysis.solvers.RiddersSolver",
       "org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction",
       "org.apache.commons.math3.stat.ranking.TiesStrategy",
       "org.apache.commons.math3.exception.OutOfRangeException",
       "org.apache.commons.math3.analysis.FunctionUtils$9",
       "org.apache.commons.math3.analysis.FunctionUtils$8",
       "org.apache.commons.math3.analysis.FunctionUtils$7",
       "org.apache.commons.math3.analysis.FunctionUtils$6",
       "org.apache.commons.math3.analysis.FunctionUtils$5",
       "org.apache.commons.math3.analysis.FunctionUtils$4",
       "org.apache.commons.math3.analysis.function.Divide",
       "org.apache.commons.math3.analysis.FunctionUtils$3",
       "org.apache.commons.math3.analysis.FunctionUtils$2",
       "org.apache.commons.math3.analysis.FunctionUtils$1",
       "org.apache.commons.math3.analysis.function.Ceil",
       "org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator",
       "org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics",
       "org.apache.commons.math3.ode.sampling.StepNormalizerMode",
       "org.apache.commons.math3.analysis.interpolation.TrivariateGridInterpolator",
       "org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction",
       "org.apache.commons.math3.linear.AbstractFieldMatrix",
       "org.apache.commons.math3.distribution.MultivariateRealDistribution",
       "org.apache.commons.math3.ode.events.EventState",
       "org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint",
       "org.apache.commons.math3.stat.regression.RegressionResults",
       "org.apache.commons.math3.analysis.function.Logistic",
       "org.apache.commons.math3.optim.linear.LinearOptimizer",
       "org.apache.commons.math3.analysis.function.Gaussian",
       "org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1",
       "org.apache.commons.math3.stat.descriptive.moment.Variance",
       "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$BracketingStep",
       "org.apache.commons.math3.linear.RealLinearOperator",
       "org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer",
       "org.apache.commons.math3.distribution.EnumeratedIntegerDistribution",
       "org.apache.commons.math3.stat.descriptive.moment.Skewness",
       "org.apache.commons.math3.optimization.SimpleValueChecker",
       "org.apache.commons.math3.ml.clustering.DBSCANClusterer",
       "org.apache.commons.math3.stat.descriptive.summary.SumOfSquares",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer",
       "org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat",
       "org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator",
       "org.apache.commons.math3.dfp.DfpDec$1",
       "org.apache.commons.math3.ode.ContinuousOutputModel",
       "org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1",
       "org.apache.commons.math3.geometry.euclidean.twod.SubLine",
       "org.apache.commons.math3.geometry.euclidean.threed.SubPlane",
       "org.apache.commons.math3.ode.events.EventState$1",
       "org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates",
       "org.apache.commons.math3.optim.linear.LinearConstraint",
       "org.apache.commons.math3.stat.inference.OneWayAnova",
       "org.apache.commons.math3.fraction.ProperFractionFormat",
       "org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic",
       "org.apache.commons.math3.linear.AnyMatrix",
       "org.apache.commons.math3.linear.SymmLQ$State",
       "org.apache.commons.math3.distribution.HypergeometricDistribution",
       "org.apache.commons.math3.analysis.solvers.IllinoisSolver",
       "org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression",
       "org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates$DataTransferObject",
       "org.apache.commons.math3.linear.RealVector$2$2",
       "org.apache.commons.math3.linear.RealVector$2$1",
       "org.apache.commons.math3.analysis.solvers.NewtonSolver",
       "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer",
       "org.apache.commons.math3.util.MultidimensionalCounter",
       "org.apache.commons.math3.analysis.function.Logit$Parametric",
       "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
       "org.apache.commons.math3.geometry.euclidean.threed.Segment",
       "org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser",
       "org.apache.commons.math3.optim.linear.Relationship",
       "org.apache.commons.math3.util.ResizableDoubleArray$1",
       "org.apache.commons.math3.analysis.FunctionUtils$3$1",
       "org.apache.commons.math3.optimization.direct.SimplexOptimizer",
       "org.apache.commons.math3.stat.clustering.EuclideanDoublePoint",
       "org.apache.commons.math3.complex.RootsOfUnity",
       "org.apache.commons.math3.analysis.solvers.BisectionSolver",
       "org.apache.commons.math3.geometry.euclidean.oned.Vector1D",
       "org.apache.commons.math3.ode.events.EventFilter",
       "org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper",
       "org.apache.commons.math3.analysis.function.Sigmoid$Parametric",
       "org.apache.commons.math3.geometry.VectorFormat",
       "org.apache.commons.math3.util.OpenIntToFieldHashMap$1",
       "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D",
       "org.apache.commons.math3.geometry.partitioning.AbstractRegion$3",
       "org.apache.commons.math3.geometry.partitioning.AbstractRegion$2",
       "org.apache.commons.math3.geometry.partitioning.AbstractRegion$1",
       "org.apache.commons.math3.exception.MathIllegalArgumentException",
       "org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch",
       "org.apache.commons.math3.fitting.WeightedObservedPoint",
       "org.apache.commons.math3.ode.events.EventHandler",
       "org.apache.commons.math3.genetics.ElitisticListPopulation",
       "org.apache.commons.math3.ode.nonstiff.EulerIntegrator",
       "org.apache.commons.math3.transform.DctNormalization",
       "org.apache.commons.math3.analysis.integration.TrapezoidIntegrator",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex",
       "org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex",
       "org.apache.commons.math3.analysis.function.Acos",
       "org.apache.commons.math3.analysis.differentiation.GradientFunction",
       "org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$LazyHolder",
       "org.apache.commons.math3.ode.UnknownParameterException",
       "org.apache.commons.math3.ode.sampling.StepInterpolator",
       "org.apache.commons.math3.complex.ComplexField$1",
       "org.apache.commons.math3.stat.inference.MannWhitneyUTest",
       "org.apache.commons.math3.analysis.function.HarmonicOscillator",
       "org.apache.commons.math3.exception.TooManyEvaluationsException",
       "org.apache.commons.math3.linear.FieldLUDecomposition$Solver",
       "org.apache.commons.math3.stat.descriptive.summary.Sum",
       "org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry",
       "org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction$1",
       "org.apache.commons.math3.ode.sampling.StepNormalizer",
       "org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1",
       "org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator",
       "org.apache.commons.math3.analysis.function.Pow",
       "org.apache.commons.math3.util.MathArrays$1",
       "org.apache.commons.math3.util.MathArrays$2",
       "org.apache.commons.math3.ml.distance.EuclideanDistance",
       "org.apache.commons.math3.stat.descriptive.moment.ThirdMoment",
       "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
       "org.apache.commons.math3.complex.ComplexFormat",
       "org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter",
       "org.apache.commons.math3.analysis.DifferentiableUnivariateMatrixFunction",
       "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor",
       "org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor",
       "org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction",
       "org.apache.commons.math3.distribution.MultivariateNormalDistribution",
       "org.apache.commons.math3.optim.linear.LinearObjectiveFunction",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$Mapper",
       "org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver",
       "org.apache.commons.math3.linear.RectangularCholeskyDecomposition",
       "org.apache.commons.math3.optimization.univariate.UnivariateOptimizer",
       "org.apache.commons.math3.linear.CholeskyDecomposition$Solver",
       "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet",
       "org.apache.commons.math3.stat.ranking.NaNStrategy",
       "org.apache.commons.math3.optimization.fitting.CurveFitter",
       "org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1",
       "org.apache.commons.math3.linear.QRDecomposition$Solver",
       "org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent",
       "org.apache.commons.math3.linear.FieldLUDecomposition$1",
       "org.apache.commons.math3.analysis.solvers.UnivariateDifferentiableSolver",
       "org.apache.commons.math3.optimization.direct.CMAESOptimizer$PopulationSize",
       "org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1",
       "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
       "org.apache.commons.math3.stat.descriptive.moment.SemiVariance",
       "org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1",
       "org.apache.commons.math3.analysis.solvers.BrentSolver",
       "org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair",
       "org.apache.commons.math3.analysis.differentiation.UnivariateVectorFunctionDifferentiator",
       "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment",
       "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
       "org.apache.commons.math3.exception.MathInternalError",
       "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction",
       "org.apache.commons.math3.optim.linear.Relationship$1",
       "org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator",
       "org.apache.commons.math3.exception.MathUnsupportedOperationException",
       "org.apache.commons.math3.analysis.function.Minus",
       "org.apache.commons.math3.analysis.function.Log10",
       "org.apache.commons.math3.analysis.UnivariateMatrixFunction",
       "org.apache.commons.math3.stat.clustering.DBSCANClusterer",
       "org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$LazyHolder",
       "org.apache.commons.math3.linear.SchurTransformer$1",
       "org.apache.commons.math3.stat.regression.MultipleLinearRegression",
       "org.apache.commons.math3.optim.linear.NonNegativeConstraint",
       "org.apache.commons.math3.distribution.LogNormalDistribution",
       "org.apache.commons.math3.linear.SparseRealMatrix",
       "org.apache.commons.math3.linear.HessenbergTransformer",
       "org.apache.commons.math3.ode.MainStateJacobianProvider",
       "org.apache.commons.math3.optim.univariate.BracketFinder",
       "org.apache.commons.math3.analysis.BivariateFunction",
       "org.apache.commons.math3.geometry.euclidean.twod.Line",
       "org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform",
       "org.apache.commons.math3.analysis.solvers.UnivariateSolver",
       "org.apache.commons.math3.random.AbstractRandomGenerator",
       "org.apache.commons.math3.stat.descriptive.UnivariateStatistic",
       "org.apache.commons.math3.analysis.solvers.MullerSolver2",
       "org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter",
       "org.apache.commons.math3.dfp.DfpField$RoundingMode",
       "org.apache.commons.math3.optim.BaseOptimizer$1",
       "org.apache.commons.math3.stat.ranking.NaturalRanking$1",
       "org.apache.commons.math3.distribution.ChiSquaredDistribution",
       "org.apache.commons.math3.optimization.fitting.PolynomialFitter",
       "org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizer",
       "org.apache.commons.math3.stat.inference.GTest",
       "org.apache.commons.math3.linear.ConjugateGradient",
       "org.apache.commons.math3.ml.clustering.Clusterable",
       "org.apache.commons.math3.optim.linear.UnboundedSolutionException",
       "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
       "org.apache.commons.math3.optimization.general.Preconditioner",
       "org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1",
       "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$1",
       "org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger",
       "org.apache.commons.math3.linear.IllConditionedOperatorException",
       "org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableMatrixFunction",
       "org.apache.commons.math3.genetics.RandomKeyMutation",
       "org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver",
       "org.apache.commons.math3.optim.AbstractConvergenceChecker",
       "org.apache.commons.math3.linear.JacobiPreconditioner",
       "org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException",
       "org.apache.commons.math3.ode.FirstOrderIntegrator",
       "org.apache.commons.math3.linear.EigenDecomposition$Solver",
       "org.apache.commons.math3.geometry.partitioning.Region",
       "org.apache.commons.math3.linear.QRDecomposition",
       "org.apache.commons.math3.analysis.solvers.BaseSecantSolver",
       "org.apache.commons.math3.linear.LUDecomposition",
       "org.apache.commons.math3.fraction.FractionConversionException",
       "org.apache.commons.math3.optimization.LeastSquaresConverter",
       "org.apache.commons.math3.util.FastMathCalc",
       "org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex",
       "org.apache.commons.math3.dfp.DfpField",
       "org.apache.commons.math3.optim.SimplePointChecker",
       "org.apache.commons.math3.linear.FieldDecompositionSolver",
       "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
       "org.apache.commons.math3.filter.DefaultProcessModel",
       "org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper",
       "org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector",
       "org.apache.commons.math3.distribution.GammaDistribution",
       "org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression",
       "org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3",
       "org.apache.commons.math3.optimization.direct.SimplexOptimizer$1",
       "org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4",
       "org.apache.commons.math3.analysis.function.Cos",
       "org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1",
       "org.apache.commons.math3.linear.CholeskyDecomposition",
       "org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2",
       "org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution",
       "org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3",
       "org.apache.commons.math3.analysis.integration.SimpsonIntegrator",
       "org.apache.commons.math3.geometry.euclidean.threed.Line",
       "org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator",
       "org.apache.commons.math3.optimization.direct.SimplexOptimizer$2",
       "org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5",
       "org.apache.commons.math3.optim.linear.LinearConstraintSet",
       "org.apache.commons.math3.linear.Array2DRowFieldMatrix",
       "org.apache.commons.math3.stat.inference.OneWayAnova$1",
       "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
       "org.apache.commons.math3.distribution.IntegerDistribution",
       "org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser",
       "org.apache.commons.math3.distribution.AbstractRealDistribution$1",
       "org.apache.commons.math3.util.BigRealField$LazyHolder",
       "org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$NoBoundsMapper",
       "org.apache.commons.math3.linear.FieldLUDecomposition",
       "org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator",
       "org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer",
       "org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator",
       "org.apache.commons.math3.util.ResizableDoubleArray",
       "org.apache.commons.math3.fraction.FractionField$LazyHolder",
       "org.apache.commons.math3.distribution.FDistribution",
       "org.apache.commons.math3.util.NumberTransformer",
       "org.apache.commons.math3.optimization.general.GaussNewtonOptimizer",
       "org.apache.commons.math3.exception.NotANumberException",
       "org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression",
       "org.apache.commons.math3.linear.BlockFieldMatrix",
       "org.apache.commons.math3.linear.SingularValueDecomposition$Solver",
       "org.apache.commons.math3.special.Gamma",
       "org.apache.commons.math3.stat.descriptive.moment.FourthMoment",
       "org.apache.commons.math3.analysis.polynomials.PolynomialFunction",
       "org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction",
       "org.apache.commons.math3.analysis.function.Multiply",
       "org.apache.commons.math3.optimization.MultivariateMultiStartOptimizer",
       "org.apache.commons.math3.filter.DefaultMeasurementModel",
       "org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1",
       "org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2",
       "org.apache.commons.math3.util.Pair",
       "org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer",
       "org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver$1",
       "org.apache.commons.math3.geometry.partitioning.Region$Location",
       "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder",
       "org.apache.commons.math3.analysis.function.Rint",
       "org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary",
       "org.apache.commons.math3.linear.RealVectorPreservingVisitor",
       "org.apache.commons.math3.analysis.function.StepFunction",
       "org.apache.commons.math3.util.Precision",
       "org.apache.commons.math3.ml.clustering.CentroidCluster",
       "org.apache.commons.math3.analysis.DifferentiableUnivariateFunction",
       "org.apache.commons.math3.analysis.function.Exp",
       "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex",
       "org.apache.commons.math3.random.RandomDataImpl",
       "org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy",
       "org.apache.commons.math3.distribution.LevyDistribution",
       "org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance",
       "org.apache.commons.math3.optimization.general.ConjugateGradientFormula",
       "org.apache.commons.math3.linear.ArrayRealVector",
       "org.apache.commons.math3.linear.RealVector$SparseEntryIterator",
       "org.apache.commons.math3.transform.FastHadamardTransformer",
       "org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator",
       "org.apache.commons.math3.analysis.function.Logit",
       "org.apache.commons.math3.random.StableRandomGenerator",
       "org.apache.commons.math3.distribution.WeibullDistribution",
       "org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator",
       "org.apache.commons.math3.linear.FieldMatrixChangingVisitor",
       "org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator",
       "org.apache.commons.math3.analysis.function.Gaussian$Parametric",
       "org.apache.commons.math3.genetics.TournamentSelection",
       "org.apache.commons.math3.linear.EigenDecomposition",
       "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator",
       "org.apache.commons.math3.linear.SparseRealVector",
       "org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver",
       "org.apache.commons.math3.analysis.function.Acosh",
       "org.apache.commons.math3.genetics.CrossoverPolicy",
       "org.apache.commons.math3.analysis.function.Inverse",
       "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
       "org.apache.commons.math3.ode.SecondOrderDifferentialEquations",
       "org.apache.commons.math3.ode.events.FilterType",
       "org.apache.commons.math3.ode.MultistepIntegrator$InitializationCompletedMarkerException",
       "org.apache.commons.math3.distribution.EnumeratedRealDistribution",
       "org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer",
       "org.apache.commons.math3.ode.sampling.DummyStepHandler$LazyHolder",
       "org.apache.commons.math3.ode.JacobianMatrices",
       "org.apache.commons.math3.random.BitsStreamGenerator",
       "org.apache.commons.math3.optimization.linear.LinearConstraint",
       "org.apache.commons.math3.special.Beta",
       "org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory",
       "org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter",
       "org.apache.commons.math3.util.MultidimensionalCounter$Iterator",
       "org.apache.commons.math3.optimization.linear.Relationship",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$NoBoundsMapper",
       "org.apache.commons.math3.exception.TooManyIterationsException",
       "org.apache.commons.math3.analysis.DifferentiableUnivariateVectorFunction",
       "org.apache.commons.math3.optim.univariate.BrentOptimizer",
       "org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator",
       "org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer",
       "org.apache.commons.math3.ode.FirstOrderConverter",
       "org.apache.commons.math3.geometry.euclidean.threed.Rotation",
       "org.apache.commons.math3.fraction.BigFractionFormat",
       "org.apache.commons.math3.ode.events.FilterType$1",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$1",
       "org.apache.commons.math3.ode.events.FilterType$3",
       "org.apache.commons.math3.ode.events.FilterType$2",
       "org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory",
       "org.apache.commons.math3.linear.DiagonalMatrix",
       "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
       "org.apache.commons.math3.optimization.DifferentiableMultivariateOptimizer",
       "org.apache.commons.math3.special.Beta$1",
       "org.apache.commons.math3.exception.NoBracketingException",
       "org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction",
       "org.apache.commons.math3.analysis.function.Add",
       "org.apache.commons.math3.linear.RealVectorFormat",
       "org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize",
       "org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction",
       "org.apache.commons.math3.linear.SingularValueDecomposition",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1",
       "org.apache.commons.math3.exception.util.ArgUtils",
       "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge",
       "org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver",
       "org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm",
       "org.apache.commons.math3.optim.nonlinear.scalar.GoalType",
       "org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback",
       "org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1",
       "org.apache.commons.math3.special.Erf",
       "org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer",
       "org.apache.commons.math3.genetics.StoppingCondition",
       "org.apache.commons.math3.analysis.interpolation.LinearInterpolator",
       "org.apache.commons.math3.analysis.interpolation.LoessInterpolator",
       "org.apache.commons.math3.exception.ConvergenceException",
       "org.apache.commons.math3.optimization.AbstractConvergenceChecker",
       "org.apache.commons.math3.distribution.SaddlePointExpansion",
       "org.apache.commons.math3.stat.correlation.StorelessCovariance",
       "org.apache.commons.math3.stat.StatUtils",
       "org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer",
       "org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizer",
       "org.apache.commons.math3.optimization.Target",
       "org.apache.commons.math3.util.OpenIntToDoubleHashMap$1",
       "org.apache.commons.math3.genetics.PermutationChromosome",
       "org.apache.commons.math3.analysis.MultivariateMatrixFunction",
       "org.apache.commons.math3.exception.util.ExceptionContextProvider",
       "org.apache.commons.math3.linear.NonSelfAdjointOperatorException",
       "org.apache.commons.math3.optimization.PointVectorValuePair$DataTransferObject",
       "org.apache.commons.math3.geometry.euclidean.twod.Vector2D",
       "org.apache.commons.math3.stat.descriptive.moment.FirstMoment",
       "org.apache.commons.math3.optim.univariate.UnivariateOptimizer",
       "org.apache.commons.math3.exception.MathIllegalStateException",
       "org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator",
       "org.apache.commons.math3.optim.BaseOptimizer",
       "org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest",
       "org.apache.commons.math3.fitting.GaussianFitter",
       "org.apache.commons.math3.complex.Quaternion",
       "org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator",
       "org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics",
       "org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides",
       "org.apache.commons.math3.linear.CholeskyDecomposition$1",
       "org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations",
       "org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator",
       "org.apache.commons.math3.exception.MathParseException",
       "org.apache.commons.math3.ode.SecondOrderIntegrator",
       "org.apache.commons.math3.random.GaussianRandomGenerator",
       "org.apache.commons.math3.util.DoubleArray",
       "org.apache.commons.math3.random.RandomDataGenerator",
       "org.apache.commons.math3.analysis.function.Abs",
       "org.apache.commons.math3.stat.descriptive.rank.Percentile",
       "org.apache.commons.math3.stat.descriptive.DescriptiveStatistics",
       "org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance",
       "org.apache.commons.math3.geometry.euclidean.threed.RotationOrder",
       "org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics",
       "org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper",
       "org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer$PathIsExploredException",
       "org.apache.commons.math3.stat.correlation.Covariance",
       "org.apache.commons.math3.primes.SmallPrimes",
       "org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution",
       "org.apache.commons.math3.stat.descriptive.rank.Median",
       "org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils",
       "org.apache.commons.math3.linear.AbstractRealMatrix$3",
       "org.apache.commons.math3.linear.AbstractRealMatrix$4",
       "org.apache.commons.math3.linear.AbstractRealMatrix$1",
       "org.apache.commons.math3.random.EmpiricalDistribution",
       "org.apache.commons.math3.linear.AbstractRealMatrix$2",
       "org.apache.commons.math3.linear.AbstractRealMatrix$5",
       "org.apache.commons.math3.util.TransformerMap",
       "org.apache.commons.math3.optimization.OptimizationData",
       "org.apache.commons.math3.optimization.fitting.GaussianFitter",
       "org.apache.commons.math3.geometry.euclidean.threed.Plane",
       "org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer",
       "org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver",
       "org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger",
       "org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric",
       "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
       "org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger",
       "org.apache.commons.math3.ode.ParameterizedODE",
       "org.apache.commons.math3.dfp.DfpDec",
       "org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger",
       "org.apache.commons.math3.stat.descriptive.StatisticalSummary",
       "org.apache.commons.math3.optim.univariate.SearchInterval",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction",
       "org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException",
       "org.apache.commons.math3.fitting.HarmonicFitter",
       "org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$1",
       "org.apache.commons.math3.linear.SchurTransformer",
       "org.apache.commons.math3.dfp.Dfp",
       "org.apache.commons.math3.optimization.linear.SimplexSolver",
       "org.apache.commons.math3.filter.KalmanFilter",
       "org.apache.commons.math3.linear.NonSquareOperatorException",
       "org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction",
       "org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$1",
       "org.apache.commons.math3.exception.MathIllegalNumberException",
       "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer",
       "org.apache.commons.math3.stat.inference.TTest",
       "org.apache.commons.math3.exception.MaxCountExceededException",
       "org.apache.commons.math3.stat.correlation.PearsonsCorrelation",
       "org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser",
       "org.apache.commons.math3.ode.nonstiff.AdamsIntegrator",
       "org.apache.commons.math3.analysis.differentiation.DerivativeStructure$DataTransferObject",
       "org.apache.commons.math3.ode.MultistepIntegrator$NordsieckInitializer",
       "org.apache.commons.math3.analysis.integration.RombergIntegrator",
       "org.apache.commons.math3.ml.clustering.Cluster",
       "org.apache.commons.math3.util.FastMathLiteralArrays",
       "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
       "org.apache.commons.math3.linear.SingularValueDecomposition$1",
       "org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer",
       "org.apache.commons.math3.genetics.FixedGenerationCount",
       "org.apache.commons.math3.analysis.function.Tan",
       "org.apache.commons.math3.fitting.GaussianFitter$1",
       "org.apache.commons.math3.analysis.differentiation.UnivariateMatrixFunctionDifferentiator",
       "org.apache.commons.math3.linear.FieldVector",
       "org.apache.commons.math3.ode.AbstractIntegrator",
       "org.apache.commons.math3.linear.SparseFieldVector",
       "org.apache.commons.math3.ode.JacobianMatrices$1",
       "org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer",
       "org.apache.commons.math3.stat.descriptive.moment.GeometricMean",
       "org.apache.commons.math3.analysis.function.Constant",
       "org.apache.commons.math3.ode.ParameterizedWrapper",
       "org.apache.commons.math3.stat.Frequency$NaturalComparator",
       "org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics",
       "org.apache.commons.math3.util.FastMath$lnMant",
       "org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper",
       "org.apache.commons.math3.transform.TransformType",
       "org.apache.commons.math3.RealFieldElement",
       "org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method",
       "org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer",
       "org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus",
       "org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizer",
       "org.apache.commons.math3.linear.SymmLQ",
       "org.apache.commons.math3.linear.RealVector$Entry",
       "org.apache.commons.math3.distribution.NormalDistribution",
       "org.apache.commons.math3.random.MersenneTwister",
       "org.apache.commons.math3.analysis.TrivariateFunction",
       "org.apache.commons.math3.analysis.solvers.MullerSolver",
       "org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver",
       "org.apache.commons.math3.optimization.PointValuePair",
       "org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner",
       "org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser",
       "org.apache.commons.math3.linear.BlockRealMatrix",
       "org.apache.commons.math3.genetics.InvalidRepresentationException",
       "org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction",
       "org.apache.commons.math3.genetics.RandomKey",
       "org.apache.commons.math3.distribution.UniformIntegerDistribution",
       "org.apache.commons.math3.geometry.partitioning.Hyperplane",
       "org.apache.commons.math3.geometry.partitioning.utilities.AVLTree",
       "org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats",
       "org.apache.commons.math3.random.ISAACRandom",
       "org.apache.commons.math3.fraction.FractionFormat",
       "org.apache.commons.math3.ode.MultistepIntegrator",
       "org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator",
       "org.apache.commons.math3.genetics.Chromosome",
       "org.apache.commons.math3.genetics.BinaryChromosome",
       "org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator",
       "org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm",
       "org.apache.commons.math3.linear.NonSymmetricMatrixException",
       "org.apache.commons.math3.analysis.function.Log1p",
       "org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor",
       "org.apache.commons.math3.util.FastMath$CodyWaite",
       "org.apache.commons.math3.analysis.integration.UnivariateIntegrator",
       "org.apache.commons.math3.linear.AbstractRealMatrix",
       "org.apache.commons.math3.exception.DimensionMismatchException",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper",
       "org.apache.commons.math3.analysis.solvers.LaguerreSolver",
       "org.apache.commons.math3.optimization.linear.SimplexTableau",
       "org.apache.commons.math3.ode.ParameterJacobianWrapper",
       "org.apache.commons.math3.optim.PointVectorValuePair$DataTransferObject",
       "org.apache.commons.math3.ode.AbstractParameterizable",
       "org.apache.commons.math3.random.Well512a",
       "org.apache.commons.math3.linear.RRQRDecomposition",
       "org.apache.commons.math3.linear.RealVector$1",
       "org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer",
       "org.apache.commons.math3.linear.RealVector$2",
       "org.apache.commons.math3.distribution.CauchyDistribution",
       "org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer",
       "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform",
       "org.apache.commons.math3.analysis.function.Tanh",
       "org.apache.commons.math3.geometry.Space",
       "org.apache.commons.math3.ode.MultistepIntegrator$NordsieckTransformer",
       "org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey",
       "org.apache.commons.math3.optimization.BaseMultivariateVectorOptimizer",
       "org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization",
       "org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator",
       "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor",
       "org.apache.commons.math3.random.UnitSphereRandomVectorGenerator",
       "org.apache.commons.math3.ml.distance.CanberraDistance",
       "org.apache.commons.math3.ml.clustering.DoublePoint",
       "org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction",
       "org.apache.commons.math3.optim.nonlinear.vector.Target",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
       "org.apache.commons.math3.linear.JacobiPreconditioner$1",
       "org.apache.commons.math3.transform.RealTransformer",
       "org.apache.commons.math3.exception.NotStrictlyPositiveException",
       "org.apache.commons.math3.distribution.RealDistribution",
       "org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric",
       "org.apache.commons.math3.optim.MaxIter",
       "org.apache.commons.math3.random.Well1024a",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma",
       "org.apache.commons.math3.util.MathArrays$Function",
       "org.apache.commons.math3.optimization.PointVectorValuePair",
       "org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter",
       "org.apache.commons.math3.analysis.FunctionUtils$6$1",
       "org.apache.commons.math3.distribution.AbstractRealDistribution",
       "org.apache.commons.math3.random.Well44497b",
       "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
       "org.apache.commons.math3.random.Well44497a",
       "org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizer",
       "org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker",
       "org.apache.commons.math3.random.RandomData",
       "org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane",
       "org.apache.commons.math3.optimization.SimpleVectorValueChecker",
       "org.apache.commons.math3.distribution.TDistribution",
       "org.apache.commons.math3.genetics.AbstractListChromosome",
       "org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple",
       "org.apache.commons.math3.analysis.solvers.DifferentiableUnivariateSolver",
       "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer",
       "org.apache.commons.math3.ode.ODEIntegrator",
       "org.apache.commons.math3.distribution.PoissonDistribution",
       "org.apache.commons.math3.exception.util.DummyLocalizable",
       "org.apache.commons.math3.ode.JacobianMatrices$MismatchedEquations",
       "org.apache.commons.math3.ode.AbstractIntegrator$1",
       "org.apache.commons.math3.analysis.function.Power",
       "org.apache.commons.math3.Field",
       "org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer",
       "org.apache.commons.math3.analysis.function.Asin",
       "org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector",
       "org.apache.commons.math3.ode.nonstiff.GillStepInterpolator",
       "org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger",
       "org.apache.commons.math3.ode.sampling.DummyStepHandler",
       "org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$1",
       "org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2",
       "org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3",
       "org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory",
       "org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4",
       "org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5",
       "org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction",
       "org.apache.commons.math3.random.EmpiricalDistribution$1",
       "org.apache.commons.math3.analysis.FunctionUtils",
       "org.apache.commons.math3.ode.sampling.StepNormalizerBounds",
       "org.apache.commons.math3.optim.PointValuePair",
       "org.apache.commons.math3.genetics.TournamentSelection$1",
       "org.apache.commons.math3.random.RandomVectorGenerator",
       "org.apache.commons.math3.linear.QRDecomposition$1",
       "org.apache.commons.math3.distribution.BetaDistribution",
       "org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver",
       "org.apache.commons.math3.exception.NotFiniteNumberException",
       "org.apache.commons.math3.analysis.interpolation.SplineInterpolator",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex",
       "org.apache.commons.math3.geometry.partitioning.Side",
       "org.apache.commons.math3.geometry.euclidean.oned.Interval",
       "org.apache.commons.math3.stat.descriptive.moment.VectorialMean",
       "org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator",
       "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet",
       "org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper",
       "org.apache.commons.math3.analysis.function.Sqrt",
       "org.apache.commons.math3.primes.PollardRho",
       "org.apache.commons.math3.fraction.FractionField$1",
       "org.apache.commons.math3.optimization.direct.CMAESOptimizer$Sigma",
       "org.apache.commons.math3.analysis.function.Min",
       "org.apache.commons.math3.optimization.linear.LinearOptimizer",
       "org.apache.commons.math3.linear.SingularOperatorException",
       "org.apache.commons.math3.util.FastMath$ExpFracTable",
       "org.apache.commons.math3.stat.ranking.NaturalRanking",
       "org.apache.commons.math3.ode.nonstiff.MidpointIntegrator",
       "org.apache.commons.math3.distribution.PascalDistribution",
       "org.apache.commons.math3.complex.ComplexField$LazyHolder",
       "org.apache.commons.math3.analysis.interpolation.HermiteInterpolator",
       "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform",
       "org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator",
       "org.apache.commons.math3.stat.descriptive.rank.Max",
       "org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry",
       "org.apache.commons.math3.optimization.BaseMultivariateOptimizer",
       "org.apache.commons.math3.exception.util.ExceptionContext",
       "org.apache.commons.math3.optim.ConvergenceChecker",
       "org.apache.commons.math3.stat.clustering.Cluster",
       "org.apache.commons.math3.optimization.linear.Relationship$1",
       "org.apache.commons.math3.optim.SimpleVectorValueChecker",
       "org.apache.commons.math3.optim.univariate.UnivariatePointValuePair",
       "org.apache.commons.math3.geometry.partitioning.RegionFactory",
       "org.apache.commons.math3.analysis.DifferentiableMultivariateFunction",
       "org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator",
       "org.apache.commons.math3.stat.Frequency",
       "org.apache.commons.math3.optimization.SimpleBounds",
       "org.apache.commons.math3.random.ValueServer",
       "org.apache.commons.math3.optimization.direct.BOBYQAOptimizer",
       "org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$1",
       "org.apache.commons.math3.analysis.function.Sigmoid",
       "org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator",
       "org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy",
       "org.apache.commons.math3.genetics.NPointCrossover",
       "org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter",
       "org.apache.commons.math3.linear.RealMatrixFormat",
       "org.apache.commons.math3.distribution.UniformRealDistribution",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer",
       "org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter",
       "org.apache.commons.math3.geometry.partitioning.Transform",
       "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula",
       "org.apache.commons.math3.optim.PointVectorValuePair",
       "org.apache.commons.math3.exception.NoDataException",
       "org.apache.commons.math3.analysis.UnivariateFunction",
       "org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus",
       "org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator",
       "org.apache.commons.math3.geometry.partitioning.BSPTree$1",
       "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
       "org.apache.commons.math3.random.JDKRandomGenerator",
       "org.apache.commons.math3.genetics.MutationPolicy",
       "org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver",
       "org.apache.commons.math3.genetics.Fitness",
       "org.apache.commons.math3.linear.OpenMapRealMatrix",
       "org.apache.commons.math3.optim.SimpleValueChecker",
       "org.apache.commons.math3.genetics.ChromosomePair",
       "org.apache.commons.math3.util.MathArrays$OrderDirection",
       "org.apache.commons.math3.optimization.fitting.GaussianFitter$1",
       "org.apache.commons.math3.linear.FieldMatrixPreservingVisitor",
       "org.apache.commons.math3.linear.DecompositionSolver",
       "org.apache.commons.math3.ode.Parameterizable",
       "org.apache.commons.math3.stat.descriptive.moment.Kurtosis",
       "org.apache.commons.math3.ode.MultistepIntegrator$1",
       "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP$1",
       "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$1",
       "org.apache.commons.math3.util.Decimal64Field",
       "org.apache.commons.math3.distribution.EnumeratedDistribution",
       "org.apache.commons.math3.exception.util.Localizable",
       "org.apache.commons.math3.analysis.solvers.LaguerreSolver$1",
       "org.apache.commons.math3.stat.regression.SimpleRegression",
       "org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2",
       "org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1",
       "org.apache.commons.math3.fraction.BigFractionField$LazyHolder",
       "org.apache.commons.math3.fraction.BigFractionField",
       "org.apache.commons.math3.random.NormalizedRandomGenerator",
       "org.apache.commons.math3.genetics.UniformCrossover",
       "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
       "org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor",
       "org.apache.commons.math3.linear.RealVector",
       "org.apache.commons.math3.util.DefaultTransformer",
       "org.apache.commons.math3.exception.MathArithmeticException",
       "org.apache.commons.math3.analysis.solvers.PolynomialSolver",
       "org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution",
       "org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException",
       "org.apache.commons.math3.stat.correlation.SpearmansCorrelation",
       "org.apache.commons.math3.analysis.differentiation.DSCompiler",
       "org.apache.commons.math3.linear.SparseFieldMatrix",
       "org.apache.commons.math3.random.CorrelatedRandomVectorGenerator",
       "org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution",
       "org.apache.commons.math3.genetics.FixedElapsedTime",
       "org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer",
       "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
       "org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1",
       "org.apache.commons.math3.analysis.function.Sinc",
       "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch",
       "org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer",
       "org.apache.commons.math3.genetics.CycleCrossover",
       "org.apache.commons.math3.util.FastMath",
       "org.apache.commons.math3.optim.linear.SimplexSolver",
       "org.apache.commons.math3.optim.BaseMultivariateOptimizer",
       "org.apache.commons.math3.optimization.linear.LinearObjectiveFunction",
       "org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction",
       "org.apache.commons.math3.geometry.partitioning.BSPTree",
       "org.apache.commons.math3.util.Decimal64",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter",
       "org.apache.commons.math3.genetics.SelectionPolicy",
       "org.apache.commons.math3.linear.RealMatrix",
       "org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter",
       "org.apache.commons.math3.analysis.function.Sinh",
       "org.apache.commons.math3.optim.MaxEval",
       "org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$1",
       "org.apache.commons.math3.util.IterationManager",
       "org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1",
       "org.apache.commons.math3.linear.EigenDecomposition$1",
       "org.apache.commons.math3.util.MathArrays",
       "org.apache.commons.math3.ode.events.Transformer$4",
       "org.apache.commons.math3.ode.events.Transformer$3",
       "org.apache.commons.math3.ode.events.Transformer$5",
       "org.apache.commons.math3.transform.DftNormalization",
       "org.apache.commons.math3.transform.FastCosineTransformer",
       "org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback",
       "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
       "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner",
       "org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint",
       "org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner",
       "org.apache.commons.math3.ode.events.Transformer$2",
       "org.apache.commons.math3.filter.ProcessModel",
       "org.apache.commons.math3.ode.events.Transformer$1",
       "org.apache.commons.math3.dfp.DfpMath",
       "org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix",
       "org.apache.commons.math3.optimization.PointValuePair$DataTransferObject",
       "org.apache.commons.math3.analysis.function.Expm1",
       "org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow",
       "org.apache.commons.math3.analysis.function.Subtract",
       "org.apache.commons.math3.optimization.direct.PowellOptimizer",
       "org.apache.commons.math3.linear.IterativeLinearSolverEvent",
       "org.apache.commons.math3.exception.util.LocalizedFormats",
       "org.apache.commons.math3.analysis.function.Floor",
       "org.apache.commons.math3.ode.events.EventHandler$Action",
       "org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver",
       "org.apache.commons.math3.ml.clustering.Clusterer",
       "org.apache.commons.math3.stat.descriptive.SummaryStatistics",
       "org.apache.commons.math3.stat.descriptive.moment.SecondMoment",
       "org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent",
       "org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder",
       "org.apache.commons.math3.optimization.InitialGuess",
       "org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D",
       "org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction",
       "org.apache.commons.math3.geometry.partitioning.SubHyperplane",
       "org.apache.commons.math3.analysis.function.Max",
       "org.apache.commons.math3.stat.descriptive.rank.Min",
       "org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException",
       "org.apache.commons.math3.analysis.interpolation.NevilleInterpolator",
       "org.apache.commons.math3.geometry.euclidean.twod.Segment",
       "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer",
       "org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1",
       "org.apache.commons.math3.genetics.GeneticAlgorithm",
       "org.apache.commons.math3.ode.ExpandableStatefulODE",
       "org.apache.commons.math3.analysis.interpolation.MultivariateInterpolator",
       "org.apache.commons.math3.analysis.function.Cbrt",
       "org.apache.commons.math3.random.AbstractWell",
       "org.apache.commons.math3.filter.MeasurementModel",
       "org.apache.commons.math3.stat.descriptive.summary.Product",
       "org.apache.commons.math3.exception.NotPositiveException",
       "org.apache.commons.math3.stat.regression.ModelSpecificationException",
       "org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1",
       "org.apache.commons.math3.stat.regression.MillerUpdatingRegression",
       "org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer",
       "org.apache.commons.math3.optimization.direct.AbstractSimplex",
       "org.apache.commons.math3.analysis.MultivariateVectorFunction",
       "org.apache.commons.math3.analysis.function.Signum",
       "org.apache.commons.math3.exception.NumberIsTooLargeException",
       "org.apache.commons.math3.random.Well19937c",
       "org.apache.commons.math3.linear.SchurTransformer$ShiftInfo",
       "org.apache.commons.math3.optimization.fitting.HarmonicFitter",
       "org.apache.commons.math3.genetics.ListPopulation",
       "org.apache.commons.math3.fraction.AbstractFormat",
       "org.apache.commons.math3.analysis.MultivariateFunction",
       "org.apache.commons.math3.dfp.Dfp$1",
       "org.apache.commons.math3.random.Well19937a",
       "org.apache.commons.math3.stat.descriptive.summary.SumOfLogs",
       "org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver",
       "org.apache.commons.math3.optim.PointValuePair$DataTransferObject",
       "org.apache.commons.math3.linear.RRQRDecomposition$Solver",
       "org.apache.commons.math3.random.RandomAdaptor",
       "org.apache.commons.math3.ml.distance.ChebyshevDistance",
       "org.apache.commons.math3.optimization.fitting.WeightedObservedPoint",
       "org.apache.commons.math3.linear.SingularMatrixException",
       "org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException",
       "org.apache.commons.math3.util.OpenIntToFieldHashMap",
       "org.apache.commons.math3.analysis.solvers.AllowedSolution",
       "org.apache.commons.math3.geometry.partitioning.BoundaryAttribute",
       "org.apache.commons.math3.stat.descriptive.moment.Mean",
       "org.apache.commons.math3.linear.OpenMapRealVector",
       "org.apache.commons.math3.analysis.interpolation.BivariateGridInterpolator",
       "org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator",
       "org.apache.commons.math3.distribution.ExponentialDistribution",
       "org.apache.commons.math3.optim.InitialGuess",
       "org.apache.commons.math3.ode.FirstOrderDifferentialEquations",
       "org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor",
       "org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator",
       "org.apache.commons.math3.exception.MultiDimensionMismatchException",
       "org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node",
       "org.apache.commons.math3.util.Incrementor",
       "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
       "org.apache.commons.math3.transform.FastFourierTransformer$1",
       "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
       "org.apache.commons.math3.analysis.function.Identity",
       "org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor",
       "org.apache.commons.math3.ode.sampling.FixedStepHandler",
       "org.apache.commons.math3.ode.sampling.AbstractStepInterpolator",
       "org.apache.commons.math3.random.RandomGenerator",
       "org.apache.commons.math3.distribution.ZipfDistribution",
       "org.apache.commons.math3.exception.NullArgumentException",
       "org.apache.commons.math3.geometry.partitioning.RegionFactory$1",
       "org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "org.openjdk.jmh:jmh-generator-annprocess:jar:1.7.1:test",
    "coordinates": "org.openjdk.jmh:jmh-generator-annprocess:1.7.1",
    "groupId": "org.openjdk.jmh",
    "artifactId": "jmh-generator-annprocess",
    "version": "1.7.1",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 30980,
    "type": "direct",
    "status": "bloated",
    "parent": "org.greencheek.caching:herdcache:jar:1.0.23",
    "allTypes": [
     "org.openjdk.jmh.generators.annotations.APMethodInfo",
     "org.openjdk.jmh.generators.annotations.APMetadataInfo",
     "org.openjdk.jmh.generators.annotations.APParameterInfo",
     "org.openjdk.jmh.generators.annotations.APGeneratorSource$1",
     "org.openjdk.jmh.generators.annotations.APFieldInfo",
     "org.openjdk.jmh.generators.annotations.APGeneratorDestinaton",
     "org.openjdk.jmh.generators.BenchmarkProcessor",
     "org.openjdk.jmh.generators.annotations.APGeneratorSource",
     "org.openjdk.jmh.generators.annotations.APClassInfo"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "org.openjdk.jmh:jmh-core:jar:1.7.1:test",
      "coordinates": "org.openjdk.jmh:jmh-core:1.7.1",
      "groupId": "org.openjdk.jmh",
      "artifactId": "jmh-core",
      "version": "1.7.1",
      "scope": "test",
      "packaging": "jar",
      "omitted": true,
      "size": 436991,
      "type": "direct",
      "status": "used",
      "parent": "org.openjdk.jmh:jmh-generator-annprocess:jar:1.7.1:test",
      "allTypes": [
       "org.openjdk.jmh.profile.LinuxPerfNormProfiler$PerfResult",
       "org.openjdk.jmh.profile.ExternalProfiler",
       "org.openjdk.jmh.annotations.Group",
       "org.openjdk.jmh.results.format.ResultFormat",
       "org.openjdk.jmh.infra.Blackhole",
       "org.openjdk.jmh.infra.ThreadParams",
       "org.openjdk.jmh.results.format.ResultFormatFactory$2",
       "org.openjdk.jmh.results.format.ResultFormatFactory$1",
       "org.openjdk.jmh.infra.Control",
       "org.openjdk.jmh.Main",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$ASMLine",
       "org.openjdk.jmh.generators.core.SourceElementError",
       "org.openjdk.jmh.runner.WorkerThreadFactory",
       "org.openjdk.jmh.results.SampleTimeResult",
       "org.openjdk.jmh.profile.StackProfiler",
       "org.openjdk.jmh.util.AbstractStatistics",
       "org.openjdk.jmh.annotations.TearDown",
       "org.openjdk.jmh.util.Utils$BurningTask",
       "org.openjdk.jmh.profile.StackProfiler$StackRecord",
       "org.openjdk.jmh.runner.RunnerException",
       "org.openjdk.jmh.profile.LinuxPerfNormProfiler",
       "org.openjdk.jmh.util.Multiset",
       "org.openjdk.jmh.util.ListStatistics",
       "org.openjdk.jmh.runner.link.BinaryLinkServer$1",
       "org.openjdk.jmh.runner.link.ExceptionFrame",
       "org.openjdk.jmh.generators.core.FileSystemDestination",
       "org.openjdk.jmh.results.format.ResultFormatType",
       "org.openjdk.jmh.util.Multisets",
       "org.openjdk.jmh.runner.ActionMode",
       "org.openjdk.jmh.util.Version",
       "org.openjdk.jmh.profile.Profiler",
       "org.openjdk.jmh.profile.LinuxPerfProfiler",
       "org.openjdk.jmh.results.BenchmarkResultMetaData",
       "org.openjdk.jmh.runner.BenchmarkListEntry",
       "org.openjdk.jmh.results.Result$1",
       "org.openjdk.jmh.runner.WorkloadParams",
       "org.openjdk.jmh.runner.options.CommandLineOptions",
       "org.openjdk.jmh.infra.IterationParamsL0",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$PerfResult",
       "org.openjdk.jmh.annotations.Measurement",
       "org.openjdk.jmh.runner.ForkedMain$HangupThread",
       "org.openjdk.jmh.runner.ActionPlan$1",
       "org.openjdk.jmh.runner.Action",
       "org.openjdk.jmh.runner.link.InfraFrame",
       "org.openjdk.jmh.util.Statistics",
       "org.openjdk.jmh.infra.BenchmarkParams",
       "org.openjdk.jmh.runner.link.ClassConventions",
       "org.openjdk.jmh.infra.IterationParamsL2",
       "org.openjdk.jmh.infra.IterationParamsL1",
       "org.openjdk.jmh.generators.core.SourceThrowableError",
       "org.openjdk.jmh.infra.IterationParamsL4",
       "org.openjdk.jmh.infra.IterationParamsL3",
       "org.openjdk.jmh.runner.ForkedMain",
       "org.openjdk.jmh.util.Utils",
       "org.openjdk.jmh.profile.WinPerfAsmProfiler",
       "org.openjdk.jmh.runner.ForkedMain$ShutdownTimeoutThread",
       "org.openjdk.jmh.results.BenchmarkResult",
       "org.openjdk.jmh.runner.options.OptionFormatter",
       "org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask",
       "org.openjdk.jmh.runner.link.ActionPlanFrame",
       "org.openjdk.jmh.generators.core.ClassInfo",
       "org.openjdk.jmh.annotations.Fork",
       "org.openjdk.jmh.util.Optional",
       "org.openjdk.jmh.annotations.BenchmarkMode",
       "org.openjdk.jmh.util.HashMultimap",
       "org.openjdk.jmh.profile.StackProfiler$1",
       "org.openjdk.jmh.profile.HotspotClassloadingProfiler",
       "org.openjdk.jmh.util.Optional$Unmarshaller",
       "org.openjdk.jmh.results.IterationResult",
       "org.openjdk.jmh.annotations.CompilerControl$Mode",
       "org.openjdk.jmh.annotations.GroupThreads",
       "org.openjdk.jmh.runner.link.OutputFrame$Type",
       "org.openjdk.jmh.util.Deduplicator",
       "org.openjdk.jmh.results.AggregationPolicy",
       "org.openjdk.jmh.runner.InfraControl",
       "org.openjdk.jmh.generators.core.SourceElementWarning",
       "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType",
       "org.openjdk.jmh.util.TreeMultiset",
       "org.openjdk.jmh.runner.BenchmarkHandler$2",
       "org.openjdk.jmh.runner.BenchmarkHandler$1",
       "org.openjdk.jmh.profile.StackProfiler$StackResult$1",
       "org.openjdk.jmh.runner.BenchmarkListEntry$9",
       "org.openjdk.jmh.util.MultisetStatistics",
       "org.openjdk.jmh.runner.BenchmarkListEntry$4",
       "org.openjdk.jmh.profile.StackProfiler$StackResult",
       "org.openjdk.jmh.runner.BenchmarkListEntry$3",
       "org.openjdk.jmh.runner.BenchmarkListEntry$2",
       "org.openjdk.jmh.runner.BenchmarkListEntry$1",
       "org.openjdk.jmh.results.SingleShotResult",
       "org.openjdk.jmh.runner.BenchmarkListEntry$8",
       "org.openjdk.jmh.profile.LinuxPerfProfiler$PerfResult",
       "org.openjdk.jmh.runner.BenchmarkListEntry$7",
       "org.openjdk.jmh.runner.link.BinaryLinkServer$Acceptor",
       "org.openjdk.jmh.runner.BenchmarkListEntry$6",
       "org.openjdk.jmh.runner.ForkedMain$1",
       "org.openjdk.jmh.runner.BenchmarkListEntry$5",
       "org.openjdk.jmh.profile.StackProfiler$StackResultAggregator",
       "org.openjdk.jmh.results.SingleShotResult$AveragingAggregator",
       "org.openjdk.jmh.runner.options.VerboseMode",
       "org.openjdk.jmh.generators.core.SourceWarning",
       "org.openjdk.jmh.infra.BenchmarkParamsL4",
       "org.openjdk.jmh.infra.BenchmarkParamsL3",
       "org.openjdk.jmh.infra.BenchmarkParamsL2",
       "org.openjdk.jmh.infra.BenchmarkParamsL1",
       "org.openjdk.jmh.generators.core.Identifiers",
       "org.openjdk.jmh.runner.link.BinaryLinkClient$ForwardingPrintStream$1",
       "org.openjdk.jmh.util.Optional$Marshaller",
       "org.openjdk.jmh.runner.format.OutputFormatFactory",
       "org.openjdk.jmh.generators.core.BenchmarkInfo",
       "org.openjdk.jmh.generators.core.GeneratorSource",
       "org.openjdk.jmh.util.NullOutputStream",
       "org.openjdk.jmh.generators.core.HelperMethodInvocation",
       "org.openjdk.jmh.profile.StackProfiler$SamplingTask",
       "org.openjdk.jmh.infra.BenchmarkParamsL0",
       "org.openjdk.jmh.annotations.OperationsPerInvocation",
       "org.openjdk.jmh.runner.link.ResultMetadataFrame",
       "org.openjdk.jmh.results.format.LaTeXResultFormat",
       "org.openjdk.jmh.profile.ProfilerResult$1",
       "org.openjdk.jmh.runner.AbstractResourceReader",
       "org.openjdk.jmh.profile.LinuxPerfNormProfiler$PerfResultAggregator",
       "org.openjdk.jmh.runner.CompilerHints",
       "org.openjdk.jmh.generators.core.GeneratorDestination",
       "org.openjdk.jmh.generators.core.HelperType",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$Region",
       "org.openjdk.jmh.generators.core.StateObjectHandler",
       "org.openjdk.jmh.profile.GCProfiler",
       "org.openjdk.jmh.profile.LinuxPerfAsmProfiler",
       "org.openjdk.jmh.generators.core.StateObject",
       "org.openjdk.jmh.generators.core.StateObjectHandler$1",
       "org.openjdk.jmh.runner.options.CommandLineOptionException",
       "org.openjdk.jmh.util.ClassUtils",
       "org.openjdk.jmh.generators.core.MethodInvocation",
       "org.openjdk.jmh.profile.HotspotThreadProfiler",
       "org.openjdk.jmh.util.SampleBuffer",
       "org.openjdk.jmh.runner.format.OutputFormatFactory$1",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$PerfResultAggregator",
       "org.openjdk.jmh.runner.BaseRunner$1",
       "org.openjdk.jmh.runner.BaseRunner$2",
       "org.openjdk.jmh.generators.core.MethodInfo",
       "org.openjdk.jmh.runner.options.ChainedOptionsBuilder",
       "org.openjdk.jmh.runner.ForkedRunner",
       "org.openjdk.jmh.results.format.XSVResultFormat",
       "org.openjdk.jmh.results.HandlerResult",
       "org.openjdk.jmh.runner.format.OutputFormat",
       "org.openjdk.jmh.generators.core.Paddings",
       "org.openjdk.jmh.runner.Defaults",
       "org.openjdk.jmh.util.FileUtils",
       "org.openjdk.jmh.runner.BenchmarkList",
       "org.openjdk.jmh.util.Multimap",
       "org.openjdk.jmh.util.SingletonStatistics",
       "org.openjdk.jmh.generators.core.SourceError",
       "org.openjdk.jmh.profile.ProfilerResultAggregator",
       "org.openjdk.jmh.runner.BenchmarkException",
       "org.openjdk.jmh.runner.WorkloadParams$Value",
       "org.openjdk.jmh.runner.format.TextReportFormat$1",
       "org.openjdk.jmh.runner.options.OptionsBuilder",
       "org.openjdk.jmh.results.AggregatorUtils",
       "org.openjdk.jmh.infra.IterationParams",
       "org.openjdk.jmh.runner.link.FinishingFrame",
       "org.openjdk.jmh.runner.link.OutputFormatFrame",
       "org.openjdk.jmh.runner.link.BinaryLinkClient",
       "org.openjdk.jmh.runner.link.BinaryLinkServer$Handler",
       "org.openjdk.jmh.runner.options.Options",
       "org.openjdk.jmh.profile.ProfilerResult",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$KernelRegion",
       "org.openjdk.jmh.infra.ControlL1",
       "org.openjdk.jmh.infra.ControlL2",
       "org.openjdk.jmh.runner.options.WarmupMode",
       "org.openjdk.jmh.annotations.Scope",
       "org.openjdk.jmh.infra.ControlL0",
       "org.openjdk.jmh.profile.InternalProfiler",
       "org.openjdk.jmh.infra.ControlL3",
       "org.openjdk.jmh.runner.BenchmarkListEntry$10",
       "org.openjdk.jmh.infra.ControlL4",
       "org.openjdk.jmh.profile.AbstractHotspotProfiler$HotspotInternalResult",
       "org.openjdk.jmh.results.ResultRole",
       "org.openjdk.jmh.annotations.AuxCounters",
       "org.openjdk.jmh.results.RunResult$1",
       "org.openjdk.jmh.results.AverageTimeResult",
       "org.openjdk.jmh.generators.core.BenchmarkGenerator$1",
       "org.openjdk.jmh.results.SampleTimeResult$JoiningAggregator",
       "org.openjdk.jmh.results.BenchmarkTaskResult",
       "org.openjdk.jmh.runner.Runner",
       "org.openjdk.jmh.annotations.Threads",
       "org.openjdk.jmh.results.format.ResultFormatFactory",
       "org.openjdk.jmh.results.Result",
       "org.openjdk.jmh.runner.IterationResultAcceptor",
       "org.openjdk.jmh.generators.core.SourceThrowableWarning",
       "org.openjdk.jmh.results.AverageTimeResult$ResultAggregator",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$1",
       "org.openjdk.jmh.results.format.TextResultFormat",
       "org.openjdk.jmh.runner.format.TextReportFormat",
       "org.openjdk.jmh.runner.link.ResultsFrame",
       "org.openjdk.jmh.annotations.Mode",
       "org.openjdk.jmh.profile.HotspotMemoryProfiler",
       "org.openjdk.jmh.generators.core.StateObject$1",
       "org.openjdk.jmh.infra.BlackholeL3",
       "org.openjdk.jmh.infra.BlackholeL4",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$Assembly",
       "org.openjdk.jmh.results.format.JSONResultFormat",
       "org.openjdk.jmh.infra.BlackholeL1",
       "org.openjdk.jmh.runner.OutputFormatAdapter",
       "org.openjdk.jmh.infra.BlackholeL2",
       "org.openjdk.jmh.runner.ForkedRunner$1",
       "org.openjdk.jmh.infra.BlackholeL0",
       "org.openjdk.jmh.generators.core.BenchmarkGeneratorUtils",
       "org.openjdk.jmh.profile.AbstractHotspotProfiler",
       "org.openjdk.jmh.generators.core.MetadataInfo",
       "org.openjdk.jmh.annotations.Timeout",
       "org.openjdk.jmh.util.Multisets$2",
       "org.openjdk.jmh.util.Multisets$1",
       "org.openjdk.jmh.annotations.Level",
       "org.openjdk.jmh.profile.HotspotRuntimeProfiler",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$GeneratedRegion",
       "org.openjdk.jmh.annotations.CompilerControl",
       "org.openjdk.jmh.results.Aggregator",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$PerfEvents",
       "org.openjdk.jmh.runner.Runner$1",
       "org.openjdk.jmh.runner.ActionType",
       "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$4",
       "org.openjdk.jmh.generators.core.ParameterInfo",
       "org.openjdk.jmh.runner.link.BinaryLinkClient$ForwardingPrintStream",
       "org.openjdk.jmh.runner.link.BinaryLinkClient$1",
       "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$5",
       "org.openjdk.jmh.results.RunResult",
       "org.openjdk.jmh.runner.link.HandshakeInitFrame",
       "org.openjdk.jmh.runner.format.AbstractOutputFormat",
       "org.openjdk.jmh.runner.ActionPlan",
       "org.openjdk.jmh.annotations.Warmup",
       "org.openjdk.jmh.util.HashMultiset",
       "org.openjdk.jmh.runner.link.BinaryLinkServer",
       "org.openjdk.jmh.util.InputStreamDrainer",
       "org.openjdk.jmh.annotations.OutputTimeUnit",
       "org.openjdk.jmh.util.ScoreFormatter",
       "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$2",
       "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$3",
       "org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$1",
       "org.openjdk.jmh.runner.IterationType",
       "org.openjdk.jmh.runner.link.HandshakeResponseFrame",
       "org.openjdk.jmh.generators.core.CompilerControlPlugin",
       "org.openjdk.jmh.runner.format.SilentFormat",
       "org.openjdk.jmh.annotations.Setup",
       "org.openjdk.jmh.generators.core.MethodGroup",
       "org.openjdk.jmh.annotations.Param",
       "org.openjdk.jmh.util.TreeMultimap",
       "org.openjdk.jmh.generators.core.CompilerControlPlugin$1",
       "org.openjdk.jmh.profile.HotspotCompilationProfiler",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler$NativeRegion",
       "org.openjdk.jmh.generators.core.BenchmarkGenerator",
       "org.openjdk.jmh.runner.NoBenchmarksException",
       "org.openjdk.jmh.runner.ForkedRunner$SavedIOException",
       "org.openjdk.jmh.results.ThroughputResult",
       "org.openjdk.jmh.generators.core.BenchmarkGeneratorSession",
       "org.openjdk.jmh.results.ThroughputResult$ThroughputAggregator",
       "org.openjdk.jmh.runner.link.InfraFrame$Type",
       "org.openjdk.jmh.util.UnCloseablePrintStream",
       "org.openjdk.jmh.util.Multisets$Pair",
       "org.openjdk.jmh.runner.BenchmarkHandler",
       "org.openjdk.jmh.util.HashsetMultimap",
       "org.openjdk.jmh.results.RawResults",
       "org.openjdk.jmh.profile.CompilerProfiler",
       "org.openjdk.jmh.runner.options.TimeValue$1",
       "org.openjdk.jmh.runner.BaseRunner",
       "org.openjdk.jmh.infra.ThreadParamsL1",
       "org.openjdk.jmh.annotations.State",
       "org.openjdk.jmh.runner.link.OutputFrame",
       "org.openjdk.jmh.infra.ThreadParamsL0",
       "org.openjdk.jmh.infra.ThreadParamsL3",
       "org.openjdk.jmh.annotations.Benchmark",
       "org.openjdk.jmh.infra.ThreadParamsL2",
       "org.openjdk.jmh.generators.core.Identifiers$1",
       "org.openjdk.jmh.generators.core.GenerationException",
       "org.openjdk.jmh.infra.ThreadParamsL4",
       "org.openjdk.jmh.runner.InfraControlL4",
       "org.openjdk.jmh.profile.AbstractPerfAsmProfiler",
       "org.openjdk.jmh.profile.ProfilerFactory",
       "org.openjdk.jmh.runner.InfraControlL3",
       "org.openjdk.jmh.runner.options.TimeValue",
       "org.openjdk.jmh.generators.core.FieldInfo",
       "org.openjdk.jmh.profile.LinuxPerfProfiler$PerfResultAggregator",
       "org.openjdk.jmh.runner.InfraControlL2",
       "org.openjdk.jmh.runner.InfraControlL1",
       "org.openjdk.jmh.runner.InfraControlL0",
       "org.openjdk.jmh.profile.ClassloaderProfiler"
      ],
      "usedTypes": [
       "org.openjdk.jmh.annotations.BenchmarkMode",
       "org.openjdk.jmh.infra.Blackhole",
       "org.openjdk.jmh.infra.ThreadParams",
       "org.openjdk.jmh.annotations.Scope",
       "org.openjdk.jmh.util.SampleBuffer",
       "org.openjdk.jmh.results.ResultRole",
       "org.openjdk.jmh.results.SampleTimeResult",
       "org.openjdk.jmh.infra.BenchmarkParams",
       "org.openjdk.jmh.runner.options.ChainedOptionsBuilder",
       "org.openjdk.jmh.results.AverageTimeResult",
       "org.openjdk.jmh.annotations.TearDown",
       "org.openjdk.jmh.runner.InfraControl",
       "org.openjdk.jmh.results.BenchmarkTaskResult",
       "org.openjdk.jmh.runner.Runner",
       "org.openjdk.jmh.results.RawResults",
       "org.openjdk.jmh.runner.RunnerException",
       "org.openjdk.jmh.annotations.Setup",
       "org.openjdk.jmh.annotations.Mode",
       "org.openjdk.jmh.annotations.State",
       "org.openjdk.jmh.annotations.Benchmark",
       "org.openjdk.jmh.results.format.ResultFormatType",
       "org.openjdk.jmh.runner.options.OptionsBuilder",
       "org.openjdk.jmh.infra.IterationParams",
       "org.openjdk.jmh.results.SingleShotResult",
       "org.openjdk.jmh.runner.options.VerboseMode",
       "org.openjdk.jmh.results.ThroughputResult",
       "org.openjdk.jmh.runner.options.Options"
      ],
      "usageRatio": 0.09507042253521127,
      "children": []
     }
    ]
   }
  ]
 }
}