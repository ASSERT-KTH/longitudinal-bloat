{
 "usage": {
  "org.assertj.core.extractor.ToStringExtractorTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.introspection.FieldSupport_isAllowedToReadField_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.LongArraysBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.boolean_.AtomicBooleanAssert_isFalse_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.AbstractTemporalAssert_isCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test",
    "org.junit.runners.Parameterized$Parameter"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_hasNotFailed_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_hasOnlyOneElementSatisfying_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_involving_iterable_navigation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.AfterClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_hasNoNullFieldsOrProperties_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotBe_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.error.ShouldContainKeys_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_isLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isEqualToIgnoringNanoseconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Iterator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsNotCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_noneMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsAfter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.presentation.NumberGrouping_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.data.Offset_built_with_Double_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.characters.Characters_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.WithAssertions_delegation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertContainsKey_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Files_newTemporaryFile_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeSubsetOf_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.util.IterableUtil_sizeOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optionaldouble.OptionalDoubleAssert_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_LocalDate_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.error.ShouldBeSubstringOf_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_isLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsNotPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.list.ListAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.characters.Characters_assertUpperCase_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Objects_areEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_filteredOnNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_filteredOn_not_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_asString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_isNotPresent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.filter.Filter_with_property_equals_to_null_value_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeAfterOrEqualsTo_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isAfterOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_hasFieldOrProperty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.BDDAssertions_then_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.reference.AtomicReferenceAssert_isNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isEqualToIgnoringHours_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.future.ShouldHaveFailed_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.AtomicMarkableReferenceAssert_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isAfterOrEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isBetweenSpecifyingBoundariesInclusion_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.MockPathsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertIsAbsolute_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.LongsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_allSatisfy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsSequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainOnlyKeys_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.future.ShouldNotHaveFailed_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.list.ListAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isNotIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_contains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsNotNaN_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Files_temporaryFolder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_areExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Java6JUnitBDDSoftAssertions$1": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.model.Statement",
    "org.junit.runners.model.MultipleFailureException"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isSameAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isNotIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.files.Files_assertExists_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsStrictlyBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_areNot_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_areAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_doesNotHaveValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.lists.Lists_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_isEqualToComparingOnlyGivenFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isNotEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsPattern_Pattern_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.error.ShouldHaveSameTime_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsCanonical_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasPort_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.AbstractTest_ComparatorBasedComparisonStrategy": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.fail.Fail_fail_withMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertHasSecond_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_containsSame_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_stringContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_contains_usingValueComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertAre_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_flatExtracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isNotCompleted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_containsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.assumptions.BaseAssumptionsRunnerTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_overridingErrorMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_are_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.navigation.ClassBasedNavigableIterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertIsAssignableFrom_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_flatExtracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.file.FileAssert_hasContent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_allMatch_with_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainPattern_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isBefore_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertCanRead_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsOne_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_allSatisfy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_catchThrowableOfType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.optionallong.OptionalLongAssert_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.list.ListAssert_usingElementComparatorIgnoringFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.predicate.PredicateAssert_accepts_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsNotOfClassIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_isNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThatExceptionOfType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.abstract_.SoftAssertionsErrorsCollectedTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isBefore_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_doesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.navigation.BaseNavigableListAssert_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.ComparableAssertion_should_be_flexible_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_are_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInSameMonthAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isAfter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeIn_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_hasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.condition.AnyOf_anyOf_with_Collection_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ElementsShouldBeAtMost_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.presentation.StandardRepresentation_iterable_format_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertHasSameHashCodeAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isIn_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasUserInfo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Diff_diff_File_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.rules.TemporaryFolder"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_usingComparatorForType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_filteredOn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveNoParent_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.AtomicLongArray_assertions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreNot_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.list.ListAssert_usingElementComparatorOnFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ]
  },
  "org.assertj.core.util.Strings_append_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Throwables_appendCurrentThreadStackTraceToThrowable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_arrayContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.diff.ChunkTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.BooleanArraysBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsNotCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doNothave_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.reference.AtomicReferenceAssert_overridingErrorMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_flatMap_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.diff.ChangeDeltaTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.MapEntry_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_usingElementComparatorIgnoringFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_contains_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertHasHourOfDay_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.FloatComparatorTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviderRunner"
   ]
  },
  "org.assertj.core.api.assumptions.Iterable_special_assertion_methods_in_assumptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runners.Parameterized$Parameters"
   ]
  },
  "org.assertj.core.error.ShouldContainSequenceOfCharSequence_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isEqualToIgnoringSeconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_iterableRemove_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isCompletedWithValueMatching_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_asList_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.assumptions.Map_special_assertion_methods_in_assumptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized$Parameters"
   ]
  },
  "org.assertj.core.api.Condition_constructor_with_text_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isStrictlyBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertEqualsNormalizingWhitespace_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.UseDataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviders"
   ]
  },
  "org.assertj.core.api.JUnitBDDSoftAssertions": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.model.Statement",
    "org.junit.rules.TestRule",
    "org.junit.runner.Description"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.ArrayWrapperList_get_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isNotIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.example.custom.CustomAsserts_filter_stacktrace_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.After",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Character_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.description.Description_mostRelevantDescription_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldNotContainOnlyWhitespaces_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsEqualToIgnoringNullFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsNotPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optionallong.OptionalLongAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isEqualToIgnoringNanoseconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.condition.MatchPredicateTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertHasMonth_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertBlank_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_NaN_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.Offset_equals_hashCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.DateAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.After",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldNotContainString_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.internal.util.collections.Sets"
   ]
  },
  "org.assertj.core.data.Percentage_equals_hashCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Arrays_asObjectArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.UseDataProvider"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_contains_usingFieldByFieldValueComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.ArrayWrapperList_size_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviderRunner"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsSequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainSequence_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.lists.Lists_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.list.ListAssert_usingFieldByFieldElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ]
  },
  "org.example.test.BDDSoftAssertionsLineNumberTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertHasSameClassAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.ThrowablesBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.BeforeClass",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_have_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertEndsWithFirstAndRest_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainOnlyDigits_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.comparables.Comparables_isStrictlyBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertIsFinal_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_matches_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.filter.Filter_with_property_in_given_values_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.experimental.theories.DataPoint",
    "org.junit.Assume"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.characters.Characters_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsSubsequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.description.TextDescription_equals_hashCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveMessageMatchingRegex_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.JUnitBDDSoftAssertions$1": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.model.Statement",
    "org.junit.runners.model.MultipleFailureException"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqualByComparison_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotContain_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_filtered_baseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isBeforeOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInSameYearAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasEntrySatisfyingConsumer_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.IgnoringFieldsComparator_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.BasicErrorMessageFactory_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.ArgumentMatchers",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isStrictlyBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_isEqualsToComparingFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.ConditionsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.BeforeClass",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Predicate_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.util.Strings_concat_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.BigDecimalComparatorTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DateUtil_format_with_date_time_with_ms_format_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsNaN_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.diff.DeleteDeltaTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DateUtil_toCalendar_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasOnlyElementsOfType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.error.ShouldNotBeInstance_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.util.Strings_quoteString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.future.ShouldBeDone_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_containsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ObjectAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isNotEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.util.DateUtil_hourOfDayOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.filter.Filter_on_different_properties_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_ShortArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeReadable_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualIgnoringCase_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.util.Arrays_isArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsNotCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.description.Description_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito",
    "org.mockito.stubbing.OngoingStubbing"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_LongStream_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isBeforeOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.filter.Filter_with_common_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_filteredOn_not_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.test.ExpectedException": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.model.Statement",
    "org.junit.rules.TestRule",
    "org.junit.rules.ExpectedException",
    "org.junit.runner.Description"
   ],
   "org.hamcrest:hamcrest-core:jar:1.3:provided": [
    "org.hamcrest.core.AllOf",
    "org.hamcrest.core.StringContains",
    "org.hamcrest.core.IsEqual",
    "org.hamcrest.core.StringEndsWith",
    "org.hamcrest.core.IsSame",
    "org.hamcrest.core.StringStartsWith",
    "org.hamcrest.Matcher"
   ]
  },
  "org.assertj.core.internal.comparables.Comparables_assertEqualByComparison_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optionaldouble.OptionalDoubleAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_usingRecursiveFieldByFieldElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isCancelled_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualByComparingFieldByFieldRecursively_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertHasMinute_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldHaveSameHashCode_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isNotEqualTo_errors_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.error.uri.ShouldHaveParameter_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertIsNotInterface_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.UrlsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_haveAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.diff.Delta_equals_hashCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotIn_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.condition.Not_matches_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.description.TextDescription_constructor_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test",
    "org.junit.rules.ExpectedException"
   ]
  },
  "org.assertj.core.internal.conditions.Conditions_assertDoesNotHave_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_CharSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_filtered_baseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.error.ShouldBeAfter_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldHaveMethods_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsStrictlyBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.introspection.PropertyOrFieldSupport_getValueOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Object_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ShortsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Closeables_closeQuietly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldNotContainKey_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.condition.Join_constructor_with_Collection_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.condition.AllOf_allOf_with_Collection_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.file.FileAssert_hasSameContentAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intpredicate.IntPredicateAssert_rejects_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_IntPredicate_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.map.MapAssert_contains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsEqualToIgnoringGivenFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.future.FutureAssert_isNotCancelled_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.navigation.ClassBasedNavigableList_withString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_OffsetDateTime_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.util.Arrays_hasOnlyNullElements_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.BooleansBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotBeEqual_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_hasOnlyElementsOfType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_extractingResultOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ShouldNotBeEqualWithinOffset_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_primitive_byte_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_stringContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.experimental.theories.DataPoint",
    "org.junit.Assume"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertHasTime_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainSubsequenceOfCharSequence_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.comparables.Comparables_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.Percentage_withPercentage_with_Double_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotContainPattern_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.condition.Not_with_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveSameContent_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.data.Percentage_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_doesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.assumptions.ObjectArray_special_assertion_methods_in_assumptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runners.Parameterized$Parameters"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInTheFuture_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.BaseTestTemplate": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_BigDecimal_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_String_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_built_from_lambda_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertContainsValues_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.Index_atIndex_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.experimental.theories.DataPoint",
    "org.junit.Assume"
   ]
  },
  "org.assertj.core.util.Files_newTemporaryFolder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasNoParameter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.IterableAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.navigation.GenericNavigableAssert_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsOnly_with_Java_Util_MapEntry_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_doesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Sets_newLinkedHashSet_GenericArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldContainsOnlyOnce_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasCauseExactlyInstanceOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optionalint.OptionalIntAssert_isNotPresent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeLowerCase_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainsSubsequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_java_8_types_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Files_newFolder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.conditions.Conditions_assertIs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_OptionalDouble_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertContainsAnnotation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeExactlyInstance_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.error.ShouldBeBetween_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_withinPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeInSameYear_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameSizeAs_with_Arrays_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainSubsequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveAnyElementsOfTypes_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.files.Diff_diff_File_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.rules.TemporaryFolder"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isAfterOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.error.ShouldBeFile_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertDoesNotEndWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainExactlyInAnyOrder_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveSuppressedException_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.FilesBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsNotNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.IterablesWithConditionsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertHasFileName_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.ClassRule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveAnnotations_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ]
  },
  "org.assertj.core.matcher.AssertionMatcher_matches_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.After",
    "org.junit.Before"
   ],
   "org.hamcrest:hamcrest-core:jar:1.3:provided": [
    "org.hamcrest.Description"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.ArgumentMatchers",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_failWithMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_LongPredicate_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeRegularFile_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.Offset_built_with_Integer_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_zipSatisfy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isNotIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_primitive_float_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeEqual_newAssertionError_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.Before",
    "org.junit.ComparisonFailure"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.BDDMockito$BDDMyOngoingStubbing",
    "org.mockito.BDDMockito",
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviderRunner"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_info_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_hasOnlyElementsOfTypes_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.urls.Uris_getParameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Java6Assertions_assertThat_with_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.AnyElementsShouldMatch_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasAnchor_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldStartWithPath_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longpredicate.LongPredicateAssert_rejects_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_with_filteredOn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.AfterClass",
    "org.junit.Test",
    "org.junit.Before"
   ],
   "com.google.guava:guava:jar:24.0-jre:test": [
    "com.google.common.collect.Sets"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_containsSubsequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.BaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Assert"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_usingElementComparatorIgnoringFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertJavaBlank_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotContain_at_Index_with_Integer_Argument_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.condition.AllOf_allOf_with_array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.DatesBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Java6JUnitSoftAssertions$1": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.model.Statement",
    "org.junit.runners.model.MultipleFailureException"
   ]
  },
  "org.assertj.core.api.map.MapAssert_size_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.Assertions_tuple_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Stream_startsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Ignore"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsNotCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasSameTimeAsDateInString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasQuery_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertIsInterface_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertAreNot_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.boolean_.AtomicBooleanAssert_isTrue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_DoublePredicate_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isEqualToIgnoringHours_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualIgnoringNewlineDifference_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertHasExtension_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasEntrySatisfying_with_key_and_value_conditions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Hexadecimals_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.DateUtil_format_with_date_time_format_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isNotIn_errors_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertDoesNotContainKey_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainSubsequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Stream_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeLess_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isAfter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOfAny_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Introspection_getProperty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.groups.FieldsOrPropertiesExtractor_extract_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.condition.DoesNotHave_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.inputstream.InputStreamAssert_hasSameContentAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertExistsNoFollowLinks_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasHost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.example.custom.SoftAssertionsErrorDescriptionTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.booleans.Booleans_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldEndWith_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_ComplertionStage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsOne_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_inUnicode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldHaveOnlyElementsOfType_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.characters.Characters_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Strings_quoteObject_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldAccept_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ShouldNotContainAtIndex_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_isGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertHasParent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertHasPublicFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.InputStreamsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.BeforeClass",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_usingCharset_String_invalid_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optionaldouble.OptionalDoubleAssert_isNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsAllEntries_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.characters.Characters_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.presentation.StandardRepresentation_static_setters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldContainAtIndex_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ElementsShouldBeAtLeast_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.util.DateUtil_parse_date_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.rules.ExpectedException"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_hasValueSatisfying_Condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Short_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertMatches_Pattern_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertHasYear_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualIgnoringNanos_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasMessageMatching_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DateUtil_yearOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_areAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.Percentage_withPercentage_with_Integer_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.groups.FieldsOrPropertiesExtractor_extract_tuples_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.file.FileAssert_usingCharset_String_invalid_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_isPresent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Preconditions_checkNotNull_GenericObject_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Arrays_nonNullElementsIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInSameHourAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_fail_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.BasicErrorMessageFactory_unquotedString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isNotIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DateUtil_truncateTime_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeEqual_newAssertionError_without_JUnit_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.ComparisonFailure"
   ],
   "org.opentest4j:opentest4j:jar:1.0.0:provided": [
    "org.opentest4j.AssertionFailedError",
    "org.opentest4j.ValueWrapper"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.quality.Strictness",
    "org.mockito.junit.MockitoJUnit",
    "org.mockito.MockSettings",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoRule"
   ]
  },
  "org.assertj.core.data.Offset_built_with_BigInteger_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsPattern_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertHasName_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeInSameHourWindow_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeExecutable_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_anySatisfy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_BooleanArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DoubleComparatorTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviderRunner"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_FloatArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertIsAnnotation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertEndsWithRaw_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.groups.Properties_extractProperty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsNotCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_zipSatisfy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_extractingResultOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.OnFieldsComparator_compare_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_hasSameHourAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsExactlyInstanceOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.list.ListAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_allMatch_with_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertHave_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_GenericArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsNotCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.error.uri.ShouldHaveHost_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_AssertProvider_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsOne_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.presentation.StandardRepresentation_map_format_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveName_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasSuppressedException_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasEntrySatisfying_with_key_and_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_isSubsetOf_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.condition.AllOf_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isAfter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.lists.Lists_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DateUtil_formatTimeDifference_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_LocalDateTime_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ElementsShouldZipSatisfy_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_extracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertNotBlank_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotEndWith_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualNormalizingWhitespace_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertAreExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.description.TextDescription_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldEndWithPath_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.fail.Fail_fail_because_exception_was_not_thrown_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualComparingOnlyGivenFields_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasAtLeastOneElementOfType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Preconditions_checkNotNull_GenericObject_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.DateUtil_dayOfWeekOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ElementsShouldBe_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_anyMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsStrictlyBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Preconditions_checkArgument_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.fail.Fail_fest_elements_stack_trace_filtering_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotHaveAnyElementsOfTypes_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_hasSameSizeAs_with_CharSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_as_with_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_areNot_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_size_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasEntrySatisfying_with_entry_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotIn_with_array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertHasDeclaredMethods_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_has_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.condition.DoesNotHave_matches_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.error.ShouldBeEmpty_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_hasSameHourAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsNotNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.longpredicate.LongPredicateAssert_accepts_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertIsEqualToNormalizingNewlines_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainValue_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.map.MapAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_usingElementComparatorOnFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsAfterYear_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.Arrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.inputstreams.Diff_diff_InputStream_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_allMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isAfter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.error.ShouldNotBeNull_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.error.ShouldBeSame_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.error.ShouldContainEntry_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_Atomics_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.map.MapAssert_extracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_endsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ElementsShouldNotBe_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.optionalint.OptionalIntAssert_isPresent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsNotNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_areExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeInSameSecondWindow_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyNulls_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualWithinPercentage_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isBefore_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isNotCancelled_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsOne_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Condition_as_Description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.condition.Join_constructor_with_array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertNoneMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.UseDataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviders"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsSymbolicLink_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.error.ShouldBeBeforeOrEqualsTo_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.failures.Failures_failure_with_ErrorMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_endsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_stringStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertDoesNotContainValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_isStrictlyBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertIsFile_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_IntArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_haveAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.boolean_.BooleanAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.fail.Fail_fail_because_exception_should_have_thrown_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Strings_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertAreAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.date.DateAssert_setLenientDateParsing_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.After",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeCanonicalPath_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_primitive_boolean_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.AutoCloseableBDDSoftAssertionsTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldNotBeIn_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ElementsShouldHaveAtMost_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Objects_hashCodeFor_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ConstructorInvoker_newInstance_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertIsNotFinal_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsIn_with_array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertNotEqualByComparison_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_with_Integer_Argument_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.introspection.MethodSupport_methodResultFor_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.iterable.Iterable_generics_with_varargs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Ignore",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Files_contentOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.file.FileAssert_usingCharset_null_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.throwable.ExpectThrowableAssert_isThrownBy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isEqualToIgnoringMinutes_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldContainsAnyOf_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasQuery_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertNotEqualsNormalizingWhitespace_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.UseDataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviders"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsAbsolute_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.IterableUtil_toArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.path.PathAssert_hasBinaryContent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldHaveContent_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsNotExactlyInstanceOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsNotNaN_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isInstanceOfSatisfying_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsExactly_with_Java_Util_MapEntry_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.failures.Failures_failure_with_AssertionErrorFactory_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_hasSameSizeAs_with_Arrays_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_Object_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.AfterClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotBeEqualNormalizingWhitespace_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotMatch_Pattern_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_stringStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ExtendedByTypesComparator_compareTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test",
    "org.junit.runners.Parameterized$Parameter"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertAllMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isEqualToIgnoringHours_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertDoesNotStartWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_hasAtLeastOneElementOfType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldContainExactly_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_haveAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsNotNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqual_equals_hashCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_isEqualToIgnoringNullFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_DoubleStream_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Condition_as_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_Numbers_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.AtomicReferenceArrayAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Throwables_getRootCause_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeOfClassIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertDoesNotContainOnlyWhitespaces_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNot_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.test.WithPlayerData": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.groups.FieldsOrPropertiesExtractor_assertNotNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.lists.List_assertIs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertContainsOnlyWhitespaces_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldOnlyHaveFields_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Files_delete_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_IsBeforeOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertAnyMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsNotNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.OptionalShouldBeEmpty_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_URI_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_isSubsetOf_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_hasFailedWithThrowableThat_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.CharArraysBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.reference.AtomicReferenceAssert_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ElementsShouldHaveAtLeast_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsWritable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.extractor.ByNameSingleExtractorTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_contains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_isGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldNotContainKeys_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertIsXmlEqualCase_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.OnFieldsComparator_creation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ShouldBeSortedAccordingToComparator_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.DateUtil_secondOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isAfter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_built_with_then_method_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doesNotContainSubsequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_NaN_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Arrays_asList_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.UseDataProvider"
   ]
  },
  "org.assertj.core.api.Java6JUnitBDDSoftAssertions": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.model.Statement",
    "org.junit.rules.TestRule",
    "org.junit.runner.Description"
   ]
  },
  "org.assertj.core.api.Condition_constructor_with_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.util.DateUtil_parse_date_time_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.rules.ExpectedException"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isAfterOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_doesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_hasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.Offset_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isBefore_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertIsSubstringOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.test.TypeCanonizerTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsNotPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.list.ListAssert_is_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotBeEmpty_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isBefore_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_with_Integer_Argument_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.ListsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.RecursiveFieldByFieldComparator_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Files_fileNamesIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_built_from_ThrowingCallable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsNotCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.assumptions.Class_final_method_assertions_in_assumptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runners.Parameterized$Parameters"
   ]
  },
  "org.assertj.core.util.URLs_contentOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.rules.ExpectedException"
   ]
  },
  "org.assertj.core.data.Index_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertStartsWithRaw_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.files.Files_assertHasNoParent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Arrays_array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_filteredOn_in_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.comparables.Comparables_assertNotEqualByComparison_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.filter.Filter_with_property_not_in_given_values_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.util.Files_linesOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isEqualToIgnoringMinutes_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInSameDayAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualIgnoringGivenFields_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertHasParent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertHasLinesCount_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_inBinary_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.date.DateAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isDone_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.WritableAssertionInfo_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.PathsBaseTest$FileSystemResource": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.rules.ExternalResource"
   ],
   "com.github.marschall:memoryfilesystem:jar:1.1.0:test": [
    "com.github.marschall.memoryfilesystem.MemoryFileSystemBuilder"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.BasicErrorMessageFactory_equals_hashCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_filteredOn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optionaldouble.OptionalDoubleAssert_hasValueCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeInSameDay_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.NoElementsShouldMatch_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeInstance_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_customComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldContainOnlyNulls_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.groups.Properties_from_with_Collection_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isAfterOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasKeySatisfying_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasProtocol_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_hasValueSatisfying_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsNormalized_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasCauseInstanceOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_usingRecursiveFieldByFieldElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_OptionalLong_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeBefore_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ElementsShouldNotHave_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_noneMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.Tuple_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_containsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeMarkedCase_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isEqualToIgnoringSeconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_flatExtracting_with_multiple_extractors_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.description.TextDescription_value_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_overridingErrorMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.groups.Properties_from_with_array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ElementsShouldHaveExactly_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_have_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasEntrySatisfyingConsumer_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsNotCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.predicate.PredicateAssert_acceptsAll_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.AtomicIntegerFieldUpdater_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ShouldHaveReference_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ClassModifierShouldBe_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_allMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Boolean_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertHaveAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.IntArraysBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHave_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_hasContent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertHasPublicMethods_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_describedAs_with_text_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsNotCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualWithTimePrecision_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.filter.Filter_with_property_not_equals_to_given_value_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ShouldNotBeBetween_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ElementsShouldHave_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.error.uri.ShouldHaveAuthority_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsNotCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertContainsSubsequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.OptionalShouldContainInstanceOf_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isIn_errors_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.error.ShouldHave_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_CharArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsNotPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.NumbersBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertHasMillisecond_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_startsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldHaveAtLeastOneElementOfType_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.data.Offset_built_with_BigDecimal_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeInstanceOfAny_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.future.FutureAssert_isNotDone_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_ByteArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isNotEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldNotExist_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_equal_hashCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertHasNoParentRaw_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.condition.DoesNotHave_with_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotContain_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqual_newAssertionError_differentiating_expected_and_actual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.ComparisonFailure"
   ],
   "org.opentest4j:opentest4j:jar:1.0.0:provided": [
    "org.opentest4j.AssertionFailedError"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_stringEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotBeExactlyInstance_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_allMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldMatchPattern_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldHaveFields_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Java6JUnitSoftAssertions": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.model.Statement",
    "org.junit.rules.TestRule",
    "org.junit.runner.Description"
   ]
  },
  "org.assertj.core.error.ShouldBeSameGenericBetweenIterableAndCondition_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotContainSequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isStrictlyBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertAnySatisfy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.PathsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.DoubleArraysBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.error.ShouldBe_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_containsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_DoubleArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldContainsStringOnlyOnce_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualIgnoringSeconds_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasAuthority_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.comparables.Comparables_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertContainsKeys_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.characters.Characters_assertLowerCase_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Throwables_getStackTrace_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.ArgumentMatchers",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.comparables.Comparables_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_usingRecursiveFieldByFieldElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.StringsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertIsRelative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Condition_default_constructor_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertNotEqualsIgnoringWhitespace_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.UseDataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviders"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isNotDone_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsRegularFile_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.uri.ShouldHaveAnchor_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveParent_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertDoesNotContainPattern_CharSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_filteredOn_predicate_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.conditions.Conditions_assertIsNotNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeEqual": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.ComparisonFailure"
   ],
   "org.opentest4j:opentest4j:jar:1.0.0:provided": [
    "org.opentest4j.AssertionFailedError"
   ]
  },
  "org.assertj.core.presentation.AbstractBaseRepresentationTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.After",
    "org.junit.Before"
   ]
  },
  "org.example.test.SoftAssertionsLineNumberTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isToday_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_filteredOn_notIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Objects_namesOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertHasToString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_satisfies_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_startsWith_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeAtIndex_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Files_temporaryFolderPath_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.predicate.PredicateAssert_rejectsAllTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublepredicate.DoublePredicateAssert_rejects_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsExactly_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isStrictlyBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.navigation.ClassBasedNavigableList_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_usingElementComparatorOnFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_haveExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsSubsequence_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.BytesBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_arrayContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqualByComparison_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.future.ShouldNotHaveCompletedExceptionally_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.description.EmptyTextDescription_emptyText_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_filteredOn_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_Pattern_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_filteredOn_in_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Sets_newHashSet_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.assumptions.Object_special_assertion_methods_in_assumptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runners.Parameterized$Parameters"
   ]
  },
  "org.assertj.core.error.ShouldContain_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.navigation.ClassBasedNavigableList_withDefault_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isEqualTo_errors_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isBefore_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.BDDSoftAssertionsTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_usingFieldByFieldElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotContainPattern_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertIsPublic_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.diff.InsertDeltaTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveDateField_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_isBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasHost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isBeforeOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_anyMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_containsInstanceOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.JUnitSoftAssertions$1": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.model.Statement",
    "org.junit.runners.model.MultipleFailureException"
   ]
  },
  "org.assertj.core.api.atomic.reference.AtomicReferenceAssert_doesNotHaveValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.condition.AnyOf_anyOf_with_array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableTypeAssert_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.Offset_built_with_Float_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertHasOnlyPublicFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_primitive_short_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.boolean_.AtomicBooleanAssert_info_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optionallong.OptionalLongAssert_isNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_containsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_map_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_contains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_IntStream_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveValue_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotStartWith_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_isSubsetOf_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.diff.PatchTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeAbsolutePath_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertSame_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsStrictlyBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_customRepresentation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.OptionalShouldContain_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.uri.ShouldHavePort_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Lists_newArrayList_withIterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.DateUtil_parse_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.map.MapAssert_flatExtracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DateUtil_dayOfMonthOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainOnly_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_doesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertHasSameContentAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.ObjectArraysWithConditionBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingFieldByFieldRecursive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isBeforeOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsDirectory_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.AfterClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_filtered_baseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertContainsOnlyKeys_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_containsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsStrictlyBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeWritable_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotHaveSameClass_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeGreater_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_doesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertHasBinaryContent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_overridingErrorMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.condition.AnyOf_matches_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_are_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Optional_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsNaN_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeSorted_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertHasDayOfMonth_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isAfterOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.comparables.Comparables_isBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertHasMethods_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldContainString_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.internal.util.collections.Sets"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Throwable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Sets_newHashSet_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveSameClass_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.filter.Filter_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_contains_at_Index_with_Integer_Argument_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ElementsShouldMatch_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertIsNotAnnotation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_primitive_double_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_areAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsToday_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.error.ShouldBeSymbolicLink_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.future.ShouldNotBeCancelled_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_avoid_ambiguous_reference_compilation_error_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.IterableUtil_nonNullElementsIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsIn_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_sync_assertThat_with_BDD_and_Soft_variants_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldContainSubsequence_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_contains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotSameAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optionaldouble.OptionalDoubleAssert_isNotPresent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isStrictlyBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Java6Assertions_fail_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeRelativePath_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.Offset_built_with_Long_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsOne_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Objects_castIfBelongsToType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.reference.AtomicReferenceAssert_customComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasEntrySatisfying_with_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Float_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.UrisBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainSequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.future.FutureAssert_isDone_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_have_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_InputStream_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_info_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_endsWith_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_iterableContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsNotCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertNotSame_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotBeEqualIgnoringWhitespace_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.atomic.AtomicStampedReferenceAssert_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.files.Files_assertDoesNotExist_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_flatExtracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.BaseArraysTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertDoesNotContainKeys_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsInstanceOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DateUtil_millisecondOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.After",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsNotPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsNotPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.path.PathAssert_hasSameContentAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.error.future.ShouldNotBeDone_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doesNotContainSequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_ZonedDateTime_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.AtomicReferenceFieldUpdater_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ShouldNotBeSame_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_filteredOn_predicate_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.extractor.ByNameMultipleExtractorTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.atomic.reference.AtomicReferenceAssert_info_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.diff.myers.SnakeTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.data.MapEntry_equals_hashCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.future.FutureAssert_isCancelled_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isStrictlyBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.future.ShouldBeCompleted_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_CharSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ComparablesBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.AtomicLongFieldUpdater_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasSuppressedException_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.comparables.Comparables_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isNotIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.list.ListAssert_raw_list_assertions_chained_after_superclass_method_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Ignore"
   ]
  },
  "org.assertj.core.api.JUnitSoftAssertionsFailureTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.runners.model.MultipleFailureException"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.example.test.AutoClosableSoftAssertionsLineNumberTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsNotNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isNotEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.path.PathAssert_usingCharset_null_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Long_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.SoftAssertionErrorTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.IterableUtil_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DateUtil_timeDifference_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_doesNotHaveValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isNotEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.navigation.FactoryBasedNavigableList_withString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasMessageContaining_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.inputstreams.BinaryDiff_diff_InputStream_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isCompleted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.data.Percentage_withPercentage_with_Long_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optionaldouble.OptionalDoubleAssert_isPresent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_usingFieldByFieldElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Lists_newArrayList_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isIn_with_array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.presentation.StandardRepresentation_format_CompletableFuture_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.map.MapAssert_contains_with_Java_Util_MapEntry_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.NearlyEqualsTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Ignore",
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.assertj.core.error.ShouldHaveTime_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_raw_map_assertions_chained_after_base_assertions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Ignore"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasMessageStartingWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.MessageFormatter_format_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactlyInAnyOrder_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsBefore_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsExactlyInAnyOrder_with_integers_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.ArgumentMatchers",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublepredicate.DoublePredicateAssert_accepts_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.condition.ConditionBuiltWithPredicateTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertHasContent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasNoCause_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_allSatisfy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_anyMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_usingElementComparatorIgnoringFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertContainsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isEqualToIgnoringMinutes_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_filteredOn_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doNotHave_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_with_String_parameter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_duplicatesFrom_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.reference.AtomicReferenceAssert_customRepresentation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_withFailMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optionalint.OptionalIntAssert_hasValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_customComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveSameHourAs_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_containsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_doesNotContain_with_Java_Util_MapEntry_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.filter.Filter_having_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasScheme_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.FieldByFieldComparator_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualIgnoringTimezone_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_isEqualToIgnoringGivenFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Sets_newLinkedHashSet_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isNotIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.DoublesBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.BasicErrorMessageFactory_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsReadable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualIgnoringWhitespace_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertAreAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasEntrySatisfyingCondition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.CharactersBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.FutureAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_stringEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeInSameMinuteWindow_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_usingComparatorForType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasPath_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.future.ShouldHaveCompletedExceptionally_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveComparableElementsAccordingToComparator_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.error.ShouldNotAccept_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.WritableAssertionInfo_descriptionText_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito",
    "org.mockito.stubbing.OngoingStubbing"
   ]
  },
  "org.assertj.core.internal.StandardComparisonStrategy_iterableContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isNotCompletedExceptionally_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.OnFieldsComparator_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.boolean_.AtomicBooleanAssert_customRepresentation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_isNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsOne_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.uri.ShouldHaveScheme_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.list.ListAssert_has_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.Lists_emptyList_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInSameSecondAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldHaveExtension_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualIgnoringNewlines_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertAllSatisfyingConsumer_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_linesOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertContainsPattern_CharSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Double_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Condition_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_AssertDelegateTarget_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_filteredOn_notIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Lists_newArrayList_withVarArgs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_allMatch_with_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_ObjectArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_containsSubsequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldStartWith_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertEqualByComparison_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_hasArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.JUnitSoftAssertions": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.model.Statement",
    "org.junit.rules.TestRule",
    "org.junit.runner.Description"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_noneMatch_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertContainsOnlyDigits_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Condition_describedAs_String_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_hasOnlyOneElementSatisfying_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertIsNotNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ElementsShouldSatisfy_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_iterableRemove_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.lists.Lists_assertHas_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertHaveExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_haveExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_filteredOn_notIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.CollectionAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasCause_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertDoNotHave_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.IterableDiff_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.uri.ShouldHaveUserInfo_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertIsCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.IntegersBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertHasBinaryContent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsNotCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.error.ShouldBeUpperCase_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsNotPositive_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.error.ShouldHaveToString_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsSubSequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotContainSubsequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.util.DateUtil_monthOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsOfClassIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ElementsShouldBeExactly_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertDoesNotHaveNotSameClassAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isEqualToIgnoringNanoseconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.error.ShouldNotBeInstanceOfAny_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.error.ShouldNotMatch_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_sync_with_Assumptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.diff.GenerateUnifiedDiffTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_filteredOn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Files_currentFolder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.experimental.theories.DataPoint",
    "org.junit.Assume"
   ]
  },
  "org.assertj.core.internal.characters.Characters_assertGreaterThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.ArrayWrapperList_wrap_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasMessageEnding_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoNotHave_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertContainsPattern_Pattern_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.SetAssert_raw_set_assertions_chained_after_superclass_method_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Ignore"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isStrictlyBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.DateUtil_minuteOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertDoesNotContainPattern_Pattern_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.intpredicate.IntPredicateAssert_accepts_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isEqualToIgnoringTimezone_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optionalint.OptionalIntAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.files.Files_assertIsDirectory_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.assumptions.List_special_assertion_methods_in_assumptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runners.Parameterized$Parameters"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotHaveDuplicates_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.BinaryDiff_diff_File_byteArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.rules.TemporaryFolder"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasEntrySatisfyingCondition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsStrictlyBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsExecutable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optionallong.OptionalLongAssert_isNotPresent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.JUnitBDDSoftAssertionsSuccessTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsBetween_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertHasNoParent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsInstanceOfAny_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasValueSatisfying_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_OffsetTime_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_startsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_filteredOn_in_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertAllSatisfy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.AutoCloseableSoftAssertionsTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ShortArraysBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.future.ShouldNotBeCompleted_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.filter.AbstractTest_equals_filter": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasParameter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_OptionalInt_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Assert",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeInSameMonth_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_with_extracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.AfterClass",
    "org.junit.Test"
   ],
   "com.google.guava:guava:jar:24.0-jre:test": [
    "com.google.common.collect.Sets"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.experimental.theories.DataPoint",
    "org.junit.Assume"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_haveExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_haveAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_get_writable_info_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertCanWrite_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotBeMarkedCase_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.OptionalShouldBePresent_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_matches_Pattern_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_primitive_int_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThatCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_containsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotHave_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.util.introspection.PropertySupport_publicGetterExistsFor_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Java6JUnitSoftAssertionsFailureTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.runners.model.MultipleFailureException"
   ]
  },
  "org.assertj.core.error.uri.ShouldHaveFragment_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.groups.Properties_ofType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.data.Index_equals_hashCode_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldExist_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_containsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertExists_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_LongArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ObjectArraysBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.SoftAssertionsTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.diff.DiffTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasParameter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.presentation.StandardRepresentation_custom_formatter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.After",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_customRepresentation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.HamcrestConditionTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.hamcrest:hamcrest-core:jar:1.3:provided": [
    "org.hamcrest.core.StringContains"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_areNot_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasStackTraceContaining_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainKey_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Comparable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasOnlyElementsOfTypes_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_usingFieldByFieldElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertNotExists_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.fail.Fail_fail_withMessage_and_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.presentation.StandardRepresentation_array_format_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.Condition_describedAs_Description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.error.ShouldBeCloseTo_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotContainPattern_Pattern_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsNotCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.FloatsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_isNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveComparableElements_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_flatExtracting_with_String_parameter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isBeforeOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.error.ShouldNotHaveDuplicates_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertIsProtected_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_contains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.ByteArraysBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertNotJavaBlank_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainOnlyWhitespaces_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.JUnitSoftAssertionsSuccessTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertGreaterThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_filteredOn_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertAre_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotContainValue_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Strings_join_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ShouldHaveStamp_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.map.MapAssert_doesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasPort_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.conditions.Conditions_assertIsNot_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_areAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.FieldByFieldComparator_compareTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.RecursiveFieldByFieldComparator_compareTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isCompletedExceptionally_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_extractingResultOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.ShouldBeEqual_newAssertionError_without_JUnit_and_OTA4J_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.ComparisonFailure"
   ],
   "org.opentest4j:opentest4j:jar:1.0.0:provided": [
    "org.opentest4j.AssertionFailedError"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.quality.Strictness",
    "org.mockito.ArgumentMatchers",
    "org.mockito.junit.MockitoJUnit",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoRule"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.OptionalDoubleShouldHaveValueCloseTo_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasSameTimeAsOtherDate_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.uri.ShouldHaveQuery_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_containsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.assumptions.Iterator_assumptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runners.Parameterized$Parameters"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isToday_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_usingComparatorForType_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ObjectsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotBeOfClassIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Condition_constructor_with_predicate_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.atomic.boolean_.AtomicBooleanAssert_overridingErrorMessage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.filter.Filter_being_condition_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_areAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsSubSequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isIn_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isAfter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_primitive_long_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasAuthority_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.MapsBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.assumptions.Predicate_final_method_assertions_in_assumptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runners.Parameterized$Parameters"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWithFirstAndRest_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.util.URLs_linesOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.rules.ExpectedException",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotHaveThrown_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isEqualToIgnoringNanoseconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertZipSatisfy_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doNothave_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assumptions": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.AssumptionViolatedException"
   ],
   "org.opentest4j:opentest4j:jar:1.0.0:provided": [
    "org.opentest4j.TestAbortedException"
   ],
   "net.bytebuddy:byte-buddy:jar:1.7.9:compile": [
    "net.bytebuddy.dynamic.DynamicType$Unloaded",
    "net.bytebuddy.dynamic.DynamicType",
    "net.bytebuddy.TypeCache$WithInlineExpunction",
    "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition",
    "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition",
    "net.bytebuddy.TypeCache",
    "net.bytebuddy.ByteBuddy",
    "net.bytebuddy.TypeCache$SimpleKey",
    "net.bytebuddy.TypeCache$Sort",
    "net.bytebuddy.matcher.ElementMatcher$Junction",
    "net.bytebuddy.matcher.ElementMatcher",
    "net.bytebuddy.dynamic.DynamicType$Builder",
    "net.bytebuddy.implementation.MethodDelegation",
    "net.bytebuddy.dynamic.DynamicType$Loaded",
    "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition",
    "net.bytebuddy.matcher.ElementMatchers"
   ]
  },
  "org.assertj.core.error.ShouldHaveAtIndex_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.uri.ShouldHavePath_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasUserInfo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.instant.InstantAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.experimental.theories.DataPoint",
    "org.junit.Assume"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.AbstractDateAssertWithDateArg_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_extracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.Assertions_useRepresentation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.After"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_usingComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertHasOnlyDeclaredFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isEqualToIgnoringSeconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_with_Stream_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_hasFieldOrPropertyWithValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isBetween_with_String_parameters_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.classes.Classes_assertHasDeclaredFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.Java6Assertions_sync_assertThat_with_BDD_and_Soft_variants_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.IgnoringFieldsComparator_compareTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.intarrays.IntArrays_assertHasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_duplicatesFrom_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_URL_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_containsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertIsRelative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.TypeComparators_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.longs.Longs_assertLessThanOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.DeepDifference_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isAfter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.experimental.theories.DataPoint",
    "org.junit.Assume"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_flatExtracting_with_String_parameter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsBeforeYear_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.paths.Paths_assertHasParentRaw_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.fail.Fail_fail_withMessageAndCause_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseInstanceOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertHaveAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Byte_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Java6JUnitSoftAssertionsSuccessTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.IterablesBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.predicate.PredicateAssert_rejects_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_File_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.urls.Uris_assertHasFragment_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_describedAs_with_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsSequence_List_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Map_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldNotBeEqualIgnoringCase_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_get_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeNullOrEmpty_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isEqualToIgnoringSeconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Arrays_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_extracting_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isEqualToIgnoringTimezone_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasPath_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsOne_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeEqual_assertj_elements_stack_trace_filtering_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.array.AbstractEnumerableAssert_hasSameSizeAs_with_Array_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.condition.Not_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasTime_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ObjectArrayAssertBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.Arrays_containsAnyOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.urls.Urls_assertHasNoParameter_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_primitive_char_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.FloatArraysBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_BigInteger_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_hasArray_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isNotBetweenSpecifyingBoundariesInclusion_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldHaveSameSizeAs_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyNulls_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_as_with_text_description_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isAfterOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isBeforeOrEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.files.Files_assertHasContent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInThePast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertIsOne_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeGreaterOrEqual_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Map_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.optionalint.OptionalIntAssert_isNotEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Throwables_removeAssertJElementFromStackTrace_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.AbstractTest_StandardComparisonStrategy": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertHasDayOfWeek_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_isSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mockito",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.conditions.Conditions_assertHas_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeAssignableFrom_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.error.ShouldBeDirectory_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertNotEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_hasFailed_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ClassesBaseTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.ComparatorBasedComparisonStrategy_areEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Class_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_doesNotHave_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualIgnoringMinutes_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.AbstractDateAssertWithOneIntArg_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.util.Files_newFile_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule",
    "org.junit.rules.ExpectedException"
   ]
  },
  "org.assertj.core.error.ShouldMatch_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.internal.inputstreams.InputStreams_assertSameContentAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsNotZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytes.Bytes_assertIsNegative_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.objects.Objects_assertNotNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_withRepresentation_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Rule"
   ]
  },
  "org.assertj.core.error.DescriptionFormatter_format_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.UseDataProvider",
    "com.tngtech.java.junit.dataprovider.DataProvider",
    "com.tngtech.java.junit.dataprovider.DataProviderRunner"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isEqualToIgnoringSeconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.condition.AllOf_matches_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasMessage_with_String_format_syntax_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_is_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.boolean_.AtomicBooleanAssert_isNull_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Iterable_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.internal.util.collections.Sets"
   ]
  },
  "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsZero_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Rule",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldHaveSize_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.characters.Characters_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_areExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseExactlyInstanceOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doubles.Doubles_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldContainValues_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldBeEqualWithinOffset_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Files_TestCase": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.After",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveNot_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isNotEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doesNotHaveAnyElementsOfTypes_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertNotEqualsIgnoringCase_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isNotEqualTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertIsSortedAccordingToComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.files.Files_assertSameContentAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass",
    "org.junit.ClassRule",
    "org.junit.Test",
    "org.junit.rules.TemporaryFolder"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.JUnitBDDSoftAssertionsFailureTest": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.runners.model.MultipleFailureException"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_usingElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.internal.integers.Integers_assertIsNotCloseToPercentage_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isBefore_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.theories.Theories",
    "org.junit.experimental.theories.Theory"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsSequence_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertContainsValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldNotMatchPattern_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_usingDefaultComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mock",
    "org.mockito.MockitoAnnotations"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotMatch_CharSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.bigintegers.BigIntegers_assertLessThan_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertIsEqualsToIgnoringNewLines_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_usingDefaultElementComparator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.MockitoAnnotations",
    "org.mockito.Mock"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_filteredOn_not_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isEqualToIgnoringNanoseconds_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.ExtendedByTypesComparator_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_areAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.Assertions_assertThat_with_Integer_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.ShouldOnlyHaveElementsOfTypes_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.condition.AnyOf_toString_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test",
    "org.junit.Before"
   ]
  },
  "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_at_Index_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.throwables.Throwables_assertHasNoSuppressedExceptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.error.future.ShouldBeCancelled_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.util.Lists_newArrayList_withIterator_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.floats.Floats_assertIsCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsOnly_with_Integer_Arguments_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_returns_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.error.ShouldBeNormalized_create_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.maps.Maps_assertHasSize_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasNoSuppressedExceptions_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_haveAtMost_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.future.CompletableFutureAssert_isCompletedWithValue_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_containsSequence_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_isNullOrEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optionallong.OptionalLongAssert_isPresent_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_usingElementComparatorOnFields_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Before",
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runners.Parameterized",
    "org.junit.AfterClass",
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.booleans.Booleans_assertEqual_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_containsExactly_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.internal.shorts.Shorts_assertIsCloseTo_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ],
   "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test": [
    "com.tngtech.java.junit.dataprovider.DataProviderRunner",
    "com.tngtech.java.junit.dataprovider.DataProvider"
   ]
  },
  "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactlyInAnyOrder_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.api.optional.OptionalAssert_isEmpty_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ]
  },
  "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_haveAtLeast_Test": {
   "junit:junit:jar:4.12:provided": [
    "org.junit.BeforeClass"
   ],
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.HamcrestCondition": {
   "org.hamcrest:hamcrest-core:jar:1.3:provided": [
    "org.hamcrest.Description",
    "org.hamcrest.StringDescription",
    "org.hamcrest.Matcher"
   ]
  },
  "org.assertj.core.test.ExpectedException$ThrowableMatcher": {
   "org.hamcrest:hamcrest-core:jar:1.3:provided": [
    "org.hamcrest.Description",
    "org.hamcrest.TypeSafeMatcher"
   ]
  },
  "org.assertj.core.matcher.AssertionMatcher": {
   "org.hamcrest:hamcrest-core:jar:1.3:provided": [
    "org.hamcrest.BaseMatcher",
    "org.hamcrest.Description"
   ]
  },
  "org.assertj.core.api.ProxifyMethodChangingTheObjectUnderTest": {
   "net.bytebuddy:byte-buddy:jar:1.7.9:compile": [
    "net.bytebuddy.implementation.bind.annotation.RuntimeType",
    "net.bytebuddy.implementation.bind.annotation.SuperCall"
   ]
  },
  "org.assertj.core.api.ErrorCollector": {
   "net.bytebuddy:byte-buddy:jar:1.7.9:compile": [
    "net.bytebuddy.implementation.bind.annotation.This",
    "net.bytebuddy.implementation.bind.annotation.RuntimeType",
    "net.bytebuddy.implementation.bind.annotation.SuperCall",
    "net.bytebuddy.implementation.bind.annotation.SuperMethod"
   ]
  },
  "org.assertj.core.api.SoftProxies": {
   "net.bytebuddy:byte-buddy:jar:1.7.9:compile": [
    "net.bytebuddy.dynamic.DynamicType$Unloaded",
    "net.bytebuddy.dynamic.DynamicType",
    "net.bytebuddy.implementation.MethodDelegation",
    "net.bytebuddy.ByteBuddy",
    "net.bytebuddy.TypeCache$WithInlineExpunction",
    "net.bytebuddy.description.method.MethodDescription",
    "net.bytebuddy.TypeCache$SimpleKey",
    "net.bytebuddy.dynamic.DynamicType$Builder",
    "net.bytebuddy.TypeCache$Sort",
    "net.bytebuddy.dynamic.DynamicType$Loaded",
    "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition",
    "net.bytebuddy.matcher.ElementMatcher$Junction",
    "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition",
    "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition",
    "net.bytebuddy.TypeCache",
    "net.bytebuddy.matcher.ElementMatcher",
    "net.bytebuddy.matcher.ElementMatchers"
   ]
  },
  "org.assertj.core.api.Assumptions$AssumptionMethodInterceptor": {
   "net.bytebuddy:byte-buddy:jar:1.7.9:compile": [
    "net.bytebuddy.implementation.bind.annotation.This",
    "net.bytebuddy.implementation.bind.annotation.SuperCall",
    "net.bytebuddy.implementation.bind.annotation.RuntimeType"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInSameSecondAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasNoUserInfo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasCauseInstanceOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsOnlyNulls_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isBetween_Floats_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsAnyOf_with_int_argument_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito",
    "org.mockito.stubbing.OngoingStubbing"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isNotCloseTo_double_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_hasTheSameClassAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasDayOfMonth_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isNotPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasSameSizeAs_with_Map_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasValueCloseTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.OffsetTimeAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotContainNull_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doesNotContainSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_isGreaterThanOrEqualTo_char_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_isAbsolute_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasMessageEndingWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isLessThan_float_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isStrictlyBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isNotEqualTo_int_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotContain_several_String_as_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_isLowerCase_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isEqualTo_double_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasNoQuery_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.list.ListAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_exists_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasNoPort_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isNotNaN_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasNonNegativeValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isNotEqualToIgnoringWhitespace_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.MapAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasAuthority_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasValueBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotEqualByComparingToWithStringParameter_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasValueGreaterThanOrEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isNotPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isEqualTo_float_with_offset_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInSameYearAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isXmlEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_contains_CharSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsOnlyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.GenericComparableAssert_isNotEqualByComparingTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_isDirectory_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_hasSameElementsAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.LongAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isLessThanOrEqualTo_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_containsExactly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isCloseTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotOfAnyClassIn_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_hasSameSizeAs_with_Array_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ClassAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isEqualTo_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_isSubsetOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.InputStreamAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.OffsetDateTimeAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isEqualTo_double_with_offset_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInSameDayAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isAfter_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isEqualToWithStringParameter_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasValueCloseTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isNotEqualTo_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isNotCloseTo_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isLessThan_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isGreaterThanOrEqualTo_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isInstanceOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_hasParent_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsOnlyNulls_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.BooleanArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_isDirectory_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_isNormalized_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasSameSizeAs_with_Array_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasMonth_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsExactlyInAnyOrderElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_areAtLeastOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isCloseToPercentage_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotCloseTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsExactlyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isIn_with_vararg_param_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_isRelative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_hasToString_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasHourOfDay_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_isGreaterThan_char_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotExactlyInstanceOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasValueBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_canRead_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isBetween_Bytes_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_isPublic_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isAfterYear_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotHaveAnyElementsOfTypes_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasValueCloseTo_withinPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_isProtected_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isNotIn_with_vararg_param_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isEqualToIgnoringHours_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doesNotContainNull_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInSameHourAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_hasOnlyElementsOfTypes_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isNotJavaBlank_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isStrictlyBetween_Doubles_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInSameMinuteAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_hasOnlyElementsOfType_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isBeforeYear_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasNegativeValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.LocalDateAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsOnlyWhitespaces_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_hasSameElementsAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotEndWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isNotNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isStrictlyBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isNotEqualTo_double_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.boolean_.BooleanAssert_isTrue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ComparableAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isGreaterThan_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_hasAtLeastOneElementOfType_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isNotCloseTo_primitive_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_hasParent_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotNull_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasRootCauseExactlyInstanceOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_allSatisfy_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsExactlyInAnyOrderElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_startsWithRaw_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.AtomicIntegerAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasNoParameters_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isNotNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_isAssignableFrom_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.CharSequenceAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isCloseToPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.GenericComparableAssert_isGreaterThanOrEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_hasFileName_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_isSymbolicLink_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_isNotFinal_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsValues_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isNotCloseToPercentage_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_isSubsetOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.PathAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsExactly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isIn_with_collection_param_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.IntegerAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasParameter_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsExactlyInAnyOrder_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsSubsequence_with_var_args_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ShortAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.IntArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsAnyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isNotCloseToPercentage_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isLessThanOrEqualTo_int_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isStrictlyBetween_Longs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasNoCause_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isCloseTo_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasPort_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_isFile_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsExactly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_contains_several_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isStrictlyBetween_Shorts_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInSameSecondWindowAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_hasAnnotations_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_hasDeclaredMethods_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasScheme_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_isNotEqualTo_char_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isGreaterThanOrEqualTo_int_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isLessThanOrEqualTo_float_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasRootCauseInstanceOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_doesNotContainEntry_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doesNotContainAnyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isNotPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsAll_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_doesNotExist_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasAnchor_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasPath_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_endsWithRaw_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasParameter_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isNotZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotHaveAnyElementsOfTypes_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasQuery_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsOnlyDigits_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.GenericComparableAssert_isGreaterThan_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isCloseTo_primitive_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasStackTraceContaining_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasValueLessThanOrEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isCloseTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_hasOnlyElementsOfType_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isBetween_Shorts_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isEqualToIgnoringMillis_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotContainAnyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.BooleanAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasEntrySatisfying_with_key_and_condition_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isLessThanOrEqualTo_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_doesNotContainKey_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localtime.LocalTimeAssert_isStrictlyBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ZonedDateTimeAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.AtomicIntegerArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_haveAtLeastOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasPort_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsExactly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasValueSatisfying_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isEqualToIgnoringMinutes_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isCloseTo_integer_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.LocalTimeAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isNotPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isStrictlyBetween_Floats_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isNotCloseToPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasNoQuery_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.GenericComparableAssert_isLessThan_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotContain_CharSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_doesNotHaveTheSameClassAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.UrlAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_isRegularFile_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_isLessThan_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.InstantAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isBefore_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsEntry_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_hasAtLeastOneElementOfType_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isStrictlyBetween_Integers_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isCloseTo_DoubleObject_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasAuthority_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasNoAnchor_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isNotCloseToPercentage_primitive_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.BigDecimalAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.BigIntegerAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsKeys_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasPath_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isStrictlyBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasYear_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.CharArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isNotNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isCloseTo_double_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_hasParentWithNullStringParameter_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasValueGreaterThanOrEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isNotIn_with_collection_param_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsNull_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasNegativeValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isBeforeOrEqualsTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isEqualTo_with_offset_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsKey_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_doesNotContainKeys_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_isGreaterThanOrEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isNotCloseTo_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_containsExactly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainNull_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_isNotEqualByComparingTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isLessThan_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isGreaterThanOrEqualTo_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isLessThan_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsExactly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasSecond_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotInstanceOfAny_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsSubSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isNotCloseTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_isCanonical_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.LocalDateTimeAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainAnyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasNoParameter_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasValueGreaterThan_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_contains_several_String_as_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotStartWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isCloseToPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_canCallObjectAssertMethod_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_haveAtLeastOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotCloseToPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_areAtLeastOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsExactlyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.list.ListAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isEqualTo_with_offset_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasMinute_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_isNotAnnotation_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsExactlyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isEqualToIgnoringSeconds_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_hasDeclaredFields_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isEqualTo_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasNoPort_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isNotCloseToPercentage_primitive_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.IntPredicateAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isNotCloseTo_float_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_isRelative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isBetween_Longs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasParameter_String_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_isNotInterface_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isStrictlyBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasNonPositiveValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isNotCloseTo_primitive_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.boolean_.BooleanAssert_isFalse_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isSubstringOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isCloseTo_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_areAtLeastOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.matcher.AssertionMatcher_matches_Test$2": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.ArgumentMatcher"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsAll_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotContain_several_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasNoFragment_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsetdatetime.OffsetDateTimeAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isGreaterThan_double_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInSameMinuteWindowAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isNotCloseToPercentage_integer_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isLessThanOrEqualTo_double_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameElementsAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isEqualToIgnoringCase_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotContainSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsNull_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isCloseToPercentage_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.floatarray.FloatArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_hasNoParent_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isCloseToPercentage_integer_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isNotNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.object.ObjectAssert_hasSameHashCodeAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isCloseTo_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_isGreaterThan_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isNotCloseToPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.CharacterAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.DoubleArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasUserInfo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isNotBlank_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isExactlyInstanceOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isStrictlyBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.PredicateAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasValueLessThan_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isStrictlyBetween_Bytes_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isNotPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isEqualToWithLongParameter_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_hasParentRaw_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsAnyOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasPositiveValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isNotCloseToPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isEqualToWithIntParameter_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isNotEqualTo_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnlyNulls_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasParameter_String_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotContainOnlyWhitespaces_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasHost_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsSubSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_isSubsetOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsNull_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isLessThan_int_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ByteAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_canWrite_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasCauseExactlyInstanceOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasDayOfWeek_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isNotEqualToIgnoringCase_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsOnlyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsExactlyInAnyOrder_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isAfterOrEqualsTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isEqualToIgnoringWhitespace_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isNotEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_hasMethods_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasKeySatisfying_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_isAbsolute_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isNotZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsOnlyOnce_with_Integer_Arguments_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_isLessThanOrEqualTo_char_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isGreaterThanOrEqualTo_float_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.LongPredicateAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasFragment_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isCloseToPercentage_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInSameHourWindowAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_haveAtLeastOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_doesNotContainSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.LongArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_containsOnlyKeys_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_hasExtension_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasMessageMatchingRegex_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isNotPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isNotNaN_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isCloseTo_float_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isNotPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isLessThanOrEqualTo_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsAnyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_hasParentWithStringParameter_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.GenericComparableAssert_isEqualByComparingTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_hasAnnotation_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.FloatAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasUserInfo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isNotCloseTo_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_isAnnotation_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isNaN_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.doublearray.DoubleArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isNotCloseTo_integer_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsAll_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasProtocol_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsExactlyInAnyOrderElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.boolean_.BooleanAssert_isEqualTo_boolean_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isInSameMonthAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsExactly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasQuery_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasSameTimeAs_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasNonPositiveValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isGreaterThanOrEqualTo_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasMessage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isEqualByComparingToWithStringParameter_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.shortarray.ShortArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.offsettime.OffsetTimeAssert_isStrictlyBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasNoParameter_String_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContain_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isBlank_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_hasMillisecond_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isCloseToPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_hasPublicMethods_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isInstanceOfAny_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotIn_with_vararg_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isEqualTo_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isEqualTo_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasValueCloseTo_withinPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasHost_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_endsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_hasLineCount_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isNotEqualTo_float_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasEntrySatisfying_with_key_and_value_conditions_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_hasOnlyFields_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_isSorted_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_hasExactlyDeclaredFields_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsSequence_with_var_args_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isNotEqualTo_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.FloatArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isCloseToPercentage_primitive_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.chararray.CharArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.FileAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isCloseToPercentage_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasValueGreaterThan_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isEqualTo_int_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_containsIgnoringCase_CharSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isNotCloseToPercentage_short_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdatetime.LocalDateTimeAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_existsNoFollowLinks_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isNotZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_isNotEmpty_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_isLessThan_char_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.map.MapAssert_doesNotContainValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isNotNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.boolean_.BooleanAssert_isNotEqualTo_boolean_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isEqualToNormalizingWhitespace_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnlyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_doesNotContainSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_isUpperCase_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isBetween_Doubles_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.DoubleAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isBetween_Integers_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsExactlyInAnyOrder_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isXmlEqualToContentOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnly_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasNoParameter_String_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_isEqualByComparingTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.date.DateAssert_isNotBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.AtomicLongArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.uri.UriAssert_hasNoUserInfo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isNotZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_doesNotHaveDuplicates_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasPositiveValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ListAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integer.AtomicIntegerAssert_hasNonNegativeValue_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.character.CharacterAssert_isEqualTo_char_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_isFinal_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isOne_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isGreaterThan_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasMessageStartingWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasValueLessThan_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.UriAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_hasName_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isPositive_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_hasOnlyElementsOfTypes_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isJavaBlank_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_exists_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.throwable.ThrowableAssert_hasMessageContaining_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_hasNoParentRaw_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isGreaterThanOrEqualTo_double_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isEqualTo_float_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isStrictlyBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.iterable.IterableAssert_containsAnyElementsOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.localdate.LocalDateAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isIn_with_vararg_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isNotZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.url.UrlAssert_hasNoParameter_String_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ThrowableAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isGreaterThan_float_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isCloseToPercentage_primitive_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isNotEqualToNormalizingWhitespace_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.long_.AtomicLongAssert_hasValueLessThanOrEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.float_.FloatAssert_isNaN_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.biginteger.BigIntegerAssert_isEqualToWithStringParameter_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isNotNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.byte_.ByteAssert_isGreaterThan_byte_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.charsequence.CharSequenceAssert_isEqualToIgnoringNewLines_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isGreaterThan_int_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.integerarray.AtomicIntegerArrayAssert_startsWith_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isNotInstanceOf_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ShortArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.integer_.IntegerAssert_isNotNegative_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_contains_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.ByteArrayAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_hasNoParent_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainSequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_isInterface_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.AtomicLongAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_hasBinaryContent_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.zoneddatetime.ZonedDateTimeAssert_isBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_doesNotContain_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.GenericComparableAssert_isLessThanOrEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.double_.DoubleAssert_isLessThan_double_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.bytearray.ByteArrayAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.comparable.AbstractComparableAssert_isLessThanOrEqualTo_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.classes.ClassAssert_hasFields_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.abstract_.AbstractAssert_isOfAnyClassIn_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.longarray.LongArrayAssert_hasSize_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.referencearray.AtomicReferenceArrayAssert_containsOnlyOnce_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.file.FileAssert_doesNotExist_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.DoublePredicateAssertBaseTest": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.intarray.IntArrayAssert_containsSubsequence_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.atomic.longarray.AtomicLongArrayAssert_hasSameSizeAs_with_Iterable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.instant.InstantAssert_isStrictlyBetween_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.short_.ShortAssert_isZero_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.long_.LongAssert_isCloseTo_primitive_long_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.path.PathAssert_isReadable_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.api.list.ListAssert_contains_at_Index_Test": {
   "org.mockito:mockito-core:jar:2.11.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.assertj.core.test.TypeCanonizer": {
   "com.google.guava:guava:jar:24.0-jre:test": [
    "com.google.common.reflect.TypeResolver"
   ]
  }
 },
 "dependencies": {
  "id": "org.assertj:assertj-core:bundle:3.9.1:null",
  "coordinates": "org.assertj:assertj-core:3.9.1",
  "groupId": "org.assertj",
  "artifactId": "assertj-core",
  "version": "3.9.1",
  "packaging": "bundle",
  "omitted": false,
  "type": "unknown",
  "status": "unknown",
  "parent": "unknown",
  "allTypes": [],
  "usedTypes": [],
  "usageRatio": -1.0,
  "children": [
   {
    "id": "junit:junit:jar:4.12:provided",
    "coordinates": "junit:junit:4.12",
    "groupId": "junit",
    "artifactId": "junit",
    "version": "4.12",
    "scope": "provided",
    "packaging": "jar",
    "omitted": false,
    "size": 314932,
    "type": "direct",
    "status": "used",
    "parent": "org.assertj:assertj-core:bundle:3.9.1",
    "allTypes": [
     "org.junit.runner.Request",
     "org.junit.experimental.categories.IncludeCategories",
     "org.junit.validator.AnnotationsValidator$AnnotatableValidator",
     "org.junit.rules.Stopwatch$1",
     "org.junit.rules.ExpectedException$ExpectedExceptionStatement",
     "org.junit.experimental.theories.ParameterSignature",
     "org.junit.internal.builders.NullBuilder",
     "junit.framework.TestSuite",
     "org.junit.validator.AnnotationsValidator$FieldValidator",
     "org.junit.runner.Result$1",
     "org.junit.ComparisonFailure$ComparisonCompactor",
     "org.junit.experimental.categories.Categories$IncludeCategory",
     "org.junit.rules.ExpectedExceptionMatcherBuilder",
     "org.junit.runners.model.FrameworkMethod$1",
     "junit.framework.JUnit4TestAdapterCache$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic",
     "org.junit.AfterClass",
     "org.junit.internal.requests.SortingRequest",
     "junit.extensions.TestSetup",
     "org.junit.internal.ArrayComparisonFailure",
     "org.junit.runner.Request$1",
     "org.junit.experimental.theories.internal.AllMembersSupplier$1",
     "org.junit.runner.Computer$1",
     "org.junit.rules.ErrorCollector",
     "org.junit.internal.runners.InitializationError",
     "org.junit.rules.Verifier",
     "org.junit.rules.ExternalResource",
     "org.junit.experimental.results.FailureList",
     "org.junit.experimental.theories.PotentialAssignment$1",
     "junit.textui.ResultPrinter",
     "org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor",
     "org.junit.internal.runners.rules.ValidationError",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic",
     "org.junit.internal.runners.SuiteMethod",
     "junit.extensions.ActiveTestSuite$1",
     "org.junit.runner.RunWith",
     "org.junit.experimental.results.PrintableResult",
     "org.junit.rules.TestWatchman$1",
     "org.junit.internal.runners.statements.InvokeMethod",
     "org.junit.experimental.theories.Theories",
     "junit.extensions.ActiveTestSuite",
     "org.junit.internal.ComparisonCriteria",
     "org.junit.rules.Timeout",
     "org.junit.internal.requests.ClassRequest",
     "junit.framework.TestCase",
     "org.junit.Before",
     "org.junit.AssumptionViolatedException",
     "org.junit.Test$None",
     "org.junit.experimental.categories.IncludeCategories$IncludesAny",
     "org.junit.runner.manipulation.Filter",
     "org.junit.internal.runners.statements.FailOnTimeout$CallableStatement",
     "org.junit.runner.notification.RunNotifier$SafeNotifier",
     "org.junit.runner.notification.RunListener$ThreadSafe",
     "org.junit.Test",
     "junit.framework.JUnit4TestCaseFacade",
     "org.junit.runners.Parameterized$Parameter",
     "org.junit.internal.requests.FilterRequest",
     "org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue",
     "org.junit.experimental.categories.CategoryValidator",
     "org.junit.experimental.categories.Categories$ExcludeCategory",
     "org.junit.runners.model.TestClass$1",
     "org.junit.ComparisonFailure",
     "org.junit.runners.MethodSorters",
     "org.junit.internal.runners.MethodRoadie$1$1",
     "org.junit.runners.model.RunnerBuilder",
     "org.junit.runner.manipulation.Filterable",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1$1",
     "org.junit.validator.AnnotationsValidator$MethodValidator",
     "org.junit.experimental.max.MaxHistory$1",
     "org.junit.rules.RunRules",
     "org.junit.internal.MethodSorter",
     "org.junit.internal.Throwables",
     "org.junit.runner.notification.RunNotifier$1",
     "org.junit.internal.runners.model.EachTestNotifier",
     "org.junit.runner.notification.RunListener",
     "junit.framework.TestFailure",
     "org.junit.runner.Description",
     "org.junit.validator.AnnotationValidator",
     "org.junit.experimental.max.MaxCore$1$1",
     "org.junit.runner.notification.Failure",
     "org.junit.runner.Result$SerializedForm",
     "org.junit.validator.ValidateWith",
     "org.junit.internal.runners.statements.FailOnTimeout",
     "org.junit.internal.builders.AllDefaultPossibilitiesBuilder",
     "org.junit.runner.notification.RunNotifier$6",
     "org.junit.runner.notification.RunNotifier$7",
     "org.junit.rules.DisableOnDebug",
     "org.junit.runner.notification.RunNotifier$2",
     "org.junit.runner.notification.RunNotifier$3",
     "org.junit.runner.notification.RunNotifier$4",
     "org.junit.runners.model.NoGenericTypeParametersValidator",
     "org.junit.runner.notification.RunNotifier$5",
     "org.junit.rules.Verifier$1",
     "org.junit.runners.model.Statement",
     "junit.framework.Test",
     "org.junit.matchers.JUnitMatchers",
     "org.junit.rules.ErrorCollector$1",
     "junit.framework.JUnit4TestAdapter",
     "org.junit.experimental.categories.Categories$CategoryFilter",
     "org.junit.internal.runners.TestClass",
     "org.junit.experimental.ParallelComputer",
     "org.junit.internal.matchers.StacktracePrintingMatcher",
     "org.junit.rules.ExternalResource$1",
     "org.junit.runner.JUnitCommandLineParseResult$CommandLineParserError",
     "org.junit.internal.runners.statements.FailOnTimeout$Builder",
     "org.junit.internal.runners.MethodValidator",
     "org.junit.experimental.categories.ExcludeCategories",
     "org.junit.runner.Result$Listener",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1",
     "org.junit.validator.AnnotationsValidator",
     "org.junit.internal.ExactComparisonCriteria",
     "org.junit.Assume",
     "org.junit.experimental.theories.Theories$TheoryAnchor$2",
     "org.junit.internal.JUnitSystem",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParametersFactory",
     "org.junit.rules.Stopwatch$Clock",
     "org.junit.internal.runners.ClassRoadie",
     "org.junit.internal.builders.JUnit3Builder",
     "org.junit.runners.model.FrameworkMethod",
     "org.junit.internal.builders.IgnoredBuilder",
     "org.junit.runners.model.TestTimedOutException",
     "org.junit.internal.runners.statements.FailOnTimeout$1",
     "org.junit.experimental.theories.internal.SpecificDataPointsSupplier",
     "org.junit.runners.JUnit4",
     "org.junit.internal.runners.JUnit4ClassRunner$1",
     "org.junit.internal.runners.JUnit4ClassRunner$2",
     "org.junit.runner.JUnitCommandLineParseResult",
     "org.junit.Ignore",
     "junit.framework.Assert",
     "org.junit.runners.parameterized.ParametersRunnerFactory",
     "org.junit.experimental.theories.ParametersSuppliedBy",
     "junit.extensions.TestDecorator",
     "org.junit.validator.TestClassValidator",
     "org.junit.internal.runners.rules.RuleMemberValidator$1",
     "org.junit.runner.Result",
     "org.junit.runner.JUnitCore",
     "org.junit.experimental.theories.Theories$TheoryAnchor",
     "junit.extensions.TestSetup$1",
     "org.junit.internal.InexactComparisonCriteria",
     "junit.textui.TestRunner",
     "org.junit.runners.model.RunnerScheduler",
     "org.junit.internal.AssumptionViolatedException",
     "org.junit.runner.FilterFactories",
     "org.junit.internal.matchers.ThrowableMessageMatcher",
     "org.junit.experimental.theories.ParameterSupplier",
     "org.junit.experimental.max.MaxCore",
     "org.junit.runners.BlockJUnit4ClassRunner",
     "org.junit.runner.FilterFactory$FilterNotCreatedException",
     "junit.framework.ComparisonFailure",
     "org.junit.ClassRule",
     "org.junit.runners.model.FrameworkMember",
     "org.junit.internal.runners.JUnit38ClassRunner$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule",
     "org.junit.experimental.results.ResultMatchers$1",
     "org.junit.experimental.theories.Theory",
     "org.junit.internal.MethodSorter$2",
     "org.junit.internal.builders.JUnit4Builder",
     "org.junit.experimental.results.ResultMatchers$2",
     "org.junit.runners.BlockJUnit4ClassRunner$1",
     "org.junit.internal.MethodSorter$1",
     "org.junit.internal.builders.SuiteMethodBuilder",
     "org.junit.experimental.results.ResultMatchers$3",
     "org.junit.runners.parameterized.TestWithParameters",
     "org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener",
     "org.junit.experimental.ParallelComputer$1",
     "org.junit.internal.runners.MethodRoadie$1",
     "org.junit.internal.runners.MethodRoadie$2",
     "org.junit.runners.ParentRunner$3",
     "org.junit.runners.Parameterized$UseParametersRunnerFactory",
     "org.junit.runners.ParentRunner$4",
     "org.junit.runners.ParentRunner$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic",
     "org.junit.runners.ParentRunner$2",
     "org.junit.experimental.categories.Category",
     "org.junit.rules.TestWatcher",
     "org.junit.internal.runners.MethodRoadie",
     "org.junit.runners.Suite",
     "org.junit.runner.manipulation.Sorter$1",
     "org.junit.internal.builders.IgnoredClassRunner",
     "org.junit.experimental.theories.internal.Assignments",
     "org.junit.internal.matchers.TypeSafeMatcher",
     "org.junit.experimental.theories.suppliers.TestedOnSupplier",
     "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule",
     "org.junit.FixMethodOrder",
     "org.junit.internal.runners.FailedBefore",
     "org.junit.internal.RealSystem",
     "org.junit.runners.model.FrameworkField",
     "org.junit.rules.Stopwatch",
     "org.junit.internal.runners.statements.RunAfters",
     "org.junit.experimental.max.MaxHistory$RememberingListener",
     "org.junit.runners.model.MultipleFailureException",
     "org.junit.runners.model.Annotatable",
     "org.junit.experimental.theories.internal.ParameterizedAssertionError",
     "org.junit.rules.TestWatchman",
     "org.junit.runner.Describable",
     "org.junit.runner.Runner",
     "org.junit.rules.TestName",
     "org.junit.experimental.theories.internal.BooleanSupplier",
     "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule",
     "org.junit.runners.model.InitializationError",
     "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator",
     "org.junit.internal.TextListener",
     "org.junit.experimental.categories.CategoryFilterFactory",
     "org.junit.internal.runners.TestMethod",
     "org.junit.runners.Parameterized$Parameters",
     "junit.framework.AssertionFailedError",
     "org.junit.validator.PublicClassValidator",
     "org.junit.experimental.categories.ExcludeCategories$ExcludesAny",
     "junit.framework.JUnit4TestAdapterCache",
     "org.junit.experimental.theories.internal.EnumSupplier",
     "junit.framework.TestSuite$1",
     "junit.framework.TestListener",
     "org.junit.runners.ParentRunner",
     "org.junit.experimental.runners.Enclosed",
     "org.junit.Assert",
     "org.junit.experimental.max.MaxCore$1",
     "junit.framework.Protectable",
     "org.junit.internal.runners.JUnit4ClassRunner",
     "org.junit.rules.Timeout$Builder",
     "org.junit.runner.FilterFactory",
     "org.junit.rules.MethodRule",
     "org.junit.rules.Stopwatch$InternalWatcher",
     "junit.framework.ComparisonCompactor",
     "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException",
     "org.junit.runner.FilterFactoryParams",
     "junit.framework.TestResult$1",
     "org.junit.runners.model.TestClass",
     "org.junit.runner.manipulation.Sortable",
     "org.junit.internal.Classes",
     "org.junit.experimental.theories.DataPoint",
     "org.junit.runners.model.TestClass$FieldComparator",
     "org.junit.runner.Computer",
     "org.junit.After",
     "junit.framework.TestResult",
     "junit.runner.BaseTestRunner",
     "org.junit.runner.notification.SynchronizedRunListener",
     "org.junit.internal.builders.AnnotatedBuilder",
     "org.junit.runners.Parameterized",
     "org.junit.validator.AnnotationsValidator$ClassValidator",
     "org.junit.internal.runners.statements.Fail",
     "org.junit.runner.manipulation.Sorter",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters",
     "org.junit.internal.runners.ErrorReportingRunner",
     "org.junit.experimental.results.ResultMatchers",
     "org.junit.runners.AllTests",
     "org.junit.runners.Suite$SuiteClasses",
     "org.junit.runner.manipulation.NoTestsRemainException",
     "org.junit.experimental.theories.internal.AllMembersSupplier",
     "org.junit.experimental.theories.FromDataPoints",
     "org.junit.runner.notification.StoppedByUserException",
     "org.junit.experimental.theories.suppliers.TestedOn",
     "org.junit.internal.runners.rules.RuleMemberValidator",
     "org.junit.experimental.theories.DataPoints",
     "org.junit.experimental.categories.Categories",
     "junit.runner.TestRunListener",
     "org.junit.experimental.max.MaxHistory",
     "org.junit.BeforeClass",
     "org.junit.rules.TestRule",
     "org.junit.internal.runners.statements.RunBefores",
     "org.junit.internal.runners.JUnit38ClassRunner",
     "org.junit.rules.Timeout$1",
     "org.junit.runner.manipulation.Filter$1",
     "org.junit.ComparisonFailure$1",
     "org.junit.runner.manipulation.Filter$2",
     "org.junit.runner.manipulation.Filter$3",
     "org.junit.validator.AnnotationValidatorFactory",
     "org.junit.experimental.theories.PotentialAssignment",
     "junit.extensions.RepeatedTest",
     "org.junit.rules.TestWatcher$1",
     "org.junit.rules.ExpectedException",
     "org.junit.internal.runners.model.MultipleFailureException",
     "junit.runner.Version",
     "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule",
     "org.junit.experimental.max.MaxHistory$TestComparator",
     "org.junit.internal.runners.rules.RuleMemberValidator$Builder",
     "org.junit.runners.model.TestClass$MethodComparator",
     "org.junit.internal.runners.statements.ExpectException",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule",
     "org.junit.internal.runners.model.ReflectiveCallable",
     "org.junit.rules.RuleChain",
     "org.junit.experimental.max.CouldNotReadCoreException",
     "org.junit.Rule",
     "org.junit.internal.matchers.ThrowableCauseMatcher",
     "org.junit.runner.notification.RunNotifier",
     "org.junit.validator.AnnotationsValidator$1",
     "org.junit.rules.TemporaryFolder"
    ],
    "usedTypes": [
     "org.junit.runners.model.Statement",
     "org.junit.BeforeClass",
     "org.junit.rules.TestRule",
     "org.junit.runner.RunWith",
     "org.junit.runners.model.MultipleFailureException",
     "org.junit.experimental.theories.Theories",
     "org.junit.experimental.theories.DataPoint",
     "org.junit.After",
     "org.junit.Assume",
     "org.junit.ClassRule",
     "org.junit.rules.ExpectedException",
     "org.junit.runners.Parameterized",
     "org.junit.experimental.theories.Theory",
     "org.junit.Before",
     "org.junit.AssumptionViolatedException",
     "org.junit.AfterClass",
     "org.junit.runners.Parameterized$Parameters",
     "org.junit.runner.Description",
     "org.junit.Test",
     "org.junit.runners.Parameterized$Parameter",
     "org.junit.rules.ExternalResource",
     "org.junit.Rule",
     "org.junit.Ignore",
     "org.junit.Assert",
     "org.junit.rules.TemporaryFolder",
     "org.junit.ComparisonFailure"
    ],
    "usageRatio": 0.09090909090909091,
    "children": [
     {
      "id": "org.hamcrest:hamcrest-core:jar:1.3:provided",
      "coordinates": "org.hamcrest:hamcrest-core:1.3",
      "groupId": "org.hamcrest",
      "artifactId": "hamcrest-core",
      "version": "1.3",
      "scope": "provided",
      "packaging": "jar",
      "omitted": true,
      "size": 45024,
      "type": "direct",
      "status": "used",
      "parent": "junit:junit:jar:4.12:provided",
      "allTypes": [
       "org.hamcrest.Condition$1",
       "org.hamcrest.core.IsNull",
       "org.hamcrest.BaseDescription",
       "org.hamcrest.CoreMatchers",
       "org.hamcrest.core.IsNot",
       "org.hamcrest.StringDescription",
       "org.hamcrest.internal.SelfDescribingValue",
       "org.hamcrest.internal.ReflectiveTypeFinder",
       "org.hamcrest.Condition$Step",
       "org.hamcrest.CustomTypeSafeMatcher",
       "org.hamcrest.core.CombinableMatcher",
       "org.hamcrest.core.AllOf",
       "org.hamcrest.core.Every",
       "org.hamcrest.core.Is",
       "org.hamcrest.TypeSafeDiagnosingMatcher",
       "org.hamcrest.BaseMatcher",
       "org.hamcrest.core.AnyOf",
       "org.hamcrest.core.StringContains",
       "org.hamcrest.core.CombinableMatcher$CombinableBothMatcher",
       "org.hamcrest.core.IsAnything",
       "org.hamcrest.core.IsEqual",
       "org.hamcrest.core.ShortcutCombination",
       "org.hamcrest.internal.SelfDescribingValueIterator",
       "org.hamcrest.Factory",
       "org.hamcrest.core.StringEndsWith",
       "org.hamcrest.core.IsInstanceOf",
       "org.hamcrest.core.IsSame",
       "org.hamcrest.Condition$Matched",
       "org.hamcrest.core.StringStartsWith",
       "org.hamcrest.Description",
       "org.hamcrest.core.SubstringMatcher",
       "org.hamcrest.Condition",
       "org.hamcrest.CustomMatcher",
       "org.hamcrest.TypeSafeMatcher",
       "org.hamcrest.core.DescribedAs",
       "org.hamcrest.core.IsCollectionContaining",
       "org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher",
       "org.hamcrest.internal.ArrayIterator",
       "org.hamcrest.FeatureMatcher",
       "org.hamcrest.MatcherAssert",
       "org.hamcrest.Matcher",
       "org.hamcrest.Condition$NotMatched",
       "org.hamcrest.Description$NullDescription",
       "org.hamcrest.SelfDescribing",
       "org.hamcrest.DiagnosingMatcher"
      ],
      "usedTypes": [
       "org.hamcrest.core.StringStartsWith",
       "org.hamcrest.BaseMatcher",
       "org.hamcrest.Description",
       "org.hamcrest.core.StringContains",
       "org.hamcrest.StringDescription",
       "org.hamcrest.Matcher",
       "org.hamcrest.core.IsEqual",
       "org.hamcrest.core.StringEndsWith",
       "org.hamcrest.TypeSafeMatcher",
       "org.hamcrest.core.AllOf",
       "org.hamcrest.core.IsSame"
      ],
      "usageRatio": 0.24444444444444444,
      "children": []
     }
    ]
   },
   {
    "id": "org.opentest4j:opentest4j:jar:1.0.0:provided",
    "coordinates": "org.opentest4j:opentest4j:1.0.0",
    "groupId": "org.opentest4j",
    "artifactId": "opentest4j",
    "version": "1.0.0",
    "scope": "provided",
    "packaging": "jar",
    "omitted": false,
    "size": 6588,
    "type": "direct",
    "status": "used",
    "parent": "org.assertj:assertj-core:bundle:3.9.1",
    "allTypes": [
     "org.opentest4j.ValueWrapper",
     "org.opentest4j.IncompleteExecutionException",
     "org.opentest4j.AssertionFailedError",
     "org.opentest4j.MultipleFailuresError",
     "org.opentest4j.TestAbortedException",
     "org.opentest4j.TestSkippedException"
    ],
    "usedTypes": [
     "org.opentest4j.ValueWrapper",
     "org.opentest4j.AssertionFailedError",
     "org.opentest4j.TestAbortedException"
    ],
    "usageRatio": 0.5,
    "children": []
   },
   {
    "id": "org.hamcrest:hamcrest-core:jar:1.3:provided",
    "coordinates": "org.hamcrest:hamcrest-core:1.3",
    "groupId": "org.hamcrest",
    "artifactId": "hamcrest-core",
    "version": "1.3",
    "scope": "provided",
    "packaging": "jar",
    "omitted": false,
    "size": 45024,
    "type": "direct",
    "status": "used",
    "parent": "org.assertj:assertj-core:bundle:3.9.1",
    "allTypes": [
     "org.hamcrest.Condition$1",
     "org.hamcrest.core.IsNull",
     "org.hamcrest.BaseDescription",
     "org.hamcrest.CoreMatchers",
     "org.hamcrest.core.IsNot",
     "org.hamcrest.StringDescription",
     "org.hamcrest.internal.SelfDescribingValue",
     "org.hamcrest.internal.ReflectiveTypeFinder",
     "org.hamcrest.Condition$Step",
     "org.hamcrest.CustomTypeSafeMatcher",
     "org.hamcrest.core.CombinableMatcher",
     "org.hamcrest.core.AllOf",
     "org.hamcrest.core.Every",
     "org.hamcrest.core.Is",
     "org.hamcrest.TypeSafeDiagnosingMatcher",
     "org.hamcrest.BaseMatcher",
     "org.hamcrest.core.AnyOf",
     "org.hamcrest.core.StringContains",
     "org.hamcrest.core.CombinableMatcher$CombinableBothMatcher",
     "org.hamcrest.core.IsAnything",
     "org.hamcrest.core.IsEqual",
     "org.hamcrest.core.ShortcutCombination",
     "org.hamcrest.internal.SelfDescribingValueIterator",
     "org.hamcrest.Factory",
     "org.hamcrest.core.StringEndsWith",
     "org.hamcrest.core.IsInstanceOf",
     "org.hamcrest.core.IsSame",
     "org.hamcrest.Condition$Matched",
     "org.hamcrest.core.StringStartsWith",
     "org.hamcrest.Description",
     "org.hamcrest.core.SubstringMatcher",
     "org.hamcrest.Condition",
     "org.hamcrest.CustomMatcher",
     "org.hamcrest.TypeSafeMatcher",
     "org.hamcrest.core.DescribedAs",
     "org.hamcrest.core.IsCollectionContaining",
     "org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher",
     "org.hamcrest.internal.ArrayIterator",
     "org.hamcrest.FeatureMatcher",
     "org.hamcrest.MatcherAssert",
     "org.hamcrest.Matcher",
     "org.hamcrest.Condition$NotMatched",
     "org.hamcrest.Description$NullDescription",
     "org.hamcrest.SelfDescribing",
     "org.hamcrest.DiagnosingMatcher"
    ],
    "usedTypes": [
     "org.hamcrest.core.StringStartsWith",
     "org.hamcrest.BaseMatcher",
     "org.hamcrest.Description",
     "org.hamcrest.core.StringContains",
     "org.hamcrest.StringDescription",
     "org.hamcrest.Matcher",
     "org.hamcrest.core.IsEqual",
     "org.hamcrest.core.StringEndsWith",
     "org.hamcrest.TypeSafeMatcher",
     "org.hamcrest.core.AllOf",
     "org.hamcrest.core.IsSame"
    ],
    "usageRatio": 0.24444444444444444,
    "children": []
   },
   {
    "id": "net.bytebuddy:byte-buddy:jar:1.7.9:compile",
    "coordinates": "net.bytebuddy:byte-buddy:1.7.9",
    "groupId": "net.bytebuddy",
    "artifactId": "byte-buddy",
    "version": "1.7.9",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 2924116,
    "type": "direct",
    "status": "used",
    "parent": "org.assertj:assertj-core:bundle:3.9.1",
    "allTypes": [
     "net.bytebuddy.description.annotation.AnnotationDescription$AnnotationInvocationHandler",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ClassDumpAction",
     "net.bytebuddy.implementation.bind.ParameterLengthResolver",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$NameProvider$ForInterceptedMethod",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList$ForWildcardBound",
     "net.bytebuddy.implementation.bytecode.member.MethodInvocation$HandleType",
     "net.bytebuddy.description.annotation.AnnotationSource$Explicit",
     "net.bytebuddy.implementation.Implementation$Context$Default$AccessorMethodDelegation",
     "net.bytebuddy.agent.builder.AgentBuilder$Listener$Adapter",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$CreationAction",
     "net.bytebuddy.implementation.attribute.AnnotationAppender$ForTypeAnnotations",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy",
     "net.bytebuddy.description.type.TypeDescription$ArrayProjection",
     "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$WrappingDispatcher",
     "net.bytebuddy.implementation.bytecode.member.MethodReturn",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple",
     "net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$NameProvider",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant",
     "net.bytebuddy.description.ModifierReviewable$ForFieldDescription",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeRegistrant$RejectingSignatureVisitor",
     "net.bytebuddy.description.annotation.AnnotationList$Empty",
     "net.bytebuddy.dynamic.TargetType",
     "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher",
     "net.bytebuddy.implementation.FieldAccessor$FieldLocation$Absolute",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reducing",
     "net.bytebuddy.description.field.FieldDescription",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Dispatcher",
     "net.bytebuddy.description.field.FieldDescription$ForLoadedField",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$FrameWriter$Active",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$ForLoadedType$TypeVariableBoundList",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedReturnType",
     "net.bytebuddy.implementation.MethodCall$1",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForEnterValue$Factory",
     "net.bytebuddy.matcher.VisibilityMatcher",
     "net.bytebuddy.matcher.MethodParametersMatcher",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForReifiedType",
     "net.bytebuddy.dynamic.scaffold.FieldRegistry",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher$ForLegacyVm",
     "net.bytebuddy.jar.asm.TypePath",
     "net.bytebuddy.asm.MemberSubstitution$TypePoolResolver$ForClassFileLocator",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable",
     "net.bytebuddy.dynamic.TypeResolutionStrategy$Lazy",
     "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice",
     "net.bytebuddy.dynamic.ClassFileLocator$Simple",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$Resolution$Simple",
     "net.bytebuddy.description.type.TypeDescription$Generic$Builder$OfParameterizedType",
     "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing",
     "net.bytebuddy.asm.Advice$OnDefaultValue",
     "net.bytebuddy.description.field.FieldList$AbstractBase",
     "net.bytebuddy.jar.asm.commons.RemappingSignatureAdapter",
     "net.bytebuddy.asm.MemberSubstitution$Substitution$Resolver$Stubbing",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Disabled",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment$WithinType",
     "net.bytebuddy.description.type.TypeList",
     "net.bytebuddy.implementation.auxiliary.AuxiliaryType$SignatureRelevant",
     "net.bytebuddy.description.annotation.AnnotationValue$1",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator",
     "net.bytebuddy.implementation.MethodCall$TerminationHandler$1",
     "net.bytebuddy.agent.builder.AgentBuilder$FallbackStrategy$ByThrowableType",
     "net.bytebuddy.description.annotation.AnnotationValue$Loaded",
     "net.bytebuddy.implementation.MethodCall$TerminationHandler$2",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$PrependableIterator",
     "net.bytebuddy.description.modifier.ModifierContributor",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$ClassRedefinitionTransformer",
     "net.bytebuddy.implementation.FieldAccessor$FieldLocation",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$AccessBridgeWrapper$BridgeTarget",
     "net.bytebuddy.dynamic.loading.InjectionClassLoader",
     "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveBoxingDelegate$BoxingStackManipulation",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$WithDrain",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher$ForValue$Inverted",
     "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionListenable",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable",
     "net.bytebuddy.implementation.bind.annotation.Origin",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$AccessorProxy",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazyInterfaceType",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Simple$Resolution$BootstrapClassLoaderCapableInjectorFactory",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForDirectBound",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Indirect",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForDefaultValue$ReadWrite",
     "net.bytebuddy.asm.ModifierAdjustment",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod$Token",
     "net.bytebuddy.description.modifier.ModifierContributor$ForMethod",
     "net.bytebuddy.implementation.Implementation$Context",
     "net.bytebuddy.implementation.Implementation$Context$Default$AccessorMethod",
     "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher$ForLegacyVm",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$AbstractMethodErrorThrow",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Split$Dispatcher",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$WithoutBody",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForReturnTypeName",
     "net.bytebuddy.dynamic.NexusAccessor$InitializationAppender",
     "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$WithMethodAttributeAppenderFactory",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution$Sort",
     "net.bytebuddy.implementation.FixedValue$AssignerConfigurable",
     "net.bytebuddy.build.EntryPoint$1",
     "net.bytebuddy.dynamic.loading.ClassLoadingStrategy",
     "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$CreationAction",
     "net.bytebuddy.description.type.TypeDescription$Latent",
     "net.bytebuddy.matcher.ElementMatcher",
     "net.bytebuddy.description.NamedElement$WithGenericName",
     "net.bytebuddy.utility.StreamDrainer",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Ambiguous$Node",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray$ReadWrite",
     "net.bytebuddy.implementation.bytecode.member.MethodInvocation$WithImplicitInvocationTargetType",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit$Target",
     "net.bytebuddy.pool.TypePool$CacheProvider$Simple",
     "net.bytebuddy.description.method.ParameterDescription$Latent",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$2",
     "net.bytebuddy.jar.asm.commons.AnalyzerAdapter",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$1",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$4",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$3",
     "net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$IncompatibleRuntimeType",
     "net.bytebuddy.description.type.TypeList$Explicit",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Empty",
     "net.bytebuddy.asm.Advice$Argument",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForUnusedValue$Factory",
     "net.bytebuddy.implementation.bind.annotation.StubValue",
     "net.bytebuddy.asm.MemberSubstitution$SubstitutingMethodVisitor",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard$LazyUpperBoundWildcard",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ReturnTypeTypeRegistrant",
     "net.bytebuddy.pool.TypePool$AbstractBase$RawEnumerationValue",
     "net.bytebuddy.dynamic.ClassFileLocator$Resolution$Explicit",
     "net.bytebuddy.implementation.FieldAccessor$FieldLocation$Relative$Prepared",
     "net.bytebuddy.agent.builder.AgentBuilder$CircularityLock$Global",
     "net.bytebuddy.implementation.bind.annotation.Super",
     "net.bytebuddy.asm.ModifierAdjustment$ModifierAdjustingClassVisitor",
     "net.bytebuddy.dynamic.ClassFileLocator$PackageDiscriminating",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased",
     "net.bytebuddy.matcher.LatentMatcher$Disjunction",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType",
     "net.bytebuddy.asm.MemberSubstitution$Substitution",
     "net.bytebuddy.asm.Advice$MethodSizeHandler$ForInstrumentedMethod",
     "net.bytebuddy.matcher.ClassLoaderParentMatcher",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfType$SuperClassRegistrant",
     "net.bytebuddy.agent.builder.AgentBuilder$Listener",
     "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter$ForMethodEnter",
     "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection",
     "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$Valuable$AbstractBase$Adapter",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution$Simple",
     "net.bytebuddy.ByteBuddy$EnumerationImplementation$ValuesMethodAppender",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection",
     "net.bytebuddy.asm.MemberSubstitution$Substitution$Resolver$MethodInvoking",
     "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$Compound",
     "net.bytebuddy.dynamic.ClassFileLocator$NoOp",
     "net.bytebuddy.asm.Advice$Origin",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$InstanceFieldConstructor$Appender",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken",
     "net.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnType",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray$ForLoadedType",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$NoOp",
     "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$WithTypePoolCache$Simple",
     "net.bytebuddy.agent.builder.AgentBuilder$Default",
     "net.bytebuddy.implementation.bytecode.collection.ArrayAccess",
     "net.bytebuddy.implementation.bytecode.constant.MethodConstant$CanCache",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForField$WithInstance",
     "net.bytebuddy.implementation.Implementation$Context$Default$FieldSetterDelegation",
     "net.bytebuddy.matcher.LatentMatcher$ForMethodToken$ResolvedMatcher",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$OfVisibilityBridge",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$6",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$5",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$8",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$7",
     "net.bytebuddy.implementation.MethodAccessorFactory$AccessType",
     "net.bytebuddy.asm.Advice$AdviceVisitor$WithoutExitAdvice",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$9",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForThrowable",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$ForRawType",
     "net.bytebuddy.matcher.FilterableList",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Harmonized",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$FrameWriter",
     "net.bytebuddy.implementation.MethodCall$MethodLocator$ForElementMatcher",
     "net.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes",
     "net.bytebuddy.implementation.MethodDelegation",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation",
     "net.bytebuddy.asm.Advice$FieldValue",
     "net.bytebuddy.dynamic.scaffold.FieldRegistry$Compiled$NoOp",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$CodeTranslationVisitor$ForMethodEnter",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$ForLoadedType",
     "net.bytebuddy.jar.asm.commons.Method",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target$Resolved$Simple",
     "net.bytebuddy.jar.asm.FieldWriter",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Default$Target",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod",
     "net.bytebuddy.jar.asm.commons.JSRInlinerAdapter",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit$Target$OnMethodParameter",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$SinglePass",
     "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$WithTypePoolCache",
     "net.bytebuddy.description.type.TypeList$Generic$OfMethodExceptionTypes$TypeProjection",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding$Illegal",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$FrameWriter$NoOp",
     "net.bytebuddy.dynamic.ClassFileLocator$ForModule",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForMethodParameter",
     "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$Compound",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Installation",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$ForClassHierarchy$Factory",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionListenable$WithImplicitDiscoveryStrategy",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$BootstrapInjection",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForLowerBound",
     "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForBuildPlugin",
     "net.bytebuddy.jar.asm.commons.SerialVersionUIDAdder",
     "net.bytebuddy.implementation.bytecode.StackManipulation$Trivial",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$MethodCall$Appender$AccessorMethodInvocation",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$1",
     "net.bytebuddy.description.method.MethodList$ForLoadedMethods",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$3",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$2",
     "net.bytebuddy.implementation.bytecode.constant.NullConstant",
     "net.bytebuddy.implementation.FixedValue$ForOriginType",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved",
     "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$UsingLookup",
     "net.bytebuddy.matcher.MethodParameterTypeMatcher",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForCharacterConstant",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase$Adapter",
     "net.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod$TransformedParameterList",
     "net.bytebuddy.matcher.NullMatcher",
     "net.bytebuddy.description.type.TypeDefinition$Sort",
     "net.bytebuddy.implementation.bytecode.assign.Assigner$EqualTypesOnly$2",
     "net.bytebuddy.implementation.bytecode.assign.Assigner$EqualTypesOnly$1",
     "net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$BridgeMethodImplementation$Appender",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodInstanceAndParameters",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$StorageKey",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForField",
     "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$Default",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase",
     "net.bytebuddy.description.type.PackageDescription$AbstractBase",
     "net.bytebuddy.dynamic.TypeResolutionStrategy$Disabled",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription",
     "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods",
     "net.bytebuddy.agent.builder.LambdaFactory",
     "net.bytebuddy.description.type.TypeDescription$Generic$Builder$OfGenericArrayType",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName",
     "net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store",
     "net.bytebuddy.dynamic.DynamicType$Unloaded",
     "net.bytebuddy.asm.Advice$Thrown",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType$OfFormalTypeVariable",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForByteConstant",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard",
     "net.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher$2",
     "net.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher$1",
     "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher",
     "net.bytebuddy.dynamic.loading.ClassInjector$1",
     "net.bytebuddy.description.method.ParameterDescription$TypeSubstituting",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader",
     "net.bytebuddy.dynamic.scaffold.TypeInitializer",
     "net.bytebuddy.asm.MemberSubstitution$Substitution$ForElementMatchers",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFixedValue",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$ForGetter",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$MethodToken",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition$AbstractBase",
     "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice$Entry",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameter",
     "net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation$OfAnnotationProperty",
     "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Valuable",
     "net.bytebuddy.utility.JavaConstant$MethodHandle$HandleType",
     "net.bytebuddy.description.method.MethodDescription$ForLoadedConstructor",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$1",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$3",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$2",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForFixedSize",
     "net.bytebuddy.asm.MemberSubstitution$TypePoolResolver$ForExplicitPool",
     "net.bytebuddy.dynamic.TypeResolutionStrategy$Active$Resolved",
     "net.bytebuddy.pool.TypePool$Default$WithLazyResolution",
     "net.bytebuddy.matcher.CollectionErasureMatcher",
     "net.bytebuddy.matcher.LatentMatcher$Resolved",
     "net.bytebuddy.jar.asm.AnnotationVisitor",
     "net.bytebuddy.description.method.MethodDescription$InDefinedShape",
     "net.bytebuddy.matcher.HasSuperTypeMatcher",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForThisReference$Factory",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForPackageType",
     "net.bytebuddy.implementation.attribute.FieldAttributeAppender$ForInstrumentedField",
     "net.bytebuddy.implementation.Implementation$Context$Factory",
     "net.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod$AttachmentVisitor",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$NoOp",
     "net.bytebuddy.implementation.bind.annotation.Pipe$Binder",
     "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingDelegate$Simple",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazyInterfaceList",
     "net.bytebuddy.implementation.Implementation$SpecialMethodInvocation$Simple",
     "net.bytebuddy.implementation.FieldAccessor$PropertyConfigurable",
     "net.bytebuddy.matcher.CollectionItemMatcher",
     "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$OffsetIncrementing",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForTypeVariable",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$ForSignatureVisitor",
     "net.bytebuddy.matcher.BooleanMatcher",
     "net.bytebuddy.dynamic.loading.MultipleParentClassLoader$Builder",
     "net.bytebuddy.implementation.Implementation$Composable",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Ambiguous",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod$1",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForExplicitType",
     "net.bytebuddy.implementation.bind.annotation.Origin$Binder",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod$2",
     "net.bytebuddy.description.method.ParameterList$Explicit",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry",
     "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$BootstrapInjection$Disabled",
     "net.bytebuddy.implementation.ExceptionMethod$ConstructionDelegate$ForStringConstructor",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClassFileVersion",
     "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$ReturnValueProducer",
     "net.bytebuddy.implementation.bind.annotation.SuperMethod",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer",
     "net.bytebuddy.description.method.MethodDescription$TypeToken",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$Resolution",
     "net.bytebuddy.utility.JavaModule$Dispatcher$CreationAction",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$LegacyVmDispatcher",
     "net.bytebuddy.TypeCache$LookupKey",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameter$OfInstrumentedMethod",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForByteCodeElement",
     "net.bytebuddy.jar.asm.ModuleVisitor",
     "net.bytebuddy.implementation.Implementation$Context$Default$Factory",
     "net.bytebuddy.implementation.InvokeDynamic$WithImplicitType$OfInstance",
     "net.bytebuddy.description.annotation.AnnotationDescription$AnnotationInvocationHandler$MissingValue",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArrayElement",
     "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$Valuable",
     "net.bytebuddy.jar.asm.ClassReader",
     "net.bytebuddy.implementation.Implementation$Context$Default$FieldCacheEntry",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector",
     "net.bytebuddy.description.modifier.MethodArguments",
     "net.bytebuddy.agent.builder.AgentBuilder$Transformer$Compound",
     "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$ErrorSuppressing",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType$Prepareable",
     "net.bytebuddy.implementation.FixedValue$ForValue",
     "net.bytebuddy.description.method.ParameterDescription$Token",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation",
     "net.bytebuddy.description.type.TypeList$AbstractBase",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Ignoring",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target",
     "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingTypeProjection",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$ForReifiedErasure",
     "net.bytebuddy.dynamic.scaffold.TypeWriter",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding$Builder",
     "net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder",
     "net.bytebuddy.description.field.FieldList$ForTokens",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForVariable$ReadOnly",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction",
     "net.bytebuddy.implementation.attribute.FieldAttributeAppender$Factory$Compound",
     "net.bytebuddy.matcher.DeclaringFieldMatcher",
     "net.bytebuddy.description.modifier.MethodStrictness",
     "net.bytebuddy.matcher.CachingMatcher$WithInlineEviction",
     "net.bytebuddy.implementation.MethodCall$TargetHandler",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution",
     "net.bytebuddy.implementation.auxiliary.MethodCallProxy$ConstructorCall$Appender",
     "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields$Entry",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable$AbstractBase$Adapter",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder",
     "net.bytebuddy.description.field.FieldDescription$InGenericShape",
     "net.bytebuddy.implementation.ExceptionMethod",
     "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading$TypeCastingHandler$ForBridgeTarget",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Malformed",
     "net.bytebuddy.dynamic.DynamicType$Builder",
     "net.bytebuddy.matcher.FilterableList$Empty",
     "net.bytebuddy.description.annotation.AnnotationDescription$Builder",
     "net.bytebuddy.implementation.Implementation$Target",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$WithoutDrain$WithActiveRecord",
     "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfLegacyVmConstructor",
     "net.bytebuddy.implementation.bind.annotation.Default$Binder$TypeLocator$ForType",
     "net.bytebuddy.implementation.attribute.FieldAttributeAppender$Compound",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Redefining",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Linked$Delegation",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$CodeTranslationVisitor",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$MethodCall$Appender",
     "net.bytebuddy.ClassFileVersion$VersionLocator$CreationAction",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForEnumerationValue",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy",
     "net.bytebuddy.description.modifier.ModifierContributor$ForType",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard",
     "net.bytebuddy.utility.privilege.SetAccessibleAction",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$BatchReallocator",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler",
     "net.bytebuddy.implementation.bind.annotation.RuntimeType",
     "net.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver$ForFixedValue",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable$AbstractBase",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate",
     "net.bytebuddy.build.Plugin",
     "net.bytebuddy.description.type.TypeList$Generic$Empty",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Direct$ForJava7CapableVm",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Factory",
     "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$ClassLoading",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType$Frozen",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter",
     "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$AbstractBase",
     "net.bytebuddy.implementation.bytecode.member.MethodInvocation$OfGenericMethod",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForDefaultValue$ReadOnly",
     "net.bytebuddy.agent.builder.AgentBuilder$Matchable$AbstractBase",
     "net.bytebuddy.matcher.InstanceTypeMatcher",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader",
     "net.bytebuddy.implementation.bytecode.member.MethodInvocation$DynamicInvocation",
     "net.bytebuddy.implementation.MethodAccessorFactory$Illegal",
     "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher$ForLegacyVm",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForMatchedGrouping",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SingletonEnumeration",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodParameters",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Initializable",
     "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading$TypeCastingHandler",
     "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit$Target$OnMethod",
     "net.bytebuddy.agent.builder.ResettableClassFileTransformer$AbstractBase",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$ForErasure",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$StaticFieldConstructor",
     "net.bytebuddy.implementation.bind.annotation.Pipe",
     "net.bytebuddy.implementation.auxiliary.MethodCallProxy$ConstructorCall",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$Compound",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForSerializedValue",
     "net.bytebuddy.implementation.attribute.TypeAttributeAppender$ForInstrumentedType$Differentiating",
     "net.bytebuddy.implementation.FixedValue$ForThisValue$Appender",
     "net.bytebuddy.description.ModifierReviewable$ForParameterDescription",
     "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields$DispatchingVisitor",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized",
     "net.bytebuddy.build.EntryPoint",
     "net.bytebuddy.implementation.Implementation$SpecialMethodInvocation$AbstractBase",
     "net.bytebuddy.description.type.TypeList$1",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Graph",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Merger$Directional",
     "net.bytebuddy.implementation.Implementation$Context$ExtractableView$AbstractBase",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reifying",
     "net.bytebuddy.utility.CompoundList",
     "net.bytebuddy.implementation.bind.annotation.Empty$Binder",
     "net.bytebuddy.implementation.Implementation$Target$AbstractBase$DefaultMethodInvocation$1",
     "net.bytebuddy.jar.asm.commons.MethodRemapper",
     "net.bytebuddy.implementation.Implementation$Target$AbstractBase$DefaultMethodInvocation$2",
     "net.bytebuddy.matcher.LatentMatcher$ForSelfDeclaredMethod",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodEnter",
     "net.bytebuddy.description.method.ParameterDescription$InDefinedShape$AbstractBase",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForInstance",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstrumentedType",
     "net.bytebuddy.implementation.bytecode.constant.MethodConstant$CachedMethod",
     "net.bytebuddy.asm.MemberRemoval$MemberRemovingClassVisitor",
     "net.bytebuddy.description.NamedElement$WithRuntimeName",
     "net.bytebuddy.ClassFileVersion$VersionLocator",
     "net.bytebuddy.implementation.bind.annotation.Pipe$1",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType",
     "net.bytebuddy.description.field.FieldDescription$TypeSubstituting",
     "net.bytebuddy.utility.JavaConstant",
     "net.bytebuddy.description.annotation.AnnotationList$AbstractBase",
     "net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase$ForPrepared",
     "net.bytebuddy.jar.asm.commons.RemappingMethodAdapter",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForByteCodeElement$WithIndex",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$Initializable",
     "net.bytebuddy.ClassFileVersion$VersionLocator$ForJava9CapableVm",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$ForLoadedType",
     "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForLoadState",
     "net.bytebuddy.implementation.FixedValue$ForPoolValue",
     "net.bytebuddy.implementation.attribute.FieldAttributeAppender$Factory",
     "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers",
     "net.bytebuddy.dynamic.scaffold.TypeInitializer$Drain",
     "net.bytebuddy.implementation.bind.annotation.Morph",
     "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter",
     "net.bytebuddy.dynamic.DynamicType$Default$Unloaded",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$NoOp",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable$LazyBoundTokenList",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Detached",
     "net.bytebuddy.implementation.bytecode.member.FieldAccess$OfGenericField",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForField",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry",
     "net.bytebuddy.pool.TypePool$AbstractBase$RawAnnotationValue",
     "net.bytebuddy.implementation.bytecode.Duplication$1",
     "net.bytebuddy.implementation.bytecode.Duplication$2",
     "net.bytebuddy.implementation.bytecode.Duplication$3",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default$3",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default$1",
     "net.bytebuddy.dynamic.TypeResolutionStrategy$Passive",
     "net.bytebuddy.description.annotation.AnnotationList",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default$2",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$EmptyEnumeration",
     "net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription",
     "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler",
     "net.bytebuddy.agent.builder.AgentBuilder$CircularityLock$Default",
     "net.bytebuddy.agent.builder.AgentBuilder$Listener$ModuleReadEdgeCompleting",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForNullConstant",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType",
     "net.bytebuddy.asm.Advice$MethodSizeHandler$Default",
     "net.bytebuddy.implementation.bytecode.Duplication$4",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$OfAnnotatedElement",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition",
     "net.bytebuddy.implementation.MethodCall$MethodLocator",
     "net.bytebuddy.description.modifier.ModifierContributor$ForField",
     "net.bytebuddy.description.method.MethodDescription$SignatureToken",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy",
     "net.bytebuddy.dynamic.DynamicType$Builder$TypeVariableDefinition",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForLegacyVm",
     "net.bytebuddy.implementation.auxiliary.MethodCallProxy$AssignableSignatureCall",
     "net.bytebuddy.description.ModifierReviewable",
     "net.bytebuddy.agent.builder.AgentBuilder$FallbackStrategy",
     "net.bytebuddy.implementation.bytecode.Addition",
     "net.bytebuddy.matcher.DescriptorMatcher",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode$2",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode$3",
     "net.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator$ForParameterType",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Factory$Simplex",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode$1",
     "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher$ForJava8CapableVm",
     "net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget$RebasedMethodInvocation",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$WrappingArgumentProvider",
     "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry",
     "net.bytebuddy.jar.asm.MethodWriter",
     "net.bytebuddy.asm.Advice$OffsetMapping$Context",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator$NonSealing",
     "net.bytebuddy.implementation.LoadedTypeInitializer",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex$DoubleIndexed",
     "net.bytebuddy.implementation.bytecode.collection.ArrayFactory",
     "net.bytebuddy.jar.asm.Context",
     "net.bytebuddy.asm.Advice$MethodSizeHandler$ForAdvice",
     "net.bytebuddy.dynamic.Transformer$ForMethod$MethodModifierTransformer",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode",
     "net.bytebuddy.implementation.bind.annotation.Default$Binder",
     "net.bytebuddy.implementation.attribute.TypeAttributeAppender$Compound",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Resolved",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$AbstractBase",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender",
     "net.bytebuddy.implementation.bind.annotation.AllArguments",
     "net.bytebuddy.implementation.auxiliary.MethodCallProxy$PrecomputedMethodGraph",
     "net.bytebuddy.implementation.FixedValue$ForOriginType$Appender",
     "net.bytebuddy.utility.JavaConstant$MethodType$Dispatcher",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining",
     "net.bytebuddy.implementation.attribute.FieldAttributeAppender",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Resolved$Factory",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType",
     "net.bytebuddy.implementation.bind.annotation.AllArguments$Binder",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$ForTopLevelType",
     "net.bytebuddy.description.field.FieldList$Explicit",
     "net.bytebuddy.implementation.MethodAccessorFactory",
     "net.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes$OfTypeVariables",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound",
     "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$OriginTypeResolver$1",
     "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$OriginTypeResolver$2",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$Processor",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm",
     "net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray",
     "net.bytebuddy.implementation.bytecode.ByteCodeAppender",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Prepared",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedTypeVariableType",
     "net.bytebuddy.implementation.attribute.FieldAttributeAppender$Explicit",
     "net.bytebuddy.description.field.FieldDescription$SignatureToken",
     "net.bytebuddy.description.type.TypeDefinition$SuperClassIterator",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$ForDeclaredMethods",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy",
     "net.bytebuddy.agent.builder.AgentBuilder$FallbackStrategy$Simple",
     "net.bytebuddy.matcher.TypeSortMatcher",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForThisReference$Factory",
     "net.bytebuddy.TypeCache$StorageKey",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithResolvedErasure",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForLoadedType",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Record",
     "net.bytebuddy.implementation.bytecode.Removal$2",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Merger",
     "net.bytebuddy.jar.asm.ModuleWriter",
     "net.bytebuddy.implementation.bytecode.Removal$1",
     "net.bytebuddy.implementation.auxiliary.AuxiliaryType",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Simple",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$Resolution$Illegal",
     "net.bytebuddy.description.modifier.TypeManifestation",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit$AdviceMethodInliner",
     "net.bytebuddy.dynamic.Transformer$Compound",
     "net.bytebuddy.description.method.ParameterList$ForTokens",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner",
     "net.bytebuddy.matcher.DeclaringAnnotationMatcher",
     "net.bytebuddy.implementation.InvocationHandlerAdapter$ForField$Appender",
     "net.bytebuddy.implementation.FieldAccessor$OwnerTypeLocatable",
     "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$MethodVisitorWrapper",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray$Latent",
     "net.bytebuddy.pool.TypePool$AbstractBase$RawTypeValue$Loaded",
     "net.bytebuddy.pool.TypePool$LazyFacade$LazyTypeDescription",
     "net.bytebuddy.implementation.bind.annotation.Argument",
     "net.bytebuddy.jar.asm.commons.StaticInitMerger",
     "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$Adapter",
     "net.bytebuddy.dynamic.DynamicType$Default$Loaded",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForLoadedType$ParameterArgumentTypeList",
     "net.bytebuddy.implementation.bind.annotation.IgnoreForBinding$Verifier",
     "net.bytebuddy.description.type.TypeVariableToken",
     "net.bytebuddy.dynamic.scaffold.FieldRegistry$Default$Compiled",
     "net.bytebuddy.implementation.MethodDelegation$WithCustomProperties",
     "net.bytebuddy.implementation.DefaultMethodCall",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription",
     "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved",
     "net.bytebuddy.jar.asm.commons.SignatureRemapper",
     "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForAbstractMethod",
     "net.bytebuddy.implementation.auxiliary.MethodCallProxy$MethodCall$Appender",
     "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedConstructor$RebasedConstructor",
     "net.bytebuddy.matcher.MethodReturnTypeMatcher",
     "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$1",
     "net.bytebuddy.pool.TypePool$AbstractBase$Hierarchical",
     "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$2",
     "net.bytebuddy.implementation.bytecode.constant.TextConstant",
     "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$3",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldGetter$Appender",
     "net.bytebuddy.description.field.FieldDescription$InDefinedShape$AbstractBase",
     "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$DelegationMethod",
     "net.bytebuddy.NamingStrategy",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$UnresolvedTypeVariable",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType",
     "net.bytebuddy.implementation.MethodCall$WithoutSpecifiedTarget",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$SimpleParameterAnnotationAdapter",
     "net.bytebuddy.description.method.MethodList$TypeSubstituting",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstance$Factory",
     "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForVirtualInvocation",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$LookupKey",
     "net.bytebuddy.pool.TypePool$CacheProvider$NoOp",
     "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForSuperMethodInvocation",
     "net.bytebuddy.description.type.TypeList$Generic$OfConstructorExceptionTypes$TypeProjection",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution$Decoratable",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Default",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForThisReference",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial$AbstractBase",
     "net.bytebuddy.matcher.SignatureTokenMatcher",
     "net.bytebuddy.asm.Advice$Appender",
     "net.bytebuddy.description.type.TypeList$Generic$OfConstructorExceptionTypes",
     "net.bytebuddy.implementation.bytecode.constant.IntegerConstant$SingleBytePush",
     "net.bytebuddy.matcher.CollectionOneToOneMatcher",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$Directional",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$WithAnnotationDefaultValue",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher$ForJava9CapableVm",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation",
     "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Disabled",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$CreationAction",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForField$Factory",
     "net.bytebuddy.asm.Advice$MethodSizeHandler",
     "net.bytebuddy.implementation.bytecode.constant.IntegerConstant$ConstantPool",
     "net.bytebuddy.description.type.TypeDescription$AbstractBase",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$SilentConstruction$Appender",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Compiled",
     "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$AbstractBase",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment$SelfContained",
     "net.bytebuddy.jar.asm.commons.Remapper",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Factory$Duplex",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$Factory",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$ForExactType$Factory",
     "net.bytebuddy.implementation.bind.annotation.Super$Instantiation",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForStringRepresentation",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution$Illegal",
     "net.bytebuddy.agent.builder.AgentBuilder$Matchable",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver$StreamWriting",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedExceptionType",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Resolved",
     "net.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder$RebaseableMatcher",
     "net.bytebuddy.asm.Advice$Unused",
     "net.bytebuddy.implementation.auxiliary.TrivialType",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$AdviceMethodInliner",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution",
     "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$AbstractBase",
     "net.bytebuddy.description.type.TypeDescription$Generic",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex",
     "net.bytebuddy.jar.asm.Handler",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Prepared$Entry",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Unresolved",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition$Trivial",
     "net.bytebuddy.implementation.auxiliary.MethodCallProxy",
     "net.bytebuddy.jar.asm.Frame",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$FieldToken",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForAttachment",
     "net.bytebuddy.implementation.DefaultMethodCall$Appender",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reifying$1",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reifying$2",
     "net.bytebuddy.dynamic.loading.MultipleParentClassLoader",
     "net.bytebuddy.dynamic.scaffold.FieldRegistry$Default$Entry",
     "net.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$Default",
     "net.bytebuddy.implementation.InvocationHandlerAdapter",
     "net.bytebuddy.matcher.MethodParameterTypesMatcher",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForDefaultValue",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$NativeMethodStrategy$ForPrefix",
     "net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer$Prefixing",
     "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$RenderingDelegate",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction$ByteArrayUrlStreamHandler$ByteArrayUrlConnection",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ExceptionTypeRegistrant",
     "net.bytebuddy.implementation.FieldAccessor$ForParameterSetter$Appender",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$RenderingDelegate$1",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$RenderingDelegate$2",
     "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice$Entry$ForSplitAdvice",
     "net.bytebuddy.utility.JavaModule$Dispatcher$Disabled",
     "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Configurable",
     "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading$TypeCastingHandler$NoOp",
     "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget",
     "net.bytebuddy.implementation.bytecode.collection.ArrayAccess$Loader",
     "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$ForBuildEntryPoint",
     "net.bytebuddy.asm.Advice$OffsetMapping$Context$ForMethodEntry",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$NoOp",
     "net.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$ContravariantBinding",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForField",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$ForGetterSetterPair",
     "net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription$IncompatibleRuntimeType",
     "net.bytebuddy.implementation.bind.annotation.SuperMethod$Binder$DelegationMethod",
     "net.bytebuddy.dynamic.ClassFileLocator$Resolution$Illegal",
     "net.bytebuddy.jar.asm.signature.SignatureVisitor",
     "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfConstructor",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForMethodParameter$WithExplicitType",
     "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$5",
     "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$4",
     "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$1",
     "net.bytebuddy.implementation.bytecode.Duplication",
     "net.bytebuddy.utility.visitor.LineNumberPrependingMethodVisitor",
     "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$3",
     "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$2",
     "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver",
     "net.bytebuddy.description.TypeVariableSource$AbstractBase",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder",
     "net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor",
     "net.bytebuddy.TypeCache$WithInlineExpunction",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForShortConstant",
     "net.bytebuddy.jar.asm.AnnotationWriter",
     "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForVirtualInvocation$WithImplicitType",
     "net.bytebuddy.dynamic.scaffold.FieldRegistry$Default$Compiled$Entry",
     "net.bytebuddy.dynamic.ClassFileLocator$ForClassLoader$WeaklyReferenced",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType",
     "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$ForJava7CapableVm",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedSuperClass",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding",
     "net.bytebuddy.jar.asm.commons.TableSwitchGenerator",
     "net.bytebuddy.implementation.bytecode.Throw",
     "net.bytebuddy.implementation.Implementation$Context$Default$AbstractPropertyAccessorMethod",
     "net.bytebuddy.jar.asm.commons.ModuleTargetAttribute",
     "net.bytebuddy.asm.Advice$OffsetMapping",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$Initializable",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$FieldTokenList",
     "net.bytebuddy.implementation.InvokeDynamic$1",
     "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$ForArrayType",
     "net.bytebuddy.implementation.bind.annotation.FieldValue$Binder",
     "net.bytebuddy.implementation.FieldAccessor$FieldNameExtractor$ForFixedValue",
     "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$Suppressing$Bound",
     "net.bytebuddy.utility.RandomString",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy$CreationAction",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForReceiverType",
     "net.bytebuddy.matcher.StringMatcher$Mode$1",
     "net.bytebuddy.matcher.StringMatcher$Mode$2",
     "net.bytebuddy.matcher.StringMatcher$Mode$3",
     "net.bytebuddy.matcher.StringMatcher$Mode$4",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken",
     "net.bytebuddy.matcher.StringMatcher$Mode$5",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfType",
     "net.bytebuddy.matcher.StringMatcher$Mode$6",
     "net.bytebuddy.matcher.StringMatcher$Mode$7",
     "net.bytebuddy.matcher.StringMatcher$Mode$8",
     "net.bytebuddy.implementation.bytecode.constant.LongConstant",
     "net.bytebuddy.matcher.StringMatcher$Mode$9",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFixedValue$OfConstant",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Node$Simple",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForUpperBound",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder$DefaultMethodLocator",
     "net.bytebuddy.description.method.MethodList$Empty",
     "net.bytebuddy.implementation.bytecode.member.MethodInvocation$Invocation",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher$ForType",
     "net.bytebuddy.implementation.bind.annotation.StubValue$Binder",
     "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate$ExplicitlyTypedUnboxingResponsible",
     "net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget$Factory",
     "net.bytebuddy.jar.asm.Handle",
     "net.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodParameter",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardUpperBoundType",
     "net.bytebuddy.implementation.bind.ArgumentTypeResolver$ParameterIndexToken",
     "net.bytebuddy.asm.Advice$Dispatcher",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedType",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$Latent",
     "net.bytebuddy.dynamic.ClassFileLocator$ForModuleFile",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$MetaFactoryRedirection",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution$Unresolved",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForTypeName",
     "net.bytebuddy.implementation.FieldAccessor$ForParameterSetter",
     "net.bytebuddy.jar.asm.commons.SerialVersionUIDAdder$Item",
     "net.bytebuddy.TypeCache$SimpleKey",
     "net.bytebuddy.implementation.bind.annotation.DefaultCall",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler",
     "net.bytebuddy.implementation.SuperMethodCall$Appender$TerminationHandler",
     "net.bytebuddy.asm.Advice$Dispatcher$Bound$ForMethodEnter",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable",
     "net.bytebuddy.description.ModifierReviewable$AbstractBase",
     "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForResolvableTypes",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$RedefinitionClassVisitor$CodePreservingMethodVisitor",
     "net.bytebuddy.agent.builder.AgentBuilder$Listener$StreamWriting",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodInvoker$Virtual",
     "net.bytebuddy.implementation.bytecode.assign.Assigner",
     "net.bytebuddy.implementation.bytecode.StackSize",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFieldBinding",
     "net.bytebuddy.dynamic.Transformer$ForField",
     "net.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayCreator$ForReferenceType",
     "net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget",
     "net.bytebuddy.description.ModifierReviewable$OfByteCodeElement",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForThisReference",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedFieldType",
     "net.bytebuddy.implementation.SuperMethodCall$1",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$ForExactType",
     "net.bytebuddy.description.modifier.ParameterManifestation",
     "net.bytebuddy.implementation.LoadedTypeInitializer$ForStaticField",
     "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter$ForMethodExit",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Resolved$Node",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$MethodCall",
     "net.bytebuddy.matcher.LatentMatcher",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForVariable$ReadWrite",
     "net.bytebuddy.implementation.Implementation$Context$Disabled$Factory",
     "net.bytebuddy.implementation.bytecode.constant.SerializedConstant",
     "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveWideningDelegate",
     "net.bytebuddy.implementation.bytecode.Duplication$WithFlip",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher$Disabled",
     "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForDefaultMethodInvocation",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder$DefaultMethodLocator$Explicit",
     "net.bytebuddy.implementation.bind.DeclaringTypeResolver",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$ClassResettingTransformer",
     "net.bytebuddy.ByteBuddy$EnumerationImplementation$InitializationAppender",
     "net.bytebuddy.implementation.bind.annotation.Super$1",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$Dispatcher$InjectorFactory",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating$2",
     "net.bytebuddy.implementation.Implementation$Target$AbstractBase",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating$1",
     "net.bytebuddy.asm.Advice$1",
     "net.bytebuddy.matcher.ErasureMatcher",
     "net.bytebuddy.dynamic.scaffold.TypeInitializer$Drain$Default",
     "net.bytebuddy.asm.Advice$OffsetMapping$Factory",
     "net.bytebuddy.implementation.bind.annotation.Default",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard$LazyUnboundWildcard",
     "net.bytebuddy.agent.builder.AgentBuilder$Transformer$NoOp",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation$Appender",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing$SlicingIterable",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal",
     "net.bytebuddy.jar.asm.ClassVisitor",
     "net.bytebuddy.description.method.MethodDescription$TypeSubstituting",
     "net.bytebuddy.matcher.ElementMatcher$Junction$Disjunction",
     "net.bytebuddy.implementation.bind.annotation.This$Binder",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy$ForLegacyVm",
     "net.bytebuddy.ClassFileVersion$VersionLocator$ForLegacyVm",
     "net.bytebuddy.implementation.bytecode.constant.FieldConstant",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForDoubleConstant",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForIntegerConstant",
     "net.bytebuddy.description.annotation.AnnotationValue",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator",
     "net.bytebuddy.description.type.TypeDescription$Generic$Builder",
     "net.bytebuddy.asm.MemberSubstitution$TypePoolResolver$OfImplicitPool",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher$Creator",
     "net.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher",
     "net.bytebuddy.description.method.MethodDescription$Token",
     "net.bytebuddy.implementation.bytecode.constant.IntegerConstant",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$FrameWriter$Expanding",
     "net.bytebuddy.description.field.FieldDescription$Token",
     "net.bytebuddy.utility.JavaConstant$MethodType$Dispatcher$ForLegacyVm",
     "net.bytebuddy.pool.TypePool$AbstractBase$RawEnumerationValue$LazyEnumerationDescription",
     "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodExit$WithExceptionHandler",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$WithDrain$WithoutActiveRecord",
     "net.bytebuddy.implementation.InvokeDynamic$Appender",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$WithoutDrain$WithoutActiveRecord",
     "net.bytebuddy.implementation.bytecode.member.FieldAccess$1",
     "net.bytebuddy.dynamic.NexusAccessor$Dispatcher$Available",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$ForSetter",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator",
     "net.bytebuddy.implementation.InvokeDynamic$TerminationHandler",
     "net.bytebuddy.description.modifier.ModifierContributor$Resolver",
     "net.bytebuddy.asm.MemberSubstitution$1",
     "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher$CreationAction",
     "net.bytebuddy.dynamic.Transformer",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Lazy",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$NoOp",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$1",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$StaticFieldConstructor",
     "net.bytebuddy.matcher.NegatingMatcher",
     "net.bytebuddy.implementation.bytecode.constant.DoubleConstant",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation",
     "net.bytebuddy.implementation.Implementation$Context$Default$DelegationRecord",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$ResubmissionInstallationListener",
     "net.bytebuddy.jar.asm.commons.FieldRemapper",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory$ForLegacyVm",
     "net.bytebuddy.asm.Advice$WithCustomMapping",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$InstanceFieldConstructor",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$MethodCall",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForConstruction",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$1",
     "net.bytebuddy.jar.asm.commons.RemappingFieldAdapter",
     "net.bytebuddy.matcher.MethodExceptionTypeMatcher",
     "net.bytebuddy.implementation.attribute.AnnotationAppender",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArrayElement$OfParameter",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition",
     "net.bytebuddy.implementation.bytecode.member.MethodInvocation$HandleInvocation",
     "net.bytebuddy.asm.Advice$MethodSizeHandler$NoOp",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ExceptionDefinition",
     "net.bytebuddy.implementation.Implementation$Context$Default$CacheValueField",
     "net.bytebuddy.asm.Advice$Return",
     "net.bytebuddy.pool.TypePool$Default$TypeExtractor$AnnotationExtractor$AnnotationLookup",
     "net.bytebuddy.implementation.bytecode.constant.ClassConstant",
     "net.bytebuddy.implementation.bind.annotation.Empty",
     "net.bytebuddy.pool.TypePool$CacheProvider",
     "net.bytebuddy.utility.visitor.StackAwareMethodVisitor",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithEagerNavigation$OfAnnotatedElement",
     "net.bytebuddy.implementation.bytecode.TypeCreation",
     "net.bytebuddy.implementation.bind.annotation.IgnoreForBinding",
     "net.bytebuddy.matcher.CollectionElementMatcher",
     "net.bytebuddy.description.TypeVariableSource",
     "net.bytebuddy.matcher.LatentMatcher$ForFieldToken",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound$DefaultArgument",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable",
     "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default",
     "net.bytebuddy.description.type.TypeDefinition",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$AccessBridgeWrapper",
     "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$Simple",
     "net.bytebuddy.description.ByteCodeElement$Token",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$OfFormalTypeVariable",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$ForFuture",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator$ForTypeResourceUrl",
     "net.bytebuddy.asm.Advice$Enter",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray$LazyGenericArray",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForSerializedValue$Factory",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ExtractionClassFileTransformer",
     "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$ForLegacyVm",
     "net.bytebuddy.implementation.bind.annotation.FieldValue$Binder$Delegate",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$CovariantBinding",
     "net.bytebuddy.implementation.Implementation$SpecialMethodInvocation",
     "net.bytebuddy.description.method.ParameterList$Empty",
     "net.bytebuddy.dynamic.Transformer$ForField$FieldModifierTransformer",
     "net.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayCreator$ForPrimitiveType",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher",
     "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution",
     "net.bytebuddy.implementation.bytecode.assign.primitive.VoidAwareAssigner",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$ForTypeAnnotations",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForBooleanConstant",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$TypeVariableAnnotationAdapter",
     "net.bytebuddy.description.type.TypeDescription$Generic$AbstractBase",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType$1",
     "net.bytebuddy.jar.asm.signature.SignatureReader",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable",
     "net.bytebuddy.matcher.SubTypeMatcher",
     "net.bytebuddy.implementation.ExceptionMethod$ConstructionDelegate$ForDefaultConstructor",
     "net.bytebuddy.matcher.FilterableList$AbstractBase",
     "net.bytebuddy.description.field.FieldList$ForLoadedFields",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType$Factory",
     "net.bytebuddy.implementation.bind.annotation.DefaultCall$Binder$DefaultMethodLocator",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver$Unique",
     "net.bytebuddy.matcher.FailSafeMatcher",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ExceptionDefinition$AbstractBase",
     "net.bytebuddy.matcher.AccessibilityMatcher",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionListenable$WithoutBatchStrategy",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Compound",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldSetter$Appender",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$StreamWriting",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Entry",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$ForTopLevelType$Factory",
     "net.bytebuddy.description.field.FieldList$TypeSubstituting",
     "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingDelegate",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$SilentConstruction",
     "net.bytebuddy.asm.Advice$OnMethodExit",
     "net.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForStackManipulation",
     "net.bytebuddy.asm.Advice$Dispatcher$Delegating",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$RedefinitionClassVisitor$AttributeObtainingMethodVisitor",
     "net.bytebuddy.jar.asm.commons.TryCatchBlockSorter",
     "net.bytebuddy.description.method.MethodList",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy$Unsafe",
     "net.bytebuddy.matcher.ModifierMatcher",
     "net.bytebuddy.jar.asm.commons.CodeSizeEvaluator",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$NameProvider$ForExplicitName",
     "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$NoOp",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$CreationAction",
     "net.bytebuddy.implementation.MethodCall$TargetHandler$ForValue",
     "net.bytebuddy.implementation.FieldAccessor$ForImplicitProperty$Appender",
     "net.bytebuddy.implementation.attribute.TypeAttributeAppender$Explicit",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray",
     "net.bytebuddy.asm.Advice$OffsetMapping$Context$ForMethodExit",
     "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Disjunction",
     "net.bytebuddy.dynamic.ClassFileLocator$Compound",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForField",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved$Factory",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$Loaded",
     "net.bytebuddy.pool.TypePool$Default$ParameterBag",
     "net.bytebuddy.implementation.SuperMethodCall$WithoutReturn",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved",
     "net.bytebuddy.implementation.Implementation$Context$ExtractableView",
     "net.bytebuddy.asm.TypeConstantAdjustment",
     "net.bytebuddy.utility.JavaModule$Dispatcher",
     "net.bytebuddy.implementation.bytecode.constant.MethodConstant",
     "net.bytebuddy.description.modifier.FieldPersistence",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForVisibilityBridge$Compiled",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodInvoker$Simple",
     "net.bytebuddy.implementation.bytecode.assign.Assigner$EqualTypesOnly",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardLowerBoundType",
     "net.bytebuddy.implementation.bytecode.constant.JavaConstantValue",
     "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition",
     "net.bytebuddy.implementation.MethodCall$TargetHandler$ForConstructingInvocation",
     "net.bytebuddy.implementation.FieldAccessor$1",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Resolved$Factory",
     "net.bytebuddy.implementation.MethodCall$TargetHandler$ForField",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$FieldMatchAdapter",
     "net.bytebuddy.description.method.ParameterDescription$Token$TypeList",
     "net.bytebuddy.implementation.Implementation$1",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForField",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithEagerNavigation",
     "net.bytebuddy.implementation.FixedValue$ForArgument",
     "net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyResolution",
     "net.bytebuddy.TypeCache",
     "net.bytebuddy.pool.TypePool$AbstractBase$RawTypeValue",
     "net.bytebuddy.description.modifier.Ownership",
     "net.bytebuddy.matcher.ModifierMatcher$Mode",
     "net.bytebuddy.asm.AsmVisitorWrapper$Compound",
     "net.bytebuddy.implementation.bind.annotation.DefaultCall$Binder",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstrumentedType$Factory",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$AbstractReadOnlyAdapter",
     "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$Factory",
     "net.bytebuddy.matcher.InheritedAnnotationMatcher",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool",
     "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$Illegal",
     "net.bytebuddy.description.method.MethodDescription",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Direct$ForLegacyVm",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForLongConstant",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$ForLoadedType$WildcardUpperBoundTypeList",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument",
     "net.bytebuddy.asm.Advice$OffsetMapping$Factory$Illegal",
     "net.bytebuddy.matcher.LatentMatcher$Conjunction",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType",
     "net.bytebuddy.description.type.TypeList$Generic$OfMethodExceptionTypes",
     "net.bytebuddy.description.ModifierReviewable$ForTypeDefinition",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding$Illegal",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target$ForMethodDescription",
     "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$1",
     "net.bytebuddy.pool.TypePool$AbstractBase$RawDescriptionArray",
     "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveTypeAwareAssigner",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$OfVisibilityBridge$VisibilityBridge",
     "net.bytebuddy.description.type.TypeList$Generic$OfLoadedInterfaceTypes$TypeProjection",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation",
     "net.bytebuddy.implementation.bind.annotation.DefaultCall$Binder$DefaultMethodLocator$Explicit",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$NativeMethodStrategy$Disabled",
     "net.bytebuddy.implementation.bytecode.constant.MethodConstant$CachedConstructor",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor",
     "net.bytebuddy.asm.MemberSubstitution$WithoutSpecification$ForMatchedField",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$ForRedefinition",
     "net.bytebuddy.jar.asm.commons.ClassRemapper",
     "net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray$Loaded",
     "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Trivial",
     "net.bytebuddy.implementation.FieldAccessor$AssignerConfigurable",
     "net.bytebuddy.implementation.bytecode.constant.ClassConstant$ForReferenceType",
     "net.bytebuddy.jar.asm.commons.ModuleResolutionAttribute",
     "net.bytebuddy.implementation.InvokeDynamic$WithImplicitType$OfArgument",
     "net.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnMethodParameter",
     "net.bytebuddy.dynamic.scaffold.FieldRegistry$Default",
     "net.bytebuddy.dynamic.scaffold.TypeInitializer$None",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter",
     "net.bytebuddy.implementation.MethodCall$Appender",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$WithoutDrain",
     "net.bytebuddy.implementation.auxiliary.AuxiliaryType$NamingStrategy",
     "net.bytebuddy.implementation.bytecode.member.FieldAccess",
     "net.bytebuddy.description.field.FieldDescription$Latent",
     "net.bytebuddy.pool.TypePool$Default$TypeExtractor$AnnotationExtractor$ArrayLookup",
     "net.bytebuddy.implementation.bind.annotation.SuperCall$Binder",
     "net.bytebuddy.asm.Advice$Dispatcher$Unresolved",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition$Undefined",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyTypeList",
     "net.bytebuddy.description.modifier.SyntheticState",
     "net.bytebuddy.pool.TypePool$AbstractBase$RawDescriptionArray$ComponentTypeReference",
     "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder$DefaultMethodLocator$Implicit",
     "net.bytebuddy.description.method.ParameterList$AbstractBase",
     "net.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayStackManipulation",
     "net.bytebuddy.implementation.Implementation$SpecialMethodInvocation$Illegal",
     "net.bytebuddy.asm.Advice$Dispatcher$Bound$SkipHandler",
     "net.bytebuddy.description.annotation.AnnotationDescription$ForLoadedAnnotation",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction$ByteArrayUrlStreamHandler",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForDescriptor",
     "net.bytebuddy.description.method.MethodDescription$Latent$TypeInitializer",
     "net.bytebuddy.matcher.StringMatcher$Mode",
     "net.bytebuddy.jar.asm.ByteVector",
     "net.bytebuddy.description.modifier.Visibility",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy$Disabled",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit",
     "net.bytebuddy.implementation.attribute.AnnotationRetention",
     "net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithExceptionHandler",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Compound",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$ForLoadedFieldType",
     "net.bytebuddy.asm.MemberSubstitution$TypePoolResolver",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation",
     "net.bytebuddy.description.modifier.SynchronizationState",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Adapter",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyFieldDescription",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$AbstractBase",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClass",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Compound",
     "net.bytebuddy.pool.TypePool$1",
     "net.bytebuddy.jar.asm.Attribute",
     "net.bytebuddy.implementation.bytecode.StackManipulation$Size",
     "net.bytebuddy.pool.TypePool$Default$TypeExtractor$FieldExtractor",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$1",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$Resolution",
     "net.bytebuddy.description.method.ParameterDescription$InDefinedShape",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableSubstitutor",
     "net.bytebuddy.implementation.bind.annotation.DefaultMethod",
     "net.bytebuddy.matcher.AnnotationTypeMatcher",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$Chained",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType$Default",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition$AbstractBase",
     "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveBoxingDelegate",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$ForLoadedType$WildcardLowerBoundTypeList",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory$ForJava9CapableVm",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Target",
     "net.bytebuddy.matcher.LatentMatcher$ForFieldToken$ResolvedMatcher",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor",
     "net.bytebuddy.implementation.InvocationHandlerAdapter$ForInstance",
     "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate$UnboxingResponsible",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$ForClassHierarchy",
     "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfMethod",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator$ForFixedValue",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy$ForJava9CapableVm",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$1",
     "net.bytebuddy.implementation.bind.annotation.Super$Instantiation$2",
     "net.bytebuddy.implementation.bind.annotation.Super$Instantiation$1",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Simple",
     "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForContextualInvocation",
     "net.bytebuddy.description.type.PackageDescription$Simple",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Trivial",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$8",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$9",
     "net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder$InstrumentableMatcher",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$6",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Compound$CompoundIterable",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$7",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$4",
     "net.bytebuddy.dynamic.scaffold.FieldRegistry$Compiled",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$5",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$AnnotationStripper",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$2",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForConstantValue",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$3",
     "net.bytebuddy.dynamic.DynamicType$Default",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher$ForValue$2",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher$ForValue$1",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher$ForValue$4",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher$ForValue$3",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForNonImplementedMethod",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher$ForValue$5",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$NoOp",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$MethodTokenList",
     "net.bytebuddy.implementation.LoadedTypeInitializer$NoOp",
     "net.bytebuddy.implementation.bytecode.constant.MethodConstant$ForMethod",
     "net.bytebuddy.dynamic.DynamicType$Loaded",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ParameterTypeRegistrant",
     "net.bytebuddy.description.annotation.AnnotationValue$Loaded$State",
     "net.bytebuddy.implementation.bind.ArgumentTypeResolver",
     "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$ConstructorCall$Appender",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant",
     "net.bytebuddy.implementation.auxiliary.TypeProxy",
     "net.bytebuddy.agent.builder.AgentBuilder",
     "net.bytebuddy.asm.Advice$Dispatcher$Bound",
     "net.bytebuddy.description.ByteCodeElement",
     "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod",
     "net.bytebuddy.pool.TypePool$Empty",
     "net.bytebuddy.implementation.Implementation$Target$AbstractBase$DefaultMethodInvocation",
     "net.bytebuddy.asm.Advice$Dispatcher$Bound$ForMethodExit",
     "net.bytebuddy.implementation.FixedValue$1",
     "net.bytebuddy.description.type.TypeList$ForLoadedTypes",
     "net.bytebuddy.implementation.Implementation$Target$Factory",
     "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$ForAnnotationProperty",
     "net.bytebuddy.implementation.bytecode.constant.IntegerConstant$TwoBytePush",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor",
     "net.bytebuddy.implementation.FieldAccessor$ForParameterSetter$TerminationHandler$2",
     "net.bytebuddy.asm.MemberSubstitution$Substitution$Resolver$FieldAccessing",
     "net.bytebuddy.description.type.TypeDescription$ForLoadedType",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation",
     "net.bytebuddy.implementation.FieldAccessor$ForParameterSetter$TerminationHandler$1",
     "net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer$Suffixing",
     "net.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler$Default",
     "net.bytebuddy.matcher.ElementMatchers",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Record$ForImplicitField",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Split",
     "net.bytebuddy.utility.JavaModule$Dispatcher$Enabled",
     "net.bytebuddy.description.NamedElement",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$AccessBridgeWrapper$AccessorBridge",
     "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$NoOp",
     "net.bytebuddy.asm.MemberSubstitution$Substitution$NoOp",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$RetainedMethodTypeVariable",
     "net.bytebuddy.asm.Advice$OnNonDefaultValue",
     "net.bytebuddy.jar.asm.commons.ModuleHashesAttribute",
     "net.bytebuddy.description.type.TypeList$Generic",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterable",
     "net.bytebuddy.implementation.FixedValue",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Resolved",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$NoOp",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher",
     "net.bytebuddy.pool.TypePool$LazyFacade",
     "net.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator$ForType",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$1",
     "net.bytebuddy.asm.MemberSubstitution$Substitution$Resolver$Unresolved",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment$WithinMethod",
     "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy",
     "net.bytebuddy.utility.JavaConstant$MethodType",
     "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedMethod$RebasedMethod",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType$Factory$Default$1",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType$Factory$Default$2",
     "net.bytebuddy.implementation.MethodCall$MethodLocator$ForInstrumentedMethod",
     "net.bytebuddy.implementation.FixedValue$ForValue$StaticFieldByteCodeAppender",
     "net.bytebuddy.description.modifier.MethodManifestation",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Lazy$Dispatcher",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForField$WithExplicitType",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription",
     "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$MethodLocator",
     "net.bytebuddy.dynamic.Nexus",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForVisibilityBridge",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForStubValue",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Initializable",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider",
     "net.bytebuddy.implementation.bind.annotation.FieldValue",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArray",
     "net.bytebuddy.utility.JavaType",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved",
     "net.bytebuddy.asm.TypeConstantAdjustment$TypeConstantDissolvingClassVisitor$TypeConstantDissolvingMethodVisitor",
     "net.bytebuddy.description.field.FieldList$Empty",
     "net.bytebuddy.description.enumeration.EnumerationDescription$Latent",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType",
     "net.bytebuddy.description.enumeration.EnumerationDescription",
     "net.bytebuddy.jar.asm.commons.ModuleRemapper",
     "net.bytebuddy.description.annotation.AnnotationSource",
     "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$MethodLocator$ForImplicitType",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy$Enabled",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transforming",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$AlternativeMetaFactoryRedirection",
     "net.bytebuddy.implementation.bytecode.constant.DefaultValue",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$ContextRegistry",
     "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodExit$WithoutExceptionHandler",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodInvoker",
     "net.bytebuddy.dynamic.Transformer$NoOp",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Compiled$Entry",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$AbstractBase",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType",
     "net.bytebuddy.jar.asm.commons.GeneratorAdapter",
     "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable",
     "net.bytebuddy.description.annotation.AnnotationValue$Loaded$AbstractBase",
     "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$MethodCall$Appender",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$2",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForReturnValue",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$1",
     "net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase",
     "net.bytebuddy.implementation.bytecode.Removal",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature",
     "net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription$Loaded",
     "net.bytebuddy.asm.MemberSubstitution$Substitution$InvocationType",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForField$WithLookup",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForAllArguments$Factory",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForConstruction",
     "net.bytebuddy.implementation.bytecode.constant.FieldConstant$Cached",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$ClassDefinitionAction",
     "net.bytebuddy.implementation.InvokeDynamic",
     "net.bytebuddy.description.enumeration.EnumerationDescription$ForLoadedEnumeration",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForNullValue",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Eager",
     "net.bytebuddy.implementation.attribute.AnnotationValueFilter$Default$1",
     "net.bytebuddy.dynamic.DynamicType$Builder$TypeVariableDefinition$AbstractBase",
     "net.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher$FieldGetInstruction",
     "net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation",
     "net.bytebuddy.matcher.MethodOverrideMatcher",
     "net.bytebuddy.jar.asm.TypeReference",
     "net.bytebuddy.description.method.ParameterDescription",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Unavailable",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation$Factory",
     "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfConstructor",
     "net.bytebuddy.implementation.attribute.AnnotationValueFilter$Factory",
     "net.bytebuddy.description.type.TypeDescription",
     "net.bytebuddy.implementation.attribute.AnnotationValueFilter$Default$2",
     "net.bytebuddy.TypeCache$Sort$2",
     "net.bytebuddy.TypeCache$Sort$1",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$ForAdvice",
     "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveWideningDelegate$WideningStackManipulation",
     "net.bytebuddy.implementation.MethodCall$MethodInvoker",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable$AbstractBase",
     "net.bytebuddy.agent.builder.ResettableClassFileTransformer",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForGenerifiedErasure",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForReturnValue$Factory",
     "net.bytebuddy.implementation.FieldAccessor$ForParameterSetter$TerminationHandler",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Target$1",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Target$2",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding$Unique",
     "net.bytebuddy.implementation.InvokeDynamic$WithImplicitType$OfField",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory",
     "net.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator$ForInstrumentedType",
     "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfMethod",
     "net.bytebuddy.jar.asm.commons.InstructionAdapter",
     "net.bytebuddy.agent.builder.AgentBuilder$Listener$Compound",
     "net.bytebuddy.implementation.bytecode.member.FieldAccess$Defined",
     "net.bytebuddy.implementation.FieldAccessor$FieldLocation$Prepared",
     "net.bytebuddy.dynamic.TypeResolutionStrategy$Resolved",
     "net.bytebuddy.implementation.MethodCall$MethodLocator$ForExplicitMethod",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray$ReadOnly",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable$AbstractBase$Adapter",
     "net.bytebuddy.asm.Advice$Appender$EmulatingMethodVisitor",
     "net.bytebuddy.utility.JavaConstant$MethodHandle",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver$Default",
     "net.bytebuddy.implementation.auxiliary.MethodCallProxy$1",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$ChildFirst$PrependingEnumeration",
     "net.bytebuddy.jar.asm.signature.SignatureWriter",
     "net.bytebuddy.description.type.TypeList$Generic$AbstractBase",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler$ForInstrumentedMethod",
     "net.bytebuddy.implementation.InvokeDynamic$TerminationHandler$1",
     "net.bytebuddy.matcher.CollectionSizeMatcher",
     "net.bytebuddy.implementation.InvokeDynamic$TerminationHandler$2",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$ForLoadedReturnType",
     "net.bytebuddy.agent.builder.AgentBuilder$Ignored",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding",
     "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfLegacyVmMethod",
     "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields",
     "net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$Loaded",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Simple$Resolution",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$ResubmissionListener",
     "net.bytebuddy.dynamic.ClassFileLocator$Resolution",
     "net.bytebuddy.pool.TypePool$Default$ReaderMode",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$AbstractBase",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$UnresolvedType",
     "net.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher$FieldPutInstruction",
     "net.bytebuddy.matcher.MethodSortMatcher",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForDetachment",
     "net.bytebuddy.description.field.FieldDescription$InDefinedShape",
     "net.bytebuddy.implementation.FieldAccessor$FieldLocation$Relative",
     "net.bytebuddy.implementation.FieldAccessor",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$NoOp",
     "net.bytebuddy.agent.builder.AgentBuilder$Identified$Narrowable",
     "net.bytebuddy.jar.asm.MethodVisitor",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForField",
     "net.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod$TransformedParameter",
     "net.bytebuddy.pool.TypePool$Default$TypeExtractor",
     "net.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForMethodName",
     "net.bytebuddy.implementation.auxiliary.AuxiliaryType$NamingStrategy$SuffixingRandom",
     "net.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes$OfTypeVariables$AttachedTypeVariable",
     "net.bytebuddy.dynamic.scaffold.InstrumentedType$Factory$Default",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$Disabled",
     "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$Compound",
     "net.bytebuddy.agent.builder.AgentBuilder$Listener$Filtering",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ReturnTypeProvider",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$WithAnnotationOverlay",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForOwnerType",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray",
     "net.bytebuddy.implementation.bytecode.assign.Assigner$Typing",
     "net.bytebuddy.agent.builder.AgentBuilder$CircularityLock",
     "net.bytebuddy.description.type.PackageDescription",
     "net.bytebuddy.asm.Advice$AdviceVisitor",
     "net.bytebuddy.implementation.bytecode.constant.FloatConstant",
     "net.bytebuddy.implementation.attribute.TypeAttributeAppender$NoOp",
     "net.bytebuddy.jar.asm.Opcodes",
     "net.bytebuddy.agent.builder.AgentBuilder$Identified$Extendable",
     "net.bytebuddy.dynamic.ClassFileLocator$ForClassLoader",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$AbstractBase",
     "net.bytebuddy.matcher.ClassLoaderHierarchyMatcher",
     "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfLegacyVmConstructor",
     "net.bytebuddy.implementation.attribute.AnnotationValueFilter$1",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$2",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$1",
     "net.bytebuddy.description.ByteCodeElement$TypeDependant",
     "net.bytebuddy.implementation.SuperMethodCall$Appender$TerminationHandler$1",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$FrameComputingClassWriter",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning",
     "net.bytebuddy.description.TypeVariableSource$Visitor$NoOp",
     "net.bytebuddy.implementation.SuperMethodCall$Appender$TerminationHandler$2",
     "net.bytebuddy.jar.asm.commons.AnnotationRemapper",
     "net.bytebuddy.jar.asm.Item",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$ForTopLevelType",
     "net.bytebuddy.NamingStrategy$SuffixingRandom",
     "net.bytebuddy.description.method.MethodList$ForTokens",
     "net.bytebuddy.utility.privilege.GetSystemPropertyAction",
     "net.bytebuddy.implementation.bytecode.collection.ArrayAccess$Putter",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Direct",
     "net.bytebuddy.implementation.bind.ArgumentTypeResolver$PrimitiveTypePrecedence",
     "net.bytebuddy.matcher.NameMatcher",
     "net.bytebuddy.implementation.bytecode.assign.reference.ReferenceTypeAwareAssigner",
     "net.bytebuddy.implementation.bind.annotation.Argument$Binder",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard$LazyLowerBoundWildcard",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Appending$WithDrain$WithActiveRecord",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$Latent",
     "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor",
     "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$1",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldGetter",
     "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex$DoubleIndexed",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$InitializationHandler$Creating",
     "net.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher",
     "net.bytebuddy.description.method.MethodDescription$ForLoadedMethod",
     "net.bytebuddy.asm.Advice$This",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterList",
     "net.bytebuddy.description.method.ParameterDescription$AbstractBase",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$MethodCall$Appender",
     "net.bytebuddy.asm.Advice$OnMethodEnter",
     "net.bytebuddy.description.DeclaredByType",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler",
     "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher",
     "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$OffsetWriting",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType",
     "net.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayCreator",
     "net.bytebuddy.matcher.DeclaringMethodMatcher",
     "net.bytebuddy.asm.AsmVisitorWrapper",
     "net.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver$ForGivenType",
     "net.bytebuddy.description.annotation.AnnotationDescription$Latent",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForEnterValue",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory",
     "net.bytebuddy.implementation.bind.annotation.Argument$1",
     "net.bytebuddy.implementation.LoadedTypeInitializer$Compound",
     "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition$Simple",
     "net.bytebuddy.description.annotation.AnnotationList$Explicit",
     "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Inversion",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory$Default",
     "net.bytebuddy.jar.asm.CurrentFrame",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Node",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding$Builder$Build",
     "net.bytebuddy.matcher.SuperTypeMatcher",
     "net.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder",
     "net.bytebuddy.dynamic.DynamicType",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameter$Factory",
     "net.bytebuddy.asm.Advice$AllArguments",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$AtFixedRate",
     "net.bytebuddy.description.field.FieldDescription$AbstractBase",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$Record",
     "net.bytebuddy.matcher.IsNamedMatcher",
     "net.bytebuddy.description.method.MethodDescription$Latent",
     "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Eager$Dispatcher",
     "net.bytebuddy.ClassFileVersion$VersionExtractor",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstance",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$OfConstructorParameter",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArrayElement$OfInvokedMethod",
     "net.bytebuddy.asm.MemberSubstitution$Substitution$Resolver",
     "net.bytebuddy.utility.JavaConstant$MethodType$Dispatcher$ForJava7CapableVm",
     "net.bytebuddy.description.method.ParameterDescription$InGenericShape",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler$NoOp",
     "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher$CreationAction",
     "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$MethodLocator$ForExplicitType",
     "net.bytebuddy.asm.ModifierAdjustment$Adjustment",
     "net.bytebuddy.dynamic.NexusAccessor$Dispatcher",
     "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$Valuable$AbstractBase",
     "net.bytebuddy.implementation.InvokeDynamic$WithImplicitArguments",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record",
     "net.bytebuddy.implementation.MethodCall$TerminationHandler",
     "net.bytebuddy.jar.asm.commons.AdviceAdapter",
     "net.bytebuddy.implementation.Implementation$Context$Default$FieldSetter",
     "net.bytebuddy.implementation.SuperMethodCall$Appender",
     "net.bytebuddy.pool.TypePool$Default$TypeExtractor$AnnotationExtractor",
     "net.bytebuddy.jar.asm.Type",
     "net.bytebuddy.implementation.attribute.FieldAttributeAppender$NoOp",
     "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener",
     "net.bytebuddy.description.type.PackageDescription$ForLoadedPackage",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$NativeMethodStrategy",
     "net.bytebuddy.jar.asm.commons.TryCatchBlockSorter$1",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler$ForAdvice",
     "net.bytebuddy.implementation.bytecode.constant.DoubleConstant$ConstantPool",
     "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher$ForJava8CapableVm",
     "net.bytebuddy.asm.Advice$OffsetMapping$Factory$AdviceType",
     "net.bytebuddy.implementation.InvocationHandlerAdapter$ForInstance$Appender",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod$1",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod$2",
     "net.bytebuddy.pool.TypePool$ClassLoading",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedInterfaceType",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod$3",
     "net.bytebuddy.pool.TypePool$Resolution$Illegal",
     "net.bytebuddy.implementation.bind.annotation.Super$Binder",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$AbstractBase",
     "net.bytebuddy.implementation.bind.annotation.SuperCall",
     "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$NoOp",
     "net.bytebuddy.asm.MemberSubstitution$WithoutSpecification$ForMatchedByteCodeElement",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$MethodToken$ParameterToken",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForNonGenericType",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Linked",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForStaticCall",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate$NotifyingClassLoadingAction",
     "net.bytebuddy.implementation.bytecode.ByteCodeAppender$Simple",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$Enabled",
     "net.bytebuddy.implementation.InvokeDynamic$WithImplicitTarget",
     "net.bytebuddy.ByteBuddy",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Yielding",
     "net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$UnknownRuntimeEnumeration",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForField$Tokenized",
     "net.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver",
     "net.bytebuddy.TypeCache$1",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Dispatcher$InjectingInitializer",
     "net.bytebuddy.pool.TypePool",
     "net.bytebuddy.implementation.attribute.TypeAttributeAppender",
     "net.bytebuddy.matcher.LatentMatcher$ForMethodToken",
     "net.bytebuddy.implementation.bytecode.constant.FloatConstant$ConstantPool",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyNonGenericReceiverType",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$AnnotatedTypeVariable",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation$Appender",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithoutExceptionHandler",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory$Default$2",
     "net.bytebuddy.TypeCache$Sort",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory$Default$1",
     "net.bytebuddy.description.annotation.AnnotationDescription$Loadable",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record",
     "net.bytebuddy.description.modifier.FieldManifestation",
     "net.bytebuddy.description.annotation.AnnotationSource$Empty",
     "net.bytebuddy.implementation.InvokeDynamic$AbstractDelegator",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForAnnotationValue",
     "net.bytebuddy.asm.Advice$MethodSizeHandler$Default$ForAdvice",
     "net.bytebuddy.matcher.ElementMatcher$Junction",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$Symbolic",
     "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodEnter",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForInterface",
     "net.bytebuddy.implementation.bytecode.StackManipulation$Illegal",
     "net.bytebuddy.asm.MemberSubstitution$WithoutSpecification",
     "net.bytebuddy.implementation.bind.annotation.RuntimeType$Verifier",
     "net.bytebuddy.dynamic.scaffold.TypeValidation",
     "net.bytebuddy.matcher.StringMatcher",
     "net.bytebuddy.asm.AsmVisitorWrapper$NoOp",
     "net.bytebuddy.implementation.attribute.AnnotationAppender$Target",
     "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$OriginTypeResolver",
     "net.bytebuddy.implementation.bytecode.member.HandleInvocation",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForStackManipulation",
     "net.bytebuddy.implementation.InvocationHandlerAdapter$ForField",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Ignored",
     "net.bytebuddy.asm.MemberSubstitution",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate$SimpleClassLoadingAction",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$AbstractBase$Adapter",
     "net.bytebuddy.asm.AsmVisitorWrapper$AbstractBase",
     "net.bytebuddy.description.modifier.ModifierContributor$ForParameter",
     "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$ForClassLoader$1",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$RedefinitionClassVisitor",
     "net.bytebuddy.description.annotation.AnnotationList$ForLoadedAnnotations",
     "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$ForClassLoader$2",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution",
     "net.bytebuddy.dynamic.TypeResolutionStrategy",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$ForLegacyVm",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$ParameterAnnotationAdapter",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForUnusedValue",
     "net.bytebuddy.implementation.bytecode.member.MethodInvocation",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForStringConstant",
     "net.bytebuddy.description.annotation.AnnotationDescription$Latent$Loadable",
     "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$1",
     "net.bytebuddy.agent.builder.AgentBuilder$Transformer",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForGenericArray",
     "net.bytebuddy.pool.TypePool$Resolution",
     "net.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher$AbstractFieldInstruction",
     "net.bytebuddy.implementation.attribute.AnnotationAppender$1",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$Explicit",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Prepared",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$ForSignatureVisitor$OfTypeArgument",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Initial",
     "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$Eager",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Compound$CompoundIterable$CompoundIterator",
     "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$MethodCall",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$InstanceFieldConstructor$Appender",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Unresolved",
     "net.bytebuddy.dynamic.loading.NoOpClassFileTransformer",
     "net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription$Loaded",
     "net.bytebuddy.asm.MemberRemoval",
     "net.bytebuddy.implementation.InvocationHandlerAdapter$AssignerConfigurable",
     "net.bytebuddy.dynamic.ClassFileLocator",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved$Factory",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType",
     "net.bytebuddy.implementation.bind.annotation.BindingPriority$Resolver",
     "net.bytebuddy.pool.TypePool$AbstractBase$ArrayTypeResolution",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForAnnotation",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForThrowable$Factory",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$Dispatcher",
     "net.bytebuddy.dynamic.TypeResolutionStrategy$Active",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation$Appender",
     "net.bytebuddy.build.EntryPoint$Default",
     "net.bytebuddy.description.type.TypeDescription$Generic$Builder$OfTypeVariable",
     "net.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver$ForUnnamedType",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType",
     "net.bytebuddy.asm.Advice$NoExceptionHandler",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForClassConstant",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedParameterizedType",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForCreation",
     "net.bytebuddy.dynamic.scaffold.FieldLocator$Factory",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Node$Unresolved",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$CreationAction",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested$LazyParameterizedType",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional",
     "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$7",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$TypeErasing",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$6",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$5",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$4",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod$Token",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$ForDefaultMethod",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$8",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$3",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$2",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$1",
     "net.bytebuddy.asm.Advice$StubValue",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler$Default$2",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForFloatConstant",
     "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$InstanceFieldConstructor",
     "net.bytebuddy.implementation.FixedValue$ForNullValue",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler$Default$1",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$AnnotationStripper$NonAnnotatedTypeVariable",
     "net.bytebuddy.utility.JavaConstant$MethodType$Dispatcher$CreationAction",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken",
     "net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic$1",
     "net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase",
     "net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic$2",
     "net.bytebuddy.implementation.bytecode.ByteCodeAppender$Compound",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy",
     "net.bytebuddy.asm.Advice$Dispatcher$Inactive",
     "net.bytebuddy.implementation.Implementation$Simple",
     "net.bytebuddy.description.modifier.ProvisioningState",
     "net.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArray$ForInstrumentedMethod",
     "net.bytebuddy.dynamic.NexusAccessor",
     "net.bytebuddy.description.method.ParameterList$Explicit$ForTypes",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazySuperClass",
     "net.bytebuddy.description.ModifierReviewable$OfAbstraction",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$OfMethodParameter",
     "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingTypeList",
     "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading",
     "net.bytebuddy.asm.Advice",
     "net.bytebuddy.dynamic.Transformer$ForMethod",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList",
     "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields$FieldVisitorWrapper",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$BootstrapInjection$Enabled",
     "net.bytebuddy.implementation.bind.annotation.SuperMethod$Binder",
     "net.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Pausing",
     "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForBootstrapInjection",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment",
     "net.bytebuddy.build.EntryPoint$Default$1",
     "net.bytebuddy.build.EntryPoint$Default$2",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$Compiled",
     "net.bytebuddy.build.EntryPoint$Default$3",
     "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$StreamWriting",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter$AnnotationAdapter",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$ForSuperMethodByConstructor",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableCollector",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForThisInstance",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved",
     "net.bytebuddy.description.type.TypeList$Generic$Explicit",
     "net.bytebuddy.description.NamedElement$WithOptionalName",
     "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory$Compound",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy",
     "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$1",
     "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate",
     "net.bytebuddy.implementation.Implementation",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Explicit",
     "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$ForLoadedSuperClass",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver",
     "net.bytebuddy.jar.asm.ClassWriter",
     "net.bytebuddy.matcher.StringMatcher$1",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target$Resolved",
     "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate$ImplicitlyTypedUnboxingResponsible",
     "net.bytebuddy.implementation.Implementation$Compound",
     "net.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnMethod",
     "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$Suppressing",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$ForJava7CapableVm",
     "net.bytebuddy.pool.TypePool$Resolution$Simple",
     "net.bytebuddy.implementation.bytecode.StackSize$1",
     "net.bytebuddy.implementation.Implementation$Context$Disabled",
     "net.bytebuddy.dynamic.scaffold.MethodGraph",
     "net.bytebuddy.implementation.auxiliary.MethodCallProxy$MethodCall",
     "net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer",
     "net.bytebuddy.dynamic.NexusAccessor$Dispatcher$CreationAction",
     "net.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes$WithResolvedErasure",
     "net.bytebuddy.implementation.Implementation$Context$Default",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding",
     "net.bytebuddy.matcher.DefinedShapeMatcher",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher",
     "net.bytebuddy.matcher.EqualityMatcher",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForVariable",
     "net.bytebuddy.asm.MemberSubstitution$WithoutSpecification$ForMatchedMethod",
     "net.bytebuddy.implementation.bind.annotation.BindingPriority",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterator",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Record$ForExplicitField",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$Record$Illegal",
     "net.bytebuddy.pool.TypePool$AbstractBase$RawDescriptionArray$Loaded",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating",
     "net.bytebuddy.implementation.bytecode.collection.CollectionFactory",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForInterceptedMethod",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$FieldDefinitionAdapter",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler",
     "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument",
     "net.bytebuddy.agent.builder.AgentBuilder$Listener$NoOp",
     "net.bytebuddy.matcher.CachingMatcher",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType",
     "net.bytebuddy.implementation.FixedValue$ForThisValue",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForAllArguments",
     "net.bytebuddy.dynamic.NexusAccessor$Dispatcher$Unavailable",
     "net.bytebuddy.implementation.FieldAccessor$FieldNameExtractor$ForBeanProperty",
     "net.bytebuddy.implementation.bind.annotation.DefaultCall$Binder$DefaultMethodLocator$Implicit",
     "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodExit",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$2",
     "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$1",
     "net.bytebuddy.matcher.ElementMatcher$Junction$AbstractBase",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$NoOp",
     "net.bytebuddy.description.method.ParameterList",
     "net.bytebuddy.matcher.MethodSortMatcher$1",
     "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfField",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForStaticMethod",
     "net.bytebuddy.implementation.MethodCall$TargetHandler$ForSelfOrStaticInvocation",
     "net.bytebuddy.utility.visitor.StackAwareMethodVisitor$1",
     "net.bytebuddy.implementation.attribute.TypeAttributeAppender$ForInstrumentedType",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$ForLoadedType",
     "net.bytebuddy.description.type.TypeDescription$ForPackageDescription",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer",
     "net.bytebuddy.matcher.DeclaringTypeMatcher",
     "net.bytebuddy.jar.asm.commons.SimpleRemapper",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$InvariantBinding",
     "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedMethod",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$CodeTranslationVisitor$ForMethodExit",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter$SkipDispatcher$ForValue",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$Malformed",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver",
     "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$Latent",
     "net.bytebuddy.description.ByteCodeElement$Token$TokenList",
     "net.bytebuddy.description.method.MethodList$Explicit",
     "net.bytebuddy.implementation.bind.annotation.This",
     "net.bytebuddy.description.type.TypeList$Generic$OfLoadedInterfaceTypes",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$Minimal",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved$Simple",
     "net.bytebuddy.description.type.TypeList$Generic$ForLoadedTypes$OfTypeVariables",
     "net.bytebuddy.description.ModifierReviewable$OfEnumeration",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTokenNormalization",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForJavaConstant",
     "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher",
     "net.bytebuddy.pool.TypePool$Default$TypeExtractor$MethodExtractor",
     "net.bytebuddy.implementation.attribute.AnnotationValueFilter",
     "net.bytebuddy.description.annotation.AnnotationValue$AbstractBase",
     "net.bytebuddy.implementation.attribute.AnnotationValueFilter$Default",
     "net.bytebuddy.description.type.TypeList$Generic$ForLoadedTypes",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw",
     "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Default",
     "net.bytebuddy.description.type.TypeDescription$Generic$Builder$OfNonGenericType",
     "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$Preserved",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Resolved",
     "net.bytebuddy.dynamic.ClassFileLocator$ForModule$WeaklyReferenced",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous",
     "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$ForJava8CapableVm",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation$Compiled",
     "net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription",
     "net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription",
     "net.bytebuddy.asm.TypeConstantAdjustment$TypeConstantDissolvingClassVisitor",
     "net.bytebuddy.jar.asm.commons.JSRInlinerAdapter$Instantiation",
     "net.bytebuddy.implementation.bytecode.constant.LongConstant$ConstantPool",
     "net.bytebuddy.pool.TypePool$Explicit",
     "net.bytebuddy.jar.asm.Edge",
     "net.bytebuddy.implementation.bind.annotation.AllArguments$Assignment",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation$OfDefaultValue",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForField$ReadWrite",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate",
     "net.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnField",
     "net.bytebuddy.description.method.MethodDescription$InGenericShape",
     "net.bytebuddy.implementation.bind.MethodNameEqualityResolver",
     "net.bytebuddy.asm.MemberSubstitution$Substitution$Compound",
     "net.bytebuddy.ByteBuddy$EnumerationImplementation",
     "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$Bound",
     "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$ForAnnotationProperty$Bound",
     "net.bytebuddy.implementation.FieldAccessor$FieldNameExtractor",
     "net.bytebuddy.agent.builder.AgentBuilder$Identified",
     "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$OffsetLoading",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy",
     "net.bytebuddy.dynamic.scaffold.TypeInitializer$Simple",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved$WithImplicitType",
     "net.bytebuddy.NamingStrategy$AbstractBase",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$ValidatingFieldVisitor",
     "net.bytebuddy.implementation.bytecode.assign.Assigner$1",
     "net.bytebuddy.implementation.StubMethod",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader",
     "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher",
     "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfLegacyVmMethod",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$Sort",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$SerializationImplementation",
     "net.bytebuddy.description.ModifierReviewable$ForMethodDescription",
     "net.bytebuddy.implementation.bytecode.constant.MethodConstant$ForConstructor",
     "net.bytebuddy.implementation.auxiliary.TypeProxy$ForSuperMethodByReflectionFactory",
     "net.bytebuddy.description.modifier.EnumerationState",
     "net.bytebuddy.implementation.SuperMethodCall",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForJavaSignature",
     "net.bytebuddy.description.field.FieldList",
     "net.bytebuddy.agent.builder.AgentBuilder$1",
     "net.bytebuddy.jar.asm.commons.LocalVariablesSorter",
     "net.bytebuddy.implementation.MethodDelegation$Appender",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key",
     "net.bytebuddy.implementation.Implementation$Context$Default$FieldGetterDelegation",
     "net.bytebuddy.description.method.MethodDescription$AbstractBase",
     "net.bytebuddy.implementation.bytecode.assign.TypeCasting",
     "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$BridgeMethodImplementation",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition",
     "net.bytebuddy.implementation.bind.annotation.Morph$Binder",
     "net.bytebuddy.dynamic.loading.ClassInjector",
     "net.bytebuddy.utility.JavaModule",
     "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedConstructor",
     "net.bytebuddy.description.type.TypeDescription$1",
     "net.bytebuddy.implementation.bytecode.assign.Assigner$Refusing",
     "net.bytebuddy.jar.asm.commons.RemappingAnnotationAdapter",
     "net.bytebuddy.dynamic.loading.MultipleParentClassLoader$CompoundEnumeration",
     "net.bytebuddy.NamingStrategy$PrefixingRandom",
     "net.bytebuddy.implementation.Implementation$Context$Default$FieldGetter",
     "net.bytebuddy.implementation.bytecode.StackManipulation",
     "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved$WithExplicitType",
     "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$ConstructorCall",
     "net.bytebuddy.pool.TypePool$Default",
     "net.bytebuddy.implementation.FieldAccessor$ForImplicitProperty",
     "net.bytebuddy.description.annotation.AnnotationDescription",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation",
     "net.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding$Anonymous",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForTotal",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating",
     "net.bytebuddy.description.TypeVariableSource$Visitor",
     "net.bytebuddy.description.method.ParameterList$TypeSubstituting",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing$SlicingIterable$SlicingIterator",
     "net.bytebuddy.pool.TypePool$AbstractBase",
     "net.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice$WithoutExceptionHandling",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$WithFixedDelay",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition",
     "net.bytebuddy.description.method.MethodList$AbstractBase",
     "net.bytebuddy.jar.asm.Label",
     "net.bytebuddy.implementation.MethodCall",
     "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableExtractor",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$AnnotationAdapter",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Factory",
     "net.bytebuddy.implementation.bind.annotation.Default$Binder$TypeLocator",
     "net.bytebuddy.matcher.MethodSortMatcher$Sort",
     "net.bytebuddy.asm.Advice$OffsetMapping$Factory$Simple",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType$LazyPrimitiveType",
     "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForField",
     "net.bytebuddy.asm.Advice$StackMapFrameHandler",
     "net.bytebuddy.dynamic.scaffold.FieldLocator",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationDescription",
     "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$RedefinitionClassVisitor$AttributeObtainingFieldVisitor",
     "net.bytebuddy.description.modifier.Visibility$1",
     "net.bytebuddy.dynamic.Transformer$ForField$TransformedField",
     "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$Resolved",
     "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection",
     "net.bytebuddy.agent.builder.AgentBuilder$CircularityLock$Inactive",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyPackageDescription",
     "net.bytebuddy.matcher.MethodSortMatcher$Sort$5",
     "net.bytebuddy.matcher.MethodSortMatcher$Sort$4",
     "net.bytebuddy.matcher.MethodSortMatcher$Sort$3",
     "net.bytebuddy.matcher.MethodSortMatcher$Sort$2",
     "net.bytebuddy.matcher.MethodSortMatcher$Sort$1",
     "net.bytebuddy.dynamic.ClassFileLocator$ForFolder",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$Node$Sort",
     "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$ChildFirst",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$ForInnerClass",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeRegistrant",
     "net.bytebuddy.matcher.FieldTypeMatcher",
     "net.bytebuddy.implementation.ExceptionMethod$ConstructionDelegate",
     "net.bytebuddy.implementation.bytecode.StackManipulation$Compound",
     "net.bytebuddy.jar.asm.commons.RemappingClassAdapter",
     "net.bytebuddy.implementation.bytecode.constant.MethodConstant$CanCacheIllegal",
     "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate",
     "net.bytebuddy.ClassFileVersion",
     "net.bytebuddy.description.type.TypeList$Empty",
     "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$CreationAction",
     "net.bytebuddy.implementation.attribute.AnnotationAppender$Default",
     "net.bytebuddy.description.enumeration.EnumerationDescription$AbstractBase",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition",
     "net.bytebuddy.dynamic.scaffold.MethodGraph$NodeList",
     "net.bytebuddy.pool.TypePool$LazyFacade$LazyResolution",
     "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Compiled",
     "net.bytebuddy.jar.asm.FieldVisitor",
     "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldSetter",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$Malformed$TokenList",
     "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodExit",
     "net.bytebuddy.implementation.bind.annotation.Default$Binder$TypeLocator$ForParameterType",
     "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$ForClassLoader",
     "net.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder",
     "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$NoOp",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$TypeVariableDefinitionAdapter",
     "net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction",
     "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod$Tokenized",
     "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider",
     "net.bytebuddy.implementation.InvokeDynamic$WithImplicitType",
     "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$Initializable",
     "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfType$InterfaceTypeRegistrant",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$OptionalMethodMatchAdapter",
     "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$UnlockingClassLoadingDelegate",
     "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener",
     "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForField$ReadOnly",
     "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder",
     "net.bytebuddy.implementation.bytecode.member.MethodInvocation$IllegalInvocation",
     "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Delegator",
     "net.bytebuddy.dynamic.ClassFileLocator$ForJarFile"
    ],
    "usedTypes": [
     "net.bytebuddy.implementation.bind.annotation.This",
     "net.bytebuddy.TypeCache$SimpleKey",
     "net.bytebuddy.dynamic.DynamicType",
     "net.bytebuddy.dynamic.DynamicType$Unloaded",
     "net.bytebuddy.dynamic.DynamicType$Builder",
     "net.bytebuddy.implementation.MethodDelegation",
     "net.bytebuddy.TypeCache$Sort",
     "net.bytebuddy.ByteBuddy",
     "net.bytebuddy.dynamic.DynamicType$Loaded",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition",
     "net.bytebuddy.implementation.bind.annotation.RuntimeType",
     "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition",
     "net.bytebuddy.TypeCache$WithInlineExpunction",
     "net.bytebuddy.TypeCache",
     "net.bytebuddy.implementation.bind.annotation.SuperCall",
     "net.bytebuddy.matcher.ElementMatcher",
     "net.bytebuddy.description.method.MethodDescription",
     "net.bytebuddy.matcher.ElementMatchers",
     "net.bytebuddy.matcher.ElementMatcher$Junction",
     "net.bytebuddy.implementation.bind.annotation.SuperMethod"
    ],
    "usageRatio": 0.010769230769230769,
    "children": []
   },
   {
    "id": "org.mockito:mockito-core:jar:2.11.0:test",
    "coordinates": "org.mockito:mockito-core:2.11.0",
    "groupId": "org.mockito",
    "artifactId": "mockito-core",
    "version": "2.11.0",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 538482,
    "type": "direct",
    "status": "used",
    "parent": "org.assertj:assertj-core:bundle:3.9.1",
    "allTypes": [
     "org.mockito.internal.debugging.InvocationsPrinter$1",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls",
     "org.mockito.internal.hamcrest.MatcherGenericTypeExtractor",
     "org.mockito.internal.util.ObjectMethodsGuru",
     "org.mockito.internal.verification.AtLeast",
     "org.mockito.internal.handler.MockHandlerFactory",
     "org.mockito.internal.creation.bytebuddy.MockAccess",
     "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$SerializationFeatureKey",
     "org.mockito.internal.invocation.TypeSafeMatching",
     "org.mockito.internal.matchers.InstanceOf",
     "org.mockito.internal.configuration.injection.filter.OngoingInjector",
     "org.mockito.internal.debugging.VerboseMockInvocationLogger",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction",
     "org.mockito.internal.configuration.plugins.PluginLoader$1",
     "org.mockito.internal.exceptions.stacktrace.StackTraceFilter",
     "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool",
     "org.mockito.internal.runners.util.FailureDetector",
     "org.mockito.internal.invocation.finder.AllInvocationsFinder",
     "org.mockito.exceptions.misusing.FriendlyReminderException",
     "org.mockito.internal.progress.SequenceNumber",
     "org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf",
     "org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings",
     "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator",
     "org.mockito.exceptions.verification.SmartNullPointerException",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks",
     "org.mockito.internal.junit.VerificationCollectorImpl$1",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$8",
     "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder",
     "org.mockito.internal.junit.VerificationCollectorImpl$2",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$7",
     "org.mockito.internal.util.ConsoleMockitoLogger",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$9",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4",
     "org.mockito.internal.matchers.LessOrEqual",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$3",
     "org.mockito.internal.invocation.UnusedStubsFinder",
     "org.mockito.internal.debugging.InvocationsPrinter",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$6",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$5",
     "org.mockito.internal.verification.VerificationOverTimeImpl",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$2",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$1",
     "org.mockito.internal.util.reflection.AccessibilityChanger",
     "org.mockito.internal.junit.util.TestName",
     "org.mockito.internal.verification.VerificationModeFactory",
     "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1",
     "org.mockito.listeners.MockCreationListener",
     "org.mockito.internal.junit.StubbingArgMismatches",
     "org.mockito.internal.exceptions.Reporter",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$RealMethodCall",
     "org.mockito.internal.configuration.IndependentAnnotationEngine",
     "org.mockito.internal.verification.api.VerificationDataInOrder",
     "org.mockito.invocation.MatchableInvocation",
     "org.mockito.internal.creation.SuspendMethod",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey",
     "org.mockito.verification.VerificationEvent",
     "org.mockito.internal.progress.ArgumentMatcherStorageImpl",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$1",
     "org.mockito.internal.junit.UniversalTestListener",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SerializableRealMethodCall",
     "org.mockito.internal.verification.NoMoreInteractions",
     "org.mockito.internal.configuration.injection.MockInjectionStrategy",
     "org.mockito.internal.matchers.CompareEqual",
     "org.mockito.internal.creation.bytebuddy.SubclassInjectionLoader",
     "org.mockito.internal.invocation.RealMethod",
     "org.mockito.exceptions.base.MockitoSerializationIssue",
     "org.mockito.internal.runners.util.RunnerProvider",
     "org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator",
     "org.mockito.NotExtensible",
     "org.mockito.MockSettings",
     "org.mockito.listeners.VerificationListener",
     "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner",
     "org.mockito.internal.debugging.LocationImpl",
     "org.mockito.internal.invocation.InvocationsFinder$1",
     "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner",
     "org.mockito.exceptions.verification.NeverWantedButInvoked",
     "org.mockito.junit.MockitoRule",
     "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler",
     "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching",
     "org.mockito.plugins.MockMaker$TypeMockability",
     "org.mockito.listeners.MethodInvocationReport",
     "org.mockito.verification.Timeout",
     "org.mockito.internal.creation.instance.InstantiationException",
     "org.mockito.internal.util.reflection.InstanceField",
     "org.mockito.internal.stubbing.answers.DoesNothing",
     "org.mockito.Spy",
     "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
     "org.mockito.internal.listeners.StubbingLookupListener",
     "org.mockito.exceptions.base.MockitoInitializationException",
     "org.mockito.internal.junit.MockitoTestListener",
     "org.mockito.internal.verification.RegisteredInvocations",
     "org.mockito.internal.runners.DefaultInternalRunner",
     "org.mockito.session.MockitoSessionBuilder",
     "org.mockito.BDDMockito$BDDMyOngoingStubbing",
     "org.mockito.exceptions.verification.ArgumentsAreDifferent",
     "org.mockito.internal.matchers.text.MatchersPrinter",
     "org.mockito.internal.stubbing.answers.Returns",
     "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper",
     "org.mockito.runners.MockitoJUnitRunner$Strict",
     "org.mockito.internal.debugging.WarningsFinder",
     "org.mockito.internal.creation.settings.CreationSettings",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator",
     "org.mockito.AdditionalMatchers",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport",
     "org.mockito.internal.invocation.DefaultInvocationFactory",
     "org.mockito.internal.util.reflection.BeanPropertySetter",
     "org.mockito.Captor",
     "org.mockito.invocation.DescribedInvocation",
     "org.mockito.internal.stubbing.StubberImpl",
     "org.mockito.internal.util.collections.IdentitySet",
     "org.mockito.ArgumentCaptor",
     "org.mockito.internal.configuration.MockAnnotationProcessor",
     "org.mockito.internal.InternalMockHandler",
     "org.mockito.junit.MockitoJUnit",
     "org.mockito.internal.junit.StrictStubsRunnerTestListener",
     "org.mockito.stubbing.Answer1",
     "org.mockito.stubbing.Answer3",
     "org.mockito.internal.stubbing.answers.ReturnsElementsOf",
     "org.mockito.stubbing.Answer2",
     "org.mockito.stubbing.Answer5",
     "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet",
     "org.mockito.stubbing.Answer4",
     "org.mockito.internal.creation.instance.DefaultInstantiatorProvider",
     "org.mockito.BDDMockito$BDDOngoingStubbingImpl",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace",
     "org.mockito.internal.reporting.Discrepancy",
     "org.mockito.internal.verification.Calls",
     "org.mockito.internal.util.reflection.GenericMaster",
     "org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner",
     "org.mockito.ArgumentMatchers",
     "org.mockito.internal.matchers.text.ArrayIterator",
     "org.mockito.mock.MockCreationSettings",
     "org.mockito.internal.configuration.plugins.PluginFileReader",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal$1",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal$2",
     "org.mockito.internal.stubbing.InvocationContainerImpl",
     "org.mockito.internal.util.StringUtil",
     "org.mockito.internal.InOrderImpl",
     "org.mockito.internal.util.MockitoLogger",
     "org.mockito.exceptions.misusing.MissingMethodInvocationException",
     "org.mockito.exceptions.verification.TooLittleActualInvocations",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback",
     "org.mockito.internal.stubbing.answers.InvocationInfo",
     "org.mockito.MockitoFramework",
     "org.mockito.internal.configuration.InjectingAnnotationEngine",
     "org.mockito.exceptions.verification.TooManyActualInvocations",
     "org.mockito.quality.MockitoHint",
     "org.mockito.internal.matchers.ArrayEquals",
     "org.mockito.internal.junit.UnusedStubbings",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals",
     "org.mockito.internal.util.reflection.Fields",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod",
     "org.mockito.exceptions.misusing.RedundantListenerException",
     "org.mockito.internal.matchers.Not",
     "org.mockito.internal.configuration.injection.ConstructorInjection",
     "org.mockito.internal.invocation.MockitoMethod",
     "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter",
     "org.mockito.internal.junit.ExceptionFactory$JUnitArgsAreDifferent",
     "org.mockito.internal.util.Supplier",
     "org.mockito.internal.debugging.Localized",
     "org.mockito.internal.util.collections.ListUtil$Converter",
     "org.mockito.internal.util.reflection.SuperTypesLastSorter",
     "org.mockito.internal.junit.UniversalTestListener$1",
     "org.mockito.plugins.PluginSwitch",
     "org.mockito.internal.verification.checkers.AtLeastDiscrepancy",
     "org.mockito.internal.verification.Times",
     "org.mockito.internal.util.collections.Iterables",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry",
     "org.mockito.invocation.InvocationOnMock",
     "org.mockito.invocation.InvocationContainer",
     "org.mockito.internal.verification.InOrderWrapper",
     "org.mockito.internal.creation.util.MockitoMethodProxy",
     "org.mockito.BDDMockito$BDDStubber",
     "org.mockito.internal.configuration.injection.scanner.MockScanner",
     "org.mockito.internal.listeners.VerificationStartedNotifier$Event",
     "org.mockito.configuration.IMockitoConfiguration",
     "org.mockito.MockitoDebugger",
     "org.mockito.stubbing.OngoingStubbing",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal$3",
     "org.mockito.internal.matchers.LocalizedMatcher",
     "org.mockito.exceptions.misusing.PotentialStubbingProblem",
     "org.mockito.internal.util.reflection.Fields$3",
     "org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock",
     "org.mockito.internal.util.reflection.Fields$1",
     "org.mockito.internal.util.reflection.LenientCopyTool",
     "org.mockito.internal.util.reflection.Fields$2",
     "org.mockito.internal.junit.StubbingHint",
     "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport",
     "org.mockito.internal.invocation.MatchersBinder",
     "org.mockito.internal.listeners.VerificationStartedNotifier",
     "org.mockito.BDDMockito$Then",
     "org.mockito.internal.creation.DelegatingMethod",
     "org.mockito.verification.VerificationStrategy",
     "org.mockito.exceptions.verification.VerificationInOrderFailure",
     "org.mockito.internal.debugging.WarningsPrinterImpl",
     "org.mockito.exceptions.misusing.NullInsteadOfMockException",
     "org.mockito.internal.handler.NotifiedMethodInvocationReport",
     "org.mockito.internal.matchers.Matches",
     "org.mockito.internal.invocation.MatcherApplicationStrategy",
     "org.mockito.internal.util.DefaultMockingDetails",
     "org.mockito.exceptions.misusing.UnnecessaryStubbingException",
     "org.mockito.internal.stubbing.answers.ReturnsArgumentAt",
     "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner",
     "org.mockito.listeners.MockitoListener",
     "org.mockito.internal.verification.api.VerificationDataInOrderImpl",
     "org.mockito.internal.runners.util.TestMethodsFinder",
     "org.mockito.AdditionalAnswers",
     "org.mockito.internal.invocation.AbstractAwareMethod",
     "org.mockito.internal.invocation.InvocationComparator",
     "org.mockito.verification.After",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForHashCode",
     "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter$1",
     "org.mockito.internal.verification.VerificationWrapperInOrderWrapper",
     "org.mockito.internal.stubbing.answers.AnswersWithDelay",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$LatentKey",
     "org.mockito.internal.util.concurrent.WeakConcurrentSet$1",
     "org.mockito.plugins.AnnotationEngine",
     "org.mockito.exceptions.misusing.UnfinishedMockingSessionException",
     "org.mockito.internal.util.reflection.GenericTypeExtractor",
     "org.mockito.Matchers",
     "org.mockito.exceptions.verification.NoInteractionsWanted",
     "org.mockito.internal.junit.util.JUnitFailureHacker",
     "org.mockito.internal.junit.UnusedStubbingsFinder",
     "org.mockito.mock.MockName",
     "org.mockito.internal.verification.api.InOrderContext",
     "org.mockito.internal.matchers.Same",
     "org.mockito.internal.verification.api.VerificationData",
     "org.mockito.internal.util.collections.Sets",
     "org.mockito.internal.util.Primitives",
     "org.mockito.exceptions.verification.WantedButNotInvoked",
     "org.mockito.invocation.InvocationFactory",
     "org.mockito.internal.util.reflection.Fields$InstanceFields",
     "org.mockito.internal.verification.DefaultRegisteredInvocations",
     "org.mockito.Answers",
     "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker",
     "org.mockito.internal.verification.VerificationEventImpl",
     "org.mockito.internal.configuration.plugins.PluginFinder",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice",
     "org.mockito.internal.util.MockUtil",
     "org.mockito.internal.util.Timer",
     "org.mockito.internal.stubbing.answers.DefaultAnswerValidator",
     "org.mockito.internal.invocation.RealMethod$IsIllegal",
     "org.mockito.internal.verification.api.VerificationInOrderMode",
     "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator",
     "org.mockito.internal.reporting.PrintSettings",
     "org.mockito.internal.junit.JUnitRule",
     "org.mockito.internal.util.reflection.FieldInitializationReport",
     "org.mockito.internal.matchers.Or",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForEquals",
     "org.mockito.mock.SerializableMode",
     "org.mockito.internal.invocation.InvocationMatcher",
     "org.mockito.internal.reporting.SmartPrinter",
     "org.mockito.internal.runners.StrictRunner",
     "org.mockito.internal.junit.ExceptionFactory",
     "org.mockito.internal.debugging.MockitoDebuggerImpl",
     "org.mockito.internal.matchers.Equality",
     "org.mockito.internal.matchers.CompareTo",
     "org.mockito.internal.junit.NoOpTestListener",
     "org.mockito.internal.handler.MockHandlerImpl",
     "org.mockito.internal.matchers.Find",
     "org.mockito.internal.matchers.LessThan",
     "org.mockito.exceptions.misusing.NotAMockException",
     "org.mockito.internal.stubbing.OngoingStubbingImpl",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$ParameterAddingClassVisitor",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues",
     "org.mockito.internal.stubbing.StubbingComparator",
     "org.mockito.internal.util.JavaEightUtil",
     "org.mockito.internal.progress.MockingProgressImpl",
     "org.mockito.internal.framework.DefaultMockitoFramework",
     "org.mockito.internal.matchers.StartsWith",
     "org.mockito.plugins.MockitoPlugins",
     "org.mockito.internal.configuration.GlobalConfiguration",
     "org.mockito.verification.VerificationMode",
     "org.mockito.plugins.MockMaker",
     "org.mockito.internal.configuration.DefaultInjectionEngine",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces",
     "org.mockito.internal.junit.ArgMismatchFinder",
     "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker",
     "org.mockito.exceptions.misusing.MockitoConfigurationException",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType",
     "org.mockito.runners.package-info",
     "org.mockito.junit.MockitoJUnitRunner",
     "org.mockito.internal.matchers.And",
     "org.mockito.internal.util.collections.ListUtil",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$BoundedType",
     "org.mockito.internal.MockitoCore",
     "org.mockito.internal.util.io.IOUtil",
     "org.mockito.listeners.InvocationListener",
     "org.mockito.listeners.VerificationStartedListener",
     "org.mockito.internal.debugging.FindingsListener",
     "org.mockito.internal.runners.DefaultInternalRunner$1$1",
     "org.mockito.stubbing.Stubber",
     "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker",
     "org.mockito.stubbing.Answer",
     "org.mockito.internal.matchers.Any",
     "org.mockito.stubbing.Stubbing",
     "org.mockito.Incubating",
     "org.mockito.stubbing.ValidableAnswer",
     "org.mockito.exceptions.misusing.WrongTypeOfReturnValue",
     "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter",
     "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner",
     "org.mockito.exceptions.base.MockitoAssertionError",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializableMock",
     "org.mockito.internal.invocation.InvocationMarker",
     "org.mockito.internal.framework.DefaultMockitoSession$1",
     "org.mockito.internal.matchers.text.ValuePrinter",
     "org.mockito.runners.MockitoJUnitRunner",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$LazyHolder",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$1",
     "org.mockito.internal.verification.SingleRegisteredInvocation",
     "org.mockito.internal.stubbing.answers.ThrowsException",
     "org.mockito.internal.creation.instance.Instantiator",
     "org.mockito.internal.debugging.WarningsCollector",
     "org.mockito.ArgumentMatcher",
     "org.mockito.internal.matchers.ContainsExtraTypeInfo",
     "org.mockito.junit.MockitoJUnitRunner$Silent",
     "org.mockito.internal.verification.checkers.MissingInvocationChecker",
     "org.mockito.internal.junit.UnusedStubbings$1",
     "org.mockito.internal.util.Checks",
     "org.mockito.verification.VerificationWithTimeout",
     "org.mockito.internal.util.MockCreationValidator",
     "org.mockito.invocation.StubInfo",
     "org.mockito.internal.verification.AtMost",
     "org.mockito.internal.creation.bytebuddy.BytecodeGenerator",
     "org.mockito.internal.creation.bytebuddy.MockFeatures",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType",
     "org.mockito.internal.configuration.IndependentAnnotationEngine$1",
     "org.mockito.MockitoSession",
     "org.mockito.internal.hamcrest.HamcrestArgumentMatcher",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$Identifier",
     "org.mockito.exceptions.misusing.InvalidUseOfMatchersException",
     "org.mockito.internal.util.concurrent.WeakConcurrentSet",
     "org.mockito.internal.matchers.EqualsWithDelta",
     "org.mockito.junit.MockitoJUnitRunner$StrictStubs",
     "org.mockito.internal.matchers.GreaterThan",
     "org.mockito.internal.configuration.SpyAnnotationEngine",
     "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1",
     "org.mockito.internal.configuration.ClassPathLoader",
     "org.mockito.exceptions.base.MockitoException",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectOutputStream",
     "org.mockito.internal.framework.DefaultMockitoSession",
     "org.mockito.internal.stubbing.answers.ClonesArguments",
     "org.mockito.internal.verification.Only",
     "org.mockito.internal.stubbing.ConsecutiveStubbing",
     "org.mockito.internal.stubbing.BaseStubbing",
     "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
     "org.mockito.internal.junit.DefaultStubbingLookupListener",
     "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter",
     "org.mockito.internal.util.reflection.FieldReader",
     "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver",
     "org.mockito.internal.junit.UnusedStubbingsFinder$1",
     "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker",
     "org.mockito.internal.matchers.Null",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal",
     "org.mockito.internal.junit.VerificationCollectorImpl$VerificationWrapper",
     "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$1",
     "org.mockito.internal.matchers.apachecommons.ReflectionEquals",
     "org.mockito.internal.verification.VerificationWrapper",
     "org.mockito.internal.verification.DefaultRegisteredInvocations$1",
     "org.mockito.internal.matchers.VarargMatcher",
     "org.mockito.junit.VerificationCollector",
     "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins",
     "org.mockito.exceptions.misusing.UnfinishedVerificationException",
     "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer",
     "org.mockito.internal.junit.TestFinishedEvent",
     "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator",
     "org.mockito.internal.util.Platform",
     "org.mockito.invocation.Location",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker",
     "org.mockito.internal.creation.MockSettingsImpl",
     "org.mockito.internal.debugging.LoggingListener",
     "org.mockito.MockitoAnnotations",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject",
     "org.mockito.stubbing.VoidAnswer1",
     "org.mockito.stubbing.VoidAnswer3",
     "org.mockito.stubbing.VoidAnswer2",
     "org.mockito.internal.progress.MockingProgressImpl$1",
     "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializationProxy",
     "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$1",
     "org.mockito.internal.verification.MockAwareVerificationMode",
     "org.mockito.internal.progress.MockingProgress",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ReturnValueWrapper",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType",
     "org.mockito.internal.exceptions.MockitoLimitations",
     "org.mockito.internal.stubbing.answers.CallsRealMethods",
     "org.mockito.internal.verification.Description",
     "org.mockito.internal.invocation.ArgumentsProcessor",
     "org.mockito.internal.handler.InvocationNotifierHandler",
     "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1",
     "org.mockito.internal.junit.VerificationCollectorImpl",
     "org.mockito.internal.util.collections.ListUtil$Filter",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
     "org.mockito.internal.util.reflection.GenericMetadataSupport",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper",
     "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString",
     "org.mockito.internal.creation.instance.ObjenesisInstantiator",
     "org.mockito.internal.runners.RunnerFactory",
     "org.mockito.Mock",
     "org.mockito.internal.util.reflection.FieldInitializer",
     "org.mockito.internal.invocation.SerializableMethod",
     "org.mockito.BDDMockito$BDDStubberImpl",
     "org.mockito.internal.matchers.GreaterOrEqual",
     "org.mockito.internal.matchers.text.MatcherToString",
     "org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
     "org.mockito.internal.configuration.injection.filter.OngoingInjector$1",
     "org.mockito.internal.invocation.ArgumentMatcherAction",
     "org.mockito.internal.matchers.InstanceOf$VarArgAware",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SelfCallInfo",
     "org.mockito.invocation.MockHandler",
     "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker$1",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectInputStream",
     "org.mockito.InjectMocks",
     "org.mockito.internal.creation.bytebuddy.InterceptedInvocation",
     "org.mockito.plugins.InstantiatorProvider",
     "org.mockito.internal.runners.RunnerFactory$1",
     "org.mockito.internal.runners.RunnerFactory$2",
     "org.mockito.internal.runners.RunnerFactory$3",
     "org.mockito.stubbing.VoidAnswer5",
     "org.mockito.internal.progress.ArgumentMatcherStorage",
     "org.mockito.stubbing.VoidAnswer4",
     "org.mockito.internal.junit.DefaultTestFinishedEvent",
     "org.mockito.internal.runners.InternalRunner",
     "org.mockito.internal.util.MockNameImpl",
     "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$1",
     "org.mockito.internal.matchers.Equals",
     "org.mockito.BDDMockito",
     "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport",
     "org.mockito.internal.junit.MismatchReportingTestListener",
     "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1",
     "org.mockito.runners.VerboseMockitoJUnitRunner$1",
     "org.mockito.internal.util.reflection.FieldSetter",
     "org.mockito.internal.creation.bytebuddy.ClassCreatingMockMaker",
     "org.mockito.internal.configuration.plugins.PluginRegistry",
     "org.mockito.internal.configuration.CaptorAnnotationProcessor",
     "org.mockito.configuration.AnnotationEngine",
     "org.mockito.hamcrest.MockitoHamcrest",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$10",
     "org.mockito.invocation.Invocation",
     "org.mockito.internal.stubbing.StubbedInvocationMatcher",
     "org.mockito.configuration.DefaultMockitoConfiguration",
     "org.mockito.internal.exceptions.VerificationAwareInvocation",
     "org.mockito.internal.runners.DefaultTestFinishedEvent",
     "org.mockito.verification.VerificationAfterDelay",
     "org.mockito.internal.session.DefaultMockitoSessionBuilder",
     "org.mockito.internal.creation.instance.ConstructorInstantiator",
     "org.mockito.runners.MockitoJUnitRunner$Silent",
     "org.mockito.internal.configuration.plugins.PluginLoader",
     "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter",
     "org.mockito.internal.configuration.injection.MockInjectionStrategy$1",
     "org.mockito.internal.handler.NullResultGuardian",
     "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer",
     "org.mockito.internal.invocation.RealMethod$FromCallable",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$MethodParameterStrippingMethodVisitor",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport",
     "org.mockito.internal.creation.bytebuddy.SubclassLoader",
     "org.mockito.internal.matchers.NotNull",
     "org.mockito.internal.configuration.plugins.Plugins",
     "org.mockito.internal.configuration.injection.filter.MockCandidateFilter",
     "org.mockito.internal.configuration.injection.MockInjection$1",
     "org.mockito.internal.matchers.text.FormattedText",
     "org.mockito.runners.VerboseMockitoJUnitRunner",
     "org.mockito.internal.matchers.Contains",
     "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
     "org.mockito.plugins.StackTraceCleanerProvider",
     "org.mockito.internal.matchers.CapturingMatcher",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType",
     "org.mockito.listeners.VerificationStartedEvent",
     "org.mockito.internal.junit.JUnitRule$1",
     "org.mockito.internal.matchers.EndsWith",
     "org.mockito.exceptions.misusing.UnfinishedStubbingException",
     "org.mockito.quality.Strictness",
     "org.mockito.internal.util.reflection.SuperTypesLastSorter$1",
     "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
     "org.mockito.internal.invocation.StubInfoImpl",
     "org.mockito.internal.invocation.InvocationMatcher$1",
     "org.mockito.internal.verification.VerificationDataImpl",
     "org.mockito.internal.matchers.CapturesArguments",
     "org.mockito.internal.configuration.injection.PropertyAndSetterInjection",
     "org.mockito.internal.util.reflection.FieldCopier",
     "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver",
     "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1",
     "org.mockito.internal.progress.ThreadSafeMockingProgress",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$1",
     "org.mockito.MockingDetails",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap",
     "org.mockito.internal.exceptions.util.ScenarioPrinter",
     "org.mockito.internal.invocation.InvocationsFinder",
     "org.mockito.internal.verification.InOrderContextImpl",
     "org.mockito.InOrder",
     "org.mockito.junit.MockitoJUnitRunner$Strict",
     "org.mockito.internal.junit.UnnecessaryStubbingsReporter",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
     "org.mockito.internal.reporting.Pluralizer",
     "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder",
     "org.mockito.exceptions.stacktrace.StackTraceCleaner",
     "org.mockito.Mockito",
     "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue",
     "org.mockito.internal.runners.DefaultInternalRunner$1",
     "org.mockito.internal.configuration.injection.MockInjection",
     "org.mockito.internal.configuration.FieldAnnotationProcessor",
     "org.mockito.internal.progress.ThreadSafeMockingProgress$1",
     "org.mockito.BDDMockito$ThenImpl"
    ],
    "usedTypes": [
     "org.mockito.quality.Strictness",
     "org.mockito.ArgumentMatchers",
     "org.mockito.Mock",
     "org.mockito.MockSettings",
     "org.mockito.stubbing.OngoingStubbing",
     "org.mockito.BDDMockito$BDDMyOngoingStubbing",
     "org.mockito.MockitoAnnotations",
     "org.mockito.Mockito",
     "org.mockito.BDDMockito",
     "org.mockito.ArgumentMatcher",
     "org.mockito.internal.util.collections.Sets",
     "org.mockito.junit.MockitoJUnit",
     "org.mockito.junit.MockitoRule"
    ],
    "usageRatio": 0.025390625,
    "children": [
     {
      "id": "net.bytebuddy:byte-buddy:jar:1.7.4:test",
      "coordinates": "net.bytebuddy:byte-buddy:1.7.4",
      "groupId": "net.bytebuddy",
      "artifactId": "byte-buddy",
      "version": "1.7.4",
      "scope": "test",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "org.mockito:mockito-core:jar:2.11.0:test",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     },
     {
      "id": "net.bytebuddy:byte-buddy-agent:jar:1.7.4:test",
      "coordinates": "net.bytebuddy:byte-buddy-agent:1.7.4",
      "groupId": "net.bytebuddy",
      "artifactId": "byte-buddy-agent",
      "version": "1.7.4",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 42935,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.mockito:mockito-core:jar:2.11.0:test",
      "allTypes": [
       "net.bytebuddy.agent.ByteBuddyAgent",
       "net.bytebuddy.agent.ByteBuddyAgent$ProcessProvider$ForCurrentVm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$ForToolsJarVm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Compound",
       "net.bytebuddy.agent.VirtualMachine$ForHotSpot$OnUnix",
       "net.bytebuddy.agent.VirtualMachine",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$Unavailable",
       "net.bytebuddy.agent.ByteBuddyAgent$AgentProvider",
       "net.bytebuddy.agent.ByteBuddyAgent$ProcessProvider",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentTypeEvaluator",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$ExternalAttachment",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$Simple$WithExternalAttachment",
       "net.bytebuddy.agent.ByteBuddyAgent$AgentProvider$ForByteBuddyAgent",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentTypeEvaluator$Disabled",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$ForJigsawVm",
       "net.bytebuddy.agent.VirtualMachine$ForHotSpot",
       "net.bytebuddy.agent.Attacher",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$ForUnixHotSpotVm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$Simple",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$ForJ9Vm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentTypeEvaluator$InstallationAction",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentTypeEvaluator$ForJava9CapableVm",
       "net.bytebuddy.agent.ByteBuddyAgent$ProcessProvider$ForCurrentVm$ForJava9CapableVm",
       "net.bytebuddy.agent.ByteBuddyAgent$ProcessProvider$ForCurrentVm$ForLegacyVm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$Simple$WithoutExternalAttachment",
       "net.bytebuddy.agent.ByteBuddyAgent$AgentProvider$ForExistingAgent",
       "net.bytebuddy.agent.Installer"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.objenesis:objenesis:jar:2.6:test",
      "coordinates": "org.objenesis:objenesis:2.6",
      "groupId": "org.objenesis",
      "artifactId": "objenesis",
      "version": "2.6",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 55684,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.mockito:mockito-core:jar:2.11.0:test",
      "allTypes": [
       "org.objenesis.instantiator.basic.ConstructorInstantiator",
       "org.objenesis.instantiator.gcj.GCJInstantiatorBase",
       "org.objenesis.ObjenesisException",
       "org.objenesis.instantiator.android.Android17Instantiator",
       "org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator",
       "org.objenesis.instantiator.basic.ObjectStreamClassInstantiator",
       "org.objenesis.strategy.PlatformDescription",
       "org.objenesis.instantiator.android.Android10Instantiator",
       "org.objenesis.strategy.SerializingInstantiatorStrategy",
       "org.objenesis.instantiator.annotations.Typology",
       "org.objenesis.instantiator.android.Android18Instantiator",
       "org.objenesis.instantiator.perc.PercSerializationInstantiator",
       "org.objenesis.instantiator.basic.NullInstantiator",
       "org.objenesis.instantiator.ObjectInstantiator",
       "org.objenesis.instantiator.basic.FailingInstantiator",
       "org.objenesis.strategy.StdInstantiatorStrategy",
       "org.objenesis.instantiator.SerializationInstantiatorHelper",
       "org.objenesis.instantiator.sun.MagicInstantiator",
       "org.objenesis.instantiator.annotations.Instantiator",
       "org.objenesis.instantiator.sun.UnsafeFactoryInstantiator",
       "org.objenesis.strategy.SingleInstantiatorStrategy",
       "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator$MockStream",
       "org.objenesis.instantiator.basic.ProxyingInstantiator",
       "org.objenesis.ObjenesisStd",
       "org.objenesis.instantiator.util.ClassDefinitionUtils$1",
       "org.objenesis.instantiator.basic.AccessibleInstantiator",
       "org.objenesis.instantiator.android.AndroidSerializationInstantiator",
       "org.objenesis.instantiator.sun.SunReflectionFactorySerializationInstantiator",
       "org.objenesis.instantiator.util.UnsafeUtils",
       "org.objenesis.instantiator.gcj.GCJInstantiator",
       "org.objenesis.instantiator.gcj.GCJSerializationInstantiator",
       "org.objenesis.instantiator.gcj.GCJInstantiatorBase$DummyStream",
       "org.objenesis.Objenesis",
       "org.objenesis.ObjenesisHelper",
       "org.objenesis.instantiator.perc.PercInstantiator",
       "org.objenesis.ObjenesisBase",
       "org.objenesis.strategy.InstantiatorStrategy",
       "org.objenesis.instantiator.util.ClassDefinitionUtils",
       "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
       "org.objenesis.ObjenesisSerializer",
       "org.objenesis.instantiator.sun.SunReflectionFactoryHelper",
       "org.objenesis.instantiator.basic.NewInstanceInstantiator",
       "org.objenesis.strategy.BaseInstantiatorStrategy"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "com.github.marschall:memoryfilesystem:jar:1.1.0:test",
    "coordinates": "com.github.marschall:memoryfilesystem:1.1.0",
    "groupId": "com.github.marschall",
    "artifactId": "memoryfilesystem",
    "version": "1.1.0",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 282770,
    "type": "direct",
    "status": "used",
    "parent": "org.assertj:assertj-core:bundle:3.9.1",
    "allTypes": [
     "com.github.marschall.memoryfilesystem.AttributeAccessors$IsDirectoryAccessor",
     "com.github.marschall.memoryfilesystem.AsynchronousBlockChannel",
     "com.github.marschall.memoryfilesystem.MemoryDirectoryStream$MemoryDirectoryIterator",
     "com.github.marschall.memoryfilesystem.EntryCreationContext",
     "com.github.marschall.memoryfilesystem.MemoryUserPrincipalLookupService$MemoryUser",
     "com.github.marschall.memoryfilesystem.EnvironmentParser",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$LastModifiedTimeAccessor",
     "com.github.marschall.memoryfilesystem.MemoryWatchKey$State",
     "com.github.marschall.memoryfilesystem.GlobPathMatcher$GlobPattern",
     "com.github.marschall.memoryfilesystem.DefaultOpenOptions$DefaultOpenOptionsIterator",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$MemoryEntryBlock",
     "com.github.marschall.memoryfilesystem.MemorySymbolicLink",
     "com.github.marschall.memoryfilesystem.StringTransformer",
     "com.github.marschall.memoryfilesystem.PathParser$DirectoryCrossingPattern",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$IsHiddenAccessor",
     "com.github.marschall.memoryfilesystem.NamedRoot",
     "com.github.marschall.memoryfilesystem.AppendingBlockOutputStream",
     "com.github.marschall.memoryfilesystem.PathWatchEvent",
     "com.github.marschall.memoryfilesystem.StringTransformers$CaseInsenstiveMacOSNative",
     "com.github.marschall.memoryfilesystem.AbstractPath",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryDirectoryFileAttributesView",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$IsRegularFileAccessor",
     "com.github.marschall.memoryfilesystem.CurrentUser",
     "com.github.marschall.memoryfilesystem.BlockChannel",
     "com.github.marschall.memoryfilesystem.EmptyPath",
     "com.github.marschall.memoryfilesystem.MemoryDirectory$MemoryDirectoryAttributes",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryPosixFileAttributes",
     "com.github.marschall.memoryfilesystem.NonEmptyPath$ElementIterator",
     "com.github.marschall.memoryfilesystem.MemoryFileSystemWatchService",
     "com.github.marschall.memoryfilesystem.StringTransformers",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryFileOwnerAttributeView",
     "com.github.marschall.memoryfilesystem.MemoryInode",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryEntryFileAttributes",
     "com.github.marschall.memoryfilesystem.ClosedFileSystemChecker",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$CopyContext",
     "com.github.marschall.memoryfilesystem.PathParser",
     "com.github.marschall.memoryfilesystem.RegexPathMatcher",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryFileAttributes",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$AtributeReadContext",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$FileKeyAccessor",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes",
     "com.github.marschall.memoryfilesystem.Directories",
     "com.github.marschall.memoryfilesystem.NonEmptyPath",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$10",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryFileAttributesView",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$11",
     "com.github.marschall.memoryfilesystem.MemoryFileSystemProperties$CollatorCache",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$14",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$SizeAccessor",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$15",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$12",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$13",
     "com.github.marschall.memoryfilesystem.AutoReleaseLock",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$AttributeAccessor",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$OwnerAccessor",
     "com.github.marschall.memoryfilesystem.KindWatchEvent",
     "com.github.marschall.memoryfilesystem.CharacterSet",
     "com.github.marschall.memoryfilesystem.BlockInputStream",
     "com.github.marschall.memoryfilesystem.MemoryFileStore",
     "com.github.marschall.memoryfilesystem.OverflowWatchEvent",
     "com.github.marschall.memoryfilesystem.AccessCheck",
     "com.github.marschall.memoryfilesystem.MemoryFileSystemProperties",
     "com.github.marschall.memoryfilesystem.MemoryContents",
     "com.github.marschall.memoryfilesystem.AttributeAccessors",
     "com.github.marschall.memoryfilesystem.PathParser$ExitHandler",
     "com.github.marschall.memoryfilesystem.InitializingFileAttributeView",
     "com.github.marschall.memoryfilesystem.SingleEmptyRootPathParser",
     "com.github.marschall.memoryfilesystem.AbsolutePath",
     "com.github.marschall.memoryfilesystem.CurrentGroup$GroupTask",
     "com.github.marschall.memoryfilesystem.MemoryEntry",
     "module-info",
     "com.github.marschall.memoryfilesystem.RegexRelativePathMatcher",
     "com.github.marschall.memoryfilesystem.LockSet",
     "com.github.marschall.memoryfilesystem.Directories$DirectoryCopier",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$18",
     "com.github.marschall.memoryfilesystem.ArrayCharacterSet",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$16",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$17",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryEntryFileAttributesView",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$LastAccessTimeAccessor",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$GroupAccessor",
     "com.github.marschall.memoryfilesystem.PathParser$RegexPattern",
     "com.github.marschall.memoryfilesystem.MemoryFileSystemProvider$NamedDaemonThreadFactory",
     "com.github.marschall.memoryfilesystem.MemoryFile$MemoryFileAttributes",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryAclFileAttributeView",
     "com.github.marschall.memoryfilesystem.Root",
     "com.github.marschall.memoryfilesystem.GlobPathMatcher",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$LockType",
     "com.github.marschall.memoryfilesystem.Options",
     "com.github.marschall.memoryfilesystem.ParentReferenceList",
     "com.github.marschall.memoryfilesystem.BlockOutputStream",
     "com.github.marschall.memoryfilesystem.SingletonPath",
     "com.github.marschall.memoryfilesystem.ClosedStreamChecker",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$1",
     "com.github.marschall.memoryfilesystem.MultipleNamedRootsPathParser",
     "com.github.marschall.memoryfilesystem.MemoryWatchKey",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$MemoryEntryCreator",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryDosFileAttributeView",
     "com.github.marschall.memoryfilesystem.MemoryFile",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$DelegatingAttributes",
     "com.github.marschall.memoryfilesystem.MemorySymbolicLink$MemorySymbolicLAttributes",
     "com.github.marschall.memoryfilesystem.CurrentGroup",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryPosixFileAttributeView",
     "com.github.marschall.memoryfilesystem.PathParser$1",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$14$1",
     "com.github.marschall.memoryfilesystem.CurrentUser$UserTask",
     "com.github.marschall.memoryfilesystem.NonAppendingBlockOutputStream",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$18$1",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemorySymbolicLinkAttributes",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$4",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$MemoryDirectoryBlock",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$3",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$6",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$5",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$PermissionsAccessor",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$8",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$LazyFileAttributeView",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$EndPointCopyContext",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$7",
     "com.github.marschall.memoryfilesystem.AppendingBlockChannel",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemorySymbolicLinkAttributesView",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$9",
     "com.github.marschall.memoryfilesystem.StringTransformers$IdentityTransformer",
     "com.github.marschall.memoryfilesystem.MemoryUserPrincipalLookupService$MemoryPrincial",
     "com.github.marschall.memoryfilesystem.TwoPathOperation",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$GetFileResult",
     "com.github.marschall.memoryfilesystem.StringTransformers$CaseInsenstive",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryDosFileAttributes",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$IsSystemAccessor",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryUserDefinedFileAttributeView",
     "com.github.marschall.memoryfilesystem.RelativePath",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$IsArchiveAccessor",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$2",
     "com.github.marschall.memoryfilesystem.MemoryDirectory",
     "com.github.marschall.memoryfilesystem.ModificationWatchEvent",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$1",
     "com.github.marschall.memoryfilesystem.MemoryFileSystemBuilder",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$IsReadOnlyAccessor",
     "com.github.marschall.memoryfilesystem.MemoryDirectoryStream",
     "com.github.marschall.memoryfilesystem.AsynchronousBlockChannel$7",
     "com.github.marschall.memoryfilesystem.AsynchronousBlockChannel$8",
     "com.github.marschall.memoryfilesystem.AsynchronousBlockChannel$5",
     "com.github.marschall.memoryfilesystem.AsynchronousBlockChannel$6",
     "com.github.marschall.memoryfilesystem.AsynchronousBlockChannel$3",
     "com.github.marschall.memoryfilesystem.AsynchronousBlockChannel$4",
     "com.github.marschall.memoryfilesystem.AsynchronousBlockChannel$1",
     "com.github.marschall.memoryfilesystem.AsynchronousBlockChannel$2",
     "com.github.marschall.memoryfilesystem.ClosedWatchServiceChecker",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$DelegatingFileAttributesView",
     "com.github.marschall.memoryfilesystem.AutoRelease",
     "com.github.marschall.memoryfilesystem.PathParser$ExitHandler$2",
     "com.github.marschall.memoryfilesystem.PathParser$ExitHandler$1",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$IsSymbolicLinkAccessor",
     "com.github.marschall.memoryfilesystem.RegexAbsolutePathMatcher",
     "com.github.marschall.memoryfilesystem.PathParser$ExitHandler$3",
     "com.github.marschall.memoryfilesystem.MemoryUserPrincipalLookupService",
     "com.github.marschall.memoryfilesystem.MemoryUserPrincipalLookupService$MemoryGroup",
     "com.github.marschall.memoryfilesystem.DefaultOpenOptions",
     "com.github.marschall.memoryfilesystem.ClosedChecker",
     "com.github.marschall.memoryfilesystem.StringTransformers$NFD",
     "com.github.marschall.memoryfilesystem.ElementPath",
     "com.github.marschall.memoryfilesystem.MemoryFileSystemFactoryBean",
     "com.github.marschall.memoryfilesystem.StringTransformers$CaseInsenstiveMacOSJvm",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$CreationTimeAccessor",
     "com.github.marschall.memoryfilesystem.MemoryEntryAttributes$MemoryDirectoryFileAttributes",
     "com.github.marschall.memoryfilesystem.EmptyRoot",
     "com.github.marschall.memoryfilesystem.MemoryFileSystem$15$1",
     "com.github.marschall.memoryfilesystem.TwoPathOperation$2",
     "com.github.marschall.memoryfilesystem.AttributeAccessors$IsOtherAccessor",
     "com.github.marschall.memoryfilesystem.TwoPathOperation$1",
     "com.github.marschall.memoryfilesystem.FileAttributeViews",
     "com.github.marschall.memoryfilesystem.PathParser$Stream",
     "com.github.marschall.memoryfilesystem.NonAppendingBlockChannel",
     "com.github.marschall.memoryfilesystem.MemoryFileLock",
     "com.github.marschall.memoryfilesystem.CompositeList",
     "com.github.marschall.memoryfilesystem.StringTransformers$NFC",
     "com.github.marschall.memoryfilesystem.MemoryFileSystemProvider",
     "com.github.marschall.memoryfilesystem.EmptyCharacterSet"
    ],
    "usedTypes": [
     "com.github.marschall.memoryfilesystem.MemoryFileSystemBuilder"
    ],
    "usageRatio": 0.00558659217877095,
    "children": []
   },
   {
    "id": "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test",
    "coordinates": "com.tngtech.junit.dataprovider:junit4-dataprovider:2.2",
    "groupId": "com.tngtech.junit.dataprovider",
    "artifactId": "junit4-dataprovider",
    "version": "2.2",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 40046,
    "type": "direct",
    "status": "used",
    "parent": "org.assertj:assertj-core:bundle:3.9.1",
    "allTypes": [
     "com.tngtech.java.junit.dataprovider.internal.placeholder.SimpleClassNamePlaceholder",
     "com.tngtech.java.junit.dataprovider.common.Preconditions",
     "com.tngtech.java.junit.dataprovider.internal.placeholder.IndexPlaceholder",
     "com.tngtech.java.junit.dataprovider.DataProvider",
     "com.tngtech.java.junit.dataprovider.DataProviderRunner",
     "com.tngtech.java.junit.dataprovider.internal.placeholder.BasePlaceholder",
     "com.tngtech.java.junit.dataprovider.internal.convert.StringConverter$1",
     "com.tngtech.java.junit.dataprovider.internal.placeholder.CompleteMethodSignaturePlaceholder",
     "com.tngtech.java.junit.dataprovider.DataProviderMethodResolver",
     "com.tngtech.java.junit.dataprovider.internal.convert.ObjectArrayConverter",
     "com.tngtech.java.junit.dataprovider.DataProviderFrameworkMethod",
     "com.tngtech.java.junit.dataprovider.internal.placeholder.CanonicalClassNamePlaceholder",
     "com.tngtech.java.junit.dataprovider.UseDataProvider",
     "com.tngtech.java.junit.dataprovider.internal.convert.StringConverter",
     "com.tngtech.java.junit.dataprovider.UseDataProvider$ResolveStrategy",
     "com.tngtech.java.junit.dataprovider.internal.placeholder.SimpleMethodNamePlaceholder",
     "com.tngtech.java.junit.dataprovider.DataProviderFilter",
     "com.tngtech.java.junit.dataprovider.internal.DefaultDataProviderMethodResolver",
     "com.tngtech.java.junit.dataprovider.internal.convert.SingleArgConverter",
     "com.tngtech.java.junit.dataprovider.internal.DataConverter",
     "com.tngtech.java.junit.dataprovider.internal.placeholder.ParameterPlaceholder",
     "com.tngtech.java.junit.dataprovider.internal.TestValidator",
     "com.tngtech.java.junit.dataprovider.internal.convert.AbstractObjectConverter",
     "com.tngtech.java.junit.dataprovider.internal.TestGenerator",
     "com.tngtech.java.junit.dataprovider.DataProviders",
     "com.tngtech.java.junit.dataprovider.Placeholders"
    ],
    "usedTypes": [
     "com.tngtech.java.junit.dataprovider.UseDataProvider",
     "com.tngtech.java.junit.dataprovider.DataProviderRunner",
     "com.tngtech.java.junit.dataprovider.DataProvider",
     "com.tngtech.java.junit.dataprovider.DataProviders"
    ],
    "usageRatio": 0.15384615384615385,
    "children": [
     {
      "id": "com.tngtech.junit.dataprovider:junit-dataprovider-core:jar:2.2:test",
      "coordinates": "com.tngtech.junit.dataprovider:junit-dataprovider-core:2.2",
      "groupId": "com.tngtech.junit.dataprovider",
      "artifactId": "junit-dataprovider-core",
      "version": "2.2",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 36153,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.tngtech.junit.dataprovider:junit4-dataprovider:jar:2.2:test",
      "allTypes": [
       "com.tngtech.junit.dataprovider.resolver.ResolveStrategy",
       "com.tngtech.junit.dataprovider.placeholder.CanonicalClassNamePlaceholder",
       "com.tngtech.junit.dataprovider.convert.StringConverter",
       "com.tngtech.junit.dataprovider.resolver.DataProviderMethodResolver",
       "com.tngtech.junit.dataprovider.resolver.DefaultDataProviderMethodResolver$1",
       "com.tngtech.junit.dataprovider.placeholder.AbstractArgumentPlaceholder",
       "com.tngtech.junit.dataprovider.convert.DataConverter",
       "com.tngtech.junit.dataprovider.convert.SingleArgConverter",
       "com.tngtech.junit.dataprovider.placeholder.IndexPlaceholder",
       "com.tngtech.junit.dataprovider.placeholder.CompleteMethodSignaturePlaceholder",
       "com.tngtech.junit.dataprovider.convert.ObjectArrayConverter",
       "com.tngtech.junit.dataprovider.DataProviders",
       "com.tngtech.junit.dataprovider.convert.AbstractObjectConverter",
       "com.tngtech.junit.dataprovider.placeholder.AbstractArgumentPlaceholder$FromAndTo",
       "com.tngtech.junit.dataprovider.Preconditions",
       "com.tngtech.junit.dataprovider.resolver.DefaultDataProviderMethodResolver",
       "com.tngtech.junit.dataprovider.resolver.DataProviderResolverContext",
       "com.tngtech.junit.dataprovider.placeholder.ArgumentPlaceholder",
       "com.tngtech.junit.dataprovider.placeholder.SimpleClassNamePlaceholder",
       "com.tngtech.junit.dataprovider.placeholder.SimpleMethodNamePlaceholder",
       "com.tngtech.junit.dataprovider.convert.ConverterContext",
       "com.tngtech.junit.dataprovider.placeholder.ReplacementData",
       "com.tngtech.junit.dataprovider.placeholder.BasePlaceholder",
       "com.tngtech.junit.dataprovider.resolver.DataProviderMethodResolverHelper"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "com.google.guava:guava:jar:24.0-jre:test",
    "coordinates": "com.google.guava:guava:24.0-jre",
    "groupId": "com.google.guava",
    "artifactId": "guava",
    "version": "24.0-jre",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 2719791,
    "type": "direct",
    "status": "used",
    "parent": "org.assertj:assertj-core:bundle:3.9.1",
    "allTypes": [
     "com.google.common.reflect.TypeToken$SimpleTypeToken",
     "com.google.common.collect.TreeTraverser$2$1",
     "com.google.common.collect.HashBiMap$Inverse$1",
     "com.google.common.collect.Maps$ValueDifferenceImpl",
     "com.google.common.collect.ImmutableMultimap$FieldSettersHolder",
     "com.google.common.collect.DenseImmutableTable$Column",
     "com.google.common.collect.PeekingIterator",
     "com.google.common.collect.FilteredKeyListMultimap",
     "com.google.common.collect.ImmutableClassToInstanceMap$Builder",
     "com.google.common.primitives.SignedBytes$LexicographicalComparator",
     "com.google.common.base.Predicates$ContainsPatternPredicate",
     "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap$1EntrySetImpl",
     "com.google.common.util.concurrent.CollectionFuture",
     "com.google.common.collect.RegularImmutableMap",
     "com.google.common.math.Quantiles",
     "com.google.common.graph.MapIteratorCache$1$1",
     "com.google.common.reflect.ClassPath$1",
     "com.google.common.collect.AbstractSortedKeySortedSetMultimap",
     "com.google.common.collect.TreeTraverser$PostOrderIterator",
     "com.google.common.graph.Graphs$TransposedNetwork",
     "com.google.common.collect.MultimapBuilder$SetMultimapBuilder",
     "com.google.common.cache.CacheBuilderSpec",
     "com.google.common.base.Joiner",
     "com.google.common.hash.Hashing$ChecksumType$2",
     "com.google.common.collect.Synchronized$SynchronizedTable$1",
     "com.google.common.hash.Hashing$ChecksumType$1",
     "com.google.common.collect.Synchronized$SynchronizedTable$2",
     "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture",
     "com.google.common.collect.DenseImmutableTable$ColumnMap",
     "com.google.common.collect.AbstractMultimap$Values",
     "com.google.common.net.HostSpecifier",
     "com.google.thirdparty.publicsuffix.PublicSuffixType",
     "com.google.common.primitives.ImmutableIntArray$Builder",
     "com.google.common.util.concurrent.AsyncCallable",
     "com.google.common.collect.Lists$Partition",
     "com.google.common.graph.ConfigurableMutableValueGraph",
     "com.google.common.io.Resources$1",
     "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1",
     "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2",
     "com.google.common.collect.Sets$PowerSet$1",
     "com.google.common.util.concurrent.AbstractIdleService$1",
     "com.google.common.collect.Streams$2Splitr",
     "com.google.common.base.Functions",
     "com.google.common.collect.MapMakerInternalMap$Strength",
     "com.google.common.math.DoubleUtils",
     "com.google.common.collect.ImmutableSortedSet$Builder",
     "com.google.common.graph.MapRetrievalCache",
     "com.google.common.util.concurrent.Service",
     "com.google.common.collect.Multimaps$UnmodifiableMultimap",
     "com.google.common.cache.RemovalListeners",
     "com.google.common.collect.Maps$FilteredEntryMap$EntrySet",
     "com.google.common.collect.StandardTable",
     "com.google.common.collect.ImmutableSortedMultiset$SerializedForm",
     "com.google.common.cache.Striped64$Cell",
     "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment",
     "com.google.common.base.Converter$1",
     "com.google.common.collect.ImmutableEntry",
     "com.google.common.base.Joiner$1",
     "com.google.common.io.Closer$SuppressingSuppressor",
     "com.google.common.base.Joiner$2",
     "com.google.common.collect.StandardTable$1",
     "com.google.common.util.concurrent.SimpleTimeLimiter",
     "com.google.common.base.Joiner$3",
     "com.google.common.graph.EndpointPair",
     "com.google.common.graph.ValueGraphBuilder",
     "com.google.common.collect.AbstractTable$1",
     "com.google.common.primitives.Chars$CharArrayAsList",
     "com.google.common.base.CharMatcher$BitSetMatcher",
     "com.google.common.base.FinalizableReferenceQueue$SystemLoader",
     "com.google.common.io.LineReader$1",
     "com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState",
     "com.google.common.collect.Lists$AbstractListWrapper",
     "com.google.common.collect.AbstractMapBasedMultiset",
     "com.google.common.math.package-info",
     "com.google.common.collect.Multisets$FilteredMultiset$1",
     "com.google.common.collect.DiscreteDomain$LongDomain",
     "com.google.common.collect.SortedLists$1",
     "com.google.common.collect.FluentIterable$2$1",
     "com.google.common.hash.ChecksumHashFunction",
     "com.google.common.base.Equivalence$Identity",
     "com.google.common.collect.EnumBiMap",
     "com.google.common.reflect.TypeResolver$WildcardCapturer$1",
     "com.google.common.collect.AbstractNavigableMap$1",
     "com.google.common.base.AbstractIterator$1",
     "com.google.common.escape.Platform",
     "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
     "com.google.common.collect.EmptyImmutableListMultimap",
     "com.google.common.collect.Collections2$FilteredCollection",
     "com.google.common.collect.Sets$5$1$1$1",
     "com.google.common.math.Quantiles$ScaleAndIndex",
     "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
     "com.google.common.reflect.TypeResolver$1",
     "com.google.common.eventbus.SubscriberRegistry$MethodIdentifier",
     "com.google.common.collect.FluentIterable$1",
     "com.google.common.collect.FluentIterable$2",
     "com.google.common.collect.Maps$FilteredEntrySortedMap",
     "com.google.common.eventbus.SubscriberRegistry",
     "com.google.common.cache.CacheBuilderSpec$KeyStrengthParser",
     "com.google.common.collect.ArrayTable$ColumnMap",
     "com.google.common.collect.FluentIterable$3",
     "com.google.common.util.concurrent.Partially$GwtIncompatible",
     "com.google.common.collect.Iterators$PeekingImpl",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
     "com.google.common.hash.Funnels$IntegerFunnel",
     "com.google.common.collect.ForwardingList",
     "com.google.common.collect.Multimaps$Keys$1",
     "com.google.common.escape.Escapers$Builder",
     "com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper",
     "com.google.common.cache.LocalCache$Segment",
     "com.google.common.collect.HashBiMap",
     "com.google.common.collect.Maps$EntryTransformer",
     "com.google.common.collect.Ordering",
     "com.google.common.io.ByteSource$ConcatenatedByteSource",
     "com.google.common.graph.MutableNetwork",
     "com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet",
     "com.google.common.collect.EnumMultiset",
     "com.google.common.io.MoreFiles$PathByteSource$1",
     "com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser",
     "com.google.common.collect.AllEqualOrdering",
     "com.google.common.collect.Sets$3$1",
     "com.google.common.util.concurrent.CheckedFuture",
     "com.google.common.reflect.Types$JavaVersion$3",
     "com.google.common.reflect.Types$JavaVersion$4",
     "com.google.common.reflect.Types$JavaVersion$1",
     "com.google.common.reflect.Types$JavaVersion$2",
     "com.google.common.util.concurrent.Striped$2",
     "com.google.common.util.concurrent.Striped$1",
     "com.google.common.reflect.Types$JavaVersion$5",
     "com.google.common.base.CharMatcher$JavaDigit",
     "com.google.common.cache.CacheLoader$1",
     "com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder",
     "com.google.common.reflect.Types$JavaVersion$6",
     "com.google.common.collect.Lists$TwoPlusArrayList",
     "com.google.common.collect.ForwardingImmutableMap",
     "com.google.common.collect.Cut$1",
     "com.google.common.collect.Iterators$ArrayItr",
     "com.google.common.cache.LocalCache$Values",
     "com.google.common.cache.LocalCache$WeakValueReference",
     "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2",
     "com.google.common.util.concurrent.Striped$PaddedSemaphore",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$2",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$1",
     "com.google.common.util.concurrent.ServiceManager$1",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$4",
     "com.google.common.base.Equivalence$1",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$3",
     "com.google.common.collect.TopKSelector",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$5",
     "com.google.common.util.concurrent.ServiceManager$2",
     "com.google.common.base.CharMatcher$Any",
     "com.google.common.base.FinalizableReferenceQueue",
     "com.google.common.collect.Multimaps$UnmodifiableMultimap$1",
     "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment",
     "com.google.common.collect.Cut$BelowValue",
     "com.google.common.collect.ImmutableSetMultimap$Builder",
     "com.google.common.collect.ImmutableMapEntrySet",
     "com.google.common.collect.Multimaps",
     "com.google.common.collect.ClassToInstanceMap",
     "com.google.common.collect.ImmutableMultiset",
     "com.google.common.collect.ImmutableMultimap$Keys",
     "com.google.common.collect.Multisets$AbstractEntry",
     "com.google.common.util.concurrent.UncheckedTimeoutException",
     "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator",
     "com.google.common.hash.Hasher",
     "com.google.common.io.ByteSource",
     "com.google.common.collect.Multisets$ViewMultiset",
     "com.google.common.primitives.UnsignedBytes",
     "com.google.common.graph.DirectedNetworkConnections",
     "com.google.common.net.HttpHeaders$ReferrerPolicyValues",
     "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1",
     "com.google.common.base.CharMatcher$And",
     "com.google.common.util.concurrent.Striped$6",
     "com.google.common.collect.ForwardingNavigableMap",
     "com.google.common.util.concurrent.Striped$5",
     "com.google.common.util.concurrent.Striped$4",
     "com.google.common.util.concurrent.Striped$3",
     "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$2",
     "com.google.common.collect.Sets$FilteredSortedSet",
     "com.google.common.collect.TreeRangeSet$1",
     "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$1",
     "com.google.common.reflect.TypeResolver$TypeMappingIntrospector",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
     "com.google.common.collect.EnumMultiset$1",
     "com.google.common.collect.EnumMultiset$2",
     "com.google.common.base.FinalizablePhantomReference",
     "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1",
     "com.google.common.io.MultiInputStream",
     "com.google.common.collect.Maps$EntryFunction",
     "com.google.common.collect.AbstractTable$CellSet",
     "com.google.common.hash.Hashing$Sha256Holder",
     "com.google.common.collect.EnumMultiset$2$1",
     "com.google.common.graph.DirectedMultiNetworkConnections",
     "com.google.common.graph.GraphConstants$Presence",
     "com.google.common.collect.ImmutableEnumSet",
     "com.google.common.collect.AbstractMultimap$Entries",
     "com.google.common.primitives.Doubles$LexicographicalComparator",
     "com.google.common.collect.ArrayTable",
     "com.google.common.base.Predicates$ContainsPatternFromStringPredicate",
     "com.google.common.collect.RegularImmutableMap$Values$SerializedForm",
     "com.google.common.collect.Iterables$6$1",
     "com.google.common.base.Converter",
     "com.google.common.collect.LinkedListMultimap",
     "com.google.common.base.CharMatcher$BreakingWhitespace",
     "com.google.common.io.ByteSource$SlicedByteSource",
     "com.google.common.collect.MoreCollectors",
     "com.google.common.base.Suppliers$SupplierFunction",
     "com.google.common.primitives.Doubles",
     "com.google.common.reflect.Types$WildcardTypeImpl",
     "com.google.common.base.CharMatcher$JavaLowerCase",
     "com.google.common.collect.ImmutableList$Builder",
     "com.google.common.util.concurrent.ThreadFactoryBuilder",
     "com.google.common.collect.Comparators",
     "com.google.common.collect.DenseImmutableTable$RowMap",
     "com.google.common.collect.AbstractMultiset",
     "com.google.common.io.LineBuffer",
     "com.google.common.collect.ImmutableMultimap$KeysSerializedForm",
     "com.google.common.primitives.Shorts",
     "com.google.common.collect.AbstractTable$Values",
     "com.google.common.collect.CompoundOrdering",
     "com.google.common.collect.Iterators",
     "com.google.common.collect.EnumMultiset$Itr",
     "com.google.common.cache.AbstractCache$SimpleStatsCounter",
     "com.google.common.collect.HashBiMap$Inverse$InverseKeySet$1",
     "com.google.common.primitives.ImmutableLongArray$1",
     "com.google.common.collect.Ordering$IncomparableValueException",
     "com.google.common.collect.ImmutableMultiset$1",
     "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1",
     "com.google.common.reflect.Types$NativeTypeVariableEquals",
     "com.google.common.collect.Synchronized$SynchronizedMap",
     "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher",
     "com.google.common.io.MoreFiles$PathByteSink",
     "com.google.common.cache.Striped64$1",
     "com.google.common.util.concurrent.UncaughtExceptionHandlers",
     "com.google.common.primitives.Doubles$DoubleConverter",
     "com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes",
     "com.google.common.collect.HashBiMap$Inverse$1$InverseEntry",
     "com.google.common.io.BaseEncoding$StandardBaseEncoding",
     "com.google.common.reflect.ImmutableTypeToInstanceMap",
     "com.google.common.base.CaseFormat$StringConverter",
     "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment",
     "com.google.common.collect.StandardTable$Column$EntrySet",
     "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
     "com.google.common.collect.Tables$UnmodifiableTable",
     "com.google.common.cache.CacheBuilder$1",
     "com.google.common.cache.CacheBuilder$3",
     "com.google.common.collect.Iterators$MergingIterator",
     "com.google.common.cache.CacheBuilder$2",
     "com.google.common.base.Functions$ForMapWithDefault",
     "com.google.common.collect.Collections2$OrderedPermutationIterator",
     "com.google.common.collect.Lists$RandomAccessPartition",
     "com.google.common.base.CharMatcher$ForPredicate",
     "com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher",
     "com.google.common.collect.Lists$RandomAccessReverseList",
     "com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture",
     "com.google.common.collect.Multimaps$TransformedEntriesMultimap",
     "com.google.common.collect.SortedLists",
     "com.google.common.reflect.Types$ClassOwnership$1LocalClass",
     "com.google.common.collect.ImmutableRangeSet",
     "com.google.common.graph.Traverser$GraphTraverser$2",
     "com.google.common.graph.Traverser$GraphTraverser$1",
     "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1",
     "com.google.common.graph.Traverser$GraphTraverser$3",
     "com.google.common.collect.AbstractSortedSetMultimap",
     "com.google.common.base.Functions$FunctionForMapNoDefault",
     "com.google.common.collect.ImmutableMultimap$Values",
     "com.google.common.base.Converter$1$1",
     "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
     "com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$3",
     "com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$2",
     "com.google.common.collect.ByFunctionOrdering",
     "com.google.common.cache.ForwardingLoadingCache",
     "com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$1",
     "com.google.common.util.concurrent.Striped$WeakSafeCondition",
     "com.google.common.collect.ImmutableListMultimap$Builder",
     "com.google.common.collect.ImmutableSortedMap$SerializedForm",
     "com.google.common.hash.Striped64",
     "com.google.common.collect.ForwardingSortedMap",
     "com.google.common.collect.Serialization",
     "com.google.common.collect.Tables$UnmodifiableRowSortedMap",
     "com.google.common.reflect.ClassPath$DefaultScanner",
     "com.google.common.collect.ForwardingBlockingDeque",
     "com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues",
     "com.google.common.collect.Synchronized$SynchronizedMultimap",
     "com.google.common.primitives.UnsignedLong",
     "com.google.common.util.concurrent.AbstractFuture$SetFuture",
     "com.google.common.util.concurrent.ExecutionError",
     "com.google.common.io.CharSequenceReader",
     "com.google.common.primitives.UnsignedInts",
     "com.google.common.base.Enums",
     "com.google.common.collect.TreeTraverser$PreOrderIterator",
     "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
     "com.google.common.collect.Multisets$2$1",
     "com.google.common.collect.UnmodifiableListIterator",
     "com.google.common.collect.LinkedHashMultimap$ValueSet",
     "com.google.common.collect.DenseImmutableTable",
     "com.google.common.collect.MinMaxPriorityQueue",
     "com.google.common.hash.FarmHashFingerprint64",
     "com.google.common.graph.MutableValueGraph",
     "com.google.common.base.Preconditions",
     "com.google.common.collect.AbstractRangeSet",
     "com.google.common.collect.Interners$InternerImpl",
     "com.google.common.collect.Collections2$OrderedPermutationCollection",
     "com.google.common.util.concurrent.Partially",
     "com.google.common.collect.ImmutableTable$1",
     "com.google.common.collect.AbstractMultimap$EntrySet",
     "com.google.common.collect.AbstractSortedMultiset$1DescendingMultisetImpl",
     "com.google.common.util.concurrent.SettableFuture",
     "com.google.common.hash.Hashing$Sha384Holder",
     "com.google.common.cache.LocalCache$AccessQueue",
     "com.google.common.collect.TreeMultiset",
     "com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter",
     "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture",
     "com.google.common.util.concurrent.MoreExecutors$Application",
     "com.google.common.cache.CacheBuilderSpec$MaximumWeightParser",
     "com.google.common.collect.HashMultimap",
     "com.google.common.net.PercentEscaper",
     "com.google.common.collect.LinkedListMultimap$KeyList",
     "com.google.common.collect.Lists$OnePlusArrayList",
     "com.google.common.collect.Synchronized$SynchronizedNavigableSet",
     "com.google.common.util.concurrent.AbstractCheckedFuture",
     "com.google.common.util.concurrent.AtomicLongMap",
     "com.google.common.util.concurrent.ExecutionList",
     "com.google.common.collect.DescendingMultiset",
     "com.google.common.graph.EndpointPair$Ordered",
     "com.google.common.collect.Maps$AsMapView",
     "com.google.common.io.ByteSink$1",
     "com.google.common.collect.ImmutableSet",
     "com.google.common.primitives.Chars$LexicographicalComparator",
     "com.google.common.collect.StandardTable$Column$KeySet",
     "com.google.common.reflect.ClassPath$ResourceInfo",
     "com.google.common.collect.CompactHashMap",
     "com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet",
     "com.google.common.cache.CacheLoader",
     "com.google.common.collect.MapMakerInternalMap$KeySet",
     "com.google.common.collect.Cut$AboveValue",
     "com.google.common.collect.Maps$IteratorBasedAbstractMap",
     "com.google.common.graph.AbstractBaseGraph$IncidentEdgeSet$Undirected",
     "com.google.common.cache.LocalCache$SoftValueReference",
     "com.google.common.collect.Maps$FilteredEntryBiMap",
     "com.google.common.base.Splitter$Strategy",
     "com.google.common.eventbus.Dispatcher",
     "com.google.common.primitives.Longs$LexicographicalComparator",
     "com.google.common.util.concurrent.AbstractScheduledService$1",
     "com.google.common.collect.ArrayTable$ArrayMap$1",
     "com.google.common.collect.Sets$CartesianSet$1",
     "com.google.common.collect.ArrayTable$ArrayMap$2",
     "com.google.common.base.Predicates$ObjectPredicate$1",
     "com.google.common.cache.LocalCache$WeakEntry",
     "com.google.common.hash.Hashing",
     "com.google.common.reflect.TypeToken",
     "com.google.common.collect.AbstractSequentialIterator",
     "com.google.common.collect.MapDifference$ValueDifference",
     "com.google.common.collect.TreeTraverser",
     "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
     "com.google.common.io.Files",
     "com.google.common.collect.Range$RangeLexOrdering",
     "com.google.common.collect.ForwardingCollection",
     "com.google.common.base.Functions$1",
     "com.google.common.collect.FilteredEntryMultimap$Keys$1$1",
     "com.google.common.collect.FilteredKeyMultimap$AddRejectingList",
     "com.google.common.collect.ImmutableRangeMap$SerializedForm",
     "com.google.common.collect.Range$LowerBoundFn",
     "com.google.common.reflect.Types$JavaVersion",
     "com.google.common.hash.HashCode$BytesHashCode",
     "com.google.common.base.Predicates$ObjectPredicate$4",
     "com.google.common.base.Predicates$ObjectPredicate$3",
     "com.google.common.base.Predicates$ObjectPredicate$2",
     "com.google.common.collect.ImmutableTable",
     "com.google.common.graph.SuccessorsFunction",
     "com.google.common.graph.AbstractNetwork",
     "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
     "com.google.common.cache.LoadingCache",
     "com.google.common.collect.ImmutableList$SubList",
     "com.google.common.base.FunctionalEquivalence",
     "com.google.common.collect.DenseImmutableTable$Row",
     "com.google.common.base.CharMatcher$Whitespace",
     "com.google.common.collect.Range$UpperBoundFn",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior",
     "com.google.common.base.Suppliers$SupplierFunctionImpl",
     "com.google.common.hash.ChecksumHashFunction$1",
     "com.google.common.collect.ImmutableSortedMap$Builder",
     "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper",
     "com.google.common.collect.Multimaps$MapMultimap$1",
     "com.google.thirdparty.publicsuffix.PublicSuffixPatterns",
     "com.google.common.base.Predicates$ObjectPredicate",
     "com.google.common.collect.WellBehavedMap$EntrySet",
     "com.google.common.cache.CacheBuilderSpec$DurationParser",
     "com.google.common.reflect.TypeToken$InterfaceSet",
     "com.google.common.collect.Sets$SubSet$1",
     "com.google.common.collect.Maps$KeySet",
     "com.google.common.collect.Maps$NavigableAsMapView",
     "com.google.common.collect.AbstractIterator$1",
     "com.google.common.primitives.ImmutableDoubleArray$AsList",
     "com.google.common.cache.LongAddables$1",
     "com.google.common.graph.Graphs$TransposedGraph",
     "com.google.common.io.CountingInputStream",
     "com.google.common.base.CommonPattern",
     "com.google.common.cache.LongAddables$2",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
     "com.google.common.collect.AbstractMapBasedMultimap$1",
     "com.google.common.collect.MultimapBuilder$1",
     "com.google.common.collect.AbstractMapBasedMultimap$2",
     "com.google.common.collect.MultimapBuilder$2",
     "com.google.common.collect.ImmutableMultimap$1",
     "com.google.common.collect.MultimapBuilder$3",
     "com.google.common.collect.MultimapBuilder$4",
     "com.google.common.base.Present",
     "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper",
     "com.google.common.collect.ImmutableMultimap$2",
     "com.google.common.util.concurrent.AbstractService$2",
     "com.google.common.util.concurrent.AbstractService$1",
     "com.google.common.collect.SortedLists$KeyPresentBehavior",
     "com.google.common.util.concurrent.AbstractService$6",
     "com.google.common.util.concurrent.AbstractService$5",
     "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
     "com.google.common.reflect.Types$TypeVariableImpl",
     "com.google.common.util.concurrent.AbstractService$4",
     "com.google.common.util.concurrent.AbstractService$3",
     "com.google.common.base.JdkPattern$JdkMatcher",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator",
     "com.google.common.graph.ForwardingValueGraph",
     "com.google.common.util.concurrent.InterruptibleTask",
     "com.google.common.graph.ImmutableValueGraph$1",
     "com.google.common.html.package-info",
     "com.google.common.collect.Maps$Accumulator",
     "com.google.common.io.Files$FilePredicate$1",
     "com.google.common.collect.Lists$TransformingSequentialList",
     "com.google.common.io.Files$FilePredicate$2",
     "com.google.common.util.concurrent.Striped$PaddedLock",
     "com.google.common.collect.ForwardingIterator",
     "com.google.common.reflect.Types$GenericArrayTypeImpl",
     "com.google.common.util.concurrent.Striped$PowerOfTwoStriped",
     "com.google.common.primitives.package-info",
     "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet",
     "com.google.common.math.LinearTransformation",
     "com.google.common.graph.package-info",
     "com.google.common.io.MoreFiles$DirectoryTreeTraverser",
     "com.google.common.graph.DirectedGraphConnections$1$1",
     "com.google.common.primitives.Floats$FloatArrayAsList",
     "com.google.common.eventbus.Dispatcher$1",
     "com.google.common.collect.FilteredEntryMultimap",
     "com.google.common.collect.TreeRangeMap$RangeMapEntry",
     "com.google.common.io.Files$2",
     "com.google.common.io.Files$3",
     "com.google.common.collect.Maps$UnmodifiableNavigableMap",
     "com.google.common.graph.Traverser$TreeTraverser$DepthFirstPostOrderIterator$NodeAndChildren",
     "com.google.common.io.Files$1",
     "com.google.common.util.concurrent.FuturesGetChecked$1",
     "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
     "com.google.common.collect.Lists$RandomAccessListWrapper",
     "com.google.common.collect.MapMakerInternalMap$ValueIterator",
     "com.google.common.reflect.TypeToken$3",
     "com.google.common.reflect.TypeToken$4",
     "com.google.common.util.concurrent.ForwardingFluentFuture",
     "com.google.common.reflect.TypeToken$1",
     "com.google.common.reflect.TypeToken$2",
     "com.google.common.collect.Multimaps$MapMultimap$1$1",
     "com.google.common.io.CharStreams",
     "com.google.common.base.CommonMatcher",
     "com.google.common.eventbus.AllowConcurrentEvents",
     "com.google.common.reflect.AbstractInvocationHandler",
     "com.google.common.util.concurrent.Futures$3",
     "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
     "com.google.common.util.concurrent.Runnables$1",
     "com.google.common.collect.ForwardingSortedSetMultimap",
     "com.google.common.util.concurrent.Futures$2",
     "com.google.common.collect.Multimaps$TransformedEntriesMultimap$1",
     "com.google.common.util.concurrent.Striped$WeakSafeLock",
     "com.google.common.graph.NetworkBuilder",
     "com.google.common.cache.LocalCache$Segment$1",
     "com.google.common.collect.AbstractIndexedListIterator",
     "com.google.common.util.concurrent.AbstractService$StateSnapshot",
     "com.google.common.collect.CollectPreconditions",
     "com.google.common.graph.Traverser$Order",
     "com.google.common.util.concurrent.Futures$1",
     "com.google.common.reflect.TypeCapture",
     "com.google.common.reflect.Types$TypeVariableInvocationHandler",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policy",
     "com.google.common.eventbus.AsyncEventBus",
     "com.google.common.reflect.TypeVisitor",
     "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry",
     "com.google.common.collect.Lists$TransformingRandomAccessList$1",
     "com.google.common.graph.MapRetrievalCache$CacheEntry",
     "com.google.common.base.Splitter$1$1",
     "com.google.common.base.Suppliers$ExpiringMemoizingSupplier",
     "com.google.common.base.AbstractIterator$State",
     "com.google.common.base.PairwiseEquivalence",
     "com.google.common.base.Suppliers",
     "com.google.common.graph.ConfigurableMutableGraph",
     "com.google.common.math.DoubleMath",
     "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator",
     "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1",
     "com.google.common.collect.Tables$TransformedTable",
     "com.google.common.graph.AbstractBaseGraph$IncidentEdgeSet$Undirected$1",
     "com.google.thirdparty.publicsuffix.TrieParser",
     "com.google.common.graph.Traverser$TreeTraverser$1",
     "com.google.common.graph.Traverser$TreeTraverser$2",
     "com.google.common.graph.Traverser$TreeTraverser$3",
     "com.google.common.collect.Maps$FilteredEntryNavigableMap$1",
     "com.google.common.graph.MultiEdgesConnecting$1",
     "com.google.common.base.AbstractIterator",
     "com.google.common.collect.ForwardingImmutableList",
     "com.google.common.primitives.Longs$LongArrayAsList",
     "com.google.common.collect.LinkedListMultimap$NodeIterator",
     "com.google.common.collect.MultimapBuilder$HashSetSupplier",
     "com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp",
     "com.google.common.collect.Table",
     "com.google.common.collect.Sets$CartesianSet",
     "com.google.common.primitives.Longs$LongConverter",
     "com.google.common.util.concurrent.Striped$SmallLazyStriped",
     "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
     "com.google.common.base.Suppliers$SupplierOfInstance",
     "com.google.common.cache.AbstractCache$StatsCounter",
     "com.google.common.primitives.Booleans$LexicographicalComparator",
     "com.google.common.math.LongMath$1",
     "com.google.common.graph.MultiEdgesConnecting",
     "com.google.common.collect.CollectSpliterators$1Splitr",
     "com.google.common.hash.MessageDigestHashFunction$1",
     "com.google.common.base.Throwables$1",
     "com.google.common.hash.BloomFilter$Strategy",
     "com.google.common.util.concurrent.SequentialExecutor$1",
     "com.google.common.collect.AbstractMapBasedMultiset$1",
     "com.google.common.collect.AbstractMapBasedMultiset$2",
     "com.google.common.collect.MultimapBuilder$EnumSetSupplier",
     "com.google.common.collect.Multimaps$CustomSortedSetMultimap",
     "com.google.common.collect.Platform",
     "com.google.common.collect.ForwardingImmutableCollection",
     "com.google.common.collect.ImmutableEnumMap$EnumSerializedForm",
     "com.google.common.cache.LocalCache$LocalManualCache",
     "com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry",
     "com.google.common.primitives.ImmutableIntArray$1",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$1$1",
     "com.google.common.collect.ArrayTable$Row",
     "com.google.common.collect.ImmutableSet$Indexed$1",
     "com.google.common.collect.ForwardingMapEntry",
     "com.google.common.collect.TreeBasedTable$Factory",
     "com.google.common.collect.MinMaxPriorityQueue$1",
     "com.google.common.cache.LocalCache$WeakWriteEntry",
     "com.google.common.collect.TreeTraverser$3$1",
     "com.google.common.collect.NullsFirstOrdering",
     "com.google.common.util.concurrent.MoreExecutors$DirectExecutor",
     "com.google.common.collect.StandardTable$Row$1",
     "com.google.common.net.InternetDomainName",
     "com.google.common.collect.StandardTable$Row$2",
     "com.google.common.cache.CacheBuilderSpec$LongParser",
     "com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue",
     "com.google.common.collect.ForwardingSortedMultiset$StandardElementSet",
     "com.google.common.reflect.TypeToken$InterfaceSet$1",
     "com.google.common.cache.LocalCache$ValueReference",
     "com.google.common.collect.Streams$TemporaryPair",
     "com.google.common.collect.StandardRowSortedTable",
     "com.google.common.primitives.Ints$IntArrayAsList",
     "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
     "com.google.common.collect.Multisets$ImmutableEntry",
     "com.google.common.escape.UnicodeEscaper",
     "com.google.common.util.concurrent.AbstractCatchingFuture",
     "com.google.common.io.ReaderInputStream",
     "com.google.common.base.Absent",
     "com.google.common.base.Functions$ConstantFunction",
     "com.google.common.hash.Funnels$SinkAsStream",
     "com.google.common.io.Files$FilePredicate",
     "com.google.common.base.Throwables",
     "com.google.common.io.FileWriteMode",
     "com.google.common.base.Equivalence$Equals",
     "com.google.common.reflect.TypeResolver$TypeVariableKey",
     "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate",
     "com.google.common.collect.Synchronized$SynchronizedBiMap",
     "com.google.common.cache.ForwardingCache",
     "com.google.common.collect.CollectSpliterators$1",
     "com.google.common.collect.Sets$ImprovedAbstractSet",
     "com.google.common.collect.StandardTable$Column$EntrySetIterator",
     "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
     "com.google.common.base.FinalizableReferenceQueue$DecoupledLoader",
     "com.google.common.base.CharMatcher$1",
     "com.google.common.collect.ImmutableMapValues",
     "com.google.common.hash.LongAddables$2",
     "com.google.common.hash.LongAddables$1",
     "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder",
     "com.google.common.util.concurrent.CycleDetectingLockFactory",
     "com.google.common.util.concurrent.CollectionFuture$ListFuture",
     "com.google.common.collect.AbstractNavigableMap",
     "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
     "com.google.common.util.concurrent.SmoothRateLimiter",
     "com.google.common.collect.GwtTransient",
     "com.google.common.util.concurrent.TimeoutFuture$Fire",
     "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment",
     "com.google.common.graph.GraphConstants",
     "com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState",
     "com.google.common.cache.ReferenceEntry",
     "com.google.common.util.concurrent.ForwardingListeningExecutorService",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2",
     "com.google.common.graph.ConfigurableNetwork",
     "com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector",
     "com.google.common.collect.Interners$1",
     "com.google.common.collect.ForwardingSet",
     "com.google.common.base.Functions$ToStringFunction",
     "com.google.common.base.Functions$FunctionComposition",
     "com.google.common.collect.MultimapBuilder$TreeSetSupplier",
     "com.google.common.collect.StandardTable$RowMap$EntrySet$1",
     "com.google.common.base.Ticker$1",
     "com.google.common.collect.CompactHashMap$EntrySetView",
     "com.google.common.collect.ImmutableSetMultimap$EntrySet",
     "com.google.common.collect.Multiset",
     "com.google.common.collect.ImmutableEnumSet$1",
     "com.google.common.collect.Maps$TransformedEntriesNavigableMap",
     "com.google.common.graph.Graphs",
     "com.google.common.hash.BloomFilter$SerialForm",
     "com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock",
     "com.google.common.primitives.UnsignedInts$LexicographicalComparator",
     "com.google.common.reflect.Types$ClassOwnership",
     "com.google.common.collect.Table$Cell",
     "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher",
     "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper",
     "com.google.common.primitives.ImmutableDoubleArray$Builder",
     "com.google.common.base.CharMatcher$Negated",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock",
     "com.google.common.collect.Synchronized$1",
     "com.google.common.collect.MapMakerInternalMap$Values",
     "com.google.common.util.concurrent.CombinedFuture",
     "com.google.common.collect.ForwardingMultimap",
     "com.google.common.graph.Traverser$TreeTraverser$BreadthFirstIterator",
     "com.google.common.math.Stats",
     "com.google.common.cache.LocalCache$EntryIterator",
     "com.google.common.collect.TreeMultiset$Aggregate$2",
     "com.google.common.collect.TreeRangeSet$SubRangeSet",
     "com.google.common.collect.TreeMultiset$Aggregate$1",
     "com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture",
     "com.google.common.io.ByteStreams$1",
     "com.google.common.collect.StandardTable$RowMap",
     "com.google.common.graph.EdgesConnecting",
     "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
     "com.google.common.cache.CacheBuilderSpec$AccessDurationParser",
     "com.google.common.collect.CollectSpliterators$1WithCharacteristics",
     "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
     "com.google.common.collect.ForwardingMap$StandardValues",
     "com.google.common.collect.ImmutableMap$SerializedForm",
     "com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier",
     "com.google.common.base.Optional",
     "com.google.common.io.Closeables",
     "com.google.common.collect.MapMakerInternalMap$StrongValueEntry",
     "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry",
     "com.google.common.collect.TreeBasedTable$TreeRow",
     "com.google.common.reflect.TypeParameter",
     "com.google.common.base.CharMatcher$NegatedFastMatcher",
     "com.google.common.collect.Range",
     "com.google.common.util.concurrent.ForwardingListenableFuture",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator",
     "com.google.common.base.CharMatcher$IsEither",
     "com.google.common.collect.FilteredSetMultimap",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap",
     "com.google.common.io.FileBackedOutputStream",
     "com.google.common.io.CharSource$CharSequenceCharSource",
     "com.google.common.collect.Sets$2$1",
     "com.google.common.collect.ContiguousSet",
     "com.google.common.base.MoreObjects$ToStringHelper",
     "com.google.common.escape.CharEscaperBuilder",
     "com.google.common.util.concurrent.Striped$CompactStriped",
     "com.google.common.cache.LocalCache$HashIterator",
     "com.google.common.collect.RegularImmutableAsList",
     "com.google.common.io.Resources$UrlByteSource",
     "com.google.common.util.concurrent.Striped$LargeLazyStriped",
     "com.google.common.base.PatternCompiler",
     "com.google.common.collect.AbstractMapBasedMultiset$2$1",
     "com.google.common.collect.MutableClassToInstanceMap$2$1",
     "com.google.common.util.concurrent.ServiceManager$ServiceListener",
     "com.google.common.collect.RegularImmutableMultiset$SerializedForm",
     "com.google.common.xml.package-info",
     "com.google.common.base.Functions$IdentityFunction",
     "com.google.common.primitives.ImmutableLongArray",
     "com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture",
     "com.google.common.util.concurrent.ListeningScheduledExecutorService",
     "com.google.common.collect.ImmutableSortedMap",
     "com.google.common.util.concurrent.ForwardingBlockingQueue",
     "com.google.common.io.BaseEncoding",
     "com.google.common.collect.ForwardingSetMultimap",
     "com.google.common.base.MoreObjects",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$1",
     "com.google.common.collect.Multimaps$AsMap$EntrySet$1",
     "com.google.common.collect.ImmutableList$1",
     "com.google.common.hash.BloomFilter$1",
     "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
     "com.google.common.net.InetAddresses",
     "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1",
     "com.google.common.util.concurrent.ServiceManager$FailedService",
     "com.google.common.collect.StandardTable$Column$Values",
     "com.google.common.graph.ElementOrder",
     "com.google.common.io.package-info",
     "com.google.common.collect.TreeMultiset$Aggregate",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
     "com.google.common.collect.CompactHashMap$ValuesView",
     "com.google.common.collect.MapMakerInternalMap$KeyIterator",
     "com.google.common.reflect.Types$1",
     "com.google.common.collect.Streams$MapWithIndexSpliterator",
     "com.google.common.reflect.Types$2",
     "com.google.common.util.concurrent.Service$State",
     "com.google.common.collect.AbstractBiMap$ValueSet",
     "com.google.common.graph.AbstractBaseGraph$IncidentEdgeSet$Directed",
     "com.google.common.base.Function",
     "com.google.common.collect.ImmutableMap",
     "com.google.common.collect.ImmutableAsList$SerializedForm",
     "com.google.common.io.ByteStreams$LimitedInputStream",
     "com.google.common.primitives.Bytes",
     "com.google.common.util.concurrent.ForwardingFuture",
     "com.google.common.collect.MinMaxPriorityQueue$Builder",
     "com.google.common.util.concurrent.TimeLimiter",
     "com.google.common.collect.ImmutableSortedMapFauxverideShim",
     "com.google.common.collect.CompactHashSet",
     "com.google.common.cache.CacheBuilder",
     "com.google.common.cache.LocalCache$NullEntry",
     "com.google.common.collect.Range$1",
     "com.google.common.base.Stopwatch",
     "com.google.common.collect.StandardTable$Column",
     "com.google.common.collect.RegularContiguousSet$SerializedForm",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies",
     "com.google.common.cache.LocalCache$AbstractCacheSet",
     "com.google.common.collect.ImmutableMultiset$Builder",
     "com.google.common.escape.Escapers$1",
     "com.google.common.cache.LocalCache$LocalLoadingCache",
     "com.google.common.collect.HashBiMap$1$MapEntry",
     "com.google.common.collect.SingletonImmutableBiMap",
     "com.google.common.collect.MinMaxPriorityQueue$MoveDesc",
     "com.google.common.collect.Multisets$EntrySet",
     "com.google.common.escape.Escapers$2",
     "com.google.common.util.concurrent.AbstractIdleService",
     "com.google.common.collect.ConsumingQueueIterator",
     "com.google.common.io.CharSource$AsByteSource",
     "com.google.common.escape.Platform$1",
     "com.google.common.cache.RemovalNotification",
     "com.google.common.base.Equivalence",
     "com.google.common.cache.LocalCache$WriteQueue$1",
     "com.google.common.cache.LocalCache$LoadingValueReference",
     "com.google.common.cache.LocalCache$WriteQueue$2",
     "com.google.common.collect.CompactLinkedHashMap",
     "com.google.common.collect.Maps",
     "com.google.common.cache.Striped64",
     "com.google.common.collect.SetMultimap",
     "com.google.common.collect.ImmutableSet$SerializedForm",
     "com.google.common.collect.TransformedIterator",
     "com.google.common.collect.DescendingImmutableSortedSet",
     "com.google.common.collect.FilteredKeyMultimap$AddRejectingSet",
     "com.google.common.collect.Synchronized$SynchronizedObject",
     "com.google.common.util.concurrent.WrappingExecutorService",
     "com.google.common.util.concurrent.ListenerCallQueue",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet",
     "com.google.common.collect.Cut$AboveAll",
     "com.google.common.net.package-info",
     "com.google.common.primitives.ImmutableLongArray$Builder",
     "com.google.common.util.concurrent.AbstractFuture",
     "com.google.common.graph.AbstractValueGraph",
     "com.google.common.collect.RegularContiguousSet",
     "com.google.common.hash.Crc32cHashFunction",
     "com.google.common.collect.RangeSet",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock",
     "com.google.common.escape.CharEscaper",
     "com.google.common.graph.UndirectedMultiNetworkConnections$1",
     "com.google.common.annotations.GwtCompatible",
     "com.google.common.collect.RegularContiguousSet$3",
     "com.google.common.collect.RegularContiguousSet$2",
     "com.google.common.collect.RegularContiguousSet$1",
     "com.google.common.base.Platform$JdkPatternCompiler",
     "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
     "com.google.common.collect.LinkedHashMultiset",
     "com.google.common.cache.LocalCache$WriteThroughEntry",
     "com.google.common.collect.Sets$2",
     "com.google.common.collect.Sets$3",
     "com.google.common.io.CharStreams$NullWriter",
     "com.google.common.collect.Sets$1",
     "com.google.common.base.CharMatcher$JavaLetterOrDigit",
     "com.google.common.collect.Maps$Values",
     "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
     "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1",
     "com.google.common.primitives.Booleans$BooleanArrayAsList",
     "com.google.common.escape.ArrayBasedUnicodeEscaper",
     "com.google.common.graph.AbstractValueGraph$2",
     "com.google.common.base.FinalizableReference",
     "com.google.common.collect.ImmutableEnumMap$1",
     "com.google.common.reflect.TypeToken$TypeCollector",
     "com.google.common.util.concurrent.TrustedListenableFutureTask",
     "com.google.common.util.concurrent.MoreExecutors$ListeningDecorator",
     "com.google.common.collect.FilteredEntryMultimap$ValuePredicate",
     "com.google.common.graph.AbstractValueGraph$1",
     "com.google.common.collect.HashBasedTable$Factory",
     "com.google.common.collect.AbstractListMultimap",
     "com.google.common.io.MultiReader",
     "com.google.common.base.Predicates$InstanceOfPredicate",
     "com.google.common.cache.CacheBuilderSpec$RefreshDurationParser",
     "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
     "com.google.common.io.Closer$LoggingSuppressor",
     "com.google.common.util.concurrent.ServiceManager$Listener",
     "com.google.common.collect.Lists$ReverseList$1",
     "com.google.common.util.concurrent.AggregateFuture$RunningState$1",
     "com.google.common.collect.ForwardingTable",
     "com.google.common.graph.Graphs$NodeVisitState",
     "com.google.common.graph.Traverser$TreeTraverser$DepthFirstPostOrderIterator",
     "com.google.common.primitives.ImmutableLongArray$AsList",
     "com.google.common.collect.TreeMultiset$1",
     "com.google.common.io.ByteArrayDataInput",
     "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch",
     "com.google.common.collect.TreeMultiset$4",
     "com.google.common.collect.TreeMultiset$3",
     "com.google.common.collect.TreeMultiset$2",
     "com.google.common.collect.Sets$4",
     "com.google.common.collect.Sets$5",
     "com.google.common.cache.LocalCache$KeySet",
     "com.google.common.collect.MapMakerInternalMap$Segment",
     "com.google.common.base.CharMatcher",
     "com.google.common.collect.FilteredKeyMultimap",
     "com.google.common.collect.Sets$UnmodifiableNavigableSet",
     "com.google.common.hash.MacHashFunction",
     "com.google.common.collect.Synchronized$SynchronizedSortedMap",
     "com.google.common.collect.Maps$FilteredEntryBiMap$1",
     "com.google.common.collect.RegularImmutableMultiset$1",
     "com.google.common.collect.RegularImmutableTable$Values",
     "com.google.common.collect.MapMaker",
     "com.google.common.collect.MapMakerInternalMap$InternalEntry",
     "com.google.common.graph.Graph",
     "com.google.common.collect.ForwardingDeque",
     "com.google.common.util.concurrent.WrappingExecutorService$1",
     "com.google.common.collect.MapMakerInternalMap$EntryIterator",
     "com.google.common.collect.AbstractBiMap",
     "com.google.common.collect.Sets$FilteredSet",
     "com.google.common.math.LongMath$MillerRabinTester",
     "com.google.common.base.Predicates$1",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl",
     "com.google.common.collect.Multisets$3$1",
     "com.google.common.collect.Maps$FilteredEntryMap$KeySet",
     "com.google.common.collect.FilteredKeySetMultimap$EntrySet",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock",
     "com.google.common.collect.CompactHashMap$Itr",
     "com.google.common.io.ByteArrayDataOutput",
     "com.google.common.collect.Iterators$6",
     "com.google.common.collect.BiMap",
     "com.google.common.collect.Iterators$7",
     "com.google.common.collect.Iterators$8",
     "com.google.common.collect.TreeRangeMap$SubRangeMap",
     "com.google.common.collect.Iterators$9",
     "com.google.common.escape.Escaper",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$StoppedGuard",
     "com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher$EventWithSubscriber",
     "com.google.common.collect.Iterators$1",
     "com.google.common.math.LongMath",
     "com.google.common.collect.Iterators$2",
     "com.google.common.collect.Iterators$3",
     "com.google.common.collect.Iterators$4",
     "com.google.common.collect.CollectCollectors",
     "com.google.common.collect.Iterators$5",
     "com.google.common.util.concurrent.ForwardingLock",
     "com.google.common.collect.Streams$1OptionalState",
     "com.google.common.base.ExtraObjectsMethodsForWeb",
     "com.google.common.collect.package-info",
     "com.google.common.hash.LittleEndianByteArray$1",
     "com.google.common.collect.RegularImmutableBiMap$Inverse",
     "com.google.common.collect.ImmutableMultimap$Builder",
     "com.google.common.base.Defaults",
     "com.google.common.collect.AbstractMultimap",
     "com.google.common.collect.RegularImmutableMap$KeySet$SerializedForm",
     "com.google.common.hash.LongAddable",
     "com.google.common.hash.SipHashFunction$SipHasher",
     "com.google.common.graph.Traverser$TreeTraverser$DepthFirstPreOrderIterator",
     "com.google.common.hash.AbstractCompositeHashFunction",
     "com.google.common.collect.MoreCollectors$ToOptionalState",
     "com.google.common.collect.ImmutableBiMapFauxverideShim",
     "com.google.common.base.FinalizableSoftReference",
     "com.google.common.cache.LocalCache$Strength$3",
     "com.google.common.cache.LocalCache$Strength$2",
     "com.google.common.reflect.Invokable$ConstructorInvokable",
     "com.google.common.cache.LocalCache$Strength$1",
     "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher",
     "com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm",
     "com.google.common.collect.AbstractBiMap$1",
     "com.google.common.util.concurrent.Monitor$1",
     "com.google.common.collect.TreeRangeSet$Complement",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2",
     "com.google.common.util.concurrent.AsyncFunction",
     "com.google.common.graph.ImmutableNetwork$3",
     "com.google.common.collect.WellBehavedMap$EntrySet$1$1",
     "com.google.common.graph.ImmutableNetwork$2",
     "com.google.common.graph.ImmutableNetwork$1",
     "com.google.common.util.concurrent.AbstractExecutionThreadService",
     "com.google.common.cache.CacheBuilderSpec$WriteDurationParser",
     "com.google.common.cache.LocalCache$WeightedStrongValueReference",
     "com.google.common.collect.TreeRangeSet$RangesByUpperBound$1",
     "com.google.common.io.ByteStreams$FastByteArrayOutputStream",
     "com.google.common.collect.TreeRangeSet$RangesByUpperBound$2",
     "com.google.common.cache.CacheBuilderSpec$ValueStrengthParser",
     "com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl",
     "com.google.common.collect.StandardTable$CellIterator",
     "com.google.common.collect.ComputationException",
     "com.google.common.collect.StandardTable$ColumnKeySet",
     "com.google.common.graph.DirectedGraphConnections$2",
     "com.google.common.base.Splitter$2$1",
     "com.google.common.collect.StandardRowSortedTable$RowSortedMap",
     "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
     "com.google.common.collect.Lists$TransformingRandomAccessList",
     "com.google.common.cache.CacheLoader$InvalidCacheLoadException",
     "com.google.common.hash.MessageDigestHashFunction$SerializedForm",
     "com.google.common.graph.DirectedGraphConnections$1",
     "com.google.common.hash.Hashing$1",
     "com.google.common.math.Quantiles$ScaleAndIndexes",
     "com.google.common.collect.Multisets",
     "com.google.common.util.concurrent.Futures$FutureCombiner$1",
     "com.google.common.collect.ComparisonChain",
     "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable",
     "com.google.common.collect.Synchronized$SynchronizedQueue",
     "com.google.common.hash.AbstractCompositeHashFunction$1",
     "com.google.common.collect.LinkedHashMultimap$ValueEntry",
     "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
     "com.google.common.util.concurrent.AbstractScheduledService",
     "com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning",
     "com.google.common.base.package-info",
     "com.google.common.io.ByteSink$AsCharSink",
     "com.google.common.graph.DirectedGraphConnections$2$1",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$2",
     "com.google.common.collect.Iterators$MergingIterator$1",
     "com.google.common.collect.TreeRangeSet",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$1",
     "com.google.common.base.Suppliers$ThreadSafeSupplier",
     "com.google.common.collect.StandardTable$RowMap$EntrySet",
     "com.google.common.hash.Funnels$UnencodedCharsFunnel",
     "com.google.common.math.BigIntegerMath$1",
     "com.google.common.base.Predicates",
     "com.google.common.collect.EmptyContiguousSet",
     "com.google.common.util.concurrent.AbstractFuture$Waiter",
     "com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes$1",
     "com.google.common.cache.CacheLoader$1$1",
     "com.google.common.net.MediaType",
     "com.google.common.collect.Synchronized$SynchronizedEntry",
     "com.google.common.util.concurrent.Uninterruptibles",
     "com.google.common.cache.LocalCache$LoadingValueReference$1",
     "com.google.common.util.concurrent.SequentialExecutor",
     "com.google.common.reflect.package-info",
     "com.google.common.collect.ConcurrentHashMultiset$2",
     "com.google.common.collect.ConcurrentHashMultiset$1",
     "com.google.common.base.CharMatcher$AnyOf",
     "com.google.common.collect.ConcurrentHashMultiset$3",
     "com.google.common.collect.Synchronized$SynchronizedSetMultimap",
     "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1",
     "com.google.common.util.concurrent.TimeoutFuture",
     "com.google.common.util.concurrent.Futures$MappingCheckedFuture",
     "com.google.common.primitives.Floats$FloatConverter",
     "com.google.common.escape.package-info",
     "com.google.common.base.Platform",
     "com.google.common.collect.ImmutableList$ReverseImmutableList",
     "com.google.common.util.concurrent.Service$Listener",
     "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
     "com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulCheckedFuture",
     "com.google.common.collect.Collections2$PermutationCollection",
     "com.google.common.hash.Funnels",
     "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap",
     "com.google.common.collect.ImmutableClassToInstanceMap$1",
     "com.google.common.collect.BoundType",
     "com.google.common.hash.Hashing$Sha512Holder",
     "com.google.common.collect.Maps$DescendingMap",
     "com.google.common.hash.Crc32cHashFunction$Crc32cHasher",
     "com.google.common.collect.ImmutableClassToInstanceMap",
     "com.google.common.reflect.TypeToken$ClassSet",
     "com.google.common.io.BaseEncoding$Alphabet",
     "com.google.common.collect.Multimaps$UnmodifiableListMultimap",
     "com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm",
     "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound",
     "com.google.common.collect.RegularImmutableBiMap$1",
     "com.google.common.collect.MapMakerInternalMap$1",
     "com.google.common.base.Platform$1",
     "com.google.common.base.Splitter$3",
     "com.google.common.base.VerifyException",
     "com.google.common.base.Splitter$4",
     "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
     "com.google.common.base.Splitter$5",
     "com.google.common.cache.CacheBuilderSpec$InitialCapacityParser",
     "com.google.common.eventbus.DeadEvent",
     "com.google.common.primitives.Bytes$ByteArrayAsList",
     "com.google.common.hash.HashCode$IntHashCode",
     "com.google.common.base.Splitter$1",
     "com.google.common.base.Splitter$2",
     "com.google.common.collect.ImmutableSetMultimap$SetFieldSettersHolder",
     "com.google.common.collect.ImmutableTable$SerializedForm",
     "com.google.common.collect.Serialization$1",
     "com.google.common.collect.RegularImmutableSortedSet",
     "com.google.common.escape.ArrayBasedEscaperMap",
     "com.google.common.graph.DirectedGraphConnections",
     "com.google.common.collect.ArrayListMultimap",
     "com.google.common.collect.TreeRangeMap$AsMapOfRanges",
     "com.google.common.hash.Striped64$1",
     "com.google.common.collect.HashBasedTable",
     "com.google.common.collect.LinkedHashMultimap$1",
     "com.google.common.collect.MultimapBuilder$ArrayListSupplier",
     "com.google.common.collect.Collections2",
     "com.google.common.graph.EndpointPairIterator",
     "com.google.common.graph.MapIteratorCache",
     "com.google.common.collect.ForwardingNavigableSet",
     "com.google.common.math.IntMath",
     "com.google.common.hash.LittleEndianByteArray$UnsafeByteArray",
     "com.google.common.graph.EndpointPairIterator$Directed",
     "com.google.common.collect.ForwardingImmutableSet",
     "com.google.common.collect.NullsLastOrdering",
     "com.google.common.collect.AbstractBiMap$BiMapEntry",
     "com.google.common.collect.RegularImmutableMultiset",
     "com.google.common.cache.LocalCache$EntryFactory$6",
     "com.google.common.cache.LocalCache$EntryFactory$7",
     "com.google.common.cache.LocalCache$EntryFactory$8",
     "com.google.common.collect.AbstractSortedMultiset",
     "com.google.common.cache.LocalCache$EntryFactory$2",
     "com.google.common.collect.HashBiMap$1",
     "com.google.common.collect.RegularImmutableMultiset$ElementSet",
     "com.google.common.eventbus.package-info",
     "com.google.common.cache.LocalCache$EntryFactory$3",
     "com.google.common.collect.Multisets$DecreasingCount",
     "com.google.common.cache.LocalCache$EntryFactory$4",
     "com.google.common.cache.LocalCache$EntryFactory$5",
     "com.google.common.cache.LocalCache$EntryFactory$1",
     "com.google.common.base.CharMatcher$Invisible",
     "com.google.common.graph.ForwardingGraph",
     "com.google.common.collect.HashBiMap$KeySet$1",
     "com.google.common.base.Strings",
     "com.google.common.collect.AbstractMapBasedMultimap",
     "com.google.common.collect.DiscreteDomain",
     "com.google.common.util.concurrent.Atomics",
     "com.google.common.collect.TreeMultiset$AvlNode",
     "com.google.common.hash.LittleEndianByteArray",
     "com.google.common.collect.LinkedListMultimap$1ValuesImpl$1",
     "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper",
     "com.google.common.collect.Cut",
     "com.google.common.collect.Streams$FunctionWithIndex",
     "com.google.common.collect.FilteredEntryMultimap$Keys",
     "com.google.common.io.Resources",
     "com.google.common.cache.LocalCache$StrongValueReference",
     "com.google.common.collect.CompactLinkedHashMap$1ValuesImpl",
     "com.google.common.graph.EndpointPair$Unordered",
     "com.google.common.util.concurrent.FutureCallback",
     "com.google.common.util.concurrent.Platform",
     "com.google.common.io.CharSource$CharSequenceCharSource$1",
     "com.google.common.reflect.Types$ParameterizedTypeImpl",
     "com.google.common.collect.ImmutableSortedSetFauxverideShim",
     "com.google.common.collect.Sets$1$1",
     "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
     "com.google.common.collect.ImmutableEnumMap",
     "com.google.common.collect.Streams$IntFunctionWithIndex",
     "com.google.common.reflect.TypeResolver$WildcardCapturer",
     "com.google.common.collect.AbstractMapBasedMultimap$KeySet$1",
     "com.google.common.collect.Collections2$TransformedCollection",
     "com.google.common.collect.ArrayTable$RowMap",
     "com.google.common.io.ByteStreams$ByteArrayDataOutputStream",
     "com.google.common.collect.Synchronized$SynchronizedAsMap",
     "com.google.common.base.CharMatcher$JavaUpperCase",
     "com.google.common.collect.ImmutableSetMultimap",
     "com.google.common.cache.LocalCache$EntrySet",
     "com.google.common.hash.AbstractStreamingHasher",
     "com.google.common.escape.ArrayBasedCharEscaper",
     "com.google.common.graph.NetworkConnections",
     "com.google.common.io.BaseEncoding$DecodingException",
     "com.google.common.collect.DiscreteDomain$IntegerDomain",
     "com.google.common.hash.Funnels$ByteArrayFunnel",
     "com.google.common.reflect.Reflection",
     "com.google.common.base.CharMatcher$NamedFastMatcher",
     "com.google.common.collect.Interner",
     "com.google.common.net.MediaType$Tokenizer",
     "com.google.common.collect.ImmutableMapValues$1",
     "com.google.common.collect.ImmutableMapValues$2",
     "com.google.common.collect.TreeTraverser$1",
     "com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator$NodeAndSuccessors",
     "com.google.common.collect.TreeTraverser$2",
     "com.google.common.collect.TreeTraverser$3",
     "com.google.common.collect.StandardTable$ColumnMap",
     "com.google.common.collect.TreeRangeMap",
     "com.google.common.collect.TreeTraverser$4",
     "com.google.common.base.Converter$ReverseConverter",
     "com.google.common.reflect.Invokable",
     "com.google.common.base.CharMatcher$Is",
     "com.google.common.collect.Lists$2",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$1ValuesImpl",
     "com.google.common.hash.HashFunction",
     "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet",
     "com.google.common.collect.Lists$1",
     "com.google.common.util.concurrent.CollectionFuture$ListFuture$ListFutureRunningState",
     "com.google.common.base.Supplier",
     "com.google.common.util.concurrent.MoreExecutors$5$1",
     "com.google.common.eventbus.EventBus",
     "com.google.common.collect.ReverseOrdering",
     "com.google.common.collect.HashBiMap$Inverse$InverseKeySet",
     "com.google.common.eventbus.Subscribe",
     "com.google.common.collect.Synchronized",
     "com.google.common.io.CharSource",
     "com.google.common.cache.CacheBuilder$NullListener",
     "com.google.common.hash.LongAddables",
     "com.google.common.collect.FilteredEntryMultimap$AsMap",
     "com.google.common.collect.SortedMultisetBridge",
     "com.google.common.collect.Synchronized$SynchronizedSet",
     "com.google.common.collect.DescendingMultiset$1EntrySetImpl",
     "com.google.common.primitives.UnsignedLongs",
     "com.google.common.primitives.Shorts$LexicographicalComparator",
     "com.google.common.graph.BaseGraph",
     "com.google.common.collect.Tables$TransformedTable$3",
     "com.google.common.collect.Tables$TransformedTable$2",
     "com.google.common.io.LineReader",
     "com.google.common.base.CharMatcher$Digit",
     "com.google.common.collect.Tables$TransformedTable$1",
     "com.google.common.graph.AbstractDirectedNetworkConnections$1",
     "com.google.common.collect.RegularImmutableTable",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1",
     "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry",
     "com.google.common.collect.Multimaps$CustomListMultimap",
     "com.google.common.hash.HashCode$LongHashCode",
     "com.google.common.reflect.TypeToken$Bounds",
     "com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm",
     "com.google.common.math.IntMath$1",
     "com.google.common.collect.Hashing",
     "com.google.common.graph.DirectedGraphConnections$PredAndSucc",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock",
     "com.google.common.hash.HashingInputStream",
     "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap",
     "com.google.common.collect.Multimaps$AsMap",
     "com.google.common.collect.ImmutableRangeMap",
     "com.google.common.collect.SortedMultiset",
     "com.google.common.collect.SparseImmutableTable",
     "com.google.common.hash.AbstractNonStreamingHashFunction",
     "com.google.common.collect.FluentIterable",
     "com.google.common.reflect.Element",
     "com.google.common.collect.DescendingImmutableSortedMultiset",
     "com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher",
     "com.google.common.base.CharMatcher$InRange",
     "com.google.common.base.CharMatcher$JavaLetter",
     "com.google.common.collect.CompactHashMap$1",
     "com.google.common.cache.CacheBuilderSpec$RecordStatsParser",
     "com.google.common.math.DoubleMath$1",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1",
     "com.google.common.collect.CompactHashMap$MapEntry",
     "com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm",
     "com.google.common.collect.RegularImmutableTable$1",
     "com.google.common.cache.CacheBuilderSpec$IntegerParser",
     "com.google.common.collect.CompactHashMap$2",
     "com.google.common.collect.SortedMapDifference",
     "com.google.common.collect.CompactHashMap$3",
     "com.google.common.collect.RegularImmutableSet",
     "com.google.common.collect.FilteredEntrySetMultimap",
     "com.google.common.graph.ValueGraph",
     "com.google.common.collect.ForwardingSortedSet",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
     "com.google.common.collect.ImmutableListMultimap",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet",
     "com.google.common.cache.RemovalCause$4",
     "com.google.common.cache.RemovalCause$5",
     "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
     "com.google.common.hash.Hashing$ChecksumType",
     "com.google.common.cache.RemovalCause$1",
     "com.google.common.collect.ImmutableAsList",
     "com.google.common.cache.RemovalCause$2",
     "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
     "com.google.common.cache.RemovalCause$3",
     "com.google.common.util.concurrent.AtomicDouble",
     "com.google.common.collect.WellBehavedMap",
     "com.google.common.io.MoreFiles$1",
     "com.google.common.collect.SingletonImmutableSet",
     "com.google.common.io.MoreFiles$2",
     "com.google.common.util.concurrent.AbstractService$IsStoppedGuard",
     "com.google.common.io.MoreFiles$3",
     "com.google.common.collect.ImmutableList$SerializedForm",
     "com.google.common.collect.MapMakerInternalMap$HashIterator",
     "com.google.common.primitives.Longs$AsciiDigits",
     "com.google.common.util.concurrent.ForwardingExecutorService",
     "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy",
     "com.google.common.util.concurrent.AbstractListeningExecutorService",
     "com.google.common.hash.PrimitiveSink",
     "com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState",
     "com.google.common.collect.FluentIterable$FromIterableFunction",
     "com.google.common.collect.RangeGwtSerializationDependencies",
     "com.google.common.collect.AbstractIterator",
     "com.google.common.base.Suppliers$MemoizingSupplier",
     "com.google.common.collect.MutableClassToInstanceMap",
     "com.google.common.util.concurrent.Futures",
     "com.google.common.collect.TreeBasedTable$1",
     "com.google.common.collect.TreeBasedTable$2",
     "com.google.common.graph.AbstractGraphBuilder",
     "com.google.common.cache.RemovalListener",
     "com.google.common.graph.AbstractBaseGraph$1",
     "com.google.common.collect.Sets$5$1",
     "com.google.common.collect.MapMakerInternalMap$WeakValueEntry",
     "com.google.common.base.Functions$PredicateFunction",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
     "com.google.common.collect.ImmutableMapValues$SerializedForm",
     "com.google.common.collect.Maps$TransformedEntriesSortedMap",
     "com.google.common.util.concurrent.AbstractService",
     "com.google.common.io.BaseEncoding$SeparatedBaseEncoding",
     "com.google.common.collect.MapMakerInternalMap$WeakValueReference",
     "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry",
     "com.google.common.collect.Synchronized$SynchronizedNavigableMap",
     "com.google.common.collect.AbstractSetMultimap",
     "com.google.common.collect.HashMultimapGwtSerializationDependencies",
     "com.google.common.collect.ImmutableTable$Builder",
     "com.google.common.primitives.UnsignedLongs$LexicographicalComparator",
     "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter",
     "com.google.common.util.concurrent.AbstractService$IsStartableGuard",
     "com.google.common.graph.Traverser$GraphTraverser",
     "com.google.common.collect.MapMakerInternalMap$Strength$2",
     "com.google.common.collect.MapMakerInternalMap$Strength$1",
     "com.google.common.collect.Multiset$Entry",
     "com.google.common.base.Predicates$NotPredicate",
     "com.google.common.math.BigIntegerMath",
     "com.google.common.util.concurrent.AggregateFutureState$1",
     "com.google.common.collect.AbstractMultiset$ElementSet",
     "com.google.common.primitives.ImmutableDoubleArray",
     "com.google.common.collect.SortedMultisets$NavigableElementSet",
     "com.google.common.collect.TreeMultiset$Reference",
     "com.google.common.collect.EnumHashBiMap",
     "com.google.common.collect.MapMakerInternalMap$SafeToArraySet",
     "com.google.common.cache.LocalCache$WeakAccessEntry",
     "com.google.common.collect.ImmutableSortedSet$SerializedForm",
     "com.google.common.primitives.UnsignedLongs$ParseOverflowDetection",
     "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier",
     "com.google.common.math.LinearTransformation$1",
     "com.google.common.collect.SortedMultisets",
     "com.google.common.collect.Multimaps$MapMultimap",
     "com.google.common.util.concurrent.FakeTimeLimiter",
     "com.google.common.collect.EvictingQueue",
     "com.google.common.collect.ComparisonChain$InactiveComparisonChain",
     "com.google.common.cache.LocalCache$AbstractReferenceEntry",
     "com.google.common.cache.ForwardingCache$SimpleForwardingCache",
     "com.google.common.graph.AbstractBaseGraph$IncidentEdgeSet$Directed$1",
     "com.google.common.graph.AbstractBaseGraph$IncidentEdgeSet$Directed$2",
     "com.google.common.collect.Cut$BelowAll",
     "com.google.common.reflect.MutableTypeToInstanceMap$1",
     "com.google.common.collect.ReverseNaturalOrdering",
     "com.google.common.collect.HashBiMap$BiEntry",
     "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask",
     "com.google.common.annotations.VisibleForTesting",
     "com.google.common.collect.RegularImmutableMap$Values",
     "com.google.common.cache.AbstractLoadingCache",
     "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries",
     "com.google.common.reflect.MutableTypeToInstanceMap",
     "com.google.common.collect.ImmutableRangeMap$2",
     "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher",
     "com.google.common.escape.CharEscaperBuilder$CharArrayDecorator",
     "com.google.common.collect.Multisets$MultisetIteratorImpl",
     "com.google.common.collect.ImmutableRangeMap$1",
     "com.google.common.cache.package-info",
     "com.google.common.collect.AbstractNavigableMap$DescendingMap",
     "com.google.common.base.FinalizableReferenceQueue$DirectLoader",
     "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
     "com.google.common.collect.Maps$13",
     "com.google.common.collect.ImmutableSortedMap$1",
     "com.google.common.collect.RowSortedTable",
     "com.google.common.collect.Iterables$UnmodifiableIterable",
     "com.google.common.collect.Maps$UnmodifiableBiMap",
     "com.google.common.collect.AbstractMapEntry",
     "com.google.common.util.concurrent.Service$State$1",
     "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
     "com.google.common.util.concurrent.Service$State$2",
     "com.google.common.util.concurrent.Service$State$3",
     "com.google.common.util.concurrent.Service$State$4",
     "com.google.common.collect.Sets$PowerSet",
     "com.google.common.util.concurrent.Service$State$5",
     "com.google.common.util.concurrent.Service$State$6",
     "com.google.common.collect.ImmutableRangeSet$ComplementRanges",
     "com.google.common.collect.Maps$10",
     "com.google.common.collect.Maps$11",
     "com.google.common.collect.Maps$12",
     "com.google.common.collect.GeneralRange",
     "com.google.common.collect.ImmutableRangeSet$SerializedForm",
     "com.google.common.collect.Iterables$10",
     "com.google.common.graph.UndirectedGraphConnections",
     "com.google.common.util.concurrent.RateLimiter",
     "com.google.common.hash.Murmur3_32HashFunction",
     "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
     "com.google.common.collect.Lists",
     "com.google.common.reflect.Types",
     "com.google.common.io.PatternFilenameFilter",
     "com.google.common.io.InsecureRecursiveDeleteException",
     "com.google.common.collect.Maps$BiMapConverter",
     "com.google.common.xml.XmlEscapers",
     "com.google.common.hash.ImmutableSupplier",
     "com.google.common.io.MoreFiles$PathByteSource",
     "com.google.common.base.Predicates$CompositionPredicate",
     "com.google.common.base.CharMatcher$JavaIsoControl",
     "com.google.common.math.Quantiles$Scale",
     "com.google.common.collect.LinkedListMultimap$1EntriesImpl",
     "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule",
     "com.google.common.hash.LongAddables$PureJavaLongAddable",
     "com.google.common.io.Files$FileByteSink",
     "com.google.common.collect.Tables",
     "com.google.common.cache.RemovalListeners$1$1",
     "com.google.common.util.concurrent.Futures$InCompletionOrderState",
     "com.google.common.util.concurrent.ListenableFutureTask",
     "com.google.common.cache.RemovalListeners$1",
     "com.google.common.cache.LocalCache$WeightedWeakValueReference",
     "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound",
     "com.google.common.collect.TransformedListIterator",
     "com.google.common.collect.CompactLinkedHashMap$1KeySetImpl",
     "com.google.common.hash.Hashing$Sha1Holder",
     "com.google.common.util.concurrent.ImmediateFuture",
     "com.google.common.collect.TreeTraverser$PostOrderNode",
     "com.google.common.util.concurrent.SmoothRateLimiter$1",
     "com.google.common.collect.ImmutableMapEntry",
     "com.google.common.io.LittleEndianDataInputStream",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
     "com.google.common.collect.Lists$ReverseList",
     "com.google.common.base.Equivalence$EquivalentToPredicate",
     "com.google.common.collect.AbstractIterator$State",
     "com.google.common.graph.Traverser$1",
     "com.google.common.graph.EndpointPairIterator$Undirected",
     "com.google.common.collect.ImmutableMultimap$EntryCollection",
     "com.google.common.collect.Lists$StringAsImmutableList",
     "com.google.common.base.CharMatcher$SingleWidth",
     "com.google.common.cache.CacheLoader$FunctionToCacheLoader",
     "com.google.common.collect.CompactHashMap$KeySetView",
     "com.google.common.graph.GraphConnections",
     "com.google.common.cache.LocalCache$WeightedSoftValueReference",
     "com.google.common.eventbus.SubscriberRegistry$2",
     "com.google.common.collect.Multimaps$Entries",
     "com.google.common.eventbus.EventBus$LoggingHandler",
     "com.google.common.collect.Multimaps$AsMap$EntrySet",
     "com.google.common.io.BaseEncoding$Base64Encoding",
     "com.google.common.collect.Interners$InternerFunction",
     "com.google.common.collect.MultimapBuilder$LinkedListSupplier",
     "com.google.common.collect.AbstractBiMap$Inverse",
     "com.google.common.graph.UndirectedNetworkConnections",
     "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
     "com.google.common.util.concurrent.UncheckedExecutionException",
     "com.google.common.collect.Multisets$4$1",
     "com.google.common.collect.Multisets$4$2",
     "com.google.common.cache.CacheBuilderSpec$MaximumSizeParser",
     "com.google.common.cache.LocalCache$StrongEntry",
     "com.google.common.eventbus.SubscriberExceptionContext",
     "com.google.common.util.concurrent.Striped",
     "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment",
     "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1",
     "com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference",
     "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap",
     "com.google.common.collect.Multimaps$CustomSetMultimap",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$1KeySetImpl",
     "com.google.common.io.ByteSource$ByteArrayByteSource",
     "com.google.common.collect.CollectSpliterators$1FlatMapSpliterator",
     "com.google.common.reflect.TypeResolver$TypeTable",
     "com.google.common.collect.StandardTable$Column$EntrySetIterator$1EntryImpl",
     "com.google.common.util.concurrent.ForwardingCheckedFuture",
     "com.google.common.collect.NaturalOrdering",
     "com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm",
     "com.google.common.eventbus.SubscriberRegistry$1",
     "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask",
     "com.google.common.cache.Cache",
     "com.google.common.collect.TreeTraverser$BreadthFirstIterator",
     "com.google.common.collect.LinkedListMultimap$Node",
     "com.google.common.collect.ListMultimap",
     "com.google.common.collect.WellBehavedMap$EntrySet$1",
     "com.google.common.graph.AbstractBaseGraph$IncidentEdgeSet",
     "com.google.common.graph.AbstractBaseGraph",
     "com.google.common.collect.Maps$NavigableKeySet",
     "com.google.common.net.HttpHeaders",
     "com.google.common.reflect.ClassPath$ClassInfo",
     "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering",
     "com.google.common.base.Predicates$SubtypeOfPredicate",
     "com.google.common.primitives.ParseRequest",
     "com.google.common.cache.CacheBuilder$OneWeigher",
     "com.google.common.util.concurrent.AbstractFuture$Failure",
     "com.google.common.collect.Multimaps$TransformedEntriesListMultimap",
     "com.google.common.escape.Escapers$Builder$1",
     "com.google.common.primitives.Longs",
     "com.google.common.collect.ForwardingListIterator",
     "com.google.common.net.UrlEscapers",
     "com.google.common.primitives.ImmutableIntArray",
     "com.google.common.collect.ImmutableBiMap$SerializedForm",
     "com.google.common.collect.Multimaps$UnmodifiableSetMultimap",
     "com.google.common.cache.CacheBuilderSpec$1",
     "com.google.common.util.concurrent.package-info",
     "com.google.common.util.concurrent.ListeningExecutorService",
     "com.google.common.graph.UndirectedMultiNetworkConnections",
     "com.google.common.hash.Hashing$Md5Holder",
     "com.google.common.collect.Maps$FilteredEntryMap",
     "com.google.common.util.concurrent.AbstractService$IsStoppableGuard",
     "com.google.common.collect.Synchronized$SynchronizedMultiset",
     "com.google.common.util.concurrent.AbstractTransformFuture",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1",
     "com.google.common.io.FileBackedOutputStream$2",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2",
     "com.google.common.io.FileBackedOutputStream$1",
     "com.google.common.math.LinearTransformation$LinearTransformationBuilder",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3",
     "com.google.common.base.Splitter$3$1",
     "com.google.common.graph.AbstractNetwork$3",
     "com.google.common.base.Stopwatch$1",
     "com.google.common.collect.Synchronized$SynchronizedCollection",
     "com.google.common.util.concurrent.AbstractIdleService$DelegateService$1",
     "com.google.common.util.concurrent.AbstractIdleService$DelegateService$2",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$4",
     "com.google.common.collect.Serialization$FieldSetter",
     "com.google.common.collect.Maps$UnmodifiableEntrySet",
     "com.google.common.base.CaseFormat$1",
     "com.google.common.hash.HashCode",
     "com.google.common.base.CaseFormat$2",
     "com.google.common.base.CaseFormat$3",
     "com.google.common.base.CaseFormat$4",
     "com.google.common.base.CaseFormat$5",
     "com.google.common.collect.Sets$FilteredNavigableSet",
     "com.google.common.graph.AbstractNetwork$2",
     "com.google.common.graph.AbstractNetwork$1",
     "com.google.common.collect.UnmodifiableSortedMultiset",
     "com.google.common.eventbus.Subscriber$1",
     "com.google.common.io.ByteSource$EmptyByteSource",
     "com.google.common.hash.ChecksumHashFunction$ChecksumHasher",
     "com.google.common.collect.MapMakerInternalMap$WriteThroughEntry",
     "com.google.common.collect.ConcurrentHashMultiset",
     "com.google.common.util.concurrent.Service$1",
     "com.google.common.collect.ForwardingQueue",
     "com.google.common.math.LinearTransformation$RegularLinearTransformation",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
     "com.google.common.util.concurrent.AggregateFuture$RunningState",
     "com.google.common.collect.Sets$SubSet",
     "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator",
     "com.google.common.html.HtmlEscapers",
     "com.google.common.collect.EmptyContiguousSet$SerializedForm",
     "com.google.common.collect.ForwardingMultiset",
     "com.google.common.util.concurrent.InterruptibleTask$1",
     "com.google.common.collect.ImmutableRangeSet$AsSet$2",
     "com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture",
     "com.google.common.collect.ImmutableRangeSet$AsSet$1",
     "com.google.common.collect.ImmutableMultiset$EntrySet",
     "com.google.common.collect.Synchronized$SynchronizedTable",
     "com.google.common.collect.TreeMultimap",
     "com.google.common.math.LinearTransformation$NaNLinearTransformation",
     "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
     "com.google.common.hash.Funnels$LongFunnel",
     "com.google.common.base.Splitter",
     "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet",
     "com.google.common.collect.Maps$8",
     "com.google.common.collect.ArrayTable$Column",
     "com.google.common.collect.Maps$9",
     "com.google.common.collect.Maps$6",
     "com.google.common.util.concurrent.MoreExecutors$2",
     "com.google.common.collect.Maps$7",
     "com.google.common.util.concurrent.MoreExecutors$1",
     "com.google.common.util.concurrent.MoreExecutors$4",
     "com.google.common.util.concurrent.MoreExecutors$3",
     "com.google.common.collect.ComparatorOrdering",
     "com.google.common.math.LongMath$MillerRabinTester$2",
     "com.google.common.math.LongMath$MillerRabinTester$1",
     "com.google.common.util.concurrent.MoreExecutors$5",
     "com.google.common.collect.Maps$1",
     "com.google.common.collect.Maps$4",
     "com.google.common.collect.Maps$5",
     "com.google.common.collect.Maps$2",
     "com.google.common.collect.Maps$3",
     "com.google.common.collect.ImmutableSortedMultiset$Builder",
     "com.google.common.reflect.Invokable$MethodInvokable",
     "com.google.common.collect.Queues",
     "com.google.common.collect.FilteredKeyMultimap$Entries",
     "com.google.common.hash.AbstractHasher",
     "com.google.common.util.concurrent.AbstractFuture$Listener",
     "com.google.common.collect.Maps$ViewCachingAbstractMap",
     "com.google.common.reflect.TypeResolver",
     "com.google.common.base.Optional$1$1",
     "com.google.common.collect.Ordering$ArbitraryOrdering",
     "com.google.common.collect.ImmutableMap$1",
     "com.google.common.hash.SipHashFunction",
     "com.google.common.primitives.Doubles$DoubleArrayAsList",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior$2",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior$1",
     "com.google.common.collect.AbstractTable",
     "com.google.common.collect.Tables$1",
     "com.google.common.util.concurrent.ServiceManager",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior$3",
     "com.google.common.collect.StandardRowSortedTable$1",
     "com.google.common.cache.LocalCache$LoadingSerializationProxy",
     "com.google.common.eventbus.Subscriber$SynchronizedSubscriber",
     "com.google.common.reflect.TypeToken$TypeFilter",
     "com.google.common.collect.Multimap",
     "com.google.common.io.CharSink",
     "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator",
     "com.google.common.collect.ForwardingConcurrentMap",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode",
     "com.google.common.hash.AbstractHashFunction",
     "com.google.common.base.StandardSystemProperty",
     "com.google.common.graph.AbstractNetwork$1$1$1",
     "com.google.common.base.Suppliers$SupplierComposition",
     "com.google.common.collect.Tables$TransposeTable",
     "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$Event",
     "com.google.common.graph.AbstractDirectedNetworkConnections",
     "com.google.common.io.RecursiveDeleteOption",
     "com.google.common.base.CharMatcher$Or",
     "com.google.common.collect.CollectSpliterators",
     "com.google.common.eventbus.Dispatcher$ImmediateDispatcher",
     "com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty",
     "com.google.common.collect.ForwardingSortedMap$StandardKeySet",
     "com.google.common.util.concurrent.MoreExecutors$Application$1",
     "com.google.common.util.concurrent.FluentFuture",
     "com.google.common.escape.Escaper$1",
     "com.google.common.io.FileBackedOutputStream$MemoryOutput",
     "com.google.common.collect.MultimapBuilder",
     "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap",
     "com.google.common.util.concurrent.SimpleTimeLimiter$1",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$1",
     "com.google.common.base.JdkPattern",
     "com.google.common.collect.CartesianList$1",
     "com.google.common.collect.Synchronized$SynchronizedRandomAccessList",
     "com.google.common.base.FinalizableWeakReference",
     "com.google.common.base.internal.Finalizer",
     "com.google.common.base.Enums$StringConverter",
     "com.google.common.util.concurrent.SequentialExecutor$QueueWorker",
     "com.google.common.graph.Network",
     "com.google.common.collect.RegularImmutableBiMap",
     "com.google.common.graph.AbstractGraph",
     "com.google.common.io.ByteSink",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace",
     "com.google.common.collect.ImmutableBiMap$Builder",
     "com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream",
     "com.google.common.collect.HashBiMap$KeySet",
     "com.google.common.base.CharMatcher$None",
     "com.google.common.collect.RegularImmutableTable$CellSet",
     "com.google.common.collect.Maps$TransformedEntriesMap",
     "com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl",
     "com.google.common.collect.TreeRangeSet$AsRanges",
     "com.google.common.primitives.Chars",
     "com.google.common.hash.MacHashFunction$MacHasher",
     "com.google.common.cache.LongAdder",
     "com.google.common.collect.WellBehavedMap$1",
     "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry",
     "com.google.common.util.concurrent.AbstractFuture$Cancellation",
     "com.google.common.hash.MessageDigestHashFunction",
     "com.google.common.collect.CompactHashSet$1",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$AwaitHealthGuard",
     "com.google.common.util.concurrent.Runnables",
     "com.google.common.collect.DenseImmutableTable$1",
     "com.google.common.cache.LocalCache$StrongAccessEntry",
     "com.google.common.collect.Count",
     "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet",
     "com.google.common.cache.LocalCache$LocalManualCache$1",
     "com.google.common.util.concurrent.Callables",
     "com.google.common.primitives.Shorts$ShortConverter",
     "com.google.common.graph.Traverser$GraphTraverser$BreadthFirstIterator",
     "com.google.common.collect.DiscreteDomain$1",
     "com.google.common.io.ByteStreams$ByteArrayDataInputStream",
     "com.google.common.net.HostAndPort",
     "com.google.common.collect.TreeBasedTable",
     "com.google.common.base.Equivalence$Wrapper",
     "com.google.common.graph.Traverser",
     "com.google.common.util.concurrent.Monitor",
     "com.google.common.base.CharMatcher$FastMatcher",
     "com.google.common.collect.AbstractMapBasedMultimap$Itr",
     "com.google.common.hash.Funnels$StringCharsetFunnel",
     "com.google.common.base.Converter$ConverterComposition",
     "com.google.common.collect.EmptyImmutableSetMultimap",
     "com.google.common.base.Predicates$IsEqualToPredicate",
     "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
     "com.google.common.collect.ImmutableCollection",
     "com.google.common.collect.Maps$IteratorBasedAbstractMap$1",
     "com.google.common.cache.LocalCache$ManualSerializationProxy",
     "com.google.common.graph.EndpointPairIterator$1",
     "com.google.common.hash.BloomFilterStrategies",
     "com.google.common.io.BaseEncoding$5",
     "com.google.common.io.BaseEncoding$3",
     "com.google.common.io.BaseEncoding$4",
     "com.google.common.collect.ImmutableCollection$Builder",
     "com.google.common.graph.ConfigurableMutableNetwork",
     "com.google.common.graph.MutableGraph",
     "com.google.common.io.BaseEncoding$1",
     "com.google.common.io.BaseEncoding$2",
     "com.google.common.math.Quantiles$1",
     "com.google.common.annotations.GwtIncompatible",
     "com.google.common.collect.TreeRangeMap$1",
     "com.google.common.collect.CartesianList",
     "com.google.common.collect.Maps$FilteredKeyMap",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException",
     "com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard",
     "com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry",
     "com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper",
     "com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset",
     "com.google.common.graph.Traverser$GraphTraverser$DepthFirstIterator",
     "com.google.common.util.concurrent.AbstractScheduledService$Scheduler",
     "com.google.common.util.concurrent.ListenerCallQueue$Event",
     "com.google.common.util.concurrent.ListenableFuture",
     "com.google.common.collect.ImmutableEnumSet$EnumSerializedForm",
     "com.google.common.io.CharSource$ConcatenatedCharSource",
     "com.google.common.util.concurrent.JdkFutureAdapters",
     "com.google.common.hash.Striped64$Cell",
     "com.google.common.collect.ImmutableList",
     "com.google.common.collect.ImmutableRangeSet$AsSet",
     "com.google.common.escape.Escapers",
     "com.google.common.io.Flushables",
     "com.google.common.collect.SortedMultisets$ElementSet",
     "com.google.common.reflect.TypeResolver$TypeTable$1",
     "com.google.common.hash.HashingOutputStream",
     "com.google.common.math.PairedStatsAccumulator",
     "com.google.common.hash.BloomFilter",
     "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry",
     "com.google.common.util.concurrent.Callables$4",
     "com.google.common.util.concurrent.Callables$3",
     "com.google.common.util.concurrent.Callables$2",
     "com.google.common.cache.LongAddable",
     "com.google.common.collect.CompactLinkedHashSet",
     "com.google.common.primitives.ImmutableIntArray$AsList",
     "com.google.common.util.concurrent.Callables$1",
     "com.google.common.hash.Hashing$ConcatenatedHashFunction",
     "com.google.common.collect.ImmutableRangeMap$Builder",
     "com.google.common.io.LineProcessor",
     "com.google.common.collect.MapMakerInternalMap",
     "com.google.common.collect.ForwardingSortedMultiset",
     "com.google.common.collect.Maps$UnmodifiableEntries",
     "com.google.common.graph.ImmutableGraph",
     "com.google.common.collect.ImmutableSortedMap$1EntrySet$1",
     "com.google.common.io.Closer$Suppressor",
     "com.google.common.collect.RegularImmutableSortedMultiset",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
     "com.google.common.collect.Maps$DescendingMap$1EntrySetImpl",
     "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
     "com.google.common.reflect.ClassPath",
     "com.google.common.collect.LinkedHashMultimap",
     "com.google.common.base.CharMatcher$IsNot",
     "com.google.common.collect.Synchronized$SynchronizedList",
     "com.google.common.base.FinalizableReferenceQueue$FinalizerLoader",
     "com.google.common.cache.AbstractCache",
     "com.google.common.collect.Maps$SortedKeySet",
     "com.google.common.collect.StandardTable$TableSet",
     "com.google.common.util.concurrent.AbstractIdleService$DelegateService",
     "com.google.common.collect.LexicographicalOrdering",
     "com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry",
     "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
     "com.google.common.collect.Multisets$5",
     "com.google.common.collect.StandardTable$Row",
     "com.google.common.hash.LittleEndianByteArray$LittleEndianBytes",
     "com.google.common.collect.Multisets$3",
     "com.google.common.collect.Multisets$4",
     "com.google.common.collect.Multisets$1",
     "com.google.common.cache.CacheStats",
     "com.google.common.collect.Multisets$2",
     "com.google.common.collect.LinkedHashMultimapGwtSerializationDependencies",
     "com.google.common.collect.Iterables",
     "com.google.common.collect.LinkedListMultimap$1",
     "com.google.common.collect.Sets$Accumulator",
     "com.google.common.graph.ConfigurableValueGraph",
     "com.google.common.io.CountingOutputStream",
     "com.google.common.cache.CacheLoader$SupplierToCacheLoader",
     "com.google.common.util.concurrent.ThreadFactoryBuilder$1",
     "com.google.common.collect.CompactLinkedHashMap$1EntrySetImpl",
     "com.google.common.collect.ImmutableTable$MutableCell",
     "com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper",
     "com.google.common.collect.HashBiMap$Itr",
     "com.google.common.graph.PredecessorsFunction",
     "com.google.common.collect.ObjectArrays",
     "com.google.common.collect.Synchronized$SynchronizedDeque",
     "com.google.common.util.concurrent.Monitor$Guard",
     "com.google.common.collect.SortedIterable",
     "com.google.common.io.MoreFiles",
     "com.google.common.collect.RangeMap",
     "com.google.common.collect.UnmodifiableIterator",
     "com.google.common.io.ByteSource$AsCharSource",
     "com.google.common.base.Functions$SupplierFunction",
     "com.google.common.collect.ImmutableSortedMultiset",
     "com.google.common.hash.package-info",
     "com.google.common.collect.Maps$EntryFunction$2",
     "com.google.common.collect.Maps$EntryFunction$1",
     "com.google.common.collect.Iterators$EmptyModifiableIterator",
     "com.google.common.io.BaseEncoding$StandardBaseEncoding$2",
     "com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder",
     "com.google.common.io.BaseEncoding$StandardBaseEncoding$1",
     "com.google.common.io.AppendableWriter",
     "com.google.common.collect.HashMultiset",
     "com.google.common.cache.CacheBuilderSpec$ValueParser",
     "com.google.common.base.SmallCharMatcher",
     "com.google.common.base.CharMatcher$RangesMatcher",
     "com.google.common.collect.SingletonImmutableList",
     "com.google.common.base.Predicates$AndPredicate",
     "com.google.common.io.BaseEncoding$Base16Encoding",
     "com.google.common.primitives.Floats",
     "com.google.common.reflect.TypeToken$TypeCollector$1",
     "com.google.common.collect.Maps$FilteredMapValues",
     "com.google.common.graph.Traverser$TreeTraverser",
     "com.google.common.collect.Streams",
     "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
     "com.google.common.collect.MutableClassToInstanceMap$SerializedForm",
     "com.google.common.collect.MinMaxPriorityQueue$QueueIterator",
     "com.google.common.graph.GraphBuilder",
     "com.google.common.primitives.ImmutableDoubleArray$1",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task",
     "com.google.common.collect.ForwardingMap",
     "com.google.common.collect.ForwardingListMultimap",
     "com.google.common.collect.ExplicitOrdering",
     "com.google.common.io.LittleEndianDataOutputStream",
     "com.google.common.reflect.TypeToken$TypeCollector$3",
     "com.google.common.reflect.TypeToken$TypeCollector$2",
     "com.google.common.reflect.TypeToken$TypeCollector$4",
     "com.google.common.math.PairedStats",
     "com.google.common.cache.LocalCache$Strength",
     "com.google.common.collect.Sets$4$1",
     "com.google.common.collect.MapMakerInternalMap$CleanupMapTask",
     "com.google.common.collect.MapMakerInternalMap$DummyInternalEntry",
     "com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment",
     "com.google.common.hash.Murmur3_128HashFunction",
     "com.google.common.util.concurrent.AtomicDoubleArray",
     "com.google.common.collect.Synchronized$SynchronizedListMultimap",
     "com.google.common.graph.ElementOrder$1",
     "com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm",
     "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray",
     "com.google.common.hash.Funnels$SequentialFunnel",
     "com.google.common.hash.AbstractByteHasher",
     "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$1",
     "com.google.common.collect.Tables$AbstractCell",
     "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$2",
     "com.google.common.base.CaseFormat",
     "com.google.common.hash.MacHashFunction$1",
     "com.google.common.collect.Interners",
     "com.google.common.eventbus.Subscriber",
     "com.google.common.primitives.Floats$LexicographicalComparator",
     "com.google.common.cache.LocalCache$ValueIterator",
     "com.google.common.collect.MapMaker$Dummy",
     "com.google.common.primitives.Ints",
     "com.google.common.annotations.Beta",
     "com.google.common.primitives.Primitives",
     "com.google.common.base.Utf8",
     "com.google.common.base.Splitter$SplittingIterator",
     "com.google.common.collect.Synchronized$SynchronizedAsMapValues",
     "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
     "com.google.common.base.Predicates$InPredicate",
     "com.google.common.collect.MapMakerInternalMap$EntrySet",
     "com.google.common.collect.Maps$MapDifferenceImpl",
     "com.google.common.collect.Streams$1Splitr",
     "com.google.common.collect.ImmutableSet$Indexed",
     "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
     "com.google.common.net.MediaType$2",
     "com.google.common.collect.MapMakerInternalMap$InternalEntryHelper",
     "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
     "com.google.common.collect.Multisets$1$1",
     "com.google.common.primitives.UnsignedInteger",
     "com.google.common.collect.Multisets$FilteredMultiset",
     "com.google.common.base.Splitter$MapSplitter",
     "com.google.common.cache.Weigher",
     "com.google.common.collect.ImmutableSortedMap$1EntrySet",
     "com.google.common.util.concurrent.MoreExecutors$DirectExecutorService",
     "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
     "com.google.common.base.Converter$IdentityConverter",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder",
     "com.google.common.collect.TreeRangeSet$RangesByUpperBound",
     "com.google.common.collect.HashBiMap$Inverse",
     "com.google.common.collect.ForwardingMap$StandardKeySet",
     "com.google.common.collect.Iterators$10",
     "com.google.common.cache.LocalCache$StrongAccessWriteEntry",
     "com.google.common.collect.Iterators$11",
     "com.google.common.base.Predicate",
     "com.google.common.collect.Iterators$ConcatenatedIterator",
     "com.google.common.collect.Lists$CharSequenceAsList",
     "com.google.common.cache.LocalCache$KeyIterator",
     "com.google.common.net.InetAddresses$TeredoInfo",
     "com.google.common.cache.LocalCache",
     "com.google.common.cache.LongAddables$PureJavaLongAddable",
     "com.google.common.collect.ArrayTable$1",
     "com.google.common.math.MathPreconditions",
     "com.google.common.collect.ArrayTable$2",
     "com.google.common.collect.ArrayTable$3",
     "com.google.common.graph.ImmutableNetwork",
     "com.google.common.collect.ImmutableMultimap",
     "com.google.common.collect.HashBiMap$InverseSerializedForm",
     "com.google.common.util.concurrent.WrappingScheduledExecutorService",
     "com.google.common.collect.FilteredEntryMultimap$Keys$1",
     "com.google.common.collect.ImmutableSortedSet",
     "com.google.common.base.Charsets",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$1$2",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$1$1",
     "com.google.common.collect.ImmutableRangeSet$Builder",
     "com.google.common.hash.Hashing$LinearCongruentialGenerator",
     "com.google.common.io.CharSource$StringCharSource",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1",
     "com.google.common.collect.Multimaps$Keys",
     "com.google.common.graph.EndpointPair$1",
     "com.google.common.base.Joiner$MapJoiner",
     "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache",
     "com.google.common.collect.AbstractMultiset$EntrySet",
     "com.google.common.base.Predicates$OrPredicate",
     "com.google.common.base.Optional$1",
     "com.google.common.collect.Streams$DoubleFunctionWithIndex",
     "com.google.common.collect.FilteredKeySetMultimap",
     "com.google.common.base.Splitter$4$1",
     "com.google.common.base.Objects",
     "com.google.common.util.concurrent.Futures$CallbackListener",
     "com.google.common.collect.SortedSetMultimap",
     "com.google.common.collect.ImmutableSortedAsList",
     "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2",
     "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1",
     "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap",
     "com.google.common.collect.AbstractBiMap$KeySet",
     "com.google.common.collect.Maps$SortedMapDifferenceImpl",
     "com.google.common.collect.Streams$3Splitr",
     "com.google.common.collect.Maps$EntrySet",
     "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
     "com.google.common.hash.LongAdder",
     "com.google.common.util.concurrent.MoreExecutors",
     "com.google.common.util.concurrent.Futures$FutureCombiner",
     "com.google.common.collect.Streams$LongFunctionWithIndex",
     "com.google.common.io.CharSource$EmptyCharSource",
     "com.google.common.cache.LocalCache$WeakAccessWriteEntry",
     "com.google.common.util.concurrent.AbstractFuture$1",
     "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
     "com.google.common.collect.Sets$5$1$1",
     "com.google.common.cache.LocalCache$2",
     "com.google.common.collect.ForwardingMultiset$StandardElementSet",
     "com.google.common.cache.LocalCache$1",
     "com.google.common.collect.EmptyContiguousSet$1",
     "com.google.common.base.CharMatcher$Ascii",
     "com.google.common.cache.LongAddables",
     "com.google.common.collect.ImmutableMap$Builder",
     "com.google.common.base.Converter$FunctionBasedConverter",
     "com.google.common.collect.Streams$3",
     "com.google.common.collect.Streams$2",
     "com.google.common.collect.Streams$1",
     "com.google.common.collect.MutableClassToInstanceMap$1",
     "com.google.common.collect.MutableClassToInstanceMap$2",
     "com.google.common.collect.Streams$5",
     "com.google.common.collect.Streams$4",
     "com.google.common.collect.AbstractBiMap$EntrySet",
     "com.google.common.reflect.TypeToken$TypeFilter$1",
     "com.google.common.reflect.TypeToken$TypeFilter$2",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl$1",
     "com.google.common.util.concurrent.ForwardingCondition",
     "com.google.common.collect.Multimaps$CustomMultimap",
     "com.google.common.collect.RegularImmutableList",
     "com.google.common.collect.Tables$TransposeTable$1",
     "com.google.common.hash.BloomFilterStrategies$1",
     "com.google.common.hash.BloomFilterStrategies$2",
     "com.google.common.util.concurrent.ForwardingBlockingDeque",
     "com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException",
     "com.google.common.collect.Interners$InternerBuilder",
     "com.google.common.reflect.Types$ClassOwnership$2",
     "com.google.common.cache.LocalCache$EntryFactory",
     "com.google.common.collect.Streams$4Splitr",
     "com.google.common.collect.Synchronized$SynchronizedAsMapEntries",
     "com.google.common.reflect.Types$ClassOwnership$3",
     "com.google.common.collect.RegularImmutableMap$KeySet",
     "com.google.common.collect.SingletonImmutableTable",
     "com.google.common.reflect.Types$ClassOwnership$1",
     "com.google.common.graph.ForwardingNetwork",
     "com.google.common.util.concurrent.SimpleTimeLimiter$1$1",
     "com.google.common.collect.ImmutableMapKeySet",
     "com.google.common.base.Verify",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$3",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$2",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$6",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$5",
     "com.google.common.base.Ticker",
     "com.google.common.math.StatsAccumulator",
     "com.google.common.util.concurrent.AggregateFutureState",
     "com.google.common.hash.Funnel",
     "com.google.common.eventbus.SubscriberExceptionHandler",
     "com.google.common.io.ByteStreams",
     "com.google.common.collect.Maps$AbstractFilteredMap",
     "com.google.common.collect.FilteredMultimap",
     "com.google.common.collect.FilteredMultimapValues",
     "com.google.common.io.ByteProcessor",
     "com.google.common.collect.MapMakerInternalMap$SerializationProxy",
     "com.google.common.collect.ImmutableSet$Builder",
     "com.google.common.collect.Sets$SetView",
     "com.google.common.collect.Synchronized$SynchronizedAsMapValues$1",
     "com.google.common.collect.Synchronized$SynchronizedSortedSet",
     "com.google.common.collect.Maps$SortedAsMapView",
     "com.google.common.collect.Collections2$PermutationIterator",
     "com.google.common.graph.MapIteratorCache$1",
     "com.google.common.primitives.Shorts$ShortArrayAsList",
     "com.google.common.util.concurrent.AggregateFuture",
     "com.google.common.io.Closer",
     "com.google.common.collect.Tables$ImmutableCell",
     "com.google.common.collect.UsingToStringOrdering",
     "com.google.common.collect.ArrayTable$ArrayMap",
     "com.google.common.reflect.TypeToken$TypeSet",
     "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
     "com.google.common.collect.ForwardingMap$StandardEntrySet",
     "com.google.common.graph.AbstractNetwork$1$1",
     "com.google.common.cache.LocalCache$WriteQueue",
     "com.google.common.collect.MapDifference",
     "com.google.common.primitives.Ints$LexicographicalComparator",
     "com.google.common.primitives.Booleans$BooleanComparator",
     "com.google.common.collect.LinkedListMultimap$1ValuesImpl",
     "com.google.common.collect.StandardTable$ColumnKeyIterator",
     "com.google.common.collect.MinMaxPriorityQueue$Heap",
     "com.google.common.collect.Maps$FilteredEntryNavigableMap",
     "com.google.common.collect.ImmutableTable$CollectorState",
     "com.google.common.collect.MultimapBuilder$ListMultimapBuilder",
     "com.google.common.reflect.ClassPath$Scanner",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$1",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$3",
     "com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry",
     "com.google.common.math.LinearTransformation$VerticalLinearTransformation",
     "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedCheckedFuture",
     "com.google.common.collect.Sets$DescendingSet",
     "com.google.common.collect.Sets",
     "com.google.common.primitives.Ints$IntConverter",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
     "com.google.common.collect.Multisets$ElementSet",
     "com.google.common.collect.ComparisonChain$1",
     "com.google.common.graph.AbstractUndirectedNetworkConnections",
     "com.google.common.cache.LocalCache$AccessQueue$1",
     "com.google.common.cache.LocalCache$AccessQueue$2",
     "com.google.common.collect.Iterables$2",
     "com.google.common.collect.Lists$TransformingSequentialList$1",
     "com.google.common.primitives.Booleans",
     "com.google.common.collect.Iterables$3",
     "com.google.common.collect.Iterables$4",
     "com.google.common.collect.Iterables$5",
     "com.google.common.collect.Iterables$6",
     "com.google.common.collect.ForwardingObject",
     "com.google.common.collect.Iterables$7",
     "com.google.common.collect.Iterables$8",
     "com.google.common.collect.Iterables$9",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys",
     "com.google.common.graph.ElementOrder$Type",
     "com.google.common.base.MoreObjects$1",
     "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableBiMapEntry",
     "com.google.common.collect.ImmutableSortedSet$1",
     "com.google.common.graph.Graphs$TransposedValueGraph",
     "com.google.common.reflect.TypeToInstanceMap",
     "com.google.common.collect.ImmutableBiMap",
     "com.google.common.collect.Multisets$UnmodifiableMultiset",
     "com.google.common.collect.Multimaps$Keys$1$1",
     "com.google.common.util.concurrent.ServiceManager$NoOpService",
     "com.google.common.io.Files$FileByteSource",
     "com.google.common.graph.ImmutableValueGraph",
     "com.google.common.collect.Iterables$1",
     "com.google.common.reflect.Parameter",
     "com.google.common.util.concurrent.AbstractFuture$Failure$1",
     "com.google.common.base.Ascii",
     "com.google.common.collect.ImmutableRangeSet$1",
     "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
     "com.google.common.collect.LinkedHashMultimap$ValueSet$1",
     "com.google.common.primitives.SignedBytes",
     "com.google.common.cache.LocalCache$StrongWriteEntry",
     "com.google.common.net.MediaType$1",
     "com.google.common.reflect.ImmutableTypeToInstanceMap$1",
     "com.google.common.cache.RemovalCause",
     "com.google.common.collect.SortedIterables",
     "com.google.common.util.concurrent.FuturesGetChecked",
     "com.google.common.util.concurrent.ListenableScheduledFuture",
     "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1",
     "com.google.common.graph.DirectedMultiNetworkConnections$1"
    ],
    "usedTypes": [
     "com.google.common.reflect.TypeResolver",
     "com.google.common.collect.Sets"
    ],
    "usageRatio": 0.0010325245224574084,
    "children": [
     {
      "id": "com.google.code.findbugs:jsr305:jar:1.3.9:test",
      "coordinates": "com.google.code.findbugs:jsr305:1.3.9",
      "groupId": "com.google.code.findbugs",
      "artifactId": "jsr305",
      "version": "1.3.9",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 33015,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.google.guava:guava:jar:24.0-jre:test",
      "allTypes": [
       "javax.annotation.Nonnull$Checker",
       "javax.annotation.Nonnegative",
       "javax.annotation.ParametersAreNullableByDefault",
       "javax.annotation.WillClose",
       "javax.annotation.CheckForSigned",
       "javax.annotation.ParametersAreNonnullByDefault",
       "javax.annotation.MatchesPattern$Checker",
       "javax.annotation.meta.Exclusive",
       "javax.annotation.meta.TypeQualifierNickname",
       "javax.annotation.meta.TypeQualifier",
       "javax.annotation.Syntax",
       "javax.annotation.Untainted",
       "javax.annotation.WillCloseWhenClosed",
       "javax.annotation.Nonnull",
       "javax.annotation.Nullable",
       "javax.annotation.OverridingMethodsMustInvokeSuper",
       "javax.annotation.RegEx$Checker",
       "javax.annotation.meta.TypeQualifierValidator",
       "javax.annotation.WillNotClose",
       "javax.annotation.meta.Exhaustive",
       "javax.annotation.Nonnegative$Checker",
       "javax.annotation.MatchesPattern",
       "javax.annotation.concurrent.ThreadSafe",
       "javax.annotation.meta.TypeQualifierDefault",
       "javax.annotation.concurrent.GuardedBy",
       "javax.annotation.Signed",
       "javax.annotation.meta.When",
       "javax.annotation.RegEx",
       "javax.annotation.CheckReturnValue",
       "javax.annotation.Tainted",
       "javax.annotation.PropertyKey",
       "javax.annotation.Detainted",
       "javax.annotation.CheckForNull",
       "javax.annotation.concurrent.Immutable",
       "javax.annotation.concurrent.NotThreadSafe"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.checkerframework:checker-compat-qual:jar:2.0.0:test",
      "coordinates": "org.checkerframework:checker-compat-qual:2.0.0",
      "groupId": "org.checkerframework",
      "artifactId": "checker-compat-qual",
      "version": "2.0.0",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 31547,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.google.guava:guava:jar:24.0-jre:test",
      "allTypes": [
       "org.checkerframework.checker.regex.RegexUtil",
       "org.checkerframework.checker.formatter.FormatUtil$Conversion",
       "afu.plume.RegexUtil$CheckedPatternSyntaxException",
       "org.checkerframework.checker.nullness.compatqual.NonNullType",
       "afu.org.checkerframework.checker.formatter.FormatUtil",
       "afu.org.checkerframework.checker.regex.RegexUtil",
       "org.checkerframework.checker.nullness.NullnessUtils",
       "org.checkerframework.checker.nullness.compatqual.KeyForDecl",
       "afu.org.checkerframework.checker.formatter.FormatUtil$ExcessiveOrMissingFormatArgumentException",
       "org.checkerframework.checker.nullness.compatqual.MonotonicNonNullDecl",
       "afu.org.checkerframework.checker.regex.RegexUtil$CheckedPatternSyntaxException",
       "org.checkerframework.checker.nullness.compatqual.NullableType",
       "afu.org.checkerframework.checker.formatter.FormatUtil$Conversion",
       "org.checkerframework.checker.nullness.compatqual.PolyNullDecl",
       "afu.org.checkerframework.checker.formatter.FormatUtil$IllegalFormatConversionCategoryException",
       "afu.plume.RegexUtil",
       "org.checkerframework.checker.formatter.FormatUtil$ExcessiveOrMissingFormatArgumentException",
       "org.checkerframework.checker.regex.RegexUtil$CheckedPatternSyntaxException",
       "org.checkerframework.checker.nullness.compatqual.PolyNullType",
       "org.checkerframework.checker.nullness.compatqual.KeyForType",
       "org.checkerframework.checker.formatter.FormatUtil",
       "org.checkerframework.checker.nullness.compatqual.MonotonicNonNullType",
       "org.checkerframework.checker.nullness.compatqual.NullableDecl",
       "afu.org.checkerframework.checker.nullness.NullnessUtils",
       "afu.org.checkerframework.checker.units.UnitsTools",
       "org.checkerframework.checker.nullness.compatqual.NonNullDecl",
       "org.checkerframework.checker.units.UnitsTools",
       "org.checkerframework.checker.formatter.FormatUtil$IllegalFormatConversionCategoryException"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "com.google.errorprone:error_prone_annotations:jar:2.1.3:test",
      "coordinates": "com.google.errorprone:error_prone_annotations:2.1.3",
      "groupId": "com.google.errorprone",
      "artifactId": "error_prone_annotations",
      "version": "2.1.3",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 13704,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.google.guava:guava:jar:24.0-jre:test",
      "allTypes": [
       "com.google.errorprone.annotations.ForOverride",
       "com.google.errorprone.annotations.RestrictedApi",
       "com.google.errorprone.annotations.concurrent.LockMethod",
       "com.google.errorprone.annotations.RequiredModifiers",
       "com.google.errorprone.annotations.CheckReturnValue",
       "com.google.errorprone.annotations.CompileTimeConstant",
       "com.google.errorprone.annotations.concurrent.GuardedBy",
       "com.google.errorprone.annotations.OverridingMethodsMustInvokeSuper",
       "com.google.errorprone.annotations.CompatibleWith",
       "com.google.errorprone.annotations.CanIgnoreReturnValue",
       "com.google.errorprone.annotations.concurrent.UnlockMethod",
       "com.google.errorprone.annotations.DoNotCall",
       "com.google.errorprone.annotations.Var",
       "com.google.errorprone.annotations.concurrent.LazyInit",
       "com.google.errorprone.annotations.MustBeClosed",
       "com.google.errorprone.annotations.IncompatibleModifiers",
       "com.google.errorprone.annotations.Immutable",
       "com.google.errorprone.annotations.SuppressPackageLocation",
       "com.google.errorprone.annotations.FormatString",
       "com.google.errorprone.annotations.FormatMethod",
       "com.google.errorprone.annotations.NoAllocation",
       "com.google.errorprone.annotations.DoNotMock"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "com.google.j2objc:j2objc-annotations:jar:1.1:test",
      "coordinates": "com.google.j2objc:j2objc-annotations:1.1",
      "groupId": "com.google.j2objc",
      "artifactId": "j2objc-annotations",
      "version": "1.1",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 8782,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.google.guava:guava:jar:24.0-jre:test",
      "allTypes": [
       "com.google.j2objc.annotations.RetainedLocalRef",
       "com.google.j2objc.annotations.Weak",
       "com.google.j2objc.annotations.ObjectiveCName",
       "com.google.j2objc.annotations.RetainedWith",
       "com.google.j2objc.annotations.Property",
       "com.google.j2objc.annotations.WeakOuter",
       "com.google.j2objc.annotations.AutoreleasePool",
       "com.google.j2objc.annotations.LoopTranslation$LoopStyle",
       "com.google.j2objc.annotations.ReflectionSupport$Level",
       "com.google.j2objc.annotations.ReflectionSupport",
       "com.google.j2objc.annotations.J2ObjCIncompatible",
       "com.google.j2objc.annotations.LoopTranslation"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.codehaus.mojo:animal-sniffer-annotations:jar:1.14:test",
      "coordinates": "org.codehaus.mojo:animal-sniffer-annotations:1.14",
      "groupId": "org.codehaus.mojo",
      "artifactId": "animal-sniffer-annotations",
      "version": "1.14",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 3482,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.google.guava:guava:jar:24.0-jre:test",
      "allTypes": [
       "org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   }
  ]
 }
}