{
 "usage": {
  "org.springframework.data.repository.query.ResultProcessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.CollectionFactory",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$LocalDateTimeToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.LocalDateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.query.parser.PartTree$Subject": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConvertersUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.support.DefaultConversionService",
    "org.springframework.util.concurrent.ListenableFuture"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono",
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single",
    "rx.Completable",
    "rx.Observable"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Completable",
    "io.reactivex.Maybe",
    "io.reactivex.Single",
    "io.reactivex.Flowable",
    "io.reactivex.Observable"
   ],
   "com.google.guava:guava:jar:19.0:compile": [
    "com.google.common.base.Optional"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.collection.List",
    "io.vavr.control.Option",
    "io.vavr.control.Try",
    "io.vavr.collection.Traversable",
    "io.vavr.collection.LinkedHashMap",
    "io.vavr.collection.LinkedHashSet",
    "io.vavr.control.Try$Failure",
    "io.vavr.collection.Set",
    "io.vavr.collection.Seq",
    "io.vavr.collection.Map"
   ],
   "org.scala-lang:scala-library:jar:2.11.7:compile": [
    "scala.Option"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.CompletableFutureAssert"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationSource": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.BeanDefinition"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$LocalDateTimeToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultEntityCallbacksUnitTests$BeforeConvertCallback": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.Ordered"
   ]
  },
  "org.springframework.data.config.TypeFilterParser$FilterType": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter"
   ]
  },
  "org.springframework.data.repository.init.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.geo.format.DistanceFormatter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.Formatter"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.MultiValueMap"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponentsBuilder",
    "org.springframework.web.util.UriComponents"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.EntityModel",
    "org.springframework.hateoas.server.RepresentationModelAssembler",
    "org.springframework.hateoas.IanaLinkRelations",
    "org.springframework.hateoas.server.core.EmbeddedWrapper",
    "org.springframework.hateoas.PagedModel",
    "org.springframework.hateoas.PagedModel$PageMetadata",
    "org.springframework.hateoas.Link"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.MapAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.AbstractLongAssert"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$ZoneIdToStringConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.util.BeanLookup": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactory",
    "org.springframework.beans.factory.NoUniqueBeanDefinitionException",
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.init.UnmarshallingResourceReader": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.io.Resource",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-oxm:jar:5.2.0.RC2:compile": [
    "org.springframework.oxm.Unmarshaller"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindings": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.PathMetadata"
   ]
  },
  "org.springframework.data.web.XmlBeamHttpMessageConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.core.ResolvableType",
    "org.springframework.core.annotation.AnnotationUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.http.converter.HttpMessageNotWritableException",
    "org.springframework.http.converter.AbstractHttpMessageConverter",
    "org.springframework.http.MediaType",
    "org.springframework.http.converter.HttpMessageNotReadableException",
    "org.springframework.http.HttpInputMessage",
    "org.springframework.http.HttpOutputMessage"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ],
   "org.xmlbeam:xmlprojector:jar:1.4.16:compile": [
    "org.xmlbeam.io.StreamInput",
    "org.xmlbeam.io.ProjectionIO",
    "org.xmlbeam.XBProjector",
    "org.xmlbeam.XBProjector$Flags"
   ]
  },
  "org.springframework.data.querydsl.SimpleEntityPathResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.EntityPath"
   ]
  },
  "org.springframework.data.repository.cdi.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.mapping.model.AnnotationBasedPersistentPropertyUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotationUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.web.MapDataBinder$MapPropertyAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeansException",
    "org.springframework.beans.AbstractPropertyAccessor",
    "org.springframework.beans.NotWritablePropertyException",
    "org.springframework.beans.BeanUtils"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.spel.SpelEvaluationException",
    "org.springframework.expression.PropertyAccessor",
    "org.springframework.expression.spel.support.SimpleEvaluationContext$Builder",
    "org.springframework.expression.spel.SpelParserConfiguration",
    "org.springframework.expression.spel.support.SimpleEvaluationContext",
    "org.springframework.expression.EvaluationContext",
    "org.springframework.expression.Expression",
    "org.springframework.expression.spel.standard.SpelExpressionParser"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$InstantToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.DateTimeUtils",
    "org.threeten.bp.ZonedDateTime",
    "org.threeten.bp.Instant",
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.BasicPersistentEntityUnitTests$ComposedTypeAlias": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AliasFor"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactorySupportUnitTests$ConvertingRepository": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.concurrent.ListenableFuture"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.scheduling.annotation.Async"
   ]
  },
  "org.springframework.data.convert.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.mapping.model.KotlinCopyMethod": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.JvmClassMappingKt",
    "kotlin.reflect.KClass",
    "kotlin.reflect.KParameter$Kind",
    "kotlin.reflect.KFunction",
    "kotlin.reflect.KParameter"
   ],
   "org.jetbrains.kotlin:kotlin-reflect:jar:1.3.50:compile": [
    "kotlin.reflect.full.KClasses",
    "kotlin.reflect.jvm.ReflectJvmMapping"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.PersistentEntityInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$StringToIntegerConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ]
  },
  "org.springframework.data.repository.config.RepositoryComponentProvider$InterfaceTypeFilter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.core.type.classreading.MetadataReader",
    "org.springframework.core.type.ClassMetadata",
    "org.springframework.core.type.filter.AssignableTypeFilter"
   ]
  },
  "org.springframework.data.convert.DefaultConverterBuilder$ConfigurableGenericConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.lang.Nullable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$StringToLocalDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.lang.NonNull"
   ]
  },
  "org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory$AuditableInterfaceBeanWrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ResolvableType"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$ScalOptionUnwrapper$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.scala-lang:scala-library:jar:2.11.7:compile": [
    "scala.runtime.AbstractFunction0",
    "scala.Option"
   ]
  },
  "org.springframework.data.mapping.PreferredConstructor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2SingleToObservableConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Observable",
    "io.reactivex.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.classloadersupport.ShadowingClassLoader": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.DecoratingClassLoader",
    "org.springframework.util.FileCopyUtils",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$StringToFormatConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ]
  },
  "org.springframework.data.repository.core.support.DefaultCrudMethods": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.BridgeMethodResolver",
    "org.springframework.util.ClassUtils",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.query.ExtensionAwareQueryMethodEvaluationContextProvider$DelegatingMethodInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation",
    "org.aopalliance.intercept.MethodInterceptor"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.auditing.AuditingHandler": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.InitializingBean"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.support.AopUtils"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.springframework.data.mapping.model.ConvertingPropertyAccessorUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.support.DefaultFormattingConversionService"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1SingleToPublisherConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.geo.GeoResults": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.querydsl.QSort": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.OrderSpecifier",
    "com.querydsl.core.types.Expression"
   ]
  },
  "org.springframework.data.domain.jaxb.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ],
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.XmlNs",
    "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
    "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters",
    "javax.xml.bind.annotation.XmlSchema"
   ]
  },
  "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyStackAddress": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.asm.Label"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$CustomObjectToStringConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ]
  },
  "org.springframework.data.util.ReflectionUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldFilter",
    "org.springframework.core.MethodParameter",
    "org.springframework.core.ResolvableType",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.annotation.AnnotationUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanUtils"
   ],
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Unit",
    "kotlin.Metadata"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests$DummyRepositoryMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ResolvableType"
   ]
  },
  "org.springframework.data.querydsl.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$NullableWrapperToJdk8OptionalConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryCompositionUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.projection.DefaultProjectionInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.context.PersistentEntities": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.util.AnnotationDetectionMethodCallback": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotatedElementUtils",
    "org.springframework.util.ReflectionUtils$MethodCallback",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.web.SortHandlerMethodArgumentResolver$ExpressionBuilder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationSourceSupport": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.core.env.Environment",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.support.BeanNameGenerator"
   ]
  },
  "org.springframework.data.repository.core.support.DefaultRepositoryInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.core.annotation.AnnotationUtils",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.query.ParameterUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1CompletableToMonoConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Completable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.querydsl.binding.PathInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path"
   ]
  },
  "org.springframework.data.support.PersistableIsNewStrategy": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.query.ResultProcessor$ChainingConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.EntityConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ]
  },
  "org.springframework.data.type.classreading.DefaultMethodsMetadataReader": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.core.type.ClassMetadata",
    "org.springframework.core.NestedIOException",
    "org.springframework.asm.ClassReader",
    "org.springframework.lang.Nullable",
    "org.springframework.core.io.Resource"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.web.MethodParameterAwarePagedResourcesAssembler": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponents"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull",
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull",
    "javax.annotation.Nullable"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionalRepositoryProxyPostProcessor$AbstractFallbackTransactionAttributeSource": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.core.BridgeMethodResolver"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.interceptor.TransactionAttribute",
    "org.springframework.transaction.interceptor.DefaultTransactionAttribute",
    "org.springframework.transaction.interceptor.TransactionAttributeSource"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ]
  },
  "org.springframework.data.mapping.model.Property": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$MethodCallback",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils$MethodFilter",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$LocalDateToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.LocalDate"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport$RxJavaOneConversionSetup": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.InvalidDataAccessApiUsageException"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$DurationToStringConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.mapping.IdentifierAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.mapping.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.mapping.model.MappingInstantiationException": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.ObjectUtils"
   ],
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.reflect.KFunction"
   ],
   "org.jetbrains.kotlin:kotlin-reflect:jar:1.3.50:compile": [
    "kotlin.reflect.jvm.ReflectJvmMapping"
   ]
  },
  "org.springframework.data.domain.ExampleMatcher$PropertySpecifier": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.web.config.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.util.VavrCollections$FromJavaConverter$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.lang.Nullable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.collection.Traversable",
    "io.vavr.collection.LinkedHashMap",
    "io.vavr.collection.Set",
    "io.vavr.collection.LinkedHashSet",
    "io.vavr.collection.List",
    "io.vavr.collection.Seq",
    "io.vavr.collection.Map"
   ]
  },
  "org.springframework.data.geo.GeoResultUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.SerializationUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.util.Optionals": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.query.ParametersParameterAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.model.BasicPersistentEntityUnitTests$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.Alias": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.history.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.spel.EvaluationContextExtensionInformation$ExtensionTypeInformation$PublicMethodAndFieldFilter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldFilter",
    "org.springframework.util.ReflectionUtils$MethodFilter",
    "org.springframework.util.ReflectionUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbackDiscovererUnitTests$OrderedConfig$Third": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.Order"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionalRepositoryProxyPostProcessor$CustomAnnotationTransactionAttributeSource": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.interceptor.TransactionAttribute",
    "org.springframework.transaction.annotation.TransactionAnnotationParser",
    "org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser",
    "org.springframework.transaction.annotation.JtaTransactionAnnotationParser",
    "org.springframework.transaction.annotation.SpringTransactionAnnotationParser"
   ],
   "javax.ejb:ejb-api:jar:3.0:compile": [
    "javax.ejb.TransactionAttribute"
   ],
   "javax.transaction:javax.transaction-api:jar:1.2:test": [
    "javax.transaction.Transactional"
   ]
  },
  "org.springframework.data.projection.PropertyAccessingMethodInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanWrapper",
    "org.springframework.beans.BeanUtils"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation"
   ]
  },
  "org.springframework.data.util.ReflectionUtils$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldFilter",
    "org.springframework.util.ReflectionUtils"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$StringToPeriodConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryContext$CdiImplementationDetectionConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.classreading.MetadataReaderFactory"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.PersistableIdentifierAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$DateToLocalDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.LocalDate"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.web.config.HateoasAwareSpringDataWebConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ObjectFactory",
    "org.springframework.beans.factory.annotation.Qualifier"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationContext",
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.method.support.HandlerMethodArgumentResolver"
   ]
  },
  "org.springframework.data.auditing.AnnotationAuditingMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.Assert"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime",
    "org.joda.time.LocalDateTime"
   ]
  },
  "org.springframework.data.util.NullableUtilsUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils",
    "org.springframework.core.MethodParameter"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.util.ParentTypeAwareTypeInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.util.MultiValueMapCollector": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.CollectionUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.init.AbstractRepositoryPopulatorFactoryBean": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.io.Resource",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.AbstractFactoryBean"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationListener",
    "org.springframework.context.ApplicationContext",
    "org.springframework.context.ApplicationEvent",
    "org.springframework.context.event.ContextRefreshedEvent",
    "org.springframework.context.ApplicationContextAware"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.auditing.config.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.mapping.context.AbstractMappingContext$PersistentPropertyFilter$PropertyMatch": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.query.parser.OrderBySource": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToFluxConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.SimpleTypeHolder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.util.ClassUtils"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.LocalDate",
    "org.threeten.bp.Instant",
    "org.threeten.bp.LocalTime",
    "org.threeten.bp.LocalDateTime"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactoryAware",
    "org.springframework.beans.factory.BeanFactory",
    "org.springframework.beans.factory.ListableBeanFactory"
   ]
  },
  "org.springframework.data.mapping.context.PersistentPropertyPathFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFragment": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.ConverterBuilder$WritingConverterAware": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter"
   ]
  },
  "org.springframework.data.domain.PageImpl": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.domain.Range$RangeBuilder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2CompletableToPublisherConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Completable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$FormatConverterFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.convert.converter.ConverterFactory"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryComposition": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ClassUtils",
    "org.springframework.util.ReflectionUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.AnnotationMetadata"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ImportSelector"
   ]
  },
  "org.springframework.data.convert.ConfigurableTypeInformationMapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ]
  },
  "org.springframework.data.querydsl.binding.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.config.RepositoryComponentProvider$AllTypeFilter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.core.type.classreading.MetadataReader",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssembler": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponentsBuilder",
    "org.springframework.web.util.UriComponents"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.EntityModel",
    "org.springframework.hateoas.server.RepresentationModelAssembler",
    "org.springframework.hateoas.server.core.EmbeddedWrappers",
    "org.springframework.hateoas.IanaLinkRelations",
    "org.springframework.hateoas.server.core.EmbeddedWrapper",
    "org.springframework.hateoas.RepresentationModel",
    "org.springframework.hateoas.PagedModel",
    "org.springframework.hateoas.LinkRelation",
    "org.springframework.hateoas.PagedModel$PageMetadata",
    "org.springframework.hateoas.Link",
    "org.springframework.hateoas.UriTemplate"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.support.ServletUriComponentsBuilder"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$StringToInstantConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.lang.NonNull"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1ObservableToMonoConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.query.Parameter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.core.ResolvableType",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1SingleToMonoConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$StringToLocalDateTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.lang.NonNull"
   ]
  },
  "org.springframework.data.mapping.model.BasicPersistentEntity$AssociationComparator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbackDiscoverer$CallbackRetriever": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotationAwareOrderComparator"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ObjectProvider",
    "org.springframework.beans.factory.BeanFactory",
    "org.springframework.beans.factory.NoSuchBeanDefinitionException"
   ]
  },
  "org.springframework.data.repository.support.PaginginAndSortingRepositoryInvokerUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.support.GenericConversionService"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.support.DefaultFormattingConversionService"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PropertyPath$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.support.MethodParameters": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ParameterNameDiscoverer",
    "org.springframework.core.MethodParameter",
    "org.springframework.core.DefaultParameterNameDiscoverer",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.Jsr310ConvertersUnitTests$CommonTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractLocalDateTimeAssert",
    "org.assertj.core.api.AbstractInstantAssert",
    "org.assertj.core.api.AbstractLocalTimeAssert",
    "org.assertj.core.api.AbstractDateAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.AbstractLocalDateAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.config.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runners.Parameterized",
    "org.junit.runner.RunWith",
    "org.junit.Assume",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.util.MethodInvocationRecorder$PropertyNameDetectionStrategy": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.callback.ReactiveEntityCallbackInvoker": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNull",
    "org.springframework.lang.Nullable"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ]
  },
  "org.springframework.data.mapping.model.ConvertingPropertyAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.web.querydsl.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationDelegateUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.env.StandardEnvironment",
    "org.springframework.core.type.StandardAnnotationMetadata"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.parsing.BeanComponentDefinition",
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.support.DefaultListableBeanFactory",
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationConfigApplicationContext",
    "org.springframework.context.support.GenericApplicationContext"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.Advised",
    "org.springframework.aop.TargetSource"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.junit.MockitoJUnitRunner$Silent",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ObjectArrayAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.repository.config.RepositoryComponentProviderUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.filter.AssignableTypeFilter"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractListAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.convert.DefaultConverterBuilder$ConfigurableGenericConverter$Reading": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$FormatToStringConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ]
  },
  "org.springframework.data.repository.support.DomainClassConverterUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.core.convert.support.DefaultConversionService",
    "org.springframework.core.convert.TypeDescriptor"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.DefaultListableBeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationContext",
    "org.springframework.context.support.GenericApplicationContext"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.TargetSource",
    "org.springframework.aop.framework.Advised"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner$Silent",
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractOptionalAssert",
    "org.assertj.core.api.AbstractBooleanAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.repository.config.NamedQueriesBeanDefinitionParser": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.config.PropertiesFactoryBean",
    "org.springframework.beans.factory.xml.BeanDefinitionParser",
    "org.springframework.beans.factory.xml.ParserContext",
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.web.TestUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.context.request.ServletWebRequest",
    "org.springframework.web.context.request.NativeWebRequest"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.mock.web.MockHttpServletRequest"
   ]
  },
  "org.springframework.data.web.SortHandlerMethodArgumentResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Qualifier"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.support.WebDataBinderFactory",
    "org.springframework.web.method.support.ModelAndViewContainer",
    "org.springframework.web.context.request.NativeWebRequest"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.support.ConfigurableConversionService",
    "org.springframework.core.ReactiveAdapterRegistry",
    "org.springframework.core.ReactiveAdapter",
    "org.springframework.util.ClassUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.support.GenericConversionService",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.auditing.MappingAuditableBeanWrapperFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeansException",
    "org.springframework.beans.factory.config.BeanPostProcessor",
    "org.springframework.beans.factory.ObjectFactory",
    "org.springframework.beans.factory.BeanFactoryAware",
    "org.springframework.beans.factory.BeanFactory",
    "org.springframework.beans.factory.annotation.Qualifier",
    "org.springframework.beans.factory.BeanClassLoaderAware"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.method.support.HandlerMethodArgumentResolver"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
   ]
  },
  "org.springframework.data.transaction.MultiTransactionStatus$SavePoints": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.TransactionStatus"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeansException",
    "org.springframework.beans.factory.InitializingBean",
    "org.springframework.beans.factory.FactoryBean",
    "org.springframework.beans.factory.BeanFactoryAware",
    "org.springframework.beans.factory.BeanFactory"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.domain.Pageable": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.util.StreamUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.domain.jaxb.SortAdapter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ],
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.adapters.XmlAdapter"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$LocalDateTimeToJavaTimeInstantConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.ZonedDateTime",
    "org.threeten.bp.ZoneOffset",
    "org.threeten.bp.Instant",
    "org.threeten.bp.LocalDateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.callback.ReactiveEntityCallbacks": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactory"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ]
  },
  "org.springframework.data.querydsl.binding.PropertyPathInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanUtils"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.CollectionPathBase"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.geo.CircleUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.SerializationUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.domain.Range": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.PersistentPropertyAccessorTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runners.Parameterized",
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractBooleanAssert"
   ]
  },
  "org.springframework.data.util.DirectFieldAccessFallbackBeanWrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils",
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.NotWritablePropertyException",
    "org.springframework.beans.BeanWrapperImpl",
    "org.springframework.beans.NotReadablePropertyException"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.projection.ProjectionFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbackDiscoverer": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$MethodCallback",
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.core.ResolvableType",
    "org.springframework.util.ClassUtils",
    "org.springframework.util.ReflectionUtils$MethodFilter",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.core.annotation.AnnotationAwareOrderComparator",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactory",
    "org.springframework.beans.factory.NoSuchBeanDefinitionException",
    "org.springframework.beans.factory.config.ConfigurableBeanFactory"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.AopProxyUtils"
   ]
  },
  "org.springframework.data.repository.support.DomainClassConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.converter.ConditionalGenericConverter",
    "org.springframework.core.convert.converter.ConverterRegistry",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationContext",
    "org.springframework.context.ApplicationContextAware"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.domain.ExampleMatcher$PropertySpecifiers": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.type.MethodsMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.MethodMetadata",
    "org.springframework.core.type.ClassMetadata"
   ]
  },
  "org.springframework.data.util.ReflectionUtils$AnnotationFieldFilter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotationUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.config.DefaultRepositoryConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.web.HateoasSortHandlerMethodArgumentResolverUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponentsBuilder",
    "org.springframework.web.util.UriComponents"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.TemplateVariables"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.repository.support.MethodParametersUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Qualifier"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.type.classreading.DefaultMethodsMetadataReaderUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.MethodMetadata"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractListAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerArgumentResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Qualifier"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponentsBuilder",
    "org.springframework.web.bind.support.WebDataBinderFactory",
    "org.springframework.web.method.support.ModelAndViewContainer",
    "org.springframework.web.context.request.NativeWebRequest",
    "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "org.springframework.web.util.UriComponents"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.server.core.MethodParameters",
    "org.springframework.hateoas.server.mvc.WebMvcLinkBuilderFactory",
    "org.springframework.hateoas.Link",
    "org.springframework.hateoas.server.MethodLinkBuilderFactory",
    "org.springframework.hateoas.server.LinkBuilder"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.springframework.data.repository.util.NullableWrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.query.SpelQueryContext": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.QueryExecutionResultHandler$ReturnTypeDescriptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxb": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.adapters.XmlAdapter"
   ]
  },
  "org.springframework.data.util.ClassTypeInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
    "org.springframework.lang.Nullable",
    "org.springframework.core.GenericTypeResolver",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.query.ResultProcessor$NoOpConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionalRepositoryProxyPostProcessor$AbstractFallbackTransactionAttributeSource$DefaultCacheKey": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ObjectUtils"
   ]
  },
  "org.springframework.data.web.JsonProjectingMethodInterceptorFactory$InputMessageProjecting": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.ResolvableType",
    "org.springframework.core.annotation.AnnotationUtils"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation",
    "org.aopalliance.intercept.MethodInterceptor"
   ],
   "com.jayway.jsonpath:json-path:jar:2.4.0:compile": [
    "com.jayway.jsonpath.JsonPath",
    "com.jayway.jsonpath.Predicate",
    "com.jayway.jsonpath.DocumentContext",
    "com.jayway.jsonpath.PathNotFoundException"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbackDiscovererUnitTests$OrderedConfig$First": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.Order"
   ]
  },
  "org.springframework.data.projection.SpelEvaluatingMethodInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value",
    "org.springframework.beans.factory.BeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.expression.BeanFactoryResolver",
    "org.springframework.context.expression.MapAccessor"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation",
    "org.aopalliance.intercept.MethodInterceptor"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.ParserContext",
    "org.springframework.expression.common.TemplateParserContext",
    "org.springframework.expression.EvaluationContext",
    "org.springframework.expression.Expression",
    "org.springframework.expression.spel.standard.SpelExpressionParser",
    "org.springframework.expression.spel.support.StandardEvaluationContext"
   ]
  },
  "org.springframework.data.web.ProxyingHandlerMethodArgumentResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotatedElementUtils",
    "org.springframework.core.MethodParameter",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.ClassUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactoryAware",
    "org.springframework.beans.MutablePropertyValues",
    "org.springframework.beans.BeansException",
    "org.springframework.beans.factory.ObjectFactory",
    "org.springframework.beans.factory.BeanFactory",
    "org.springframework.beans.factory.BeanClassLoaderAware"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.support.WebDataBinderFactory",
    "org.springframework.web.method.annotation.ModelAttributeMethodProcessor",
    "org.springframework.web.context.request.NativeWebRequest",
    "org.springframework.web.bind.WebDataBinder"
   ]
  },
  "org.springframework.data.web.querydsl.QuerydslPredicateArgumentResolverUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.context.request.ServletWebRequest"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.BooleanExpression",
    "com.querydsl.core.types.Predicate",
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.dsl.StringExpression",
    "com.querydsl.core.types.dsl.NumberPath"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.ModelAndView"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.mock.web.MockHttpServletRequest",
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.repository.reactive.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.util.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.web.querydsl.QuerydslPredicateArgumentResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.core.convert.support.DefaultConversionService",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.LinkedMultiValueMap"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.support.WebDataBinderFactory",
    "org.springframework.web.method.support.ModelAndViewContainer",
    "org.springframework.web.context.request.NativeWebRequest",
    "org.springframework.web.method.support.HandlerMethodArgumentResolver"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.web.JsonProjectingMethodInterceptorFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotationUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor"
   ],
   "com.jayway.jsonpath:json-path:jar:2.4.0:compile": [
    "com.jayway.jsonpath.Option",
    "com.jayway.jsonpath.JsonPath",
    "com.jayway.jsonpath.Configuration$ConfigurationBuilder",
    "com.jayway.jsonpath.DocumentContext",
    "com.jayway.jsonpath.ParseContext",
    "com.jayway.jsonpath.spi.mapper.MappingProvider",
    "com.jayway.jsonpath.Configuration"
   ],
   "net.minidev:json-smart:jar:2.3:compile": [
    "net.minidev.json.JSONArray",
    "net.minidev.json.JSONObject"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFragment$ImplementedRepositoryFragment": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.AnnotationBasedPersistentPropertyUnitTests$MyComposedAnnotationUsingAliasFor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AliasFor"
   ]
  },
  "org.springframework.data.util.ReflectionUtilsUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldFilter",
    "org.springframework.core.MethodParameter",
    "org.springframework.util.ReflectionUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.init.Jackson2ResourceReader": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.core.io.Resource",
    "org.springframework.util.Assert"
   ],
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper",
    "com.fasterxml.jackson.databind.DeserializationFeature",
    "com.fasterxml.jackson.databind.ObjectReader",
    "com.fasterxml.jackson.databind.JsonNode"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToRxJava2FlowableConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Flowable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.config.ImplementationDetectionConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.BeanDefinition"
   ]
  },
  "org.springframework.data.domain.Range$Bound": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$NullableWrapperToGuavaOptionalConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "com.google.guava:guava:jar:19.0:compile": [
    "com.google.common.base.Optional"
   ]
  },
  "org.springframework.data.repository.support.DefaultRepositoryInvokerFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.support.DefaultFormattingConversionService"
   ]
  },
  "org.springframework.data.geo.Box": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.query.Parameters": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ParameterNameDiscoverer",
    "org.springframework.core.MethodParameter",
    "org.springframework.core.DefaultParameterNameDiscoverer",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.domain.AbstractAggregateRoot": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiator$DefaultingKotlinClassInstantiatorAdapter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.reflect.KFunction",
    "kotlin.reflect.KParameter"
   ],
   "org.jetbrains.kotlin:kotlin-reflect:jar:1.3.50:compile": [
    "kotlin.reflect.jvm.ReflectJvmMapping"
   ]
  },
  "org.springframework.data.mapping.context.InvalidPersistentPropertyPath": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.PropertyMatches"
   ]
  },
  "org.springframework.data.crossstore.HashMapChangeSet": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService"
   ]
  },
  "org.springframework.data.projection.TargetAware": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.TargetClassAware",
    "org.springframework.aop.RawTargetAccess"
   ],
   "com.fasterxml.jackson.core:jackson-annotations:jar:2.9.0:compile": [
    "com.fasterxml.jackson.annotation.JsonIgnore"
   ]
  },
  "org.springframework.data.auditing.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConvertersUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.convert.support.GenericConversionService"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.DateTimeUtils",
    "org.threeten.bp.LocalDate",
    "org.threeten.bp.Instant",
    "org.threeten.bp.ZoneId",
    "org.threeten.bp.LocalTime",
    "org.threeten.bp.LocalDateTime"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractDateAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanNameGenerator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition",
    "org.springframework.beans.factory.config.ConstructorArgumentValues",
    "org.springframework.beans.factory.support.BeanNameGenerator",
    "org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder",
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition"
   ]
  },
  "org.springframework.data.web.SpringDataAnnotationUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotationUtils",
    "org.springframework.util.ObjectUtils",
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Qualifier"
   ]
  },
  "org.springframework.data.geo.Distance": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.SpelExpressionParameterProviderUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.repository.core.support.MethodInvocationValidator$Nullability": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ParameterNameDiscoverer",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.MethodParameter"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.projection.ProxyProjectionFactory$TargetAwareMethodInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation"
   ]
  },
  "org.springframework.data.mapping.context.PersistentPropertyPathFactoryUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils"
   ],
   "javax.inject:javax.inject:jar:1:compile": [
    "javax.inject.Inject"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerArgumentResolverUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponents"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.mapping.model.CamelCaseSplittingFieldNamingStrategy": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.core.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$DateToLocalTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.projection.DefaultProjectionInformation$PropertyDescriptorSource": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.core.type.MethodMetadata",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanUtils"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$DateToDateTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.geo.Point": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.ConverterBuilderUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.core.convert.converter.GenericConverter"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.internal.util.Supplier"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.mapping.model.PropertyValueProvider": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.callback.CapturingEntityCallback$ThirdCallback": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.Ordered"
   ]
  },
  "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ObjectFactory",
    "org.springframework.beans.factory.annotation.Qualifier"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.config.ConfigurationUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.xml.XmlReaderContext",
    "org.springframework.beans.factory.config.BeanDefinition"
   ]
  },
  "org.springframework.data.spel.spi.EvaluationContextExtension": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.projection.SpelAwareProxyProjectionFactory$SpelAwareProjectionInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotationUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.ResolvableType"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation",
    "org.aopalliance.intercept.MethodInterceptor"
   ]
  },
  "org.springframework.data.web.config.EnableSpringDataWebSupportIntegrationTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationContext"
   ],
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponentsBuilder",
    "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "org.springframework.web.context.WebApplicationContext",
    "org.springframework.web.util.UriComponents"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.Link"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractBooleanAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.web.servlet.ResultActions",
    "org.springframework.test.web.servlet.result.MockMvcResultMatchers",
    "org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder",
    "org.springframework.test.web.servlet.result.StatusResultMatchers",
    "org.springframework.test.web.servlet.MockMvc",
    "org.springframework.test.web.servlet.setup.MockMvcBuilders",
    "org.springframework.test.util.ReflectionTestUtils",
    "org.springframework.test.web.servlet.request.MockMvcRequestBuilders"
   ]
  },
  "org.springframework.data.mapping.model.IdPropertyIdentifierAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.EntityInstantiators": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.util.AnnotatedTypeScanner": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.type.filter.AnnotationTypeFilter",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.env.Environment"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider",
    "org.springframework.context.ResourceLoaderAware",
    "org.springframework.context.EnvironmentAware"
   ]
  },
  "org.springframework.data.repository.config.RepositoryComponentProvider": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.filter.AnnotationTypeFilter",
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationConfigUtils",
    "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanClassLoaderAware",
    "org.springframework.beans.factory.ListableBeanFactory",
    "org.springframework.beans.factory.InitializingBean",
    "org.springframework.beans.factory.FactoryBean",
    "org.springframework.beans.factory.BeanFactoryAware",
    "org.springframework.beans.BeansException",
    "org.springframework.beans.factory.BeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEventPublisher",
    "org.springframework.context.ApplicationEventPublisherAware"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.web.ProxyingHandlerMethodArgumentResolverUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.support.DefaultConversionService"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeansException"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractBooleanAssert"
   ]
  },
  "org.springframework.data.web.PageableDefaultUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.context.request.NativeWebRequest",
    "org.springframework.web.context.request.ServletWebRequest",
    "org.springframework.web.method.support.HandlerMethodArgumentResolver"
   ],
   "javax.servlet:javax.servlet-api:jar:3.0.1:provided": [
    "javax.servlet.http.HttpServletRequest"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$DateTimeToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscoverer": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.model.AbstractPersistentProperty": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.EntityInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupport": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.config.AutowireCapableBeanFactory",
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ImportBeanDefinitionRegistrar"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.target.LazyInitTargetSource",
    "org.springframework.aop.framework.ProxyFactoryBean"
   ]
  },
  "org.springframework.data.repository.init.ResourceReaderRepositoryPopulator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
    "org.springframework.lang.Nullable",
    "org.springframework.core.io.Resource",
    "org.springframework.core.io.support.ResourcePatternResolver",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEventPublisher",
    "org.springframework.context.ApplicationEventPublisherAware"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.springframework.data.history.RevisionSort": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.web.MapDataBinder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.ConfigurablePropertyAccessor"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.WebDataBinder"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.query.ParametersParameterAccessor$BindableParameterIterator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.domain.AbstractPageRequest": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.history.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.mapping.model.SpELContext": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.expression.BeanFactoryResolver"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.ExpressionParser",
    "org.springframework.expression.PropertyAccessor",
    "org.springframework.expression.spel.standard.SpelExpressionParser",
    "org.springframework.expression.spel.support.StandardEvaluationContext",
    "org.springframework.expression.EvaluationContext"
   ]
  },
  "org.springframework.data.convert.ClassGeneratingEntityInstantiator$ObjectInstantiatorClassGenerator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.asm.Opcodes",
    "org.springframework.cglib.core.ReflectUtils",
    "org.springframework.asm.Type",
    "org.springframework.asm.ClassWriter",
    "org.springframework.lang.Nullable",
    "org.springframework.asm.MethodVisitor",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.geo.format.PointFormatter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.Formatter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscoverer$Discoverers": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ParameterNameDiscoverer",
    "org.springframework.core.DefaultParameterNameDiscoverer",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.util.AnnotatedTypeScanner$InterfaceAwareScanner": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.AnnotationMetadata"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToRxJava1SingleConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.domain.Persistable": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.PersistentProperty": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotatedElementUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.model.AbstractPersistentPropertyUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert"
   ]
  },
  "org.springframework.data.web.PageableArgumentResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "org.springframework.web.bind.support.WebDataBinderFactory",
    "org.springframework.web.method.support.ModelAndViewContainer",
    "org.springframework.web.context.request.NativeWebRequest"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.util.ClassUtils"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.LocalDate"
   ]
  },
  "org.springframework.data.history.Revisions": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.core.support.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToRxJava2SingleConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$JavaTimeInstantToLocalDateTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.ZoneOffset",
    "org.threeten.bp.Instant",
    "org.threeten.bp.LocalDateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.annotation.AnnotationUtils",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionReaderUtils"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.InvalidDataAccessApiUsageException"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$ScalOptionUnwrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.lang.Nullable"
   ],
   "org.scala-lang:scala-library:jar:2.11.7:compile": [
    "scala.Function0",
    "scala.Option"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2ObservableToMaybeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Maybe",
    "io.reactivex.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.domain.jaxb.PageAdapter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.Link"
   ],
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.adapters.XmlAdapter"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryExtensionSupport": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotationUtils"
   ],
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.spi.AnnotatedType",
    "javax.enterprise.inject.spi.AfterDeploymentValidation",
    "javax.enterprise.event.Observes",
    "javax.enterprise.inject.spi.Extension",
    "javax.enterprise.inject.spi.ProcessAnnotatedType",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.spi.AnnotatedType",
    "javax.enterprise.inject.spi.AfterDeploymentValidation",
    "javax.enterprise.event.Observes",
    "javax.enterprise.inject.spi.Extension",
    "javax.enterprise.inject.spi.ProcessAnnotatedType",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "javax.inject:javax.inject:jar:1:compile": [
    "javax.inject.Qualifier"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.springframework.data.convert.CustomConversions$ConversionTargetsCache": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.geo.GeoResultsUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.SerializationUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupportUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.core.env.StandardEnvironment",
    "org.springframework.core.type.StandardAnnotationMetadata"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.support.BeanNameGenerator"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationBeanNameGenerator"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ]
  },
  "org.springframework.data.geo.Circle": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.util.MethodInvocationRecorder$InvocationInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.geo.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.web.config.QuerydslWebConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired",
    "org.springframework.beans.factory.ObjectFactory",
    "org.springframework.beans.factory.ObjectProvider",
    "org.springframework.beans.factory.annotation.Qualifier"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Lazy",
    "org.springframework.context.annotation.Bean"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.method.support.HandlerMethodArgumentResolver"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1SingleToFluxConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.geo.PointUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.SerializationUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.filter.AnnotationTypeFilter",
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.core.env.Environment",
    "org.springframework.lang.Nullable",
    "org.springframework.core.type.filter.AspectJTypeFilter",
    "org.springframework.core.type.filter.RegexPatternTypeFilter",
    "org.springframework.core.type.StandardAnnotationMetadata",
    "org.springframework.core.annotation.AnnotationAttributes",
    "org.springframework.core.type.filter.AssignableTypeFilter",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.support.BeanNameGenerator",
    "org.springframework.beans.BeanUtils"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationBeanNameGenerator",
    "org.springframework.context.annotation.FilterType",
    "org.springframework.context.annotation.ConfigurationClassPostProcessor"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.geo.DistanceUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.SerializationUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.data.Offset",
    "org.assertj.core.api.AbstractDoubleAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$VavrOptionUnwrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.lang.Nullable"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.collection.Traversable",
    "io.vavr.control.Option"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1ObservableToFluxConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.util.nonnull.NullableAnnotatedType": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.meta.When",
    "javax.annotation.Nonnull",
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.meta.When",
    "javax.annotation.Nonnull",
    "javax.annotation.Nullable"
   ]
  },
  "org.springframework.data.util.ParameterTypesUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToRxJava1CompletableConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Completable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.history.support.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.type.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.type.classreading.MethodsMetadataReaderFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.classreading.MetadataReader",
    "org.springframework.core.type.classreading.SimpleMetadataReaderFactory",
    "org.springframework.lang.Nullable",
    "org.springframework.core.io.Resource"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$LocalDateToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.DateTimeUtils",
    "org.threeten.bp.LocalDate",
    "org.threeten.bp.ZonedDateTime",
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.util.VavrCollections$FromJavaConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.ConditionalGenericConverter",
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.collection.Traversable"
   ]
  },
  "org.springframework.data.spel.ExtensionAwareEvaluationContextProvider$ExtensionAwarePropertyAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.spel.SpelEvaluationException",
    "org.springframework.expression.PropertyAccessor",
    "org.springframework.expression.MethodResolver",
    "org.springframework.expression.MethodExecutor",
    "org.springframework.expression.TypedValue",
    "org.springframework.expression.spel.SpelMessage",
    "org.springframework.expression.EvaluationContext"
   ]
  },
  "org.springframework.data.spel.EvaluationContextExtensionInformation$ExtensionTypeInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$MethodCallback",
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.ReflectionUtils$MethodFilter",
    "org.springframework.util.CollectionUtils",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.AnnotationBasedPersistentPropertyUnitTests$TypeWithCustomAnnotationsOnBothFieldAndAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.query.ReturnedType$ReturnedInterface": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.util.Streamable": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.PropertyPath": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.spel.EvaluationContextExtensionInformation$RootObjectInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldFilter",
    "org.springframework.util.ReflectionUtils$FieldCallback",
    "org.springframework.util.ReflectionUtils$MethodCallback",
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.ReflectionUtils$MethodFilter",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.LinkedMultiValueMap",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanUtils"
   ]
  },
  "org.springframework.data.web.HateoasPageableHandlerMethodArgumentResolverUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.util.MultiValueMap"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponentsBuilder",
    "org.springframework.web.util.UriComponents"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.TemplateVariables",
    "org.springframework.hateoas.server.mvc.UriComponentsContributor"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.AbstractBooleanAssert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToFluxConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Maybe"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.Jsr310ConvertersUnitTests$ConversionTest": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ResolvableType",
    "org.springframework.core.convert.ConversionService"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.runners.Parameterized$Parameter",
    "org.junit.runners.Parameterized"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.auditing.MappingAuditableBeanWrapperFactory$MappingMetadataAuditableBeanWrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$MethodCallback",
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEventPublisher"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.auditing.AnnotationAuditingMetadataUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.geo.BoxUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.SerializationUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.repository.support.RepositoriesUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.DefaultListableBeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.support.GenericApplicationContext"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner$Silent",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2SingleToFluxConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.SpELExpressionEvaluator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactorySupport": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.core.convert.support.DefaultConversionService",
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.support.GenericConversionService",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanClassLoaderAware",
    "org.springframework.beans.BeanUtils",
    "org.springframework.beans.factory.BeanFactoryAware",
    "org.springframework.beans.BeansException",
    "org.springframework.beans.factory.BeanFactory"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.interceptor.ExposeInvocationInterceptor",
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.interceptor.TransactionalProxy"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.support.PageableExecutionUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$DateToLocalDateTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.DateTimeUtils",
    "org.threeten.bp.LocalDateTime",
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1ObservableToSingleConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single",
    "rx.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.web.MapDataBinder$MapPropertyAccessor$PropertyTraversingMapAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.CollectionFactory",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.expression.MapAccessor"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.AccessException",
    "org.springframework.expression.EvaluationContext",
    "org.springframework.expression.TypedValue"
   ]
  },
  "org.springframework.data.repository.core.support.DelegatingEntityInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$LocalDateToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.support.RepositoryInvoker": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.MultiValueMap"
   ]
  },
  "org.springframework.data.repository.config.FragmentMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.core.type.ClassMetadata",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.core.type.classreading.MetadataReader",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanDefinitionStoreException"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2FlowableToPublisherConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Flowable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.core.support.AnnotationRepositoryMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.util.AnnotationDetectionFieldCallbackUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldCallback",
    "org.springframework.util.ReflectionUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$LocalDateTimeToJsr310Converter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.LocalDateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.support.CrudRepositoryInvoker": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ]
  },
  "org.springframework.data.mapping.model.BasicPersistentEntity$AbsentIdentifierAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.query.ResultProcessor$ProjectingConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.convert.support.DefaultConversionService",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2CompletableToMonoConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Completable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupportUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.core.type.StandardAnnotationMetadata"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.geo.GeoPage": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ObjectUtils",
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactorySupportUnitTests$ObjectRepositoryCustom": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.context.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.geo.PolygonUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.SerializationUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2ObservableToFluxConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.BackpressureStrategy",
    "io.reactivex.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerArgumentResolverUnitTests$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$StringToZoneIdConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.ParameterValueProvider": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.query.SpelEvaluator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.EvaluationContext",
    "org.springframework.expression.Expression",
    "org.springframework.expression.spel.standard.SpelExpressionParser"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.config.ImplementationDetectionConfigurationUnitTests$MockImplementationDetectionConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.core.type.classreading.SimpleMetadataReaderFactory"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.support.ReflectionRepositoryInvokerUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionFailedException",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.MultiValueMap",
    "org.springframework.core.convert.support.GenericConversionService",
    "org.springframework.util.LinkedMultiValueMap"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.support.DefaultFormattingConversionService"
   ],
   "com.google.guava:guava:jar:19.0:compile": [
    "com.google.common.base.Optional"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.AdditionalAnswers",
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.stubbing.Stubber",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.repository.query.RepositoryQuery": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.projection.ProjectingMethodInterceptorUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.support.DefaultConversionService"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation",
    "org.aopalliance.intercept.MethodInterceptor"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.MapAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindings$TypeBinder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.Predicate"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.core.support.QueryExecutionResultHandler": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.support.GenericConversionService",
    "org.springframework.core.CollectionFactory",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$NullableWrapperToFutureConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.concurrent.ListenableFuture",
    "org.springframework.core.convert.ConversionService"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.scheduling.annotation.AsyncResult"
   ]
  },
  "org.springframework.data.web.config.SpringDataWebConfigurationIntegrationTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationConfigApplicationContext"
   ],
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.http.converter.HttpMessageConverter"
   ],
   "com.jayway.jsonpath:json-path:jar:2.4.0:compile": [
    "com.jayway.jsonpath.DocumentContext"
   ],
   "org.xmlbeam:xmlprojector:jar:1.4.16:compile": [
    "org.xmlbeam.XBProjector"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.Condition"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.repository.support.RepositoriesUnitTests$CustomRepositoryMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$NumberToStringConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ]
  },
  "org.springframework.data.util.ParsingUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupportUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.DefaultResourceLoader",
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.core.env.StandardEnvironment",
    "org.springframework.core.type.StandardAnnotationMetadata",
    "org.springframework.core.env.Environment"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionRegistry"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.InvalidDataAccessApiUsageException"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.spel.Functions": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.LinkedMultiValueMap"
   ]
  },
  "org.springframework.data.repository.core.support.MethodLookup": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$LocalDateTimeToJodaDateTime": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$NullableWrapperToCompletableFutureConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ]
  },
  "org.springframework.data.projection.MapAccessingMethodInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2SingleToPublisherConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$InstantToJodaLocalDateTime": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.LocalDateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.spel.EvaluationContextExtensionInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldFilter",
    "org.springframework.util.ReflectionUtils$FieldCallback",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.util.NullableUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotatedElementUtils",
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.annotation.AnnotationUtils",
    "org.springframework.util.MultiValueMap",
    "org.springframework.lang.NonNullApi"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull",
    "javax.annotation.meta.TypeQualifierDefault"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull",
    "javax.annotation.meta.TypeQualifierDefault"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.spel.ExtensionAwareEvaluationContextProvider": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotationAwareOrderComparator"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.expression.BeanFactoryResolver"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.spel.support.ReflectivePropertyAccessor",
    "org.springframework.expression.EvaluationContext",
    "org.springframework.expression.spel.support.StandardEvaluationContext"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionalRepositoryProxyPostProcessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactory",
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.interceptor.TransactionInterceptor"
   ]
  },
  "org.springframework.data.util.ProxyUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.core.io.support.SpringFactoriesLoader",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.support.AopUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation",
    "org.springframework.aop.ProxyMethodInvocation"
   ]
  },
  "org.springframework.data.auditing.IsNewAwareAuditingHandler": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.callback.CapturingEntityCallback$FirstCallback": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.Ordered"
   ]
  },
  "org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory$ReflectionAuditingBeanWrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$DateToLocalDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.core.support.MethodLookups$ReactiveTypeInteropMethodLookup": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.core.ResolvableType",
    "org.springframework.core.GenericTypeResolver",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryContext": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.classreading.CachingMetadataReaderFactory",
    "org.springframework.core.env.StandardEnvironment",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.AbstractBeanDefinition"
   ],
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.UnsatisfiedResolutionException"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.UnsatisfiedResolutionException"
   ]
  },
  "org.springframework.data.repository.query.DefaultParameters": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.core.env.Environment",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.support.BeanNameGenerator"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ResourceLoaderAware",
    "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "org.springframework.context.annotation.ImportBeanDefinitionRegistrar",
    "org.springframework.context.EnvironmentAware"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslPathInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanUtils"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.PathMetadata"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.context.DefaultPersistentPropertyPathUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.asm.FieldVisitor",
    "org.springframework.asm.Opcodes",
    "org.springframework.cglib.core.ReflectUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.asm.MethodVisitor",
    "org.springframework.asm.Type",
    "org.springframework.asm.ClassWriter",
    "org.springframework.asm.Label",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.core.support.AbstractRepositoryMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.util.ReflectionUtils$DescribedFieldFilter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldFilter",
    "org.springframework.util.ReflectionUtils"
   ]
  },
  "org.springframework.data.spel.spi.Function": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.util.TypeDiscoverer": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.GenericTypeResolver",
    "org.springframework.util.ClassUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanUtils"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.collection.Map"
   ]
  },
  "org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils"
   ]
  },
  "org.springframework.data.mapping.Association": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.config.DeferredRepositoryInitializationListener": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.Ordered"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationListener",
    "org.springframework.context.ApplicationEvent",
    "org.springframework.context.event.ContextRefreshedEvent"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbackDiscovererUnitTests$OrderedConfig$Second": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.Ordered"
   ]
  },
  "org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests$CustomEntityInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.web.PageableHandlerMethodArgumentResolverUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.context.request.ServletWebRequest"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.mock.web.MockHttpServletRequest"
   ]
  },
  "org.springframework.data.convert.CustomConversions$TargetTypes": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.projection.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RegistryHolder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.ReactiveAdapterRegistry"
   ]
  },
  "org.springframework.data.type.classreading.MethodsMetadataReaderFactoryUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.DefaultResourceLoader"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$CustomDateTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime"
   ]
  },
  "org.springframework.data.util.MethodInvocationRecorder$DefaultPropertyNameDetectionStrategy": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.web.config.SpringDataWebConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.ClassUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired",
    "org.springframework.beans.factory.annotation.Qualifier",
    "org.springframework.beans.factory.ObjectFactory",
    "org.springframework.beans.factory.NoSuchBeanDefinitionException",
    "org.springframework.beans.factory.BeanClassLoaderAware"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.FormatterRegistry",
    "org.springframework.format.support.FormattingConversionService",
    "org.springframework.context.ApplicationContext",
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ],
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "org.springframework.http.converter.HttpMessageConverter"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
   ],
   "com.jayway.jsonpath:json-path:jar:2.4.0:compile": [
    "com.jayway.jsonpath.DocumentContext"
   ],
   "org.xmlbeam:xmlprojector:jar:1.4.16:compile": [
    "org.xmlbeam.XBProjector"
   ]
  },
  "org.springframework.data.repository.config.CustomRepositoryImplementationDetectorUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.env.Environment",
    "org.springframework.core.io.DefaultResourceLoader",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.core.type.classreading.SimpleMetadataReaderFactory"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.invocation.InvocationOnMock",
    "org.mockito.Answers",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ThrowableTypeAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.mock.env.MockEnvironment"
   ]
  },
  "org.springframework.data.repository.support.MethodParameters$AnnotationNamingMethodParameter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.PreferredConstructor$Parameter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.ConverterBuilder$ReadingConverterAware": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslDefaultBinding": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.BooleanBuilder",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.SimpleExpression",
    "com.querydsl.core.types.dsl.CollectionPathBase",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.util.AnnotationDetectionMethodCallbackUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$MethodCallback",
    "org.springframework.util.ReflectionUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.convert.DefaultConverterBuilder$ConfigurableGenericConverter$Writing": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter"
   ]
  },
  "org.springframework.data.convert.MappingContextTypeInformationMapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2ObservableToPublisherConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.BackpressureStrategy",
    "io.reactivex.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.web.JsonProjectingMethodInterceptorFactory$InputMessageProjecting$ResolvableTypeRef": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ResolvableType"
   ],
   "com.jayway.jsonpath:json-path:jar:2.4.0:compile": [
    "com.jayway.jsonpath.TypeRef"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupportUnitTests$DummyRegistrar": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.DefaultResourceLoader"
   ]
  },
  "org.springframework.data.convert.CustomConversions$StoreConversions": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.core.GenericTypeResolver",
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.convert.converter.ConverterFactory",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyAccessorUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.support.DefaultConversionService"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.querydsl.QuerydslRepositoryInvokerAdapter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.Assert"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.convert.ClassGeneratingEntityInstantiatorUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldCallback",
    "org.springframework.util.ReflectionUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.AbstractLongAssert"
   ]
  },
  "org.springframework.data.config.ParsingUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.xml.ParserContext",
    "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean"
   ]
  },
  "org.springframework.data.repository.init.Jackson2RepositoryPopulatorFactoryBean": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ]
  },
  "org.springframework.data.mapping.model.DefaultSpELExpressionEvaluator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.ExpressionParser",
    "org.springframework.expression.Expression"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotatedElementUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired",
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.repository.query.QueryMethod": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.TraversalContext": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.init.RepositoriesPopulatedEvent": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEvent"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFragment$StructuralRepositoryFragment": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.spel.spi.FunctionUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils",
    "org.springframework.core.convert.TypeDescriptor"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.querydsl.QuerydslUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.StringUtils"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.PathType",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.Predicate"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.auditing.MappingAuditableBeanWrapperFactory$MappingAuditingMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.model.AnnotationBasedPersistentPropertyUnitTests$RevisedAnnnotationWithAliasFor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AliasFor"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$LocalDateTimeToInstantConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.annotation.Reference": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AliasFor"
   ]
  },
  "org.springframework.data.repository.query.QueryLookupStrategy$Key": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.mapping.callback.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.mapping.context.AbstractMappingContext$PersistentPropertyCreator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldCallback",
    "org.springframework.util.ReflectionUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.query.ReturnedType": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.config.XmlRepositoryConfigurationSource": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.env.Environment",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.xml.XmlReaderContext",
    "org.springframework.beans.factory.support.DefaultBeanNameGenerator",
    "org.springframework.beans.factory.support.BeanNameGenerator",
    "org.springframework.beans.factory.xml.ParserContext",
    "org.springframework.beans.factory.xml.XmlBeanDefinitionReader"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationBeanNameGenerator"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$StringToZoneIdConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindings$PathBinder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.web.SortArgumentResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "org.springframework.web.bind.support.WebDataBinderFactory",
    "org.springframework.web.method.support.ModelAndViewContainer",
    "org.springframework.web.context.request.NativeWebRequest"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull",
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull",
    "javax.annotation.Nullable"
   ]
  },
  "org.springframework.data.mapping.context.AbstractMappingContext$PersistentPropertyFilter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldFilter",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ],
   "org.codehaus.groovy:groovy-all:jar:2.4.4:test": [
    "groovy.lang.MetaClass"
   ]
  },
  "org.springframework.data.web.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.support.CrudRepositoryInvokerUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.support.GenericConversionService"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.support.DefaultFormattingConversionService"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.AdditionalAnswers",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ]
  },
  "org.springframework.data.web.HateoasPageableHandlerMethodArgumentResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.MultiValueMap",
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponentsBuilder",
    "org.springframework.web.util.UriComponents"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.TemplateVariable$VariableType",
    "org.springframework.hateoas.server.mvc.UriComponentsContributor",
    "org.springframework.hateoas.TemplateVariable",
    "org.springframework.hateoas.TemplateVariables"
   ]
  },
  "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.asm.Opcodes",
    "org.springframework.util.ClassUtils",
    "org.springframework.asm.Type",
    "org.springframework.asm.Label",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.asm.MethodVisitor",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.PersistentEntity": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyPath": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.support.QueryMethodParameterConversionException": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.core.convert.ConversionException",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.support.DomainClassConverter$ToEntityConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.converter.ConditionalGenericConverter",
    "org.springframework.util.StringUtils"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1CompletableToPublisherConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Completable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.config.TypeFilterParser": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.parsing.ReaderContext",
    "org.springframework.beans.factory.xml.XmlReaderContext",
    "org.springframework.beans.FatalBeanException"
   ]
  },
  "org.springframework.data.repository.support.PagingAndSortingRepositoryInvoker": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ]
  },
  "org.springframework.data.convert.DefaultConverterBuilder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.geo.Polygon": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.support.AnnotationAttribute": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.core.annotation.AnnotationUtils",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.query.ExtensionAwareQueryMethodEvaluationContextProvider": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.EvaluationContext",
    "org.springframework.expression.spel.support.StandardEvaluationContext"
   ]
  },
  "org.springframework.data.util.MethodInvocationRecorder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.util.TypeVariableTypeInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ObjectUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbacks": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactory"
   ]
  },
  "org.springframework.data.mapping.PropertyReferenceException": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.PropertyMatches"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$LocalTimeToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.DateTimeUtils",
    "org.threeten.bp.LocalTime",
    "org.threeten.bp.LocalDate",
    "org.threeten.bp.ZonedDateTime",
    "org.threeten.bp.LocalDateTime",
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.ClassGeneratingEntityInstantiator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.domain.PageRequest": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.config.ResourceReaderRepositoryPopulatorBeanDefinitionParserIntegrationTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ClassPathResource"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
    "org.springframework.beans.factory.support.DefaultListableBeanFactory"
   ],
   "org.springframework:spring-oxm:jar:5.2.0.RC2:compile": [
    "org.springframework.oxm.jaxb.Jaxb2Marshaller"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2SingleToMonoConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindingsUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.support.DefaultConversionService"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Predicate",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.StringPath"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToRxJava2CompletableConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Completable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.util.TypeDiscoverer$SyntheticParamterizedType": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.context.MappingContext": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.model.BasicPersistentEntity": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.CollectionUtils",
    "org.springframework.core.annotation.AnnotatedElementUtils",
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
    "org.springframework.lang.Nullable",
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.EvaluationContext"
   ]
  },
  "org.springframework.data.repository.query.SpelQueryContext$QuotationMap": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.geo.CustomMetric": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$DateTimeToStringConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanDefinitionParser": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.env.Environment",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.parsing.ReaderContext",
    "org.springframework.beans.factory.xml.XmlReaderContext",
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.xml.BeanDefinitionParser",
    "org.springframework.beans.factory.xml.ParserContext",
    "org.springframework.beans.factory.parsing.BeanComponentDefinition",
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionReaderUtils"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.RootBeanDefinition",
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.support.BeanDefinitionReaderUtils"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$DateToLocalTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.LocalTime",
    "org.threeten.bp.Instant",
    "org.threeten.bp.LocalDateTime",
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.util.ClassUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.util.ParameterTypes": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.util.TypeUtils",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$GuavaOptionalUnwrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.lang.Nullable"
   ],
   "com.google.guava:guava:jar:19.0:compile": [
    "com.google.common.base.Optional"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToMonoConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Maybe"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.domain.Chunk": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$InstantToLocalDateTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.TypeMapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.crossstore.ChangeSet": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ]
  },
  "org.springframework.data.convert.ClassGeneratingEntityInstantiator$EntityInstantiatorAdapter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.web.SortHandlerMethodArgumentResolverUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.context.request.NativeWebRequest",
    "org.springframework.web.context.request.ServletWebRequest"
   ],
   "javax.servlet:javax.servlet-api:jar:3.0.1:provided": [
    "javax.servlet.http.HttpServletRequest"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.mock.web.MockHttpServletRequest"
   ]
  },
  "org.springframework.data.repository.query.parser.PartTree": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactorySupportUnitTests$ObjectRepository": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.util.Lazy": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$DateToLocalDateTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.BytecodeUtil": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.asm.Opcodes",
    "org.springframework.asm.Type",
    "org.springframework.asm.MethodVisitor"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$FormatConverterFactory$StringToFormat": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ]
  },
  "org.springframework.data.repository.init.UnmarshallerRepositoryPopulatorFactoryBean": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-oxm:jar:5.2.0.RC2:compile": [
    "org.springframework.oxm.Unmarshaller"
   ]
  },
  "org.springframework.data.convert.DefaultTypeMapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.util.ParameterizedTypeInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.convert.SimpleTypeInformationMapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.repository.init.ResourceReader": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.io.Resource"
   ]
  },
  "org.springframework.data.repository.query.ParameterAccessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.config.TypeFilterParser$Type": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindings$AliasingPathBinder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path"
   ]
  },
  "org.springframework.data.util.MethodInvocationRecorder$RecordingMethodInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.CollectionFactory",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.core.ResolvableType"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$LocalDateTimeToJsr310LocalDateTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.DateTimeUtils",
    "org.threeten.bp.ZonedDateTime",
    "org.threeten.bp.LocalDateTime",
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.support.ConfigurableConversionService",
    "org.springframework.util.ClassUtils",
    "org.springframework.util.concurrent.ListenableFuture",
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.util.Assert"
   ],
   "com.google.guava:guava:jar:19.0:compile": [
    "com.google.common.base.Optional"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.CheckedFunction0",
    "io.vavr.control.Option",
    "io.vavr.control.Try",
    "io.vavr.collection.Seq"
   ],
   "org.scala-lang:scala-library:jar:2.11.7:compile": [
    "scala.Option"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToRxJava2ObservableConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.util.TypeInformation": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.web.PageableHandlerMethodArgumentResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Qualifier"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.support.WebDataBinderFactory",
    "org.springframework.web.method.support.ModelAndViewContainer",
    "org.springframework.web.context.request.NativeWebRequest"
   ]
  },
  "org.springframework.data.repository.support.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.util.VavrCollections$ToJavaConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.collection.Traversable",
    "io.vavr.collection.Set",
    "io.vavr.collection.Seq",
    "io.vavr.collection.Map"
   ]
  },
  "org.springframework.data.web.HateoasSortHandlerMethodArgumentResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.MultiValueMap",
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponentsBuilder",
    "org.springframework.web.util.UriComponents"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.TemplateVariable$VariableType",
    "org.springframework.hateoas.server.mvc.UriComponentsContributor",
    "org.springframework.hateoas.TemplateVariable",
    "org.springframework.hateoas.TemplateVariables"
   ]
  },
  "org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.support.GenericConversionService"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.support.DefaultFormattingConversionService"
   ]
  },
  "org.springframework.data.convert.ConverterBuilder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$LocalTimeToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.support.ConfigurableConversionService",
    "org.springframework.core.convert.support.GenericConversionService",
    "org.springframework.core.convert.support.DefaultConversionService"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.LocalDateTime"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractDateAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.OptionalAssert"
   ]
  },
  "org.springframework.data.transaction.MultiTransactionStatus": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.TransactionDefinition",
    "org.springframework.transaction.PlatformTransactionManager",
    "org.springframework.transaction.TransactionException",
    "org.springframework.transaction.TransactionStatus"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$JodaLocalDateTimeToInstant": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime",
    "org.joda.time.LocalDateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryBean": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.spi.PassivationCapable",
    "javax.enterprise.context.ApplicationScoped",
    "javax.enterprise.inject.spi.Bean",
    "javax.enterprise.inject.Stereotype",
    "javax.enterprise.inject.Alternative",
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.InjectionPoint",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.spi.PassivationCapable",
    "javax.enterprise.context.ApplicationScoped",
    "javax.enterprise.inject.spi.Bean",
    "javax.enterprise.inject.Stereotype",
    "javax.enterprise.inject.Alternative",
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.InjectionPoint",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.springframework.data.util.AnnotationDetectionFieldCallback": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.annotation.AnnotatedElementUtils",
    "org.springframework.util.ReflectionUtils$FieldCallback",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$DateToInstantConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.DateTimeUtils",
    "org.threeten.bp.Instant"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.BeanWrapper$KotlinCopyUtil": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable"
   ],
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.reflect.KParameter$Kind",
    "kotlin.reflect.KCallable",
    "kotlin.reflect.KParameter"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationExtension": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ResourceLoader"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.BeanDefinitionRegistry"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$StringToDurationConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.util.MethodInvocationRecorder$Recorded": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.support.SpringFactoriesLoader",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.AnnotationMetadata"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ImportSelector",
    "org.springframework.context.ResourceLoaderAware"
   ],
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.Link"
   ]
  },
  "org.springframework.data.util.ParameterTypes$ParentParameterTypes": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.TypeDescriptor"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.transaction.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.type.classreading.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi",
    "org.springframework.lang.NonNullFields"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$NullableWrapperToVavrOptionConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.control.Option"
   ]
  },
  "org.springframework.data.web.SortDefaultUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.method.support.HandlerMethodArgumentResolver"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$DateToLocalDateTimeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.LocalDateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1ObservableToPublisherConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$LocalDateTimeToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.DateTimeUtils",
    "org.threeten.bp.ZonedDateTime",
    "org.threeten.bp.LocalDateTime",
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationDelegate": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.support.SpringFactoriesLoader",
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.util.StopWatch",
    "org.springframework.core.env.Environment",
    "org.springframework.core.env.EnvironmentCapable",
    "org.springframework.core.env.StandardEnvironment",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.support.AutowireCandidateResolver",
    "org.springframework.beans.factory.parsing.BeanComponentDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.DefaultListableBeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.config.DefaultImplementationLookupConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.classreading.MetadataReader",
    "org.springframework.core.type.filter.AnnotationTypeFilter",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.BeanDefinition"
   ]
  },
  "org.springframework.data.domain.Sort": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.SpELExpressionParameterValueProvider": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.context.MappingContextEvent": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEvent"
   ]
  },
  "org.springframework.data.repository.query.parser.PartTree$OrPart": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscoverer$Discoverers$2": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.JvmClassMappingKt",
    "kotlin.reflect.KFunction"
   ],
   "org.jetbrains.kotlin:kotlin-reflect:jar:1.3.50:compile": [
    "kotlin.reflect.full.KClasses",
    "kotlin.reflect.jvm.ReflectJvmMapping"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscoverer$Discoverers$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.history.Revision": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslPredicateBuilderUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.LinkedMultiValueMap"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.support.DefaultFormattingConversionService"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.format.DateTimeFormat",
    "org.joda.time.format.DateTimeFormatter",
    "org.joda.time.DateTime"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.QueryResults",
    "com.querydsl.core.types.dsl.DateTimePath",
    "com.querydsl.core.types.Predicate",
    "com.querydsl.core.BooleanBuilder",
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.Constant",
    "com.querydsl.core.types.dsl.StringExpression",
    "com.querydsl.core.types.dsl.ListPath"
   ],
   "com.querydsl:querydsl-collections:jar:4.2.1:compile": [
    "com.querydsl.collections.CollQuery",
    "com.querydsl.collections.CollQueryFactory"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.mapping.MappingException": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.context.PersistentPropertyPathFactory$DefaultPersistentPropertyPaths": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.util.ClassUtils"
   ]
  },
  "org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupportUnitTests$DummyAuditingBeanDefinitionRegistrarSupport": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.AnnotationMetadata"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition"
   ]
  },
  "org.springframework.data.convert.Jsr310ConvertersUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.convert.support.GenericConversionService",
    "org.springframework.core.convert.ConversionService"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runners.Suite$SuiteClasses",
    "org.junit.runner.RunWith",
    "org.junit.runners.Suite"
   ]
  },
  "org.springframework.data.classloadersupport.HidingClassLoader": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.transaction.ChainedTransactionManager": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.TransactionDefinition",
    "org.springframework.transaction.CannotCreateTransactionException",
    "org.springframework.transaction.HeuristicCompletionException",
    "org.springframework.transaction.UnexpectedRollbackException",
    "org.springframework.transaction.PlatformTransactionManager",
    "org.springframework.transaction.TransactionException",
    "org.springframework.transaction.TransactionStatus"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$PeriodToStringConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.web.ProjectingJackson2HttpMessageConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.core.ResolvableType",
    "org.springframework.core.annotation.AnnotationUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactoryAware",
    "org.springframework.beans.BeansException",
    "org.springframework.beans.factory.BeanFactory",
    "org.springframework.beans.factory.BeanClassLoaderAware"
   ],
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.http.MediaType",
    "org.springframework.http.converter.HttpMessageNotReadableException",
    "org.springframework.http.HttpInputMessage",
    "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
   ],
   "com.jayway.jsonpath:json-path:jar:2.4.0:compile": [
    "com.jayway.jsonpath.spi.mapper.JacksonMappingProvider"
   ]
  },
  "org.springframework.data.repository.query.parser.AbstractQueryCreator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.config.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.support.ReflectionRepositoryInvoker": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.convert.ConversionException",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.MultiValueMap",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.repository.config.ResourceReaderRepositoryPopulatorBeanDefinitionParser": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.config.TypeFilterParserUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.io.ClassPathResource",
    "org.springframework.util.xml.DomUtils",
    "org.springframework.core.io.Resource",
    "org.springframework.core.type.filter.AssignableTypeFilter"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.parsing.ReaderContext"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.IterableAssert"
   ]
  },
  "org.springframework.data.util.nonnull.packagelevel.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.domain.TypedExampleMatcher": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.auditing.config.AuditingHandlerBeanDefinitionParser": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.xml.ParserContext",
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.target.LazyInitTargetSource",
    "org.springframework.aop.framework.ProxyFactoryBean"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.spel.ExtensionAwareEvaluationContextProvider$EvaluationContextExtensionAdapter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.projection.Accessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanUtils"
   ]
  },
  "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.config.CustomRepositoryImplementationDetector": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.classreading.MetadataReader",
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.core.env.Environment",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
   ]
  },
  "org.springframework.data.mapping.context.DefaultPersistentPropertyPath": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.callback.CapturingEntityCallback$SecondCallback": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.Ordered"
   ]
  },
  "org.springframework.data.repository.config.AnnotationRepositoryConfigurationSourceUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.core.env.Environment",
    "org.springframework.core.io.DefaultResourceLoader",
    "org.springframework.core.env.StandardEnvironment",
    "org.springframework.core.type.StandardAnnotationMetadata"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.AbstractListAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.domain.Sort$Order": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$DateToInstantConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.core.support.MethodInvocationValidator": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ParameterNameDiscoverer",
    "org.springframework.util.ClassUtils",
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
    "org.springframework.core.DefaultParameterNameDiscoverer",
    "org.springframework.lang.Nullable"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.EmptyResultDataAccessException"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanNameGeneratorUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.classreading.MetadataReader",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.core.type.classreading.SimpleMetadataReaderFactory"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationBeanNameGenerator",
    "org.springframework.context.annotation.ScannedGenericBeanDefinition"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.util.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.projection.ProjectingMethodInterceptor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.ClassUtils",
    "org.springframework.util.ObjectUtils",
    "org.springframework.core.CollectionFactory",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation",
    "org.aopalliance.intercept.MethodInterceptor"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.query.parser.PartTree$Predicate": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.init.ResourceReaderRepositoryInitializerUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.Resource"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEventPublisher",
    "org.springframework.context.ApplicationEvent"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.AdditionalAnswers",
    "org.mockito.Mockito"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.context.junit4.SpringJUnit4ClassRunner",
    "org.springframework.test.context.ContextConfiguration"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslPredicateBuilder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.MultiValueMap",
    "org.springframework.core.convert.Property",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.BooleanBuilder",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToRxJava2MaybeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Maybe"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.domain.ExampleMatcher$GenericPropertyMatcher": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.PersistenceExceptionTranslationRepositoryProxyPostProcessor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.support.PersistenceExceptionTranslationInterceptor"
   ]
  },
  "org.springframework.data.repository.config.RepositoryFragmentConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.AbstractBeanDefinition"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrappers": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.core.ReactiveTypeDescriptor",
    "org.springframework.util.Assert"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono",
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single",
    "rx.Completable",
    "rx.Observable"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Completable",
    "io.reactivex.Maybe",
    "io.reactivex.Single",
    "io.reactivex.Flowable",
    "io.reactivex.Observable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.type.classreading.DefaultMethodsMetadataReader$MethodsMetadataReadingVisitor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.MethodMetadata",
    "org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor",
    "org.springframework.core.type.classreading.MethodMetadataReadingVisitor",
    "org.springframework.asm.Opcodes",
    "org.springframework.lang.Nullable",
    "org.springframework.asm.MethodVisitor",
    "org.springframework.asm.Type",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiator$DefaultingKotlinConstructorResolver": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.DefaultConstructorMarker"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToPublisherConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Maybe"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.init.Jackson2ResourceReaderIntegrationTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ClassPathResource"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.core.support.DefaultRepositoryMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.PropertyUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.OptionalAssert"
   ]
  },
  "org.springframework.data.type.classreading.MethodsMetadataReader": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.classreading.MetadataReader"
   ]
  },
  "org.springframework.data.domain.ExampleMatcher": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$Jdk8OptionalUnwrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxbUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ClassPathResource",
    "org.springframework.core.io.Resource"
   ],
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.Marshaller",
    "javax.xml.bind.JAXBContext",
    "javax.xml.bind.Unmarshaller"
   ],
   "xmlunit:xmlunit:jar:1.6:test": [
    "org.custommonkey.xmlunit.Diff"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.convert.CustomConversionsUnitTests$StringToNumberConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ]
  },
  "org.springframework.data.convert.CustomConversions": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.core.convert.converter.ConverterRegistry",
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.convert.converter.ConverterFactory",
    "org.springframework.util.Assert"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.domain.jaxb.OrderAdapter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.adapters.XmlAdapter"
   ]
  },
  "org.springframework.data.util.Version": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert",
    "org.springframework.util.StringUtils"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbackDiscovererUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.ResolvableType"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationConfigApplicationContext"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.convert.ReflectionEntityInstantiatorUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldCallback",
    "org.springframework.util.ReflectionUtils"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.support.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationSourceSupport$SpringImplementationDetectionConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.classreading.MetadataReaderFactory"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.support.Repositories": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactoryUtils",
    "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
    "org.springframework.beans.factory.ListableBeanFactory",
    "org.springframework.beans.factory.config.BeanDefinition",
    "org.springframework.beans.factory.BeanFactory"
   ]
  },
  "org.springframework.data.repository.support.DomainClassConverterIntegrationTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.core.convert.support.DefaultConversionService"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.RootBeanDefinition",
    "org.springframework.beans.factory.support.DefaultListableBeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.support.GenericApplicationContext"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert"
   ]
  },
  "org.springframework.data.mapping.model.PersistentEntityParameterValueProvider": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.config.BeanComponentDefinitionBuilder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionReaderUtils",
    "org.springframework.beans.factory.xml.ParserContext",
    "org.springframework.beans.factory.parsing.BeanComponentDefinition"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultReactiveEntityCallbacks": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.core.ResolvableType",
    "org.springframework.util.ClassUtils",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactory"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ]
  },
  "org.springframework.data.convert.ThreeTenBackPortConverters$DateToLocalDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.LocalDate",
    "org.threeten.bp.Instant",
    "org.threeten.bp.LocalDateTime",
    "org.threeten.bp.ZoneId"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.BeanWrapper": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactorySupportUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.DefaultListableBeanFactory"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.EmptyResultDataAccessException",
    "org.springframework.transaction.interceptor.TransactionalProxy"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.invocation.InvocationOnMock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultEntityCallbacks": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.core.ResolvableType",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanFactory"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$ZoneIdToStringConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.mapping.model.PersistentEntityIsNewStrategy": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.lang.Nullable",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.context.AbstractMappingContext": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldFilter",
    "org.springframework.util.ReflectionUtils$FieldCallback",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanUtils",
    "org.springframework.beans.factory.InitializingBean",
    "org.springframework.beans.BeansException"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEventPublisher",
    "org.springframework.context.ApplicationContextAware",
    "org.springframework.context.ApplicationEventPublisherAware",
    "org.springframework.context.ApplicationContext"
   ]
  },
  "org.springframework.data.spel.spi.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToMonoConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.core.support.MethodLookups$RepositoryAwareMethodLookup": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter",
    "org.springframework.core.ResolvableType",
    "org.springframework.core.GenericTypeResolver",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherToRxJava1ObservableConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter",
    "org.springframework.core.ReactiveAdapter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxb$PageDto": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.RepresentationModel"
   ],
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.XmlAccessorType",
    "javax.xml.bind.annotation.XmlAnyElement",
    "javax.xml.bind.annotation.XmlElementWrapper",
    "javax.xml.bind.annotation.XmlRootElement",
    "javax.xml.bind.annotation.XmlAccessType"
   ]
  },
  "org.springframework.data.repository.query.parser.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.query.ReturnedType$ReturnedClass": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ClassUtils",
    "org.springframework.util.Assert"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.projection.SpelAwareProxyProjectionFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$MethodCallback",
    "org.springframework.lang.Nullable",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value",
    "org.springframework.beans.factory.BeanFactoryAware",
    "org.springframework.beans.BeansException",
    "org.springframework.beans.factory.BeanFactory"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.spel.standard.SpelExpressionParser"
   ]
  },
  "org.springframework.data.domain.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.domain.SliceImpl": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.config.TypeFilterParser$FilterType$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.filter.AnnotationTypeFilter"
   ]
  },
  "org.springframework.data.config.TypeFilterParser$FilterType$2": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.filter.AssignableTypeFilter"
   ]
  },
  "org.springframework.data.config.TypeFilterParser$FilterType$3": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.filter.AspectJTypeFilter"
   ]
  },
  "org.springframework.data.config.TypeFilterParser$FilterType$4": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter",
    "org.springframework.core.type.filter.RegexPatternTypeFilter"
   ]
  },
  "org.springframework.data.config.TypeFilterParser$FilterType$5": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.filter.TypeFilter"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanUtils"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$AbstractWrapperTypeConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.Assert"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.querydsl.QuerydslRepositoryInvokerAdapterUnitTests": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.MultiValueMap"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Predicate"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1SingleToObservableConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single",
    "rx.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.util.ReflectionUtils$KotlinReflectionUtils": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.JvmClassMappingKt",
    "kotlin.reflect.KClass",
    "kotlin.reflect.KProperty",
    "kotlin.reflect.KFunction",
    "kotlin.reflect.KCallable",
    "kotlin.reflect.KMutableProperty",
    "kotlin.reflect.KType",
    "kotlin.reflect.KMutableProperty$Setter",
    "kotlin.reflect.KParameter",
    "kotlin.reflect.KProperty$Getter"
   ],
   "org.jetbrains.kotlin:kotlin-reflect:jar:1.3.50:compile": [
    "kotlin.reflect.jvm.ReflectJvmMapping"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbackDiscoverer$CallbackCacheKey": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ObjectUtils",
    "org.springframework.util.comparator.Comparators",
    "org.springframework.lang.Nullable",
    "org.springframework.core.ResolvableType",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.mapping.callback.CapturingEntityCallback": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.CollectionUtils",
    "org.springframework.lang.Nullable"
   ]
  },
  "org.springframework.data.mapping.model.SpelExpressionParameterProviderUnitTests$1": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$IterableToStreamableConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.converter.ConditionalGenericConverter",
    "org.springframework.lang.NonNull",
    "org.springframework.core.convert.support.DefaultConversionService"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.projection.ProxyProjectionFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.util.ClassUtils",
    "org.springframework.core.convert.support.DefaultConversionService",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.BeanClassLoaderAware"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.springframework.aop.framework.ProxyFactory"
   ]
  },
  "org.springframework.data.auditing.config.AnnotationAuditingConfiguration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.type.AnnotationMetadata",
    "org.springframework.core.annotation.AnnotationAttributes",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2ObservableToMonoConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.BackpressureStrategy",
    "io.reactivex.Observable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.history.AnnotationRevisionMetadata": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ReflectionUtils$FieldCallback",
    "org.springframework.util.ReflectionUtils",
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.repository.config.NamedQueriesBeanDefinitionBuilder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable",
    "org.springframework.util.StringUtils",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder",
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.config.PropertiesFactoryBean",
    "org.springframework.beans.factory.config.BeanDefinition"
   ]
  },
  "org.springframework.data.domain.jaxb.PageableAdapter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ],
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.adapters.XmlAdapter"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindingsFactory": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.ConcurrentReferenceHashMap",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.AutowireCapableBeanFactory",
    "org.springframework.beans.BeansException",
    "org.springframework.beans.factory.NoSuchBeanDefinitionException",
    "org.springframework.beans.BeanUtils"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationContext",
    "org.springframework.context.ApplicationContextAware"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.EntityPath"
   ]
  },
  "org.springframework.data.crossstore.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.convert.JodaTimeConverters$LocalDateTimeToJodaLocalDateTime": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.LocalDateTime"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$NullableWrapperToScalaOptionConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.ConversionService"
   ],
   "org.scala-lang:scala-library:jar:2.11.7:compile": [
    "scala.Option"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.io.ResourceLoader",
    "org.springframework.core.type.classreading.CachingMetadataReaderFactory",
    "org.springframework.core.env.Environment",
    "org.springframework.core.type.classreading.MetadataReaderFactory",
    "org.springframework.util.Assert"
   ],
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.AbstractBeanDefinition",
    "org.springframework.beans.factory.support.BeanDefinitionRegistry",
    "org.springframework.beans.factory.support.BeanDefinitionBuilder"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.LoggerFactory",
    "org.slf4j.Logger"
   ]
  },
  "org.springframework.data.convert.Jsr310Converters$InstantToDateConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.geo.format.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.query.parser.Part": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.MethodLookups$ReactiveTypeInteropMethodLookup$ParameterOverrideCriteria": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.MethodParameter"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.support.DomainClassConverter$ToIdConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.TypeDescriptor",
    "org.springframework.lang.Nullable",
    "org.springframework.core.convert.converter.GenericConverter",
    "org.springframework.core.convert.ConversionService",
    "org.springframework.core.convert.converter.ConditionalGenericConverter",
    "org.springframework.util.StringUtils"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.annotation.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2ObservableToSingleConverter": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.Converter"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Observable",
    "io.reactivex.Single"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.CustomConversions$ConverterRegistration": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
    "org.springframework.core.convert.converter.GenericConverter"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.query.package-info": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.NonNullApi"
   ]
  },
  "org.springframework.data.repository.query.SpelQueryContext$SpelExtractor": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.util.Assert"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxb$OrderDto": {
   "org.springframework:spring-core:jar:5.2.0.RC2:compile": [
    "org.springframework.lang.Nullable"
   ],
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.XmlAttribute",
    "javax.xml.bind.annotation.XmlAccessorType",
    "javax.xml.bind.annotation.XmlRootElement",
    "javax.xml.bind.annotation.XmlAccessType"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultEntityCallbacks$SimpleEntityCallbackInvoker": {
   "org.springframework:spring-jcl:jar:5.2.0.RC2:compile": [
    "org.apache.commons.logging.Log",
    "org.apache.commons.logging.LogFactory"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultReactiveEntityCallbacks$DefaultReactiveEntityCallbackInvoker": {
   "org.springframework:spring-jcl:jar:5.2.0.RC2:compile": [
    "org.apache.commons.logging.Log",
    "org.apache.commons.logging.LogFactory"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ]
  },
  "org.springframework.data.projection.SpelEvaluatingMethodInterceptorUnitTests$Projection": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.util.ReflectionUtilsUnitTests$Sample": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ]
  },
  "org.springframework.data.projection.SpelAwareProxyProjectionFactoryUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.NotWritablePropertyException"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.AbstractListAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert"
   ]
  },
  "org.springframework.data.repository.support.MethodParametersUnitTests$Sample": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Qualifier"
   ]
  },
  "org.springframework.data.repository.query.ResultProcessorUnitTests$OpenProjection": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.repository.config.SpringDataAnnotationBeanNameGenerator": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanNameGenerator",
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.projection.SpelEvaluatingMethodInterceptorUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.DefaultListableBeanFactory"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation",
    "org.aopalliance.intercept.MethodInterceptor"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.spel.standard.SpelExpressionParser"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindingsFactoryUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Predicate",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.StringPath"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.ModelAndView"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ThrowableTypeAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.util.AnnotationDetectionMethodCallbackUnitTests$Multiple": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.repository.support.DefaultRepositoryInvokerFactoryIntegrationTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.context.junit4.SpringJUnit4ClassRunner",
    "org.springframework.test.context.ContextConfiguration"
   ]
  },
  "org.springframework.data.repository.support.DomainClassConverterIntegrationTests$PredictingProcessor": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter"
   ]
  },
  "org.springframework.data.history.AnnotationRevisionMetadataUnitTests$SampleWithInstant": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionRepositoryProxyPostProcessorUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.aop.Advice",
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.interceptor.TransactionAttribute",
    "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "org.springframework.transaction.interceptor.TransactionInterceptor"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.util.DirectFieldAccessFallbackBeanWrapperUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanWrapper",
    "org.springframework.beans.NotWritablePropertyException",
    "org.springframework.beans.NotReadablePropertyException"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.repository.core.support.PersistenceExceptionTranslationRepositoryProxyPostProcessorUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory",
    "org.aopalliance.aop.Advice"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.support.PersistenceExceptionTranslationInterceptor"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.projection.PropertyAccessingMethodInterceptorUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.NotWritablePropertyException",
    "org.springframework.beans.NotReadablePropertyException"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation",
    "org.aopalliance.intercept.MethodInterceptor"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.support.DomainClassConverterIntegrationTests$1": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.RootBeanDefinition",
    "org.springframework.beans.BeanWrapper",
    "org.springframework.beans.factory.support.DefaultListableBeanFactory",
    "org.springframework.beans.BeanWrapperImpl"
   ]
  },
  "org.springframework.data.projection.SpelAwareProxyProjectionFactoryUnitTests$CustomerExcerpt": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.repository.sample.SampleConfiguration": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationContext",
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.springframework.data.repository.config.DefaultRepositoryConfigurationUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.RootBeanDefinition",
    "org.springframework.beans.factory.config.ConstructorArgumentValues"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.web.SortHandlerMethodArgumentResolverUnitTests$Controller": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Qualifier"
   ]
  },
  "org.springframework.data.history.AnnotationRevisionMetadataUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.SoftAssertions",
    "org.assertj.core.api.AbstractInstantAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.LongAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.InstantAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.web.MapDataBinderUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.NotWritablePropertyException",
    "org.springframework.beans.PropertyValues",
    "org.springframework.beans.MutablePropertyValues",
    "org.springframework.beans.ConfigurablePropertyAccessor"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.support.DefaultFormattingConversionService"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.spel.SpelEvaluationException"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.MapAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.repository.config.ImplementationLookupConfiguration": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.BeanDefinition"
   ]
  },
  "org.springframework.data.util.BeanLookupUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.NoUniqueBeanDefinitionException",
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.history.AnnotationRevisionMetadataUnitTests$Sample": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ]
  },
  "org.springframework.data.projection.SpelEvaluatingMethodInterceptorUnitTests$InvalidProjection": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.repository.config.RepositoryNameSpaceHandler": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.xml.BeanDefinitionParser",
    "org.springframework.beans.factory.xml.NamespaceHandlerSupport"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionRepositoryFactoryBeanSupportUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.DefaultListableBeanFactory"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.Advised",
    "org.springframework.aop.Advisor"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.interceptor.TransactionInterceptor"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.repository.query.ExtensionAwareEvaluationContextProviderUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.ListableBeanFactory"
   ],
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.Expression",
    "org.springframework.expression.spel.standard.SpelExpressionParser",
    "org.springframework.expression.EvaluationContext"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.ArgumentMatchers",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupportIntegrationTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.BeanDefinition"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationConfigApplicationContext"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test",
    "org.junit.After",
    "org.junit.Before"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.web.PageableHandlerMethodArgumentResolverUnitTests$Sample": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Qualifier"
   ]
  },
  "org.springframework.data.projection.DefaultProjectionInformationUnitTests$ProjectionAcceptingArguments": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.util.AnnotationDetectionFieldCallbackUnitTests$Sample": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.support.RepositoriesIntegrationTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.Assertions"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.context.junit4.SpringJUnit4ClassRunner",
    "org.springframework.test.context.ContextConfiguration"
   ]
  },
  "org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests$SampleController": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.stereotype.Controller"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.annotation.RequestMapping"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.EntityModel",
    "org.springframework.hateoas.PagedModel"
   ]
  },
  "org.springframework.data.util.AnnotationDetectionMethodCallbackUnitTests$Sample": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.repository.config.ImplementationDetectionConfigurationUnitTests": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.support.BeanDefinitionBuilder"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerArgumentResolverUnitTests$Controller": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Qualifier"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.annotation.RequestMapping"
   ]
  },
  "org.springframework.data.repository.query.ReturnedTypeUnitTests$OpenProjection": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Value"
   ]
  },
  "org.springframework.data.convert.ReflectionEntityInstantiator": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.BeanInstantiationException",
    "org.springframework.beans.BeanUtils"
   ]
  },
  "org.springframework.data.history.AnnotationRevisionMetadataUnitTests$SampleWithLong": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.annotation.Autowired"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver": {
   "org.springframework:spring-beans:jar:5.2.0.RC2:compile": [
    "org.springframework.beans.factory.config.DependencyDescriptor"
   ],
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.support.CrudRepositoryInvokerUnitTests$PersonRepository": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.annotation.DateTimeFormat$ISO",
    "org.springframework.format.annotation.DateTimeFormat"
   ]
  },
  "org.springframework.data.web.config.EnableSpringDataWebSupportIntegrationTests$SampleConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.config.annotation.EnableWebMvc"
   ]
  },
  "org.springframework.data.repository.config.AnnotationRepositoryConfigurationSourceUnitTests$SampleAnnotation": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.ComponentScan$Filter",
    "org.springframework.context.annotation.ComponentScan"
   ]
  },
  "org.springframework.data.repository.config.SampleConfiguration": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.FilterType",
    "org.springframework.context.annotation.ComponentScan$Filter",
    "org.springframework.context.annotation.ComponentScan"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupportUnitTests$SampleRepositoryConfigurationExtension": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Primary"
   ]
  },
  "org.springframework.data.repository.config.ProfileRepository": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Profile"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultEntityCallbacksUnitTests$MyConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Lazy",
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.web.config.EnableSpringDataWebSupportIntegrationTests$SortResolverCustomizerConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.config.annotation.EnableWebMvc"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultReactiveEntityCallbacksUnitTests$MyConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.annotation.Persistent": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.stereotype.Indexed"
   ]
  },
  "org.springframework.data.repository.sample.AddressRepositoryClient": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.stereotype.Component"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbackDiscovererUnitTests$OrderedConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupportIntegrationTests$TestConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration"
   ]
  },
  "org.springframework.data.mapping.callback.EntityCallbackDiscovererUnitTests$MyConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Lazy",
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource$1": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.FilterType"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupportUnitTests$FragmentExclusionConfiguration": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.FilterType",
    "org.springframework.context.annotation.ComponentScan$Filter",
    "org.springframework.context.annotation.ComponentScan"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupportUnitTests$ReactiveConfiguration": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.FilterType",
    "org.springframework.context.annotation.ComponentScan$Filter",
    "org.springframework.context.annotation.ComponentScan"
   ]
  },
  "org.springframework.data.repository.support.AnnotationAttributeUnitTests$Sample": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.stereotype.Component"
   ]
  },
  "org.springframework.data.web.config.EnableSpringDataWebSupport": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Import"
   ]
  },
  "org.springframework.data.web.config.SampleController$SampleDto": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.annotation.DateTimeFormat$ISO",
    "org.springframework.format.annotation.DateTimeFormat"
   ]
  },
  "org.springframework.data.web.config.EnableSpringDataWebSupportIntegrationTests$CustomEntityPathResolver": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessor": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEventPublisher"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationDelegateUnitTests$DeferredConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.FilterType",
    "org.springframework.context.annotation.ComponentScan$Filter",
    "org.springframework.context.annotation.ComponentScan"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultEntityCallbacksUnitTests": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationConfigApplicationContext"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupportUnitTests$AnnotatedType": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Primary"
   ]
  },
  "org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests$Config": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessorUnitTests": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEventPublisher",
    "org.springframework.context.ApplicationEvent"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation",
    "org.aopalliance.aop.Advice",
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.junit.MockitoJUnitRunner$Silent",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultEntityCallbacksUnitTests$MultipleCallbacksInOneClassConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessor$EventPublishingMethodInterceptor": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationEventPublisher"
   ],
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.web.config.SpringDataWebConfigurationIntegrationTests$SomeConfiguration": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ],
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultReactiveEntityCallbacksUnitTests": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.AnnotationConfigApplicationContext"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "io.projectreactor:reactor-test:jar:3.3.0.RC1:test": [
    "reactor.test.StepVerifier",
    "reactor.test.StepVerifier$FirstStep",
    "reactor.test.StepVerifier$Step"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert"
   ]
  },
  "org.springframework.data.repository.config.AnnotationRepositoryConfigurationSourceUnitTests$ConfigurationWithExplicitFilter": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Primary",
    "org.springframework.context.annotation.ComponentScan$Filter",
    "org.springframework.context.annotation.ComponentScan"
   ]
  },
  "org.springframework.data.web.config.SpringDataJacksonConfiguration": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.repository.RepositoryDefinition": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.stereotype.Indexed"
   ]
  },
  "org.springframework.data.mapping.context.AbstractMappingContextUnitTests": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.ApplicationContext",
    "org.springframework.context.ApplicationEvent"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.repository.util.ClassUtilsUnitTests$UserRepository": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.scheduling.annotation.Async"
   ]
  },
  "org.springframework.data.repository.Repository": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.stereotype.Indexed"
   ]
  },
  "org.springframework.data.web.config.EnableSpringDataWebSupportIntegrationTests$PageableResolverCustomizerConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.config.annotation.EnableWebMvc"
   ]
  },
  "org.springframework.data.repository.config.EnableRepositories": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Import",
    "org.springframework.context.annotation.ComponentScan$Filter",
    "org.springframework.context.annotation.ComponentScan"
   ]
  },
  "org.springframework.data.web.config.SampleController": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.stereotype.Controller"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.annotation.RequestMapping"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractDateAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.repository.support.AnnotationAttributeUnitTests": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.stereotype.Component"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultEntityCallbacksUnitTests$LambdaConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.querydsl.User": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.annotation.DateTimeFormat$ISO",
    "org.springframework.format.annotation.DateTimeFormat"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.annotations.QueryEntity"
   ]
  },
  "org.springframework.data.web.config.PageableResourcesAssemblerIntegrationTests": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.support.ClassPathXmlApplicationContext"
   ],
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.context.WebApplicationContext"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.EntityModel",
    "org.springframework.hateoas.PagedModel",
    "org.springframework.hateoas.IanaLinkRelations"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.support.RepositoriesUnitTests$PrimaryRepository": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Primary"
   ]
  },
  "org.springframework.data.web.MapDataBinderUnitTests$Foo": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.format.annotation.DateTimeFormat$ISO",
    "org.springframework.format.annotation.DateTimeFormat"
   ]
  },
  "org.springframework.data.repository.config.RepositoryConfigurationDelegateUnitTests$LazyConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.FilterType",
    "org.springframework.context.annotation.ComponentScan$Filter",
    "org.springframework.context.annotation.ComponentScan"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupportIntegrationTests$SampleConfig": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Configuration",
    "org.springframework.context.annotation.FilterType",
    "org.springframework.context.annotation.ComponentScan$Filter",
    "org.springframework.context.annotation.ComponentScan"
   ]
  },
  "org.springframework.data.web.config.SampleMixin": {
   "org.springframework:spring-context:jar:5.2.0.RC2:compile": [
    "org.springframework.context.annotation.Bean"
   ]
  },
  "org.springframework.data.repository.support.RepositoryInvocationTestUtils": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryProxyPostProcessor": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ]
  },
  "org.springframework.data.projection.ProxyProjectionFactory$PropertyAccessingMethodInvokerFactory": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor"
   ]
  },
  "org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation"
   ],
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.support.TransactionSynchronizationManager"
   ],
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ]
  },
  "org.springframework.data.projection.MapAccessingMethodInterceptorUnitTests": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInvocation"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.projection.MethodInterceptorFactory": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor"
   ]
  },
  "org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptorUnitTests$StubMethodInvocation": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ReflectiveMethodInvocation"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.projection.ProxyProjectionFactoryUnitTests": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.Advised",
    "org.springframework.aop.TargetClassAware",
    "org.springframework.aop.Advisor"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ObjectArrayAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.MapAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractByteArrayAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.util.ProxyUtilsUnitTests": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryBeanUnitTests$DummyRepositoryProxyPostProcessor": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.springframework.aop.framework.ProxyFactory"
   ]
  },
  "org.springframework.data.projection.ProxyProjectionFactory$MapAccessingMethodInterceptorFactory": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor"
   ]
  },
  "org.springframework.data.repository.support.RepositoryInvocationTestUtils$VerifyingMethodInterceptor": {
   "org.springframework:spring-aop:jar:5.2.0.RC2:compile": [
    "org.aopalliance.intercept.MethodInterceptor",
    "org.aopalliance.intercept.MethodInvocation"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.spel.ExtensionAwareEvaluationContextProvider$FunctionMethodExecutor": {
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.spel.SpelEvaluationException",
    "org.springframework.expression.spel.SpelMessage",
    "org.springframework.expression.MethodExecutor",
    "org.springframework.expression.AccessException",
    "org.springframework.expression.EvaluationContext",
    "org.springframework.expression.TypedValue"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.spel.EvaluationContextProvider": {
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.spel.support.StandardEvaluationContext",
    "org.springframework.expression.EvaluationContext"
   ]
  },
  "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider": {
   "org.springframework:spring-expression:jar:5.2.0.RC2:compile": [
    "org.springframework.expression.EvaluationContext"
   ]
  },
  "org.springframework.data.repository.core.support.CustomAnnotationTransactionAttributeSourceUnitTests": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.interceptor.TransactionAttribute"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.transaction.SpringTransactionSynchronizationManager": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.support.TransactionSynchronizationManager"
   ]
  },
  "org.springframework.data.transaction.ChainedTransactionManagerTests$TestPlatformTransactionManager": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.TransactionDefinition",
    "org.springframework.transaction.PlatformTransactionManager",
    "org.springframework.transaction.TransactionException",
    "org.springframework.transaction.TransactionStatus"
   ]
  },
  "org.springframework.data.crossstore.ChangeSetBackedTransactionSynchronization": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.support.TransactionSynchronization"
   ],
   "org.slf4j:slf4j-api:jar:1.7.26:compile": [
    "org.slf4j.Logger",
    "org.slf4j.LoggerFactory"
   ]
  },
  "org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.InvalidDataAccessApiUsageException"
   ]
  },
  "org.springframework.data.transaction.ChainedTransactionManagerTests$TestTransactionStatus": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.support.AbstractTransactionStatus",
    "org.springframework.transaction.TransactionDefinition"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionRepositoryProxyPostProcessorUnitTests$SampleImplementation": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.annotation.Transactional"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionRepositoryProxyPostProcessorUnitTests$SampleImplementationWithClassAnnotation": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.annotation.Transactional"
   ]
  },
  "org.springframework.data.transaction.ChainedTransactionManagerTests": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.support.DefaultTransactionDefinition",
    "org.springframework.transaction.HeuristicCompletionException",
    "org.springframework.transaction.UnexpectedRollbackException",
    "org.springframework.transaction.PlatformTransactionManager"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.transaction.ChainedTransactionManagerTests$TestPlatformTransactionManager$1": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.TransactionException",
    "org.springframework.transaction.TransactionStatus"
   ]
  },
  "org.springframework.data.crossstore.ChangeSetPersister": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.DataAccessException"
   ]
  },
  "org.springframework.data.repository.core.support.QueryExecutionResultHandlerUnitTests": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.dao.InvalidDataAccessApiUsageException"
   ],
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono",
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.singles.BlockingSingle",
    "rx.Single",
    "rx.Completable",
    "rx.Observable",
    "rx.observables.BlockingObservable"
   ],
   "com.google.guava:guava:jar:19.0:compile": [
    "com.google.common.base.Optional"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.control.Option"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ProxyableListAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.SoftAssertions",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.repository.core.support.CustomAnnotationTransactionAttributeSourceUnitTests$Bar": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.annotation.Transactional"
   ]
  },
  "org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptorUnitTests": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.support.TransactionSynchronizationManager"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ]
  },
  "org.springframework.data.repository.core.support.CustomAnnotationTransactionAttributeSourceUnitTests$FooImpl": {
   "org.springframework:spring-tx:jar:5.2.0.RC2:compile": [
    "org.springframework.transaction.annotation.Transactional"
   ]
  },
  "org.springframework.data.web.JsonProjectingMethodInterceptorFactoryUnitTests": {
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ],
   "com.jayway.jsonpath:json-path:jar:2.4.0:compile": [
    "com.jayway.jsonpath.spi.mapper.JacksonMappingProvider",
    "com.jayway.jsonpath.spi.mapper.MappingProvider"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert"
   ]
  },
  "org.springframework.data.geo.GeoModuleIntegrationTests": {
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.geo.GeoModule$DistanceMixin": {
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.annotation.JsonDeserialize"
   ],
   "com.fasterxml.jackson.core:jackson-annotations:jar:2.9.0:compile": [
    "com.fasterxml.jackson.annotation.JsonProperty",
    "com.fasterxml.jackson.annotation.JsonIgnore",
    "com.fasterxml.jackson.annotation.JsonIgnoreProperties"
   ]
  },
  "org.springframework.data.geo.GeoModule": {
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.module.SimpleModule"
   ],
   "com.fasterxml.jackson.core:jackson-core:jar:2.9.9:compile": [
    "com.fasterxml.jackson.core.Version"
   ]
  },
  "org.springframework.data.projection.ProjectionIntegrationTests": {
   "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile": [
    "com.fasterxml.jackson.databind.ObjectMapper"
   ],
   "com.jayway.jsonpath:json-path:jar:2.4.0:compile": [
    "com.jayway.jsonpath.Option",
    "com.jayway.jsonpath.JsonPath",
    "com.jayway.jsonpath.Predicate",
    "com.jayway.jsonpath.Configuration$ConfigurationBuilder",
    "com.jayway.jsonpath.DocumentContext",
    "com.jayway.jsonpath.ParseContext",
    "com.jayway.jsonpath.Configuration"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.geo.GeoModule$PolygonMixin": {
   "com.fasterxml.jackson.core:jackson-annotations:jar:2.9.0:compile": [
    "com.fasterxml.jackson.annotation.JsonProperty"
   ]
  },
  "org.springframework.data.geo.GeoModule$CircleMixin": {
   "com.fasterxml.jackson.core:jackson-annotations:jar:2.9.0:compile": [
    "com.fasterxml.jackson.annotation.JsonProperty"
   ]
  },
  "org.springframework.data.geo.GeoModule$PointMixin": {
   "com.fasterxml.jackson.core:jackson-annotations:jar:2.9.0:compile": [
    "com.fasterxml.jackson.annotation.JsonProperty"
   ]
  },
  "org.springframework.data.geo.GeoModule$BoxMixin": {
   "com.fasterxml.jackson.core:jackson-annotations:jar:2.9.0:compile": [
    "com.fasterxml.jackson.annotation.JsonProperty"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerArgumentResolverUnitTests$SubController": {
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.annotation.RequestMapping"
   ]
  },
  "org.springframework.data.repository.support.DomainClassConverterUnitTests$Wrapper": {
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.bind.annotation.ModelAttribute"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerUnitTests$CustomPagedResourcesAssembler": {
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.util.UriComponents"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.PagedModel$PageMetadata",
    "org.springframework.hateoas.RepresentationModel",
    "org.springframework.hateoas.PagedModel"
   ]
  },
  "org.springframework.data.web.querydsl.QuerydslPredicateArgumentResolverUnitTests$Sample": {
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.http.HttpEntity",
    "org.springframework.http.ResponseEntity"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Predicate"
   ],
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.EntityModel"
   ],
   "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile": [
    "org.springframework.web.servlet.ModelAndView"
   ]
  },
  "org.springframework.data.web.WebTestUtils": {
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.web.context.request.RequestContextHolder",
    "org.springframework.web.context.WebApplicationContext",
    "org.springframework.web.context.request.ServletRequestAttributes",
    "org.springframework.web.context.support.AnnotationConfigWebApplicationContext"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.mock.web.MockHttpServletRequest",
    "org.springframework.mock.web.MockServletContext"
   ]
  },
  "org.springframework.data.web.ProjectingJackson2HttpMessageConverterUnitTests": {
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.http.MediaType"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.web.XmlBeamHttpMessageConverterUnitTests": {
   "org.springframework:spring-web:jar:5.2.0.RC2:compile": [
    "org.springframework.http.MediaType",
    "org.springframework.http.converter.HttpMessageNotReadableException",
    "org.springframework.http.HttpInputMessage"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.auditing.ReflectionAuditingBeanWrapperUnitTests": {
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractDateAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.auditing.MappingAuditableBeanWrapperFactoryUnitTests": {
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.LocalDateTime"
   ],
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.LocalDateTime"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractInstantAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractLongAssert"
   ]
  },
  "org.springframework.data.auditing.AnnotatedUser": {
   "joda-time:joda-time:jar:2.10.3:compile": [
    "org.joda.time.DateTime"
   ]
  },
  "org.springframework.data.auditing.Jsr310ThreeTenBpAuditedUser": {
   "org.threeten:threetenbp:jar:1.4.0:compile": [
    "org.threeten.bp.LocalDateTime"
   ]
  },
  "org.springframework.data.repository.query.ResultProcessorUnitTests$SampleRepository": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono",
    "reactor.core.publisher.Flux"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Observable",
    "rx.Single"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Flowable"
   ]
  },
  "org.springframework.data.repository.core.support.ReactiveRepositoryInformationUnitTests$DummyRepository": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ]
  },
  "org.springframework.data.repository.reactive.ReactiveCrudRepository": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux",
    "reactor.core.publisher.Mono"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$MonoWrapper": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$FluxWrapper": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ]
  },
  "org.springframework.data.repository.query.ResultProcessorUnitTests": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono",
    "reactor.core.publisher.Flux"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.singles.BlockingSingle",
    "rx.Single",
    "rx.Observable",
    "rx.observables.BlockingObservable"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Single",
    "io.reactivex.Flowable"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.stubbing.Stubber",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.AbstractListAssert"
   ]
  },
  "org.springframework.data.repository.core.support.QueryExecutionResultHandlerUnitTests$Sample": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono",
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Completable",
    "rx.Observable",
    "rx.Single"
   ],
   "com.google.guava:guava:jar:19.0:compile": [
    "com.google.common.base.Optional"
   ],
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.control.Try",
    "io.vavr.control.Option"
   ]
  },
  "org.springframework.data.repository.reactive.ReactiveSortingRepository": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux"
   ]
  },
  "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux",
    "reactor.core.publisher.Mono"
   ],
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Predicate",
    "com.querydsl.core.types.OrderSpecifier"
   ]
  },
  "org.springframework.data.repository.core.support.ReactiveWrapperRepositoryFactorySupportUnitTests": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner$Silent",
    "org.mockito.junit.MockitoJUnitRunner"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherWrapper": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono",
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrappersUnitTests": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono",
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Observable",
    "rx.Single"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Completable",
    "io.reactivex.Maybe",
    "io.reactivex.Single",
    "io.reactivex.Flowable",
    "io.reactivex.Observable"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultReactiveEntityCallbacksUnitTests$MyReactiveBeforeSaveCallback": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConvertersUnitTests": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono",
    "reactor.core.publisher.Flux"
   ],
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Completable",
    "rx.singles.BlockingSingle",
    "rx.Observable",
    "rx.Single",
    "rx.observables.BlockingObservable"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Completable",
    "io.reactivex.Maybe",
    "io.reactivex.Single",
    "io.reactivex.Flowable",
    "io.reactivex.Observable"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AssertionsForClassTypes",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Flux",
    "reactor.core.publisher.Mono"
   ]
  },
  "org.springframework.data.mapping.callback.DefaultReactiveEntityCallbacksUnitTests$ReactiveBeforeSaveCallback": {
   "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile": [
    "reactor.core.publisher.Mono"
   ]
  },
  "org.springframework.data.repository.core.support.ReactiveRepositoryInformationUnitTests": {
   "org.reactivestreams:reactive-streams:jar:1.0.3:compile": [
    "org.reactivestreams.Publisher"
   ],
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Observable"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Flowable"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.repository.core.support.ReactiveWrapperRepositoryFactorySupportUnitTests$RxJava1ConvertingRepository": {
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ]
  },
  "org.springframework.data.repository.core.support.ReactiveWrapperRepositoryFactorySupportUnitTests$RxJava2ConvertingRepository": {
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Completable",
    "io.reactivex.Maybe"
   ]
  },
  "org.springframework.data.repository.core.support.ReactiveRepositoryInformationUnitTests$RxJava1InterfaceWithGenerics": {
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Observable"
   ],
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Completable"
   ]
  },
  "org.springframework.data.repository.query.ParametersUnitTests": {
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ],
   "org.scala-lang:scala-library:jar:2.11.7:compile": [
    "scala.collection.mutable.Publisher"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.repository.query.ParametersUnitTests$SampleDao": {
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ],
   "org.scala-lang:scala-library:jar:2.11.7:compile": [
    "scala.collection.mutable.Publisher"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1SingleWrapper": {
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Single"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava1ObservableWrapper": {
   "io.reactivex:rxjava:jar:1.3.8:compile": [
    "rx.Observable"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeWrapper": {
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Maybe"
   ]
  },
  "org.springframework.data.repository.reactive.RxJava2SortingRepository": {
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Flowable"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2ObservableWrapper": {
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Observable"
   ]
  },
  "org.springframework.data.repository.reactive.RxJava2CrudRepository": {
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Flowable",
    "io.reactivex.Completable",
    "io.reactivex.Maybe",
    "io.reactivex.Single"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2SingleWrapper": {
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Single"
   ]
  },
  "org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2FlowableWrapper": {
   "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile": [
    "io.reactivex.Flowable"
   ]
  },
  "org.springframework.data.querydsl.Address": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.annotations.QueryEntity"
   ]
  },
  "org.springframework.data.querydsl.QSortUnitTests$WrapperToWrapWrapperForUserWrapper$WrapperForUserWrapper": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.annotations.QueryEntity"
   ]
  },
  "org.springframework.data.querydsl.QQSortUnitTests_WrapperToWrapWrapperForUserWrapper": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.PathMetadataFactory",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.EntityPathBase",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.dsl.PathInits"
   ]
  },
  "org.springframework.data.web.querydsl.QuerydslPredicateArgumentResolverUnitTests$SampleRepo": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.EntityPath",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.querydsl.QSimpleEntityPathResolverUnitTests_Sample": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.PathMetadataFactory",
    "com.querydsl.core.types.dsl.EntityPathBase",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.Path"
   ]
  },
  "org.springframework.data.querydsl.QSimpleEntityPathResolverUnitTests_NamedUser": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.PathMetadataFactory",
    "com.querydsl.core.types.dsl.EntityPathBase",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.Path"
   ]
  },
  "org.springframework.data.web.querydsl.QuerydslPredicateArgumentResolverUnitTests$SpecificBinding": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.StringExpression",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.EntityPath",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.querydsl.QUserWrapper": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.PathMetadataFactory",
    "com.querydsl.core.types.dsl.EntityPathBase",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.PathInits"
   ]
  },
  "org.springframework.data.querydsl.QSortUnitTests": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.OrderSpecifier",
    "com.querydsl.core.types.dsl.PathBuilderFactory",
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.dsl.PathBuilder",
    "com.querydsl.core.types.dsl.NumberExpression",
    "com.querydsl.core.types.Order",
    "com.querydsl.core.types.dsl.DateTimePath"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert"
   ]
  },
  "org.springframework.data.querydsl.QPageRequest": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.OrderSpecifier"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindings$PathAndBinding": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.querydsl.QuerydslUtilsUnitTests": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.ListPath"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindingsFactoryUnitTests$SampleRepo": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.StringExpression",
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.EntityPath"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindingsUnitTests$ContainsBinding": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.querydsl.QPageRequestUnitTests": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.OrderSpecifier"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.querydsl.QuerydslPredicateExecutor": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Predicate",
    "com.querydsl.core.types.OrderSpecifier"
   ]
  },
  "org.springframework.data.querydsl.suffix.QUser": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.EntityPathBase"
   ]
  },
  "org.springframework.data.querydsl.QSortUnitTests$WrapperToWrapWrapperForUserWrapper": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.annotations.QueryEntity",
    "com.querydsl.core.annotations.QueryInit"
   ]
  },
  "org.springframework.data.querydsl.binding.OptionalValueBinding": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.querydsl.binding.MultiValueBinding": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.querydsl.QUser": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.PathMetadataFactory",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.dsl.ListPath",
    "com.querydsl.core.types.dsl.DateTimePath",
    "com.querydsl.core.types.dsl.EntityPathBase",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.dsl.NumberPath",
    "com.querydsl.core.types.dsl.PathInits"
   ]
  },
  "org.springframework.data.querydsl.QSpecialUser": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.PathMetadataFactory",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.ListPath",
    "com.querydsl.core.types.dsl.DateTimePath",
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.dsl.EntityPathBase",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.dsl.NumberPath",
    "com.querydsl.core.types.dsl.PathInits"
   ]
  },
  "org.springframework.data.querydsl.QQSortUnitTests_WrapperToWrapWrapperForUserWrapper_WrapperForUserWrapper_UserWrapper": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.PathMetadataFactory",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.EntityPathBase",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.dsl.PathInits"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindingsFactory$NoOpCustomizer": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.EntityPath"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBinderCustomizer": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.EntityPath"
   ]
  },
  "org.springframework.data.querydsl.binding.SingleValueBinding": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.querydsl.EntityPathResolver": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.EntityPath"
   ]
  },
  "org.springframework.data.querydsl.SpecialUser": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.annotations.QueryEntity"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslBindingsFactoryUnitTests$SpecificBinding": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.StringExpression",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.EntityPath",
    "com.querydsl.core.types.Predicate"
   ]
  },
  "org.springframework.data.querydsl.SimpleEntityPathResolverUnitTests$NamedUser": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.annotations.QueryEntity"
   ]
  },
  "org.springframework.data.querydsl.QQSortUnitTests_WrapperToWrapWrapperForUserWrapper_WrapperForUserWrapper": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.PathMetadataFactory",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.EntityPathBase",
    "com.querydsl.core.types.PathMetadata",
    "com.querydsl.core.types.dsl.PathInits"
   ]
  },
  "org.springframework.data.querydsl.SimpleEntityPathResolverUnitTests$Sample": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.annotations.QueryEntity"
   ]
  },
  "org.springframework.data.querydsl.UserWrapper": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.annotations.QueryEntity"
   ]
  },
  "org.springframework.data.querydsl.QSortUnitTests$WrapperToWrapWrapperForUserWrapper$WrapperForUserWrapper$UserWrapper": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.annotations.QueryEntity"
   ]
  },
  "org.springframework.data.querydsl.QAddress": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.ArrayPath",
    "com.querydsl.core.types.PathMetadataFactory",
    "com.querydsl.core.types.Path",
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.dsl.EntityPathBase",
    "com.querydsl.core.types.PathMetadata"
   ]
  },
  "org.springframework.data.querydsl.binding.QuerydslDefaultBindingUnitTests": {
   "com.querydsl:querydsl-core:jar:4.2.1:compile": [
    "com.querydsl.core.types.dsl.StringPath",
    "com.querydsl.core.types.dsl.ListPath",
    "com.querydsl.core.types.dsl.BooleanExpression",
    "com.querydsl.core.types.Predicate"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.OptionalAssert"
   ]
  },
  "org.springframework.data.util.nonnull.type.Jsr305NonnullAnnotatedType": {
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.util.GenericArrayTypeInformation": {
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.convert.TypeInformationMapper": {
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.Nullable"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.Nullable"
   ]
  },
  "org.springframework.data.util.nonnull.type.NonNullableParameters": {
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.ParametersAreNonnullByDefault"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.ParametersAreNonnullByDefault"
   ]
  },
  "org.springframework.data.util.nonnull.type.CustomNonNullAnnotation": {
   "com.google.code.findbugs:jsr305:jar:1.3.9:compile": [
    "javax.annotation.meta.TypeQualifierDefault",
    "javax.annotation.Nonnull"
   ],
   "com.google.code.findbugs:annotations:jar:2.0.1:compile": [
    "javax.annotation.meta.TypeQualifierDefault",
    "javax.annotation.Nonnull"
   ]
  },
  "org.springframework.data.repository.cdi.DummyCdiExtension$MyScope": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.context.NormalScope"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.context.NormalScope"
   ]
  },
  "org.springframework.data.repository.cdi.WebbeansCdiRepositoryExtensionSupportIntegrationTests": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.se.SeContainerInitializer",
    "javax.enterprise.inject.se.SeContainer",
    "javax.enterprise.inject.Instance"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.Instance"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.AfterClass",
    "org.junit.BeforeClass"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryExtensionSupport$AnyAnnotationLiteral": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.util.AnnotationLiteral",
    "javax.enterprise.inject.Any"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.util.AnnotationLiteral",
    "javax.enterprise.inject.Any"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryExtensionSupport$DefaultAnnotationLiteral": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.Default",
    "javax.enterprise.util.AnnotationLiteral"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.Default",
    "javax.enterprise.util.AnnotationLiteral"
   ]
  },
  "org.springframework.data.repository.cdi.StereotypeAnnotation": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.Stereotype"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.Stereotype"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryBeanUnitTests$1": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.BeanManager"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryBeanUnitTests$2": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.spi.BeanManager"
   ]
  },
  "org.springframework.data.repository.cdi.DummyCdiExtension": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.spi.AfterBeanDiscovery",
    "javax.enterprise.event.Observes",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.spi.AfterBeanDiscovery",
    "javax.enterprise.event.Observes",
    "javax.enterprise.inject.spi.BeanManager"
   ]
  },
  "org.springframework.data.repository.cdi.RepositoryFragmentsIntegrationTests": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.se.SeContainerInitializer",
    "javax.enterprise.inject.se.SeContainer",
    "javax.enterprise.inject.Instance"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.Instance"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.AfterClass",
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryBeanUnitTests$DummyCdiRepositoryBean": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.BeanManager"
   ]
  },
  "org.springframework.data.repository.cdi.DummyCdiExtension$DummyCdiRepositoryBean": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.springframework.data.repository.cdi.CdiConfigurationIntegrationTests": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.inject.se.SeContainerInitializer",
    "javax.enterprise.inject.se.SeContainer",
    "javax.enterprise.inject.Instance"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.inject.Instance"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.AfterClass",
    "org.junit.BeforeClass",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryBeanUnitTests": {
   "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test": [
    "javax.enterprise.context.ApplicationScoped",
    "javax.enterprise.inject.spi.Bean",
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "javax.enterprise:cdi-api:jar:1.0:provided": [
    "javax.enterprise.context.ApplicationScoped",
    "javax.enterprise.inject.spi.Bean",
    "javax.enterprise.context.spi.CreationalContext",
    "javax.enterprise.inject.spi.BeanManager"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock",
    "org.mockito.ArgumentCaptor",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.repository.config.RepositoryBeanNameGeneratorUnitTests$AnnotatedInterface": {
   "javax.inject:javax.inject:jar:1:compile": [
    "javax.inject.Named"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryBeanUnitTests$SampleRepository": {
   "javax.inject:javax.inject:jar:1:compile": [
    "javax.inject.Named"
   ]
  },
  "org.springframework.data.repository.cdi.RepositoryClient": {
   "javax.inject:javax.inject:jar:1:compile": [
    "javax.inject.Inject"
   ]
  },
  "org.springframework.data.mapping.context.PersistentPropertyPathFactoryUnitTests$Inner": {
   "javax.inject:javax.inject:jar:1:compile": [
    "javax.inject.Inject"
   ]
  },
  "org.springframework.data.repository.core.support.DefaultRepositoryMetadataUnitTests$OptionalRepository": {
   "com.google.guava:guava:jar:19.0:compile": [
    "com.google.common.base.Optional"
   ]
  },
  "org.springframework.data.repository.support.ReflectionRepositoryInvokerUnitTests$GuavaRepository": {
   "com.google.guava:guava:jar:19.0:compile": [
    "com.google.common.base.Optional"
   ]
  },
  "org.springframework.data.util.ClassTypeInformationUnitTests$SampleTraversable": {
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.collection.Traversable"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConvertersUnitTests$Sample": {
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.control.Try",
    "io.vavr.collection.Seq"
   ]
  },
  "org.springframework.data.repository.query.QueryMethodUnitTests$SampleRepository": {
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.control.Option",
    "io.vavr.collection.Seq"
   ]
  },
  "org.springframework.data.util.ClassTypeInformationUnitTests$SampleMap": {
   "io.vavr:vavr:jar:0.10.2:compile": [
    "io.vavr.collection.Map"
   ]
  },
  "org.springframework.data.repository.cdi.DummyCdiExtension$MyCustomScope": {
   "org.apache.openwebbeans:openwebbeans-impl:jar:2.0.11:test": [
    "org.apache.webbeans.context.AbstractContext"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerUnitTests$CustomPagedResources": {
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.Link",
    "org.springframework.hateoas.PagedModel$PageMetadata",
    "org.springframework.hateoas.RepresentationModel",
    "org.springframework.hateoas.PagedModel"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerUnitTests$PersonResource": {
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.RepresentationModel"
   ]
  },
  "org.springframework.data.web.PagedResourcesAssemblerUnitTests$PersonResourceAssembler": {
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.server.RepresentationModelAssembler",
    "org.springframework.hateoas.RepresentationModel"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxbUnitTests$LinkedPageAdapter": {
   "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile": [
    "org.springframework.hateoas.Link",
    "org.springframework.hateoas.LinkRelation",
    "org.springframework.hateoas.IanaLinkRelations"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxbUnitTests$Wrapper": {
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.XmlAccessorType",
    "javax.xml.bind.annotation.XmlRootElement",
    "javax.xml.bind.annotation.XmlElement",
    "javax.xml.bind.annotation.XmlAccessType"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxb$SortDto": {
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.XmlAccessorType",
    "javax.xml.bind.annotation.XmlRootElement",
    "javax.xml.bind.annotation.XmlAccessType",
    "javax.xml.bind.annotation.XmlElement"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxbUnitTests$Content": {
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.XmlAttribute",
    "javax.xml.bind.annotation.XmlRootElement"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxbUnitTests$PageWrapper": {
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
    "javax.xml.bind.annotation.XmlRootElement",
    "javax.xml.bind.annotation.XmlElement"
   ]
  },
  "org.springframework.data.domain.jaxb.SpringDataJaxb$PageRequestDto": {
   "javax.xml.bind:jaxb-api:jar:2.2.2:test": [
    "javax.xml.bind.annotation.XmlAttribute",
    "javax.xml.bind.annotation.XmlAccessorType",
    "javax.xml.bind.annotation.XmlRootElement",
    "javax.xml.bind.annotation.XmlAccessType",
    "javax.xml.bind.annotation.XmlElement"
   ]
  },
  "org.springframework.data.mapping.context.AbstractMappingContextUnitTests$Sample": {
   "org.codehaus.groovy:groovy-all:jar:2.4.4:test": [
    "groovy.lang.MetaClass"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscovererUnitTests$TwoDefaultConstructorsAnnotated": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.model.TypeCreatingSyntheticClassKt": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscovererUnitTests$AnnotatedConstructors": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$9": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$8": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$7": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$6": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$5": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$4": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$3": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$2": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$1": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscovererUnitTests$Simple": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.model.SingleSettableProperty": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.context.TypeCreatingSyntheticClassKt": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.model.ExtendedDataClassKt": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.model.DataClassKt": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.context.SimpleDataClass": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.repository.CrudRepositoryExtensionsTests$CrudRepository#findByIdOrNull() extension should call its Java counterpart$2": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Unit",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKVerificationScope"
   ]
  },
  "org.springframework.data.repository.CrudRepositoryExtensionsTests$CrudRepository#findByIdOrNull() extension should call its Java counterpart$1": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscovererUnitTests$DefaultConstructor": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.model.UnusedCustomCopy": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.ReflectionEntityInstantiatorDataClassUnitTests$Contact": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance using @PersistenceConstructor$4": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance using @PersistenceConstructor$3": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance using @PersistenceConstructor$2": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance using @PersistenceConstructor$1": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.mapping.model.TypeCreatingSyntheticClass": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata"
   ]
  },
  "org.springframework.data.convert.ReflectionEntityInstantiatorDataClassUnitTests$should create instance$1": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.ReflectionEntityInstantiatorDataClassUnitTests$should create instance$2": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$ContactWithPersistenceConstructor": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscovererUnitTests$TwoConstructorsWithoutDefault": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable"
   ]
  },
  "org.springframework.data.mapping.model.With32Args": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance and fill in defaults$2": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance and fill in defaults$3": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance and fill in defaults$1": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance and fill in defaults$4": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.repository.CrudRepositoryExtensionsKt": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscovererUnitTests$TwoConstructors": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$WithPrimitiveDefaulting": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$Contact": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.model.PreferredConstructorDiscovererUnitTests": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.TypeCastException",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.Metadata"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Reflection",
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.functions.Function0",
    "kotlin.reflect.KClass",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk:jar:1.9.3:test": [
    "io.mockk.impl.JvmMockKGateway$Companion",
    "io.mockk.MockK",
    "io.mockk.MockKKt",
    "io.mockk.impl.JvmMockKGateway"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKGateway$Companion",
    "io.mockk.MockKGateway",
    "io.mockk.MockKStubScope",
    "io.mockk.MockKDsl",
    "io.mockk.MockKGateway$MockFactory"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.AbstractShortAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.AbstractByteAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractFloatAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.AbstractDoubleAssert",
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.AbstractCharacterAssert"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$ContactWithDefaulting": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$WithBoolean": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.util.DummyInterface": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance$2": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance$1": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance$4": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should create instance$3": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.ReflectionEntityInstantiatorDataClassUnitTests": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.reflect.KClass",
    "kotlin.jvm.internal.Reflection",
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.functions.Function0",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk:jar:1.9.3:test": [
    "io.mockk.impl.JvmMockKGateway$Companion",
    "io.mockk.MockK",
    "io.mockk.MockKKt",
    "io.mockk.impl.JvmMockKGateway"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKGateway$Companion",
    "io.mockk.MockKDsl",
    "io.mockk.MockKGateway",
    "io.mockk.MockKGateway$MockFactory",
    "io.mockk.MockKStubScope"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.mapping.model.KotlinCopyMethod$KotlinCopyByProperty": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.reflect.KParameter",
    "kotlin.reflect.KFunction"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.KotlinUserRepository": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$Organisation": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.repository.CrudRepositoryExtensionsTests": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.reflect.KClass",
    "kotlin.jvm.internal.Reflection",
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.functions.Function0",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk:jar:1.9.3:test": [
    "io.mockk.impl.JvmMockKGateway$Companion",
    "io.mockk.MockK",
    "io.mockk.MockKKt",
    "io.mockk.impl.JvmMockKGateway"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKGateway$Companion",
    "io.mockk.MockKDsl",
    "io.mockk.MockKGateway",
    "io.mockk.MockKGateway$MockFactory",
    "io.mockk.MockKStubScope"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.mapping.model.KotlinDefaultMask": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.reflect.KParameter$Kind",
    "kotlin.reflect.KParameter",
    "kotlin.reflect.KFunction"
   ],
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$11": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$should apply primitive defaulting for absent parameters$10": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.mapping.model.With33Args": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.ReflectionEntityInstantiatorDataClassUnitTests$should create instance and fill in defaults$1": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.ReflectionEntityInstantiatorDataClassUnitTests$should create instance and fill in defaults$2": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.mapping.model.ValueClassKt": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.mapping.context.TypeCreatingSyntheticClass": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$absent primitive value should cause MappingInstantiationException$2": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.ReflectionEntityInstantiatorDataClassUnitTests$ContactWithDefaulting": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$absent primitive value should cause MappingInstantiationException$3": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$absent primitive value should cause MappingInstantiationException$4": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.MockKMatcherScope"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$absent primitive value should cause MappingInstantiationException$5": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$absent primitive value should cause MappingInstantiationException$1": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.functions.Function1",
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.Lambda",
    "kotlin.jvm.internal.Reflection",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ],
   "io.mockk:mockk-dsl-jvm:jar:1.9.3:test": [
    "io.mockk.ConstantMatcher",
    "io.mockk.MockKMatcherScope",
    "io.mockk.Matcher",
    "io.mockk.MockKGateway$CallRecorder"
   ]
  },
  "org.springframework.data.convert.KotlinClassGeneratingEntityInstantiatorUnitTests$CustomUser": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.jvm.internal.Intrinsics",
    "kotlin.jvm.internal.DefaultConstructorMarker",
    "kotlin.Metadata"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.Nullable",
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.util.TypeCreatingSyntheticClassKt": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata",
    "kotlin.jvm.internal.Intrinsics"
   ],
   "org.jetbrains:annotations:jar:13.0:compile": [
    "org.jetbrains.annotations.NotNull"
   ]
  },
  "org.springframework.data.util.TypeCreatingSyntheticClass": {
   "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile": [
    "kotlin.Metadata"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionRepositoryProxyPostProcessorUnitTests$SampleRepository": {
   "javax.transaction:javax.transaction-api:jar:1.2:test": [
    "javax.transaction.Transactional"
   ]
  },
  "org.springframework.data.web.XmlBeamHttpMessageConverterUnitTests$Customer": {
   "org.xmlbeam:xmlprojector:jar:1.4.16:compile": [
    "org.xmlbeam.annotation.XBRead"
   ]
  },
  "org.springframework.data.web.XmlBeamHttpMessageConverter$1": {
   "org.xmlbeam:xmlprojector:jar:1.4.16:compile": [
    "org.xmlbeam.config.DefaultXMLFactoriesConfig"
   ]
  },
  "org.springframework.data.DependencyTests": {
   "de.schauderhaft.degraph:degraph-check:jar:0.1.4:test": [
    "de.schauderhaft.degraph.check.ConstraintBuilder",
    "de.schauderhaft.degraph.check.JCheck"
   ],
   "junit:junit:jar:4.12:test": [
    "org.junit.Test",
    "org.junit.Assert"
   ]
  },
  "org.springframework.data.mapping.TargetAwareIdentifierAccessorUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.annotation.TypeAliasUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.util.StreamableUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.auditing.IsNewAwareAuditingHandlerUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractLocalDateTimeAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.auditing.DefaultAuditableBeanWrapperFactoryUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractLocalDateTimeAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.repository.core.support.PersistentEntityInformationUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.query.parser.PartTreeUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.spel.EvaluationContextExtensionInformationUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ]
  },
  "org.springframework.data.util.ClassTypeInformationUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.repository.core.support.DefaultCrudMethodsUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.OptionalAssert"
   ]
  },
  "org.springframework.data.geo.format.DistanceFormatterUnitTests$ParameterizedTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.runners.Parameterized$Parameter",
    "org.junit.runners.Parameterized"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.config.RepositoryFragmentConfigurationUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.convert.Jsr310ConvertersUnitTests$PeriodConversionTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.runners.Parameterized"
   ]
  },
  "org.springframework.data.mapping.model.CamelCaseAbbreviatingFieldNamingStrategyUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.repository.query.QueryMethodUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.util.ClassUtilsUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.mapping.context.PropertyMatchUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.geo.format.PointFormatterUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.runners.Enclosed"
   ]
  },
  "org.springframework.data.util.TypeDiscovererUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.auditing.AuditingHandlerUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.stubbing.Stubber",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractInstantAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.projection.DefaultMethodInvokingMethodInterceptorUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test",
    "org.junit.Assume"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.convert.SimpleTypeInformationMapperUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupportUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.repository.query.QuotationMapUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.SoftAssertions",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.mapping.context.AbstractMappingContextIntegrationTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.domain.AbstractPageRequestUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.query.parser.OrderBySourceUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.util.VersionUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.core.support.AbstractRepositoryMetadataUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ClassAssert"
   ]
  },
  "org.springframework.data.domain.ExampleUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.domain.ExampleMatcherUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFragmentUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.util.MethodInvocationRecorderUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.mapping.PreferredConstructorDiscovererUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.repository.config.XmlRepositoryConfigurationSourceUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.Assertions"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.convert.MappingContextTypeInformationMapperUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.util.PairUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.projection.DefaultProjectionInformationUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ListAssert"
   ]
  },
  "org.springframework.data.repository.support.PageableExecutionUtilsUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.querydsl.SimpleEntityPathResolverUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.core.support.AbstractEntityInformationUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.core.support.DefaultRepositoryMetadataUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.util.AnnotatedTypeScannerUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.mapping.context.PersistentEntitiesUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.cdi.CdiRepositoryExtensionSupportIntegrationTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryDatatypeTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runners.Parameterized",
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ObjectAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.repository.core.support.AnnotationRepositoryMetadataUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.support.PersistableIsNewStrategyUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.history.RevisionsUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.core.support.QueryExecutorMethodInterceptorUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.convert.EntityInstantiatorsUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.domain.PageImplUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.AbstractLongAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert"
   ]
  },
  "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryEntityTypeTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.config.SelectionSetUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.mapping.PropertyReferenceExceptionUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.domain.SortUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.query.SpelQueryContextUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.convert.DefaultTypeMapperUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.geo.format.DistanceFormatterUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.experimental.runners.Enclosed"
   ]
  },
  "org.springframework.data.domain.RangeUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.domain.DirectionUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.mapping.MappingMetadataTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test",
    "org.junit.Before"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.config.DefaultImplementationLookupConfigurationUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.mapping.ParameterUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.geo.format.PointFormatterUnitTests$UnparameterizedTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.mapping.model.PersistentEntityParameterValueProviderUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.repository.query.SpelExtractorUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ProxyableIterableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.StringAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.SoftAssertions",
    "org.assertj.core.api.ProxyableMapAssert",
    "org.assertj.core.groups.Tuple",
    "org.assertj.core.api.AbstractListAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.history.RevisionUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.convert.ConfigurableTypeInformationMapperUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.repository.query.ParametersParameterAccessorUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.mapping.model.BasicPersistentEntityUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractThrowableAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.repository.core.support.DefaultRepositoryInformationUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert"
   ]
  },
  "org.springframework.data.util.StreamUtilsTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.util.LazyUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.Stubber",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.OptionalAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.util.ParameterizedTypeInformationUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.junit.MockitoJUnitRunner",
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.AbstractBooleanAssert"
   ]
  },
  "org.springframework.data.convert.ParameterizedKotlinInstantiatorUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.runners.Parameterized",
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ObjectAssert"
   ],
   "org.springframework:spring-test:jar:5.2.0.RC2:test": [
    "org.springframework.test.util.ReflectionTestUtils"
   ]
  },
  "org.springframework.data.util.DataCmns511Tests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.mapping.model.IdPropertyIdentifierAccessorUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.mapping.context.MappingContextEventUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.query.SimpleParameterAccessorUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.domain.AbstractAggregateRootUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.geo.format.DistanceFormatterUnitTests$UnparameterizedTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.mapping.model.SnakeCaseFieldNamingStrategyUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runner.RunWith",
    "org.junit.Test"
   ],
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mock",
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito",
    "org.mockito.junit.MockitoJUnitRunner"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.geo.format.PointFormatterUnitTests$ParameterizedTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.runner.RunWith",
    "org.junit.Test",
    "org.junit.runners.Parameterized$Parameter",
    "org.junit.runners.Parameterized"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.repository.core.support.ExampleSpecificationAccessorUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Before",
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.AbstractComparableAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ObjectAssert"
   ]
  },
  "org.springframework.data.mapping.model.PersistentEntityIsNewStrategyUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.convert.Jsr310ConvertersUnitTests$DurationConversionTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.runners.Parameterized$Parameters",
    "org.junit.runners.Parameterized"
   ]
  },
  "org.springframework.data.repository.query.ReturnedTypeUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ListAssert"
   ]
  },
  "org.springframework.data.mapping.PropertyPathUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ThrowableAssertAlternative",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.ClassAssert",
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.IterableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert"
   ]
  },
  "org.springframework.data.mapping.SimpleTypeHolderUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.ThrowableAssert",
    "org.assertj.core.api.AbstractBooleanAssert",
    "org.assertj.core.api.ThrowableTypeAssert",
    "org.assertj.core.api.ThrowableAssert$ThrowingCallable"
   ]
  },
  "org.springframework.data.domain.PageRequestUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ]
  },
  "org.springframework.data.util.ParsingUtilsUnitTests": {
   "junit:junit:jar:4.12:test": [
    "org.junit.Test"
   ],
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ListAssert",
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.repository.core.support.TransactionRepositoryFactoryBeanSupportUnitTests$SampleTransactionalRepositoryFactoryBean": {
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.springframework.data.repository.core.support.DummyRepositoryFactory": {
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.springframework.data.repository.core.support.DummyRepositoryFactoryBean": {
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.springframework.data.mapping.context.AbstractMappingContextIntegrationTests$DummyMappingContext": {
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.stubbing.OngoingStubbing",
    "org.mockito.Mockito"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupportUnitTests$1": {
   "org.mockito:mockito-core:jar:3.0.0:test": [
    "org.mockito.Mockito"
   ]
  },
  "org.springframework.data.mapping.PersistentEntitySpec": {
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.Assertions",
    "org.assertj.core.api.AbstractStringAssert"
   ]
  },
  "org.springframework.data.domain.UnitTestUtils": {
   "org.assertj:assertj-core:jar:3.13.2:test": [
    "org.assertj.core.api.ObjectAssert",
    "org.assertj.core.api.AbstractIntegerAssert",
    "org.assertj.core.api.Assertions"
   ]
  },
  "org.springframework.data.mapping.model.PersistentEntityIsNewStrategyUnitTests$PersistableEntity": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.AbstractPersistentPropertyUnitTests$GenericGetter": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.domain.SortUnitTests$Nested": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryDatatypeTests$PrivateFinalPropertyAccess": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.query.ReturnedType$CacheKey": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConvertersUnitTests$StreamableWrapper": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.context.AbstractMappingContextUnitTests$TypeRejectingMappingContext": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConverters$WrapperType": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryCompositionUnitTests$Contact": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyAccessorUnitTests$Customer": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyAccessorUnitTests$Outer": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessorUnitTests$MultipleEvents": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.TargetAwareIdentifierAccessor": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.util.QueryExecutionConvertersUnitTests$CustomStreamableWrapper": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.web.JsonProjectingMethodInterceptorFactoryUnitTests$Address": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyAccessorUnitTests$WithContext$WithContextBuilder": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryCompositionUnitTests$Person": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.util.LazyStreamable": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.config.SelectionSet": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyAccessorUnitTests$Spec": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessorUnitTests$SomeEvent": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.MethodLookup$InvokedMethod": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.AbstractEntityInformation": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.geo.GeoResult": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated",
    "lombok.NonNull"
   ]
  },
  "org.springframework.data.repository.query.ResultProcessorUnitTests$WrappingDto": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.BasicPersistentEntityUnitTests$PropertyPopulationRequired": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactorySupport$RepositoryInformationCacheKey": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.BasicPersistentEntityUnitTests$PropertyPopulationNotRequiredWithTransient": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryDatatypeTests$PropertyAccess": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.util.Pair": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PropertyPath$Key": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.support.ExampleMatcherAccessor": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyAccessorUnitTests$WithContext": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.config.DefaultRepositoryConfigurationUnitTests$SimplerRepositoryConfigurationExtension": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.domain.TypedExample": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.NonNull",
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.PersistentPropertyAccessorTests$DataClass": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.PropertyUnitTests$WitherType": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.BasicPersistentEntityUnitTests$PropertyPopulationNotRequired": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyAccessorUnitTests$NestedImmutable": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.PersistentPropertyAccessorUnitTests$Order": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessorUnitTests$EventsWithClearing": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.query.ExtensionAwareEvaluationContextProviderUnitTests$DummyExtension": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.PersistentPropertyAccessorTests$ValueClass": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.DefaultRepositoryInformationUnitTests$DummyRepositoryImpl": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.context.PersistentPropertyPathFactory$TypeAndPath": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.domain.SortUnitTests$Sample": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryCollectingQueryCreationListener": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.util.MethodInvocationRecorderUnitTests$Foo": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.QueryExecutionResultHandlerUnitTests$CustomStreamableWrapper": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.util.MethodInvocationRecorderUnitTests$Bar": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.mapping.model.PropertyUnitTests$ImmutableType": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  },
  "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessorUnitTests$OneEvent": {
   "org.projectlombok:lombok:jar:1.18.8:compile": [
    "lombok.Generated"
   ]
  }
 },
 "dependencies": {
  "id": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3:null",
  "coordinates": "org.springframework.data:spring-data-commons:2.2.0.RC3",
  "groupId": "org.springframework.data",
  "artifactId": "spring-data-commons",
  "version": "2.2.0.RC3",
  "packaging": "jar",
  "omitted": false,
  "type": "unknown",
  "status": "unknown",
  "parent": "unknown",
  "allTypes": [],
  "usedTypes": [],
  "usageRatio": -1.0,
  "children": [
   {
    "id": "org.springframework:spring-core:jar:5.2.0.RC2:compile",
    "coordinates": "org.springframework:spring-core:5.2.0.RC2",
    "groupId": "org.springframework",
    "artifactId": "spring-core",
    "version": "5.2.0.RC2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 1426622,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.util.Base64Utils",
     "org.springframework.core.io.DescriptiveResource",
     "org.springframework.core.convert.support.ObjectToStringConverter",
     "org.springframework.cglib.util.ParallelSorter$Comparer",
     "org.springframework.core.env.PropertySource$ComparisonPropertySource",
     "org.springframework.cglib.core.ClassNameReader$EarlyExitException",
     "org.springframework.cglib.transform.impl.AddDelegateTransformer$1",
     "org.springframework.cglib.beans.BulkBeanEmitter",
     "org.springframework.core.annotation.TypeMappedAnnotations$Aggregate",
     "org.springframework.util.concurrent.ListenableFutureCallbackRegistry$State",
     "org.springframework.core.type.classreading.MetadataReader",
     "org.springframework.core.convert.support.NumberToNumberConverterFactory",
     "org.springframework.core.ParameterizedTypeReference$1",
     "org.springframework.core.Constants",
     "org.springframework.util.AntPathMatcher",
     "org.springframework.core.NestedExceptionUtils",
     "org.springframework.cglib.core.ClassEmitter",
     "org.springframework.cglib.proxy.Proxy",
     "org.springframework.core.io.Resource",
     "org.springframework.cglib.reflect.FastClassEmitter$GetIndexCallback",
     "org.springframework.cglib.core.KeyFactory$Generator",
     "org.springframework.cglib.transform.FieldVisitorTee",
     "org.springframework.objenesis.instantiator.annotations.Typology",
     "org.springframework.core.ReactiveAdapterRegistry$RxJava2Registrar",
     "org.springframework.core.task.SimpleAsyncTaskExecutor$1",
     "org.springframework.core.convert.support.StringToBooleanConverter",
     "org.springframework.cglib.beans.BulkBeanException",
     "org.springframework.core.type.classreading.CachingMetadataReaderFactory",
     "org.springframework.core.type.classreading.package-info",
     "org.springframework.core.PriorityOrdered",
     "org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum",
     "org.springframework.util.function.SingletonSupplier",
     "org.springframework.cglib.core.EmitUtils",
     "org.springframework.cglib.core.EmitUtils$ParameterTyper",
     "org.springframework.core.codec.ResourceDecoder$2",
     "org.springframework.core.codec.ResourceDecoder$1",
     "org.springframework.util.ConcurrentReferenceHashMap$Entry",
     "org.springframework.core.annotation.MergedAnnotationPredicates$UniquePredicate",
     "org.springframework.cglib.core.DebuggingClassWriter$1",
     "org.springframework.objenesis.instantiator.util.DefineClassHelper$Helper",
     "org.springframework.core.env.EnvironmentCapable",
     "org.springframework.core.annotation.AnnotationFilter$2",
     "org.springframework.cglib.reflect.FastClass",
     "org.springframework.objenesis.instantiator.util.DefineClassHelper$Java8",
     "org.springframework.core.convert.ConversionService",
     "org.springframework.cglib.core.KeyFactoryCustomizer",
     "org.springframework.core.annotation.AnnotationFilter$1",
     "org.springframework.cglib.transform.impl.InterceptFieldEnabled",
     "org.springframework.util.xml.StaxStreamHandler",
     "org.springframework.core.type.classreading.SimpleMethodMetadataReadingVisitor",
     "org.springframework.cglib.proxy.CallbackInfo",
     "org.springframework.cglib.beans.BulkBean$Generator",
     "org.springframework.util.CollectionUtils$EnumerationIterator",
     "org.springframework.cglib.core.DefaultNamingPolicy",
     "org.springframework.core.annotation.AnnotationUtils$DefaultValueHolder",
     "org.springframework.util.xml.XMLEventStreamWriter",
     "org.springframework.core.annotation.AnnotationFilter",
     "org.springframework.core.convert.support.GenericConversionService$ConvertersForPair",
     "org.springframework.core.style.DefaultValueStyler",
     "org.springframework.util.SimpleIdGenerator",
     "org.springframework.util.xml.StaxStreamXMLReader$1",
     "org.springframework.core.ResolvableType$1",
     "org.springframework.objenesis.instantiator.basic.ProxyingInstantiator",
     "org.springframework.cglib.core.CodeEmitter$State",
     "org.springframework.core.type.filter.TypeFilter",
     "org.springframework.asm.SpringAsmInfo",
     "org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber",
     "org.springframework.core.Conventions",
     "org.springframework.core.annotation.MergedAnnotationSelectors",
     "org.springframework.cglib.reflect.FastClass$Generator",
     "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
     "org.springframework.util.concurrent.FutureAdapter$1",
     "org.springframework.cglib.proxy.UndeclaredThrowableException",
     "org.springframework.cglib.proxy.Callback",
     "org.springframework.core.io.InputStreamResource",
     "org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator",
     "org.springframework.cglib.transform.impl.AccessFieldTransformer$Callback",
     "org.springframework.asm.Handle",
     "org.springframework.core.ConfigurableObjectInputStream",
     "org.springframework.util.AutoPopulatingList",
     "org.springframework.core.convert.support.ArrayToArrayConverter",
     "org.springframework.core.task.support.TaskExecutorAdapter",
     "org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber",
     "org.springframework.cglib.transform.ClassTransformerTee",
     "org.springframework.core.env.MutablePropertySources",
     "org.springframework.util.concurrent.FutureAdapter",
     "org.springframework.cglib.beans.BeanCopier",
     "org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference",
     "org.springframework.asm.ClassVisitor",
     "org.springframework.cglib.core.VisibilityPredicate",
     "org.springframework.core.SortedProperties",
     "org.springframework.core.CoroutinesUtils$invokeSuspendingFunction$1",
     "org.springframework.asm.AnnotationVisitor",
     "org.springframework.util.xml.SimpleNamespaceContext",
     "org.springframework.core.convert.converter.Converter",
     "org.springframework.util.StreamUtils",
     "org.springframework.cglib.core.EmitUtils$7",
     "org.springframework.core.annotation.AliasFor",
     "org.springframework.cglib.core.EmitUtils$8",
     "org.springframework.cglib.core.EmitUtils$5",
     "org.springframework.cglib.core.CollectionUtils",
     "org.springframework.cglib.core.EmitUtils$6",
     "org.springframework.core.annotation.TypeMappedAnnotations$1",
     "org.springframework.cglib.core.EmitUtils$3",
     "org.springframework.cglib.core.EmitUtils$4",
     "org.springframework.cglib.core.EmitUtils$1",
     "org.springframework.cglib.core.EmitUtils$2",
     "org.springframework.objenesis.instantiator.sun.UnsafeFactoryInstantiator",
     "org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey",
     "org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor",
     "org.springframework.cglib.core.EmitUtils$9",
     "org.springframework.core.SerializableTypeWrapper$TypeProxyInvocationHandler",
     "org.springframework.core.annotation.RepeatableContainers",
     "org.springframework.cglib.core.internal.LoadingCache$2",
     "org.springframework.cglib.core.internal.LoadingCache$1",
     "org.springframework.util.comparator.CompoundComparator",
     "org.springframework.core.convert.converter.package-info",
     "org.springframework.cglib.core.GeneratorStrategy",
     "org.springframework.core.ReactiveAdapterRegistry$ReactorRegistrar",
     "org.springframework.core.io.support.ResourceArrayPropertyEditor",
     "org.springframework.cglib.transform.impl.UndeclaredThrowableStrategy$1",
     "org.springframework.core.convert.support.StringToCharsetConverter",
     "org.springframework.util.CompositeIterator",
     "org.springframework.util.NumberUtils",
     "org.springframework.util.ReflectionUtils$FieldCallback",
     "org.springframework.util.StreamUtils$NonClosingOutputStream",
     "org.springframework.core.codec.EncodingException",
     "org.springframework.util.AutoPopulatingList$ElementInstantiationException",
     "org.springframework.core.convert.support.ConversionUtils",
     "org.springframework.cglib.core.KeyFactory$1",
     "org.springframework.core.ReactiveAdapterRegistry$EmptyCompletableFuture",
     "org.springframework.cglib.core.KeyFactory$4",
     "org.springframework.objenesis.instantiator.sun.SunReflectionFactoryHelper",
     "org.springframework.cglib.core.KeyFactory$2",
     "org.springframework.cglib.core.KeyFactory$3",
     "org.springframework.core.style.ValueStyler",
     "org.springframework.util.ConcurrentReferenceHashMap$WeakEntryReference",
     "org.springframework.core.type.classreading.SimpleMethodMetadataReadingVisitor$Source",
     "org.springframework.core.convert.support.StringToEnumConverterFactory",
     "org.springframework.cglib.core.AbstractClassGenerator$Source",
     "org.springframework.core.io.buffer.PooledDataBuffer",
     "org.springframework.core.type.AnnotationMetadata",
     "org.springframework.cglib.beans.BeanCopier$Generator",
     "org.springframework.core.type.StandardClassMetadata",
     "org.springframework.core.convert.converter.ConverterRegistry",
     "org.springframework.core.task.TaskDecorator",
     "org.springframework.core.GenericTypeResolver$TypeVariableMapVariableResolver",
     "org.springframework.util.backoff.ExponentialBackOff$ExponentialBackOffExecution",
     "org.springframework.lang.UsesSunMisc",
     "org.springframework.cglib.util.ParallelSorter$ShortComparer",
     "org.springframework.cglib.core.Converter",
     "org.springframework.core.codec.AbstractDecoder",
     "org.springframework.core.convert.support.EnumToStringConverter",
     "org.springframework.core.serializer.DefaultDeserializer",
     "org.springframework.cglib.util.ParallelSorter$DoubleComparer",
     "org.springframework.cglib.core.RejectModifierPredicate",
     "org.springframework.objenesis.instantiator.basic.AccessibleInstantiator",
     "org.springframework.core.annotation.AnnotationTypeMapping$MirrorSets$MirrorSet",
     "org.springframework.util.unit.DataUnit",
     "org.springframework.cglib.core.Local",
     "org.springframework.util.backoff.ExponentialBackOff",
     "org.springframework.cglib.transform.impl.FieldProviderTransformer$1",
     "org.springframework.cglib.transform.impl.FieldProviderTransformer$2",
     "org.springframework.cglib.transform.impl.FieldProviderTransformer$3",
     "org.springframework.cglib.transform.impl.FieldProviderTransformer$4",
     "org.springframework.core.convert.ConverterNotFoundException",
     "org.springframework.core.convert.converter.ConvertingComparator",
     "org.springframework.cglib.core.ClassGenerator",
     "org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3",
     "org.springframework.cglib.transform.AnnotationVisitorTee",
     "org.springframework.objenesis.instantiator.perc.PercSerializationInstantiator",
     "org.springframework.core.annotation.MergedAnnotationPredicates$FirstRunOfPredicate",
     "org.springframework.core.convert.support.FallbackObjectToStringConverter",
     "org.springframework.util.MimeType$SpecificityComparator",
     "org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$2",
     "org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$1",
     "org.springframework.cglib.proxy.InterfaceMaker",
     "org.springframework.core.annotation.MergedAnnotationSelectors$1",
     "org.springframework.util.ConcurrentReferenceHashMap$1",
     "org.springframework.util.ConcurrentReferenceHashMap$2",
     "org.springframework.util.ConcurrentReferenceHashMap$3",
     "org.springframework.util.backoff.ExponentialBackOff$1",
     "org.springframework.util.ConcurrentReferenceHashMap$4",
     "org.springframework.core.StandardReflectionParameterNameDiscoverer",
     "org.springframework.core.convert.support.GenericConversionService",
     "org.springframework.util.LinkedCaseInsensitiveMap$ValuesIterator",
     "org.springframework.util.xml.AbstractStaxHandler",
     "org.springframework.util.concurrent.ListenableFutureAdapter",
     "org.springframework.util.LinkedCaseInsensitiveMap$1",
     "org.springframework.core.annotation.TypeMappedAnnotations$AggregatesSpliterator",
     "org.springframework.core.type.classreading.RecursiveAnnotationArrayVisitor",
     "org.springframework.core.convert.support.IdToEntityConverter",
     "org.springframework.cglib.util.ParallelSorter$ObjectComparer",
     "org.springframework.util.ConcurrentReferenceHashMap$5",
     "org.springframework.core.io.ResourceEditor",
     "org.springframework.core.convert.support.MapToMapConverter$MapEntry",
     "org.springframework.core.task.TaskRejectedException",
     "org.springframework.util.xml.StaxResult",
     "org.springframework.cglib.util.ParallelSorter$ByteComparer",
     "org.springframework.core.env.Profiles",
     "org.springframework.core.ResolvableType",
     "org.springframework.core.io.buffer.NettyDataBuffer",
     "org.springframework.cglib.reflect.MethodDelegate",
     "org.springframework.core.annotation.TypeMappedAnnotations$AggregatesCollector",
     "org.springframework.core.convert.support.ZoneIdToTimeZoneConverter",
     "org.springframework.asm.TypePath",
     "org.springframework.util.comparator.NullSafeComparator",
     "org.springframework.cglib.reflect.MethodDelegate$Generator",
     "org.springframework.core.convert.support.ArrayToCollectionConverter",
     "org.springframework.asm.SymbolTable",
     "org.springframework.core.AliasRegistry",
     "org.springframework.core.convert.support.StringToArrayConverter",
     "org.springframework.core.SerializableTypeWrapper$TypeProvider",
     "org.springframework.cglib.transform.impl.UndeclaredThrowableTransformer$1",
     "org.springframework.util.SocketUtils",
     "org.springframework.core.env.MapPropertySource",
     "org.springframework.util.ConcurrencyThrottleSupport",
     "org.springframework.util.concurrent.DelegatingCompletableFuture",
     "org.springframework.cglib.proxy.CallbackGenerator",
     "org.springframework.objenesis.strategy.SerializingInstantiatorStrategy",
     "org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider",
     "org.springframework.util.DigestUtils",
     "org.springframework.util.xml.StaxEventXMLReader",
     "org.springframework.core.io.support.PathMatchingResourcePatternResolver$VfsResourceMatchingDelegate",
     "org.springframework.core.convert.support.StringToCurrencyConverter",
     "org.springframework.util.LinkedCaseInsensitiveMap$EntrySet",
     "org.springframework.cglib.core.TypeUtils",
     "org.springframework.util.comparator.Comparators",
     "org.springframework.cglib.proxy.Enhancer$1",
     "org.springframework.cglib.proxy.Enhancer$3",
     "org.springframework.cglib.proxy.Enhancer$2",
     "org.springframework.core.ReactiveAdapterRegistry$ReactorAdapter",
     "org.springframework.core.convert.TypeDescriptor",
     "org.springframework.core.Constants$ConstantException",
     "org.springframework.asm.AnnotationWriter",
     "org.springframework.cglib.proxy.Enhancer$5",
     "org.springframework.cglib.proxy.Enhancer$4",
     "org.springframework.cglib.proxy.Enhancer$6",
     "org.springframework.cglib.proxy.MixinBeanEmitter",
     "org.springframework.core.codec.ResourceEncoder",
     "org.springframework.asm.TypeReference",
     "org.springframework.cglib.proxy.MethodProxy$FastClassInfo",
     "org.springframework.util.ExceptionTypeFilter",
     "org.springframework.cglib.beans.BeanMap$Generator$BeanMapKey",
     "org.springframework.util.xml.XmlValidationModeDetector",
     "org.springframework.objenesis.instantiator.util.DefineClassHelper",
     "org.springframework.cglib.proxy.MethodInterceptor",
     "org.springframework.cglib.transform.impl.AddPropertyTransformer",
     "org.springframework.core.convert.support.CollectionToStringConverter",
     "org.springframework.util.ReflectionUtils$FieldFilter",
     "org.springframework.core.task.support.ConcurrentExecutorAdapter",
     "org.springframework.asm.FieldWriter",
     "org.springframework.core.annotation.AnnotationTypeMappings$1",
     "org.springframework.core.log.LogMessage$SupplierMessage",
     "org.springframework.cglib.core.DefaultGeneratorStrategy",
     "org.springframework.cglib.transform.ClassTransformerChain",
     "org.springframework.core.InfrastructureProxy",
     "org.springframework.cglib.core.EmitUtils$ArrayDelimiters",
     "org.springframework.core.type.classreading.RecursiveAnnotationAttributesVisitor",
     "org.springframework.core.serializer.support.package-info",
     "org.springframework.core.task.SimpleAsyncTaskExecutor$ConcurrencyThrottlingRunnable",
     "org.springframework.util.ClassUtils",
     "org.springframework.core.codec.StringDecoder",
     "org.springframework.core.io.support.ResourcePropertySource",
     "org.springframework.core.MethodParameter$KotlinDelegate",
     "org.springframework.core.SerializableTypeWrapper$FieldTypeProvider",
     "org.springframework.util.UpdateMessageDigestInputStream",
     "org.springframework.lang.NonNullFields",
     "org.springframework.core.NamedThreadLocal",
     "org.springframework.core.env.CommandLineArgs",
     "org.springframework.asm.ClassTooLargeException",
     "org.springframework.util.JdkIdGenerator",
     "org.springframework.lang.NonNull",
     "org.springframework.core.serializer.Serializer",
     "org.springframework.cglib.transform.AbstractTransformTask",
     "org.springframework.core.convert.support.StringToUUIDConverter",
     "org.springframework.util.ConcurrentReferenceHashMap$EntrySet",
     "org.springframework.cglib.transform.MethodVisitorTee",
     "org.springframework.core.DecoratingClassLoader",
     "org.springframework.core.env.ConfigurablePropertyResolver",
     "org.springframework.core.codec.Hints",
     "org.springframework.util.xml.StaxSource",
     "org.springframework.core.io.support.ResourceRegion",
     "org.springframework.core.task.TaskTimeoutException",
     "org.springframework.util.comparator.ComparableComparator",
     "org.springframework.objenesis.instantiator.basic.NewInstanceInstantiator",
     "org.springframework.core.convert.support.MapToMapConverter",
     "org.springframework.util.SystemPropertyUtils",
     "org.springframework.util.SerializationUtils",
     "org.springframework.util.InvalidMimeTypeException",
     "org.springframework.cglib.reflect.MulticastDelegate$Generator",
     "org.springframework.objenesis.instantiator.basic.NullInstantiator",
     "org.springframework.core.annotation.MergedAnnotationSelectors$FirstDirectlyDeclared",
     "org.springframework.cglib.proxy.Enhancer$EnhancerKey",
     "org.springframework.core.env.SimpleCommandLineArgsParser",
     "org.springframework.core.io.buffer.DataBufferFactory",
     "org.springframework.core.io.support.VfsPatternUtils",
     "org.springframework.cglib.proxy.Mixin",
     "org.springframework.objenesis.instantiator.gcj.GCJInstantiator",
     "org.springframework.util.backoff.package-info",
     "org.springframework.cglib.core.MethodWrapper",
     "org.springframework.cglib.core.CodeEmitter",
     "org.springframework.cglib.transform.TransformingClassGenerator",
     "org.springframework.util.DefaultPropertiesPersister",
     "org.springframework.core.task.AsyncListenableTaskExecutor",
     "org.springframework.cglib.transform.impl.AddStaticInitTransformer",
     "org.springframework.core.convert.support.StringToCharacterConverter",
     "org.springframework.util.SocketUtils$SocketType$2",
     "org.springframework.util.SocketUtils$SocketType$1",
     "org.springframework.core.codec.CodecException",
     "org.springframework.core.env.SimpleCommandLinePropertySource",
     "org.springframework.util.MimeType",
     "org.springframework.core.io.support.PropertiesLoaderUtils",
     "org.springframework.cglib.util.ParallelSorter$FloatComparer",
     "org.springframework.core.io.ContextResource",
     "org.springframework.core.annotation.AnnotationsProcessor",
     "org.springframework.core.convert.TypeDescriptor$AnnotatedElementAdapter",
     "org.springframework.cglib.transform.AbstractClassLoader$1",
     "org.springframework.cglib.proxy.Mixin$Route",
     "org.springframework.core.MethodParameter",
     "org.springframework.core.task.SimpleAsyncTaskExecutor",
     "org.springframework.cglib.util.StringSwitcher$Generator",
     "org.springframework.cglib.beans.BulkBean$BulkBeanKey",
     "org.springframework.objenesis.instantiator.ObjectInstantiator",
     "org.springframework.core.io.support.PropertiesLoaderSupport",
     "org.springframework.lang.UsesJava7",
     "org.springframework.lang.UsesJava8",
     "org.springframework.cglib.proxy.NoOp",
     "org.springframework.objenesis.instantiator.android.Android17Instantiator",
     "org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator",
     "org.springframework.core.env.ReadOnlySystemAttributesMap",
     "org.springframework.core.env.PropertySources",
     "org.springframework.cglib.proxy.LazyLoaderGenerator",
     "org.springframework.core.convert.support.PropertiesToStringConverter",
     "org.springframework.core.convert.support.CollectionToArrayConverter",
     "org.springframework.cglib.core.ClassEmitter$2",
     "org.springframework.cglib.core.ClassEmitter$1",
     "org.springframework.core.ResolvableType$VariableResolver",
     "org.springframework.asm.CurrentFrame",
     "org.springframework.util.FastByteArrayOutputStream",
     "org.springframework.core.convert.support.NumberToCharacterConverter",
     "org.springframework.asm.ClassWriter",
     "org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver",
     "org.springframework.core.env.AbstractPropertyResolver",
     "org.springframework.core.io.support.package-info",
     "org.springframework.core.env.ProfilesParser$ParsedProfiles",
     "org.springframework.cglib.core.ClassEmitter$3",
     "org.springframework.core.codec.Encoder",
     "org.springframework.objenesis.instantiator.sun.SunReflectionFactoryInstantiator",
     "org.springframework.util.SocketUtils$1",
     "org.springframework.cglib.core.KeyFactory",
     "org.springframework.core.ResolvableType$DefaultVariableResolver",
     "org.springframework.core.style.package-info",
     "org.springframework.core.env.StandardEnvironment",
     "org.springframework.util.MimeTypeUtils",
     "org.springframework.core.io.buffer.DataBuffer",
     "org.springframework.core.ResolvableType$TypeVariablesVariableResolver",
     "org.springframework.asm.Attribute$Set",
     "org.springframework.cglib.core.ObjectSwitchCallback",
     "org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor",
     "org.springframework.cglib.transform.impl.InterceptFieldFilter",
     "org.springframework.cglib.SpringCglibInfo",
     "org.springframework.core.io.buffer.DefaultDataBufferFactory",
     "org.springframework.core.io.FileSystemResourceLoader$FileSystemContextResource",
     "org.springframework.core.type.classreading.SimpleAnnotationMetadata",
     "org.springframework.core.io.ByteArrayResource",
     "org.springframework.core.io.WritableResource",
     "org.springframework.util.ErrorHandler",
     "org.springframework.objenesis.ObjenesisSerializer",
     "org.springframework.core.env.PropertyResolver",
     "org.springframework.core.serializer.support.SerializationFailedException",
     "org.springframework.util.package-info",
     "org.springframework.objenesis.strategy.BaseInstantiatorStrategy",
     "org.springframework.cglib.core.ReflectUtils$4",
     "org.springframework.asm.Opcodes",
     "org.springframework.util.AlternativeJdkIdGenerator",
     "org.springframework.cglib.core.ReflectUtils$3",
     "org.springframework.cglib.core.ReflectUtils$2",
     "org.springframework.core.io.support.SpringFactoriesLoader",
     "org.springframework.cglib.core.ReflectUtils$1",
     "org.springframework.cglib.core.ReflectUtils$7",
     "org.springframework.cglib.core.ReflectUtils$6",
     "org.springframework.cglib.core.ReflectUtils$5",
     "org.springframework.util.PatternMatchUtils",
     "org.springframework.core.PrioritizedParameterNameDiscoverer",
     "org.springframework.core.log.LogAccessor",
     "org.springframework.util.xml.StaxUtils",
     "org.springframework.util.LinkedCaseInsensitiveMap$Values",
     "org.springframework.core.codec.DataBufferEncoder",
     "org.springframework.core.env.CompositePropertySource",
     "org.springframework.core.style.StylerUtils",
     "org.springframework.core.convert.support.ObjectToArrayConverter",
     "org.springframework.objenesis.instantiator.util.DefineClassHelper$1",
     "org.springframework.core.io.InputStreamSource",
     "org.springframework.cglib.beans.BeanCopier$BeanCopierKey",
     "org.springframework.cglib.transform.AbstractClassLoader",
     "org.springframework.core.env.PropertySource",
     "org.springframework.util.concurrent.ListenableFuture",
     "org.springframework.core.convert.support.GenericConversionService$1",
     "org.springframework.core.convert.support.CollectionToCollectionConverter",
     "org.springframework.core.env.EnumerablePropertySource",
     "org.springframework.cglib.beans.BeanMapEmitter$3",
     "org.springframework.core.annotation.AnnotatedElementUtils$AnnotatedElementForAnnotations",
     "org.springframework.cglib.reflect.MethodDelegate$MethodDelegateKey",
     "org.springframework.core.annotation.AnnotationTypeMappings",
     "org.springframework.core.convert.support.StringToLocaleConverter",
     "org.springframework.cglib.beans.BeanMapEmitter$2",
     "org.springframework.cglib.beans.BeanMapEmitter$1",
     "org.springframework.core.io.buffer.DataBufferUtils",
     "org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter",
     "org.springframework.core.type.classreading.ClassMetadataReadingVisitor",
     "org.springframework.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
     "org.springframework.core.convert.support.EnumToIntegerConverter",
     "org.springframework.core.io.package-info",
     "org.springframework.util.PathMatcher",
     "org.springframework.objenesis.instantiator.annotations.Instantiator",
     "org.springframework.core.env.PropertiesPropertySource",
     "org.springframework.core.style.ToStringCreator",
     "org.springframework.util.MultiValueMap",
     "org.springframework.core.io.AbstractFileResolvingResource$VfsResourceDelegate",
     "org.springframework.core.OrderComparator",
     "org.springframework.util.ResourceUtils",
     "org.springframework.core.CollectionFactory",
     "org.springframework.cglib.core.NamingPolicy",
     "org.springframework.objenesis.instantiator.android.AndroidSerializationInstantiator",
     "org.springframework.core.DefaultParameterNameDiscoverer",
     "org.springframework.core.package-info",
     "org.springframework.core.convert.converter.ConvertingComparator$ConversionServiceConverter",
     "org.springframework.util.LinkedMultiValueMap",
     "org.springframework.objenesis.instantiator.basic.ObjectInputStreamInstantiator$MockStream",
     "org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor",
     "org.springframework.core.convert.ConversionFailedException",
     "org.springframework.core.annotation.AnnotationTypeMapping$MirrorSets",
     "org.springframework.cglib.beans.BeanMapEmitter",
     "org.springframework.cglib.core.CodeGenerationException",
     "org.springframework.util.SocketUtils$SocketType",
     "org.springframework.core.log.LogMessage$FormatMessage",
     "org.springframework.util.RouteMatcher",
     "org.springframework.cglib.proxy.MixinEverythingEmitter",
     "org.springframework.cglib.transform.ClassTransformerFactory",
     "org.springframework.core.annotation.MergedAnnotations",
     "org.springframework.asm.Frame",
     "org.springframework.core.annotation.RepeatableContainers$ExplicitRepeatableContainer",
     "org.springframework.objenesis.SpringObjenesis",
     "org.springframework.util.AntPathMatcher$AntPathStringMatcher",
     "org.springframework.objenesis.instantiator.util.DefineClassHelper$Java11",
     "org.springframework.core.io.buffer.DataBufferUtils$WritableByteChannelSubscriber",
     "org.springframework.core.convert.support.GenericConversionService$Converters",
     "org.springframework.core.io.ClassRelativeResourceLoader",
     "org.springframework.core.OverridingClassLoader",
     "org.springframework.asm.SymbolTable$Entry",
     "org.springframework.cglib.util.StringSwitcher$Generator$1",
     "org.springframework.core.convert.ConversionException",
     "org.springframework.cglib.transform.impl.AbstractInterceptFieldCallback",
     "org.springframework.core.io.buffer.DefaultDataBuffer$SlicedDefaultDataBuffer",
     "org.springframework.core.convert.support.ObjectToOptionalConverter",
     "org.springframework.util.backoff.FixedBackOff$FixedBackOffExecution",
     "org.springframework.cglib.proxy.FixedValueGenerator",
     "org.springframework.util.PropertiesPersister",
     "org.springframework.cglib.transform.impl.AddDelegateTransformer",
     "org.springframework.core.MethodIntrospector$MetadataLookup",
     "org.springframework.core.io.ClassRelativeResourceLoader$ClassRelativeContextResource",
     "org.springframework.cglib.core.AsmApi",
     "org.springframework.asm.Type",
     "org.springframework.core.type.classreading.MergedAnnotationReadingVisitor$ArrayVisitor",
     "org.springframework.core.io.buffer.DefaultDataBuffer",
     "org.springframework.cglib.core.DuplicatesPredicate$UnnecessaryBridgeFinder$1",
     "org.springframework.core.log.LogMessage",
     "org.springframework.cglib.util.ParallelSorter$IntComparer",
     "org.springframework.util.xml.AbstractXMLStreamReader",
     "org.springframework.cglib.proxy.DispatcherGenerator",
     "org.springframework.core.io.buffer.DefaultDataBuffer$DefaultDataBufferOutputStream",
     "org.springframework.objenesis.instantiator.basic.ObjectStreamClassInstantiator",
     "org.springframework.util.unit.DataSize",
     "org.springframework.core.type.filter.RegexPatternTypeFilter",
     "org.springframework.cglib.reflect.ConstructorDelegate$ConstructorKey",
     "org.springframework.objenesis.instantiator.sun.SunReflectionFactorySerializationInstantiator",
     "org.springframework.core.ReactiveAdapterRegistry$CoroutinesRegistrar",
     "org.springframework.core.env.SystemEnvironmentPropertySource",
     "org.springframework.util.xml.package-info",
     "org.springframework.core.codec.ByteArrayDecoder",
     "org.springframework.core.convert.support.StreamConverter",
     "org.springframework.util.InstanceFilter",
     "org.springframework.lang.NonNullApi",
     "org.springframework.core.env.ProfilesParser$Operator",
     "org.springframework.asm.ModuleVisitor",
     "org.springframework.core.CoroutinesUtils$monoToDeferred$1",
     "org.springframework.cglib.core.EmitUtils$16",
     "org.springframework.cglib.core.EmitUtils$14",
     "org.springframework.cglib.core.EmitUtils$15",
     "org.springframework.cglib.core.EmitUtils$12",
     "org.springframework.cglib.core.AbstractClassGenerator",
     "org.springframework.cglib.core.EmitUtils$13",
     "org.springframework.cglib.core.EmitUtils$10",
     "org.springframework.cglib.core.EmitUtils$11",
     "org.springframework.core.serializer.support.SerializationDelegate",
     "org.springframework.util.AntPathMatcher$AntPatternComparator$PatternInfo",
     "org.springframework.util.RouteMatcher$Route",
     "org.springframework.cglib.transform.impl.InterceptFieldCallback",
     "org.springframework.core.env.JOptCommandLinePropertySource",
     "org.springframework.core.annotation.AnnotationTypeMapping",
     "org.springframework.asm.FieldVisitor",
     "org.springframework.core.annotation.MergedAnnotation$Adapt",
     "org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber",
     "org.springframework.util.PropertyPlaceholderHelper",
     "org.springframework.core.convert.support.ArrayToObjectConverter",
     "org.springframework.cglib.proxy.MixinEmitter",
     "org.springframework.core.annotation.AnnotationUtils",
     "org.springframework.core.annotation.SynthesizingMethodParameter",
     "org.springframework.util.StopWatch",
     "org.springframework.core.codec.ByteBufferDecoder",
     "org.springframework.core.annotation.package-info",
     "org.springframework.util.StopWatch$TaskInfo",
     "org.springframework.cglib.core.ClassNameReader",
     "org.springframework.cglib.util.SorterTemplate",
     "org.springframework.objenesis.instantiator.perc.PercInstantiator",
     "org.springframework.core.env.PropertyResolverExtensionsKt",
     "org.springframework.cglib.core.FieldTypeCustomizer",
     "org.springframework.core.Ordered",
     "org.springframework.cglib.proxy.Enhancer",
     "org.springframework.core.task.SimpleAsyncTaskExecutor$ConcurrencyThrottleAdapter",
     "org.springframework.core.style.DefaultToStringStyler",
     "org.springframework.util.ConcurrentReferenceHashMap$TaskOption",
     "org.springframework.cglib.proxy.CallbackGenerator$Context",
     "org.springframework.core.ResolvableTypeProvider",
     "org.springframework.util.concurrent.ListenableFutureCallback",
     "org.springframework.asm.ConstantDynamic",
     "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey",
     "org.springframework.lang.Nullable",
     "org.springframework.util.xml.StaxStreamXMLReader",
     "org.springframework.cglib.reflect.ConstructorDelegate",
     "org.springframework.cglib.core.ProcessArrayCallback",
     "org.springframework.core.NamedInheritableThreadLocal",
     "org.springframework.objenesis.instantiator.basic.ConstructorInstantiator",
     "org.springframework.core.DecoratingProxy",
     "org.springframework.util.ConcurrentReferenceHashMap$Entries",
     "org.springframework.util.CollectionUtils$MultiValueMapAdapter",
     "org.springframework.core.serializer.support.SerializingConverter",
     "org.springframework.core.annotation.MergedAnnotationCollectors",
     "org.springframework.util.IdGenerator",
     "org.springframework.asm.MethodVisitor",
     "org.springframework.cglib.proxy.Proxy$ProxyImpl",
     "org.springframework.cglib.proxy.CallbackFilter",
     "org.springframework.cglib.proxy.InvocationHandlerGenerator",
     "org.springframework.core.type.classreading.ClassMetadataReadingVisitor$EmptyMethodVisitor",
     "org.springframework.util.AntPathMatcher$PathSeparatorPatternCache",
     "org.springframework.cglib.proxy.Dispatcher",
     "org.springframework.util.LinkedCaseInsensitiveMap$EntrySetIterator",
     "org.springframework.cglib.transform.AbstractProcessTask",
     "org.springframework.core.type.ClassMetadata",
     "org.springframework.cglib.core.DuplicatesPredicate",
     "org.springframework.util.comparator.BooleanComparator",
     "org.springframework.cglib.core.HashCodeCustomizer",
     "org.springframework.cglib.proxy.BridgeMethodResolver$BridgedFinder$1",
     "org.springframework.core.env.PropertySource$StubPropertySource",
     "org.springframework.core.env.ProfilesParser$Context",
     "org.springframework.core.SpringProperties",
     "org.springframework.core.annotation.AttributeMethods",
     "org.springframework.core.ReactiveAdapterRegistry",
     "org.springframework.util.AntPathMatcher$AntPatternComparator",
     "org.springframework.util.ResizableByteArrayOutputStream",
     "org.springframework.core.ReactiveAdapter",
     "org.springframework.asm.Context",
     "org.springframework.cglib.reflect.MulticastDelegate",
     "org.springframework.cglib.core.ClassNameReader$1",
     "org.springframework.core.type.classreading.AnnotationReadingVisitorUtils",
     "org.springframework.core.type.classreading.SimpleMethodMetadata",
     "org.springframework.core.convert.support.AbstractConditionalEnumConverter",
     "org.springframework.cglib.core.Predicate",
     "org.springframework.core.io.buffer.DataBufferUtils$Matcher",
     "org.springframework.util.FileSystemUtils",
     "org.springframework.core.LocalVariableTableParameterNameDiscoverer",
     "org.springframework.util.xml.StaxEventHandler$LocatorLocationAdapter",
     "org.springframework.cglib.transform.ClassFilterTransformer",
     "org.springframework.core.type.classreading.MergedAnnotationReadingVisitor",
     "org.springframework.asm.MethodWriter",
     "org.springframework.cglib.core.TinyBitSet",
     "org.springframework.util.CommonsLogWriter",
     "org.springframework.cglib.reflect.FastClassEmitter$2",
     "org.springframework.cglib.reflect.FastClassEmitter$1",
     "org.springframework.cglib.reflect.FastClassEmitter$4",
     "org.springframework.objenesis.instantiator.SerializationInstantiatorHelper",
     "org.springframework.cglib.reflect.FastClassEmitter$3",
     "org.springframework.core.convert.support.ConvertingPropertyEditorAdapter",
     "org.springframework.objenesis.ObjenesisException",
     "org.springframework.lang.UsesSunHttpServer",
     "org.springframework.core.io.buffer.NettyDataBufferFactory",
     "org.springframework.core.io.UrlResource",
     "org.springframework.core.convert.support.GenericConversionService$ConverterAdapter",
     "org.springframework.asm.Symbol",
     "org.springframework.core.convert.support.CharacterToNumberFactory",
     "org.springframework.core.io.FileSystemResourceLoader",
     "org.springframework.cglib.beans.FixedKeySet",
     "org.springframework.core.type.package-info",
     "org.springframework.util.concurrent.ListenableFutureCallbackRegistry$1",
     "org.springframework.core.io.VfsResource",
     "org.springframework.core.type.filter.AspectJTypeFilter",
     "org.springframework.util.comparator.package-info",
     "org.springframework.util.FileSystemUtils$2",
     "org.springframework.core.codec.ResourceDecoder",
     "org.springframework.util.FileSystemUtils$1",
     "org.springframework.core.codec.AbstractSingleValueEncoder",
     "org.springframework.core.io.VfsUtils",
     "org.springframework.core.SimpleAliasRegistry",
     "org.springframework.core.convert.converter.ConverterFactory",
     "org.springframework.core.io.buffer.DataBufferUtils$WriteCompletionHandler",
     "org.springframework.core.convert.support.StringToCollectionConverter",
     "org.springframework.util.SystemPropertyUtils$SystemPropertyPlaceholderResolver",
     "org.springframework.core.annotation.MissingMergedAnnotation",
     "org.springframework.asm.Attribute",
     "org.springframework.util.SimpleRouteMatcher$DefaultRoute",
     "org.springframework.asm.Handler",
     "org.springframework.util.ReflectionUtils",
     "org.springframework.util.LinkedCaseInsensitiveMap$KeySet",
     "org.springframework.cglib.beans.ImmutableBean$Generator",
     "org.springframework.core.annotation.MergedAnnotations$SearchStrategy",
     "org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor",
     "org.springframework.cglib.transform.ClassTransformer",
     "org.springframework.core.io.support.DefaultPropertySourceFactory",
     "org.springframework.util.Assert",
     "org.springframework.cglib.transform.AbstractClassTransformer",
     "org.springframework.core.ParameterNameDiscoverer",
     "org.springframework.util.StringValueResolver",
     "org.springframework.cglib.proxy.Mixin$Generator",
     "org.springframework.core.convert.support.ConfigurableConversionService",
     "org.springframework.cglib.reflect.FastMember",
     "org.springframework.cglib.util.ParallelSorterEmitter",
     "org.springframework.core.codec.DecodingException",
     "org.springframework.util.concurrent.SettableListenableFuture",
     "org.springframework.cglib.core.MethodInfo",
     "org.springframework.core.convert.support.StringToNumberConverterFactory",
     "org.springframework.asm.Constants",
     "org.springframework.cglib.util.ParallelSorter",
     "org.springframework.util.CustomizableThreadCreator",
     "org.springframework.cglib.proxy.Mixin$MixinKey",
     "org.springframework.cglib.transform.MethodFilterTransformer",
     "org.springframework.core.GenericTypeResolver",
     "org.springframework.cglib.reflect.FastConstructor",
     "org.springframework.cglib.core.ReflectUtils",
     "org.springframework.cglib.core.Transformer",
     "org.springframework.core.task.SyncTaskExecutor",
     "org.springframework.cglib.reflect.MulticastDelegate$Generator$1",
     "org.springframework.core.log.LogDelegateFactory",
     "org.springframework.asm.Edge",
     "org.springframework.cglib.proxy.MethodInterceptorGenerator",
     "org.springframework.util.CollectionUtils",
     "org.springframework.core.annotation.IntrospectionFailureLogger$1",
     "org.springframework.core.env.package-info",
     "org.springframework.core.annotation.IntrospectionFailureLogger$2",
     "org.springframework.core.convert.support.DefaultConversionService",
     "org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData",
     "org.springframework.core.annotation.AnnotatedElementUtils",
     "org.springframework.cglib.reflect.FastMethod",
     "org.springframework.core.codec.package-info",
     "org.springframework.cglib.beans.BeanGenerator$BeanGeneratorKey",
     "org.springframework.core.ReactiveAdapterRegistry$RxJava1Registrar",
     "org.springframework.util.function.package-info",
     "org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager",
     "org.springframework.objenesis.instantiator.gcj.GCJInstantiatorBase",
     "org.springframework.core.env.MissingRequiredPropertiesException",
     "org.springframework.core.env.ConfigurableEnvironment",
     "org.springframework.util.MethodInvoker",
     "org.springframework.util.concurrent.FutureAdapter$State",
     "org.springframework.cglib.core.ClassEmitter$FieldInfo",
     "org.springframework.cglib.core.Signature",
     "org.springframework.objenesis.instantiator.gcj.GCJInstantiatorBase$DummyStream",
     "org.springframework.core.log.CompositeLog",
     "org.springframework.core.convert.converter.ConditionalGenericConverter",
     "org.springframework.core.task.package-info",
     "org.springframework.cglib.proxy.Factory",
     "org.springframework.objenesis.strategy.SingleInstantiatorStrategy",
     "org.springframework.core.io.PathResource",
     "org.springframework.cglib.transform.MethodFilter",
     "org.springframework.util.comparator.InstanceComparator",
     "org.springframework.cglib.transform.impl.FieldProviderTransformer",
     "org.springframework.util.xml.AbstractStaxXMLReader$StaxLocator",
     "org.springframework.core.type.filter.AssignableTypeFilter",
     "org.springframework.core.convert.support.IntegerToEnumConverterFactory",
     "org.springframework.core.annotation.AnnotationTypeMappings$Cache",
     "org.springframework.util.ConcurrentReferenceHashMap$Reference",
     "org.springframework.cglib.core.Customizer",
     "org.springframework.util.xml.AbstractStaxXMLReader",
     "org.springframework.util.ConcurrentReferenceHashMap$Segment",
     "org.springframework.core.serializer.DefaultSerializer",
     "org.springframework.core.io.buffer.DataBufferWrapper",
     "org.springframework.cglib.proxy.BridgeMethodResolver",
     "org.springframework.core.ResolvableType$SyntheticParameterizedType",
     "org.springframework.core.log.package-info",
     "org.springframework.core.annotation.MergedAnnotationSelectors$Nearest",
     "org.springframework.core.io.support.LocalizedResourceHelper",
     "org.springframework.objenesis.strategy.PlatformDescription",
     "org.springframework.util.MimeTypeUtils$ConcurrentLruCache",
     "org.springframework.core.convert.support.StringToTimeZoneConverter",
     "org.springframework.util.ConcurrentReferenceHashMap$EntryIterator",
     "org.springframework.core.SmartClassLoader",
     "org.springframework.core.io.ProtocolResolver",
     "org.springframework.cglib.core.Block",
     "org.springframework.cglib.proxy.NoOp$1",
     "org.springframework.util.concurrent.SettableListenableFuture$SettableTask",
     "org.springframework.util.concurrent.ListenableFutureAdapter$1",
     "org.springframework.util.AutoPopulatingList$ReflectiveElementFactory",
     "org.springframework.core.convert.support.ObjectToOptionalConverter$GenericTypeDescriptor",
     "org.springframework.core.io.buffer.DataBufferUtils$ReadableByteChannelGenerator",
     "org.springframework.util.concurrent.FailureCallback",
     "org.springframework.core.codec.Decoder",
     "org.springframework.core.io.buffer.DataBufferUtils$ReadCompletionHandler",
     "org.springframework.asm.Label",
     "org.springframework.core.MethodClassKey",
     "org.springframework.util.xml.SimpleSaxErrorHandler",
     "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
     "org.springframework.core.io.AbstractFileResolvingResource",
     "org.springframework.core.io.buffer.DefaultDataBuffer$1",
     "org.springframework.cglib.proxy.BridgeMethodResolver$BridgedFinder",
     "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
     "org.springframework.core.annotation.Order",
     "org.springframework.core.annotation.TypeMappedAnnotations$MergedAnnotationFinder",
     "org.springframework.objenesis.instantiator.util.ClassUtils",
     "org.springframework.core.annotation.IntrospectionFailureLogger",
     "org.springframework.cglib.core.LocalVariablesSorter",
     "org.springframework.asm.MethodTooLargeException",
     "org.springframework.cglib.util.ParallelSorter$LongComparer",
     "org.springframework.core.annotation.SynthesizedMergedAnnotationInvocationHandler",
     "org.springframework.core.NestedIOException",
     "org.springframework.cglib.core.Constants",
     "org.springframework.core.annotation.AbstractMergedAnnotation",
     "org.springframework.core.type.classreading.MethodMetadataReadingVisitor",
     "org.springframework.core.type.classreading.MetadataReaderFactory",
     "org.springframework.asm.ClassReader",
     "org.springframework.asm.ByteVector",
     "org.springframework.core.io.support.PropertySourceFactory",
     "org.springframework.core.serializer.Deserializer",
     "org.springframework.core.codec.CharSequenceEncoder",
     "org.springframework.objenesis.instantiator.gcj.GCJSerializationInstantiator",
     "org.springframework.util.xml.SimpleTransformErrorListener",
     "org.springframework.core.annotation.RepeatableContainers$1",
     "org.springframework.core.ReactiveAdapterRegistry$ReactorJdkFlowAdapterRegistrar",
     "org.springframework.core.type.classreading.SimpleAnnotationMetadataReadingVisitor$Source",
     "org.springframework.cglib.reflect.FastClassEmitter",
     "org.springframework.cglib.core.ClassesKey",
     "org.springframework.objenesis.ObjenesisHelper",
     "org.springframework.util.SimpleRouteMatcher",
     "org.springframework.cglib.core.internal.LoadingCache",
     "org.springframework.util.backoff.FixedBackOff",
     "org.springframework.core.task.TaskExecutor",
     "org.springframework.cglib.core.SpringNamingPolicy",
     "org.springframework.cglib.core.ProcessSwitchCallback",
     "org.springframework.cglib.transform.impl.FieldProvider",
     "org.springframework.util.backoff.BackOffExecution",
     "org.springframework.objenesis.ObjenesisBase",
     "org.springframework.core.annotation.MergedAnnotationsCollection",
     "org.springframework.objenesis.instantiator.sun.MagicInstantiator",
     "org.springframework.cglib.proxy.LazyLoader",
     "org.springframework.cglib.transform.impl.UndeclaredThrowableStrategy",
     "org.springframework.core.AttributeAccessor",
     "org.springframework.core.ReactiveAdapterRegistry$1",
     "org.springframework.core.GraalDetector",
     "org.springframework.cglib.core.DuplicatesPredicate$UnnecessaryBridgeFinder",
     "org.springframework.util.concurrent.MonoToListenableFutureAdapter",
     "org.springframework.core.CoroutinesUtils$invokeSuspendingFunction$mono$2",
     "org.springframework.core.CoroutinesUtils$invokeSuspendingFunction$mono$1",
     "org.springframework.core.annotation.AnnotationAwareOrderComparator",
     "org.springframework.util.FileCopyUtils",
     "org.springframework.cglib.beans.BeanMap",
     "org.springframework.core.task.support.ExecutorServiceAdapter",
     "org.springframework.core.env.CommandLinePropertySource",
     "org.springframework.core.io.buffer.DefaultDataBuffer$DefaultDataBufferInputStream",
     "org.springframework.util.LinkedCaseInsensitiveMap",
     "org.springframework.cglib.proxy.Enhancer$EnhancerFactoryData",
     "org.springframework.core.convert.support.CollectionToObjectConverter",
     "org.springframework.core.annotation.AnnotationsScanner",
     "org.springframework.util.ReflectionUtils$MethodCallback",
     "org.springframework.util.ConcurrentReferenceHashMap",
     "org.springframework.core.annotation.RepeatableContainers$NoRepeatableContainers",
     "org.springframework.core.log.LogMessage$FormatMessageX",
     "org.springframework.objenesis.instantiator.util.UnsafeUtils",
     "org.springframework.util.concurrent.SuccessCallback",
     "org.springframework.core.io.support.EncodedResource",
     "org.springframework.util.xml.XMLEventStreamReader",
     "org.springframework.objenesis.strategy.InstantiatorStrategy",
     "org.springframework.core.type.classreading.SimpleMetadataReader",
     "org.springframework.core.serializer.package-info",
     "org.springframework.cglib.reflect.ConstructorDelegate$Generator",
     "org.springframework.util.TypeUtils",
     "org.springframework.core.annotation.RepeatableContainers$StandardRepeatableContainers",
     "org.springframework.cglib.proxy.MethodProxy$1",
     "org.springframework.core.type.StandardAnnotationMetadata",
     "org.springframework.core.type.classreading.SimpleAnnotationMetadataReadingVisitor",
     "org.springframework.util.concurrent.CompletableToListenableFutureAdapter",
     "org.springframework.core.log.LogMessage$FormatMessage1",
     "org.springframework.core.log.LogMessage$FormatMessage2",
     "org.springframework.core.log.LogMessage$FormatMessage3",
     "org.springframework.core.type.classreading.SimpleMetadataReaderFactory",
     "org.springframework.core.log.LogMessage$FormatMessage4",
     "org.springframework.core.ResolvableType$WildcardBounds$Kind",
     "org.springframework.core.annotation.MergedAnnotationSelector",
     "org.springframework.core.annotation.AnnotationAttributes",
     "org.springframework.core.io.buffer.DataBufferUtils$CompositeMatcher",
     "org.springframework.cglib.util.StringSwitcher",
     "org.springframework.core.convert.support.ConversionServiceFactory",
     "org.springframework.cglib.proxy.MethodInterceptorGenerator$2",
     "org.springframework.cglib.proxy.MethodInterceptorGenerator$1",
     "org.springframework.core.convert.support.ByteBufferConverter",
     "org.springframework.util.concurrent.ListenableFutureTask",
     "org.springframework.core.io.FileUrlResource",
     "org.springframework.core.convert.converter.GenericConverter",
     "org.springframework.cglib.core.internal.Function",
     "org.springframework.core.annotation.TypeMappedAnnotations$IsPresent",
     "org.springframework.core.annotation.PackagesAnnotationFilter",
     "org.springframework.core.codec.AbstractEncoder",
     "org.springframework.core.NestedRuntimeException",
     "org.springframework.core.io.ResourceLoader",
     "org.springframework.cglib.proxy.NoOpGenerator",
     "org.springframework.cglib.transform.impl.AddInitTransformer",
     "org.springframework.core.convert.support.ObjectToCollectionConverter",
     "org.springframework.core.codec.ByteArrayEncoder",
     "org.springframework.cglib.transform.ClassReaderGenerator",
     "org.springframework.core.convert.Property",
     "org.springframework.core.convert.support.ObjectToObjectConverter",
     "org.springframework.core.AttributeAccessorSupport",
     "org.springframework.core.env.Environment",
     "org.springframework.core.convert.package-info",
     "org.springframework.core.io.ClassPathResource",
     "org.springframework.cglib.transform.impl.AccessFieldTransformer",
     "org.springframework.cglib.transform.ClassEmitterTransformer",
     "org.springframework.core.CollectionFactory$1",
     "org.springframework.core.convert.support.ArrayToStringConverter",
     "org.springframework.util.xml.AbstractXMLEventReader",
     "org.springframework.core.annotation.MergedAnnotationsCollection$AnnotationsSpliterator",
     "org.springframework.core.NestedCheckedException",
     "org.springframework.cglib.util.StringSwitcher$StringSwitcherKey",
     "org.springframework.core.type.classreading.ClassMetadataReadingVisitor$EmptyAnnotationVisitor",
     "org.springframework.core.ExceptionDepthComparator",
     "org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor",
     "org.springframework.core.convert.support.ZonedDateTimeToCalendarConverter",
     "org.springframework.cglib.beans.BulkBean",
     "org.springframework.cglib.proxy.InvocationHandler",
     "org.springframework.cglib.transform.impl.InterceptFieldTransformer$1",
     "org.springframework.core.annotation.MergedAnnotation",
     "org.springframework.cglib.transform.ClassVisitorTee",
     "org.springframework.core.SerializableTypeWrapper",
     "org.springframework.core.OrderComparator$OrderSourceProvider",
     "org.springframework.core.convert.support.IntegerToEnumConverterFactory$IntegerToEnum",
     "org.springframework.core.io.support.ResourcePatternResolver",
     "org.springframework.core.type.AnnotatedTypeMetadata",
     "org.springframework.core.env.AbstractEnvironment",
     "org.springframework.core.task.AsyncTaskExecutor",
     "org.springframework.cglib.core.WeakCacheKey",
     "org.springframework.core.codec.ResourceRegionEncoder",
     "org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter",
     "org.springframework.cglib.beans.BeanGenerator",
     "org.springframework.cglib.core.DebuggingClassWriter",
     "org.springframework.cglib.transform.TransformingClassLoader",
     "org.springframework.cglib.beans.BeanMap$Generator",
     "org.springframework.cglib.proxy.CallbackHelper",
     "org.springframework.core.type.filter.AnnotationTypeFilter",
     "org.springframework.core.annotation.AnnotationConfigurationException",
     "org.springframework.util.StreamUtils$NonClosingInputStream",
     "org.springframework.objenesis.ObjenesisStd",
     "org.springframework.util.AutoPopulatingList$ElementFactory",
     "org.springframework.util.xml.ListBasedXMLEventReader",
     "org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor",
     "org.springframework.cglib.proxy.Proxy$1",
     "org.springframework.core.convert.support.GenericConversionService$NoOpConverter",
     "org.springframework.cglib.core.ClassesKey$Key",
     "org.springframework.core.annotation.TypeMappedAnnotation",
     "org.springframework.objenesis.strategy.StdInstantiatorStrategy",
     "org.springframework.core.type.filter.AbstractClassTestingTypeFilter",
     "org.springframework.core.env.PropertySourcesPropertyResolver",
     "org.springframework.util.xml.StaxEventXMLReader$1",
     "org.springframework.util.ConcurrentReferenceHashMap$Task",
     "org.springframework.core.codec.AbstractDataBufferDecoder",
     "org.springframework.cglib.core.LocalVariablesSorter$State",
     "org.springframework.core.io.support.ResourcePatternUtils",
     "org.springframework.core.ParameterizedTypeReference",
     "org.springframework.util.comparator.InvertibleComparator",
     "org.springframework.util.xml.TransformerUtils",
     "org.springframework.core.annotation.MergedAnnotationPredicates",
     "org.springframework.objenesis.instantiator.util.ClassDefinitionUtils",
     "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
     "org.springframework.core.KotlinDetector",
     "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy",
     "org.springframework.core.io.buffer.package-info",
     "org.springframework.asm.ModuleWriter",
     "org.springframework.cglib.core.MethodInfoTransformer",
     "org.springframework.core.serializer.support.DeserializingConverter",
     "org.springframework.util.function.SupplierUtils",
     "org.springframework.core.ResolvableType$EmptyType",
     "org.springframework.cglib.transform.impl.InterceptFieldTransformer",
     "org.springframework.util.ObjectUtils",
     "org.springframework.cglib.transform.ClassFilter",
     "org.springframework.util.ReflectionUtils$MethodFilter",
     "org.springframework.cglib.proxy.MethodProxy",
     "org.springframework.objenesis.instantiator.android.Android10Instantiator",
     "org.springframework.util.xml.StaxEventHandler",
     "org.springframework.util.unit.package-info",
     "org.springframework.core.KotlinReflectionParameterNameDiscoverer",
     "org.springframework.cglib.transform.AbstractClassFilterTransformer",
     "org.springframework.core.convert.support.StringToPropertiesConverter",
     "org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource",
     "org.springframework.core.codec.StringDecoder$EndFrameBuffer",
     "org.springframework.util.FastByteArrayOutputStream$FastByteArrayInputStream",
     "org.springframework.core.env.ProfilesParser",
     "org.springframework.core.io.buffer.DataBufferUtils$KnuthMorrisPrattMatcher",
     "org.springframework.core.codec.DataBufferDecoder",
     "org.springframework.cglib.core.ClassInfo",
     "org.springframework.core.annotation.SynthesizedAnnotation",
     "org.springframework.cglib.beans.ImmutableBean",
     "org.springframework.core.SpringVersion",
     "org.springframework.util.xml.AbstractXMLReader",
     "org.springframework.core.type.MethodMetadata",
     "org.springframework.cglib.util.ParallelSorter$Generator",
     "org.springframework.objenesis.instantiator.android.Android18Instantiator",
     "org.springframework.core.annotation.AnnotationsScanner$1",
     "org.springframework.core.io.FileSystemResource",
     "org.springframework.core.ReactiveTypeDescriptor",
     "org.springframework.cglib.proxy.FixedValue",
     "org.springframework.util.ConcurrentReferenceHashMap$Restructure",
     "org.springframework.core.annotation.OrderUtils",
     "org.springframework.core.SerializableTypeWrapper$MethodParameterTypeProvider",
     "org.springframework.cglib.transform.impl.UndeclaredThrowableTransformer",
     "org.springframework.util.backoff.BackOff",
     "org.springframework.core.ResolvableType$WildcardBounds",
     "org.springframework.core.MethodIntrospector",
     "org.springframework.core.codec.ByteBufferEncoder",
     "org.springframework.core.type.filter.package-info",
     "org.springframework.cglib.core.internal.CustomizerRegistry",
     "org.springframework.core.convert.support.package-info",
     "org.springframework.core.CoroutinesUtils$deferredToMono$1",
     "org.springframework.core.annotation.TypeMappedAnnotations",
     "org.springframework.core.BridgeMethodResolver",
     "org.springframework.util.xml.DomUtils",
     "org.springframework.util.xml.DomContentHandler",
     "org.springframework.objenesis.instantiator.basic.FailingInstantiator",
     "org.springframework.core.log.LogFormatUtils",
     "org.springframework.util.concurrent.ListenableFutureCallbackRegistry",
     "org.springframework.core.task.support.package-info",
     "org.springframework.cglib.proxy.MethodProxy$CreateInfo",
     "org.springframework.core.io.DefaultResourceLoader",
     "org.springframework.core.env.AbstractEnvironment$1",
     "org.springframework.core.env.AbstractEnvironment$2",
     "org.springframework.cglib.proxy.ProxyRefDispatcher",
     "org.springframework.cglib.util.ParallelSorter$ComparatorComparer",
     "org.springframework.cglib.transform.impl.AddInitTransformer$1",
     "org.springframework.core.CoroutinesUtils",
     "org.springframework.util.concurrent.package-info",
     "org.springframework.core.type.StandardMethodMetadata",
     "org.springframework.core.style.ToStringStyler",
     "org.springframework.core.io.AbstractResource",
     "org.springframework.cglib.core.LocalVariablesSorter$1",
     "org.springframework.objenesis.Objenesis",
     "org.springframework.core.convert.converter.ConditionalConverter",
     "org.springframework.core.type.classreading.CachingMetadataReaderFactory$LocalResourceCache",
     "org.springframework.util.backoff.FixedBackOff$1",
     "org.springframework.core.type.classreading.ClassMetadataReadingVisitor$EmptyFieldVisitor",
     "org.springframework.util.StringUtils"
    ],
    "usedTypes": [
     "org.springframework.util.ReflectionUtils$FieldFilter",
     "org.springframework.core.ParameterNameDiscoverer",
     "org.springframework.core.convert.ConversionFailedException",
     "org.springframework.core.convert.support.ConfigurableConversionService",
     "org.springframework.core.type.filter.TypeFilter",
     "org.springframework.util.ReflectionUtils$FieldCallback",
     "org.springframework.core.type.ClassMetadata",
     "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
     "org.springframework.core.type.classreading.MetadataReader",
     "org.springframework.core.MethodParameter",
     "org.springframework.asm.FieldVisitor",
     "org.springframework.asm.Opcodes",
     "org.springframework.core.convert.converter.GenericConverter",
     "org.springframework.core.ResolvableType",
     "org.springframework.core.io.support.SpringFactoriesLoader",
     "org.springframework.core.GenericTypeResolver",
     "org.springframework.core.ReactiveAdapterRegistry",
     "org.springframework.core.type.filter.AnnotationTypeFilter",
     "org.springframework.core.io.Resource",
     "org.springframework.core.ReactiveAdapter",
     "org.springframework.util.ClassUtils",
     "org.springframework.core.io.ResourceLoader",
     "org.springframework.core.type.MethodMetadata",
     "org.springframework.cglib.core.ReflectUtils",
     "org.springframework.core.annotation.AnnotationUtils",
     "org.springframework.core.type.AnnotationMetadata",
     "org.springframework.core.convert.converter.ConverterRegistry",
     "org.springframework.core.type.classreading.CachingMetadataReaderFactory",
     "org.springframework.util.StopWatch",
     "org.springframework.core.convert.ConversionException",
     "org.springframework.lang.NonNullFields",
     "org.springframework.core.convert.Property",
     "org.springframework.util.CollectionUtils",
     "org.springframework.core.env.Environment",
     "org.springframework.core.ReactiveTypeDescriptor",
     "org.springframework.lang.NonNull",
     "org.springframework.core.convert.support.DefaultConversionService",
     "org.springframework.util.FileCopyUtils",
     "org.springframework.core.annotation.AnnotationAwareOrderComparator",
     "org.springframework.asm.Type",
     "org.springframework.core.annotation.AnnotatedElementUtils",
     "org.springframework.core.Ordered",
     "org.springframework.util.concurrent.ListenableFuture",
     "org.springframework.asm.ClassWriter",
     "org.springframework.core.DecoratingClassLoader",
     "org.springframework.core.io.ClassPathResource",
     "org.springframework.asm.Label",
     "org.springframework.core.BridgeMethodResolver",
     "org.springframework.util.xml.DomUtils",
     "org.springframework.util.comparator.Comparators",
     "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair",
     "org.springframework.util.ReflectionUtils$MethodCallback",
     "org.springframework.util.ConcurrentReferenceHashMap",
     "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
     "org.springframework.core.io.DefaultResourceLoader",
     "org.springframework.core.convert.TypeDescriptor",
     "org.springframework.core.env.EnvironmentCapable",
     "org.springframework.lang.Nullable",
     "org.springframework.core.convert.ConversionService",
     "org.springframework.util.SerializationUtils",
     "org.springframework.core.type.filter.AspectJTypeFilter",
     "org.springframework.core.convert.converter.Converter",
     "org.springframework.core.annotation.AliasFor",
     "org.springframework.core.annotation.Order",
     "org.springframework.core.convert.converter.ConditionalGenericConverter",
     "org.springframework.util.ObjectUtils",
     "org.springframework.core.type.filter.RegexPatternTypeFilter",
     "org.springframework.core.convert.converter.ConverterFactory",
     "org.springframework.util.TypeUtils",
     "org.springframework.util.MultiValueMap",
     "org.springframework.core.NestedIOException",
     "org.springframework.core.env.StandardEnvironment",
     "org.springframework.core.convert.support.GenericConversionService",
     "org.springframework.core.type.StandardAnnotationMetadata",
     "org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor",
     "org.springframework.lang.NonNullApi",
     "org.springframework.core.CollectionFactory",
     "org.springframework.core.type.classreading.MethodMetadataReadingVisitor",
     "org.springframework.util.ReflectionUtils$MethodFilter",
     "org.springframework.asm.ClassReader",
     "org.springframework.core.type.classreading.MetadataReaderFactory",
     "org.springframework.core.DefaultParameterNameDiscoverer",
     "org.springframework.util.ReflectionUtils",
     "org.springframework.core.type.classreading.SimpleMetadataReaderFactory",
     "org.springframework.core.annotation.AnnotationAttributes",
     "org.springframework.asm.MethodVisitor",
     "org.springframework.core.io.support.ResourcePatternResolver",
     "org.springframework.core.type.filter.AssignableTypeFilter",
     "org.springframework.util.LinkedMultiValueMap",
     "org.springframework.util.StringUtils",
     "org.springframework.util.Assert"
    ],
    "usageRatio": 0.09528795811518324,
    "children": [
     {
      "id": "org.springframework:spring-jcl:jar:5.2.0.RC2:compile",
      "coordinates": "org.springframework:spring-jcl:5.2.0.RC2",
      "groupId": "org.springframework",
      "artifactId": "spring-jcl",
      "version": "5.2.0.RC2",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 23757,
      "type": "transitive",
      "status": "used",
      "parent": "org.springframework:spring-core:jar:5.2.0.RC2:compile",
      "allTypes": [
       "org.apache.commons.logging.LogAdapter$LogApi",
       "org.apache.commons.logging.LogAdapter$LocationResolvingLogRecord",
       "org.apache.commons.logging.impl.SimpleLog",
       "org.apache.commons.logging.impl.NoOpLog",
       "org.apache.commons.logging.LogAdapter$Slf4jLog",
       "org.apache.commons.logging.LogAdapter$Log4jAdapter",
       "org.apache.commons.logging.LogAdapter$JavaUtilLog",
       "org.apache.commons.logging.LogFactory$1",
       "org.apache.commons.logging.LogAdapter$JavaUtilAdapter",
       "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog",
       "org.apache.commons.logging.LogAdapter$Slf4jAdapter",
       "org.apache.commons.logging.LogAdapter",
       "org.apache.commons.logging.Log",
       "org.apache.commons.logging.LogFactory",
       "org.apache.commons.logging.LogFactoryService",
       "org.apache.commons.logging.LogAdapter$Log4jLog",
       "org.apache.commons.logging.LogAdapter$1"
      ],
      "usedTypes": [
       "org.apache.commons.logging.Log",
       "org.apache.commons.logging.LogFactory"
      ],
      "usageRatio": 0.11764705882352941,
      "children": []
     }
    ]
   },
   {
    "id": "org.springframework:spring-beans:jar:5.2.0.RC2:compile",
    "coordinates": "org.springframework:spring-beans:5.2.0.RC2",
    "groupId": "org.springframework",
    "artifactId": "spring-beans",
    "version": "5.2.0.RC2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 684345,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.beans.factory.config.ListFactoryBean",
     "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement",
     "org.springframework.beans.factory.annotation.AnnotationBeanWiringInfoResolver",
     "org.springframework.beans.annotation.package-info",
     "org.springframework.beans.factory.parsing.SourceExtractor",
     "org.springframework.beans.factory.config.PropertyPathFactoryBean",
     "org.springframework.beans.factory.support.BeanDefinitionDefaults",
     "org.springframework.beans.factory.annotation.Autowired",
     "org.springframework.beans.factory.xml.XmlReaderContext",
     "org.springframework.beans.factory.support.AbstractBeanDefinition",
     "org.springframework.beans.factory.config.ProviderCreatingFactoryBean$TargetBeanProvider",
     "org.springframework.beans.factory.annotation.ParameterResolutionDelegate",
     "org.springframework.beans.factory.BeanInitializationException",
     "org.springframework.beans.factory.parsing.FailFastProblemReporter",
     "org.springframework.beans.factory.config.PropertyOverrideConfigurer",
     "org.springframework.beans.factory.support.SimpleAutowireCandidateResolver",
     "org.springframework.beans.factory.FactoryBeanNotInitializedException",
     "org.springframework.beans.AbstractNestablePropertyAccessor",
     "org.springframework.beans.factory.parsing.package-info",
     "org.springframework.beans.propertyeditors.CustomDateEditor",
     "org.springframework.beans.factory.xml.BeanDefinitionDocumentReader",
     "org.springframework.beans.factory.annotation.BeanFactoryAnnotationUtils",
     "org.springframework.beans.factory.support.DisposableBeanAdapter",
     "org.springframework.beans.factory.parsing.PropertyEntry",
     "org.springframework.beans.factory.support.MethodOverride",
     "org.springframework.beans.factory.annotation.InjectionMetadata",
     "org.springframework.beans.factory.parsing.AliasDefinition",
     "org.springframework.beans.factory.InjectionPoint",
     "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory",
     "org.springframework.beans.MethodInvocationException",
     "org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver",
     "org.springframework.beans.factory.config.CustomScopeConfigurer",
     "org.springframework.beans.factory.xml.UtilNamespaceHandler$ConstantBeanDefinitionParser",
     "org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport",
     "org.springframework.beans.propertyeditors.ZoneIdEditor",
     "org.springframework.beans.factory.xml.UtilNamespaceHandler$MapBeanDefinitionParser",
     "org.springframework.beans.factory.parsing.EmptyReaderEventListener",
     "org.springframework.beans.factory.support.SecurityContextProvider",
     "org.springframework.beans.factory.support.BeanDefinitionReaderUtils",
     "org.springframework.beans.factory.support.BeanDefinitionReader",
     "org.springframework.beans.factory.support.BeanNameGenerator",
     "org.springframework.beans.factory.CannotLoadBeanClassException",
     "org.springframework.beans.propertyeditors.StringArrayPropertyEditor",
     "org.springframework.beans.factory.annotation.Lookup",
     "org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder",
     "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
     "org.springframework.beans.factory.groovy.GroovyDynamicElementReader",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$SerializedBeanFactoryReference",
     "org.springframework.beans.factory.support.BeanDefinitionBuilder",
     "org.springframework.beans.factory.BeanCreationNotAllowedException",
     "org.springframework.beans.PropertyAccessorUtils",
     "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
     "org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibSubclassCreator",
     "org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler",
     "org.springframework.beans.BeanMetadataAttribute",
     "org.springframework.beans.factory.config.AbstractFactoryBean",
     "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
     "org.springframework.beans.factory.config.MapFactoryBean",
     "org.springframework.beans.factory.config.ConstructorArgumentValues",
     "org.springframework.beans.BeanMetadataAttributeAccessor",
     "org.springframework.beans.factory.FactoryBean",
     "org.springframework.beans.factory.BeanFactoryAware",
     "org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder",
     "org.springframework.beans.factory.config.BeanDefinition",
     "org.springframework.beans.factory.groovy.GroovyDynamicElementReader$_invokeMethod_closure1",
     "org.springframework.beans.PropertyMatches$FieldPropertyMatches",
     "org.springframework.beans.factory.support.BeanDefinitionValueResolver",
     "org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition",
     "org.springframework.beans.factory.xml.NamespaceHandlerSupport",
     "org.springframework.beans.factory.config.AbstractFactoryBean$EarlySingletonInvocationHandler",
     "org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser",
     "org.springframework.beans.factory.support.ConstructorResolver$ConstructorPropertiesChecker",
     "org.springframework.beans.factory.support.ManagedMap",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider$3",
     "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
     "org.springframework.beans.factory.xml.DelegatingEntityResolver",
     "org.springframework.beans.factory.parsing.Location",
     "org.springframework.beans.support.PagedListHolder",
     "org.springframework.beans.factory.support.SimpleBeanDefinitionRegistry",
     "org.springframework.beans.BeansException",
     "org.springframework.beans.MutablePropertyValues",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider$2",
     "org.springframework.beans.factory.BeanDefinitionStoreException",
     "org.springframework.beans.propertyeditors.UUIDEditor",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider$1",
     "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
     "org.springframework.beans.support.SortDefinition",
     "org.springframework.beans.factory.config.MethodInvokingFactoryBean",
     "org.springframework.beans.factory.config.YamlPropertiesFactoryBean",
     "org.springframework.beans.factory.ObjectFactory",
     "org.springframework.beans.factory.config.RuntimeBeanNameReference",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$MultiElementDescriptor",
     "org.springframework.beans.factory.BeanFactory",
     "org.springframework.beans.factory.xml.AbstractBeanDefinitionParser",
     "org.springframework.beans.propertyeditors.URIEditor",
     "org.springframework.beans.ExtendedBeanInfo$PropertyDescriptorComparator",
     "org.springframework.beans.factory.config.DeprecatedBeanWarner",
     "org.springframework.beans.factory.config.ConfigurableBeanFactory",
     "org.springframework.beans.factory.support.BeanDefinitionValueResolver$KeyedArgName",
     "org.springframework.beans.factory.config.YamlProcessor",
     "org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler",
     "org.springframework.beans.factory.config.BeanDefinitionVisitor",
     "org.springframework.beans.propertyeditors.CharArrayPropertyEditor",
     "org.springframework.beans.DirectFieldAccessor$FieldPropertyHandler",
     "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$1",
     "org.springframework.beans.factory.BeanFactoryUtils",
     "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata",
     "org.springframework.beans.factory.support.DefaultBeanNameGenerator",
     "org.springframework.beans.factory.support.ManagedList",
     "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader$3",
     "org.springframework.beans.propertyeditors.PathEditor",
     "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader$2",
     "org.springframework.beans.factory.support.ImplicitlyAppearedSingletonException",
     "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader$1",
     "org.springframework.beans.factory.support.ConstructorResolver",
     "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor",
     "org.springframework.beans.propertyeditors.PatternEditor",
     "org.springframework.beans.factory.parsing.ComponentDefinition",
     "org.springframework.beans.PropertyBatchUpdateException",
     "org.springframework.beans.factory.config.package-info",
     "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean",
     "org.springframework.beans.factory.serviceloader.ServiceLoaderFactoryBean",
     "org.springframework.beans.propertyeditors.PropertiesEditor",
     "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$1",
     "org.springframework.beans.factory.config.RuntimeBeanReference",
     "org.springframework.beans.factory.parsing.ReaderEventListener",
     "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PropertyPlaceholderConfigurerResolver",
     "org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$LookupOverrideMethodInterceptor",
     "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
     "org.springframework.beans.factory.annotation.Autowire",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$FactoryAwareOrderSourceProvider",
     "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$ShortcutDependencyDescriptor",
     "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader$GroovyRuntimeBeanReference",
     "org.springframework.beans.TypeConverterSupport",
     "org.springframework.beans.ExtendedBeanInfo$SimpleIndexedPropertyDescriptor",
     "org.springframework.beans.factory.config.ServiceLocatorFactoryBean$1",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$Jsr330Factory$Jsr330Provider",
     "org.springframework.beans.propertyeditors.CurrencyEditor",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$StreamDependencyDescriptor",
     "org.springframework.beans.BeanUtils",
     "org.springframework.beans.factory.support.ManagedProperties",
     "org.springframework.beans.BeanInstantiationException",
     "org.springframework.beans.factory.xml.BeansDtdResolver",
     "org.springframework.beans.PropertyAccessorFactory",
     "org.springframework.beans.annotation.AnnotationBeanUtils",
     "org.springframework.beans.factory.config.AutowireCapableBeanFactory",
     "org.springframework.beans.factory.Aware",
     "org.springframework.beans.factory.config.Scope",
     "org.springframework.beans.factory.config.DependencyDescriptor",
     "org.springframework.beans.factory.parsing.ProblemReporter",
     "org.springframework.beans.PropertyAccessor",
     "org.springframework.beans.factory.config.PropertiesFactoryBean",
     "org.springframework.beans.Mergeable",
     "org.springframework.beans.support.PropertyComparator",
     "org.springframework.beans.factory.support.SimpleInstantiationStrategy",
     "org.springframework.beans.factory.xml.BeanDefinitionParser",
     "org.springframework.beans.propertyeditors.CharacterEditor",
     "org.springframework.beans.propertyeditors.CustomNumberEditor",
     "org.springframework.beans.factory.support.InstantiationStrategy",
     "org.springframework.beans.factory.annotation.Qualifier",
     "org.springframework.beans.propertyeditors.CustomMapEditor",
     "org.springframework.beans.factory.BeanNameAware",
     "org.springframework.beans.factory.support.MethodReplacer",
     "org.springframework.beans.propertyeditors.LocaleEditor",
     "org.springframework.beans.TypeConverterDelegate",
     "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader$GroovyRuntimeBeanReference$GroovyPropertyValue",
     "org.springframework.beans.propertyeditors.CustomBooleanEditor",
     "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$AutowireByTypeDependencyDescriptor",
     "org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement",
     "org.springframework.beans.PropertyMatches",
     "org.springframework.beans.FatalBeanException",
     "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement",
     "org.springframework.beans.propertyeditors.ResourceBundleEditor",
     "org.springframework.beans.factory.parsing.PassThroughSourceExtractor",
     "org.springframework.beans.factory.wiring.package-info",
     "org.springframework.beans.factory.package-info",
     "org.springframework.beans.factory.parsing.ParseState",
     "org.springframework.beans.factory.config.BeanExpressionContext",
     "org.springframework.beans.factory.wiring.ClassNameBeanWiringInfoResolver",
     "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement",
     "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader",
     "org.springframework.beans.propertyeditors.CustomCollectionEditor",
     "org.springframework.beans.factory.xml.package-info",
     "org.springframework.beans.factory.annotation.Required",
     "org.springframework.beans.factory.config.ServiceLocatorFactoryBean$ServiceLocatorInvocationHandler",
     "org.springframework.beans.NotReadablePropertyException",
     "org.springframework.beans.factory.xml.PluggableSchemaResolver",
     "org.springframework.beans.propertyeditors.FileEditor",
     "org.springframework.beans.factory.config.BeanReference",
     "org.springframework.beans.factory.support.package-info",
     "org.springframework.beans.PropertyEditorRegistry",
     "org.springframework.beans.factory.support.AutowireCandidateQualifier",
     "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$FactoryBeanMethodTypeFinder",
     "org.springframework.beans.factory.support.AbstractBeanDefinitionReader",
     "org.springframework.beans.propertyeditors.InputSourceEditor",
     "org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper",
     "org.springframework.beans.factory.parsing.ImportDefinition",
     "org.springframework.beans.factory.BeanFactoryExtensionsKt$getBeanProvider$1",
     "org.springframework.beans.factory.config.ServiceLocatorFactoryBean",
     "org.springframework.beans.factory.parsing.BeanComponentDefinition",
     "org.springframework.beans.factory.xml.BeanDefinitionParserDelegate",
     "org.springframework.beans.TypeConverter",
     "org.springframework.beans.factory.parsing.AbstractComponentDefinition",
     "org.springframework.beans.factory.BeanExpressionException",
     "org.springframework.beans.factory.support.DefaultSingletonBeanRegistry",
     "org.springframework.beans.factory.support.StaticListableBeanFactory$1",
     "org.springframework.beans.CachedIntrospectionResults",
     "org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver",
     "org.springframework.beans.BeanInfoFactory",
     "org.springframework.beans.factory.support.ReplaceOverride",
     "org.springframework.beans.factory.xml.DocumentDefaultsDefinition",
     "org.springframework.beans.propertyeditors.ClassArrayEditor",
     "org.springframework.beans.TypeMismatchException",
     "org.springframework.beans.factory.support.FactoryBeanRegistrySupport",
     "org.springframework.beans.support.package-info",
     "org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver",
     "org.springframework.beans.propertyeditors.ReaderEditor",
     "org.springframework.beans.factory.DisposableBean",
     "org.springframework.beans.BeanUtils$KotlinDelegate",
     "org.springframework.beans.factory.config.YamlProcessor$DocumentMatcher",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$Jsr330Factory",
     "org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser",
     "org.springframework.beans.PropertyValues",
     "org.springframework.beans.factory.config.NamedBeanHolder",
     "org.springframework.beans.factory.parsing.DefaultsDefinition",
     "org.springframework.beans.factory.ListableBeanFactory",
     "org.springframework.beans.factory.support.RootBeanDefinition",
     "org.springframework.beans.propertyeditors.package-info",
     "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer",
     "org.springframework.beans.BeanWrapper",
     "org.springframework.beans.factory.xml.UtilNamespaceHandler$1",
     "org.springframework.beans.propertyeditors.ByteArrayPropertyEditor",
     "org.springframework.beans.factory.config.AbstractFactoryBean$1",
     "org.springframework.beans.factory.support.LookupOverride",
     "org.springframework.beans.factory.annotation.Value",
     "org.springframework.beans.PropertyValuesEditor",
     "org.springframework.beans.ExtendedBeanInfo$SimplePropertyDescriptor",
     "org.springframework.beans.propertyeditors.TimeZoneEditor",
     "org.springframework.beans.factory.config.BeanDefinitionHolder",
     "org.springframework.beans.factory.parsing.NullSourceExtractor",
     "org.springframework.beans.factory.BeanCreationException",
     "org.springframework.beans.support.ArgumentConvertingMethodInvoker",
     "org.springframework.beans.factory.support.ManagedArray",
     "org.springframework.beans.factory.xml.ParserContext",
     "org.springframework.beans.factory.xml.NamespaceHandler",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$1",
     "org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder",
     "org.springframework.beans.factory.config.AutowiredPropertyMarker",
     "org.springframework.beans.factory.NoUniqueBeanDefinitionException",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$2",
     "org.springframework.beans.factory.config.MethodInvokingBean",
     "org.springframework.beans.factory.xml.UtilNamespaceHandler$ListBeanDefinitionParser",
     "org.springframework.beans.factory.xml.DefaultDocumentLoader",
     "org.springframework.beans.factory.config.BeanDefinitionCustomizer",
     "org.springframework.beans.PropertyAccessException",
     "org.springframework.beans.factory.config.SingletonBeanRegistry",
     "org.springframework.beans.factory.config.YamlMapFactoryBean",
     "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
     "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
     "org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$ReplaceOverrideMethodInterceptor",
     "org.springframework.beans.factory.support.NullBean",
     "org.springframework.beans.InvalidPropertyException",
     "org.springframework.beans.factory.support.ManagedSet",
     "org.springframework.beans.factory.parsing.CompositeComponentDefinition",
     "org.springframework.beans.factory.annotation.InjectionMetadata$1",
     "org.springframework.beans.factory.support.GenericBeanDefinition",
     "org.springframework.beans.PropertyMatches$BeanPropertyMatches",
     "org.springframework.beans.factory.support.AutowireUtils$ObjectFactoryDelegatingInvocationHandler",
     "org.springframework.beans.factory.config.YamlProcessor$MatchStatus",
     "org.springframework.beans.factory.SmartFactoryBean",
     "org.springframework.beans.factory.config.TypedStringValue",
     "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter",
     "org.springframework.beans.factory.xml.UtilNamespaceHandler",
     "org.springframework.beans.factory.BeanFactoryExtensionsKt",
     "org.springframework.beans.SimpleTypeConverter",
     "org.springframework.beans.factory.config.YamlProcessor$MatchCallback",
     "org.springframework.beans.factory.HierarchicalBeanFactory",
     "org.springframework.beans.AbstractNestablePropertyAccessor$PropertyHandler",
     "org.springframework.beans.factory.support.BeanDefinitionResource",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$BeanObjectProvider",
     "org.springframework.beans.factory.parsing.ReaderContext",
     "org.springframework.beans.PropertyEditorRegistrySupport",
     "org.springframework.beans.factory.config.SetFactoryBean",
     "org.springframework.beans.factory.config.YamlProcessor$ResolutionMethod",
     "org.springframework.beans.factory.support.BeanDefinitionValidationException",
     "org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy",
     "org.springframework.beans.factory.annotation.ParameterResolutionDelegate$1",
     "org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader",
     "org.springframework.beans.factory.xml.ResourceEntityResolver",
     "org.springframework.beans.factory.support.BeanDefinitionRegistry",
     "org.springframework.beans.BeanWrapperImpl",
     "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
     "org.springframework.beans.support.ResourceEditorRegistrar",
     "org.springframework.beans.factory.support.AutowireCandidateResolver",
     "org.springframework.beans.factory.BeanCurrentlyInCreationException",
     "org.springframework.beans.factory.xml.UtilNamespaceHandler$SetBeanDefinitionParser",
     "org.springframework.beans.PropertyDescriptorUtils",
     "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PlaceholderResolvingStringValueResolver",
     "org.springframework.beans.factory.support.AbstractBeanFactory",
     "org.springframework.beans.factory.parsing.ConstructorArgumentEntry",
     "org.springframework.beans.PropertyEditorRegistrySupport$1",
     "org.springframework.beans.propertyeditors.StringTrimmerEditor",
     "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader$DeferredProperty",
     "org.springframework.beans.PropertyEditorRegistrar",
     "org.springframework.beans.factory.config.CustomEditorConfigurer",
     "org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertyPathBeanDefinitionParser",
     "org.springframework.beans.support.MutableSortDefinition",
     "org.springframework.beans.ExtendedBeanInfoFactory",
     "org.springframework.beans.factory.serviceloader.ServiceFactoryBean",
     "org.springframework.beans.factory.config.PropertyResourceConfigurer",
     "org.springframework.beans.factory.support.StaticListableBeanFactory",
     "org.springframework.beans.factory.parsing.BeanEntry",
     "org.springframework.beans.PropertyMatches$1",
     "org.springframework.beans.factory.config.BeanPostProcessor",
     "org.springframework.beans.factory.annotation.CustomAutowireConfigurer",
     "org.springframework.beans.factory.parsing.BeanDefinitionParsingException",
     "org.springframework.beans.factory.config.DependencyDescriptor$1",
     "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
     "org.springframework.beans.GenericTypeAwarePropertyDescriptor",
     "org.springframework.beans.AbstractPropertyAccessor",
     "org.springframework.beans.factory.serviceloader.package-info",
     "org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser",
     "org.springframework.beans.NotWritablePropertyException",
     "org.springframework.beans.factory.parsing.Problem",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$NestedDependencyDescriptor",
     "org.springframework.beans.factory.BeanClassLoaderAware",
     "org.springframework.beans.ExtendedBeanInfo",
     "org.springframework.beans.factory.BeanIsNotAFactoryException",
     "org.springframework.beans.factory.BeanIsAbstractException",
     "org.springframework.beans.factory.config.EmbeddedValueResolver",
     "org.springframework.beans.factory.wiring.BeanConfigurerSupport",
     "org.springframework.beans.factory.parsing.ParseState$Entry",
     "org.springframework.beans.factory.support.AutowireUtils",
     "org.springframework.beans.factory.support.MethodOverrides",
     "org.springframework.beans.factory.wiring.BeanWiringInfoResolver",
     "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition",
     "org.springframework.beans.factory.xml.NamespaceHandlerResolver",
     "org.springframework.beans.factory.annotation.Configurable",
     "org.springframework.beans.factory.ListableBeanFactoryExtensionsKt",
     "org.springframework.beans.factory.support.SimpleSecurityContextProvider",
     "org.springframework.beans.DirectFieldAccessor",
     "org.springframework.beans.factory.config.DependencyDescriptor$KotlinDelegate",
     "org.springframework.beans.factory.UnsatisfiedDependencyException",
     "org.springframework.beans.factory.InitializingBean",
     "org.springframework.beans.package-info",
     "org.springframework.beans.factory.support.PropertiesBeanDefinitionReader",
     "org.springframework.beans.factory.parsing.QualifierEntry",
     "org.springframework.beans.factory.ObjectProvider",
     "org.springframework.beans.factory.xml.DocumentLoader",
     "org.springframework.beans.factory.BeanNotOfRequiredTypeException",
     "org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer",
     "org.springframework.beans.factory.support.ChildBeanDefinition",
     "org.springframework.beans.factory.config.FieldRetrievingFactoryBean",
     "org.springframework.beans.ConversionNotSupportedException",
     "org.springframework.beans.BeanMetadataElement",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider",
     "org.springframework.beans.PropertyValue",
     "org.springframework.beans.propertyeditors.URLEditor",
     "org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$MethodOverrideCallbackFilter",
     "org.springframework.beans.factory.wiring.BeanWiringInfo",
     "org.springframework.beans.factory.NamedBean",
     "org.springframework.beans.propertyeditors.ClassEditor",
     "org.springframework.beans.factory.config.PlaceholderConfigurerSupport",
     "org.springframework.beans.factory.config.ProviderCreatingFactoryBean",
     "org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder",
     "org.springframework.beans.factory.SmartInitializingSingleton",
     "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory",
     "org.springframework.beans.factory.annotation.package-info",
     "org.springframework.beans.factory.serviceloader.ServiceListFactoryBean",
     "org.springframework.beans.factory.xml.XmlBeanFactory",
     "org.springframework.beans.BeanWrapperImpl$BeanPropertyHandler",
     "org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor",
     "org.springframework.beans.propertyeditors.InputStreamEditor",
     "org.springframework.beans.factory.NoSuchBeanDefinitionException",
     "org.springframework.beans.ConfigurablePropertyAccessor",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory",
     "org.springframework.beans.propertyeditors.CharsetEditor",
     "org.springframework.beans.factory.config.BeanExpressionResolver",
     "org.springframework.beans.factory.serviceloader.AbstractServiceLoaderBasedFactoryBean",
     "org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException",
     "org.springframework.beans.factory.xml.BeanDefinitionDecorator",
     "org.springframework.beans.NullValueInNestedPathException"
    ],
    "usedTypes": [
     "org.springframework.beans.factory.parsing.ReaderContext",
     "org.springframework.beans.factory.BeanFactoryUtils",
     "org.springframework.beans.factory.xml.XmlReaderContext",
     "org.springframework.beans.factory.annotation.Autowired",
     "org.springframework.beans.factory.support.AbstractBeanDefinition",
     "org.springframework.beans.BeanWrapperImpl",
     "org.springframework.beans.factory.support.BeanDefinitionRegistry",
     "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
     "org.springframework.beans.factory.support.DefaultBeanNameGenerator",
     "org.springframework.beans.factory.support.AutowireCandidateResolver",
     "org.springframework.beans.factory.parsing.BeanComponentDefinition",
     "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean",
     "org.springframework.beans.factory.config.BeanPostProcessor",
     "org.springframework.beans.factory.support.BeanDefinitionReaderUtils",
     "org.springframework.beans.factory.support.BeanNameGenerator",
     "org.springframework.beans.AbstractPropertyAccessor",
     "org.springframework.beans.NotWritablePropertyException",
     "org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser",
     "org.springframework.beans.PropertyValues",
     "org.springframework.beans.factory.BeanClassLoaderAware",
     "org.springframework.beans.factory.ListableBeanFactory",
     "org.springframework.beans.BeanUtils",
     "org.springframework.beans.factory.support.RootBeanDefinition",
     "org.springframework.beans.BeanInstantiationException",
     "org.springframework.beans.factory.support.BeanDefinitionBuilder",
     "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition",
     "org.springframework.beans.factory.config.AutowireCapableBeanFactory",
     "org.springframework.beans.BeanWrapper",
     "org.springframework.beans.factory.config.DependencyDescriptor",
     "org.springframework.beans.factory.InitializingBean",
     "org.springframework.beans.factory.config.AbstractFactoryBean",
     "org.springframework.beans.factory.annotation.Value",
     "org.springframework.beans.factory.config.PropertiesFactoryBean",
     "org.springframework.beans.factory.ObjectProvider",
     "org.springframework.beans.factory.config.ConstructorArgumentValues",
     "org.springframework.beans.factory.xml.BeanDefinitionParser",
     "org.springframework.beans.factory.FactoryBean",
     "org.springframework.beans.factory.BeanFactoryAware",
     "org.springframework.beans.factory.xml.ParserContext",
     "org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder",
     "org.springframework.beans.factory.annotation.Qualifier",
     "org.springframework.beans.factory.config.BeanDefinition",
     "org.springframework.beans.factory.NoUniqueBeanDefinitionException",
     "org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition",
     "org.springframework.beans.factory.xml.NamespaceHandlerSupport",
     "org.springframework.beans.FatalBeanException",
     "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
     "org.springframework.beans.PropertyMatches",
     "org.springframework.beans.BeansException",
     "org.springframework.beans.MutablePropertyValues",
     "org.springframework.beans.factory.BeanDefinitionStoreException",
     "org.springframework.beans.factory.ObjectFactory",
     "org.springframework.beans.factory.BeanFactory",
     "org.springframework.beans.factory.NoSuchBeanDefinitionException",
     "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter",
     "org.springframework.beans.factory.support.DefaultListableBeanFactory",
     "org.springframework.beans.ConfigurablePropertyAccessor",
     "org.springframework.beans.factory.config.ConfigurableBeanFactory",
     "org.springframework.beans.NotReadablePropertyException"
    ],
    "usageRatio": 0.1544502617801047,
    "children": []
   },
   {
    "id": "org.springframework:spring-context:jar:5.2.0.RC2:compile",
    "coordinates": "org.springframework:spring-context:5.2.0.RC2",
    "groupId": "org.springframework",
    "artifactId": "spring-context",
    "version": "5.2.0.RC2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 1214737,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember",
     "org.springframework.ejb.config.JeeNamespaceHandler",
     "org.springframework.context.annotation.ConfigurationClassPostProcessor$1",
     "org.springframework.scheduling.config.SchedulerBeanDefinitionParser",
     "org.springframework.context.ApplicationContextException",
     "org.springframework.scripting.config.LangNamespaceHandler",
     "org.springframework.validation.BindingErrorProcessor",
     "org.springframework.context.annotation.ConfigurationClassEnhancer$BeanFactoryAwareGeneratorStrategy",
     "org.springframework.remoting.support.RemoteInvocationBasedAccessor",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateTimeToLongConverter",
     "org.springframework.scheduling.annotation.SchedulingConfigurer",
     "org.springframework.jmx.JmxException",
     "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$WebServiceRefElement",
     "org.springframework.context.annotation.ImportSelector",
     "org.springframework.cache.interceptor.CacheOperationSourcePointcut",
     "org.springframework.context.support.AbstractResourceBasedMessageSource",
     "org.springframework.context.support.BeanDefinitionDsl",
     "org.springframework.cache.interceptor.NameMatchCacheOperationSource",
     "org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory",
     "org.springframework.remoting.support.RemoteInvocationUtils",
     "org.springframework.jmx.export.naming.package-info",
     "org.springframework.cache.interceptor.AbstractCacheResolver",
     "org.springframework.jmx.export.metadata.ManagedOperationParameter",
     "org.springframework.context.support.BeanDefinitionDsl$Scope",
     "org.springframework.scripting.ScriptCompilationException",
     "org.springframework.context.support.AbstractApplicationContext",
     "org.springframework.jmx.export.MBeanExporter$AutodetectCallback",
     "org.springframework.scripting.support.StandardScriptEvalException",
     "org.springframework.format.support.FormattingConversionService$AnnotationPrinterConverter",
     "org.springframework.context.index.CandidateComponentsIndex",
     "org.springframework.scheduling.config.ScheduledTask",
     "org.springframework.context.annotation.LoadTimeWeavingConfiguration$1",
     "org.springframework.context.event.ApplicationListenerMethodAdapter$EventPublicationSubscriber",
     "org.springframework.ui.context.support.UiApplicationContextUtils",
     "org.springframework.context.index.CandidateComponentsIndexLoader",
     "org.springframework.context.support.LiveBeansViewMBean",
     "org.springframework.context.annotation.Scope",
     "org.springframework.format.datetime.standard.DurationFormatter",
     "org.springframework.scripting.ScriptEvaluator",
     "org.springframework.context.support.package-info",
     "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$LookupDependencyDescriptor",
     "org.springframework.stereotype.Service",
     "org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler",
     "org.springframework.cache.interceptor.CachePutOperation",
     "org.springframework.cache.interceptor.CacheOperationInvoker",
     "org.springframework.remoting.support.UrlBasedRemoteAccessor",
     "org.springframework.remoting.rmi.RmiClientInterceptorUtils",
     "org.springframework.scheduling.annotation.AsyncConfigurerSupport",
     "org.springframework.jmx.export.naming.KeyNamingStrategy",
     "org.springframework.scheduling.concurrent.ConcurrentTaskScheduler$EnterpriseConcurrentTriggerScheduler$1",
     "org.springframework.instrument.classloading.SimpleLoadTimeWeaver",
     "org.springframework.instrument.classloading.websphere.package-info",
     "org.springframework.format.datetime.joda.ReadableInstantPrinter",
     "org.springframework.context.support.BeanDefinitionDsl$bean$customizer$1",
     "org.springframework.cache.config.CacheManagementConfigUtils",
     "org.springframework.context.weaving.LoadTimeWeaverAware",
     "org.springframework.context.support.BeanDefinitionDsl$bean$customizer$2",
     "org.springframework.format.datetime.package-info",
     "org.springframework.scheduling.SchedulingAwareRunnable",
     "org.springframework.jmx.export.annotation.ManagedNotification",
     "org.springframework.cache.annotation.AnnotationCacheOperationSource",
     "org.springframework.jmx.export.metadata.ManagedMetric",
     "org.springframework.instrument.classloading.weblogic.WebLogicClassLoaderAdapter",
     "org.springframework.jmx.export.notification.package-info",
     "org.springframework.scheduling.config.IntervalTask",
     "org.springframework.scheduling.SchedulingException",
     "org.springframework.ejb.access.EjbAccessException",
     "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
     "org.springframework.jmx.export.notification.ModelMBeanNotificationPublisher",
     "org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar",
     "org.springframework.cache.support.NoOpCacheManager",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateTimeToLocalTimeConverter",
     "org.springframework.context.support.AbstractRefreshableApplicationContext",
     "org.springframework.validation.BindingResultUtils",
     "org.springframework.scheduling.annotation.Async",
     "org.springframework.context.annotation.DeferredImportSelector",
     "org.springframework.format.datetime.joda.DateTimeFormatterFactoryBean",
     "org.springframework.context.annotation.PropertySources",
     "org.springframework.format.datetime.standard.DateTimeConverters$LocalDateTimeToLocalDateConverter",
     "org.springframework.cache.support.NoOpCache",
     "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor$1",
     "org.springframework.context.annotation.ImportBeanDefinitionRegistrar",
     "org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler",
     "org.springframework.context.annotation.EnableLoadTimeWeaving",
     "org.springframework.cache.annotation.EnableCaching",
     "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler$DelegatingErrorHandlingCallable",
     "org.springframework.jmx.export.annotation.AnnotationMBeanExporter",
     "org.springframework.format.datetime.joda.DateTimeFormatterFactory$1",
     "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean",
     "org.springframework.context.event.ApplicationListenerMethodAdapter$ReactiveResultHandler",
     "org.springframework.context.config.MBeanExportBeanDefinitionParser",
     "org.springframework.context.annotation.MBeanExportConfiguration",
     "org.springframework.scripting.bsh.BshScriptUtils$BshExecutionException",
     "org.springframework.format.datetime.DateFormatterRegistrar$DateToLongConverter",
     "org.springframework.jmx.support.MBeanServerConnectionFactoryBean$1",
     "org.springframework.context.i18n.SimpleTimeZoneAwareLocaleContext",
     "org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean",
     "org.springframework.instrument.classloading.tomcat.package-info",
     "org.springframework.context.annotation.ConfigurationClassParser$1",
     "org.springframework.format.datetime.standard.DateTimeConverters$InstantToLongConverter",
     "org.springframework.scheduling.concurrent.ReschedulingRunnable",
     "org.springframework.jmx.access.ConnectorDelegate",
     "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
     "org.springframework.stereotype.Repository",
     "org.springframework.jmx.export.MBeanExporter",
     "org.springframework.jmx.support.ConnectorServerFactoryBean$1",
     "org.springframework.jndi.JndiCallback",
     "org.springframework.validation.FieldError",
     "org.springframework.format.datetime.DateFormatterRegistrar$LongToCalendarConverter",
     "org.springframework.remoting.rmi.RmiClientInterceptor$1",
     "org.springframework.cache.interceptor.CacheErrorHandler",
     "org.springframework.format.datetime.DateFormatterRegistrar$CalendarToLongConverter",
     "org.springframework.cache.interceptor.CacheOperation$Builder",
     "org.springframework.remoting.rmi.JndiRmiProxyFactoryBean",
     "org.springframework.scheduling.support.SimpleTriggerContext",
     "org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler",
     "org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory",
     "org.springframework.remoting.support.DefaultRemoteInvocationFactory",
     "org.springframework.jndi.JndiAccessor",
     "org.springframework.cache.interceptor.CacheableOperation$Builder",
     "org.springframework.context.support.GenericGroovyApplicationContext",
     "org.springframework.jmx.support.NotificationListenerHolder",
     "org.springframework.context.event.ContextClosedEvent",
     "org.springframework.cache.annotation.Caching",
     "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
     "org.springframework.jmx.export.annotation.package-info",
     "org.springframework.context.annotation.ConfigurationClass$FinalConfigurationProblem",
     "org.springframework.scripting.bsh.BshScriptEvaluator",
     "org.springframework.validation.support.BindingAwareModelMap",
     "org.springframework.context.event.package-info",
     "org.springframework.context.annotation.Import",
     "org.springframework.context.event.EventListenerMethodProcessor",
     "org.springframework.ui.context.Theme",
     "org.springframework.context.SmartLifecycle",
     "org.springframework.cache.support.package-info",
     "org.springframework.context.index.CandidateComponentsIndex$Entry",
     "org.springframework.ui.context.support.DelegatingThemeSource",
     "org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$FilteringClassFileTransformer",
     "org.springframework.format.support.DefaultFormattingConversionService",
     "org.springframework.cache.annotation.CacheConfig",
     "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToOffsetDateTimeConverter",
     "org.springframework.context.annotation.ConfigurationClassEnhancer$1",
     "org.springframework.jmx.export.MBeanExportOperations",
     "org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver$InstrumentationAccessor",
     "org.springframework.context.support.GenericXmlApplicationContext",
     "org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformer",
     "org.springframework.jmx.export.annotation.ManagedMetric",
     "org.springframework.context.weaving.DefaultContextLoadTimeWeaver",
     "org.springframework.context.annotation.ConflictingBeanDefinitionException",
     "org.springframework.format.datetime.standard.DateTimeFormatterRegistrar",
     "org.springframework.validation.DefaultMessageCodesResolver$1",
     "org.springframework.jmx.export.MBeanExporterListener",
     "org.springframework.cache.support.AbstractCacheManager",
     "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
     "org.springframework.format.datetime.joda.PeriodFormatter",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$1",
     "org.springframework.context.i18n.TimeZoneAwareLocaleContext",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$2",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$3",
     "org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$4",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$5",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$6",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$7",
     "org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$8",
     "org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$9",
     "org.springframework.remoting.rmi.RmiInvocationWrapper",
     "org.springframework.format.support.FormattingConversionService$PrinterConverter",
     "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToLocalDateConverter",
     "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToLocalDateConverter",
     "org.springframework.format.datetime.joda.JodaTimeConverters$CalendarToReadableInstantConverter",
     "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToOffsetDateTimeConverter",
     "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
     "org.springframework.remoting.rmi.RmiBasedExporter",
     "org.springframework.context.expression.CachedExpressionEvaluator$ExpressionKey",
     "org.springframework.remoting.rmi.RmiClientInterceptor$DummyURLStreamHandler",
     "org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource",
     "org.springframework.context.event.ApplicationListenerMethodAdapter$1",
     "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
     "org.springframework.context.support.ResourceBundleMessageSource",
     "org.springframework.remoting.rmi.RmiClientInterceptor",
     "org.springframework.ui.context.support.ResourceBundleThemeSource",
     "org.springframework.format.number.package-info",
     "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
     "org.springframework.context.support.ApplicationListenerDetector",
     "org.springframework.context.i18n.package-info",
     "org.springframework.context.annotation.AnnotationConfigApplicationContextExtensionsKt",
     "org.springframework.jmx.access.package-info",
     "org.springframework.remoting.support.RemoteExporter",
     "org.springframework.cache.interceptor.CacheEvaluationContext",
     "org.springframework.context.annotation.EnableMBeanExport",
     "org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler",
     "org.springframework.validation.beanvalidation.MessageSourceResourceBundleLocator",
     "org.springframework.jndi.JndiTemplate",
     "org.springframework.context.annotation.ComponentScanBeanDefinitionParser",
     "org.springframework.jndi.JndiPropertySource",
     "org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor",
     "org.springframework.context.expression.MapAccessor$MapAccessException",
     "org.springframework.jndi.JndiObjectTargetSource",
     "org.springframework.format.datetime.joda.LocalDateParser",
     "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
     "org.springframework.context.i18n.SimpleLocaleContext",
     "org.springframework.context.ApplicationEventPublisher",
     "org.springframework.format.number.NumberStyleFormatter",
     "org.springframework.remoting.RemoteProxyFailureException",
     "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
     "org.springframework.jmx.export.naming.IdentityNamingStrategy",
     "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToLocalDateConverter",
     "org.springframework.scheduling.support.package-info",
     "org.springframework.format.datetime.joda.JodaTimeContextHolder",
     "org.springframework.remoting.rmi.RmiProxyFactoryBean",
     "org.springframework.jmx.export.naming.ObjectNamingStrategy",
     "org.springframework.instrument.classloading.weblogic.WebLogicClassPreProcessorAdapter",
     "org.springframework.context.support.StaticMessageSource",
     "org.springframework.validation.support.package-info",
     "org.springframework.format.annotation.NumberFormat",
     "org.springframework.scheduling.config.TaskManagementConfigUtils",
     "org.springframework.jmx.export.assembler.AutodetectCapableMBeanInfoAssembler",
     "org.springframework.scripting.ScriptSource",
     "org.springframework.validation.DefaultMessageCodesResolver",
     "org.springframework.ui.package-info",
     "org.springframework.cache.annotation.CachingConfigurer",
     "org.springframework.validation.beanvalidation.CustomValidatorBean",
     "org.springframework.context.annotation.ConfigurationClassParser$CircularImportProblem",
     "org.springframework.cache.config.AnnotationDrivenCacheBeanDefinitionParser$JCacheCachingConfigurer",
     "org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler",
     "org.springframework.context.ApplicationContextAware",
     "org.springframework.context.expression.StandardBeanExpressionResolver",
     "org.springframework.scripting.support.StandardScriptUtils",
     "org.springframework.context.annotation.ConfigurationClassEnhancer$ConditionalCallback",
     "org.springframework.context.support.SimpleThreadScope",
     "org.springframework.cache.interceptor.CacheOperationInvoker$ThrowableWrapper",
     "org.springframework.context.event.EventExpressionEvaluator",
     "org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory",
     "org.springframework.validation.DefaultBindingErrorProcessor",
     "org.springframework.context.annotation.Description",
     "org.springframework.format.datetime.joda.YearMonthFormatter",
     "org.springframework.cache.config.package-info",
     "org.springframework.cache.interceptor.CachePutOperation$Builder",
     "org.springframework.context.annotation.ConfigurationClassEnhancer$BeanFactoryAwareMethodInterceptor",
     "org.springframework.context.annotation.Profile",
     "org.springframework.context.annotation.ComponentScan",
     "org.springframework.context.Lifecycle",
     "org.springframework.format.datetime.joda.LocalTimeParser",
     "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
     "org.springframework.jndi.TypeMismatchNamingException",
     "org.springframework.cache.package-info",
     "org.springframework.context.config.ContextNamespaceHandler",
     "org.springframework.context.HierarchicalMessageSource",
     "org.springframework.scripting.support.ResourceScriptSource",
     "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToLocalDateTimeConverter",
     "org.springframework.context.support.DelegatingMessageSource",
     "org.springframework.scripting.bsh.BshScriptFactory",
     "org.springframework.context.support.AbstractMessageSource",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateToReadableInstantConverter",
     "org.springframework.context.support.ResourceBundleMessageSource$1",
     "org.springframework.scripting.support.StandardScriptFactory",
     "org.springframework.format.annotation.DateTimeFormat",
     "org.springframework.validation.beanvalidation.SpringValidatorAdapter$ResolvableAttribute",
     "org.springframework.context.weaving.package-info",
     "org.springframework.context.ConfigurableApplicationContext",
     "org.springframework.scripting.groovy.GroovyScriptFactory",
     "org.springframework.format.FormatterRegistry",
     "org.springframework.jmx.export.naming.SelfNaming",
     "org.springframework.format.datetime.DateFormatterRegistrar",
     "org.springframework.jndi.JndiObjectFactoryBean$JndiContextExposingInterceptor",
     "org.springframework.remoting.support.RemotingSupport",
     "org.springframework.context.config.MBeanServerBeanDefinitionParser",
     "org.springframework.jmx.access.MBeanClientInterceptor",
     "org.springframework.context.weaving.LoadTimeWeaverAwareProcessor",
     "org.springframework.instrument.classloading.package-info",
     "org.springframework.scheduling.config.TaskNamespaceHandler",
     "org.springframework.format.datetime.joda.package-info",
     "org.springframework.ejb.access.LocalSlsbInvokerInterceptor",
     "org.springframework.scripting.support.StaticScriptSource",
     "org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean",
     "org.springframework.context.annotation.EnableAspectJAutoProxy",
     "org.springframework.cache.interceptor.VariableNotAvailableException",
     "org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory",
     "org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor",
     "org.springframework.cache.interceptor.CacheResolver",
     "org.springframework.context.annotation.ConfigurationMethod",
     "org.springframework.context.annotation.ScopeMetadata",
     "org.springframework.validation.package-info",
     "org.springframework.validation.beanvalidation.SpringValidatorAdapter$ViolationObjectError",
     "org.springframework.cache.interceptor.CacheInterceptor",
     "org.springframework.context.support.ApplicationContextAwareProcessor",
     "org.springframework.context.annotation.FilterType",
     "org.springframework.context.package-info",
     "org.springframework.context.annotation.ConfigurationClassUtils",
     "org.springframework.scheduling.support.PeriodicTrigger",
     "org.springframework.jndi.JndiObjectFactoryBean",
     "org.springframework.ejb.config.LocalStatelessSessionBeanDefinitionParser",
     "org.springframework.context.annotation.ConfigurationClassEnhancer$BeanFactoryAwareGeneratorStrategy$1",
     "org.springframework.scripting.bsh.package-info",
     "org.springframework.scheduling.support.MethodInvokingRunnable",
     "org.springframework.context.support.BeanDefinitionDsl$profile$beans$1",
     "org.springframework.context.annotation.ScopedProxyMode",
     "org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContext",
     "org.springframework.scheduling.support.TaskUtils$PropagatingErrorHandler",
     "org.springframework.jmx.package-info",
     "org.springframework.scripting.groovy.GroovyScriptEvaluator",
     "org.springframework.context.annotation.ScopeMetadataResolver",
     "org.springframework.context.EnvironmentAware",
     "org.springframework.scripting.groovy.GroovyScriptFactory$CachedResultHolder",
     "org.springframework.scheduling.support.TaskUtils$1",
     "org.springframework.format.number.PercentStyleFormatter",
     "org.springframework.cache.annotation.Cacheable",
     "org.springframework.format.AnnotationFormatterFactory",
     "org.springframework.format.datetime.joda.JodaTimeContext",
     "org.springframework.jmx.export.MBeanExporter$NotificationPublisherAwareLazyTargetSource",
     "org.springframework.cache.annotation.SpringCacheAnnotationParser",
     "org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup",
     "org.springframework.format.datetime.standard.MonthDayFormatter",
     "org.springframework.scheduling.config.ScheduledTasksBeanDefinitionParser",
     "org.springframework.ejb.config.package-info",
     "org.springframework.ui.context.support.SimpleTheme",
     "org.springframework.format.datetime.standard.MonthFormatter",
     "org.springframework.context.PayloadApplicationEvent",
     "org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean",
     "org.springframework.validation.AbstractBindingResult",
     "org.springframework.cache.interceptor.CompositeCacheOperationSource",
     "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1",
     "org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver",
     "org.springframework.validation.support.BindingAwareConcurrentModel",
     "org.springframework.context.expression.BeanExpressionContextAccessor",
     "org.springframework.remoting.package-info",
     "org.springframework.jmx.export.NotificationListenerBean",
     "org.springframework.cache.config.CacheNamespaceHandler",
     "org.springframework.context.annotation.ConfigurationClassParser$ImportStack",
     "org.springframework.format.datetime.standard.DateTimeFormatterFactoryBean",
     "org.springframework.context.index.package-info",
     "org.springframework.jndi.JndiTemplateEditor",
     "org.springframework.scheduling.SchedulingTaskExecutor",
     "org.springframework.context.event.GenericApplicationListenerAdapter",
     "org.springframework.jndi.JndiLocatorDelegate",
     "org.springframework.scripting.bsh.BshScriptUtils$1",
     "org.springframework.context.support.LiveBeansView",
     "org.springframework.context.annotation.PropertySource",
     "org.springframework.remoting.RemoteAccessException",
     "org.springframework.scheduling.concurrent.ScheduledExecutorTask",
     "org.springframework.context.annotation.AnnotationConfigBeanDefinitionParser",
     "org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader",
     "org.springframework.scheduling.config.ExecutorBeanDefinitionParser",
     "org.springframework.cache.annotation.AnnotationCacheOperationSource$CacheOperationProvider",
     "org.springframework.format.datetime.DateFormatterRegistrar$DateToCalendarConverter",
     "org.springframework.scheduling.annotation.EnableScheduling",
     "org.springframework.jmx.export.annotation.ManagedAttribute",
     "org.springframework.scheduling.config.CronTask",
     "org.springframework.context.support.BeanDefinitionDslKt",
     "org.springframework.format.datetime.joda.DateTimeParser",
     "org.springframework.scheduling.annotation.AsyncAnnotationAdvisor",
     "org.springframework.context.ResourceLoaderAware",
     "org.springframework.validation.beanvalidation.package-info",
     "org.springframework.context.expression.EnvironmentAccessor",
     "org.springframework.cache.Cache$ValueRetrievalException",
     "org.springframework.scheduling.support.ScheduledMethodRunnable",
     "org.springframework.jmx.support.package-info",
     "org.springframework.cache.interceptor.CacheableOperation",
     "org.springframework.context.EmbeddedValueResolverAware",
     "org.springframework.context.event.EventListenerFactory",
     "org.springframework.jmx.export.assembler.MBeanInfoAssembler",
     "org.springframework.cache.support.SimpleValueWrapper",
     "org.springframework.context.support.EmbeddedValueResolutionSupport",
     "org.springframework.scheduling.support.DelegatingErrorHandlingRunnable",
     "org.springframework.context.annotation.ConfigurationClassEnhancer$ConditionalCallbackFilter",
     "org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory$NumberDecoratingFormatter",
     "org.springframework.jmx.export.metadata.AbstractJmxAttribute",
     "org.springframework.ejb.config.RemoteStatelessSessionBeanDefinitionParser",
     "org.springframework.ui.context.ThemeSource",
     "org.springframework.jmx.access.InvocationFailureException",
     "org.springframework.format.datetime.joda.JodaTimeConverters$LocalDateTimeToLocalTimeConverter",
     "org.springframework.jmx.export.UnableToRegisterMBeanException",
     "org.springframework.format.package-info",
     "org.springframework.format.support.package-info",
     "org.springframework.context.ApplicationListener",
     "org.springframework.context.support.AbstractRefreshableConfigApplicationContext",
     "org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor",
     "org.springframework.instrument.classloading.weblogic.WebLogicLoadTimeWeaver",
     "org.springframework.context.annotation.Conditional",
     "org.springframework.context.annotation.AdviceModeImportSelector",
     "org.springframework.scripting.config.ScriptingDefaultsParser",
     "org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser",
     "org.springframework.cache.Cache",
     "org.springframework.jmx.export.metadata.ManagedAttribute",
     "org.springframework.format.datetime.standard.TemporalAccessorPrinter",
     "org.springframework.scheduling.config.TriggerTask",
     "org.springframework.context.event.AbstractApplicationEventMulticaster",
     "org.springframework.stereotype.Controller",
     "org.springframework.context.annotation.Jsr330ScopeMetadataResolver",
     "org.springframework.validation.MessageCodeFormatter",
     "org.springframework.context.expression.MapAccessor",
     "org.springframework.format.datetime.standard.DateTimeConverters$1",
     "org.springframework.jmx.export.metadata.InvalidMetadataException",
     "org.springframework.format.datetime.DateFormatterRegistrar$1",
     "org.springframework.format.number.AbstractNumberFormatter",
     "org.springframework.instrument.classloading.ShadowingClassLoader",
     "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$EjbRefElement",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateTimeToLocalDateTimeConverter",
     "org.springframework.context.expression.AnnotatedElementKey",
     "org.springframework.validation.Validator",
     "org.springframework.scheduling.annotation.AsyncConfigurationSelector",
     "org.springframework.scripting.package-info",
     "org.springframework.format.datetime.joda.DurationFormatter",
     "org.springframework.format.datetime.standard.DateTimeConverters$LongToInstantConverter",
     "org.springframework.context.annotation.AnnotationConfigUtils",
     "org.springframework.cache.annotation.CacheEvict",
     "org.springframework.context.annotation.ClassPathBeanDefinitionScanner",
     "org.springframework.ui.Model",
     "org.springframework.cache.interceptor.AbstractCacheInvoker",
     "org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser",
     "org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever",
     "org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationCacheKey",
     "org.springframework.ui.ModelExtensionsKt",
     "org.springframework.context.annotation.AnnotatedBeanDefinitionReader",
     "org.springframework.jmx.support.MBeanServerConnectionFactoryBean",
     "org.springframework.format.datetime.joda.ReadablePartialPrinter",
     "org.springframework.context.support.GenericApplicationContext$ClassDerivedBeanDefinition",
     "org.springframework.remoting.RemoteInvocationFailureException",
     "org.springframework.context.expression.BeanFactoryAccessor",
     "org.springframework.format.support.FormattingConversionService$ParserConverter",
     "org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$1",
     "org.springframework.format.Parser",
     "org.springframework.remoting.rmi.JndiRmiClientInterceptor",
     "org.springframework.ejb.access.package-info",
     "org.springframework.cache.interceptor.SimpleKeyGenerator",
     "org.springframework.format.datetime.DateFormatter",
     "org.springframework.jmx.access.MBeanInfoRetrievalException",
     "org.springframework.cache.config.CacheAdviceParser$Props",
     "org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource",
     "org.springframework.scheduling.config.package-info",
     "org.springframework.context.annotation.ScopedProxyCreator",
     "org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1",
     "org.springframework.context.support.AbstractXmlApplicationContext",
     "org.springframework.format.datetime.joda.JodaTimeConverters$LocalDateTimeToLocalDateConverter",
     "org.springframework.format.Printer",
     "org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder",
     "org.springframework.jmx.support.MetricType",
     "org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader",
     "org.springframework.cache.CacheManager",
     "org.springframework.stereotype.Indexed",
     "org.springframework.jmx.export.SpringModelMBean",
     "org.springframework.format.support.FormattingConversionService$AnnotationParserConverter",
     "org.springframework.instrument.classloading.weblogic.package-info",
     "org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
     "org.springframework.cache.support.NullValue",
     "org.springframework.format.datetime.standard.PeriodFormatter",
     "org.springframework.ui.context.support.package-info",
     "org.springframework.jndi.support.SimpleJndiBeanFactory",
     "org.springframework.cache.annotation.CachingConfigurationSelector",
     "org.springframework.context.event.ContextStoppedEvent",
     "org.springframework.context.annotation.ComponentScanAnnotationParser$2",
     "org.springframework.context.annotation.ComponentScanAnnotationParser$1",
     "org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition",
     "org.springframework.context.support.FileSystemXmlApplicationContext",
     "org.springframework.context.annotation.BeanMethod",
     "org.springframework.scripting.config.LangNamespaceUtils",
     "org.springframework.validation.beanvalidation.MethodValidationInterceptor",
     "org.springframework.instrument.classloading.SimpleInstrumentableClassLoader",
     "org.springframework.context.annotation.ComponentScan$Filter",
     "org.springframework.cache.concurrent.ConcurrentMapCacheManager",
     "org.springframework.format.datetime.standard.DateTimeConverters",
     "org.springframework.jndi.support.package-info",
     "org.springframework.cache.interceptor.CacheOperationSource",
     "org.springframework.scripting.groovy.GroovyObjectCustomizer",
     "org.springframework.remoting.RemoteConnectFailureException",
     "org.springframework.jmx.support.ConnectorServerFactoryBean",
     "org.springframework.format.number.money.package-info",
     "org.springframework.jmx.export.annotation.ManagedOperationParameters",
     "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToZonedDateTimeConverter",
     "org.springframework.context.support.BeanDefinitionDsl$bean$1",
     "org.springframework.context.annotation.ImportResource",
     "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
     "org.springframework.jmx.export.assembler.SimpleReflectiveMBeanInfoAssembler",
     "org.springframework.cache.annotation.ProxyCachingConfiguration",
     "org.springframework.validation.MapBindingResult",
     "org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator",
     "org.springframework.jmx.access.MBeanClientInterceptor$MethodCacheKey",
     "org.springframework.ui.ExtendedModelMap",
     "org.springframework.jmx.export.package-info",
     "org.springframework.remoting.rmi.JndiRmiServiceExporter",
     "org.springframework.ejb.config.JndiLookupBeanDefinitionParser",
     "org.springframework.ui.ConcurrentModel",
     "org.springframework.context.annotation.AspectJAutoProxyRegistrar",
     "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToZonedDateTimeConverter",
     "org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean",
     "org.springframework.scheduling.annotation.package-info",
     "org.springframework.context.annotation.AnnotationBeanNameGenerator",
     "org.springframework.scripting.groovy.package-info",
     "org.springframework.scheduling.concurrent.DefaultManagedAwareThreadFactory",
     "org.springframework.format.annotation.package-info",
     "org.springframework.remoting.RemoteLookupFailureException",
     "org.springframework.validation.BeanPropertyBindingResult",
     "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$1",
     "org.springframework.context.event.ApplicationContextEvent",
     "org.springframework.context.event.GenericApplicationListener",
     "org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
     "org.springframework.format.support.FormatterPropertyEditorAdapter",
     "org.springframework.context.annotation.AdviceMode",
     "org.springframework.remoting.support.RemoteInvocationBasedExporter",
     "org.springframework.format.support.FormattingConversionService",
     "org.springframework.context.support.GenericApplicationContext",
     "org.springframework.remoting.rmi.CodebaseAwareObjectInputStream",
     "org.springframework.context.event.ContextRefreshedEvent",
     "org.springframework.validation.DefaultMessageCodesResolver$Format$1",
     "org.springframework.instrument.classloading.glassfish.package-info",
     "org.springframework.context.annotation.DeferredImportSelector$Group",
     "org.springframework.validation.DefaultMessageCodesResolver$Format$2",
     "org.springframework.scheduling.config.ContextLifecycleScheduledTaskRegistrar",
     "org.springframework.context.annotation.AnnotationConfigRegistry",
     "org.springframework.cache.interceptor.CacheProxyFactoryBean",
     "org.springframework.context.i18n.LocaleContext",
     "org.springframework.ejb.access.AbstractSlsbInvokerInterceptor",
     "org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser",
     "org.springframework.context.config.package-info",
     "org.springframework.format.datetime.joda.JodaTimeConverters",
     "org.springframework.jmx.support.RegistrationPolicy",
     "org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar$Type",
     "org.springframework.format.annotation.NumberFormat$Style",
     "org.springframework.context.support.BeanDefinitionDsl$BeanSupplierContext",
     "org.springframework.context.support.ApplicationObjectSupport",
     "org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver",
     "org.springframework.format.datetime.standard.DateTimeConverters$LocalDateTimeToLocalTimeConverter",
     "org.springframework.context.support.ResourceBundleMessageSource$MessageSourceControl",
     "org.springframework.context.annotation.BeanMethod$NonOverridableMethodError",
     "org.springframework.remoting.rmi.RmiServiceExporter",
     "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToLocalTimeConverter",
     "org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler",
     "org.springframework.scheduling.config.ScheduledTaskRegistrar",
     "org.springframework.cache.interceptor.BasicOperation",
     "org.springframework.context.support.GenericApplicationContextExtensionsKt$registerBean$2",
     "org.springframework.context.support.GenericApplicationContextExtensionsKt$registerBean$1",
     "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$10",
     "org.springframework.context.annotation.ConditionEvaluator$ConditionContextImpl",
     "org.springframework.jndi.JndiLookupFailureException",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$13",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$14",
     "org.springframework.cache.concurrent.package-info",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$11",
     "org.springframework.format.datetime.standard.DateTimeFormatterRegistrar$Type",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$12",
     "org.springframework.context.annotation.AnnotationConfigApplicationContext",
     "org.springframework.cache.annotation.CacheAnnotationParser",
     "org.springframework.scripting.support.RefreshableScriptTargetSource",
     "org.springframework.format.number.CurrencyStyleFormatter",
     "org.springframework.format.datetime.standard.package-info",
     "org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContexts",
     "org.springframework.context.annotation.Role",
     "org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor",
     "org.springframework.context.event.DefaultEventListenerFactory",
     "org.springframework.cache.interceptor.NamedCacheResolver",
     "org.springframework.cache.interceptor.CacheOperationSourcePointcut$CacheOperationSourceClassFilter",
     "org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory$PatternDecoratingFormatter",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$20",
     "org.springframework.jmx.access.InvalidInvocationException",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$21",
     "org.springframework.jmx.support.MBeanServerFactoryBean",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$24",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$25",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$22",
     "org.springframework.cache.annotation.CachePut",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$23",
     "org.springframework.jmx.MBeanServerNotFoundException",
     "org.springframework.instrument.classloading.SimpleThrowawayClassLoader",
     "org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean",
     "org.springframework.context.support.GenericApplicationContextExtensionsKt",
     "org.springframework.context.support.SimpleThreadScope$1",
     "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
     "org.springframework.context.support.PostProcessorRegistrationDelegate",
     "org.springframework.format.Formatter",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$17",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$18",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$15",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$16",
     "org.springframework.context.config.SpringConfiguredBeanDefinitionParser",
     "org.springframework.format.number.money.MonetaryAmountFormatter",
     "org.springframework.context.annotation.ConfigurationClassParser",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$19",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$31",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$32",
     "org.springframework.context.annotation.ImportRegistry",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$30",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$35",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$36",
     "org.springframework.cache.annotation.CachingConfigurationSelector$1",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$33",
     "org.springframework.format.datetime.standard.DateTimeFormatterFactory",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$34",
     "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToLocalTimeConverter",
     "org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform",
     "org.springframework.context.annotation.ConfigurationClassParser$SourceClass",
     "org.springframework.cache.annotation.SpringCacheAnnotationParser$DefaultCacheConfig",
     "org.springframework.cache.annotation.package-info",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$28",
     "org.springframework.validation.annotation.package-info",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$29",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$26",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$27",
     "org.springframework.context.support.MessageSourceSupport",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$42",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$43",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$40",
     "org.springframework.context.NoSuchMessageException",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$41",
     "org.springframework.format.datetime.standard.TemporalAccessorParser",
     "org.springframework.context.annotation.ProfileCondition",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$44",
     "org.springframework.cache.interceptor.SimpleKey",
     "org.springframework.cache.config.AnnotationDrivenCacheBeanDefinitionParser",
     "org.springframework.scheduling.concurrent.ConcurrentTaskScheduler$EnterpriseConcurrentTriggerScheduler",
     "org.springframework.scheduling.config.FixedDelayTask",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$39",
     "org.springframework.instrument.classloading.jboss.JBossLoadTimeWeaver",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$37",
     "org.springframework.context.support.BeanDefinitionDsl$bean$$inlined$bean$38",
     "org.springframework.validation.beanvalidation.SpringValidatorAdapter$ViolationFieldError",
     "org.springframework.ui.ModelMapExtensionsKt",
     "org.springframework.scheduling.concurrent.ConcurrentTaskScheduler$1",
     "org.springframework.context.config.PropertyOverrideBeanDefinitionParser",
     "org.springframework.context.support.BeanDefinitionDsl$Role",
     "org.springframework.context.annotation.Configuration",
     "org.springframework.jmx.export.notification.NotificationPublisherAware",
     "org.springframework.format.datetime.DateFormatterRegistrar$CalendarToDateConverter",
     "org.springframework.scheduling.annotation.AnnotationAsyncExecutionInterceptor",
     "org.springframework.scheduling.concurrent.ConcurrentTaskExecutor",
     "org.springframework.format.FormatterRegistrar",
     "org.springframework.scheduling.config.FixedRateTask",
     "org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver",
     "org.springframework.scheduling.concurrent.package-info",
     "org.springframework.remoting.support.SimpleHttpServerFactoryBean",
     "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor$1",
     "org.springframework.context.Phased",
     "org.springframework.remoting.rmi.RmiRegistryFactoryBean",
     "org.springframework.context.event.SourceFilteringListener",
     "org.springframework.remoting.support.RemoteInvocationFactory",
     "org.springframework.context.support.StaticApplicationContext",
     "org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator",
     "org.springframework.jmx.access.MBeanConnectFailureException",
     "org.springframework.context.annotation.ComponentScans",
     "org.springframework.cache.interceptor.CacheOperationExpressionEvaluator",
     "org.springframework.context.annotation.ScannedGenericBeanDefinition",
     "org.springframework.context.annotation.LoadTimeWeavingConfiguration",
     "org.springframework.jmx.export.MBeanExportException",
     "org.springframework.context.annotation.BeanAnnotationHelper",
     "org.springframework.context.expression.CachedExpressionEvaluator",
     "org.springframework.context.event.ApplicationListenerMethodAdapter",
     "org.springframework.context.annotation.ConfigurationCondition",
     "org.springframework.stereotype.Component",
     "org.springframework.validation.SmartValidator",
     "org.springframework.context.support.MessageSourceAccessor",
     "org.springframework.cache.support.AbstractValueAdaptingCache",
     "org.springframework.context.support.ConversionServiceFactoryBean",
     "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateTimeToCalendarConverter",
     "org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar$1",
     "org.springframework.context.expression.StandardBeanExpressionResolver$1",
     "org.springframework.context.event.SimpleApplicationEventMulticaster",
     "org.springframework.format.datetime.joda.MillisecondInstantPrinter",
     "org.springframework.jmx.export.naming.MetadataNamingStrategy",
     "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
     "org.springframework.context.expression.BeanFactoryResolver",
     "org.springframework.scheduling.support.CronSequenceGenerator",
     "org.springframework.context.annotation.MBeanExportConfiguration$1",
     "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToInstantConverter",
     "org.springframework.remoting.rmi.RemoteInvocationSerializingExporter",
     "org.springframework.scheduling.annotation.AsyncResult",
     "org.springframework.context.support.AbstractApplicationContext$1",
     "org.springframework.jmx.export.MBeanExporter$1",
     "org.springframework.context.support.BeanDefinitionDsl$1",
     "org.springframework.scheduling.Trigger",
     "org.springframework.context.event.EventListener",
     "org.springframework.scripting.support.package-info",
     "org.springframework.validation.DirectFieldBindingResult",
     "org.springframework.format.support.FormattingConversionService$AnnotationConverterKey",
     "org.springframework.jmx.support.WebSphereMBeanServerFactoryBean",
     "org.springframework.context.support.DefaultLifecycleProcessor",
     "org.springframework.jmx.export.notification.UnableToSendNotificationException",
     "org.springframework.format.datetime.standard.DateTimeFormatterRegistrar$1",
     "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$HibernateValidatorDelegate",
     "org.springframework.cache.annotation.CachingConfigurerSupport",
     "org.springframework.scripting.config.package-info",
     "org.springframework.context.annotation.Lazy",
     "org.springframework.cache.interceptor.CacheOperation",
     "org.springframework.scheduling.concurrent.ConcurrentTaskScheduler",
     "org.springframework.instrument.classloading.websphere.WebSphereClassLoaderAdapter",
     "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToLocalTimeConverter",
     "org.springframework.validation.Errors",
     "org.springframework.cache.annotation.AbstractCachingConfiguration",
     "org.springframework.format.datetime.joda.JodaTimeConverters$LongToReadableInstantConverter",
     "org.springframework.validation.BindingResult",
     "org.springframework.format.datetime.standard.DateTimeContextHolder",
     "org.springframework.scripting.ScriptFactory",
     "org.springframework.jmx.export.metadata.ManagedResource",
     "org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler",
     "org.springframework.ui.context.HierarchicalThemeSource",
     "org.springframework.remoting.support.RemoteInvocationExecutor",
     "org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler",
     "org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean",
     "org.springframework.cache.interceptor.CacheExpressionRootObject",
     "org.springframework.cache.interceptor.SimpleCacheErrorHandler",
     "org.springframework.format.datetime.standard.YearFormatter",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateTimeToDateConverter",
     "org.springframework.context.MessageSource",
     "org.springframework.format.datetime.joda.DateTimeFormatterFactory",
     "org.springframework.format.datetime.standard.DateTimeContext",
     "org.springframework.context.annotation.ParserStrategyUtils",
     "org.springframework.remoting.RemoteTimeoutException",
     "org.springframework.scheduling.support.CronTrigger",
     "org.springframework.context.ApplicationEvent",
     "org.springframework.validation.AbstractPropertyBindingResult",
     "org.springframework.format.datetime.DateFormatterRegistrar$LongToDateConverter",
     "org.springframework.format.support.FormattingConversionServiceFactoryBean",
     "org.springframework.scheduling.concurrent.DefaultManagedTaskExecutor",
     "org.springframework.scripting.support.StandardScriptEvaluator",
     "org.springframework.jmx.export.annotation.ManagedOperation",
     "org.springframework.scheduling.support.TaskUtils",
     "org.springframework.context.annotation.Primary",
     "org.springframework.cache.support.SimpleCacheManager",
     "org.springframework.format.datetime.standard.DateTimeFormatterFactory$1",
     "org.springframework.context.annotation.ConfigurationClass",
     "org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler",
     "org.springframework.validation.ObjectError",
     "org.springframework.context.annotation.ConfigurationClassEnhancer",
     "org.springframework.scheduling.TriggerContext",
     "org.springframework.instrument.classloading.LoadTimeWeaver",
     "org.springframework.context.event.ApplicationEventMulticaster",
     "org.springframework.context.annotation.package-info",
     "org.springframework.instrument.classloading.tomcat.TomcatLoadTimeWeaver",
     "org.springframework.cache.interceptor.KeyGenerator",
     "org.springframework.validation.DataBinder",
     "org.springframework.scripting.config.ScriptBeanDefinitionParser",
     "org.springframework.format.number.money.CurrencyUnitFormatter",
     "org.springframework.context.annotation.ComponentScanAnnotationParser",
     "org.springframework.cache.support.CompositeCacheManager",
     "org.springframework.context.annotation.LoadTimeWeavingConfigurer",
     "org.springframework.cache.concurrent.ConcurrentMapCache",
     "org.springframework.context.event.EventExpressionRootObject",
     "org.springframework.format.datetime.joda.LocalDateTimeParser",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateTimeToInstantConverter",
     "org.springframework.jndi.package-info",
     "org.springframework.jmx.export.annotation.ManagedNotifications",
     "org.springframework.context.annotation.AutoProxyRegistrar",
     "org.springframework.jmx.export.assembler.package-info",
     "org.springframework.context.event.EventPublicationInterceptor",
     "org.springframework.jmx.export.annotation.ManagedOperationParameter",
     "org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory",
     "org.springframework.format.datetime.standard.YearMonthFormatter",
     "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToLocalDateTimeConverter",
     "org.springframework.context.support.ReloadableResourceBundleMessageSource",
     "org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey",
     "org.springframework.jmx.export.metadata.ManagedOperation",
     "org.springframework.context.annotation.ImportAware",
     "org.springframework.format.datetime.standard.DateTimeConverters$CalendarToLocalDateTimeConverter",
     "org.springframework.cache.interceptor.CacheAspectSupport",
     "org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader$1",
     "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
     "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$LookupElement",
     "org.springframework.context.ApplicationEventPublisherAware",
     "org.springframework.ejb.config.AbstractJndiLocatingBeanDefinitionParser",
     "org.springframework.remoting.rmi.RmiInvocationHandler",
     "org.springframework.jmx.access.NotificationListenerRegistrar",
     "org.springframework.jmx.support.JmxUtils",
     "org.springframework.jndi.JndiLocatorSupport",
     "org.springframework.context.annotation.ConfigurationClassPostProcessor",
     "org.springframework.ui.context.package-info",
     "org.springframework.scripting.bsh.BshScriptUtils",
     "org.springframework.instrument.classloading.jboss.package-info",
     "org.springframework.context.annotation.Bean",
     "org.springframework.remoting.soap.SoapFaultException",
     "org.springframework.context.ApplicationContextInitializer",
     "org.springframework.scheduling.annotation.AsyncConfigurationSelector$1",
     "org.springframework.jmx.access.MBeanProxyFactoryBean",
     "org.springframework.context.i18n.LocaleContextHolder",
     "org.springframework.cache.interceptor.CacheOperationInvocationContext",
     "org.springframework.remoting.support.RemoteInvocation",
     "org.springframework.format.annotation.DateTimeFormat$ISO",
     "org.springframework.context.expression.MethodBasedEvaluationContext",
     "org.springframework.validation.ValidationUtils",
     "org.springframework.validation.DefaultMessageCodesResolver$Format",
     "org.springframework.stereotype.package-info",
     "org.springframework.context.MessageSourceResolvable",
     "org.springframework.cache.interceptor.CacheOperationSourcePointcut$1",
     "org.springframework.context.expression.package-info",
     "org.springframework.validation.AbstractErrors",
     "org.springframework.jmx.export.notification.NotificationPublisher",
     "org.springframework.jndi.support.SimpleJndiBeanFactory$1",
     "org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler",
     "org.springframework.scheduling.concurrent.DefaultManagedTaskScheduler",
     "org.springframework.cache.config.AnnotationDrivenCacheBeanDefinitionParser$SpringCachingConfigurer",
     "org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationMetadata",
     "org.springframework.format.datetime.standard.InstantFormatter",
     "org.springframework.scripting.support.ScriptFactoryPostProcessor",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateTimeToDateMidnightConverter",
     "org.springframework.context.support.MessageSourceResourceBundle",
     "org.springframework.scheduling.annotation.EnableAsync",
     "org.springframework.scheduling.annotation.Scheduled",
     "org.springframework.context.event.ContextStartedEvent",
     "org.springframework.jndi.JndiObjectLocator",
     "org.springframework.validation.beanvalidation.BeanValidationPostProcessor",
     "org.springframework.scheduling.package-info",
     "org.springframework.format.datetime.joda.MonthDayFormatter",
     "org.springframework.scheduling.annotation.SchedulingConfiguration",
     "org.springframework.context.annotation.ConfigurationCondition$ConfigurationPhase",
     "org.springframework.context.annotation.EnableLoadTimeWeaving$AspectJWeaving",
     "org.springframework.context.support.ContextTypeMatchClassLoader",
     "org.springframework.jmx.support.MBeanRegistrationSupport",
     "org.springframework.cache.Cache$ValueWrapper",
     "org.springframework.scheduling.annotation.Schedules",
     "org.springframework.jmx.export.metadata.package-info",
     "org.springframework.instrument.classloading.websphere.WebSphereClassPreDefinePlugin",
     "org.springframework.format.datetime.standard.DateTimeConverters$OffsetDateTimeToInstantConverter",
     "org.springframework.validation.annotation.Validated",
     "org.springframework.context.event.SmartApplicationListener",
     "org.springframework.jmx.support.MBeanServerConnectionFactoryBean$MBeanServerConnectionLazyInitTargetSource",
     "org.springframework.scheduling.config.Task",
     "org.springframework.scheduling.concurrent.ConcurrentTaskExecutor$ManagedTaskExecutorAdapter",
     "org.springframework.context.support.BeanDefinitionDsl$environment$beans$1",
     "org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
     "org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser",
     "org.springframework.scheduling.config.TaskExecutorFactoryBean",
     "org.springframework.jmx.export.annotation.ManagedResource",
     "org.springframework.cache.interceptor.CacheAspectSupport$CachePutRequest",
     "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement",
     "org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver",
     "org.springframework.scheduling.concurrent.ConcurrentTaskExecutor$ManagedTaskBuilder",
     "org.springframework.ui.ModelMap",
     "org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler",
     "org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHolder",
     "org.springframework.jmx.export.metadata.JmxMetadataUtils",
     "org.springframework.context.annotation.ConditionContext",
     "org.springframework.context.support.DefaultMessageSourceResolvable",
     "org.springframework.context.annotation.ConditionEvaluator",
     "org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGrouping",
     "org.springframework.cache.interceptor.CacheEvictOperation",
     "org.springframework.format.datetime.joda.JodaTimeConverters$1",
     "org.springframework.format.number.NumberFormatAnnotationFormatterFactory",
     "org.springframework.scheduling.TaskScheduler",
     "org.springframework.cache.interceptor.CacheAspectSupport$1",
     "org.springframework.remoting.support.RemoteAccessor",
     "org.springframework.cache.interceptor.SimpleCacheResolver",
     "org.springframework.context.annotation.DependsOn",
     "org.springframework.scheduling.annotation.AsyncConfigurer",
     "org.springframework.context.annotation.DeferredImportSelector$Group$Entry",
     "org.springframework.remoting.support.RemoteInvocationResult",
     "org.springframework.cache.interceptor.package-info",
     "org.springframework.format.datetime.standard.DateTimeConverters$ZonedDateTimeToInstantConverter",
     "org.springframework.context.support.ClassPathXmlApplicationContext",
     "org.springframework.validation.MessageCodesResolver",
     "org.springframework.jmx.export.metadata.ManagedNotification",
     "org.springframework.cache.interceptor.CacheEvictOperation$Builder",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateTimeToMutableDateTimeConverter",
     "org.springframework.validation.BindException",
     "org.springframework.context.LifecycleProcessor",
     "org.springframework.instrument.classloading.websphere.WebSphereClassPreDefinePlugin$Dummy",
     "org.springframework.context.MessageSourceAware",
     "org.springframework.remoting.support.DefaultRemoteInvocationExecutor",
     "org.springframework.instrument.classloading.WeavingTransformer",
     "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider",
     "org.springframework.cache.config.CacheAdviceParser",
     "org.springframework.context.annotation.Condition",
     "org.springframework.context.weaving.AspectJWeavingEnabler",
     "org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$1",
     "org.springframework.context.ApplicationContext",
     "org.springframework.context.support.BeanDefinitionDsl$BeanSupplierContext$provider$$inlined$getBeanProvider$1",
     "org.springframework.scheduling.config.ScheduledTaskHolder",
     "org.springframework.remoting.support.RemoteInvocationTraceInterceptor",
     "org.springframework.jndi.JndiObjectFactoryBean$JndiObjectProxyFactory",
     "org.springframework.format.datetime.joda.JodaTimeConverters$DateTimeToLocalDateConverter",
     "org.springframework.jmx.export.metadata.JmxAttributeSource",
     "org.springframework.instrument.classloading.websphere.WebSphereLoadTimeWeaver",
     "org.springframework.jmx.support.ObjectNameManager"
    ],
    "usedTypes": [
     "org.springframework.scheduling.annotation.Async",
     "org.springframework.context.annotation.Primary",
     "org.springframework.context.annotation.AnnotationConfigUtils",
     "org.springframework.stereotype.Controller",
     "org.springframework.format.annotation.DateTimeFormat$ISO",
     "org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver",
     "org.springframework.context.annotation.ComponentScan$Filter",
     "org.springframework.format.annotation.DateTimeFormat",
     "org.springframework.context.annotation.ImportBeanDefinitionRegistrar",
     "org.springframework.context.annotation.AnnotationBeanNameGenerator",
     "org.springframework.format.Formatter",
     "org.springframework.context.expression.BeanFactoryResolver",
     "org.springframework.context.expression.MapAccessor",
     "org.springframework.context.ApplicationEventPublisher",
     "org.springframework.context.support.ClassPathXmlApplicationContext",
     "org.springframework.stereotype.Indexed",
     "org.springframework.context.annotation.ImportSelector",
     "org.springframework.context.annotation.FilterType",
     "org.springframework.scheduling.annotation.AsyncResult",
     "org.springframework.context.ApplicationEventPublisherAware",
     "org.springframework.format.FormatterRegistry",
     "org.springframework.context.annotation.ScannedGenericBeanDefinition",
     "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider",
     "org.springframework.context.ResourceLoaderAware",
     "org.springframework.context.annotation.Import",
     "org.springframework.context.ApplicationListener",
     "org.springframework.format.support.FormattingConversionService",
     "org.springframework.context.ApplicationContext",
     "org.springframework.context.annotation.Profile",
     "org.springframework.context.annotation.ComponentScan",
     "org.springframework.context.support.GenericApplicationContext",
     "org.springframework.context.annotation.AnnotationConfigApplicationContext",
     "org.springframework.context.ApplicationEvent",
     "org.springframework.context.annotation.Configuration",
     "org.springframework.context.annotation.ConfigurationClassPostProcessor",
     "org.springframework.context.event.ContextRefreshedEvent",
     "org.springframework.stereotype.Component",
     "org.springframework.context.EnvironmentAware",
     "org.springframework.format.support.DefaultFormattingConversionService",
     "org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
     "org.springframework.context.annotation.Lazy",
     "org.springframework.context.annotation.Bean",
     "org.springframework.context.ApplicationContextAware"
    ],
    "usageRatio": 0.04919908466819222,
    "children": [
     {
      "id": "org.springframework:spring-aop:jar:5.2.0.RC2:compile",
      "coordinates": "org.springframework:spring-aop:5.2.0.RC2",
      "groupId": "org.springframework",
      "artifactId": "spring-aop",
      "version": "5.2.0.RC2",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 370086,
      "type": "transitive",
      "status": "used",
      "parent": "org.springframework:spring-context:jar:5.2.0.RC2:compile (optional) )",
      "allTypes": [
       "org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory",
       "org.springframework.aop.target.LazyInitTargetSource",
       "org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSourceCreator",
       "org.springframework.aop.support.AopUtils",
       "org.springframework.aop.aspectj.AspectJAopUtils",
       "org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanPointcutDesignatorHandler",
       "org.springframework.aop.framework.ReflectiveMethodInvocation",
       "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
       "org.springframework.aop.framework.autoproxy.package-info",
       "org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory",
       "org.springframework.aop.target.dynamic.BeanFactoryRefreshableTargetSource",
       "org.springframework.aop.target.dynamic.Refreshable",
       "org.springframework.aop.support.DelegatingIntroductionInterceptor",
       "org.springframework.aop.config.ScopedProxyBeanDefinitionDecorator",
       "org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl$1",
       "org.springframework.aop.support.annotation.AnnotationMethodMatcher",
       "org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl$2",
       "org.springframework.aop.framework.CglibAopProxy$StaticUnadvisedInterceptor",
       "org.springframework.aop.interceptor.SimpleAsyncUncaughtExceptionHandler",
       "org.springframework.aop.interceptor.ExposeInvocationInterceptor$1",
       "org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody",
       "org.springframework.aop.framework.DefaultAopProxyFactory",
       "org.springframework.aop.aspectj.annotation.AspectMetadata",
       "org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer",
       "org.springframework.aop.target.HotSwappableTargetSource",
       "org.springframework.aop.IntroductionAdvisor",
       "org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor",
       "org.springframework.aop.framework.InterceptorAndDynamicMethodMatcher",
       "org.springframework.aop.config.SpringConfiguredBeanDefinitionParser",
       "org.springframework.aop.framework.AbstractSingletonProxyFactoryBean",
       "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
       "org.springframework.aop.framework.ProxyConfig",
       "org.springframework.aop.aspectj.annotation.PrototypeAspectInstanceFactory",
       "org.springframework.aop.scope.ScopedObject",
       "org.springframework.aop.aspectj.AspectJMethodBeforeAdvice",
       "org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator",
       "org.springframework.aop.TrueClassFilter",
       "org.springframework.aop.framework.CglibAopProxy",
       "org.springframework.aop.Advisor$1",
       "org.springframework.aop.support.DefaultPointcutAdvisor",
       "org.springframework.aop.framework.DefaultAdvisorChainFactory",
       "org.springframework.aop.framework.AopProxy",
       "org.springframework.aop.support.MethodMatchers$ClassFilterAwareUnionMethodMatcher",
       "org.springframework.aop.IntroductionInterceptor",
       "org.springframework.aop.target.EmptyTargetSource",
       "org.springframework.aop.interceptor.PerformanceMonitorInterceptor",
       "org.springframework.aop.framework.adapter.AdvisorAdapter",
       "org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper",
       "org.aopalliance.aop.Advice",
       "org.springframework.aop.framework.CglibAopProxy$FixedChainStaticTargetInterceptor",
       "org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint",
       "org.springframework.aop.interceptor.AsyncExecutionInterceptor",
       "org.springframework.aop.target.SingletonTargetSource",
       "org.springframework.aop.interceptor.ConcurrencyThrottleInterceptor",
       "org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory$SyntheticInstantiationAdvisor",
       "org.aopalliance.intercept.Invocation",
       "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator$BeanFactoryAdvisorRetrievalHelperAdapter",
       "org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$SourceLocationImpl",
       "org.springframework.aop.config.PointcutComponentDefinition",
       "org.springframework.aop.aspectj.RuntimeTestWalker$TestVisitorAdapter",
       "org.springframework.aop.config.AspectComponentDefinition",
       "org.springframework.aop.support.IntroductionInfoSupport",
       "org.springframework.aop.aspectj.AspectJAfterAdvice",
       "org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor",
       "org.springframework.aop.ClassFilter",
       "org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation",
       "org.springframework.aop.IntroductionAwareMethodMatcher",
       "org.springframework.aop.framework.adapter.ThrowsAdviceAdapter",
       "org.springframework.aop.aspectj.RuntimeTestWalker",
       "org.springframework.aop.target.ThreadLocalTargetSourceStats",
       "org.springframework.aop.aspectj.AbstractAspectJAdvice$AdviceExcludingMethodMatcher",
       "org.springframework.aop.aspectj.AspectJExpressionPointcut",
       "org.springframework.aop.AfterReturningAdvice",
       "org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator",
       "org.springframework.aop.config.package-info",
       "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
       "org.springframework.aop.support.ComposablePointcut",
       "org.springframework.aop.aspectj.AspectJExpressionPointcut$BeanContextMatcher",
       "org.springframework.aop.support.NameMatchMethodPointcutAdvisor",
       "org.springframework.aop.support.annotation.package-info",
       "org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor",
       "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
       "org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory",
       "org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotationType",
       "org.springframework.aop.aspectj.annotation.BeanFactoryAspectInstanceFactory",
       "org.springframework.aop.aspectj.DeclareParentsAdvisor",
       "org.springframework.aop.aspectj.annotation.LazySingletonAspectInstanceFactoryDecorator",
       "org.springframework.aop.interceptor.AbstractTraceInterceptor",
       "org.springframework.aop.aspectj.annotation.package-info",
       "org.springframework.aop.support.ControlFlowPointcut",
       "org.springframework.aop.framework.adapter.DefaultAdvisorAdapterRegistry",
       "org.springframework.aop.BeforeAdvice",
       "org.springframework.aop.aspectj.TypePatternClassFilter",
       "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
       "org.springframework.aop.config.MethodLocatingFactoryBean",
       "org.springframework.aop.framework.CglibAopProxy$DynamicUnadvisedExposedInterceptor",
       "org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource",
       "org.springframework.aop.interceptor.ExposeInvocationInterceptor",
       "org.springframework.aop.config.AspectEntry",
       "org.springframework.aop.AopInvocationException",
       "org.springframework.aop.aspectj.RuntimeTestWalker$SubtypeSensitiveVarTypeTestVisitor",
       "org.springframework.aop.framework.autoproxy.target.QuickTargetSourceCreator",
       "org.springframework.aop.target.PoolingConfig",
       "org.springframework.aop.support.AbstractGenericPointcutAdvisor",
       "org.springframework.aop.support.ClassFilters$IntersectionClassFilter",
       "org.springframework.aop.framework.ObjenesisCglibAopProxy",
       "org.springframework.aop.support.AbstractPointcutAdvisor",
       "org.springframework.aop.framework.adapter.AdvisorAdapterRegistry",
       "org.springframework.aop.support.annotation.AnnotationMatchingPointcut$AnnotationCandidateClassFilter",
       "org.springframework.aop.support.JdkRegexpMethodPointcut",
       "org.springframework.aop.framework.CglibAopProxy$StaticDispatcher",
       "org.springframework.aop.framework.AopInfrastructureBean",
       "org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor",
       "org.springframework.aop.aspectj.AspectJWeaverMessageHandler",
       "org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser",
       "org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory",
       "org.springframework.aop.config.ConfigBeanDefinitionParser",
       "org.springframework.aop.interceptor.DebugInterceptor",
       "org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotationParameterNameDiscoverer",
       "org.springframework.aop.support.AbstractExpressionPointcut",
       "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator$BeanFactoryAspectJAdvisorsBuilderAdapter",
       "org.springframework.aop.TargetClassAware",
       "org.springframework.aop.config.AdvisorEntry",
       "org.springframework.aop.Advisor",
       "org.springframework.aop.framework.AdvisedSupportListener",
       "org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher",
       "org.springframework.aop.interceptor.CustomizableTraceInterceptor",
       "org.springframework.aop.framework.adapter.AdvisorAdapterRegistrationManager",
       "org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory$1",
       "org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation",
       "org.aopalliance.intercept.MethodInterceptor",
       "org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$AmbiguousBindingException",
       "org.springframework.aop.aspectj.InstantiationModelAwarePointcutAdvisor",
       "org.springframework.aop.aspectj.AspectJPointcutAdvisor",
       "org.springframework.aop.config.AopNamespaceUtils",
       "org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor",
       "org.springframework.aop.aspectj.annotation.SimpleMetadataAwareAspectInstanceFactory",
       "org.springframework.aop.support.DynamicMethodMatcher",
       "org.springframework.aop.aspectj.SingletonAspectInstanceFactory",
       "org.springframework.aop.interceptor.SimpleTraceInterceptor",
       "org.springframework.aop.aspectj.AspectJExpressionPointcut$DefensiveShadowMatch",
       "org.springframework.aop.support.Pointcuts",
       "org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameInterceptor",
       "org.springframework.aop.support.MethodMatchers$UnionMethodMatcher",
       "org.springframework.aop.aspectj.SimpleAspectInstanceFactory",
       "org.springframework.aop.interceptor.AbstractMonitoringInterceptor",
       "org.aopalliance.intercept.ConstructorInvocation",
       "org.springframework.aop.aspectj.AspectJAfterReturningAdvice",
       "org.springframework.aop.interceptor.ExposeBeanNameAdvisors",
       "org.springframework.aop.framework.adapter.ThrowsAdviceInterceptor",
       "org.springframework.aop.target.ThreadLocalTargetSource",
       "org.aopalliance.intercept.ConstructorInterceptor",
       "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
       "org.springframework.aop.aspectj.annotation.AspectMetadata$1",
       "org.springframework.aop.framework.AopProxyUtils",
       "org.springframework.aop.config.PointcutEntry",
       "org.springframework.aop.target.PrototypeTargetSource",
       "org.springframework.aop.support.ClassFilters$UnionClassFilter",
       "org.springframework.aop.ThrowsAdvice",
       "org.springframework.aop.scope.DefaultScopedObject",
       "org.springframework.aop.target.SimpleBeanTargetSource",
       "org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator",
       "org.springframework.aop.support.ExpressionPointcut",
       "org.springframework.aop.framework.CglibAopProxy$DynamicUnadvisedInterceptor",
       "org.springframework.aop.support.annotation.AnnotationMatchingPointcut",
       "org.springframework.aop.aspectj.annotation.AspectJProxyFactory",
       "org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder",
       "org.springframework.aop.support.annotation.AnnotationClassFilter",
       "org.springframework.aop.framework.adapter.MethodBeforeAdviceAdapter",
       "org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor",
       "org.springframework.aop.aspectj.autoproxy.package-info",
       "org.springframework.aop.config.AdviceEntry",
       "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
       "org.springframework.aop.framework.CglibAopProxy$AdvisedDispatcher",
       "org.springframework.aop.config.AopConfigUtils",
       "org.springframework.aop.ProxyMethodInvocation",
       "org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$MethodSignatureImpl",
       "org.springframework.aop.aspectj.RuntimeTestWalker$TargetInstanceOfResidueTestVisitor",
       "org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$1",
       "org.springframework.aop.PointcutAdvisor",
       "org.springframework.aop.framework.Advised",
       "org.springframework.aop.aspectj.annotation.NotAnAtAspectException",
       "org.springframework.aop.framework.AdvisedSupport$MethodCacheKey",
       "org.springframework.aop.support.package-info",
       "org.springframework.aop.IntroductionInfo",
       "org.springframework.aop.framework.autoproxy.target.LazyInitTargetSourceCreator",
       "org.aopalliance.intercept.Joinpoint",
       "org.aopalliance.intercept.Interceptor",
       "org.springframework.aop.target.CommonsPool2TargetSource",
       "org.springframework.aop.DynamicIntroductionAdvice",
       "org.springframework.aop.support.ClassFilters",
       "org.springframework.aop.interceptor.AsyncExecutionAspectSupport",
       "org.springframework.aop.aspectj.annotation.SingletonMetadataAwareAspectInstanceFactory",
       "org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor",
       "org.springframework.aop.scope.ScopedProxyUtils",
       "org.springframework.aop.framework.ProxyFactoryBean",
       "org.springframework.aop.SpringProxy",
       "org.springframework.aop.support.DynamicMethodMatcherPointcut",
       "org.springframework.aop.scope.package-info",
       "org.springframework.aop.config.AopNamespaceHandler",
       "org.springframework.aop.package-info",
       "org.springframework.aop.support.MethodMatchers$ClassFilterAwareUnionIntroductionAwareMethodMatcher",
       "org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl",
       "org.springframework.aop.aspectj.AspectJAroundAdvice",
       "org.springframework.aop.MethodBeforeAdvice",
       "org.springframework.aop.aspectj.AspectJPrecedenceInformation",
       "org.springframework.aop.framework.ProxyFactory",
       "org.springframework.aop.support.DefaultIntroductionAdvisor",
       "org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory",
       "org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$1",
       "org.springframework.aop.framework.AopProxyFactory",
       "org.springframework.aop.framework.AdvisorChainFactory",
       "org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor",
       "org.springframework.aop.framework.JdkDynamicAopProxy",
       "org.springframework.aop.support.StaticMethodMatcherPointcutAdvisor",
       "org.springframework.aop.RawTargetAccess",
       "org.springframework.aop.TargetSource",
       "org.springframework.aop.framework.AopContext",
       "org.springframework.aop.aspectj.AspectJProxyUtils",
       "org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator",
       "org.aopalliance.intercept.MethodInvocation",
       "org.springframework.aop.framework.adapter.UnknownAdviceTypeException",
       "org.springframework.aop.aspectj.AspectJAfterThrowingAdvice",
       "org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource",
       "org.springframework.aop.aspectj.AbstractAspectJAdvice",
       "org.springframework.aop.framework.adapter.AfterReturningAdviceAdapter",
       "org.springframework.aop.target.AbstractLazyCreationTargetSource",
       "org.springframework.aop.aspectj.AspectInstanceFactory",
       "org.springframework.aop.framework.autoproxy.TargetSourceCreator",
       "org.springframework.aop.MethodMatcher",
       "org.springframework.aop.config.AdvisorComponentDefinition",
       "org.springframework.aop.framework.AdvisedSupport",
       "org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry",
       "org.springframework.aop.support.RegexpMethodPointcutAdvisor",
       "org.springframework.aop.support.Pointcuts$SetterPointcut",
       "org.springframework.aop.TrueMethodMatcher",
       "org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler",
       "org.aopalliance.aop.AspectException",
       "org.springframework.aop.support.Pointcuts$GetterPointcut",
       "org.springframework.aop.framework.CglibAopProxy$StaticUnadvisedExposedInterceptor",
       "org.springframework.aop.interceptor.ExposeBeanNameAdvisors$ExposeBeanNameIntroduction",
       "org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor",
       "org.springframework.aop.support.MethodMatchers",
       "org.springframework.aop.scope.ScopedProxyFactoryBean",
       "org.springframework.aop.framework.CglibAopProxy$HashCodeInterceptor",
       "org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter",
       "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator$PartiallyComparableAdvisorHolder",
       "org.springframework.aop.target.AbstractPrototypeBasedTargetSource",
       "org.springframework.aop.support.StaticMethodMatcher",
       "org.springframework.aop.framework.CglibAopProxy$EqualsInterceptor",
       "org.springframework.aop.Pointcut",
       "org.springframework.aop.support.MethodMatchers$UnionIntroductionAwareMethodMatcher",
       "org.springframework.aop.framework.autoproxy.ProxyCreationContext",
       "org.springframework.aop.support.StaticMethodMatcherPointcut",
       "org.springframework.aop.interceptor.package-info",
       "org.springframework.aop.interceptor.JamonPerformanceMonitorInterceptor",
       "org.springframework.aop.framework.AopConfigException",
       "org.springframework.aop.framework.ProxyProcessorSupport",
       "org.springframework.aop.aspectj.AspectJExpressionPointcut$1",
       "org.springframework.aop.aspectj.package-info",
       "org.springframework.aop.support.MethodMatchers$IntersectionIntroductionAwareMethodMatcher",
       "org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl$PerTargetInstantiationModelPointcut",
       "org.springframework.aop.framework.ProxyCreatorSupport",
       "org.springframework.aop.target.AbstractPoolingTargetSource",
       "org.springframework.aop.aspectj.RuntimeTestWalker$ThisInstanceOfResidueTestVisitor",
       "org.springframework.aop.framework.CglibAopProxy$SerializableNoOp",
       "org.springframework.aop.support.RootClassFilter",
       "org.springframework.aop.TruePointcut",
       "org.springframework.aop.support.NameMatchMethodPointcut",
       "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
       "org.springframework.aop.support.RegexpMethodPointcutAdvisor$1",
       "org.springframework.aop.aspectj.RuntimeTestWalker$1",
       "org.springframework.aop.framework.autoproxy.AutoProxyUtils",
       "org.springframework.aop.framework.adapter.package-info",
       "org.springframework.aop.AfterAdvice",
       "org.springframework.aop.support.AbstractRegexpMethodPointcut",
       "org.springframework.aop.framework.package-info"
      ],
      "usedTypes": [
       "org.springframework.aop.framework.ProxyFactoryBean",
       "org.springframework.aop.interceptor.ExposeInvocationInterceptor",
       "org.springframework.aop.target.LazyInitTargetSource",
       "org.springframework.aop.support.AopUtils",
       "org.springframework.aop.RawTargetAccess",
       "org.springframework.aop.framework.Advised",
       "org.springframework.aop.framework.ReflectiveMethodInvocation",
       "org.springframework.aop.TargetSource",
       "org.aopalliance.intercept.MethodInterceptor",
       "org.aopalliance.intercept.MethodInvocation",
       "org.springframework.aop.TargetClassAware",
       "org.springframework.aop.framework.AopProxyUtils",
       "org.springframework.aop.framework.ProxyFactory",
       "org.aopalliance.aop.Advice",
       "org.springframework.aop.ProxyMethodInvocation",
       "org.springframework.aop.Advisor"
      ],
      "usageRatio": 0.05776173285198556,
      "children": []
     }
    ]
   },
   {
    "id": "org.springframework:spring-expression:jar:5.2.0.RC2:compile",
    "coordinates": "org.springframework:spring-expression:5.2.0.RC2",
    "groupId": "org.springframework",
    "artifactId": "spring-expression",
    "version": "5.2.0.RC2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 281903,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.expression.spel.ast.BooleanLiteral",
     "org.springframework.expression.ExpressionException",
     "org.springframework.expression.spel.ast.RealLiteral",
     "org.springframework.expression.PropertyAccessor",
     "org.springframework.expression.spel.ast.Indexer$StringIndexingLValue",
     "org.springframework.expression.spel.support.ReflectiveMethodExecutor",
     "org.springframework.expression.spel.ast.TypeReference",
     "org.springframework.expression.spel.ast.ConstructorReference",
     "org.springframework.expression.spel.ast.OpDivide",
     "org.springframework.expression.ExpressionInvocationTargetException",
     "org.springframework.expression.spel.support.DataBindingPropertyAccessor",
     "org.springframework.expression.spel.ast.Projection",
     "org.springframework.expression.spel.ast.Selection",
     "org.springframework.expression.spel.CompilablePropertyAccessor",
     "org.springframework.expression.spel.ast.VariableReference",
     "org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchKind",
     "org.springframework.expression.package-info",
     "org.springframework.expression.spel.ast.OpInc",
     "org.springframework.expression.ParserContext$1",
     "org.springframework.expression.spel.standard.SpelCompiler$ExpressionClassWriter",
     "org.springframework.expression.spel.ast.LongLiteral",
     "org.springframework.expression.spel.support.SimpleEvaluationContext$1",
     "org.springframework.expression.spel.standard.Tokenizer",
     "org.springframework.expression.spel.ast.OpAnd",
     "org.springframework.expression.spel.ast.Indexer$ArrayIndexingValueRef",
     "org.springframework.expression.spel.ast.Indexer$IndexedType",
     "org.springframework.expression.spel.ast.OpModulus",
     "org.springframework.expression.spel.ExpressionState",
     "org.springframework.expression.spel.CodeFlow",
     "org.springframework.expression.spel.standard.TokenKind",
     "org.springframework.expression.spel.ast.SpelNodeImpl",
     "org.springframework.expression.spel.ast.OpMultiply",
     "org.springframework.expression.spel.support.StandardTypeComparator",
     "org.springframework.expression.spel.ast.NullLiteral",
     "org.springframework.expression.spel.SpelEvaluationException",
     "org.springframework.expression.ParserContext",
     "org.springframework.expression.spel.standard.Token",
     "org.springframework.expression.Operation",
     "org.springframework.expression.spel.ast.InlineList",
     "org.springframework.expression.MethodExecutor",
     "org.springframework.expression.spel.support.StandardOperatorOverloader",
     "org.springframework.expression.spel.ast.OpLE",
     "org.springframework.expression.spel.support.StandardTypeConverter",
     "org.springframework.expression.spel.ast.MethodReference$MethodValueRef",
     "org.springframework.expression.spel.ast.package-info",
     "org.springframework.expression.spel.support.ReflectiveConstructorResolver",
     "org.springframework.expression.TypedValue",
     "org.springframework.expression.spel.standard.SpelCompiler$ChildClassLoader",
     "org.springframework.expression.spel.CompiledExpression",
     "org.springframework.expression.spel.support.ReflectiveMethodResolver",
     "org.springframework.expression.spel.ast.OpLT",
     "org.springframework.expression.spel.ast.TypeCode",
     "org.springframework.expression.spel.SpelMessage$1",
     "org.springframework.expression.spel.SpelMessage",
     "org.springframework.expression.spel.support.StandardTypeLocator",
     "org.springframework.expression.spel.support.ReflectionHelper",
     "org.springframework.expression.spel.ast.AstUtils",
     "org.springframework.expression.spel.ast.ValueRef$TypedValueHolderValueRef",
     "org.springframework.expression.spel.support.ReflectiveConstructorExecutor",
     "org.springframework.expression.spel.support.ReflectivePropertyAccessor$InvokerPair",
     "org.springframework.expression.spel.ast.Indexer$PropertyIndexingValueRef",
     "org.springframework.expression.spel.support.SimpleEvaluationContext",
     "org.springframework.expression.ExpressionParser",
     "org.springframework.expression.spel.ast.OpNE",
     "org.springframework.expression.TypeComparator",
     "org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey",
     "org.springframework.expression.spel.ast.OperatorMatches$1",
     "org.springframework.expression.Expression",
     "org.springframework.expression.spel.ast.Operator",
     "org.springframework.expression.spel.standard.SpelExpressionParser",
     "org.springframework.expression.spel.ast.OpEQ",
     "org.springframework.expression.spel.SpelCompilerMode",
     "org.springframework.expression.common.ExpressionUtils",
     "org.springframework.expression.spel.support.StandardEvaluationContext",
     "org.springframework.expression.spel.ast.Indexer$MapIndexingValueRef",
     "org.springframework.expression.spel.SpelMessage$Kind",
     "org.springframework.expression.spel.support.ReflectivePropertyAccessor",
     "org.springframework.expression.spel.ast.Operator$DescriptorComparison",
     "org.springframework.expression.MethodResolver",
     "org.springframework.expression.common.LiteralExpression",
     "org.springframework.expression.spel.ast.OperatorMatches$MatcherInput",
     "org.springframework.expression.MethodFilter",
     "org.springframework.expression.spel.support.DataBindingMethodResolver",
     "org.springframework.expression.spel.ast.OperatorMatches",
     "org.springframework.expression.spel.SpelParseException",
     "org.springframework.expression.spel.ast.Identifier",
     "org.springframework.expression.spel.support.BooleanTypedValue",
     "org.springframework.expression.common.CompositeStringExpression",
     "org.springframework.expression.OperatorOverloader",
     "org.springframework.expression.spel.ast.IntLiteral",
     "org.springframework.expression.spel.ast.Elvis",
     "org.springframework.expression.spel.package-info",
     "org.springframework.expression.ConstructorExecutor",
     "org.springframework.expression.spel.ast.Literal",
     "org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef",
     "org.springframework.expression.TypeConverter",
     "org.springframework.expression.spel.ast.OpGE",
     "org.springframework.expression.spel.ast.Ternary",
     "org.springframework.expression.spel.ast.FormatHelper",
     "org.springframework.expression.AccessException",
     "org.springframework.expression.BeanResolver",
     "org.springframework.expression.EvaluationContext",
     "org.springframework.expression.spel.ast.MethodReference$CachedMethodExecutor",
     "org.springframework.expression.common.package-info",
     "org.springframework.expression.spel.ast.MethodReference",
     "org.springframework.expression.spel.standard.SpelExpression",
     "org.springframework.expression.spel.ast.StringLiteral",
     "org.springframework.expression.spel.support.package-info",
     "org.springframework.expression.spel.ast.CompoundExpression",
     "org.springframework.expression.spel.ast.OpGT",
     "org.springframework.expression.spel.ast.InlineMap",
     "org.springframework.expression.spel.ast.OpMinus",
     "org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue",
     "org.springframework.expression.spel.ast.OpDec",
     "org.springframework.expression.spel.ast.OpOr",
     "org.springframework.expression.common.TemplateAwareExpressionParser$Bracket",
     "org.springframework.expression.spel.standard.SpelCompiler",
     "org.springframework.expression.spel.ast.FunctionReference",
     "org.springframework.expression.EvaluationException",
     "org.springframework.expression.spel.ast.BeanReference",
     "org.springframework.expression.common.TemplateParserContext",
     "org.springframework.expression.spel.InternalParseException",
     "org.springframework.expression.spel.CodeFlow$ClinitAdder",
     "org.springframework.expression.spel.ast.Indexer",
     "org.springframework.expression.common.TemplateAwareExpressionParser",
     "org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo",
     "org.springframework.expression.spel.ast.VariableReference$VariableRef",
     "org.springframework.expression.spel.ast.PropertyOrFieldReference",
     "org.springframework.expression.TypeLocator",
     "org.springframework.expression.spel.ast.OperatorMatches$AccessCount",
     "org.springframework.expression.spel.standard.package-info",
     "org.springframework.expression.spel.ast.QualifiedIdentifier",
     "org.springframework.expression.ParseException",
     "org.springframework.expression.spel.ast.OperatorBetween",
     "org.springframework.expression.spel.ast.OperatorInstanceof",
     "org.springframework.expression.spel.ast.OpPlus",
     "org.springframework.expression.spel.ast.OperatorPower",
     "org.springframework.expression.spel.ast.OperatorNot",
     "org.springframework.expression.spel.ast.Assign",
     "org.springframework.expression.spel.support.SimpleEvaluationContext$Builder",
     "org.springframework.expression.spel.SpelParserConfiguration",
     "org.springframework.expression.spel.ast.ValueRef$NullValueRef",
     "org.springframework.expression.spel.ExpressionState$VariableScope",
     "org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor",
     "org.springframework.expression.spel.ast.ValueRef",
     "org.springframework.expression.spel.standard.InternalSpelExpressionParser",
     "org.springframework.expression.ConstructorResolver",
     "org.springframework.expression.spel.SpelNode",
     "org.springframework.expression.spel.ast.FloatLiteral",
     "org.springframework.expression.spel.CodeFlow$FieldAdder"
    ],
    "usedTypes": [
     "org.springframework.expression.spel.support.ReflectivePropertyAccessor",
     "org.springframework.expression.spel.SpelEvaluationException",
     "org.springframework.expression.spel.SpelMessage",
     "org.springframework.expression.PropertyAccessor",
     "org.springframework.expression.ParserContext",
     "org.springframework.expression.MethodResolver",
     "org.springframework.expression.spel.support.SimpleEvaluationContext$Builder",
     "org.springframework.expression.MethodExecutor",
     "org.springframework.expression.spel.SpelParserConfiguration",
     "org.springframework.expression.AccessException",
     "org.springframework.expression.EvaluationContext",
     "org.springframework.expression.common.TemplateParserContext",
     "org.springframework.expression.spel.support.SimpleEvaluationContext",
     "org.springframework.expression.ExpressionParser",
     "org.springframework.expression.Expression",
     "org.springframework.expression.spel.standard.SpelExpressionParser",
     "org.springframework.expression.TypedValue",
     "org.springframework.expression.spel.support.StandardEvaluationContext"
    ],
    "usageRatio": 0.12,
    "children": []
   },
   {
    "id": "org.springframework:spring-tx:jar:5.2.0.RC2:compile",
    "coordinates": "org.springframework:spring-tx:5.2.0.RC2",
    "groupId": "org.springframework",
    "artifactId": "spring-tx",
    "version": "5.2.0.RC2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 313257,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.dao.PessimisticLockingFailureException",
     "org.springframework.transaction.reactive.TransactionalOperatorExtensionsKt",
     "org.springframework.jca.cci.core.RecordCreator",
     "org.springframework.transaction.reactive.TransactionCallback",
     "org.springframework.jca.work.WorkManagerTaskExecutor",
     "org.springframework.dao.support.PersistenceExceptionTranslationInterceptor",
     "org.springframework.jca.endpoint.package-info",
     "org.springframework.dao.TransientDataAccessResourceException",
     "org.springframework.transaction.TransactionSystemException",
     "org.springframework.dao.TransientDataAccessException",
     "org.springframework.transaction.support.ResourceHolderSynchronization",
     "org.springframework.transaction.event.TransactionPhase",
     "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource$1",
     "org.springframework.dao.annotation.PersistenceExceptionTranslationAdvisor",
     "org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor$1",
     "org.springframework.jca.cci.core.CciTemplate$SimpleRecordExtractor",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$KotlinDelegate",
     "org.springframework.transaction.CannotCreateTransactionException",
     "org.springframework.transaction.reactive.TransactionalOperatorImpl",
     "org.springframework.transaction.config.package-info",
     "org.springframework.dao.NonTransientDataAccessException",
     "org.springframework.transaction.config.TxAdviceBeanDefinitionParser",
     "org.springframework.transaction.interceptor.TransactionInterceptor",
     "org.springframework.transaction.support.ResourceHolder",
     "org.springframework.transaction.ReactiveTransactionManager",
     "org.springframework.transaction.interceptor.TransactionAttributeSourceEditor",
     "org.springframework.transaction.reactive.AbstractReactiveTransactionManager$1",
     "org.springframework.transaction.NoTransactionException",
     "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor$1",
     "org.springframework.transaction.jta.ManagedTransactionAdapter",
     "org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut$1",
     "org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut",
     "org.springframework.transaction.reactive.TransactionContextHolder",
     "org.springframework.dao.DataAccessResourceFailureException",
     "org.springframework.transaction.interceptor.TransactionalProxy",
     "org.springframework.jca.cci.object.package-info",
     "org.springframework.jca.endpoint.AbstractMessageEndpointFactory",
     "org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates",
     "org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser$Ejb3TransactionAttribute",
     "org.springframework.transaction.support.TransactionCallback",
     "org.springframework.transaction.annotation.Isolation",
     "org.springframework.dao.PermissionDeniedDataAccessException",
     "org.springframework.dao.ConcurrencyFailureException",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo",
     "org.springframework.transaction.reactive.package-info",
     "org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser",
     "org.springframework.transaction.config.TransactionManagementConfigUtils",
     "org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter",
     "org.springframework.transaction.event.package-info",
     "org.springframework.jca.cci.connection.ConnectionHolder",
     "org.springframework.jca.endpoint.AbstractMessageEndpointFactory$TransactionDelegate",
     "org.springframework.jca.cci.CannotGetCciConnectionException",
     "org.springframework.jca.support.LocalConnectionFactoryBean",
     "org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource",
     "org.springframework.dao.CannotAcquireLockException",
     "org.springframework.jca.cci.connection.DelegatingConnectionFactory",
     "org.springframework.dao.support.package-info",
     "org.springframework.transaction.support.SimpleTransactionStatus",
     "org.springframework.transaction.reactive.TransactionalOperatorExtensionsKt$transactional$2",
     "org.springframework.transaction.interceptor.CompositeTransactionAttributeSource",
     "org.springframework.jca.context.SpringContextResourceAdapter",
     "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
     "org.springframework.transaction.support.TransactionSynchronization",
     "org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut$TransactionAttributeSourceClassFilter",
     "org.springframework.transaction.reactive.TransactionSynchronizationUtils$ScopedProxyUnwrapper",
     "org.springframework.transaction.support.package-info",
     "org.springframework.transaction.NestedTransactionNotSupportedException",
     "org.springframework.transaction.support.WithoutTransactionOperations",
     "org.springframework.transaction.reactive.ReactiveResourceSynchronization",
     "org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy",
     "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
     "org.springframework.jca.cci.InvalidResultSetAccessException",
     "org.springframework.transaction.interceptor.TransactionProxyFactoryBean",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$VavrDelegate",
     "org.springframework.transaction.ReactiveTransaction",
     "org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates$3",
     "org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates$2",
     "org.springframework.jca.work.SimpleTaskWorkManager",
     "org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates$1",
     "org.springframework.jca.cci.CannotCreateRecordException",
     "org.springframework.dao.support.PersistenceExceptionTranslator",
     "org.springframework.dao.support.DaoSupport",
     "org.springframework.transaction.reactive.GenericReactiveTransaction",
     "org.springframework.transaction.support.DefaultTransactionDefinition",
     "org.springframework.dao.EmptyResultDataAccessException",
     "org.springframework.transaction.reactive.TransactionContextManager",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionSupport",
     "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
     "org.springframework.transaction.support.CallbackPreferringPlatformTransactionManager",
     "org.springframework.jca.context.package-info",
     "org.springframework.transaction.UnexpectedRollbackException",
     "org.springframework.transaction.support.SimpleTransactionScope$ScopedObjectsHolder",
     "org.springframework.jca.cci.core.CciTemplate",
     "org.springframework.transaction.interceptor.RollbackRuleAttribute",
     "org.springframework.transaction.InvalidIsolationLevelException",
     "org.springframework.jca.context.BootstrapContextAwareProcessor",
     "org.springframework.jca.cci.object.MappingRecordOperation$RecordCreatorImpl",
     "org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder",
     "org.springframework.transaction.support.TransactionOperations",
     "org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder",
     "org.springframework.jca.cci.object.EisOperation",
     "org.springframework.transaction.config.JtaTransactionManagerBeanDefinitionParser",
     "org.springframework.transaction.support.ResourceTransactionManager",
     "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
     "org.springframework.transaction.support.SimpleTransactionScope$CleanupSynchronization",
     "org.springframework.jca.cci.package-info",
     "org.springframework.dao.InvalidDataAccessApiUsageException",
     "org.springframework.transaction.reactive.AbstractReactiveTransactionManager",
     "org.springframework.jca.cci.connection.package-info",
     "org.springframework.dao.DeadlockLoserDataAccessException",
     "org.springframework.transaction.annotation.Propagation",
     "org.springframework.transaction.annotation.TransactionManagementConfigurer",
     "org.springframework.transaction.interceptor.RuleBasedTransactionAttribute",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$ThrowableHolder",
     "org.springframework.transaction.support.TransactionSynchronizationUtils",
     "org.springframework.transaction.HeuristicCompletionException",
     "org.springframework.transaction.reactive.TransactionSynchronization",
     "org.springframework.transaction.event.TransactionalEventListener",
     "org.springframework.transaction.TransactionSuspensionNotSupportedException",
     "org.springframework.transaction.support.AbstractPlatformTransactionManager",
     "org.springframework.jca.cci.core.ConnectionCallback",
     "org.springframework.transaction.TransactionUsageException",
     "org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback",
     "org.springframework.transaction.reactive.TransactionContextManager$NoTransactionInContextException",
     "org.springframework.jca.cci.connection.SingleConnectionFactory",
     "org.springframework.jca.cci.connection.ConnectionFactoryUtils$ConnectionSynchronization",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$1",
     "org.springframework.dao.DuplicateKeyException",
     "org.springframework.dao.RecoverableDataAccessException",
     "org.springframework.transaction.support.AbstractTransactionStatus",
     "org.springframework.transaction.annotation.package-info",
     "org.springframework.transaction.InvalidTimeoutException",
     "org.springframework.transaction.interceptor.NoRollbackRuleAttribute",
     "org.springframework.jca.cci.connection.SingleConnectionFactory$1",
     "org.springframework.transaction.annotation.SpringTransactionAnnotationParser",
     "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
     "org.springframework.transaction.annotation.Transactional",
     "org.springframework.dao.NonTransientDataAccessResourceException",
     "org.springframework.transaction.support.TransactionSynchronizationAdapter",
     "org.springframework.jca.context.ResourceAdapterApplicationContext",
     "org.springframework.jca.cci.object.MappingRecordOperation$RecordExtractorImpl",
     "org.springframework.transaction.support.TransactionSynchronizationManager",
     "org.springframework.jca.cci.connection.CciLocalTransactionManager",
     "org.springframework.jca.cci.core.package-info",
     "org.springframework.dao.CleanupFailureDataAccessException",
     "org.springframework.transaction.TransactionManager",
     "org.springframework.transaction.config.AnnotationDrivenBeanDefinitionParser",
     "org.springframework.jca.cci.connection.NotSupportedRecordFactory",
     "org.springframework.transaction.jta.JtaTransactionObject",
     "org.springframework.jca.cci.core.support.package-info",
     "org.springframework.dao.InvalidDataAccessResourceUsageException",
     "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector$1",
     "org.springframework.transaction.interceptor.TransactionAspectSupport",
     "org.springframework.transaction.config.AnnotationDrivenBeanDefinitionParser$AopAutoProxyConfigurer",
     "org.springframework.jca.endpoint.GenericMessageEndpointFactory",
     "org.springframework.transaction.support.TransactionSynchronizationUtils$ScopedProxyUnwrapper",
     "org.springframework.transaction.support.ResourceTransactionDefinition",
     "org.springframework.transaction.support.AbstractPlatformTransactionManager$1",
     "org.springframework.transaction.event.TransactionalEventListenerFactory",
     "org.springframework.transaction.PlatformTransactionManager",
     "org.springframework.transaction.interceptor.TransactionAttribute",
     "org.springframework.dao.package-info",
     "org.springframework.transaction.annotation.TransactionAnnotationParser",
     "org.springframework.transaction.IllegalTransactionStateException",
     "org.springframework.transaction.annotation.EnableTransactionManagement",
     "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
     "org.springframework.jca.cci.connection.CciLocalTransactionManager$1",
     "org.springframework.transaction.support.ResourceHolderSupport",
     "org.springframework.transaction.jta.WebLogicJtaTransactionManager",
     "org.springframework.transaction.interceptor.TransactionAttributeSource",
     "org.springframework.jca.cci.object.MappingCommAreaOperation",
     "org.springframework.transaction.config.JtaTransactionManagerFactoryBean",
     "org.springframework.jca.endpoint.GenericMessageEndpointFactory$1",
     "org.springframework.transaction.interceptor.TransactionAttributeEditor",
     "org.springframework.dao.CannotSerializeTransactionException",
     "org.springframework.transaction.support.DelegatingTransactionDefinition",
     "org.springframework.jca.support.ResourceAdapterFactoryBean",
     "org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy$TransactionAwareInvocationHandler",
     "org.springframework.jca.endpoint.GenericMessageEndpointFactory$GenericMessageEndpoint",
     "org.springframework.jca.cci.CciOperationNotSupportedException",
     "org.springframework.jca.cci.connection.SingleConnectionFactory$CloseSuppressingInvocationHandler",
     "org.springframework.transaction.reactive.TransactionSynchronizationManager",
     "org.springframework.transaction.support.SmartTransactionObject",
     "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
     "org.springframework.jca.work.DelegatingWork",
     "org.springframework.transaction.TransactionException",
     "org.springframework.transaction.jta.JtaTransactionManager",
     "org.springframework.jca.cci.core.support.CommAreaRecord",
     "org.springframework.jca.work.package-info",
     "org.springframework.jca.support.SimpleBootstrapContext",
     "org.springframework.jca.cci.connection.ConnectionFactoryUtils",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$ThrowableHolderException",
     "org.springframework.dao.TypeMismatchDataAccessException",
     "org.springframework.jca.cci.object.MappingRecordOperation",
     "org.springframework.jca.cci.core.support.CciDaoSupport",
     "org.springframework.dao.OptimisticLockingFailureException",
     "org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource",
     "org.springframework.dao.DataIntegrityViolationException",
     "org.springframework.transaction.jta.WebSphereUowTransactionManager",
     "org.springframework.transaction.support.SimpleTransactionScope",
     "org.springframework.transaction.interceptor.package-info",
     "org.springframework.jca.cci.core.InteractionCallback",
     "org.springframework.transaction.jta.SpringJtaSynchronizationAdapter",
     "org.springframework.dao.UncategorizedDataAccessException",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionSupport$1",
     "org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo",
     "org.springframework.transaction.jta.SimpleTransactionFactory",
     "org.springframework.transaction.SavepointManager",
     "org.springframework.jca.support.package-info",
     "org.springframework.transaction.jta.package-info",
     "org.springframework.jca.work.SimpleTaskWorkManager$DelegatingWorkAdapter",
     "org.springframework.jca.endpoint.GenericMessageEndpointFactory$InternalResourceException",
     "org.springframework.transaction.event.ApplicationListenerMethodTransactionalAdapter$TransactionSynchronizationEventAdapter",
     "org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject",
     "org.springframework.transaction.jta.WebSphereUowTransactionManager$UOWActionAdapter",
     "org.springframework.transaction.TransactionStatus",
     "org.springframework.jca.context.BootstrapContextAware",
     "org.springframework.dao.annotation.package-info",
     "org.springframework.transaction.reactive.TransactionContext",
     "org.springframework.dao.DataAccessException",
     "org.springframework.dao.IncorrectResultSizeDataAccessException",
     "org.springframework.transaction.interceptor.DelegatingTransactionAttribute",
     "org.springframework.jca.cci.RecordTypeNotSupportedException",
     "org.springframework.transaction.TransactionDefinition",
     "org.springframework.transaction.TransactionExecution",
     "org.springframework.dao.DataRetrievalFailureException",
     "org.springframework.transaction.package-info",
     "org.springframework.jca.cci.core.CciTemplate$1",
     "org.springframework.transaction.jta.JtaAfterCompletionSynchronization",
     "org.springframework.transaction.annotation.JtaTransactionAnnotationParser",
     "org.springframework.jca.endpoint.AbstractMessageEndpointFactory$AbstractMessageEndpoint",
     "org.springframework.transaction.jta.TransactionFactory",
     "org.springframework.dao.IncorrectUpdateSemanticsDataAccessException",
     "org.springframework.transaction.support.DefaultTransactionStatus",
     "org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor",
     "org.springframework.jca.endpoint.GenericMessageEndpointManager",
     "org.springframework.dao.support.DataAccessUtils",
     "org.springframework.dao.support.ChainedPersistenceExceptionTranslator",
     "org.springframework.transaction.interceptor.DefaultTransactionAttribute",
     "org.springframework.transaction.support.TransactionCallbackWithoutResult",
     "org.springframework.transaction.TransactionTimedOutException",
     "org.springframework.transaction.StaticTransactionDefinition",
     "org.springframework.dao.QueryTimeoutException",
     "org.springframework.transaction.event.ApplicationListenerMethodTransactionalAdapter",
     "org.springframework.transaction.reactive.TransactionalOperator",
     "org.springframework.jca.cci.object.SimpleRecordOperation",
     "org.springframework.jca.cci.core.RecordExtractor",
     "org.springframework.transaction.config.TxNamespaceHandler",
     "org.springframework.transaction.support.TransactionTemplate",
     "org.springframework.transaction.reactive.TransactionSynchronizationUtils",
     "org.springframework.jca.cci.core.CciOperations",
     "org.springframework.transaction.jta.UserTransactionAdapter"
    ],
    "usedTypes": [
     "org.springframework.transaction.interceptor.TransactionAttribute",
     "org.springframework.dao.DataAccessException",
     "org.springframework.transaction.TransactionDefinition",
     "org.springframework.transaction.annotation.TransactionAnnotationParser",
     "org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser",
     "org.springframework.dao.InvalidDataAccessApiUsageException",
     "org.springframework.dao.support.PersistenceExceptionTranslationInterceptor",
     "org.springframework.transaction.support.TransactionSynchronizationManager",
     "org.springframework.transaction.interceptor.TransactionAttributeSource",
     "org.springframework.transaction.annotation.JtaTransactionAnnotationParser",
     "org.springframework.transaction.support.DefaultTransactionDefinition",
     "org.springframework.transaction.CannotCreateTransactionException",
     "org.springframework.transaction.HeuristicCompletionException",
     "org.springframework.dao.EmptyResultDataAccessException",
     "org.springframework.transaction.interceptor.DefaultTransactionAttribute",
     "org.springframework.transaction.interceptor.TransactionInterceptor",
     "org.springframework.transaction.UnexpectedRollbackException",
     "org.springframework.transaction.support.TransactionSynchronization",
     "org.springframework.transaction.PlatformTransactionManager",
     "org.springframework.transaction.support.AbstractTransactionStatus",
     "org.springframework.transaction.interceptor.TransactionalProxy",
     "org.springframework.transaction.TransactionException",
     "org.springframework.transaction.TransactionStatus",
     "org.springframework.transaction.annotation.SpringTransactionAnnotationParser",
     "org.springframework.transaction.annotation.Transactional"
    ],
    "usageRatio": 0.09881422924901186,
    "children": []
   },
   {
    "id": "org.springframework:spring-oxm:jar:5.2.0.RC2:compile",
    "coordinates": "org.springframework:spring-oxm:5.2.0.RC2",
    "groupId": "org.springframework",
    "artifactId": "spring-oxm",
    "version": "5.2.0.RC2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 63893,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.oxm.mime.MimeUnmarshaller",
     "org.springframework.oxm.ValidationFailureException",
     "org.springframework.oxm.jaxb.Jaxb2Marshaller",
     "org.springframework.oxm.jaxb.Jaxb2Marshaller$ByteArrayDataSource",
     "org.springframework.oxm.Unmarshaller",
     "org.springframework.oxm.Marshaller",
     "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentMarshaller",
     "org.springframework.oxm.GenericUnmarshaller",
     "org.springframework.oxm.xstream.XStreamMarshaller$1",
     "org.springframework.oxm.jibx.JibxMarshaller",
     "org.springframework.oxm.xstream.XStreamMarshaller",
     "org.springframework.oxm.UncategorizedMappingException",
     "org.springframework.oxm.config.Jaxb2MarshallerBeanDefinitionParser",
     "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader",
     "org.springframework.oxm.package-info",
     "org.springframework.oxm.xstream.CatchAllConverter",
     "org.springframework.oxm.UnmarshallingFailureException",
     "org.springframework.oxm.config.package-info",
     "org.springframework.oxm.MarshallingException",
     "org.springframework.oxm.jibx.package-info",
     "org.springframework.oxm.support.MarshallingSource",
     "org.springframework.oxm.MarshallingFailureException",
     "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentUnmarshaller",
     "org.springframework.oxm.jaxb.ClassPathJaxb2TypeScanner",
     "org.springframework.oxm.support.AbstractMarshaller",
     "org.springframework.oxm.support.package-info",
     "org.springframework.oxm.config.OxmNamespaceHandler",
     "org.springframework.oxm.mime.package-info",
     "org.springframework.oxm.config.JibxMarshallerBeanDefinitionParser",
     "org.springframework.oxm.jaxb.package-info",
     "org.springframework.oxm.GenericMarshaller",
     "org.springframework.oxm.XmlMappingException",
     "org.springframework.oxm.mime.MimeMarshaller",
     "org.springframework.oxm.mime.MimeContainer",
     "org.springframework.oxm.support.SaxResourceUtils",
     "org.springframework.oxm.support.MarshallingSource$1",
     "org.springframework.oxm.xstream.package-info"
    ],
    "usedTypes": [
     "org.springframework.oxm.jaxb.Jaxb2Marshaller",
     "org.springframework.oxm.Unmarshaller"
    ],
    "usageRatio": 0.05405405405405406,
    "children": []
   },
   {
    "id": "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile",
    "coordinates": "com.fasterxml.jackson.core:jackson-databind:2.9.9.3",
    "groupId": "com.fasterxml.jackson.core",
    "artifactId": "jackson-databind",
    "version": "2.9.9.3",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 1348389,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "com.fasterxml.jackson.databind.JsonNode$1",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember",
     "com.fasterxml.jackson.databind.MappingIterator",
     "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier",
     "com.fasterxml.jackson.databind.ser.PropertyBuilder",
     "com.fasterxml.jackson.databind.deser.impl.FieldProperty",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
     "com.fasterxml.jackson.databind.deser.std.EnumDeserializer",
     "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor",
     "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
     "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference",
     "com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer",
     "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider",
     "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor$Base",
     "com.fasterxml.jackson.databind.type.MapLikeType",
     "com.fasterxml.jackson.databind.util.LinkedNode",
     "com.fasterxml.jackson.databind.type.MapType",
     "com.fasterxml.jackson.databind.jsontype.TypeDeserializer$1",
     "com.fasterxml.jackson.databind.annotation.JsonTypeResolver",
     "com.fasterxml.jackson.databind.ser.std.MapProperty",
     "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
     "com.fasterxml.jackson.databind.ObjectWriter",
     "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
     "com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any",
     "com.fasterxml.jackson.databind.type.TypeBase",
     "com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty",
     "com.fasterxml.jackson.databind.node.TextNode",
     "com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer",
     "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
     "com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase",
     "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder",
     "com.fasterxml.jackson.databind.util.ViewMatcher$Single",
     "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser",
     "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId",
     "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization",
     "com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor",
     "com.fasterxml.jackson.databind.node.DecimalNode",
     "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer",
     "com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector",
     "com.fasterxml.jackson.databind.deser.Deserializers",
     "com.fasterxml.jackson.databind.ser.std.CollectionSerializer",
     "com.fasterxml.jackson.databind.util.Annotations",
     "com.fasterxml.jackson.databind.deser.KeyDeserializers",
     "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator",
     "com.fasterxml.jackson.databind.introspect.VisibilityChecker$1",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
     "com.fasterxml.jackson.databind.util.CompactStringObjectMap",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer",
     "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
     "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer",
     "com.fasterxml.jackson.databind.type.CollectionLikeType",
     "com.fasterxml.jackson.databind.util.NameTransformer$2",
     "com.fasterxml.jackson.databind.node.NumericNode",
     "com.fasterxml.jackson.databind.util.NameTransformer$1",
     "com.fasterxml.jackson.databind.deser.ValueInstantiator",
     "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty",
     "com.fasterxml.jackson.databind.module.SimpleSerializers",
     "com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase",
     "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
     "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
     "com.fasterxml.jackson.databind.deser.Deserializers$Base",
     "com.fasterxml.jackson.databind.ext.CoreXMLSerializers",
     "com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver",
     "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
     "com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer",
     "com.fasterxml.jackson.databind.deser.BeanDeserializerBase",
     "com.fasterxml.jackson.databind.BeanProperty$Std",
     "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping",
     "com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler",
     "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition",
     "com.fasterxml.jackson.databind.util.NameTransformer$3",
     "com.fasterxml.jackson.databind.util.Converter",
     "com.fasterxml.jackson.databind.ser.std.FileSerializer",
     "com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo",
     "com.fasterxml.jackson.databind.deser.ValueInstantiators",
     "com.fasterxml.jackson.databind.ser.PropertyBuilder$1",
     "com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember",
     "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor$Base",
     "com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer",
     "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer",
     "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer",
     "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation",
     "com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer",
     "com.fasterxml.jackson.databind.JsonSerializable",
     "com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty",
     "com.fasterxml.jackson.databind.introspect.AnnotatedMember",
     "com.fasterxml.jackson.databind.BeanDescription",
     "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer",
     "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer",
     "com.fasterxml.jackson.databind.ext.DOMDeserializer",
     "com.fasterxml.jackson.databind.ser.AnyGetterWriter",
     "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
     "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams",
     "com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring",
     "com.fasterxml.jackson.databind.exc.IgnoredPropertyException",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer",
     "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap",
     "com.fasterxml.jackson.databind.annotation.JsonNaming",
     "com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer",
     "com.fasterxml.jackson.databind.util.ArrayBuilders$1",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor$Base",
     "com.fasterxml.jackson.databind.SequenceWriter",
     "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer",
     "com.fasterxml.jackson.databind.ser.SerializerFactory",
     "com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer",
     "com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer",
     "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer",
     "com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator",
     "com.fasterxml.jackson.databind.type.SimpleType",
     "com.fasterxml.jackson.databind.ser.ContextualSerializer",
     "com.fasterxml.jackson.databind.DeserializationConfig",
     "com.fasterxml.jackson.databind.MapperFeature",
     "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
     "com.fasterxml.jackson.databind.Module$SetupContext",
     "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
     "com.fasterxml.jackson.databind.util.ClassUtil",
     "com.fasterxml.jackson.databind.node.ContainerNode",
     "com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
     "com.fasterxml.jackson.databind.RuntimeJsonMappingException",
     "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
     "com.fasterxml.jackson.databind.ser.std.StdSerializer",
     "com.fasterxml.jackson.databind.PropertyNamingStrategy",
     "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
     "com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView",
     "com.fasterxml.jackson.databind.jsonschema.SchemaAware",
     "com.fasterxml.jackson.databind.AbstractTypeResolver",
     "com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter$1",
     "com.fasterxml.jackson.databind.ser.std.RawSerializer",
     "com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder",
     "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
     "com.fasterxml.jackson.databind.BeanProperty$Bogus",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor",
     "com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer",
     "com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor",
     "com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer",
     "com.fasterxml.jackson.databind.ser.std.IterableSerializer",
     "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
     "com.fasterxml.jackson.databind.util.ArrayBuilders",
     "com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter",
     "com.fasterxml.jackson.databind.util.RawValue",
     "com.fasterxml.jackson.databind.exc.PropertyBindingException",
     "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
     "com.fasterxml.jackson.databind.ser.BeanSerializer",
     "com.fasterxml.jackson.databind.jsontype.TypeSerializer$1",
     "com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy",
     "com.fasterxml.jackson.databind.util.TokenBufferReadContext",
     "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
     "com.fasterxml.jackson.databind.node.NullNode",
     "com.fasterxml.jackson.databind.deser.ValueInstantiator$Base",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$MemberIterator",
     "com.fasterxml.jackson.databind.ser.BeanSerializerModifier",
     "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std",
     "com.fasterxml.jackson.databind.jsontype.NamedType",
     "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder",
     "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer",
     "com.fasterxml.jackson.databind.ser.std.StdKeySerializer",
     "com.fasterxml.jackson.databind.introspect.ObjectIdInfo",
     "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector",
     "com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer",
     "com.fasterxml.jackson.databind.BeanProperty",
     "com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers",
     "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring",
     "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
     "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser",
     "com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder",
     "com.fasterxml.jackson.databind.annotation.JsonAppend$Attr",
     "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
     "com.fasterxml.jackson.databind.deser.std.StdNodeBasedDeserializer",
     "com.fasterxml.jackson.databind.introspect.TypeResolutionContext",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
     "com.fasterxml.jackson.databind.node.BinaryNode",
     "com.fasterxml.jackson.databind.introspect.AnnotationMap",
     "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser",
     "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector",
     "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
     "com.fasterxml.jackson.databind.deser.DataFormatReaders",
     "com.fasterxml.jackson.databind.ser.std.StdArraySerializers",
     "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
     "com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy",
     "com.fasterxml.jackson.databind.ser.Serializers",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer",
     "com.fasterxml.jackson.databind.type.ClassStack",
     "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult",
     "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single",
     "com.fasterxml.jackson.databind.ext.OptionalHandlerFactory",
     "com.fasterxml.jackson.databind.deser.std.DateDeserializers",
     "com.fasterxml.jackson.databind.type.ClassKey",
     "com.fasterxml.jackson.databind.ObjectWriter$Prefetch",
     "com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$1",
     "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
     "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty",
     "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer",
     "com.fasterxml.jackson.databind.ser.std.EnumSetSerializer",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor",
     "com.fasterxml.jackson.databind.ser.std.SerializableSerializer",
     "com.fasterxml.jackson.databind.ser.BeanPropertyFilter",
     "com.fasterxml.jackson.databind.util.ViewMatcher$Multi",
     "com.fasterxml.jackson.databind.introspect.Annotated",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor$Base",
     "com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder",
     "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD",
     "com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node",
     "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator",
     "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor$Base",
     "com.fasterxml.jackson.databind.util.TokenBuffer",
     "com.fasterxml.jackson.databind.annotation.NoClass",
     "com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer",
     "com.fasterxml.jackson.databind.JsonMappingException$Reference",
     "com.fasterxml.jackson.databind.type.PlaceholderForType",
     "com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating",
     "com.fasterxml.jackson.databind.jsontype.TypeDeserializer",
     "com.fasterxml.jackson.databind.deser.std.JdkDeserializers",
     "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter",
     "com.fasterxml.jackson.databind.node.LongNode",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor$Base",
     "com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing",
     "com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer",
     "com.fasterxml.jackson.databind.deser.CreatorProperty",
     "com.fasterxml.jackson.databind.module.SimpleModule",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor",
     "com.fasterxml.jackson.databind.cfg.PackageVersion",
     "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer",
     "com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer",
     "com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings",
     "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1",
     "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1",
     "com.fasterxml.jackson.databind.JsonSerializer$None",
     "com.fasterxml.jackson.databind.annotation.JacksonStdImpl",
     "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase",
     "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
     "com.fasterxml.jackson.databind.deser.ValueInstantiators$Base",
     "com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash",
     "com.fasterxml.jackson.databind.ObjectMapper$3",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor",
     "com.fasterxml.jackson.databind.ObjectMapper$2",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer",
     "com.fasterxml.jackson.databind.ObjectMapper$1",
     "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate",
     "com.fasterxml.jackson.databind.KeyDeserializer$None",
     "com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder",
     "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
     "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser",
     "com.fasterxml.jackson.databind.ser.std.MapSerializer",
     "com.fasterxml.jackson.databind.deser.UnresolvedId",
     "com.fasterxml.jackson.databind.deser.BeanDeserializer$1",
     "com.fasterxml.jackson.databind.ser.std.SqlDateSerializer",
     "com.fasterxml.jackson.databind.util.RootNameLookup",
     "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
     "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket",
     "com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer",
     "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
     "com.fasterxml.jackson.databind.JsonMappingException",
     "com.fasterxml.jackson.databind.deser.DataFormatReaders$Match",
     "com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer",
     "com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer",
     "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer",
     "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter",
     "com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer",
     "com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1",
     "com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer",
     "com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream",
     "com.fasterxml.jackson.databind.util.BeanUtil",
     "com.fasterxml.jackson.databind.DatabindContext",
     "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer",
     "com.fasterxml.jackson.databind.cfg.ConfigOverride",
     "com.fasterxml.jackson.databind.node.ObjectNode",
     "com.fasterxml.jackson.databind.util.TokenBuffer$Parser",
     "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer",
     "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler",
     "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
     "com.fasterxml.jackson.databind.util.NameTransformer$Chained",
     "com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map",
     "com.fasterxml.jackson.databind.introspect.AnnotatedField",
     "com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase",
     "com.fasterxml.jackson.databind.deser.ContextualDeserializer",
     "com.fasterxml.jackson.databind.jsonschema.JsonSerializableSchema",
     "com.fasterxml.jackson.databind.ser.std.ArraySerializerBase",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked",
     "com.fasterxml.jackson.databind.cfg.HandlerInstantiator",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes",
     "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
     "com.fasterxml.jackson.databind.annotation.JsonValueInstantiator",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer",
     "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring",
     "com.fasterxml.jackson.databind.ext.Java7Support",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor$Base",
     "com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber",
     "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
     "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
     "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer",
     "com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer",
     "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer",
     "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
     "com.fasterxml.jackson.databind.JsonSerializable$Base",
     "com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder",
     "com.fasterxml.jackson.databind.node.NodeCursor",
     "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
     "com.fasterxml.jackson.databind.util.AccessPattern",
     "com.fasterxml.jackson.databind.introspect.WithMember",
     "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
     "com.fasterxml.jackson.databind.node.TreeTraversingParser",
     "com.fasterxml.jackson.databind.jsontype.TypeSerializer",
     "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer",
     "com.fasterxml.jackson.databind.jsonschema.JsonSchema",
     "com.fasterxml.jackson.databind.deser.std.UUIDDeserializer",
     "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std",
     "com.fasterxml.jackson.databind.type.TypeFactory",
     "com.fasterxml.jackson.databind.type.ArrayType",
     "com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor",
     "com.fasterxml.jackson.databind.util.ISO8601Utils",
     "com.fasterxml.jackson.databind.exc.InvalidNullException",
     "com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer$1",
     "com.fasterxml.jackson.databind.deser.impl.ObjectIdReader",
     "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer",
     "com.fasterxml.jackson.databind.util.Named",
     "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers",
     "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer",
     "com.fasterxml.jackson.databind.util.TokenBuffer$Segment",
     "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
     "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
     "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
     "com.fasterxml.jackson.databind.type.CollectionType",
     "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1",
     "com.fasterxml.jackson.databind.node.ValueNode",
     "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider",
     "com.fasterxml.jackson.databind.ser.impl.IteratorSerializer",
     "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer",
     "com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer",
     "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializer$1",
     "com.fasterxml.jackson.databind.util.ClassUtil$Ctor",
     "com.fasterxml.jackson.databind.ext.NioPathDeserializer",
     "com.fasterxml.jackson.databind.deser.SettableBeanProperty",
     "com.fasterxml.jackson.databind.node.JsonNodeCreator",
     "com.fasterxml.jackson.databind.util.Converter$None",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
     "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer",
     "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
     "com.fasterxml.jackson.databind.exc.MismatchedInputException",
     "com.fasterxml.jackson.databind.node.FloatNode",
     "com.fasterxml.jackson.databind.node.IntNode",
     "com.fasterxml.jackson.databind.type.TypeParser",
     "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
     "com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
     "com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer",
     "com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations",
     "com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer",
     "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
     "com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView",
     "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
     "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer",
     "com.fasterxml.jackson.databind.KeyDeserializer",
     "com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver",
     "com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder",
     "com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer",
     "com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring",
     "com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator",
     "com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer",
     "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser",
     "com.fasterxml.jackson.databind.DeserializationContext",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10",
     "com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer",
     "com.fasterxml.jackson.databind.deser.impl.NullsFailProvider",
     "com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy",
     "com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer",
     "com.fasterxml.jackson.databind.deser.impl.PropertyValue",
     "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer",
     "com.fasterxml.jackson.databind.node.DoubleNode",
     "com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor",
     "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param",
     "com.fasterxml.jackson.databind.ser.PropertyWriter",
     "com.fasterxml.jackson.databind.util.EnumResolver",
     "com.fasterxml.jackson.databind.type.ReferenceType",
     "com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
     "com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer",
     "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
     "com.fasterxml.jackson.databind.Module",
     "com.fasterxml.jackson.databind.AnnotationIntrospector",
     "com.fasterxml.jackson.databind.ser.ContainerSerializer",
     "com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter",
     "com.fasterxml.jackson.databind.ser.std.DateSerializer",
     "com.fasterxml.jackson.databind.ser.std.NullSerializer",
     "com.fasterxml.jackson.databind.InjectableValues$Std",
     "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser",
     "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
     "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
     "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder",
     "com.fasterxml.jackson.databind.DeserializationFeature",
     "com.fasterxml.jackson.databind.exc.InvalidTypeIdException",
     "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer",
     "com.fasterxml.jackson.databind.node.POJONode",
     "com.fasterxml.jackson.databind.ObjectReader",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder",
     "com.fasterxml.jackson.databind.PropertyNamingStrategy$PascalCaseStrategy",
     "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer",
     "com.fasterxml.jackson.databind.node.BaseJsonNode",
     "com.fasterxml.jackson.databind.node.BigIntegerNode",
     "com.fasterxml.jackson.databind.util.LRUMap",
     "com.fasterxml.jackson.databind.JsonDeserializer",
     "com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder",
     "com.fasterxml.jackson.databind.ser.std.MapSerializer$1",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor$Base",
     "com.fasterxml.jackson.databind.deser.impl.MethodProperty",
     "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition",
     "com.fasterxml.jackson.databind.introspect.MemberKey",
     "com.fasterxml.jackson.databind.node.ArrayNode",
     "com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy",
     "com.fasterxml.jackson.databind.module.SimpleValueInstantiators",
     "com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter",
     "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla",
     "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
     "com.fasterxml.jackson.databind.exc.InvalidFormatException",
     "com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase",
     "com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder",
     "com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer",
     "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer",
     "com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic",
     "com.fasterxml.jackson.databind.deser.impl.CreatorCollector",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
     "com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer$1",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer",
     "com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder",
     "com.fasterxml.jackson.databind.annotation.JsonSerialize",
     "com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator",
     "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
     "com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter",
     "com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader",
     "com.fasterxml.jackson.databind.jsontype.TypeIdResolver",
     "com.fasterxml.jackson.databind.util.ConstantValueInstantiator",
     "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
     "com.fasterxml.jackson.databind.introspect.AnnotatedParameter",
     "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type",
     "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
     "com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream",
     "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double",
     "com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer",
     "com.fasterxml.jackson.databind.introspect.CollectorBase",
     "com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value",
     "com.fasterxml.jackson.databind.cfg.MutableConfigOverride",
     "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
     "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer",
     "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
     "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
     "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder",
     "com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer",
     "com.fasterxml.jackson.databind.util.ArrayIterator",
     "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter",
     "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
     "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
     "com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider",
     "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
     "com.fasterxml.jackson.databind.ser.std.InetAddressSerializer",
     "com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor",
     "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer",
     "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
     "com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter",
     "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
     "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base",
     "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector$1",
     "com.fasterxml.jackson.databind.JsonSerializer",
     "com.fasterxml.jackson.databind.JsonNode",
     "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
     "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
     "com.fasterxml.jackson.databind.ser.ResolvableSerializer",
     "com.fasterxml.jackson.databind.ser.std.StdKeySerializers",
     "com.fasterxml.jackson.databind.util.ViewMatcher",
     "com.fasterxml.jackson.databind.PropertyName",
     "com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer",
     "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi",
     "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer",
     "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase$1",
     "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers",
     "com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor",
     "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder",
     "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
     "com.fasterxml.jackson.databind.JsonDeserializer$None",
     "com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer",
     "com.fasterxml.jackson.databind.node.JsonNodeFactory",
     "com.fasterxml.jackson.databind.util.JSONPObject",
     "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$1",
     "com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer",
     "com.fasterxml.jackson.databind.ser.impl.StringArraySerializer",
     "com.fasterxml.jackson.databind.cfg.MapperConfig",
     "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD",
     "com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic",
     "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser",
     "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer",
     "com.fasterxml.jackson.databind.deser.impl.InnerClassProperty",
     "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
     "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase",
     "com.fasterxml.jackson.databind.util.ObjectBuffer",
     "com.fasterxml.jackson.databind.InjectableValues",
     "com.fasterxml.jackson.databind.MappingJsonFactory",
     "com.fasterxml.jackson.databind.node.TreeTraversingParser$1",
     "com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2",
     "com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1",
     "com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair",
     "com.fasterxml.jackson.databind.node.NodeCursor$RootCursor",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7",
     "com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring",
     "com.fasterxml.jackson.databind.ext.NioPathSerializer",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5",
     "com.fasterxml.jackson.databind.ser.Serializers$Base",
     "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4",
     "com.fasterxml.jackson.databind.ser.std.StringSerializer",
     "com.fasterxml.jackson.databind.JavaType",
     "com.fasterxml.jackson.databind.deser.BeanDeserializer",
     "com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor",
     "com.fasterxml.jackson.databind.node.JsonNodeType",
     "com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator",
     "com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap",
     "com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase",
     "com.fasterxml.jackson.databind.deser.NullValueProvider",
     "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
     "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer",
     "com.fasterxml.jackson.databind.annotation.JsonAppend",
     "com.fasterxml.jackson.databind.util.NameTransformer",
     "com.fasterxml.jackson.databind.deser.impl.FailingDeserializer",
     "com.fasterxml.jackson.databind.util.EnumValues",
     "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap",
     "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD",
     "com.fasterxml.jackson.databind.node.BooleanNode",
     "com.fasterxml.jackson.databind.node.MissingNode",
     "com.fasterxml.jackson.databind.node.ShortNode",
     "com.fasterxml.jackson.databind.util.StdDateFormat",
     "com.fasterxml.jackson.databind.ser.BeanSerializerBuilder",
     "com.fasterxml.jackson.databind.deser.impl.ValueInjector",
     "com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator",
     "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor$Base",
     "com.fasterxml.jackson.databind.SerializationConfig",
     "com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy",
     "com.fasterxml.jackson.databind.PropertyMetadata",
     "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
     "com.fasterxml.jackson.databind.util.JSONWrappedObject",
     "com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer",
     "com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default",
     "com.fasterxml.jackson.databind.deser.ResolvableDeserializer",
     "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer",
     "com.fasterxml.jackson.databind.ext.DOMSerializer",
     "com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver",
     "com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor",
     "com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializers$1",
     "com.fasterxml.jackson.databind.util.StdConverter",
     "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty",
     "com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider",
     "com.fasterxml.jackson.databind.util.TokenBuffer$1",
     "com.fasterxml.jackson.databind.util.TypeKey",
     "com.fasterxml.jackson.databind.ser.FilterProvider",
     "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
     "com.fasterxml.jackson.databind.annotation.JsonAppend$Prop",
     "com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion",
     "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
     "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer",
     "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter",
     "com.fasterxml.jackson.databind.deser.DeserializerFactory",
     "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
     "com.fasterxml.jackson.databind.type.TypeModifier",
     "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder",
     "com.fasterxml.jackson.databind.util.ISO8601DateFormat",
     "com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty",
     "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector",
     "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver",
     "com.fasterxml.jackson.databind.ser.std.ByteArraySerializer",
     "com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder",
     "com.fasterxml.jackson.databind.deser.AbstractDeserializer",
     "com.fasterxml.jackson.databind.deser.SettableAnyProperty",
     "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor$Base",
     "com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer",
     "com.fasterxml.jackson.databind.type.TypeBindings$AsKey",
     "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer",
     "com.fasterxml.jackson.databind.module.SimpleDeserializers",
     "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty",
     "com.fasterxml.jackson.databind.ser.SerializerCache",
     "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
     "com.fasterxml.jackson.databind.ser.impl.WritableObjectId",
     "com.fasterxml.jackson.databind.type.TypeBindings",
     "com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator",
     "com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization",
     "com.fasterxml.jackson.databind.SerializerProvider",
     "com.fasterxml.jackson.databind.cfg.ContextAttributes",
     "com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer",
     "com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization",
     "com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable",
     "com.fasterxml.jackson.databind.cfg.BaseSettings",
     "com.fasterxml.jackson.databind.ObjectMapper",
     "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
     "com.fasterxml.jackson.databind.deser.DeserializerCache",
     "com.fasterxml.jackson.databind.cfg.ConfigFeature",
     "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer",
     "com.fasterxml.jackson.databind.SerializationFeature",
     "com.fasterxml.jackson.databind.ser.PropertyFilter",
     "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector"
    ],
    "usedTypes": [
     "com.fasterxml.jackson.databind.ObjectReader",
     "com.fasterxml.jackson.databind.module.SimpleModule",
     "com.fasterxml.jackson.databind.ObjectMapper",
     "com.fasterxml.jackson.databind.JsonNode",
     "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
     "com.fasterxml.jackson.databind.DeserializationFeature"
    ],
    "usageRatio": 0.009615384615384616,
    "children": [
     {
      "id": "com.fasterxml.jackson.core:jackson-annotations:jar:2.9.0:compile",
      "coordinates": "com.fasterxml.jackson.core:jackson-annotations:2.9.0",
      "groupId": "com.fasterxml.jackson.core",
      "artifactId": "jackson-annotations",
      "version": "2.9.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 66519,
      "type": "transitive",
      "status": "used",
      "parent": "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile (optional) )",
      "allTypes": [
       "com.fasterxml.jackson.annotation.JsonProperty",
       "com.fasterxml.jackson.annotation.JsonView",
       "com.fasterxml.jackson.annotation.JsonGetter",
       "com.fasterxml.jackson.annotation.JsonFormat$Value",
       "com.fasterxml.jackson.annotation.JacksonAnnotation",
       "com.fasterxml.jackson.annotation.JsonFormat$Features",
       "com.fasterxml.jackson.annotation.JsonInclude$Include",
       "com.fasterxml.jackson.annotation.ObjectIdGenerators$Base",
       "com.fasterxml.jackson.annotation.JsonInclude$Value",
       "com.fasterxml.jackson.annotation.JacksonInject$Value",
       "com.fasterxml.jackson.annotation.JsonAlias",
       "com.fasterxml.jackson.annotation.JsonValue",
       "com.fasterxml.jackson.annotation.JsonAnyGetter",
       "com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator",
       "com.fasterxml.jackson.annotation.JsonRootName",
       "com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator",
       "com.fasterxml.jackson.annotation.JacksonInject",
       "com.fasterxml.jackson.annotation.JsonBackReference",
       "com.fasterxml.jackson.annotation.SimpleObjectIdResolver",
       "com.fasterxml.jackson.annotation.JsonCreator$Mode",
       "com.fasterxml.jackson.annotation.OptBoolean",
       "com.fasterxml.jackson.annotation.JsonAutoDetect",
       "com.fasterxml.jackson.annotation.JsonFormat",
       "com.fasterxml.jackson.annotation.JsonRawValue",
       "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
       "com.fasterxml.jackson.annotation.JsonAnySetter",
       "com.fasterxml.jackson.annotation.ObjectIdGenerators$None",
       "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
       "com.fasterxml.jackson.annotation.JsonIdentityReference",
       "com.fasterxml.jackson.annotation.JsonTypeInfo",
       "com.fasterxml.jackson.annotation.JsonTypeId",
       "com.fasterxml.jackson.annotation.JsonUnwrapped",
       "com.fasterxml.jackson.annotation.JsonEnumDefaultValue",
       "com.fasterxml.jackson.annotation.JsonManagedReference",
       "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
       "com.fasterxml.jackson.annotation.Nulls",
       "com.fasterxml.jackson.annotation.JsonPropertyOrder",
       "com.fasterxml.jackson.annotation.JsonSetter$Value",
       "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
       "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value",
       "com.fasterxml.jackson.annotation.JsonTypeName",
       "com.fasterxml.jackson.annotation.JsonMerge",
       "com.fasterxml.jackson.annotation.JsonFormat$Shape",
       "com.fasterxml.jackson.annotation.JsonIgnore",
       "com.fasterxml.jackson.annotation.JsonClassDescription",
       "com.fasterxml.jackson.annotation.PropertyAccessor",
       "com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey",
       "com.fasterxml.jackson.annotation.JsonProperty$Access",
       "com.fasterxml.jackson.annotation.JsonFormat$Feature",
       "com.fasterxml.jackson.annotation.ObjectIdGenerators$StringIdGenerator",
       "com.fasterxml.jackson.annotation.ObjectIdResolver",
       "com.fasterxml.jackson.annotation.JsonSubTypes",
       "com.fasterxml.jackson.annotation.JsonAutoDetect$Value",
       "com.fasterxml.jackson.annotation.JsonIdentityInfo",
       "com.fasterxml.jackson.annotation.JsonPropertyDescription",
       "com.fasterxml.jackson.annotation.JsonSubTypes$Type",
       "com.fasterxml.jackson.annotation.JacksonAnnotationsInside",
       "com.fasterxml.jackson.annotation.ObjectIdGenerator",
       "com.fasterxml.jackson.annotation.JacksonAnnotationValue",
       "com.fasterxml.jackson.annotation.JsonFilter",
       "com.fasterxml.jackson.annotation.JsonTypeInfo$None",
       "com.fasterxml.jackson.annotation.ObjectIdGenerators$UUIDGenerator",
       "com.fasterxml.jackson.annotation.JsonCreator",
       "com.fasterxml.jackson.annotation.JsonInclude",
       "com.fasterxml.jackson.annotation.JsonIgnoreType",
       "com.fasterxml.jackson.annotation.ObjectIdGenerators",
       "com.fasterxml.jackson.annotation.JsonAutoDetect$1",
       "com.fasterxml.jackson.annotation.JsonSetter"
      ],
      "usedTypes": [
       "com.fasterxml.jackson.annotation.JsonProperty",
       "com.fasterxml.jackson.annotation.JsonIgnore",
       "com.fasterxml.jackson.annotation.JsonIgnoreProperties"
      ],
      "usageRatio": 0.04411764705882353,
      "children": []
     },
     {
      "id": "com.fasterxml.jackson.core:jackson-core:jar:2.9.9:compile",
      "coordinates": "com.fasterxml.jackson.core:jackson-core:2.9.9",
      "groupId": "com.fasterxml.jackson.core",
      "artifactId": "jackson-core",
      "version": "2.9.9",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 325632,
      "type": "transitive",
      "status": "used",
      "parent": "com.fasterxml.jackson.core:jackson-databind:jar:2.9.9.3:compile (optional) )",
      "allTypes": [
       "com.fasterxml.jackson.core.base.GeneratorBase",
       "com.fasterxml.jackson.core.filter.TokenFilter",
       "com.fasterxml.jackson.core.io.CharTypes",
       "com.fasterxml.jackson.core.filter.TokenFilterContext",
       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
       "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate",
       "com.fasterxml.jackson.core.sym.Name",
       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
       "com.fasterxml.jackson.core.util.Separators",
       "com.fasterxml.jackson.core.async.ByteArrayFeeder",
       "com.fasterxml.jackson.core.json.JsonWriteContext",
       "com.fasterxml.jackson.core.io.JsonStringEncoder",
       "com.fasterxml.jackson.core.util.JsonParserDelegate",
       "com.fasterxml.jackson.core.io.UTF8Writer",
       "com.fasterxml.jackson.core.format.InputAccessor$Std",
       "com.fasterxml.jackson.core.Version",
       "com.fasterxml.jackson.core.util.ThreadLocalBufferManager$ThreadLocalBufferManagerHolder",
       "com.fasterxml.jackson.core.util.VersionUtil",
       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
       "com.fasterxml.jackson.core.format.InputAccessor",
       "com.fasterxml.jackson.core.util.BufferRecyclers",
       "com.fasterxml.jackson.core.util.Instantiatable",
       "com.fasterxml.jackson.core.io.NumberInput",
       "com.fasterxml.jackson.core.io.InputDecorator",
       "com.fasterxml.jackson.core.base.ParserBase",
       "com.fasterxml.jackson.core.async.NonBlockingInputFeeder",
       "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
       "com.fasterxml.jackson.core.type.WritableTypeId$Inclusion",
       "com.fasterxml.jackson.core.io.JsonEOFException",
       "com.fasterxml.jackson.core.JsonLocation",
       "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
       "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
       "com.fasterxml.jackson.core.format.DataFormatMatcher",
       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter",
       "com.fasterxml.jackson.core.JsonGenerator",
       "com.fasterxml.jackson.core.JsonTokenId",
       "com.fasterxml.jackson.core.ObjectCodec",
       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
       "com.fasterxml.jackson.core.json.JsonReadContext",
       "com.fasterxml.jackson.core.JsonEncoding",
       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
       "com.fasterxml.jackson.core.JsonGenerationException",
       "com.fasterxml.jackson.core.util.BufferRecycler",
       "com.fasterxml.jackson.core.FormatFeature",
       "com.fasterxml.jackson.core.TreeNode",
       "com.fasterxml.jackson.core.TreeCodec",
       "com.fasterxml.jackson.core.util.ThreadLocalBufferManager",
       "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
       "com.fasterxml.jackson.core.util.TextBuffer",
       "com.fasterxml.jackson.core.type.WritableTypeId",
       "com.fasterxml.jackson.core.JsonFactory",
       "com.fasterxml.jackson.core.base.ParserMinimalBase",
       "com.fasterxml.jackson.core.util.ByteArrayBuilder",
       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
       "com.fasterxml.jackson.core.util.JsonParserSequence",
       "com.fasterxml.jackson.core.JsonGenerator$1",
       "com.fasterxml.jackson.core.JsonParser$NumberType",
       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
       "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
       "com.fasterxml.jackson.core.util.MinimalPrettyPrinter",
       "com.fasterxml.jackson.core.SerializableString",
       "com.fasterxml.jackson.core.sym.Name1",
       "com.fasterxml.jackson.core.Versioned",
       "com.fasterxml.jackson.core.sym.Name2",
       "com.fasterxml.jackson.core.async.ByteBufferFeeder",
       "com.fasterxml.jackson.core.sym.Name3",
       "com.fasterxml.jackson.core.io.NumberOutput",
       "com.fasterxml.jackson.core.json.DupDetector",
       "com.fasterxml.jackson.core.util.RequestPayload",
       "com.fasterxml.jackson.core.type.TypeReference",
       "com.fasterxml.jackson.core.JsonParseException",
       "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter",
       "com.fasterxml.jackson.core.util.DefaultIndenter",
       "com.fasterxml.jackson.core.Base64Variant",
       "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
       "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
       "com.fasterxml.jackson.core.io.OutputDecorator",
       "com.fasterxml.jackson.core.json.PackageVersion",
       "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
       "com.fasterxml.jackson.core.io.MergedStream",
       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
       "com.fasterxml.jackson.core.io.CharacterEscapes",
       "com.fasterxml.jackson.core.JsonFactory$Feature",
       "com.fasterxml.jackson.core.type.ResolvedType",
       "com.fasterxml.jackson.core.util.InternCache",
       "com.fasterxml.jackson.core.JsonParser$Feature",
       "com.fasterxml.jackson.core.JsonPointer",
       "com.fasterxml.jackson.core.format.DataFormatDetector",
       "com.fasterxml.jackson.core.io.DataOutputAsStream",
       "com.fasterxml.jackson.core.io.SerializedString",
       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
       "com.fasterxml.jackson.core.io.SegmentedStringWriter",
       "com.fasterxml.jackson.core.JsonToken",
       "com.fasterxml.jackson.core.JsonParser",
       "com.fasterxml.jackson.core.JsonGenerator$Feature",
       "com.fasterxml.jackson.core.sym.NameN",
       "com.fasterxml.jackson.core.JsonProcessingException",
       "com.fasterxml.jackson.core.JsonStreamContext",
       "com.fasterxml.jackson.core.format.MatchStrength",
       "com.fasterxml.jackson.core.io.UTF32Reader",
       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket",
       "com.fasterxml.jackson.core.Base64Variants",
       "com.fasterxml.jackson.core.JsonpCharacterEscapes",
       "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
       "com.fasterxml.jackson.core.FormatSchema",
       "com.fasterxml.jackson.core.io.IOContext",
       "com.fasterxml.jackson.core.PrettyPrinter"
      ],
      "usedTypes": [
       "com.fasterxml.jackson.core.Version"
      ],
      "usageRatio": 0.009345794392523364,
      "children": []
     }
    ]
   },
   {
    "id": "org.springframework:spring-web:jar:5.2.0.RC2:compile",
    "coordinates": "org.springframework:spring-web:5.2.0.RC2",
    "groupId": "org.springframework",
    "artifactId": "spring-web",
    "version": "5.2.0.RC2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 1404534,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.web.server.adapter.ForwardedHeaderTransformer",
     "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter",
     "org.springframework.http.codec.ServerSentEventHttpMessageReader",
     "org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$MimeDelegate",
     "org.springframework.http.converter.ResourceHttpMessageConverter",
     "org.springframework.web.server.session.InMemoryWebSessionStore$1",
     "org.springframework.web.context.support.WebApplicationContextUtils$1",
     "org.springframework.web.server.i18n.FixedLocaleContextResolver$1",
     "org.springframework.web.multipart.commons.CommonsFileUploadSupport",
     "org.springframework.http.server.reactive.WriteResultPublisher$State",
     "org.springframework.http.codec.support.ClientDefaultCodecsImpl$1",
     "org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter",
     "org.springframework.web.client.RestClientException",
     "org.springframework.http.client.HttpComponentsAsyncClientHttpRequest$HttpResponseFutureCallback",
     "org.springframework.web.context.support.WebApplicationObjectSupport",
     "org.springframework.web.multipart.commons.CommonsMultipartResolver$1",
     "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$WriteResultSubscriber",
     "org.springframework.http.ResponseCookie$ResponseCookieBuilder",
     "org.springframework.http.client.MultipartBodyBuilder$PartBuilder",
     "org.springframework.web.client.support.RestGatewaySupport",
     "org.springframework.web.bind.annotation.RestControllerAdvice",
     "org.springframework.web.context.annotation.SessionScope",
     "org.springframework.http.codec.json.Jackson2SmileEncoder",
     "org.springframework.web.client.RestTemplate$HeadersExtractor",
     "org.springframework.http.client.support.InterceptingHttpAccessor",
     "org.springframework.http.codec.xml.JaxbContextContainer",
     "org.springframework.http.converter.xml.AbstractXmlHttpMessageConverter",
     "org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver",
     "org.springframework.web.context.request.RequestContextHolder$FacesRequestAttributesFactory",
     "org.springframework.http.server.reactive.DefaultServerHttpRequestBuilder$MutatedServerHttpRequest",
     "org.springframework.web.filter.OncePerRequestFilter",
     "org.springframework.web.bind.annotation.RequestBody",
     "org.springframework.http.converter.FormHttpMessageConverter$MimeDelegate",
     "org.springframework.web.util.HttpSessionMutexListener$Mutex",
     "org.springframework.web.context.support.ServletContextScope",
     "org.springframework.http.converter.feed.AtomFeedHttpMessageConverter",
     "org.springframework.web.client.HttpClientErrorException$UnprocessableEntity",
     "org.springframework.web.filter.package-info",
     "org.springframework.web.bind.support.SimpleSessionStatus",
     "org.springframework.web.method.annotation.RequestParamMethodArgumentResolver$RequestParamNamedValueInfo",
     "org.springframework.web.context.ContextLoaderListener",
     "org.springframework.http.client.ClientHttpRequestExecution",
     "org.springframework.http.codec.json.package-info",
     "org.springframework.web.client.AsyncRestOperations",
     "org.springframework.http.client.SimpleBufferingClientHttpRequest",
     "org.springframework.web.client.HttpClientErrorException$BadRequest",
     "org.springframework.web.method.HandlerTypePredicate$Builder",
     "org.springframework.web.context.support.WebApplicationContextUtils$ResponseObjectFactory",
     "org.springframework.web.context.ServletConfigAware",
     "org.springframework.web.util.pattern.PathPattern$PathMatchInfo",
     "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$2",
     "org.springframework.web.multipart.commons.CommonsFileUploadSupport$MultipartParsingResult",
     "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$1",
     "org.springframework.web.bind.annotation.PathVariable",
     "org.springframework.web.filter.RelativeRedirectFilter",
     "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$4",
     "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$3",
     "org.springframework.http.ZeroCopyHttpOutputMessage",
     "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$5",
     "org.springframework.http.converter.ResourceRegionHttpMessageConverter",
     "org.springframework.web.context.support.ServletContextPropertySource",
     "org.springframework.http.server.DefaultRequestPath",
     "org.springframework.web.bind.annotation.CookieValue",
     "org.springframework.web.context.request.async.TimeoutDeferredResultProcessingInterceptor",
     "org.springframework.http.HttpMessage",
     "org.springframework.web.bind.annotation.DeleteMapping",
     "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
     "org.springframework.web.client.HttpClientErrorException$Gone",
     "org.springframework.web.method.annotation.ExpressionValueMethodArgumentResolver$ExpressionValueNamedValueInfo",
     "org.springframework.web.context.request.async.DeferredResultInterceptorChain",
     "org.springframework.web.util.ServletContextPropertyUtils",
     "org.springframework.http.HttpHeaders",
     "org.springframework.web.server.DefaultServerWebExchangeBuilder$MutativeDecorator",
     "org.springframework.http.server.PathContainer$PathSegment",
     "org.springframework.web.util.UriComponents$UriTemplateVariables",
     "org.springframework.http.converter.json.JsonbHttpMessageConverter",
     "org.springframework.web.cors.package-info",
     "org.springframework.http.client.MultipartBodyBuilder$DefaultPartBuilder",
     "org.springframework.web.bind.support.DefaultSessionAttributeStore",
     "org.springframework.http.server.reactive.ServletServerHttpRequest$RequestBodyPublisher$RequestBodyPublisherReadListener",
     "org.springframework.web.method.annotation.ExpressionValueMethodArgumentResolver$1",
     "org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean",
     "org.springframework.http.server.reactive.DefaultServerHttpRequestBuilder",
     "org.springframework.http.client.support.BasicAuthorizationInterceptor",
     "org.springframework.http.server.reactive.AbstractServerHttpResponse",
     "org.springframework.http.client.HttpComponentsClientHttpRequestFactory$HttpDelete",
     "org.springframework.web.method.annotation.RequestParamMethodArgumentResolver",
     "org.springframework.web.server.session.InMemoryWebSessionStore$State",
     "org.springframework.web.bind.ServletRequestUtils$ParameterParser",
     "org.springframework.web.context.request.AbstractRequestAttributes",
     "org.springframework.web.server.ServerErrorException",
     "org.springframework.http.client.reactive.ReactorClientHttpResponse",
     "org.springframework.web.client.UnknownHttpStatusCodeException",
     "org.springframework.web.bind.annotation.PatchMapping",
     "org.springframework.http.client.BufferingClientHttpResponseWrapper",
     "org.springframework.http.server.reactive.UndertowServerHttpResponse$ResponseBodyProcessor",
     "org.springframework.http.server.ServletServerHttpResponse",
     "org.springframework.web.util.HierarchicalUriComponents$PathComponent",
     "org.springframework.http.server.reactive.TomcatHeadersAdapter",
     "org.springframework.web.bind.annotation.ResponseStatus",
     "org.springframework.web.util.CookieGenerator",
     "org.springframework.http.codec.protobuf.ProtobufDecoder",
     "org.springframework.web.util.UriBuilder",
     "org.springframework.web.client.HttpServerErrorException$ServiceUnavailable",
     "org.springframework.web.cors.CorsConfiguration",
     "org.springframework.http.client.HttpComponentsClientHttpRequestFactory",
     "org.springframework.http.converter.HttpMessageNotReadableException",
     "org.springframework.http.InvalidMediaTypeException",
     "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
     "org.springframework.web.cors.CorsProcessor",
     "org.springframework.web.server.handler.DefaultWebFilterChain",
     "org.springframework.web.bind.ServletRequestParameterPropertyValues",
     "org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$AbstractSynchronossPart",
     "org.springframework.http.server.reactive.ContextPathCompositeHandler",
     "org.springframework.http.codec.multipart.MultipartHttpMessageWriter$MultipartHttpOutputMessage",
     "org.springframework.http.server.reactive.ServerHttpResponse",
     "org.springframework.web.bind.ServletRequestUtils$DoubleParser",
     "org.springframework.http.server.reactive.SslInfo",
     "org.springframework.http.server.reactive.ChannelSendOperator$State",
     "org.springframework.web.context.request.NativeWebRequest",
     "org.springframework.web.util.pattern.PathPatternRouteMatcher$PathContainerRoute",
     "org.springframework.http.client.reactive.ClientHttpRequest",
     "org.springframework.http.codec.json.Jackson2JsonDecoder",
     "org.springframework.http.client.support.BasicAuthenticationInterceptor",
     "org.springframework.web.client.HttpClientErrorException$MethodNotAllowed",
     "org.springframework.web.context.request.AsyncWebRequestInterceptor",
     "org.springframework.web.util.pattern.PathPatternParser",
     "org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State$5",
     "org.springframework.http.server.reactive.ServletServerHttpRequest$RequestAsyncListener",
     "org.springframework.http.codec.support.ClientDefaultCodecsImpl$DefaultMultipartCodecs",
     "org.springframework.http.codec.ClientCodecConfigurer$ClientDefaultCodecs",
     "org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory",
     "org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State$3",
     "org.springframework.web.context.request.async.CallableInterceptorChain",
     "org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State$4",
     "org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State$1",
     "org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State$2",
     "org.springframework.http.server.reactive.WriteResultPublisher$WriteResultSubscription",
     "org.springframework.web.util.ContentCachingResponseWrapper$ResponsePrintWriter",
     "org.springframework.web.multipart.MultipartException",
     "org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite",
     "org.springframework.web.filter.AbstractRequestLoggingFilter",
     "org.springframework.web.util.AbstractUriTemplateHandler",
     "org.springframework.web.server.session.WebSessionStore",
     "org.springframework.web.client.RestClientResponseException",
     "org.springframework.web.bind.annotation.SessionAttribute",
     "org.springframework.web.context.request.async.StandardServletAsyncWebRequest",
     "org.springframework.web.context.support.AnnotationConfigWebApplicationContext",
     "org.springframework.web.util.HttpSessionMutexListener$1",
     "org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader",
     "org.springframework.web.client.package-info",
     "org.springframework.web.client.HttpServerErrorException",
     "org.springframework.http.server.reactive.HttpHeadResponseDecorator",
     "org.springframework.http.server.reactive.UndertowServerHttpRequest",
     "org.springframework.web.jsf.DelegatingPhaseListenerMulticaster",
     "org.springframework.web.filter.HttpPutFormContentFilter$1",
     "org.springframework.web.util.pattern.InternalPathPatternParser",
     "org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator",
     "org.springframework.web.util.HtmlCharacterEntityReferences",
     "org.springframework.http.codec.protobuf.ProtobufHttpMessageWriter",
     "org.springframework.web.filter.ForwardedHeaderFilter$ForwardedHeaderExtractingRequest",
     "org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossFormFieldPart",
     "org.springframework.web.util.UrlPathHelper",
     "org.springframework.web.multipart.support.MultipartFilter",
     "org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderEntry",
     "org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest",
     "org.springframework.http.converter.feed.RssChannelHttpMessageConverter",
     "org.springframework.web.bind.support.WebDataBinderFactory",
     "org.springframework.http.converter.FormHttpMessageConverter$MultipartHttpOutputMessage",
     "org.springframework.http.HttpRequest",
     "org.springframework.http.server.reactive.TomcatHttpHandlerAdapter$TomcatServerHttpRequest",
     "org.springframework.web.context.support.StaticWebApplicationContext",
     "org.springframework.web.method.annotation.SessionStatusMethodArgumentResolver",
     "org.springframework.http.server.ServerHttpResponse",
     "org.springframework.http.codec.xml.XmlEventDecoder$AaltoDataBufferToXmlEvent",
     "org.springframework.web.jsf.DecoratingNavigationHandler",
     "org.springframework.web.accept.MappingMediaTypeFileExtensionResolver",
     "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
     "org.springframework.web.multipart.support.RequestPartServletServerHttpRequest",
     "org.springframework.http.client.MultipartBodyBuilder$PublisherPartBuilder",
     "org.springframework.web.context.support.StandardServletEnvironment",
     "org.springframework.http.codec.json.Jackson2Tokenizer",
     "org.springframework.http.client.AbstractClientHttpResponse",
     "org.springframework.http.codec.ServerCodecConfigurer",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher",
     "org.springframework.web.util.ServletContextPropertyUtils$ServletContextPlaceholderResolver",
     "org.springframework.http.codec.HttpMessageDecoder",
     "org.springframework.remoting.jaxws.JaxWsSoapFaultException",
     "org.springframework.http.client.BufferingClientHttpRequestWrapper",
     "org.springframework.http.server.DefaultPathContainer$DefaultSeparator",
     "org.springframework.http.converter.HttpMessageConverter",
     "org.springframework.web.context.request.package-info",
     "org.springframework.web.util.HierarchicalUriComponents$Type",
     "org.springframework.web.bind.annotation.InitBinder",
     "org.springframework.http.HttpLogging",
     "org.springframework.web.context.annotation.ApplicationScope",
     "org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseAsyncListener",
     "org.springframework.web.method.annotation.ModelFactory$ModelMethod",
     "org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier",
     "org.springframework.http.codec.EncoderHttpMessageWriter",
     "org.springframework.web.util.UriComponentsBuilder$PathComponentBuilder",
     "org.springframework.http.converter.json.MappingJacksonValue",
     "org.springframework.web.method.annotation.package-info",
     "org.springframework.web.server.WebSession",
     "org.springframework.web.client.MessageBodyClientHttpResponseWrapper",
     "org.springframework.http.codec.xml.Jaxb2XmlEncoder",
     "org.springframework.web.multipart.support.ByteArrayMultipartFileEditor",
     "org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession",
     "org.springframework.web.context.ConfigurableWebApplicationContext",
     "org.springframework.web.util.pattern.SeparatorPathElement",
     "org.springframework.web.util.TagUtils",
     "org.springframework.http.codec.cbor.Jackson2CborEncoder",
     "org.springframework.web.client.HttpMessageConverterExtractor",
     "org.springframework.web.multipart.MultipartFile",
     "org.springframework.http.client.BufferingClientHttpRequestFactory",
     "org.springframework.web.util.UriTemplate",
     "org.springframework.web.bind.support.WebExchangeDataBinder",
     "org.springframework.http.server.reactive.UndertowServerHttpResponse$TransferBodyListener",
     "org.springframework.web.util.HierarchicalUriComponents$EncodeState",
     "org.springframework.http.CacheControl",
     "org.springframework.web.context.request.async.WebAsyncManager",
     "org.springframework.http.converter.support.package-info",
     "org.springframework.web.client.support.package-info",
     "org.springframework.http.client.reactive.JettyClientHttpRequest$1",
     "org.springframework.http.codec.json.AbstractJackson2Encoder",
     "org.springframework.http.client.HttpComponentsClientHttpResponse",
     "org.springframework.http.codec.LoggingCodecSupport",
     "org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher$1",
     "org.springframework.http.server.reactive.UndertowServerHttpResponse$ResponseBodyFlushProcessor",
     "org.springframework.http.ContentDisposition$1",
     "org.springframework.web.method.annotation.ModelAttributeMethodProcessor$FieldAwareConstructorParameter",
     "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$1",
     "org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource",
     "org.springframework.web.server.ResponseStatusException",
     "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$XmlObjectMapperInitializer",
     "org.springframework.http.converter.json.MappingJacksonInputMessage",
     "org.springframework.web.server.DefaultServerWebExchangeBuilder",
     "org.springframework.web.context.request.async.WebAsyncTask",
     "org.springframework.http.server.reactive.ServletServerHttpResponse",
     "org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean",
     "org.springframework.web.client.HttpServerErrorException$NotImplemented",
     "org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor",
     "org.springframework.http.server.package-info",
     "org.springframework.web.multipart.support.StandardServletMultipartResolver",
     "org.springframework.web.bind.annotation.SessionAttributes",
     "org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter",
     "org.springframework.web.util.DefaultUriBuilderFactory",
     "org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$1",
     "org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$2",
     "org.springframework.web.filter.ShallowEtagHeaderFilter",
     "org.springframework.remoting.jaxws.JaxWsPortClientInterceptor",
     "org.springframework.web.bind.support.DefaultDataBinderFactory",
     "org.springframework.web.bind.support.WebBindingInitializer",
     "org.springframework.web.filter.ServletContextRequestLoggingFilter",
     "org.springframework.http.server.PathContainer$Options",
     "org.springframework.web.util.JavaScriptUtils",
     "org.springframework.http.server.DefaultPathContainer",
     "org.springframework.web.context.support.AbstractRefreshableWebApplicationContext",
     "org.springframework.web.multipart.MultipartFileResource",
     "org.springframework.web.util.WebAppRootListener",
     "org.springframework.remoting.caucho.package-info",
     "org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyProcessor",
     "org.springframework.web.method.annotation.AbstractWebArgumentResolverAdapter",
     "org.springframework.web.context.request.FacesRequestAttributes",
     "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
     "org.springframework.web.method.annotation.ExpressionValueMethodArgumentResolver",
     "org.springframework.http.codec.HttpMessageWriter",
     "org.springframework.http.HttpOutputMessage",
     "org.springframework.http.converter.GenericHttpMessageConverter",
     "org.springframework.http.converter.HttpMessageConversionException",
     "org.springframework.web.util.pattern.PatternParseException$PatternMessage",
     "org.springframework.http.converter.FormHttpMessageConverter",
     "org.springframework.web.bind.annotation.PutMapping",
     "org.springframework.http.client.package-info",
     "org.springframework.http.codec.ServerSentEventHttpMessageWriter",
     "org.springframework.http.server.reactive.ServerHttpResponseDecorator",
     "org.springframework.web.server.adapter.AbstractReactiveWebInitializer",
     "org.springframework.http.server.PathContainer$Separator",
     "org.springframework.http.converter.ObjectToStringHttpMessageConverter",
     "org.springframework.web.bind.support.SessionAttributeStore",
     "org.springframework.http.codec.DecoderHttpMessageReader",
     "org.springframework.http.server.reactive.ServletHttpHandlerAdapter$HandlerResultSubscriber",
     "org.springframework.http.codec.ServerSentEvent",
     "org.springframework.http.MediaTypeEditor",
     "org.springframework.http.client.support.HttpAccessor",
     "org.springframework.http.converter.xml.package-info",
     "org.springframework.web.context.support.XmlWebApplicationContext",
     "org.springframework.http.server.reactive.AbstractServerHttpResponse$State",
     "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor",
     "org.springframework.web.method.support.HandlerMethodReturnValueHandler",
     "org.springframework.http.codec.support.package-info",
     "org.springframework.web.method.annotation.AbstractCookieValueMethodArgumentResolver",
     "org.springframework.web.server.ServerWebInputException",
     "org.springframework.http.codec.json.Jackson2JsonEncoder",
     "org.springframework.http.ReadOnlyHttpHeaders",
     "org.springframework.web.multipart.commons.CommonsMultipartResolver",
     "org.springframework.web.method.annotation.RequestHeaderMethodArgumentResolver$1",
     "org.springframework.web.server.session.DefaultWebSessionManager",
     "org.springframework.http.converter.json.AbstractJsonHttpMessageConverter",
     "org.springframework.http.RequestEntity$BodyBuilder",
     "org.springframework.web.bind.ServletRequestUtils$StringParser",
     "org.springframework.web.client.HttpServerErrorException$1",
     "org.springframework.web.util.HierarchicalUriComponents$Type$8",
     "org.springframework.web.util.HierarchicalUriComponents$Type$9",
     "org.springframework.web.util.HtmlCharacterEntityDecoder",
     "org.springframework.http.codec.ResourceHttpMessageReader",
     "org.springframework.web.util.HierarchicalUriComponents$Type$4",
     "org.springframework.web.util.HierarchicalUriComponents$Type$5",
     "org.springframework.http.client.AsyncClientHttpRequestInterceptor",
     "org.springframework.web.util.HierarchicalUriComponents$Type$6",
     "org.springframework.web.util.HierarchicalUriComponents$Type$7",
     "org.springframework.web.util.HierarchicalUriComponents$Type$1",
     "org.springframework.web.util.HierarchicalUriComponents$Type$2",
     "org.springframework.web.server.i18n.package-info",
     "org.springframework.web.util.HierarchicalUriComponents$Type$3",
     "org.springframework.web.cors.reactive.package-info",
     "org.springframework.web.client.HttpClientErrorException$1",
     "org.springframework.http.converter.BufferedImageHttpMessageConverter",
     "org.springframework.web.filter.reactive.ServerWebExchangeContextFilter",
     "org.springframework.http.server.ServletServerHttpResponse$ServletResponseHttpHeaders",
     "org.springframework.web.client.RequestCallback",
     "org.springframework.web.context.request.DestructionCallbackBindingListener",
     "org.springframework.web.filter.reactive.HiddenHttpMethodFilter",
     "org.springframework.web.accept.ContentNegotiationManager",
     "org.springframework.web.bind.annotation.ValueConstants",
     "org.springframework.http.RequestEntity$DefaultBodyBuilder",
     "org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator",
     "org.springframework.web.method.annotation.RequestHeaderMapMethodArgumentResolver",
     "org.springframework.http.codec.package-info",
     "org.springframework.web.context.request.WebRequest",
     "org.springframework.web.context.annotation.RequestScope",
     "org.springframework.web.method.support.InvocableHandlerMethod",
     "org.springframework.http.server.reactive.JettyHeadersAdapter$HeaderEntry",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher$ReadSubscription",
     "org.springframework.http.client.InterceptingAsyncClientHttpRequest",
     "org.springframework.web.bind.ServletRequestUtils$BooleanParser",
     "org.springframework.web.accept.ContentNegotiationManagerFactoryBean",
     "org.springframework.web.method.HandlerMethod",
     "org.springframework.remoting.caucho.HessianProxyFactoryBean",
     "org.springframework.web.context.package-info",
     "org.springframework.web.client.ResponseErrorHandler",
     "org.springframework.web.server.UnsupportedMediaTypeStatusException",
     "org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration",
     "org.springframework.web.jsf.FacesContextUtils",
     "org.springframework.web.multipart.MaxUploadSizeExceededException",
     "org.springframework.web.server.session.HeaderWebSessionIdResolver",
     "org.springframework.web.client.RestOperationsExtensionsKt$exchange$4",
     "org.springframework.web.client.RestOperationsExtensionsKt$exchange$3",
     "org.springframework.web.client.RestOperationsExtensionsKt$exchange$2",
     "org.springframework.web.client.RestOperationsExtensionsKt$exchange$1",
     "org.springframework.http.server.reactive.ServletServerHttpRequest$RequestBodyPublisher",
     "org.springframework.http.converter.json.GsonBuilderUtils$1",
     "org.springframework.http.client.OkHttp3ClientHttpResponse",
     "org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor",
     "org.springframework.http.codec.ServerSentEvent$1",
     "org.springframework.http.server.ServerHttpAsyncRequestControl",
     "org.springframework.web.util.OpaqueUriComponents",
     "org.springframework.http.codec.support.ServerDefaultCodecsImpl",
     "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
     "org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile",
     "org.springframework.http.client.InterceptingAsyncClientHttpRequest$AsyncRequestExecution",
     "org.springframework.web.multipart.support.MissingServletRequestPartException",
     "org.springframework.web.accept.FixedContentNegotiationStrategy",
     "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
     "org.springframework.web.cors.DefaultCorsProcessor",
     "org.springframework.http.codec.ClientCodecConfigurer$MultipartCodecs",
     "org.springframework.http.client.HttpComponentsAsyncClientHttpRequest",
     "org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent",
     "org.springframework.http.server.reactive.AbstractListenerWriteProcessor",
     "org.springframework.http.converter.ByteArrayHttpMessageConverter",
     "org.springframework.http.client.SimpleClientHttpRequestFactory",
     "org.springframework.web.context.support.WebApplicationContextUtils",
     "org.springframework.web.util.pattern.WildcardTheRestPathElement",
     "org.springframework.web.context.support.ServletContextResourcePatternResolver",
     "org.springframework.web.util.pattern.PathPattern$MatchingContext",
     "org.springframework.http.codec.CodecConfigurer",
     "org.springframework.web.filter.CorsFilter",
     "org.springframework.http.server.reactive.UndertowHttpHandlerAdapter",
     "org.springframework.http.server.reactive.JettyHttpHandlerAdapter",
     "org.springframework.web.util.pattern.PathPattern",
     "org.springframework.remoting.httpinvoker.package-info",
     "org.springframework.web.method.HandlerTypePredicate",
     "org.springframework.http.client.reactive.ClientHttpConnector",
     "org.springframework.web.multipart.support.package-info",
     "org.springframework.web.context.support.RequestHandledEvent",
     "org.springframework.web.util.UriComponents",
     "org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter",
     "org.springframework.web.bind.support.WebArgumentResolver",
     "org.springframework.web.cors.reactive.CorsConfigurationSource",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher$State$6",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher$State$5",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher$State$4",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher$State$3",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher$State$2",
     "org.springframework.http.converter.xml.SourceHttpMessageConverter$CountingOutputStream",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher$State$1",
     "org.springframework.web.client.DefaultResponseErrorHandler",
     "org.springframework.http.codec.support.BaseDefaultCodecs",
     "org.springframework.http.ResponseEntity$1",
     "org.springframework.web.filter.ForwardedHeaderFilter",
     "org.springframework.web.method.support.HandlerMethodArgumentResolverComposite",
     "org.springframework.http.ResponseEntity$DefaultBuilder",
     "org.springframework.web.method.annotation.SessionAttributesHandler",
     "org.springframework.web.bind.annotation.RequestMethod",
     "org.springframework.web.context.WebApplicationContext",
     "org.springframework.web.filter.GenericFilterBean$FilterConfigPropertyValues",
     "org.springframework.http.HttpEntity",
     "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
     "org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar",
     "org.springframework.http.client.HttpComponentsStreamingClientHttpRequest",
     "org.springframework.http.client.support.ProxyFactoryBean",
     "org.springframework.http.codec.xml.package-info",
     "org.springframework.web.multipart.MultipartResolver",
     "org.springframework.web.HttpMediaTypeException",
     "org.springframework.http.client.HttpComponentsClientHttpRequest",
     "org.springframework.http.codec.multipart.MultipartHttpMessageWriter",
     "org.springframework.http.client.support.AsyncHttpAccessor",
     "org.springframework.web.util.pattern.PathPatternRouteMatcher",
     "org.springframework.web.bind.annotation.package-info",
     "org.springframework.web.bind.MissingPathVariableException",
     "org.springframework.http.client.MultipartBodyBuilder$PublisherEntity",
     "org.springframework.http.client.Netty4ClientHttpRequestFactory$1",
     "org.springframework.http.converter.json.SpringHandlerInstantiator",
     "org.springframework.http.ContentDisposition",
     "org.springframework.http.server.reactive.DefaultSslInfo",
     "org.springframework.web.bind.annotation.MatrixVariable",
     "org.springframework.http.server.reactive.JettyHeadersAdapter",
     "org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter",
     "org.springframework.http.client.ClientHttpResponse",
     "org.springframework.http.client.reactive.JettyClientHttpConnector",
     "org.springframework.http.server.reactive.ServletServerHttpResponse$1",
     "org.springframework.web.util.pattern.PathElement",
     "org.springframework.web.client.ResourceAccessException",
     "org.springframework.http.client.OkHttp3AsyncClientHttpRequest$OkHttpListenableFuture$1",
     "org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter$ProtobufFormatSupport",
     "org.springframework.web.multipart.support.StringMultipartFileEditor",
     "org.springframework.web.filter.ForwardedHeaderFilter$ForwardedPrefixExtractor",
     "org.springframework.web.server.MethodNotAllowedException",
     "org.springframework.http.codec.protobuf.ProtobufEncoder",
     "org.springframework.remoting.httpinvoker.HttpInvokerRequestExecutor",
     "org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossPartGenerator",
     "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$SmileFactoryInitializer",
     "org.springframework.web.HttpMediaTypeNotAcceptableException",
     "org.springframework.web.client.HttpClientErrorException$NotAcceptable",
     "org.springframework.http.client.HttpComponentsAsyncClientHttpRequest$ClientHttpResponseFuture",
     "org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter",
     "org.springframework.remoting.jaxws.package-info",
     "org.springframework.web.util.pattern.package-info",
     "org.springframework.web.context.support.LiveBeansViewServlet",
     "org.springframework.web.filter.CompositeFilter",
     "org.springframework.http.server.ServletServerHttpResponse$1",
     "org.springframework.web.context.support.package-info",
     "org.springframework.web.filter.ForwardedHeaderFilter$ForwardedHeaderRemovingRequest",
     "org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$FluxSinkAdapterListener",
     "org.springframework.web.context.request.AbstractRequestAttributesScope",
     "org.springframework.http.codec.ServerSentEvent$BuilderImpl",
     "org.springframework.web.jsf.el.package-info",
     "org.springframework.web.client.HttpClientErrorException$UnsupportedMediaType",
     "org.springframework.web.util.HierarchicalUriComponents",
     "org.springframework.web.filter.GenericFilterBean",
     "org.springframework.web.server.MediaTypeNotSupportedStatusException",
     "org.springframework.http.client.InterceptingClientHttpRequest",
     "org.springframework.http.StreamingHttpOutputMessage$Body",
     "org.springframework.web.util.ContentCachingRequestWrapper$ContentCachingInputStream",
     "org.springframework.web.util.WebUtils",
     "org.springframework.web.method.support.HandlerMethodArgumentResolver",
     "org.springframework.web.server.handler.ExceptionHandlingWebHandler$1",
     "org.springframework.http.codec.FormHttpMessageWriter",
     "org.springframework.http.codec.support.ClientDefaultCodecsImpl",
     "org.springframework.http.converter.StringHttpMessageConverter",
     "org.springframework.web.util.pattern.LiteralPathElement",
     "org.springframework.web.util.pattern.SingleCharWildcardedPathElement",
     "org.springframework.web.context.request.async.DeferredResultProcessingInterceptor",
     "org.springframework.http.server.reactive.UndertowHeadersAdapter$1",
     "org.springframework.web.cors.reactive.CorsWebFilter",
     "org.springframework.web.multipart.package-info",
     "org.springframework.http.server.reactive.ServerHttpRequestDecorator",
     "org.springframework.web.method.annotation.RequestHeaderMethodArgumentResolver$RequestHeaderNamedValueInfo",
     "org.springframework.web.server.ServerWebExchange$Builder",
     "org.springframework.http.codec.multipart.FilePart",
     "org.springframework.http.codec.multipart.FormFieldPart",
     "org.springframework.web.method.annotation.ModelAttributeMethodProcessor",
     "org.springframework.http.HttpStatus$Series",
     "org.springframework.web.context.support.ServletRequestHandledEvent",
     "org.springframework.http.codec.HttpMessageReader",
     "org.springframework.web.util.HtmlUtils",
     "org.springframework.web.util.IntrospectorCleanupListener",
     "org.springframework.http.server.reactive.AbstractListenerWriteProcessor$1",
     "org.springframework.web.method.annotation.RequestHeaderMethodArgumentResolver",
     "org.springframework.http.server.DefaultPathContainer$DefaultPathSegment",
     "org.springframework.http.server.reactive.JettyHeadersAdapter$EntryIterator",
     "org.springframework.web.context.support.ContextExposingHttpServletRequest",
     "org.springframework.web.server.WebExceptionHandler",
     "org.springframework.http.client.Netty4ClientHttpRequestFactory",
     "org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler",
     "org.springframework.http.converter.package-info",
     "org.springframework.web.client.HttpClientErrorException$Conflict",
     "org.springframework.web.client.AsyncRestTemplate$AsyncRequestCallbackAdapter$1",
     "org.springframework.web.method.support.UriComponentsContributor",
     "org.springframework.http.client.HttpComponentsClientHttpRequestFactory$1",
     "org.springframework.web.HttpRequestMethodNotSupportedException",
     "org.springframework.remoting.caucho.SimpleHessianServiceExporter",
     "org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor",
     "org.springframework.http.server.reactive.WriteResultPublisher$State$4",
     "org.springframework.http.server.reactive.WriteResultPublisher$State$2",
     "org.springframework.http.server.reactive.WriteResultPublisher$State$3",
     "org.springframework.web.method.ControllerAdviceBean",
     "org.springframework.http.server.reactive.WriteResultPublisher$State$1",
     "org.springframework.web.context.ServletContextAware",
     "org.springframework.web.context.AbstractContextLoaderInitializer",
     "org.springframework.web.bind.support.package-info",
     "org.springframework.http.HttpCookie",
     "org.springframework.http.client.OkHttp3AsyncClientHttpRequest$OkHttpListenableFuture",
     "org.springframework.remoting.caucho.HessianClientInterceptor",
     "org.springframework.web.multipart.commons.package-info",
     "org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter$ProtobufJavaUtilSupport",
     "org.springframework.web.filter.HiddenHttpMethodFilter$HttpMethodRequestWrapper",
     "org.springframework.web.util.UriTemplateHandler",
     "org.springframework.http.client.AbstractClientHttpRequest",
     "org.springframework.http.client.OkHttp3ClientHttpRequest",
     "org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry",
     "org.springframework.http.client.HttpComponentsAsyncClientHttpResponse",
     "org.springframework.web.util.package-info",
     "org.springframework.web.client.RestTemplate",
     "org.springframework.web.client.ResponseExtractor",
     "org.springframework.web.client.AsyncRestTemplate$AsyncRequestCallbackAdapter",
     "org.springframework.web.bind.ServletRequestUtils$IntParser",
     "org.springframework.web.server.adapter.DefaultServerWebExchange",
     "org.springframework.http.converter.xml.SourceHttpMessageConverter",
     "org.springframework.web.bind.MissingMatrixVariableException",
     "org.springframework.web.bind.annotation.RequestHeader",
     "org.springframework.web.context.request.async.DeferredResultProcessingInterceptorAdapter",
     "org.springframework.web.accept.AbstractMappingContentNegotiationStrategy",
     "org.springframework.web.context.request.async.CallableProcessingInterceptorAdapter",
     "org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator",
     "org.springframework.web.context.request.async.AsyncWebRequest",
     "org.springframework.http.server.reactive.ServletHttpHandlerAdapter",
     "org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory",
     "org.springframework.web.context.support.ServletContextAttributeFactoryBean",
     "org.springframework.web.bind.support.SessionStatus",
     "org.springframework.web.util.NestedServletException",
     "org.springframework.web.cors.reactive.DefaultCorsProcessor",
     "org.springframework.http.codec.xml.Jaxb2XmlDecoder",
     "org.springframework.http.converter.json.GsonBuilderUtils",
     "org.springframework.web.method.package-info",
     "org.springframework.http.codec.json.Jackson2SmileDecoder",
     "org.springframework.http.converter.AbstractHttpMessageConverter",
     "org.springframework.web.filter.FormContentFilter$FormContentRequestWrapper",
     "org.springframework.http.codec.support.BaseCodecConfigurer$1",
     "org.springframework.http.server.reactive.package-info",
     "org.springframework.http.codec.json.Jackson2Tokenizer$1",
     "org.springframework.http.server.PathContainer",
     "org.springframework.web.context.request.ServletRequestAttributes",
     "org.springframework.http.client.SimpleBufferingAsyncClientHttpRequest$1",
     "org.springframework.web.method.annotation.MethodArgumentTypeMismatchException",
     "org.springframework.web.HttpMediaTypeNotSupportedException",
     "org.springframework.web.server.i18n.LocaleContextResolver",
     "org.springframework.http.codec.ClientCodecConfigurer",
     "org.springframework.http.codec.json.Jackson2CodecSupport",
     "org.springframework.web.client.HttpClientErrorException",
     "org.springframework.http.HttpInputMessage",
     "org.springframework.web.accept.ContentNegotiationStrategy",
     "org.springframework.http.ReactiveHttpInputMessage",
     "org.springframework.http.server.reactive.HttpHandler",
     "org.springframework.http.client.Netty4ClientHttpResponse",
     "org.springframework.web.client.HttpClientErrorException$Unauthorized",
     "org.springframework.http.server.reactive.UndertowServerHttpRequest$UndertowDataBuffer",
     "org.springframework.web.bind.WebDataBinder",
     "org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler",
     "org.springframework.web.method.HandlerMethod$ReturnValueMethodParameter",
     "org.springframework.http.ResponseEntity",
     "org.springframework.http.server.reactive.AbstractListenerReadPublisher$State",
     "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer",
     "org.springframework.web.context.support.HttpRequestHandlerServlet",
     "org.springframework.web.method.annotation.MapMethodProcessor",
     "org.springframework.web.jsf.el.WebApplicationContextFacesELResolver",
     "org.springframework.web.bind.annotation.RequestParam",
     "org.springframework.http.ContentDisposition$Builder",
     "org.springframework.web.client.HttpServerErrorException$InternalServerError",
     "org.springframework.web.server.handler.WebHandlerDecorator",
     "org.springframework.web.server.WebFilter",
     "org.springframework.web.filter.CompositeFilter$VirtualFilterChain",
     "org.springframework.web.filter.RelativeRedirectResponseWrapper",
     "org.springframework.http.ResponseCookie$1",
     "org.springframework.http.server.PathContainer$Element",
     "org.springframework.http.server.reactive.WriteResultPublisher",
     "org.springframework.http.client.ClientHttpRequestInterceptor",
     "org.springframework.http.server.reactive.TomcatHeadersAdapter$1",
     "org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution",
     "org.springframework.web.bind.EscapedErrors",
     "org.springframework.http.client.AbstractBufferingClientHttpRequest",
     "org.springframework.web.util.UriBuilderFactory",
     "org.springframework.web.util.HttpSessionMutexListener",
     "org.springframework.remoting.caucho.HessianServiceExporter",
     "org.springframework.http.client.reactive.ClientHttpResponseDecorator",
     "org.springframework.web.server.adapter.WebHttpHandlerBuilder",
     "org.springframework.http.MediaType$1",
     "org.springframework.web.context.request.async.DeferredResult",
     "org.springframework.web.context.support.ServletContextParameterFactoryBean",
     "org.springframework.web.util.pattern.CaptureTheRestPathElement",
     "org.springframework.http.server.reactive.UndertowHeadersAdapter$HeaderEntry",
     "org.springframework.web.accept.package-info",
     "org.springframework.http.client.reactive.package-info",
     "org.springframework.http.MediaTypeFactory",
     "org.springframework.http.server.ServletServerHttpAsyncRequestControl",
     "org.springframework.http.converter.AbstractGenericHttpMessageConverter$1",
     "org.springframework.web.client.AsyncRequestCallback",
     "org.springframework.web.bind.ServletRequestUtils$FloatParser",
     "org.springframework.http.client.reactive.AbstractClientHttpRequest",
     "org.springframework.web.method.annotation.ModelMethodProcessor",
     "org.springframework.http.server.reactive.JettyHeadersAdapter$1",
     "org.springframework.web.filter.reactive.ForwardedHeaderFilter",
     "org.springframework.http.converter.protobuf.ExtensionRegistryInitializer",
     "org.springframework.web.context.ConfigurableWebEnvironment",
     "org.springframework.web.filter.CharacterEncodingFilter",
     "org.springframework.remoting.httpinvoker.HttpInvokerClientInterceptor",
     "org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean",
     "org.springframework.web.bind.UnsatisfiedServletRequestParameterException",
     "org.springframework.web.context.request.RequestScope",
     "org.springframework.http.converter.AbstractHttpMessageConverter$1",
     "org.springframework.web.multipart.commons.CommonsMultipartFile",
     "org.springframework.web.server.session.WebSessionManager",
     "org.springframework.web.context.support.GenericWebApplicationContext",
     "org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory",
     "org.springframework.http.converter.xml.SourceHttpMessageConverter$1",
     "org.springframework.web.method.support.ModelAndViewContainer",
     "org.springframework.http.client.SimpleStreamingClientHttpRequest",
     "org.springframework.remoting.jaxws.LocalJaxWsServiceFactoryBean",
     "org.springframework.http.client.reactive.AbstractClientHttpRequest$State",
     "org.springframework.http.server.reactive.AbstractServerHttpRequest",
     "org.springframework.http.client.support.InterceptingAsyncHttpAccessor",
     "org.springframework.http.codec.multipart.package-info",
     "org.springframework.web.util.DefaultUriBuilderFactory$DefaultUriBuilder",
     "org.springframework.web.client.HttpClientErrorException$Forbidden",
     "org.springframework.http.server.reactive.UndertowHeadersAdapter",
     "org.springframework.http.server.reactive.ServerHttpRequest",
     "org.springframework.web.server.WebFilterChain",
     "org.springframework.web.filter.HttpPutFormContentFilter$HttpPutFormContentRequestWrapper",
     "org.springframework.web.bind.MissingServletRequestParameterException",
     "org.springframework.web.multipart.support.MultipartResolutionDelegate",
     "org.springframework.http.client.OkHttp3ClientHttpRequestFactory",
     "org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State",
     "org.springframework.http.converter.protobuf.package-info",
     "org.springframework.web.util.UriComponents$VarArgsTemplateVariables",
     "org.springframework.http.server.reactive.ChannelSendOperator",
     "org.springframework.http.server.ServletServerHttpRequest",
     "org.springframework.http.converter.json.GsonFactoryBean",
     "org.springframework.web.util.UriComponentsBuilder$1",
     "org.springframework.web.context.request.RequestContextListener",
     "org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver$NamedValueInfo",
     "org.springframework.http.converter.json.package-info",
     "org.springframework.web.context.request.FacesWebRequest",
     "org.springframework.web.context.support.ServletContextAttributeExporter",
     "org.springframework.web.util.DefaultUriBuilderFactory$EncodingMode",
     "org.springframework.web.client.RestOperationsExtensionsKt",
     "org.springframework.web.util.ContentCachingRequestWrapper",
     "org.springframework.http.server.reactive.ServletHttpHandlerAdapter$HandlerResultAsyncListener",
     "org.springframework.http.client.InterceptingAsyncClientHttpRequestFactory",
     "org.springframework.remoting.caucho.HessianExporter",
     "org.springframework.web.bind.annotation.CrossOrigin",
     "org.springframework.http.server.reactive.NettyHeadersAdapter",
     "org.springframework.web.context.ContextLoader",
     "org.springframework.web.util.HierarchicalUriComponents$UriTemplateEncoder",
     "org.springframework.web.bind.annotation.GetMapping",
     "org.springframework.http.client.support.package-info",
     "org.springframework.web.accept.HeaderContentNegotiationStrategy",
     "org.springframework.http.converter.ResourceHttpMessageConverter$1",
     "org.springframework.web.bind.support.SpringWebConstraintValidatorFactory",
     "org.springframework.web.util.HierarchicalUriComponents$PathComponentComposite",
     "org.springframework.http.converter.ResourceHttpMessageConverter$2",
     "org.springframework.web.util.pattern.PathPattern$PathRemainingMatchInfo",
     "org.springframework.web.server.handler.ExceptionHandlingWebHandler",
     "org.springframework.http.HttpRange",
     "org.springframework.web.multipart.support.StandardMultipartHttpServletRequest",
     "org.springframework.web.bind.support.WebRequestDataBinder",
     "org.springframework.web.bind.annotation.ResponseBody",
     "org.springframework.web.bind.MethodArgumentNotValidException",
     "org.springframework.http.codec.support.BaseCodecConfigurer$DefaultCustomCodecs",
     "org.springframework.http.server.reactive.UndertowHttpHandlerAdapter$HandlerResultSubscriber",
     "org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter",
     "org.springframework.web.cors.reactive.CorsProcessor",
     "org.springframework.web.context.request.async.TimeoutCallableProcessingInterceptor",
     "org.springframework.web.util.UriUtils",
     "org.springframework.web.util.UriComponents$MapTemplateVariables",
     "org.springframework.http.converter.json.GsonBuilderUtils$Base64TypeAdapter",
     "org.springframework.web.client.HttpStatusCodeException",
     "org.springframework.http.client.Netty4ClientHttpRequest$RequestExecuteHandler",
     "org.springframework.web.WebApplicationInitializer",
     "org.springframework.web.client.AsyncRestTemplate$ResponseExtractorFuture",
     "org.springframework.web.server.WebHandler",
     "org.springframework.http.client.SimpleClientHttpResponse",
     "org.springframework.http.converter.HttpMessageNotWritableException",
     "org.springframework.http.server.reactive.UndertowServerHttpRequest$RequestBodyPublisher",
     "org.springframework.http.client.reactive.ClientHttpResponse",
     "org.springframework.web.server.handler.ResponseStatusExceptionHandler",
     "org.springframework.web.cors.CorsConfigurationSource",
     "org.springframework.web.context.request.ServletWebRequest",
     "org.springframework.web.filter.DelegatingFilterProxy",
     "org.springframework.http.client.MultipartBodyBuilder",
     "org.springframework.http.client.AbstractBufferingAsyncClientHttpRequest",
     "org.springframework.http.codec.CodecConfigurerFactory",
     "org.springframework.http.server.reactive.ChannelSendOperator$WriteCompletionBarrier",
     "org.springframework.web.bind.annotation.PostMapping",
     "org.springframework.web.method.annotation.ErrorsMethodArgumentResolver",
     "org.springframework.http.client.HttpComponentsStreamingClientHttpRequest$StreamingHttpEntity",
     "org.springframework.web.util.HierarchicalUriComponents$Type$11",
     "org.springframework.web.util.HierarchicalUriComponents$Type$12",
     "org.springframework.web.util.HierarchicalUriComponents$Type$10",
     "org.springframework.web.cors.UrlBasedCorsConfigurationSource",
     "org.springframework.web.bind.ServletRequestBindingException",
     "org.springframework.web.server.session.package-info",
     "org.springframework.http.client.reactive.JettyClientHttpRequest",
     "org.springframework.web.util.pattern.WildcardPathElement",
     "org.springframework.web.context.request.WebRequestInterceptor",
     "org.springframework.web.util.UriComponentsBuilder$PathSegmentComponentBuilder",
     "org.springframework.http.RequestEntity$HeadersBuilder",
     "org.springframework.web.server.ServerWebExchangeDecorator",
     "org.springframework.http.client.ClientHttpRequestFactory",
     "org.springframework.http.client.reactive.ReactorResourceFactory",
     "org.springframework.http.server.RequestPath",
     "org.springframework.http.client.reactive.JettyClientHttpResponse",
     "org.springframework.remoting.jaxws.LocalJaxWsServiceFactory",
     "org.springframework.web.context.request.async.DeferredResult$1",
     "org.springframework.http.ReactiveHttpOutputMessage",
     "org.springframework.http.client.ClientHttpRequest",
     "org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossFilePart",
     "org.springframework.web.client.RestTemplate$AcceptHeaderRequestCallback",
     "org.springframework.web.filter.ForwardedHeaderFilter$ForwardedHeaderExtractingResponse",
     "org.springframework.http.codec.xml.XmlEventDecoder$1",
     "org.springframework.web.bind.ServletRequestUtils$1",
     "org.springframework.web.filter.ShallowEtagHeaderFilter$HttpStreamingAwareContentCachingResponseWrapper",
     "org.springframework.http.client.reactive.ReactorClientHttpConnector",
     "org.springframework.web.cors.reactive.CorsUtils",
     "org.springframework.web.filter.RequestContextFilter",
     "org.springframework.http.HttpMethod",
     "org.springframework.http.client.reactive.JettyResourceFactory",
     "org.springframework.http.HttpStatus",
     "org.springframework.http.codec.protobuf.ProtobufCodecSupport",
     "org.springframework.http.converter.smile.MappingJackson2SmileHttpMessageConverter",
     "org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException",
     "org.springframework.web.util.pattern.PatternParseException",
     "org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
     "org.springframework.http.server.reactive.AbstractListenerServerHttpResponse",
     "org.springframework.web.client.RestTemplate$1",
     "org.springframework.http.converter.feed.package-info",
     "org.springframework.web.method.support.package-info",
     "org.springframework.web.util.UriComponentsBuilder",
     "org.springframework.web.bind.ServletRequestDataBinder",
     "org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter",
     "org.springframework.web.bind.annotation.RequestPart",
     "org.springframework.web.context.request.async.DeferredResult$DeferredResultHandler",
     "org.springframework.web.util.UriComponentsBuilder$FullPathComponentBuilder",
     "org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossPart",
     "org.springframework.http.converter.smile.package-info",
     "org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor",
     "org.springframework.web.method.annotation.ModelFactory",
     "org.springframework.http.client.AbstractAsyncClientHttpRequest",
     "org.springframework.http.codec.cbor.Jackson2CborDecoder",
     "org.springframework.web.util.UriComponentsBuilder$EncodingHint",
     "org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter$ProtobufJavaFormatSupport",
     "org.springframework.http.codec.multipart.Part",
     "org.springframework.web.filter.CommonsRequestLoggingFilter",
     "org.springframework.http.client.SimpleStreamingAsyncClientHttpRequest",
     "org.springframework.http.server.reactive.ServletServerHttpRequest$1",
     "org.springframework.web.context.request.RequestAttributes",
     "org.springframework.web.util.HierarchicalUriComponents$QueryUriTemplateVariables",
     "org.springframework.web.cors.CorsUtils",
     "org.springframework.http.codec.xml.XmlEventDecoder",
     "org.springframework.http.MediaType",
     "org.springframework.web.util.ContentCachingResponseWrapper$ResponseServletOutputStream",
     "org.springframework.http.converter.xml.MarshallingHttpMessageConverter",
     "org.springframework.http.server.reactive.ReactorServerHttpResponse",
     "org.springframework.web.method.annotation.InitBinderDataBinderFactory",
     "org.springframework.http.client.reactive.ClientHttpRequestDecorator",
     "org.springframework.http.client.OkHttp3AsyncClientHttpRequest",
     "org.springframework.web.bind.package-info",
     "org.springframework.web.util.pattern.RegexPathElement",
     "org.springframework.web.server.i18n.FixedLocaleContextResolver",
     "org.springframework.web.client.RestTemplate$HttpEntityRequestCallback",
     "org.springframework.http.client.AsyncClientHttpRequestExecution",
     "org.springframework.http.codec.support.BaseCodecConfigurer",
     "org.springframework.http.server.reactive.NettyHeadersAdapter$1",
     "org.springframework.http.ResponseEntity$BodyBuilder",
     "org.springframework.http.server.reactive.JettyHttpHandlerAdapter$JettyServerHttpResponse",
     "org.springframework.http.codec.protobuf.ProtobufDecoder$MessageDecoderFunction",
     "org.springframework.http.codec.CodecConfigurer$CustomCodecs",
     "org.springframework.web.client.AsyncRestTemplate",
     "org.springframework.web.filter.HiddenHttpMethodFilter",
     "org.springframework.http.converter.xml.AbstractJaxb2HttpMessageConverter",
     "org.springframework.http.client.reactive.ReactorClientHttpRequest",
     "org.springframework.web.context.request.async.CallableProcessingInterceptor",
     "org.springframework.http.client.InterceptingClientHttpRequestFactory",
     "org.springframework.http.server.ServerHttpRequest",
     "org.springframework.web.server.NotAcceptableStatusException",
     "org.springframework.http.converter.cbor.package-info",
     "org.springframework.http.codec.ServerCodecConfigurer$ServerDefaultCodecs",
     "org.springframework.remoting.jaxws.AbstractJaxWsServiceExporter",
     "org.springframework.http.codec.multipart.MultipartHttpMessageReader",
     "org.springframework.web.accept.ParameterContentNegotiationStrategy",
     "org.springframework.http.codec.HttpMessageEncoder",
     "org.springframework.web.context.request.async.WebAsyncTask$1",
     "org.springframework.web.server.adapter.HttpWebHandlerAdapter",
     "org.springframework.http.package-info",
     "org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy",
     "org.springframework.web.util.UriTemplate$TemplateInfo",
     "org.springframework.web.util.HierarchicalUriComponents$1",
     "org.springframework.web.client.HttpClientErrorException$TooManyRequests",
     "org.springframework.web.method.annotation.RequestParamMapMethodArgumentResolver",
     "org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest",
     "org.springframework.http.client.support.HttpRequestWrapper",
     "org.springframework.web.context.request.RequestContextHolder",
     "org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter",
     "org.springframework.http.server.reactive.TomcatHttpHandlerAdapter$TomcatServerHttpResponse",
     "org.springframework.http.HttpRange$SuffixByteRange",
     "org.springframework.web.multipart.MultipartRequest",
     "org.springframework.web.accept.MediaTypeFileExtensionResolver",
     "org.springframework.http.client.SimpleStreamingAsyncClientHttpRequest$1",
     "org.springframework.web.util.ContentCachingResponseWrapper",
     "org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter",
     "org.springframework.web.context.annotation.package-info",
     "org.springframework.http.client.AsyncClientHttpRequest",
     "org.springframework.http.server.reactive.ReactorServerHttpRequest",
     "org.springframework.web.util.DefaultUriTemplateHandler",
     "org.springframework.web.bind.MissingRequestCookieException",
     "org.springframework.web.context.support.ServletContextLiveBeansView",
     "org.springframework.web.accept.PathExtensionContentNegotiationStrategy",
     "org.springframework.web.util.HierarchicalUriComponents$FullPathComponent",
     "org.springframework.web.bind.annotation.RestController",
     "org.springframework.web.util.pattern.SubSequence",
     "org.springframework.web.bind.annotation.RequestAttribute",
     "org.springframework.web.util.UriComponentsBuilder$CompositePathComponentBuilder",
     "org.springframework.http.client.Netty4ClientHttpRequest",
     "org.springframework.http.converter.json.GsonHttpMessageConverter",
     "org.springframework.http.server.reactive.ServletServerHttpRequest",
     "org.springframework.http.ContentDisposition$BuilderImpl",
     "org.springframework.web.filter.FormContentFilter$1",
     "org.springframework.web.server.adapter.AbstractReactiveWebInitializer$ServletContextDestroyedListener",
     "org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter$FlushGuardedOutputStream",
     "org.springframework.web.client.AsyncRestTemplate$1",
     "org.springframework.web.client.AsyncRestTemplate$2",
     "org.springframework.web.server.ServerWebExchange",
     "org.springframework.http.client.AsyncClientHttpRequestFactory",
     "org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter",
     "org.springframework.web.client.HttpClientErrorException$NotFound",
     "org.springframework.http.codec.xml.Jaxb2XmlDecoder$SplitHandler",
     "org.springframework.web.bind.annotation.ExceptionHandler",
     "org.springframework.http.RequestEntity",
     "org.springframework.web.bind.annotation.ControllerAdvice",
     "org.springframework.web.server.session.CookieWebSessionIdResolver",
     "org.springframework.http.client.SimpleBufferingAsyncClientHttpRequest",
     "org.springframework.web.bind.ServletRequestUtils",
     "org.springframework.web.server.adapter.package-info",
     "org.springframework.web.client.RestOperations",
     "org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyFlushProcessor",
     "org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyWriteListener",
     "org.springframework.web.server.handler.FilteringWebHandler",
     "org.springframework.http.codec.json.AbstractJackson2Decoder",
     "org.springframework.web.bind.MissingRequestHeaderException",
     "org.springframework.web.bind.ServletRequestUtils$LongParser",
     "org.springframework.http.server.reactive.ServerHttpRequest$Builder",
     "org.springframework.http.server.reactive.JettyHttpHandlerAdapter$JettyServerHttpRequest",
     "org.springframework.web.context.support.ServletContextAwareProcessor",
     "org.springframework.web.multipart.MultipartHttpServletRequest",
     "org.springframework.web.server.session.WebSessionIdResolver",
     "org.springframework.http.HttpRange$ByteRange",
     "org.springframework.web.context.support.ServletContextResource",
     "org.springframework.web.HttpSessionRequiredException",
     "org.springframework.web.method.HandlerTypePredicate$1",
     "org.springframework.web.filter.HttpPutFormContentFilter",
     "org.springframework.http.codec.CodecConfigurer$DefaultCodecs",
     "org.springframework.web.bind.support.ConfigurableWebBindingInitializer",
     "org.springframework.web.context.support.ServletConfigPropertySource",
     "org.springframework.web.filter.reactive.package-info",
     "org.springframework.web.jsf.DelegatingNavigationHandlerProxy",
     "org.springframework.http.ResponseEntity$HeadersBuilder",
     "org.springframework.web.server.session.InMemoryWebSessionStore",
     "org.springframework.web.client.ExtractingResponseErrorHandler",
     "org.springframework.http.codec.ServerSentEvent$Builder",
     "org.springframework.web.client.DefaultResponseErrorHandler$1",
     "org.springframework.web.context.ContextCleanupListener",
     "org.springframework.web.context.request.SessionScope",
     "org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory",
     "org.springframework.http.codec.ResourceHttpMessageWriter",
     "org.springframework.web.method.HandlerMethod$HandlerMethodParameter",
     "org.springframework.web.util.pattern.CaptureVariablePathElement",
     "org.springframework.http.codec.FormHttpMessageReader",
     "org.springframework.web.bind.annotation.RequestMapping",
     "org.springframework.web.context.support.GroovyWebApplicationContext",
     "org.springframework.web.server.handler.package-info",
     "org.springframework.web.server.session.InMemoryWebSessionStore$ExpiredSessionChecker",
     "org.springframework.web.server.package-info",
     "org.springframework.web.package-info",
     "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$1",
     "org.springframework.web.jsf.package-info",
     "org.springframework.web.client.HttpServerErrorException$BadGateway",
     "org.springframework.web.bind.annotation.ModelAttribute",
     "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
     "org.springframework.web.client.HttpServerErrorException$GatewayTimeout",
     "org.springframework.web.method.support.CompositeUriComponentsContributor",
     "org.springframework.web.SpringServletContainerInitializer",
     "org.springframework.http.codec.protobuf.package-info",
     "org.springframework.web.bind.support.WebExchangeBindException",
     "org.springframework.http.ResponseCookie",
     "org.springframework.web.context.request.async.AsyncRequestTimeoutException",
     "org.springframework.web.context.request.async.WebAsyncUtils",
     "org.springframework.http.server.reactive.WriteResultPublisher$1",
     "org.springframework.http.StreamingHttpOutputMessage",
     "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State",
     "org.springframework.web.jsf.el.SpringBeanFacesELResolver",
     "org.springframework.http.converter.protobuf.ProtobufJsonFormatHttpMessageConverter",
     "org.springframework.web.method.annotation.AbstractCookieValueMethodArgumentResolver$1",
     "org.springframework.web.context.support.SpringBeanAutowiringSupport",
     "org.springframework.http.server.reactive.UndertowServerHttpResponse",
     "org.springframework.web.method.annotation.AbstractCookieValueMethodArgumentResolver$CookieValueNamedValueInfo",
     "org.springframework.http.server.reactive.TomcatHttpHandlerAdapter",
     "org.springframework.web.filter.FormContentFilter",
     "org.springframework.web.HttpRequestHandler",
     "org.springframework.web.bind.annotation.Mapping",
     "org.springframework.web.context.support.ServletContextResourceLoader"
    ],
    "usedTypes": [
     "org.springframework.web.util.UriComponentsBuilder",
     "org.springframework.web.bind.support.WebDataBinderFactory",
     "org.springframework.web.method.annotation.ModelAttributeMethodProcessor",
     "org.springframework.web.method.support.ModelAndViewContainer",
     "org.springframework.web.bind.annotation.RequestMapping",
     "org.springframework.http.converter.HttpMessageNotWritableException",
     "org.springframework.web.context.request.NativeWebRequest",
     "org.springframework.web.context.request.ServletWebRequest",
     "org.springframework.web.context.request.RequestContextHolder",
     "org.springframework.web.bind.annotation.ModelAttribute",
     "org.springframework.web.context.support.AnnotationConfigWebApplicationContext",
     "org.springframework.http.converter.AbstractHttpMessageConverter",
     "org.springframework.web.method.support.HandlerMethodArgumentResolver",
     "org.springframework.http.MediaType",
     "org.springframework.web.context.WebApplicationContext",
     "org.springframework.web.context.request.ServletRequestAttributes",
     "org.springframework.http.converter.HttpMessageNotReadableException",
     "org.springframework.http.HttpEntity",
     "org.springframework.http.HttpInputMessage",
     "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
     "org.springframework.http.converter.HttpMessageConverter",
     "org.springframework.web.bind.WebDataBinder",
     "org.springframework.http.ResponseEntity",
     "org.springframework.web.util.UriComponents",
     "org.springframework.http.HttpOutputMessage"
    ],
    "usageRatio": 0.02717391304347826,
    "children": []
   },
   {
    "id": "javax.servlet:javax.servlet-api:jar:3.0.1:provided",
    "coordinates": "javax.servlet:javax.servlet-api:3.0.1",
    "groupId": "javax.servlet",
    "artifactId": "javax.servlet-api",
    "version": "3.0.1",
    "scope": "provided",
    "packaging": "jar",
    "omitted": false,
    "size": 85353,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "javax.servlet.ServletRequestListener",
     "javax.servlet.FilterChain",
     "javax.servlet.ServletException",
     "javax.servlet.http.HttpServletRequestWrapper",
     "javax.servlet.SessionCookieConfig",
     "javax.servlet.AsyncEvent",
     "javax.servlet.Registration$Dynamic",
     "javax.servlet.http.HttpSessionAttributeListener",
     "javax.servlet.AsyncListener",
     "javax.servlet.ServletContextAttributeListener",
     "javax.servlet.Filter",
     "javax.servlet.descriptor.TaglibDescriptor",
     "javax.servlet.http.NoBodyOutputStream",
     "javax.servlet.ServletContextListener",
     "javax.servlet.http.HttpSession",
     "javax.servlet.Registration",
     "javax.servlet.ServletRegistration$Dynamic",
     "javax.servlet.annotation.WebInitParam",
     "javax.servlet.ServletConfig",
     "javax.servlet.http.HttpServlet",
     "javax.servlet.http.HttpSessionListener",
     "javax.servlet.RequestDispatcher",
     "javax.servlet.ServletRequestAttributeEvent",
     "javax.servlet.Servlet",
     "javax.servlet.ServletRequestAttributeListener",
     "javax.servlet.FilterRegistration",
     "javax.servlet.MultipartConfigElement",
     "javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic",
     "javax.servlet.HttpMethodConstraintElement",
     "javax.servlet.annotation.WebListener",
     "javax.servlet.annotation.HttpMethodConstraint",
     "javax.servlet.ServletContextEvent",
     "javax.servlet.ServletResponseWrapper",
     "javax.servlet.ServletResponse",
     "javax.servlet.descriptor.JspPropertyGroupDescriptor",
     "javax.servlet.http.HttpServletResponseWrapper",
     "javax.servlet.GenericServlet",
     "javax.servlet.http.HttpSessionContext",
     "javax.servlet.annotation.MultipartConfig",
     "javax.servlet.descriptor.JspConfigDescriptor",
     "javax.servlet.ServletRegistration",
     "javax.servlet.HttpConstraintElement",
     "javax.servlet.ServletInputStream",
     "javax.servlet.annotation.HandlesTypes",
     "javax.servlet.http.HttpSessionActivationListener",
     "javax.servlet.annotation.ServletSecurity$TransportGuarantee",
     "javax.servlet.ServletContainerInitializer",
     "javax.servlet.AsyncContext",
     "javax.servlet.http.HttpServletRequest",
     "javax.servlet.http.HttpSessionBindingEvent",
     "javax.servlet.ServletOutputStream",
     "javax.servlet.http.HttpSessionEvent",
     "javax.servlet.ServletSecurityElement",
     "javax.servlet.http.Cookie",
     "javax.servlet.http.NoBodyResponse",
     "javax.servlet.ServletRequest",
     "javax.servlet.http.HttpServletResponse",
     "javax.servlet.SessionTrackingMode",
     "javax.servlet.annotation.ServletSecurity",
     "javax.servlet.annotation.WebServlet",
     "javax.servlet.annotation.HttpConstraint",
     "javax.servlet.SingleThreadModel",
     "javax.servlet.UnavailableException",
     "javax.servlet.annotation.WebFilter",
     "javax.servlet.http.Part",
     "javax.servlet.FilterConfig",
     "javax.servlet.http.HttpUtils",
     "javax.servlet.DispatcherType",
     "javax.servlet.ServletRequestEvent",
     "javax.servlet.ServletContextAttributeEvent",
     "javax.servlet.ServletContext",
     "javax.servlet.http.HttpSessionBindingListener",
     "javax.servlet.ServletRequestWrapper",
     "javax.servlet.FilterRegistration$Dynamic"
    ],
    "usedTypes": [
     "javax.servlet.http.HttpServletRequest"
    ],
    "usageRatio": 0.013513513513513514,
    "children": []
   },
   {
    "id": "javax.annotation:javax.annotation-api:jar:1.3:compile",
    "coordinates": "javax.annotation:javax.annotation-api:1.3",
    "groupId": "javax.annotation",
    "artifactId": "javax.annotation-api",
    "version": "1.3",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 26430,
    "type": "direct",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "javax.annotation.security.DenyAll",
     "javax.annotation.security.RolesAllowed",
     "javax.annotation.security.PermitAll",
     "javax.annotation.Resource",
     "javax.annotation.security.DeclareRoles",
     "javax.annotation.security.RunAs",
     "javax.annotation.sql.DataSourceDefinition",
     "javax.annotation.PreDestroy",
     "javax.annotation.Priority",
     "javax.annotation.Generated",
     "javax.annotation.Resources",
     "javax.annotation.Resource$AuthenticationType",
     "javax.annotation.PostConstruct",
     "javax.annotation.sql.DataSourceDefinitions",
     "javax.annotation.ManagedBean"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "joda-time:joda-time:jar:2.10.3:compile",
    "coordinates": "joda-time:joda-time:2.10.3",
    "groupId": "joda-time",
    "artifactId": "joda-time",
    "version": "2.10.3",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 643032,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.joda.time.DateTimeZone",
     "org.joda.time.tz.DateTimeZoneBuilder$RuleSet",
     "org.joda.time.tz.DateTimeZoneBuilder$Transition",
     "org.joda.time.field.AbstractPartialFieldProperty",
     "org.joda.time.field.StrictDateTimeField",
     "org.joda.time.convert.ConverterSet$Entry",
     "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
     "org.joda.time.chrono.BasicChronology$HalfdayField",
     "org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear",
     "org.joda.time.LocalDate$Property",
     "org.joda.time.chrono.BasicChronology$YearInfo",
     "org.joda.time.field.UnsupportedDurationField",
     "org.joda.time.DateMidnight$Property",
     "org.joda.time.format.PeriodFormatterBuilder$CompositeAffix",
     "org.joda.time.DateTimeComparator",
     "org.joda.time.ReadWritableInterval",
     "org.joda.time.format.PeriodFormatterBuilder",
     "org.joda.time.format.DateTimePrinter",
     "org.joda.time.base.BaseLocal",
     "org.joda.time.chrono.ISOChronology",
     "org.joda.time.chrono.LenientChronology",
     "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
     "org.joda.time.tz.ZoneInfoCompiler$Rule",
     "org.joda.time.field.DividedDateTimeField",
     "org.joda.time.convert.DateConverter",
     "org.joda.time.chrono.ZonedChronology",
     "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
     "org.joda.time.field.BaseDateTimeField",
     "org.joda.time.field.ZeroIsMaxDateTimeField",
     "org.joda.time.base.BaseInterval",
     "org.joda.time.Duration",
     "org.joda.time.format.FormatUtils",
     "org.joda.time.format.PeriodFormatter",
     "org.joda.time.format.DateTimePrinterInternalPrinter",
     "org.joda.time.Interval",
     "org.joda.time.convert.LongConverter",
     "org.joda.time.base.AbstractInstant",
     "org.joda.time.tz.DateTimeZoneBuilder",
     "org.joda.time.format.DateTimeParserBucket",
     "org.joda.time.ReadWritablePeriod",
     "org.joda.time.convert.ConverterSet",
     "org.joda.time.LocalDateTime",
     "org.joda.time.base.BasePeriod$1",
     "org.joda.time.tz.FixedDateTimeZone",
     "org.joda.time.format.PeriodPrinter",
     "org.joda.time.convert.IntervalConverter",
     "org.joda.time.field.PreciseDateTimeField",
     "org.joda.time.chrono.LimitChronology$LimitException",
     "org.joda.time.chrono.GJLocaleSymbols",
     "org.joda.time.convert.ReadableDurationConverter",
     "org.joda.time.base.BaseDuration",
     "org.joda.time.field.DecoratedDateTimeField",
     "org.joda.time.Months",
     "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId",
     "org.joda.time.YearMonthDay",
     "org.joda.time.format.DateTimeParser",
     "org.joda.time.DateTimeZone$LazyInit$1",
     "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
     "org.joda.time.YearMonth",
     "org.joda.time.chrono.GJChronology$CutoverField",
     "org.joda.time.LocalTime$Property",
     "org.joda.time.field.OffsetDateTimeField",
     "org.joda.time.DateTime$Property",
     "org.joda.time.convert.ReadablePeriodConverter",
     "org.joda.time.Years",
     "org.joda.time.convert.ReadableIntervalConverter",
     "org.joda.time.DateTimeField",
     "org.joda.time.field.FieldUtils",
     "org.joda.time.format.ISODateTimeFormat",
     "org.joda.time.Partial",
     "org.joda.time.field.SkipDateTimeField",
     "org.joda.time.base.AbstractPeriod",
     "org.joda.time.DateTimeUtils$SystemMillisProvider",
     "org.joda.time.chrono.GJDayOfWeekDateTimeField",
     "org.joda.time.IllegalInstantException",
     "org.joda.time.IllegalFieldValueException",
     "org.joda.time.format.DateTimeFormatterBuilder$Composite",
     "org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
     "org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix",
     "org.joda.time.format.DateTimeFormat$StyleFormatter",
     "org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField",
     "org.joda.time.ReadablePeriod",
     "org.joda.time.DateTimeZone$Stub",
     "org.joda.time.chrono.ZonedChronology$ZonedDateTimeField",
     "org.joda.time.chrono.GregorianChronology",
     "org.joda.time.convert.ConverterManager",
     "org.joda.time.chrono.GJChronology$LinkedDurationField",
     "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
     "org.joda.time.Minutes",
     "org.joda.time.chrono.BasicMonthOfYearDateTimeField",
     "org.joda.time.base.BasePartial",
     "org.joda.time.base.AbstractPartial",
     "org.joda.time.base.BaseDateTime",
     "org.joda.time.base.AbstractDuration",
     "org.joda.time.DateTimeUtils",
     "org.joda.time.base.AbstractInterval",
     "org.joda.time.Hours",
     "org.joda.time.LocalTime",
     "org.joda.time.base.BasePeriod",
     "org.joda.time.field.DecoratedDurationField",
     "org.joda.time.tz.DateTimeZoneBuilder$DSTZone",
     "org.joda.time.TimeOfDay$Property",
     "org.joda.time.TimeOfDay",
     "org.joda.time.format.ISOPeriodFormat",
     "org.joda.time.DateTimeZone$LazyInit",
     "org.joda.time.Partial$Property",
     "org.joda.time.chrono.CopticChronology",
     "org.joda.time.field.ImpreciseDateTimeField",
     "org.joda.time.field.PreciseDurationField",
     "org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1",
     "org.joda.time.DateTimeUtils$FixedMillisProvider",
     "org.joda.time.tz.DateTimeZoneBuilder$OfYear",
     "org.joda.time.ReadableDuration",
     "org.joda.time.chrono.BasicGJChronology",
     "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
     "org.joda.time.format.DateTimeFormatter",
     "org.joda.time.DurationField",
     "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName",
     "org.joda.time.chrono.IslamicChronology$LeapYearPatternType",
     "org.joda.time.DateTime",
     "org.joda.time.field.DelegatedDurationField",
     "org.joda.time.format.PeriodFormatterBuilder$SimpleAffix",
     "org.joda.time.format.DateTimeParserInternalParser",
     "org.joda.time.convert.PeriodConverter",
     "org.joda.time.ReadWritableDateTime",
     "org.joda.time.chrono.ZonedChronology$ZonedDurationField",
     "org.joda.time.convert.CalendarConverter",
     "org.joda.time.format.PeriodFormatterBuilder$Separator",
     "org.joda.time.Instant",
     "org.joda.time.chrono.LimitChronology$LimitDurationField",
     "org.joda.time.chrono.BasicDayOfYearDateTimeField",
     "org.joda.time.DurationFieldType$StandardDurationFieldType",
     "org.joda.time.chrono.BuddhistChronology",
     "org.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
     "org.joda.time.tz.DateTimeZoneBuilder$Recurrence",
     "org.joda.time.convert.ReadablePartialConverter",
     "org.joda.time.format.ISODateTimeFormat$Constants",
     "org.joda.time.DateTimeUtils$MillisProvider",
     "org.joda.time.convert.Converter",
     "org.joda.time.DateTimeUtils$OffsetMillisProvider",
     "org.joda.time.chrono.GJYearOfEraDateTimeField",
     "org.joda.time.convert.PartialConverter",
     "org.joda.time.Seconds",
     "org.joda.time.field.RemainderDateTimeField",
     "org.joda.time.JodaTimePermission",
     "org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField",
     "org.joda.time.DateTimeFieldType",
     "org.joda.time.format.DateTimeFormatterBuilder$Fraction",
     "org.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
     "org.joda.time.MutableDateTime$Property",
     "org.joda.time.ReadableInterval",
     "org.joda.time.chrono.LimitChronology$LimitDateTimeField",
     "org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone",
     "org.joda.time.field.LenientDateTimeField",
     "org.joda.time.base.AbstractDateTime",
     "org.joda.time.field.SkipUndoDateTimeField",
     "org.joda.time.convert.AbstractConverter",
     "org.joda.time.field.DelegatedDateTimeField",
     "org.joda.time.chrono.BasicChronology",
     "org.joda.time.chrono.BasicYearDateTimeField",
     "org.joda.time.chrono.ISOChronology$Stub",
     "org.joda.time.format.DateTimeFormatterBuilder",
     "org.joda.time.tz.ZoneInfoProvider$1",
     "org.joda.time.chrono.EthiopicChronology",
     "org.joda.time.tz.CachedDateTimeZone$Info",
     "org.joda.time.PeriodType",
     "org.joda.time.field.MillisDurationField",
     "org.joda.time.format.InternalPrinter",
     "org.joda.time.chrono.GJChronology",
     "org.joda.time.chrono.IslamicChronology",
     "org.joda.time.format.DateTimeFormatterBuilder$TextField",
     "org.joda.time.LocalDateTime$Property",
     "org.joda.time.chrono.BasicFixedMonthChronology",
     "org.joda.time.tz.ZoneInfoLogger$1",
     "org.joda.time.YearMonthDay$Property",
     "org.joda.time.field.UnsupportedDateTimeField",
     "org.joda.time.chrono.ISOYearOfEraDateTimeField",
     "org.joda.time.field.ScaledDurationField",
     "org.joda.time.tz.ZoneInfoCompiler$Zone",
     "org.joda.time.field.PreciseDurationDateTimeField",
     "org.joda.time.MonthDay",
     "org.joda.time.chrono.GJCacheKey",
     "org.joda.time.MutablePeriod",
     "org.joda.time.MutableDateTime",
     "org.joda.time.tz.CachedDateTimeZone",
     "org.joda.time.ReadableDateTime",
     "org.joda.time.format.PeriodFormatterBuilder$Literal",
     "org.joda.time.format.PeriodParser",
     "org.joda.time.format.PeriodFormatterBuilder$PluralAffix",
     "org.joda.time.DateMidnight",
     "org.joda.time.convert.DurationConverter",
     "org.joda.time.chrono.GJMonthOfYearDateTimeField",
     "org.joda.time.format.DateTimeParserBucket$SavedState",
     "org.joda.time.tz.DateTimeZoneBuilder$Rule",
     "org.joda.time.chrono.BasicWeekyearDateTimeField",
     "org.joda.time.Days",
     "org.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
     "org.joda.time.chrono.BasicSingleEraDateTimeField",
     "org.joda.time.format.DateTimeFormat",
     "org.joda.time.YearMonth$Property",
     "org.joda.time.tz.UTCProvider",
     "org.joda.time.chrono.LimitChronology",
     "org.joda.time.format.InternalPrinterDateTimePrinter",
     "org.joda.time.ReadableInstant",
     "org.joda.time.base.BaseSingleFieldPeriod",
     "org.joda.time.convert.NullConverter",
     "org.joda.time.tz.DefaultNameProvider",
     "org.joda.time.tz.ZoneInfoCompiler",
     "org.joda.time.tz.Provider",
     "org.joda.time.tz.ZoneInfoLogger",
     "org.joda.time.chrono.AssembledChronology$Fields",
     "org.joda.time.DurationFieldType",
     "org.joda.time.ReadWritableInstant",
     "org.joda.time.format.PeriodFormat$DynamicWordBased",
     "org.joda.time.MutableInterval",
     "org.joda.time.tz.NameProvider",
     "org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear",
     "org.joda.time.convert.StringConverter",
     "org.joda.time.convert.ReadableInstantConverter",
     "org.joda.time.convert.InstantConverter",
     "org.joda.time.chrono.AssembledChronology",
     "org.joda.time.chrono.StrictChronology",
     "org.joda.time.tz.ZoneInfoCompiler$RuleSet",
     "org.joda.time.chrono.GJEraDateTimeField",
     "org.joda.time.tz.ZoneInfoProvider",
     "org.joda.time.chrono.BaseChronology",
     "org.joda.time.chrono.JulianChronology",
     "org.joda.time.Period",
     "org.joda.time.format.PeriodFormat",
     "org.joda.time.Weeks",
     "org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey",
     "org.joda.time.format.PeriodFormatterBuilder$Composite",
     "org.joda.time.Chronology",
     "org.joda.time.field.AbstractReadableInstantFieldProperty",
     "org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix",
     "org.joda.time.format.PeriodFormatterBuilder$RegExAffix",
     "org.joda.time.LocalDate",
     "org.joda.time.UTCDateTimeZone",
     "org.joda.time.format.DateTimeParserBucket$SavedField",
     "org.joda.time.MonthDay$Property",
     "org.joda.time.chrono.BasicDayOfMonthDateTimeField",
     "org.joda.time.format.InternalParserDateTimeParser",
     "org.joda.time.format.InternalParser",
     "org.joda.time.ReadablePartial",
     "org.joda.time.chrono.GJChronology$ImpreciseCutoverField",
     "org.joda.time.field.BaseDurationField",
     "org.joda.time.DateTimeConstants"
    ],
    "usedTypes": [
     "org.joda.time.format.DateTimeFormat",
     "org.joda.time.LocalDate",
     "org.joda.time.format.DateTimeFormatter",
     "org.joda.time.DateTime",
     "org.joda.time.LocalDateTime"
    ],
    "usageRatio": 0.020242914979757085,
    "children": []
   },
   {
    "id": "org.threeten:threetenbp:jar:1.4.0:compile",
    "coordinates": "org.threeten:threetenbp:1.4.0",
    "groupId": "org.threeten",
    "artifactId": "threetenbp",
    "version": "1.4.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 513647,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.threeten.bp.zone.ZoneOffsetTransition",
     "org.threeten.bp.chrono.JapaneseEra",
     "org.threeten.bp.chrono.MinguoDate$1",
     "org.threeten.bp.zone.Ser",
     "org.threeten.bp.chrono.ChronoPeriod",
     "org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser",
     "org.threeten.bp.zone.ZoneRulesBuilder$TZWindow",
     "org.threeten.bp.chrono.HijrahDate$1",
     "org.threeten.bp.jdk8.DefaultInterfaceTemporal",
     "org.threeten.bp.OffsetDateTime",
     "org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore",
     "org.threeten.bp.Period",
     "org.threeten.bp.temporal.TemporalAmount",
     "org.threeten.bp.Month$1",
     "org.threeten.bp.ZoneId$1",
     "org.threeten.bp.Month$2",
     "org.threeten.bp.temporal.TemporalUnit",
     "org.threeten.bp.Duration",
     "org.threeten.bp.ZoneId$2",
     "org.threeten.bp.zone.TzdbZoneRulesCompiler",
     "org.threeten.bp.zone.ZoneOffsetTransitionRule",
     "org.threeten.bp.format.DateTimeFormatter",
     "org.threeten.bp.format.DateTimeBuilder",
     "org.threeten.bp.chrono.ChronoLocalDateTime$1",
     "org.threeten.bp.Clock$SystemClock",
     "org.threeten.bp.zone.ZoneRules",
     "org.threeten.bp.LocalDate",
     "org.threeten.bp.temporal.JulianFields",
     "org.threeten.bp.format.DateTimeFormatterBuilder$InstantPrinterParser",
     "org.threeten.bp.LocalTime$1",
     "org.threeten.bp.LocalTime$2",
     "org.threeten.bp.ZoneOffset",
     "org.threeten.bp.Instant",
     "org.threeten.bp.zone.TzdbZoneRulesCompiler$LeapSecondRule",
     "org.threeten.bp.format.DateTimeParseException",
     "org.threeten.bp.DayOfWeek$1",
     "org.threeten.bp.chrono.ChronoLocalDate",
     "org.threeten.bp.chrono.ThaiBuddhistChronology",
     "org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBRule",
     "org.threeten.bp.chrono.ChronoZonedDateTimeImpl$1",
     "org.threeten.bp.chrono.JapaneseChronology$1",
     "org.threeten.bp.LocalDate$2",
     "org.threeten.bp.YearMonth",
     "org.threeten.bp.chrono.ChronoZonedDateTimeImpl",
     "org.threeten.bp.Clock$TickClock",
     "org.threeten.bp.LocalDate$1",
     "org.threeten.bp.LocalDateTime",
     "org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser",
     "org.threeten.bp.Duration$1",
     "org.threeten.bp.jdk8.Jdk8Methods",
     "org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBMonthDayTime",
     "org.threeten.bp.temporal.UnsupportedTemporalTypeException",
     "org.threeten.bp.format.DateTimeFormatterBuilder$CharLiteralPrinterParser",
     "org.threeten.bp.temporal.TemporalQuery",
     "org.threeten.bp.chrono.ThaiBuddhistChronology$1",
     "org.threeten.bp.chrono.ChronoLocalDateTimeImpl$1",
     "org.threeten.bp.temporal.TemporalField",
     "org.threeten.bp.Instant$1",
     "org.threeten.bp.temporal.TemporalAdjusters$DayOfWeekInMonth",
     "org.threeten.bp.format.DateTimeFormatterBuilder$ZoneTextPrinterParser",
     "org.threeten.bp.Instant$2",
     "org.threeten.bp.temporal.IsoFields",
     "org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree",
     "org.threeten.bp.format.DateTimeFormatterBuilder$LocalizedOffsetPrinterParser",
     "org.threeten.bp.format.DateTimeFormatterBuilder$StringLiteralPrinterParser",
     "org.threeten.bp.format.DateTimePrintContext",
     "org.threeten.bp.format.DateTimeFormatterBuilder$2",
     "org.threeten.bp.format.DateTimeFormatterBuilder$3",
     "org.threeten.bp.format.DateTimeFormatterBuilder$1",
     "org.threeten.bp.chrono.ChronoPeriodImpl",
     "org.threeten.bp.format.DateTimeFormatterBuilder$4",
     "org.threeten.bp.format.DateTimeFormatterBuilder$DefaultingParser",
     "org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition",
     "org.threeten.bp.format.DateTimeFormatterBuilder$ChronoPrinterParser",
     "org.threeten.bp.chrono.Chronology",
     "org.threeten.bp.chrono.JapaneseDate",
     "org.threeten.bp.temporal.ChronoField",
     "org.threeten.bp.zone.TzdbZoneRulesCompiler$TZDBZone",
     "org.threeten.bp.YearMonth$1",
     "org.threeten.bp.chrono.ChronoDateImpl$1",
     "org.threeten.bp.temporal.TemporalQueries$2",
     "org.threeten.bp.zone.ZoneRulesInitializer$ServiceLoaderZoneRulesInitializer",
     "org.threeten.bp.temporal.TemporalQueries$1",
     "org.threeten.bp.temporal.TemporalQueries$4",
     "org.threeten.bp.temporal.TemporalQueries$3",
     "org.threeten.bp.YearMonth$2",
     "org.threeten.bp.temporal.TemporalQueries$6",
     "org.threeten.bp.temporal.TemporalQueries$5",
     "org.threeten.bp.temporal.TemporalQueries$7",
     "org.threeten.bp.temporal.IsoFields$Field$1",
     "org.threeten.bp.temporal.IsoFields$Field$2",
     "org.threeten.bp.temporal.IsoFields$Field$3",
     "org.threeten.bp.temporal.IsoFields$Field$4",
     "org.threeten.bp.chrono.Era",
     "org.threeten.bp.format.DateTimeFormatter$1",
     "org.threeten.bp.format.DateTimeFormatter$2",
     "org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser",
     "org.threeten.bp.format.DateTimeFormatStyleProvider",
     "org.threeten.bp.format.DateTimeTextProvider",
     "org.threeten.bp.format.SimpleDateTimeFormatStyleProvider",
     "org.threeten.bp.format.SignStyle",
     "org.threeten.bp.temporal.WeekFields",
     "org.threeten.bp.chrono.HijrahChronology",
     "org.threeten.bp.chrono.IsoEra",
     "org.threeten.bp.zone.ZoneRulesBuilder$TZRule",
     "org.threeten.bp.zone.TzdbZoneRulesProvider",
     "org.threeten.bp.format.DateTimeFormatterBuilder$PadPrinterParserDecorator",
     "org.threeten.bp.chrono.MinguoEra",
     "org.threeten.bp.chrono.ThaiBuddhistDate$1",
     "org.threeten.bp.chrono.ChronoZonedDateTime$1",
     "org.threeten.bp.chrono.ChronoZonedDateTime$2",
     "org.threeten.bp.chrono.ChronoLocalDate$1",
     "org.threeten.bp.format.DateTimePrintContext$1",
     "org.threeten.bp.format.DateTimeParseContext",
     "org.threeten.bp.MonthDay$2",
     "org.threeten.bp.MonthDay$1",
     "org.threeten.bp.temporal.TemporalAccessor",
     "org.threeten.bp.chrono.ChronoDateImpl",
     "org.threeten.bp.LocalTime",
     "org.threeten.bp.OffsetDateTime$3",
     "org.threeten.bp.OffsetDateTime$2",
     "org.threeten.bp.OffsetDateTime$1",
     "org.threeten.bp.Clock$OffsetClock",
     "org.threeten.bp.format.DateTimeFormatterBuilder$ReducedPrinterParser",
     "org.threeten.bp.chrono.ChronoLocalDateTime",
     "org.threeten.bp.temporal.TemporalAdjusters$RelativeDayOfWeek",
     "org.threeten.bp.chrono.JapaneseDate$1",
     "org.threeten.bp.temporal.IsoFields$1",
     "org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser",
     "org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser",
     "org.threeten.bp.format.DateTimeParseContext$1",
     "org.threeten.bp.Month",
     "org.threeten.bp.Clock",
     "org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser",
     "org.threeten.bp.chrono.ChronoZonedDateTime",
     "org.threeten.bp.format.DateTimeParseContext$Parsed",
     "org.threeten.bp.format.ResolverStyle",
     "org.threeten.bp.zone.ZoneRulesInitializer$DoNothingZoneRulesInitializer",
     "org.threeten.bp.chrono.ThaiBuddhistEra",
     "org.threeten.bp.format.DateTimeFormatterBuilder",
     "org.threeten.bp.format.DecimalStyle",
     "org.threeten.bp.temporal.TemporalAdjusters$Impl",
     "org.threeten.bp.temporal.JulianFields$Field",
     "org.threeten.bp.zone.ZoneRulesBuilder",
     "org.threeten.bp.zone.ZoneOffsetTransitionRule$1",
     "org.threeten.bp.ZoneId",
     "org.threeten.bp.jdk8.DefaultInterfaceTemporalAccessor",
     "org.threeten.bp.Clock$FixedClock",
     "org.threeten.bp.DayOfWeek",
     "org.threeten.bp.chrono.JapaneseChronology",
     "org.threeten.bp.OffsetTime",
     "org.threeten.bp.chrono.HijrahDate",
     "org.threeten.bp.zone.StandardZoneRules",
     "org.threeten.bp.temporal.IsoFields$Unit",
     "org.threeten.bp.chrono.ThaiBuddhistDate",
     "org.threeten.bp.ZoneOffset$1",
     "org.threeten.bp.zone.ZoneRulesProvider",
     "org.threeten.bp.OffsetTime$2",
     "org.threeten.bp.OffsetTime$1",
     "org.threeten.bp.DateTimeUtils",
     "org.threeten.bp.format.DateTimeFormatter$ClassicFormat",
     "org.threeten.bp.zone.ZoneRulesInitializer",
     "org.threeten.bp.DateTimeException",
     "org.threeten.bp.chrono.IsoChronology",
     "org.threeten.bp.format.DateTimeFormatterBuilder$DateTimePrinterParser",
     "org.threeten.bp.chrono.MinguoChronology$1",
     "org.threeten.bp.temporal.Temporal",
     "org.threeten.bp.temporal.IsoFields$Field",
     "org.threeten.bp.zone.ZoneRules$Fixed",
     "org.threeten.bp.format.DateTimeFormatterBuilder$LocalizedPrinterParser",
     "org.threeten.bp.ZonedDateTime",
     "org.threeten.bp.format.DateTimeTextProvider$ProviderSingleton",
     "org.threeten.bp.Year$1",
     "org.threeten.bp.Year$2",
     "org.threeten.bp.jdk8.DefaultInterfaceEra",
     "org.threeten.bp.chrono.HijrahEra",
     "org.threeten.bp.temporal.TemporalAdjusters",
     "org.threeten.bp.chrono.MinguoDate",
     "org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser",
     "org.threeten.bp.temporal.ChronoUnit",
     "org.threeten.bp.format.DateTimeFormatterBuilder$ZoneTextPrinterParser$1",
     "org.threeten.bp.chrono.Ser",
     "org.threeten.bp.MonthDay",
     "org.threeten.bp.temporal.TemporalAdjusters$1",
     "org.threeten.bp.chrono.MinguoChronology",
     "org.threeten.bp.temporal.TemporalQueries",
     "org.threeten.bp.format.FormatStyle",
     "org.threeten.bp.zone.TzdbZoneRulesProvider$Version",
     "org.threeten.bp.Ser",
     "org.threeten.bp.zone.ZoneRulesException",
     "org.threeten.bp.format.DateTimeFormatterBuilder$WeekFieldsPrinterParser",
     "org.threeten.bp.ZonedDateTime$1",
     "org.threeten.bp.chrono.Chronology$1",
     "org.threeten.bp.chrono.Chronology$2",
     "org.threeten.bp.ZonedDateTime$2",
     "org.threeten.bp.LocalDateTime$1",
     "org.threeten.bp.LocalDateTime$2",
     "org.threeten.bp.ZoneRegion",
     "org.threeten.bp.temporal.WeekFields$ComputedDayOfField",
     "org.threeten.bp.format.TextStyle",
     "org.threeten.bp.chrono.ChronoLocalDateTimeImpl",
     "org.threeten.bp.format.SimpleDateTimeTextProvider$1",
     "org.threeten.bp.Year",
     "org.threeten.bp.temporal.TemporalAdjuster",
     "org.threeten.bp.temporal.ValueRange",
     "org.threeten.bp.chrono.AbstractChronology",
     "org.threeten.bp.format.SimpleDateTimeTextProvider"
    ],
    "usedTypes": [
     "org.threeten.bp.DateTimeUtils",
     "org.threeten.bp.LocalTime",
     "org.threeten.bp.ZoneOffset",
     "org.threeten.bp.Instant",
     "org.threeten.bp.LocalDateTime",
     "org.threeten.bp.ZoneId",
     "org.threeten.bp.LocalDate",
     "org.threeten.bp.ZonedDateTime"
    ],
    "usageRatio": 0.03864734299516908,
    "children": []
   },
   {
    "id": "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile",
    "coordinates": "io.projectreactor:reactor-core:3.3.0.RC1",
    "groupId": "io.projectreactor",
    "artifactId": "reactor-core",
    "version": "3.3.0.RC1",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 1507278,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "reactor.core.publisher.FluxOnAssembly",
     "reactor.core.publisher.FluxMaterialize",
     "reactor.core.publisher.FluxRange",
     "reactor.core.publisher.FluxConcatMap$FluxConcatMapSupport",
     "reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner",
     "reactor.core.publisher.FluxErrorSupplied",
     "reactor.core.publisher.MonoCount",
     "reactor.core.publisher.FluxRepeat",
     "reactor.core.publisher.FluxSampleFirst",
     "reactor.core.publisher.FluxUsingWhen$CommitInner",
     "reactor.core.publisher.InnerProducer",
     "reactor.core.publisher.FluxScanSeed$ScanSeedSubscriber",
     "reactor.core.scheduler.ReactorThreadFactory$NonBlockingThread",
     "reactor.core.publisher.MonoTimeout",
     "reactor.core.publisher.MonoMetrics$MetricsSubscriber",
     "reactor.core.publisher.FluxInterval",
     "reactor.core.publisher.FluxDelaySequence$DelaySubscriber",
     "reactor.core.publisher.MonoCurrentContext",
     "reactor.core.publisher.DrainUtils",
     "reactor.core.publisher.MonoZip$ZipCoordinator",
     "reactor.core.publisher.FluxFilterFuseable",
     "reactor.core.publisher.ParallelCollect",
     "reactor.core.publisher.MonoFilter",
     "reactor.core.publisher.FluxCallable",
     "reactor.core.publisher.FlatMapTracker",
     "reactor.core.publisher.SerializedSubscriber$LinkedArrayNode",
     "reactor.core.scheduler.EmptyCompositeDisposable",
     "reactor.core.publisher.FluxDelaySubscription$DelaySubscriptionMainSubscriber",
     "reactor.core.publisher.ParallelMergeReduce",
     "reactor.core.publisher.FluxSink$OverflowStrategy",
     "reactor.core.publisher.MonoDetach",
     "reactor.core.publisher.FluxBufferWhen",
     "reactor.core.publisher.FluxBufferTimeout",
     "reactor.core.publisher.FluxWindowBoundary",
     "reactor.core.publisher.MonoSubscriberContext",
     "reactor.core.publisher.FluxPublish",
     "reactor.core.publisher.ParallelReduceSeed$ParallelReduceSeedSubscriber",
     "reactor.core.publisher.MonoLift",
     "reactor.core.publisher.TopicProcessor$TopicInner",
     "reactor.core.Disposable",
     "reactor.core.publisher.FluxSource",
     "reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber",
     "reactor.core.publisher.WorkQueueProcessor$Builder",
     "reactor.core.publisher.WorkQueueProcessor",
     "reactor.core.publisher.FluxZipIterable",
     "reactor.core.publisher.FluxDoOnEach$DoOnEachFuseableConditionalSubscriber",
     "reactor.util.concurrent.MpscLinkedQueue",
     "reactor.core.publisher.FluxBufferPredicate$Mode",
     "reactor.core.Exceptions$ReactiveException",
     "reactor.core.publisher.FluxSample$SampleOther",
     "reactor.core.publisher.FluxHandleFuseable$HandleFuseableConditionalSubscriber",
     "reactor.core.publisher.FluxIndex",
     "reactor.core.publisher.FluxTakeWhile",
     "reactor.core.publisher.FluxIterable$IterableSubscription",
     "reactor.core.scheduler.ExecutorServiceWorker",
     "reactor.core.publisher.MonoLogFuseable",
     "reactor.core.publisher.FluxUsing$UsingConditionalSubscriber",
     "reactor.core.publisher.FluxTimeout",
     "reactor.core.publisher.BlockingIterable",
     "reactor.core.publisher.MonoDelay",
     "reactor.core.scheduler.Schedulers$Factory",
     "reactor.core.publisher.FluxPeek",
     "reactor.core.publisher.FluxCreate$LatestAsyncSink",
     "reactor.core.publisher.FluxPublish$PubSubInner",
     "reactor.core.publisher.ParallelSource$ParallelSourceMain$ParallelSourceInner",
     "reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber",
     "reactor.util.Logger",
     "reactor.core.publisher.MonoUsingWhen$ResourceSubscriber",
     "reactor.core.publisher.FluxZip$PairwiseZipper",
     "reactor.core.Disposables",
     "reactor.core.publisher.FluxZip$ZipInner",
     "reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber",
     "reactor.core.publisher.FluxIndexFuseable",
     "reactor.core.publisher.FluxWindowWhen$WindowWhenCloseSubscriber",
     "reactor.core.publisher.FluxPublishOn",
     "reactor.core.publisher.MonoCallableOnAssembly",
     "reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber",
     "reactor.util.Metrics",
     "reactor.core.publisher.FluxTakeUntil$TakeUntilPredicateSubscriber",
     "reactor.core.publisher.FluxCombineLatest",
     "reactor.core.scheduler.Scheduler$Worker",
     "reactor.util.Loggers$1",
     "reactor.core.publisher.FluxExtensionsKt$doOnError$1",
     "reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber",
     "reactor.core.publisher.MonoLog",
     "reactor.core.publisher.FluxRepeatWhen",
     "reactor.core.publisher.FluxMergeSequential",
     "reactor.core.publisher.ParallelGroup",
     "reactor.core.publisher.EventLoopProcessor$Slot",
     "reactor.core.publisher.FluxRepeatWhen$RepeatWhenMainSubscriber",
     "reactor.core.publisher.MonoRetry",
     "reactor.core.publisher.ParallelDoOnEach$DoOnEachSignalPeek",
     "reactor.core.Exceptions$StaticRejectedExecutionException",
     "reactor.core.scheduler.SchedulerMetricDecorator$TimedScheduledExecutorService",
     "reactor.core.publisher.MonoProcessor",
     "reactor.core.publisher.FluxMergeOrdered",
     "reactor.core.publisher.FluxRepeatWhen$RepeatWhenOtherSubscriber",
     "reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber",
     "reactor.util.concurrent.WaitStrategy$Yielding",
     "reactor.core.publisher.FluxMaterialize$MaterializeSubscriber",
     "reactor.core.publisher.FluxWindowTimeout$WindowTimeoutSubscriber",
     "reactor.util.concurrent.WaitStrategy$Parking",
     "reactor.core.publisher.TopicProcessor$Builder",
     "reactor.core.publisher.ParallelFilter",
     "reactor.core.publisher.FluxReplay$SizeAndTimeBoundReplayBuffer$TimedNode",
     "reactor.core.publisher.FluxFilter$FilterConditionalSubscriber",
     "reactor.core.publisher.FluxTake$TakeSubscriber",
     "reactor.core.publisher.FluxBufferPredicate$ChangedPredicate",
     "reactor.core.publisher.package-info",
     "reactor.core.publisher.NotFunRingBuffer",
     "reactor.core.publisher.MonoCallable",
     "reactor.core.publisher.MonoNever",
     "reactor.core.publisher.FluxUsingWhen$ResourceSubscriber",
     "reactor.util.Loggers",
     "reactor.core.publisher.Traces$StackWalkerCallSiteSupplierFactory",
     "reactor.core.publisher.FluxUsingWhen$UsingWhenConditionalSubscriber",
     "reactor.core.Exceptions$CancelException",
     "reactor.core.publisher.SourceProducer",
     "reactor.core.publisher.FluxDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber",
     "reactor.core.publisher.MonoSupplier",
     "reactor.core.publisher.FluxDistinctFuseable",
     "reactor.core.publisher.MonoMaterialize",
     "reactor.core.publisher.FluxMap$MapConditionalSubscriber",
     "reactor.core.publisher.FluxUsing$UsingSubscriber",
     "reactor.core.publisher.MonoExtensionsKt$switchIfEmpty$1",
     "reactor.core.publisher.MonoHasElements$HasElementsSubscriber",
     "reactor.core.publisher.FluxDoOnEachFuseable",
     "reactor.core.scheduler.package-info",
     "reactor.core.publisher.FluxHandle$HandleConditionalSubscriber",
     "reactor.core.Exceptions$CompositeException",
     "reactor.core.publisher.Operators$DeferredSubscription",
     "reactor.core.publisher.MonoError",
     "reactor.core.publisher.FluxGroupBy$GroupByMain",
     "reactor.core.publisher.FluxTimeout$CancelledIndexedCancellable",
     "reactor.core.publisher.EventLoopProcessor$RequestTask",
     "reactor.core.publisher.MonoSink",
     "reactor.core.publisher.EventLoopProcessor$EventLoopContext",
     "reactor.util.annotation.Nullable",
     "reactor.core.publisher.ConnectableFlux",
     "reactor.core.publisher.FluxBufferBoundary$BufferBoundaryMain",
     "reactor.core.publisher.FluxSubscribeOnValue",
     "reactor.core.publisher.MonoPeekFuseable",
     "reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber",
     "reactor.util.concurrent.Queues$ZeroQueue",
     "reactor.core.publisher.FluxWindowWhen$WindowWhenMainSubscriber",
     "reactor.core.publisher.MonoSingleMono",
     "reactor.core.publisher.SerializedSubscriber",
     "reactor.util.concurrent.SpscArrayQueueProducer",
     "reactor.core.publisher.MonoFilterWhen$MonoFilterWhenMain",
     "reactor.core.publisher.MonoToCompletableFuture",
     "reactor.core.publisher.FluxCreate$SerializedSink",
     "reactor.core.publisher.MonoFlatMapMany",
     "reactor.core.publisher.TopicProcessor$TopicInner$1",
     "reactor.core.publisher.MonoCompletionStage",
     "reactor.core.publisher.FluxBufferWhen$BufferWhenMainSubscriber",
     "reactor.core.publisher.ParallelThen$ThenInner",
     "reactor.core.publisher.MonoRetryPredicate",
     "reactor.core.publisher.MonoFirst",
     "reactor.core.publisher.FluxRetryWhen",
     "reactor.core.publisher.FluxHide$HideSubscriber",
     "reactor.core.publisher.AtomicSequence",
     "reactor.core.publisher.MonoTakeUntilOther",
     "reactor.core.publisher.FluxRepeat$RepeatSubscriber",
     "reactor.core.publisher.FluxPublishMulticast$PublishMulticastInner",
     "reactor.core.publisher.FluxFirstEmitting",
     "reactor.core.scheduler.ExecutorScheduler$ExecutorSchedulerTrampolineWorker",
     "reactor.core.scheduler.ExecutorScheduler$ExecutorTrackedRunnable",
     "reactor.core.publisher.SignalType",
     "reactor.util.concurrent.WaitStrategy$AlertException",
     "reactor.core.publisher.FluxNameFuseable",
     "reactor.core.publisher.FluxGenerate",
     "reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber",
     "reactor.core.publisher.MonoZip$ZipInner",
     "reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription",
     "reactor.core.publisher.ParallelLiftFuseable",
     "reactor.core.publisher.FluxWithLatestFrom$WithLatestFromOtherSubscriber",
     "reactor.core.publisher.Operators$ScalarSubscription",
     "reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner",
     "reactor.core.scheduler.Schedulers",
     "reactor.core.publisher.ParallelMergeReduce$SlotPair",
     "reactor.core.publisher.FluxRange$RangeSubscriptionConditional",
     "reactor.core.publisher.ParallelMap",
     "reactor.core.publisher.FluxOnBackpressureBuffer",
     "reactor.core.Disposables$NeverDisposable",
     "reactor.util.concurrent.WaitStrategy$Blocking",
     "reactor.core.publisher.FluxSubscribeOnValue$ScheduledEmpty",
     "reactor.core.publisher.FluxDoFirstFuseable",
     "reactor.core.publisher.LambdaSubscriber",
     "reactor.core.publisher.FluxDistinctUntilChanged$DistinctUntilChangedSubscriber",
     "reactor.core.publisher.FluxOnBackpressureLatest$LatestSubscriber",
     "reactor.core.publisher.MonoDelay$MonoDelayRunnable",
     "reactor.core.publisher.FluxIndexFuseable$IndexFuseableConditionalSubscriber",
     "reactor.core.publisher.ParallelMergeReduce$MergeReduceInner",
     "reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber",
     "reactor.core.publisher.FluxCreate$IgnoreSink",
     "reactor.core.publisher.FluxBuffer$BufferSkipSubscriber",
     "reactor.core.publisher.RingBuffer$Sequence",
     "reactor.core.publisher.FluxConcatMap$ConcatMapImmediate",
     "reactor.core.scheduler.PeriodicSchedulerTask",
     "reactor.core.publisher.FluxWindow$WindowOverlapSubscriber",
     "reactor.core.publisher.FluxSkipLast$SkipLastSubscriber",
     "reactor.core.publisher.Operators$CancelledSubscription",
     "reactor.core.publisher.ParallelThen",
     "reactor.core.publisher.FluxSkipLast",
     "reactor.core.publisher.FluxRefCount$RefCountMonitor",
     "reactor.core.publisher.MonoRepeat",
     "reactor.core.publisher.MonoDelayUntil",
     "reactor.core.publisher.FluxWindowTimeout$WindowTimeoutSubscriber$ConsumerIndexHolder",
     "reactor.core.publisher.ParallelMergeSort$MergeSortMain",
     "reactor.core.publisher.FluxBuffer$BufferExactSubscriber",
     "reactor.core.publisher.MonoCount$CountSubscriber",
     "reactor.core.scheduler.ReactorBlockHoundIntegration",
     "reactor.core.publisher.FluxCreate$ErrorAsyncSink",
     "reactor.core.publisher.ParallelArraySource",
     "reactor.core.publisher.MonoRepeatWhen",
     "reactor.core.scheduler.Schedulers$CachedScheduler",
     "reactor.core.publisher.InternalConnectableFluxOperator",
     "reactor.core.publisher.SignalPeek",
     "reactor.core.publisher.OnNextFailureStrategy$ResumeStrategy",
     "reactor.core.publisher.TopicProcessor",
     "reactor.core.Scannable",
     "reactor.core.publisher.MonoDoFirst",
     "reactor.core.publisher.FluxBufferWhen$BufferWhenCloseSubscriber",
     "reactor.core.publisher.MonoReduce",
     "reactor.core.publisher.FluxSubscribeOnCallable",
     "reactor.core.publisher.FluxOnAssembly$AssemblyLightSnapshot",
     "reactor.core.publisher.MonoSequenceEqual",
     "reactor.core.publisher.FluxExpand$ExpandDepthSubscriber",
     "reactor.core.publisher.ParallelMergeReduce$MergeReduceMain",
     "reactor.core.publisher.FluxTake$TakeConditionalSubscriber",
     "reactor.core.publisher.FluxCreate$BaseSink",
     "reactor.core.publisher.FluxOnBackpressureBuffer$BackpressureBufferSubscriber",
     "reactor.core.publisher.FluxContextStart",
     "reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber",
     "reactor.core.publisher.FluxHandle$HandleSubscriber",
     "reactor.core.Exceptions$OverflowException",
     "reactor.core.Disposables$SwapDisposable",
     "reactor.core.publisher.FluxFlattenIterable",
     "reactor.core.publisher.FluxPublish$PublishInner",
     "reactor.core.Exceptions$ReactorRejectedExecutionException",
     "reactor.util.Loggers$JdkLogger",
     "reactor.core.publisher.CoreOperator",
     "reactor.core.publisher.SynchronousSink",
     "reactor.core.publisher.Flux",
     "reactor.core.publisher.FluxExpand",
     "reactor.core.publisher.FluxRefCountGrace",
     "reactor.core.publisher.MonoReduce$ReduceSubscriber",
     "reactor.core.publisher.ParallelMergeSort",
     "reactor.core.publisher.MonoUsing$MonoUsingSubscriber",
     "reactor.core.publisher.MonoPublishMulticast$MonoPublishMulticaster",
     "reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber",
     "reactor.core.publisher.Operators$LiftFunction",
     "reactor.core.publisher.MonoExtensionsKt$sam$java_util_concurrent_Callable$0",
     "reactor.core.publisher.FluxGroupBy",
     "reactor.core.publisher.Value",
     "reactor.core.publisher.FluxJust$WeakScalarSubscription",
     "reactor.core.publisher.Traces$ExceptionCallSiteSupplierFactory$TracingException",
     "reactor.core.publisher.FluxInterval$IntervalRunnable",
     "reactor.core.publisher.FluxRetry$RetrySubscriber",
     "reactor.core.publisher.BlockingSingleSubscriber",
     "reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber",
     "reactor.core.publisher.FluxWindowWhen$WindowOperation",
     "reactor.core.publisher.FluxExtensionsKt$switchIfEmpty$1",
     "reactor.core.publisher.FluxDoFinally$DoFinallyFuseableSubscriber",
     "reactor.core.publisher.GroupedLift",
     "reactor.core.publisher.FluxFilterWhen",
     "reactor.core.publisher.LhsPadding",
     "reactor.core.publisher.FluxPublishOn$PublishOnSubscriber",
     "reactor.core.publisher.MonoCollect$CollectSubscriber",
     "reactor.core.publisher.MonoAll",
     "reactor.core.publisher.ConnectableLift",
     "reactor.core.scheduler.WorkerTask",
     "reactor.core.publisher.FluxDelaySequence$DelaySubscriber$OnComplete",
     "reactor.core.publisher.MonoIgnoreThen",
     "reactor.core.publisher.FluxExtensionsKt$onErrorResume$1",
     "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner",
     "reactor.core.publisher.FluxWithLatestFrom$WithLatestFromSubscriber",
     "reactor.core.publisher.FluxWindowWhen",
     "reactor.core.scheduler.ElasticScheduler$CachedService",
     "reactor.util.concurrent.Queues",
     "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain",
     "reactor.core.publisher.FluxReplay$ReplayBuffer",
     "reactor.core.publisher.FluxWindowBoundary$WindowBoundaryOther",
     "reactor.core.publisher.FluxSkipUntilOther$SkipUntilOtherSubscriber",
     "reactor.core.scheduler.DelegateServiceScheduler",
     "reactor.core.publisher.FluxZipIterable$ZipSubscriber",
     "reactor.core.publisher.MonoFlatMap",
     "reactor.core.Fuseable$ConditionalSubscriber",
     "reactor.core.publisher.FluxZip",
     "reactor.core.publisher.ParallelRunOn",
     "reactor.core.publisher.FluxSkipWhile",
     "reactor.core.publisher.FluxBuffer$BufferOverlappingSubscriber",
     "reactor.core.publisher.FluxConcatMap$ConcatMapDelayed",
     "reactor.core.publisher.MonoWhenFunctionsKt$zip$1",
     "reactor.core.publisher.FluxCancelOn",
     "reactor.core.publisher.QueueDrainSubscriberWip",
     "reactor.core.publisher.FluxJoin$JoinSubscription",
     "reactor.core.publisher.FluxCreate$SerializeOnRequestSink",
     "reactor.core.publisher.ParallelSource$ParallelSourceMain",
     "reactor.core.publisher.FluxBufferBoundary$BufferBoundaryOther",
     "reactor.core.publisher.MonoDelayUntil$DelayUntilTrigger",
     "reactor.core.publisher.ParallelLift",
     "reactor.core.publisher.MonoPublishMulticast",
     "reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode",
     "reactor.core.publisher.Operators$CorePublisherAdapter",
     "reactor.core.publisher.FluxDoFinally",
     "reactor.core.publisher.FluxDoFinally$DoFinallySubscriber",
     "reactor.core.publisher.FluxBuffer",
     "reactor.core.publisher.MultiProducerRingBuffer",
     "reactor.core.publisher.MonoReduceSeed",
     "reactor.core.publisher.FluxIterable",
     "reactor.core.publisher.FluxCancelOn$CancelSubscriber",
     "reactor.core.publisher.FluxArray$ArraySubscription",
     "reactor.core.publisher.WorkQueueProcessor$WorkQueueInner$1",
     "reactor.core.publisher.FluxIndexFuseable$IndexFuseableSubscriber",
     "reactor.core.publisher.FluxFirstEmitting$RaceCoordinator",
     "reactor.core.publisher.FluxCreate$SinkDisposable",
     "reactor.core.publisher.MonoRunnable$MonoRunnableEagerSubscription",
     "reactor.core.publisher.FluxConcatIterable",
     "reactor.core.publisher.Traces$ExceptionCallSiteSupplierFactory",
     "reactor.core.publisher.ParallelDoOnEach",
     "reactor.core.publisher.FluxDoOnEach$DoOnEachFuseableSubscriber",
     "reactor.core.publisher.MonoDelayElement",
     "reactor.core.publisher.FluxErrorOnRequest",
     "reactor.core.publisher.MonoDoFirstFuseable",
     "reactor.core.publisher.FluxSourceFuseable",
     "reactor.core.publisher.FluxDoFinally$DoFinallyConditionalSubscriber",
     "reactor.util.Loggers$JdkLoggerFactory",
     "reactor.core.publisher.FluxLift",
     "reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber",
     "reactor.core.publisher.FluxCreate$CreateMode",
     "reactor.core.publisher.ParallelFluxHide",
     "reactor.core.publisher.FluxDelaySubscription",
     "reactor.core.publisher.FluxCreate$1",
     "reactor.core.publisher.FluxMetricsFuseable$MetricsFuseableSubscriber",
     "reactor.core.publisher.Mono",
     "reactor.core.publisher.MonoAny",
     "reactor.util.concurrent.WaitStrategy$Sleeping",
     "reactor.core.publisher.FluxTakeUntil",
     "reactor.core.publisher.FluxGroupJoin",
     "reactor.core.publisher.FluxExtensionsKt$toFlux$1",
     "reactor.core.publisher.NotFunRingBufferFields",
     "reactor.core.publisher.FluxDistinctUntilChanged",
     "reactor.core.publisher.FluxConcatMap",
     "reactor.core.publisher.FluxWindow$WindowExactSubscriber",
     "reactor.core.publisher.FluxScanSeed$ScanSeedCoordinator",
     "reactor.core.publisher.FluxOnAssembly$MethodReturnSnapshot",
     "reactor.core.publisher.MonoDematerialize",
     "reactor.core.publisher.FluxWindowWhen$WindowWhenOpenSubscriber",
     "reactor.core.publisher.FluxMetrics$MetricsSubscriber",
     "reactor.core.publisher.MonoDelayUntil$DelayUntilCoordinator",
     "reactor.core.publisher.FluxElapsed",
     "reactor.adapter.JdkFlowAdapter",
     "reactor.core.publisher.FluxScan",
     "reactor.core.publisher.BaseSubscriber",
     "reactor.core.publisher.ConnectableFluxHide",
     "reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber",
     "reactor.core.publisher.ParallelGroup$ParallelInnerGroup",
     "reactor.core.publisher.FluxGroupJoin$LeftRightSubscriber",
     "reactor.core.publisher.FluxUsingWhen$CancelInner",
     "reactor.core.publisher.FluxRetryPredicate",
     "reactor.adapter.package-info",
     "reactor.util.concurrent.SpscLinkedArrayQueue",
     "reactor.core.publisher.MonoCacheTime",
     "reactor.core.publisher.MonoSubscribeOnValue",
     "reactor.core.publisher.FluxSink",
     "reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain",
     "reactor.core.publisher.ParallelSource",
     "reactor.core.publisher.MonoHasElement$HasElementSubscriber",
     "reactor.core.publisher.SignalType$1",
     "reactor.core.publisher.MonoMetricsFuseable",
     "reactor.core.publisher.ConnectableFluxOnAssembly",
     "reactor.core.publisher.MonoRunnable",
     "reactor.core.publisher.FluxTimeout$TimeoutOtherSubscriber",
     "reactor.core.publisher.UnsafeSequence",
     "reactor.core.publisher.FluxLiftFuseable",
     "reactor.core.publisher.FluxStream",
     "reactor.core.publisher.FluxDistinct$DistinctSubscriber",
     "reactor.core.publisher.MonoPeek",
     "reactor.core.publisher.MonoDelaySubscription",
     "reactor.core.publisher.FluxErrorOnRequest$ErrorSubscription",
     "reactor.core.publisher.Operators$DrainSubscriber",
     "reactor.core.publisher.MonoCollect",
     "reactor.core.publisher.MonoWhen$WhenInner",
     "reactor.core.publisher.OnNextFailureStrategy$1",
     "reactor.core.publisher.MonoHandle",
     "reactor.core.publisher.FluxOnBackpressureBufferStrategy$BackpressureBufferDropOldestSubscriber",
     "reactor.core.publisher.FluxBufferBoundary",
     "reactor.core.publisher.FluxWindowBoundary$WindowBoundaryMain",
     "reactor.core.publisher.MonoMetrics",
     "reactor.core.publisher.FluxSampleTimeout$SampleTimeoutMain",
     "reactor.core.publisher.FluxMergeSequential$MergeSequentialMain",
     "reactor.core.publisher.DelegateProcessor",
     "reactor.core.publisher.FluxIterable$IterableSubscriptionConditional",
     "reactor.core.publisher.FluxIndex$IndexSubscriber",
     "reactor.core.publisher.MonoHandleFuseable",
     "reactor.core.publisher.FluxPublishMulticast$PublishMulticasterParent",
     "reactor.core.scheduler.ElasticScheduler$ElasticWorker",
     "reactor.core.publisher.FluxConcatMap$WeakScalarSubscription",
     "reactor.core.publisher.FluxUsingWhen$UsingWhenParent",
     "reactor.core.publisher.MonoWhenFunctionsKt",
     "reactor.core.publisher.RingBuffer",
     "reactor.core.publisher.ParallelFluxName",
     "reactor.core.publisher.FluxTakeLast$TakeLastManySubscriber",
     "reactor.core.publisher.MonoSourceFuseable",
     "reactor.core.publisher.AssemblyOp",
     "reactor.core.publisher.FluxMergeOrdered$MergeOrderedInnerSubscriber",
     "reactor.core.publisher.FluxRefCountGrace$RefConnection",
     "reactor.core.publisher.MonoCacheTime$CacheMonoSubscriber",
     "reactor.core.publisher.MonoElementAt$ElementAtSubscriber",
     "reactor.core.publisher.MonoDoOnEach",
     "reactor.adapter.JdkFlowAdapter$SubscriberToRS",
     "reactor.core.publisher.FluxIndex$NullSafeIndexMapper",
     "reactor.core.publisher.MonoPublishOn",
     "reactor.adapter.JdkFlowAdapter$1",
     "reactor.util.concurrent.SpscArrayQueue",
     "reactor.core.publisher.MonoZip",
     "reactor.core.CorePublisher",
     "reactor.core.Scannable$Attr",
     "reactor.core.publisher.MonoReduceSeed$ReduceSeedSubscriber",
     "reactor.util.concurrent.WaitStrategy$LiteBlocking",
     "reactor.core.publisher.ParallelConcatMap",
     "reactor.core.publisher.RingBuffer$Reader",
     "reactor.core.publisher.FluxCallableOnAssembly",
     "reactor.core.publisher.MonoSingle$SingleSubscriber",
     "reactor.core.publisher.FluxMapSignal",
     "reactor.core.publisher.FluxFromMonoOperator",
     "reactor.core.publisher.FluxSwitchOnFirst$SwitchOnFirstConditionalInnerSubscriber",
     "reactor.core.publisher.FluxDistinct$DistinctConditionalSubscriber",
     "reactor.core.publisher.MonoNext",
     "reactor.core.publisher.EmitterProcessor",
     "reactor.core.publisher.FluxRepeatPredicate$RepeatPredicateSubscriber",
     "reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber",
     "reactor.core.publisher.ParallelMergeSequential",
     "reactor.core.publisher.FluxExtensionsKt",
     "reactor.core.publisher.MonoExpand",
     "reactor.core.publisher.FluxReplay$SizeBoundReplayBuffer",
     "reactor.core.publisher.FluxDematerialize",
     "reactor.util.concurrent.WaitStrategy$PhasedOff",
     "reactor.core.publisher.FluxTakeUntilOther",
     "reactor.core.publisher.FluxOnBackpressureBufferStrategy",
     "reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber",
     "reactor.core.publisher.OnNextFailureStrategy",
     "reactor.core.publisher.ParallelMergeSequential$MergeSequentialMain",
     "reactor.core.scheduler.ExecutorScheduler$ExecutorPlainRunnable",
     "reactor.core.publisher.FluxBufferPredicate",
     "reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber",
     "reactor.core.publisher.FluxReplay$UnboundedReplayBuffer",
     "reactor.core.publisher.Hooks",
     "reactor.core.publisher.FluxDistinct$DistinctFuseableSubscriber",
     "reactor.core.publisher.FluxMap",
     "reactor.core.publisher.LambdaMonoSubscriber",
     "reactor.core.Disposables$AlwaysDisposable",
     "reactor.core.publisher.FluxHide",
     "reactor.core.publisher.MonoSubscribeOnCallable",
     "reactor.core.publisher.FluxDoFinallyFuseable",
     "reactor.core.publisher.ParallelReduceSeed",
     "reactor.core.publisher.MonoRepeatPredicate",
     "reactor.core.publisher.ParallelMergeOrdered",
     "reactor.core.publisher.MonoSwitchIfEmpty",
     "reactor.util.Loggers$LoggerFactory",
     "reactor.core.publisher.MonoTakeLastOne",
     "reactor.core.publisher.FluxHide$SuppressFuseableSubscriber",
     "reactor.core.publisher.FluxSkip",
     "reactor.core.publisher.FluxOperator",
     "reactor.core.publisher.SingleProducerSequencer",
     "reactor.core.publisher.FluxZip$ZipCoordinator",
     "reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber",
     "reactor.core.publisher.FluxConcatMap$ConcatMapInner",
     "reactor.core.publisher.FluxLimitRequest",
     "reactor.core.publisher.FluxOnBackpressureLatest",
     "reactor.core.publisher.MonoName",
     "reactor.core.publisher.MonoHasElement",
     "reactor.core.publisher.FluxSwitchOnFirst$AbstractSwitchOnFirstInner",
     "reactor.core.publisher.RhsPadding",
     "reactor.core.scheduler.SingleScheduler",
     "reactor.core.publisher.RingBufferFields",
     "reactor.core.publisher.FluxCombineLatest$CombineLatestCoordinator",
     "reactor.core.publisher.FluxSkipUntil",
     "reactor.core.publisher.FluxProcessor",
     "reactor.core.publisher.MonoEmpty",
     "reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber",
     "reactor.core.publisher.FluxMerge",
     "reactor.core.publisher.MonoWhenFunctionsKt$sam$java_util_function_Function$0",
     "reactor.core.publisher.ParallelMergeSort$MergeSortInner",
     "reactor.util.Loggers$ConsoleLoggerFactory",
     "reactor.core.publisher.FluxGroupJoin$GroupJoinSubscription",
     "reactor.util.context.package-info",
     "reactor.core.scheduler.ReactorBlockHoundIntegration$Wrapper",
     "reactor.core.publisher.InternalMonoOperator",
     "reactor.core.publisher.FluxPublishMulticast$CancelFuseableMulticaster",
     "reactor.core.Exceptions$StaticThrowable",
     "reactor.core.publisher.MonoExtensionsKt$toMono$1",
     "reactor.core.publisher.FluxUsingWhen$RollbackInner",
     "reactor.core.scheduler.PeriodicWorkerTask",
     "reactor.core.publisher.FluxDetach$DetachSubscriber",
     "reactor.core.publisher.InnerOperator",
     "reactor.core.publisher.MonoExtensionsKt$doOnError$1",
     "reactor.adapter.JdkFlowAdapter$FlowSubscriber",
     "reactor.core.publisher.FluxOnAssembly$OnAssemblyException",
     "reactor.core.publisher.FluxTakeUntilOther$TakeUntilOtherSubscriber",
     "reactor.core.Fuseable$ScalarCallable",
     "reactor.core.publisher.FluxGroupJoin$LeftRightEndSubscriber",
     "reactor.core.publisher.FluxMergeOrdered$MergeOrderedMainProducer",
     "reactor.core.Fuseable$SynchronousSubscription",
     "reactor.core.publisher.FluxSampleFirst$SampleFirstOther",
     "reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber",
     "reactor.core.publisher.MonoUsingWhen",
     "reactor.core.publisher.FluxOnBackpressureDrop$DropSubscriber",
     "reactor.core.Exceptions$BubblingException",
     "reactor.util.Loggers$Slf4JLogger",
     "reactor.util.function.Tuples",
     "reactor.core.Scannable$Attr$2",
     "reactor.core.Scannable$Attr$1",
     "reactor.core.publisher.MonoFilterFuseable",
     "reactor.util.concurrent.Queues$OneQueue",
     "reactor.core.publisher.FluxPublishMulticast$FluxPublishMulticaster",
     "reactor.core.Scannable$Attr$3",
     "reactor.core.publisher.FluxExtensionsKt$onErrorMap$1",
     "reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber",
     "reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber",
     "reactor.core.CoreSubscriber",
     "reactor.core.publisher.FluxWindowTimeout",
     "reactor.core.publisher.Traces$SharedSecretsCallSiteSupplierFactory$TracingException",
     "reactor.core.scheduler.Schedulers$1",
     "reactor.core.Exceptions$ErrorCallbackNotImplemented",
     "reactor.core.publisher.ParallelFlatMap",
     "reactor.adapter.JdkFlowAdapter$FlowPublisherAsFlux",
     "reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
     "reactor.core.publisher.FluxSwitchIfEmpty",
     "reactor.core.publisher.EmitterProcessor$EmitterInner",
     "reactor.core.publisher.ImmutableSignal$1",
     "reactor.core.publisher.FluxExtensionsKt$split$1",
     "reactor.core.publisher.Operators$ConditionalSubscriberAdapter",
     "reactor.core.publisher.MonoFilterWhen$FilterWhenInner",
     "reactor.core.publisher.Operators$EmptySubscription",
     "reactor.core.publisher.QueueDrainSubscriberPad3",
     "reactor.core.publisher.QueueDrainSubscriberPad4",
     "reactor.core.publisher.FluxJust",
     "reactor.core.publisher.SingleProducerSequencerFields",
     "reactor.core.publisher.FluxUsing$UsingFuseableSubscriber",
     "reactor.core.publisher.MonoRetryWhen",
     "reactor.core.publisher.FluxExpand$ExpandDepthSubscription",
     "reactor.core.publisher.UnsafeRingBuffer",
     "reactor.core.publisher.QueueDrainSubscriberPad0",
     "reactor.core.publisher.QueueDrainSubscriberPad2",
     "reactor.core.publisher.FluxPublishMulticast$CancelMulticaster",
     "reactor.core.publisher.MonoExtensionsKt$onErrorResume$1",
     "reactor.core.publisher.MonoSequenceEqual$EqualCoordinator",
     "reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux",
     "reactor.core.publisher.BlockingMonoSubscriber",
     "reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber",
     "reactor.core.publisher.MonoSingle",
     "reactor.core.publisher.FluxTakeLast",
     "reactor.core.publisher.FluxDeferWithContext",
     "reactor.core.publisher.FluxSourceMonoFuseable",
     "reactor.core.publisher.FluxSwitchOnFirst$SwitchOnFirstInnerSubscriber",
     "reactor.core.publisher.MonoMapFuseable",
     "reactor.core.publisher.MonoFlatMap$FlatMapInner",
     "reactor.core.scheduler.ImmediateScheduler",
     "reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber",
     "reactor.core.scheduler.ExecutorScheduler$WorkerDelete",
     "reactor.core.publisher.MonoDoOnEachFuseable",
     "reactor.core.publisher.OnNextFailureStrategy$LambdaOnNextErrorStrategy",
     "reactor.core.publisher.MonoPeekTerminal",
     "reactor.core.publisher.ReplayProcessor$ReplayInner",
     "reactor.core.publisher.FluxAutoConnect",
     "reactor.core.publisher.FluxJoin",
     "reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber",
     "reactor.core.publisher.FluxOnAssembly$AssemblySnapshot",
     "reactor.core.Fuseable$QueueSubscription",
     "reactor.util.concurrent.WaitStrategy",
     "reactor.core.scheduler.ImmediateScheduler$ImmediateSchedulerWorker",
     "reactor.core.publisher.FluxAutoConnectFuseable",
     "reactor.core.publisher.GroupedLiftFuseable",
     "reactor.core.publisher.EventLoopProcessor",
     "reactor.core.scheduler.ReactorThreadFactory",
     "reactor.core.publisher.DirectProcessor",
     "reactor.core.publisher.FluxDoOnEach$DoOnEachConditionalSubscriber",
     "reactor.core.publisher.Signal",
     "reactor.core.publisher.FluxDefaultIfEmpty",
     "reactor.core.scheduler.DelegateServiceScheduler$UnsupportedScheduledExecutorService",
     "reactor.core.publisher.FluxFilterWhen$FilterWhenInner",
     "reactor.core.publisher.FluxDelaySubscription$DelaySubscriptionOtherSubscriber",
     "reactor.core.publisher.QueueDrainSubscriber",
     "reactor.core.publisher.FluxOnAssembly$1",
     "reactor.core.publisher.MonoOperator",
     "reactor.core.publisher.FluxTakeLastOne",
     "reactor.core.publisher.FluxMetricsFuseable",
     "reactor.core.publisher.FluxHandleFuseable",
     "reactor.core.publisher.FluxDoOnEach",
     "reactor.core.publisher.FluxScanSeed",
     "reactor.core.publisher.FluxDelaySequence$DelaySubscriber$OnError",
     "reactor.core.publisher.ParallelPeek",
     "reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber",
     "reactor.core.publisher.FluxBufferTimeout$BufferTimeoutSubscriber",
     "reactor.util.function.Tuple3",
     "reactor.util.function.Tuple2",
     "reactor.util.function.Tuple5",
     "reactor.core.publisher.FluxEmpty",
     "reactor.util.function.Tuple4",
     "reactor.core.scheduler.ParallelScheduler",
     "reactor.util.function.Tuple7",
     "reactor.util.function.Tuple6",
     "reactor.util.function.Tuple8",
     "reactor.core.publisher.FluxRange$RangeSubscription",
     "reactor.core.publisher.FluxTake",
     "reactor.core.publisher.FluxReplay$ReplayInner",
     "reactor.core.publisher.SignalLogger",
     "reactor.core.publisher.BlockingIterable$SubscriberIterator",
     "reactor.core.publisher.MonoCancelOn",
     "reactor.util.annotation.NonNullApi",
     "reactor.core.publisher.FluxCreate",
     "reactor.core.publisher.FluxGroupJoin$JoinSupport",
     "reactor.core.scheduler.ElasticScheduler$ScheduledExecutorServiceExpiry",
     "reactor.core.publisher.MonoSubscribeOn",
     "reactor.core.Disposables$ListCompositeDisposable",
     "reactor.core.publisher.MonoSourceFlux",
     "reactor.util.concurrent.package-info",
     "reactor.core.publisher.WorkQueueProcessor$WorkQueueInner",
     "reactor.core.publisher.FluxOnErrorResume",
     "reactor.core.publisher.MonoFilterWhen",
     "reactor.core.publisher.FluxReplay",
     "reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber",
     "reactor.core.publisher.FluxArray$ArrayConditionalSubscription",
     "reactor.core.publisher.FluxUsing",
     "reactor.core.publisher.InternalFluxOperator",
     "reactor.core.publisher.MonoWhen",
     "reactor.core.scheduler.NonBlocking",
     "reactor.core.publisher.FluxWindow$WindowSkipSubscriber",
     "reactor.core.publisher.FluxTakeFuseable",
     "reactor.core.publisher.MonoAll$AllSubscriber",
     "reactor.core.publisher.MonoHide",
     "reactor.core.publisher.FluxSampleFirst$SampleFirstMain",
     "reactor.core.publisher.MonoCollectList",
     "reactor.core.publisher.FluxPeek$PeekSubscriber",
     "reactor.core.publisher.FluxSampleTimeout$SampleTimeoutOther",
     "reactor.core.publisher.MonoSequenceEqual$EqualSubscriber",
     "reactor.core.publisher.Flux$1",
     "reactor.core.publisher.EventLoopProcessor$EventLoopFactory",
     "reactor.core.publisher.Flux$2",
     "reactor.core.publisher.Flux$3",
     "reactor.core.publisher.FluxArray",
     "reactor.core.Disposable$Composite",
     "reactor.core.publisher.BufferOverflowStrategy",
     "reactor.core.publisher.FluxExtensionsKt$toIterable$1",
     "reactor.core.publisher.FluxBufferWhen$BufferWhenOpenSubscriber",
     "reactor.core.publisher.FluxSkipWhile$SkipWhileSubscriber",
     "reactor.util.context.Context",
     "reactor.core.publisher.ParallelFlux",
     "reactor.core.scheduler.ExecutorScheduler$ExecutorSchedulerWorker",
     "reactor.adapter.JdkFlowAdapter$PublisherAsFlowPublisher",
     "reactor.core.Fuseable",
     "reactor.core.scheduler.SchedulerMetricDecorator",
     "reactor.core.publisher.FluxDetach",
     "reactor.core.publisher.FluxPeekFuseable",
     "reactor.core.publisher.FluxFilter",
     "reactor.core.publisher.FluxFilter$FilterSubscriber",
     "reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain",
     "reactor.core.publisher.MonoIgnorePublisher",
     "reactor.core.package-info",
     "reactor.core.publisher.FluxOnBackpressureDrop",
     "reactor.core.publisher.FluxGenerate$GenerateSubscription",
     "reactor.core.publisher.FluxRefCount",
     "reactor.core.publisher.MonoOnAssembly",
     "reactor.core.publisher.FluxSkip$SkipSubscriber",
     "reactor.core.publisher.FluxFirstEmitting$FirstEmittingSubscriber",
     "reactor.core.publisher.FluxSwitchOnFirst$SwitchOnFirstInner",
     "reactor.core.publisher.MonoJust",
     "reactor.core.publisher.Operators$1",
     "reactor.core.publisher.FluxSample$SampleMainSubscriber",
     "reactor.core.publisher.FluxOnBackpressureBufferTimeout$BackpressureBufferTimeoutSubscriber",
     "reactor.core.publisher.FluxPublish$PublishSubscriber",
     "reactor.core.publisher.MonoHasElements",
     "reactor.core.publisher.FluxPublishMulticast",
     "reactor.core.publisher.FluxRefCount$RefCountInner",
     "reactor.core.Disposable$Swap",
     "reactor.core.publisher.FluxDoFirst",
     "reactor.core.publisher.FluxNever",
     "reactor.core.publisher.MonoSource",
     "reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber",
     "reactor.core.publisher.FluxMapSignal$FluxMapSignalSubscriber",
     "reactor.core.scheduler.InstantPeriodicWorkerTask",
     "reactor.util.Loggers$Slf4JLoggerFactory",
     "reactor.core.publisher.MonoCreate$DefaultMonoSink",
     "reactor.core.publisher.MonoIgnoreElements",
     "reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber",
     "reactor.core.publisher.FluxLogFuseable",
     "reactor.core.publisher.UnicastProcessor",
     "reactor.util.concurrent.SpscArrayQueueCold",
     "reactor.core.publisher.ParallelCollect$ParallelCollectSubscriber",
     "reactor.core.publisher.MonoUsing",
     "reactor.core.publisher.MonoIgnoreElement",
     "reactor.core.publisher.FluxError",
     "reactor.core.publisher.MonoStreamCollector",
     "reactor.core.publisher.MonoOnErrorResume",
     "reactor.core.publisher.FluxLog",
     "reactor.util.package-info",
     "reactor.core.publisher.MonoFromFluxOperator",
     "reactor.core.publisher.FluxConcatArray",
     "reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner",
     "reactor.util.function.package-info",
     "reactor.core.publisher.OnNextFailureStrategy$ResumeDropStrategy",
     "reactor.core.publisher.MonoElementAt",
     "reactor.core.scheduler.SingleWorkerScheduler",
     "reactor.core.publisher.FluxWithLatestFrom",
     "reactor.core.publisher.FluxSample",
     "reactor.core.publisher.FluxWindow",
     "reactor.core.publisher.Traces",
     "reactor.core.publisher.MonoErrorSupplied",
     "reactor.core.scheduler.SchedulerTask",
     "reactor.core.publisher.FluxZip$ZipSingleSubscriber",
     "reactor.core.publisher.MonoProcessor$NextInner",
     "reactor.core.publisher.FluxWindowPredicate$WindowFlux",
     "reactor.core.publisher.MonoLiftFuseable",
     "reactor.core.publisher.FluxSwitchOnFirst",
     "reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber",
     "reactor.util.annotation.NonNull",
     "reactor.core.publisher.DirectProcessor$DirectInner",
     "reactor.core.publisher.MonoCreate",
     "reactor.core.publisher.BlockingFirstSubscriber",
     "reactor.core.publisher.FluxCreate$BufferAsyncSink",
     "reactor.util.context.Context3",
     "reactor.util.context.Context2",
     "reactor.util.context.Context1",
     "reactor.util.context.Context0",
     "reactor.core.publisher.FluxSwitchMap$SwitchMapMain",
     "reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber",
     "reactor.core.publisher.FluxSampleTimeout",
     "reactor.core.publisher.MonoFlattenIterable",
     "reactor.util.context.Context5",
     "reactor.util.context.Context4",
     "reactor.core.publisher.FluxSkipUntilOther",
     "reactor.core.publisher.MonoDelayElement$DelayElementSubscriber",
     "reactor.util.context.ContextN",
     "reactor.core.publisher.FluxFlatMap$FlatMapInner",
     "reactor.core.publisher.MonoFlatMap$FlatMapMain",
     "reactor.core.publisher.FluxHandle",
     "reactor.core.publisher.StrictSubscriber",
     "reactor.core.publisher.FluxFlatMap",
     "reactor.core.publisher.Traces$SharedSecretsCallSiteSupplierFactory",
     "reactor.util.Loggers$ConsoleLogger",
     "reactor.core.publisher.FluxUsingWhen",
     "reactor.core.publisher.FluxTimeout$IndexedCancellable",
     "reactor.core.publisher.ReplayProcessor",
     "reactor.core.publisher.ParallelThen$ThenMain",
     "reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber",
     "reactor.core.publisher.FluxCombineLatest$CombineLatestInner",
     "reactor.core.publisher.MonoDefer",
     "reactor.core.publisher.FluxReplay$ReplaySubscriber",
     "reactor.core.scheduler.ElasticScheduler",
     "reactor.core.publisher.RingBufferPad",
     "reactor.core.publisher.FluxDoFinally$DoFinallyFuseableConditionalSubscriber",
     "reactor.core.publisher.MonoBridges",
     "reactor.core.publisher.FluxLimitRequest$FluxLimitRequestSubscriber",
     "reactor.core.publisher.MonoMap",
     "reactor.core.publisher.FluxExpand$ExpandBreathSubscriber",
     "reactor.core.publisher.BlockingOptionalMonoSubscriber",
     "reactor.core.publisher.FluxSkipUntil$SkipUntilSubscriber",
     "reactor.core.publisher.FluxSkipUntilOther$SkipUntilMainSubscriber",
     "reactor.core.publisher.FluxDefer",
     "reactor.core.publisher.FluxTake$TakeFuseableSubscriber",
     "reactor.core.publisher.FluxIndex$IndexConditionalSubscriber",
     "reactor.core.publisher.ParallelLog",
     "reactor.core.publisher.FluxPublishOn$PublishOnConditionalSubscriber",
     "reactor.core.publisher.ImmutableSignal",
     "reactor.core.publisher.FluxConcatArray$ConcatArrayDelayErrorSubscriber",
     "reactor.core.publisher.FluxContextStart$ContextStartSubscriber",
     "reactor.core.publisher.ParallelMergeSequential$MergeSequentialInner",
     "reactor.core.publisher.ConnectableLiftFuseable",
     "reactor.core.publisher.FluxWindowPredicate",
     "reactor.util.function.Tuples$1",
     "reactor.core.publisher.MonoWhen$WhenCoordinator",
     "reactor.core.publisher.FluxOnBackpressureBufferTimeout",
     "reactor.core.publisher.FluxDematerialize$DematerializeSubscriber",
     "reactor.core.publisher.SingleProducerSequencerPad",
     "reactor.core.publisher.FluxReplay$ReplaySubscription",
     "reactor.core.publisher.FluxReplay$SizeBoundReplayBuffer$Node",
     "reactor.core.Exceptions",
     "reactor.core.publisher.FluxMap$MapSubscriber",
     "reactor.core.publisher.FluxSubscribeOnValue$ScheduledScalar",
     "reactor.core.publisher.FluxSubscribeOn",
     "reactor.util.concurrent.Queues$QueueIterator",
     "reactor.core.publisher.FluxDistinct",
     "reactor.core.publisher.MonoAny$AnySubscriber",
     "reactor.core.publisher.MonoMetricsFuseable$MetricsFuseableSubscriber",
     "reactor.core.publisher.MonoNameFuseable",
     "reactor.core.publisher.MonoExtensionsKt",
     "reactor.core.publisher.MonoElapsed",
     "reactor.core.publisher.BlockingLastSubscriber",
     "reactor.core.publisher.FluxRepeatPredicate",
     "reactor.core.publisher.FluxCombineLatest$SourceAndArray",
     "reactor.core.publisher.MonoPublishOn$PublishOnSubscriber",
     "reactor.core.publisher.FluxTakeLast$TakeLastZeroSubscriber",
     "reactor.core.publisher.MonoDoFinallyFuseable",
     "reactor.core.publisher.MonoExtensionsKt$onErrorMap$1",
     "reactor.core.publisher.FluxOnBackpressureBufferStrategy$1",
     "reactor.core.publisher.FluxCreate$NoOverflowBaseAsyncSink",
     "reactor.core.publisher.FluxSwitchMap",
     "reactor.core.publisher.FluxRefCountGrace$RefCountInner",
     "reactor.core.publisher.OperatorDisposables",
     "reactor.core.publisher.FluxRetry",
     "reactor.util.concurrent.SpscArrayQueueConsumer",
     "reactor.util.concurrent.WaitStrategy$BusySpin",
     "reactor.core.publisher.UnsafeSupport",
     "reactor.util.concurrent.SpscArrayQueueP3",
     "reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber",
     "reactor.util.concurrent.SpscArrayQueueP2",
     "reactor.util.concurrent.SpscArrayQueueP1",
     "reactor.core.publisher.GroupedFlux",
     "reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber",
     "reactor.core.publisher.FluxSwitchOnFirst$SwitchOnFirstConditionalInner",
     "reactor.core.publisher.InnerConsumer",
     "reactor.core.publisher.FluxOnAssembly$OnAssemblyConditionalSubscriber",
     "reactor.core.scheduler.Scheduler",
     "reactor.core.publisher.FluxCreate$DropAsyncSink",
     "reactor.core.publisher.FluxMergeSequential$MergeSequentialInner",
     "reactor.core.publisher.FluxMapFuseable",
     "reactor.core.publisher.MonoSourceFluxFuseable",
     "reactor.core.publisher.FluxReplay$SizeAndTimeBoundReplayBuffer",
     "reactor.core.publisher.MonoExtensionsKt$sam$java_util_function_Supplier$0",
     "reactor.core.scheduler.ExecutorScheduler",
     "reactor.core.publisher.Operators$MonoSubscriber",
     "reactor.core.publisher.FluxSourceMono",
     "reactor.core.publisher.MonoDeferWithContext",
     "reactor.core.Disposables$SimpleDisposable",
     "reactor.core.publisher.FluxName",
     "reactor.core.publisher.ParallelFluxOnAssembly",
     "reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber",
     "reactor.core.publisher.FluxScan$ScanSubscriber",
     "reactor.core.publisher.FluxDelaySequence",
     "reactor.core.publisher.Operators",
     "reactor.core.publisher.MonoFromPublisher",
     "reactor.core.publisher.FluxConcatMap$1",
     "reactor.core.publisher.FluxFlatMap$FlatMapMain",
     "reactor.core.publisher.MonoDefaultIfEmpty",
     "reactor.core.publisher.MonoDoFinally",
     "reactor.core.publisher.FluxMetrics",
     "reactor.core.publisher.MonoNext$NextSubscriber",
     "reactor.core.publisher.FluxZip$ZipSingleCoordinator",
     "reactor.core.publisher.RingBufferProducer",
     "reactor.core.publisher.FluxConcatMap$ErrorMode",
     "reactor.core.publisher.FluxSwitchMap$SwitchMapInner",
     "reactor.util.function.TupleExtensionsKt",
     "reactor.core.publisher.FluxElapsed$ElapsedSubscriber"
    ],
    "usedTypes": [
     "reactor.core.publisher.Flux",
     "reactor.core.publisher.Mono"
    ],
    "usageRatio": 0.002366863905325444,
    "children": [
     {
      "id": "org.reactivestreams:reactive-streams:jar:1.0.3:compile",
      "coordinates": "org.reactivestreams:reactive-streams:1.0.3",
      "groupId": "org.reactivestreams",
      "artifactId": "reactive-streams",
      "version": "1.0.3",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 11369,
      "type": "transitive",
      "status": "used",
      "parent": "io.projectreactor:reactor-core:jar:3.3.0.RC1:compile (optional) )",
      "allTypes": [
       "org.reactivestreams.FlowAdapters$FlowToReactiveSubscription",
       "org.reactivestreams.FlowAdapters$FlowToReactiveProcessor",
       "org.reactivestreams.Publisher",
       "org.reactivestreams.Processor",
       "org.reactivestreams.FlowAdapters$FlowPublisherFromReactive",
       "org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber",
       "org.reactivestreams.FlowAdapters$ReactiveToFlowSubscriber",
       "org.reactivestreams.FlowAdapters$ReactivePublisherFromFlow",
       "org.reactivestreams.FlowAdapters",
       "org.reactivestreams.Subscription",
       "org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor",
       "org.reactivestreams.Subscriber",
       "org.reactivestreams.FlowAdapters$ReactiveToFlowSubscription"
      ],
      "usedTypes": [
       "org.reactivestreams.Publisher"
      ],
      "usageRatio": 0.07692307692307693,
      "children": []
     }
    ]
   },
   {
    "id": "io.projectreactor:reactor-test:jar:3.3.0.RC1:test",
    "coordinates": "io.projectreactor:reactor-test:3.3.0.RC1",
    "groupId": "io.projectreactor",
    "artifactId": "reactor-test",
    "version": "3.3.0.RC1",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 113656,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "reactor.test.StepVerifier",
     "reactor.test.DefaultStepVerifierBuilder$DescriptionEvent",
     "reactor.test.ValueFormatters$PredicateBasedToStringConverter",
     "reactor.test.DefaultStepVerifierBuilder$SubscriptionTaskEvent",
     "reactor.test.StepVerifier$LastStep",
     "reactor.test.util.TestLogger",
     "reactor.test.DefaultStepVerifierBuilder$NoEvent",
     "reactor.test.scheduler.VirtualTimeScheduler$VirtualTimeWorker$PeriodicTask",
     "reactor.test.publisher.package-info",
     "reactor.test.DefaultStepVerifierBuilder$EagerEvent",
     "reactor.test.DefaultStepVerifierBuilder$SubscriptionEvent",
     "reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber",
     "reactor.test.scheduler.VirtualTimeScheduler$AllFactory",
     "reactor.test.ValueFormatters$ToStringConverter",
     "reactor.test.publisher.ColdTestPublisher$ColdTestPublisherSubscription",
     "reactor.test.DefaultStepVerifierBuilder$SignalConsumeWhileEvent",
     "reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifierAssertions",
     "reactor.test.scheduler.VirtualTimeScheduler$TimedRunnable",
     "reactor.test.DefaultStepVerifierBuilder$AbstractSignalEvent",
     "reactor.test.publisher.PublisherProbe",
     "reactor.test.ValueFormatters",
     "reactor.test.publisher.DefaultTestPublisher",
     "reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier",
     "reactor.test.DefaultStepVerifierBuilder$DefaultContextExpectations",
     "reactor.test.DefaultStepVerifierBuilder$TaskEvent",
     "reactor.test.DefaultStepVerifierBuilder$SubscriptionConsumerEvent",
     "reactor.test.DefaultStepVerifierBuilder$SignalEvent",
     "reactor.test.scheduler.VirtualTimeScheduler$PeriodicDirectTask",
     "reactor.test.StepVerifierExtensionsKt",
     "reactor.test.DefaultStepVerifierBuilder$1",
     "reactor.test.publisher.TestPublisher",
     "reactor.test.publisher.TestPublisher$Violation",
     "reactor.test.MessageFormatter",
     "reactor.test.publisher.ColdTestPublisher",
     "reactor.test.package-info",
     "reactor.test.StepVerifier$FirstStep",
     "reactor.test.DefaultStepVerifierBuilder$CollectEvent",
     "reactor.test.DefaultStepVerifierBuilder$AbstractEagerEvent",
     "reactor.test.DefaultStepVerifierBuilder$RequestEvent",
     "reactor.test.DefaultStepVerifierBuilder$SignalSequenceEvent",
     "reactor.test.StepVerifier$Assertions",
     "reactor.test.scheduler.VirtualTimeScheduler$VirtualTimeWorker",
     "reactor.test.util.RaceTestUtils",
     "reactor.test.publisher.DefaultTestPublisher$TestPublisherSubscription",
     "reactor.test.StepVerifier$Step",
     "reactor.test.StepVerifierOptions",
     "reactor.test.scheduler.VirtualTimeScheduler",
     "reactor.test.DefaultStepVerifierBuilder$WaitEvent",
     "reactor.test.ValueFormatters$1",
     "reactor.test.DefaultStepVerifierBuilder$Event",
     "reactor.test.ValueFormatters$2",
     "reactor.test.ValueFormatters$3",
     "reactor.test.ValueFormatters$Extractor",
     "reactor.test.ValueFormatters$ClassBasedToStringConverter",
     "reactor.test.publisher.PublisherProbe$DefaultPublisherProbe",
     "reactor.test.DefaultStepVerifierBuilder",
     "reactor.test.DefaultStepVerifierBuilder$HookRecorder",
     "reactor.test.StepVerifier$ContextExpectations",
     "reactor.test.scheduler.package-info",
     "reactor.test.DefaultStepVerifierBuilder$SignalCountEvent"
    ],
    "usedTypes": [
     "reactor.test.StepVerifier",
     "reactor.test.StepVerifier$FirstStep",
     "reactor.test.StepVerifier$Step"
    ],
    "usageRatio": 0.05,
    "children": []
   },
   {
    "id": "io.reactivex:rxjava:jar:1.3.8:compile",
    "coordinates": "io.reactivex:rxjava:1.3.8",
    "groupId": "io.reactivex",
    "artifactId": "rxjava",
    "version": "1.3.8",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 1159165,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "rx.plugins.RxJavaHooks$5",
     "rx.plugins.RxJavaHooks$4",
     "rx.plugins.RxJavaHooks$3",
     "rx.plugins.RxJavaHooks$2",
     "rx.plugins.RxJavaHooks$9",
     "rx.plugins.RxJavaHooks$8",
     "rx.plugins.RxJavaHooks$7",
     "rx.plugins.RxJavaHooks$6",
     "rx.Single",
     "rx.subscriptions.BooleanSubscription$1",
     "rx.internal.operators.BlockingOperatorLatest$1",
     "rx.plugins.RxJavaSchedulersHook",
     "rx.internal.util.unsafe.SpscLinkedQueue",
     "rx.internal.util.IndexedRingBuffer$ElementSection",
     "rx.internal.schedulers.GenericScheduledExecutorServiceFactory",
     "rx.internal.util.unsafe.MpmcArrayQueueProducerField",
     "rx.internal.operators.OperatorDebounceWithTime$1$1",
     "rx.internal.schedulers.SchedulerWhen$OnCompletedAction",
     "rx.observables.AsyncOnSubscribe",
     "rx.internal.schedulers.SleepingAction",
     "rx.Completable$3$1",
     "rx.internal.util.unsafe.MpmcArrayQueueL1Pad",
     "rx.internal.util.unsafe.SpscArrayQueueProducerFields",
     "rx.functions.Actions$EmptyAction",
     "rx.internal.operators.OperatorMerge$MergeProducer",
     "rx.internal.operators.OnSubscribeOnAssemblyCompletable$OnAssemblyCompletableSubscriber",
     "rx.internal.util.ScalarSynchronousObservable$2",
     "rx.internal.operators.OperatorScan",
     "rx.internal.operators.OperatorOnBackpressureDrop",
     "rx.internal.util.ScalarSynchronousObservable$1",
     "rx.internal.util.ScalarSynchronousObservable$3",
     "rx.internal.operators.OperatorSwitch$SwitchSubscriber",
     "rx.internal.operators.OnSubscribeTimeoutSelectorWithFallback$TimeoutMainSubscriber$TimeoutConsumer",
     "rx.internal.operators.OperatorPublish$PublishSubscriber$1",
     "rx.internal.schedulers.ExecutorScheduler",
     "rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler$1",
     "rx.internal.operators.BlockingOperatorLatest$LatestObserverIterator",
     "rx.internal.operators.OnSubscribeFromCallable",
     "rx.internal.operators.OnSubscribeCreate$DropEmitter",
     "rx.internal.util.unsafe.BaseLinkedQueue",
     "rx.schedulers.Timestamped",
     "rx.internal.operators.OperatorPublish$InnerProducer",
     "rx.internal.operators.OperatorCast$CastSubscriber",
     "rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$1",
     "rx.internal.schedulers.SchedulerWhen$ImmediateAction",
     "rx.internal.operators.OnSubscribeTakeLastOne$TakeLastOneSubscriber",
     "rx.observers.SafeSubscriber",
     "rx.internal.operators.OnSubscribeTimeoutTimedWithFallback",
     "rx.internal.operators.OnSubscribeTimeoutTimedWithFallback$FallbackSubscriber",
     "rx.observers.SerializedObserver$FastList",
     "rx.internal.operators.OperatorReplay$SizeBoundReplayBuffer",
     "rx.observers.Observers",
     "rx.internal.operators.OnSubscribeReduceSeed",
     "rx.plugins.RxJavaHooks$14",
     "rx.subscriptions.CompositeSubscription",
     "rx.internal.operators.OperatorReplay",
     "rx.Observable$Operator",
     "rx.plugins.RxJavaHooks$13",
     "rx.internal.schedulers.SchedulerWhen$1",
     "rx.plugins.RxJavaHooks$16",
     "rx.internal.schedulers.SchedulerWhen$2",
     "rx.plugins.RxJavaHooks$15",
     "rx.internal.schedulers.SchedulerWhen$3",
     "rx.plugins.RxJavaHooks$10",
     "rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4$1",
     "rx.plugins.RxJavaHooks$12",
     "rx.plugins.RxJavaHooks$11",
     "rx.schedulers.TimeInterval",
     "rx.plugins.RxJavaHooks$18",
     "rx.plugins.RxJavaHooks$17",
     "rx.plugins.RxJavaHooks$19",
     "rx.internal.operators.SingleDelay",
     "rx.internal.operators.OnSubscribeRefCount",
     "rx.subjects.UnicastSubject$State",
     "rx.internal.schedulers.CachedThreadScheduler$EventLoopWorker$1",
     "rx.observables.BlockingObservable$1",
     "rx.internal.operators.BlockingOperatorToIterator$SubscriberIterator",
     "rx.internal.operators.OperatorZip",
     "rx.observables.BlockingObservable$5",
     "rx.observables.BlockingObservable$4",
     "rx.internal.operators.OperatorElementAt$InnerProducer",
     "rx.observables.BlockingObservable$3",
     "rx.internal.util.ExceptionsUtils",
     "rx.internal.operators.OperatorReplay$UnboundedReplayBuffer",
     "rx.internal.operators.OnSubscribeTimerOnce",
     "rx.observables.BlockingObservable$2",
     "rx.observables.BlockingObservable$9",
     "rx.observables.BlockingObservable$8",
     "rx.observables.BlockingObservable$7",
     "rx.observables.BlockingObservable$6",
     "rx.schedulers.TestScheduler$TimedAction",
     "rx.internal.operators.OperatorWindowWithStartEndObservable$1",
     "rx.internal.operators.OperatorBufferWithTime$InexactSubscriber$2",
     "rx.internal.operators.SingleOperatorZip$1",
     "rx.internal.operators.OperatorBufferWithTime$InexactSubscriber$1",
     "rx.exceptions.OnErrorNotImplementedException",
     "rx.internal.operators.OperatorBufferWithSize$BufferExact",
     "rx.exceptions.OnErrorThrowable$OnNextValue$Primitives",
     "rx.internal.operators.SingleTakeUntilCompletable$TakeUntilSourceSubscriber",
     "rx.internal.util.unsafe.SpmcArrayQueueL1Pad",
     "rx.BackpressureOverflow$Error",
     "rx.internal.operators.OnSubscribeCreate$1",
     "rx.internal.util.atomic.SpscLinkedAtomicQueue",
     "rx.internal.operators.OnSubscribePublishMulticast$ParentSubscriber",
     "rx.internal.util.IndexedRingBuffer$IndexSection",
     "rx.internal.operators.OnSubscribeRange",
     "rx.internal.util.ScalarSynchronousSingle",
     "rx.schedulers.TestScheduler$CompareActionsByTime",
     "rx.internal.operators.OnSubscribeTimerPeriodically",
     "rx.internal.producers.ProducerObserverArbiter",
     "rx.internal.operators.OperatorOnBackpressureLatest$Holder",
     "rx.internal.schedulers.CachedThreadScheduler",
     "rx.internal.operators.OnSubscribeOnAssembly$OnAssemblySubscriber",
     "rx.internal.operators.OperatorMapNotification$MapNotificationSubscriber",
     "rx.internal.operators.OperatorOnBackpressureLatest$LatestEmitter",
     "rx.internal.operators.OperatorReplay$Node",
     "rx.internal.operators.OperatorDematerialize$Holder",
     "rx.internal.operators.OnSubscribeCollect",
     "rx.subscriptions.SerialSubscription",
     "rx.internal.schedulers.NewThreadWorker",
     "rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber$1",
     "rx.internal.operators.OperatorZip$ZipSubscriber",
     "rx.internal.operators.OnSubscribeCreate",
     "rx.internal.operators.OnSubscribeToMultimap$ToMultimapSubscriber",
     "rx.observers.AssertableSubscriber",
     "rx.functions.Func0",
     "rx.functions.Func1",
     "rx.functions.Func2",
     "rx.functions.Func3",
     "rx.functions.Func4",
     "rx.functions.Func5",
     "rx.functions.Func6",
     "rx.functions.Func7",
     "rx.internal.util.LinkedArrayList",
     "rx.functions.Func8",
     "rx.internal.operators.OperatorDelay$1",
     "rx.functions.Func9",
     "rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc$WindowSubscriber",
     "rx.internal.util.unsafe.SpmcArrayQueueConsumerField",
     "rx.internal.operators.OperatorDistinctUntilChanged$Holder",
     "rx.internal.operators.OnSubscribeRedo$RedoFinite$1",
     "rx.internal.operators.OperatorToObservableList",
     "rx.functions.Actions$1",
     "rx.internal.operators.OperatorDistinct$1",
     "rx.internal.operators.SingleOperatorOnErrorResumeNext$2",
     "rx.functions.FuncN",
     "rx.internal.operators.SingleOperatorOnErrorResumeNext$1",
     "rx.functions.Actions$7",
     "rx.internal.operators.OperatorOnBackpressureDrop$1",
     "rx.functions.Actions$6",
     "rx.functions.Actions$9",
     "rx.internal.operators.OnSubscribeToMap",
     "rx.functions.Actions$8",
     "rx.functions.Actions$3",
     "rx.functions.Actions$2",
     "rx.internal.operators.CachedObservable",
     "rx.functions.Actions$5",
     "rx.internal.util.unsafe.Pow2",
     "rx.functions.Actions$4",
     "rx.internal.operators.OperatorOnBackpressureDrop$2",
     "rx.internal.schedulers.TrampolineScheduler",
     "rx.internal.operators.OperatorSerialize",
     "rx.internal.operators.OnSubscribeGroupJoin$ResultManager$LeftDurationObserver",
     "rx.internal.operators.SingleDoOnEvent$SingleDoOnEventSubscriber",
     "rx.internal.operators.CompletableOnSubscribeConcatIterable$ConcatInnerSubscriber",
     "rx.internal.operators.OnSubscribeTimeoutSelectorWithFallback$TimeoutMainSubscriber",
     "rx.internal.operators.OperatorBufferWithSize$BufferSkip",
     "rx.internal.operators.OnSubscribeSkipTimed",
     "rx.internal.operators.OperatorWindowWithObservable$BoundarySubscriber",
     "rx.subjects.ReplaySubject$ReplayBuffer",
     "rx.schedulers.TestScheduler$InnerTestScheduler",
     "rx.internal.operators.OperatorSampleWithObservable",
     "rx.internal.operators.OperatorObserveOn",
     "rx.internal.operators.OperatorObserveOn$1",
     "rx.internal.operators.OperatorMerge$HolderNoDelay",
     "rx.internal.operators.OperatorUnsubscribeOn$2$1",
     "rx.internal.operators.OnSubscribeAmb$2",
     "rx.internal.operators.OnSubscribeAmb$1",
     "rx.internal.operators.OperatorTakeWhile",
     "rx.Completable$24$1$2",
     "rx.Completable$24$1$1",
     "rx.exceptions.CompositeException$PrintStreamOrWriter",
     "rx.functions.Functions$3",
     "rx.functions.Functions$2",
     "rx.plugins.RxJavaSingleExecutionHookDefault",
     "rx.internal.util.atomic.SpscExactAtomicArrayQueue",
     "rx.functions.Functions$1",
     "rx.internal.operators.OperatorBufferWithSize$BufferExact$1",
     "rx.internal.util.unsafe.SpscUnboundedArrayQueueConsumerField",
     "rx.internal.operators.OperatorScan$InitialProducer",
     "rx.internal.util.ActionSubscriber",
     "rx.internal.operators.OperatorWindowWithTime$CountedSerializedSubject",
     "rx.functions.Functions$7",
     "rx.subjects.BehaviorSubject",
     "rx.internal.operators.OperatorSkip",
     "rx.functions.Functions$6",
     "rx.functions.Functions$5",
     "rx.internal.util.BackpressureDrainManager$BackpressureQueueCallback",
     "rx.functions.Functions$4",
     "rx.functions.Functions$9",
     "rx.functions.Functions$8",
     "rx.observables.SyncOnSubscribe$1",
     "rx.internal.operators.OperatorDebounceWithSelector$1$1",
     "rx.internal.operators.OnSubscribeConcatMap$ConcatMapInnerScalarProducer",
     "rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$1",
     "rx.observables.SyncOnSubscribe$5",
     "rx.observables.SyncOnSubscribe$4",
     "rx.observables.SyncOnSubscribe$3",
     "rx.observables.SyncOnSubscribe$2",
     "rx.internal.operators.OnSubscribeSingle",
     "rx.internal.operators.SingleDoOnUnsubscribe",
     "rx.internal.schedulers.EventLoopsScheduler",
     "rx.internal.operators.OperatorWindowWithSize$WindowOverlap$WindowOverlapProducer",
     "rx.annotations.Experimental",
     "rx.internal.operators.OperatorMapPair",
     "rx.internal.operators.SingleOperatorOnErrorResumeNext",
     "rx.internal.util.unsafe.SpscArrayQueueL1Pad",
     "rx.Completable$16$1$2",
     "rx.internal.operators.OnSubscribeSkipTimed$SkipTimedSubscriber",
     "rx.Completable$16$1$1",
     "rx.internal.operators.OperatorWindowWithTime",
     "rx.internal.operators.OperatorWindowWithTime$ExactSubscriber$2",
     "rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool",
     "rx.internal.operators.SingleOnSubscribeMap$MapSubscriber",
     "rx.internal.operators.OperatorBufferWithSize$BufferSkip$BufferSkipProducer",
     "rx.internal.util.unsafe.BaseLinkedQueuePad1",
     "rx.internal.operators.OnSubscribeGroupJoin$WindowObservableFunc",
     "rx.internal.operators.OperatorEagerConcatMap",
     "rx.exceptions.OnErrorThrowable$OnNextValue",
     "rx.internal.util.atomic.SpscLinkedArrayQueue",
     "rx.internal.operators.CachedObservable$ReplayProducer",
     "rx.internal.schedulers.ScheduledAction$FutureCompleter",
     "rx.internal.operators.CachedObservable$CacheState$1",
     "rx.internal.util.unsafe.SpscArrayQueueL3Pad",
     "rx.internal.operators.OperatorIgnoreElements$Holder",
     "rx.plugins.RxJavaHooks",
     "rx.internal.operators.OperatorToObservableSortedList",
     "rx.internal.operators.BlockingOperatorNext$NextIterator",
     "rx.Completable$19$1",
     "rx.internal.operators.OnSubscribeDelaySubscription$1",
     "rx.Scheduler",
     "rx.Single$13$1",
     "rx.internal.operators.OnSubscribeFilter",
     "rx.internal.util.UtilityFunctions$AlwaysFalse",
     "rx.internal.util.unsafe.ConcurrentSequencedCircularArrayQueue",
     "rx.internal.operators.OperatorGroupBy$GroupBySubscriber$EvictionAction",
     "rx.internal.producers.SingleProducer",
     "rx.internal.operators.OperatorDoOnRequest",
     "rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber",
     "rx.internal.operators.OperatorTakeLastTimed$1",
     "rx.internal.operators.OnSubscribeConcatMap$ConcatMapInnerSubscriber",
     "rx.internal.operators.NotificationLite",
     "rx.internal.operators.OnSubscribeFromIterable$IterableProducer",
     "rx.internal.operators.OperatorThrottleFirst",
     "rx.internal.operators.OperatorGroupByEvicting$State",
     "rx.internal.operators.BlockingOperatorNext$1",
     "rx.internal.operators.OnSubscribeAmb$Selection",
     "rx.internal.operators.OperatorToObservableList$1",
     "rx.internal.operators.OnSubscribeToMap$ToMapSubscriber",
     "rx.internal.operators.OperatorTakeLastTimed$TakeLastTimedSubscriber",
     "rx.internal.operators.SingleDoAfterTerminate",
     "rx.internal.operators.OperatorDebounceWithTime$DebounceState",
     "rx.internal.operators.OperatorTake$1",
     "rx.internal.operators.OperatorAny$1",
     "rx.internal.operators.OnSubscribeGroupJoin$ResultManager$RightObserver",
     "rx.internal.producers.SingleDelayedProducer",
     "rx.internal.operators.CompletableOnSubscribeTimeout$1$1",
     "rx.internal.operators.OnSubscribeJoin$ResultSink$RightSubscriber",
     "rx.internal.util.unsafe.SpmcArrayQueueL3Pad",
     "rx.Subscriber",
     "rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber",
     "rx.internal.operators.OperatorElementAt$1",
     "rx.internal.operators.OperatorTimeInterval",
     "rx.subjects.SubjectSubscriptionManager$SubjectObserver",
     "rx.observables.AsyncOnSubscribe$UnicastSubject$State",
     "rx.internal.operators.OnSubscribeGroupJoin$ResultManager",
     "rx.internal.operators.CompletableOnSubscribeConcatIterable",
     "rx.internal.operators.OperatorWindowWithSize$WindowOverlap",
     "rx.internal.operators.OperatorDematerialize$2",
     "rx.internal.operators.OperatorMapPair$MapPairSubscriber",
     "rx.internal.operators.OperatorDematerialize$1",
     "rx.internal.util.ScalarSynchronousSingle$DirectScheduledEmission",
     "rx.functions.Cancellable",
     "rx.internal.operators.OperatorReplay$1",
     "rx.internal.operators.OnSubscribeRedo$5",
     "rx.internal.operators.OperatorReplay$2",
     "rx.internal.operators.OperatorReplay$3",
     "rx.internal.operators.OnSubscribeRedo$3",
     "rx.internal.operators.OperatorReplay$4",
     "rx.internal.operators.OnSubscribeRedo$4",
     "rx.functions.Action9",
     "rx.internal.operators.OperatorReplay$5",
     "rx.internal.operators.OperatorReplay$6",
     "rx.internal.operators.OperatorReplay$7",
     "rx.functions.Action5",
     "rx.functions.Action6",
     "rx.functions.Action7",
     "rx.internal.operators.OnSubscribeThrow",
     "rx.internal.operators.OperatorTakeUntilPredicate$ParentSubscriber",
     "rx.functions.Action8",
     "rx.functions.Action1",
     "rx.internal.operators.OnSubscribeFlattenIterable$FlattenIterableSubscriber",
     "rx.functions.Action2",
     "rx.functions.Action3",
     "rx.Completable$24$1",
     "rx.internal.util.InternalObservableUtils$EqualsWithFunc1",
     "rx.internal.observers.AssertableSubscriberObservable",
     "rx.functions.Action4",
     "rx.functions.ActionN",
     "rx.internal.operators.OnSubscribeJoin$ResultSink$LeftSubscriber$LeftDurationSubscriber",
     "rx.subjects.SerializedSubject$1",
     "rx.internal.operators.SingleDoAfterTerminate$SingleDoAfterTerminateSubscriber",
     "rx.exceptions.AssemblyStackTraceException",
     "rx.internal.operators.OperatorTakeWhile$1",
     "rx.internal.operators.OperatorTakeWhile$2",
     "rx.internal.operators.OnSubscribeRedo$1",
     "rx.internal.operators.OnSubscribeRedo$2",
     "rx.internal.operators.OperatorTake",
     "rx.internal.operators.OperatorDebounceWithTime$1",
     "rx.internal.util.InternalObservableUtils$ReplaySupplierBufferTime",
     "rx.Completable$13$1",
     "rx.functions.Action0",
     "rx.internal.operators.OnSubscribeCreate$BaseEmitter",
     "rx.internal.operators.OnSubscribeRedo$RetryWithPredicate$1",
     "rx.internal.operators.DeferredScalarSubscriberSafe",
     "rx.Completable$26$1$1",
     "rx.subscriptions.MultipleAssignmentSubscription",
     "rx.internal.operators.OperatorReplay$ReplayBuffer",
     "rx.exceptions.CompositeException$CompositeExceptionCausalChain",
     "rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector$1",
     "rx.schedulers.TestScheduler",
     "rx.functions.Actions",
     "rx.internal.util.UtilityFunctions",
     "rx.internal.util.unsafe.ConcurrentCircularArrayQueueL0Pad",
     "rx.internal.operators.OperatorTakeTimed$TakeSubscriber",
     "rx.internal.operators.OperatorOnErrorResumeNextViaFunction",
     "rx.subjects.SerializedSubject",
     "rx.internal.operators.OnSubscribeCreate$LatestEmitter",
     "rx.internal.operators.OperatorMapPair$OuterInnerMapper",
     "rx.observables.AsyncOnSubscribe$AsyncOuterManager",
     "rx.internal.operators.OnSubscribeReduce$ReduceSubscriber",
     "rx.Scheduler$Worker",
     "rx.internal.operators.CompletableFromEmitter$FromEmitter",
     "rx.internal.util.unsafe.SpscUnboundedArrayQueueL2Pad",
     "rx.internal.util.atomic.MpscLinkedAtomicQueue",
     "rx.internal.operators.OperatorBufferWithStartEndObservable$BufferingSubscriber$1",
     "rx.Single$19$2$1",
     "rx.internal.operators.OperatorDelayWithSelector",
     "rx.Single$OnSubscribe",
     "rx.internal.operators.OperatorMerge",
     "rx.Single$13$1$1",
     "rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe",
     "rx.internal.operators.OnSubscribeTimeoutSelectorWithFallback",
     "rx.internal.util.unsafe.BaseLinkedQueuePad0",
     "rx.internal.operators.OperatorSkipUntil$1",
     "rx.internal.operators.OperatorSkipUntil$2",
     "rx.internal.operators.OperatorReplay$2$1",
     "rx.internal.util.InternalObservableUtils$NotificationErrorExtractor",
     "rx.internal.operators.OperatorDebounceWithTime",
     "rx.internal.operators.OperatorSkipLast",
     "rx.internal.operators.OperatorThrottleFirst$1",
     "rx.Completable$26$1",
     "rx.internal.operators.CompletableOnSubscribeMerge",
     "rx.observers.TestSubscriber",
     "rx.Completable$35$1$1$1",
     "rx.internal.subscriptions.Unsubscribed",
     "rx.internal.operators.SingleDoOnSubscribe",
     "rx.internal.util.BackpressureDrainManager",
     "rx.internal.util.RxRingBuffer",
     "rx.internal.operators.SingleFromObservable",
     "rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver$1",
     "rx.internal.operators.BufferUntilSubscriber$OnSubscribeAction",
     "rx.schedulers.NewThreadScheduler",
     "rx.internal.operators.OnSubscribeDetach",
     "rx.internal.operators.OperatorReplay$SizeAndTimeBoundReplayBuffer",
     "rx.internal.operators.OperatorWithLatestFrom",
     "rx.subjects.TestSubject$1",
     "rx.subjects.TestSubject$2",
     "rx.subjects.TestSubject$3",
     "rx.internal.operators.OperatorWindowWithStartEndObservable$SerializedSubject",
     "rx.subjects.TestSubject$4",
     "rx.internal.operators.OperatorPublish$PublishSubscriber",
     "rx.internal.operators.SingleOperatorZip",
     "rx.internal.util.InternalObservableUtils$PlusOneLongFunc2",
     "rx.internal.operators.OnSubscribeOnAssemblyCompletable",
     "rx.internal.producers.ProducerArbiter",
     "rx.exceptions.CompositeException$WrappedPrintWriter",
     "rx.internal.operators.OnSubscribeTimeoutTimedWithFallback$TimeoutMainSubscriber",
     "rx.internal.operators.OperatorSampleWithTime$SamplerSubscriber",
     "rx.internal.operators.OperatorScan$2",
     "rx.internal.operators.OperatorScan$1",
     "rx.internal.operators.OperatorMerge$InnerSubscriber",
     "rx.Producer",
     "rx.internal.operators.OperatorScan$3",
     "rx.internal.operators.OnSubscribeMap$MapSubscriber",
     "rx.internal.operators.OperatorWindowWithObservableFactory",
     "rx.subjects.ReplaySubject$ReplayUnboundedBuffer",
     "rx.internal.schedulers.NewThreadScheduler",
     "rx.observers.AsyncCompletableSubscriber$Unsubscribed",
     "rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker",
     "rx.internal.schedulers.NewThreadWorker$1",
     "rx.internal.operators.OnSubscribeFlatMapCompletable$FlatMapCompletableSubscriber$InnerSubscriber",
     "rx.internal.operators.OnSubscribeGroupJoin$ResultManager$LeftObserver",
     "rx.internal.operators.OperatorDoAfterTerminate$1",
     "rx.internal.operators.OperatorToObservableList$Holder",
     "rx.internal.operators.OperatorSwitch$SwitchSubscriber$1",
     "rx.internal.util.UtilityFunctions$AlwaysTrue",
     "rx.internal.operators.OperatorSwitch$SwitchSubscriber$2",
     "rx.internal.operators.OnSubscribeAmb",
     "rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber$1$1",
     "rx.internal.operators.OnSubscribeToMultimap",
     "rx.internal.operators.OperatorWindowWithSize$WindowExact",
     "rx.observers.TestObserver$1",
     "rx.internal.operators.OperatorRetryWithPredicate",
     "rx.subjects.AsyncSubject$1",
     "rx.internal.util.InternalObservableUtils$ReturnsVoidFunc1",
     "rx.internal.operators.OperatorDelay$1$1",
     "rx.internal.util.unsafe.SpmcArrayQueueMidPad",
     "rx.internal.operators.OperatorDelay$1$3",
     "rx.internal.operators.OperatorDelay$1$2",
     "rx.Observable$Transformer",
     "rx.internal.operators.OperatorMaterialize$ParentSubscriber",
     "rx.internal.operators.OperatorTakeLastTimed",
     "rx.internal.operators.OnSubscribeRedo$2$1",
     "rx.internal.operators.OperatorBufferWithStartEndObservable$BufferingSubscriber",
     "rx.internal.operators.OnSubscribeOnAssembly",
     "rx.internal.operators.OperatorAll",
     "rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray$1",
     "rx.internal.operators.OperatorSerialize$1",
     "rx.internal.operators.OperatorTake$1$1",
     "rx.Single$3",
     "rx.Single$2",
     "rx.Single$1",
     "rx.internal.operators.SingleOperatorZip$1$1",
     "rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber$1",
     "rx.internal.operators.OnSubscribePublishMulticast$PublishProducer",
     "rx.internal.operators.OnSubscribeFlatMapSingle$FlatMapSingleSubscriber$InnerSubscriber",
     "rx.functions.Actions$NotImplemented",
     "rx.internal.schedulers.SchedulerLifecycle",
     "rx.internal.operators.OnSubscribeGroupJoin",
     "rx.internal.operators.OperatorWindowWithObservableFactory$BoundarySubscriber",
     "rx.internal.operators.OnSubscribeDetach$TerminatedProducer",
     "rx.internal.util.RxThreadFactory$1",
     "rx.annotations.Beta",
     "rx.internal.operators.OperatorMaterialize$Holder",
     "rx.Completable$Operator",
     "rx.Single$7",
     "rx.Single$6",
     "rx.Single$5",
     "rx.Single$4",
     "rx.Single$9",
     "rx.Single$8",
     "rx.internal.operators.CachedObservable$CachedSubscribe",
     "rx.internal.operators.OperatorUnsubscribeOn",
     "rx.functions.Actions$Action1CallsAction0",
     "rx.internal.operators.OperatorBufferWithSingleObservable$1",
     "rx.internal.operators.OperatorBufferWithSingleObservable$2",
     "rx.internal.schedulers.CachedThreadScheduler$EventLoopWorker",
     "rx.internal.operators.OperatorReplay$ReplaySubscriber",
     "rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther",
     "rx.internal.util.unsafe.BaseLinkedQueueConsumerNodeRef",
     "rx.internal.operators.SingleOnSubscribeUsing",
     "rx.subjects.ReplaySubject$ReplaySizeBoundBuffer$Node",
     "rx.internal.operators.CompletableFlatMapSingleToCompletable",
     "rx.internal.operators.OnSubscribeCombineLatest",
     "rx.internal.operators.OperatorDoOnRequest$1",
     "rx.internal.operators.OperatorAsObservable$Holder",
     "rx.internal.operators.BufferUntilSubscriber$1",
     "rx.internal.operators.SingleFromEmitter$SingleEmitterImpl",
     "rx.internal.util.ScalarSynchronousObservable$ScalarAsyncOnSubscribe",
     "rx.internal.operators.SingleLiftObservableOperator",
     "rx.internal.operators.OperatorCast",
     "rx.schedulers.ImmediateScheduler",
     "rx.Completable$33$1",
     "rx.internal.operators.OnSubscribePublishMulticast",
     "rx.internal.operators.CompletableOnSubscribeConcat$CompletableConcatSubscriber$ConcatInnerSubscriber",
     "rx.internal.operators.OperatorWithLatestFromMany",
     "rx.internal.operators.OnSubscribeDelaySubscriptionOther$1",
     "rx.internal.util.InternalObservableUtils$ReplaySupplierTime",
     "rx.internal.operators.SingleTakeUntilObservable",
     "rx.internal.operators.OnSubscribeTakeLastOne",
     "rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1$1",
     "rx.subjects.AsyncSubject",
     "rx.internal.util.atomic.AtomicReferenceArrayQueue",
     "rx.internal.operators.OnSubscribeDetach$DetachSubscriber",
     "rx.plugins.RxJavaPlugins$2",
     "rx.Completable$13$1$1",
     "rx.internal.operators.OnSubscribeJoin$ResultSink$LeftSubscriber",
     "rx.internal.operators.OperatorSampleWithTime",
     "rx.internal.operators.OnSubscribeRedo$4$1",
     "rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber",
     "rx.internal.operators.SingleOnErrorReturn",
     "rx.internal.util.unsafe.MpmcArrayQueue",
     "rx.internal.operators.OperatorDoAfterTerminate",
     "rx.internal.util.InternalObservableUtils$ObjectEqualsFunc2",
     "rx.internal.operators.OperatorToObservableSortedList$DefaultComparableFunction",
     "rx.internal.operators.OperatorGroupBy$State",
     "rx.internal.operators.OnSubscribeDoOnEach",
     "rx.internal.operators.OnSubscribeFilter$FilterSubscriber",
     "rx.plugins.RxJavaPlugins$1",
     "rx.internal.operators.OnSubscribeConcatMap",
     "rx.exceptions.OnCompletedFailedException",
     "rx.internal.operators.OnSubscribeAutoConnect",
     "rx.Completable$11$1",
     "rx.internal.operators.OperatorBufferWithTime$ExactSubscriber$1",
     "rx.internal.util.unsafe.SpmcArrayQueueProducerField",
     "rx.internal.operators.OperatorSampleWithObservable$2",
     "rx.internal.operators.OperatorSampleWithObservable$1",
     "rx.observables.ConnectableObservable",
     "rx.internal.operators.OperatorPublish",
     "rx.internal.producers.QueuedValueProducer",
     "rx.internal.operators.SingleTakeUntilSingle",
     "rx.internal.util.unsafe.ConcurrentCircularArrayQueue",
     "rx.internal.operators.BufferUntilSubscriber",
     "rx.internal.operators.OnSubscribeCollect$CollectSubscriber",
     "rx.internal.util.SubscriptionList",
     "rx.internal.operators.SingleFromEmitter",
     "rx.internal.operators.OnSubscribeCreate$BufferEmitter",
     "rx.internal.operators.OnSubscribeJoin",
     "rx.Observable",
     "rx.internal.operators.OperatorMapPair$1",
     "rx.internal.operators.CompletableFromEmitter",
     "rx.internal.operators.OperatorSkip$1",
     "rx.observers.SafeCompletableSubscriber",
     "rx.internal.operators.OperatorAsObservable",
     "rx.internal.operators.OnSubscribeGroupJoin$ResultManager$RightDurationObserver",
     "rx.observers.Subscribers",
     "rx.internal.operators.OperatorGroupByEvicting$1",
     "rx.Notification$Kind",
     "rx.internal.operators.OnSubscribeFromArray",
     "rx.Completable$35$1",
     "rx.internal.util.unsafe.SpscArrayQueueConsumerField",
     "rx.observables.SyncOnSubscribe$SubscriptionProducer",
     "rx.internal.operators.OnSubscribeDelaySubscriptionWithSelector",
     "rx.internal.operators.OperatorOnBackpressureDrop$Holder",
     "rx.plugins.RxJavaHooks$1",
     "rx.internal.operators.OperatorAny",
     "rx.internal.operators.OperatorGroupByEvicting$GroupByProducer",
     "rx.exceptions.CompositeException$WrappedPrintStream",
     "rx.internal.operators.OnSubscribeCreate$NoOverflowBaseEmitter",
     "rx.internal.util.InternalObservableUtils",
     "rx.plugins.RxJavaCompletableExecutionHook",
     "rx.internal.schedulers.ImmediateScheduler",
     "rx.Completable$35",
     "rx.internal.operators.OnSubscribeDetach$DetachProducer",
     "rx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber",
     "rx.internal.operators.OperatorGroupBy",
     "rx.Completable$30",
     "rx.internal.util.InternalObservableUtils$RetryNotificationDematerializer",
     "rx.Completable$33",
     "rx.Completable$34",
     "rx.internal.util.PlatformDependent",
     "rx.internal.operators.OperatorTimeInterval$1",
     "rx.Completable$31",
     "rx.Observable$OnSubscribe",
     "rx.internal.operators.OperatorGroupBy$GroupByProducer",
     "rx.Completable$32",
     "rx.internal.operators.BlockingOperatorMostRecent$1",
     "rx.internal.operators.OperatorBufferWithTime",
     "rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable$1",
     "rx.internal.operators.OperatorDelay",
     "rx.exceptions.MissingBackpressureException",
     "rx.Completable$Transformer",
     "rx.plugins.RxJavaErrorHandler",
     "rx.subjects.SubjectSubscriptionManager",
     "rx.internal.operators.OperatorSkipUntil",
     "rx.observers.TestObserver",
     "rx.internal.operators.OperatorWindowWithSize",
     "rx.internal.operators.OperatorTakeLast",
     "rx.internal.operators.OperatorSwitch$InnerSubscriber",
     "rx.internal.operators.CompletableOnSubscribeTimeout$2",
     "rx.internal.operators.CompletableOnSubscribeTimeout$1",
     "rx.internal.util.atomic.SpscAtomicArrayQueue",
     "rx.internal.operators.OperatorWindowWithTime$State",
     "rx.internal.operators.OnSubscribeToObservableFuture$ToObservableFuture$1",
     "rx.internal.operators.OperatorBufferWithSingleObservable",
     "rx.internal.operators.OperatorEagerConcatMap$EagerOuterSubscriber$1",
     "rx.internal.operators.BlockingOperatorToFuture",
     "rx.internal.operators.OnSubscribeFromArray$FromArrayProducer",
     "rx.internal.util.UtilityFunctions$Identity",
     "rx.internal.util.InternalObservableUtils$ReplaySupplierNoParams",
     "rx.internal.operators.BlockingOperatorNext$NextObserver",
     "rx.internal.operators.OnSubscribeDelaySubscription",
     "rx.internal.operators.SingleTimeout",
     "rx.internal.operators.OnSubscribeTimerOnce$1",
     "rx.internal.operators.OnSubscribeTimerPeriodically$1",
     "rx.internal.operators.SingleFromCallable",
     "rx.internal.util.ScalarSynchronousSingle$2",
     "rx.internal.operators.OperatorWindowWithStartEndObservable$SourceSubscriber",
     "rx.internal.util.unsafe.MpmcArrayQueueConsumerField",
     "rx.internal.operators.OnSubscribeFlatMapCompletable$FlatMapCompletableSubscriber",
     "rx.internal.util.ScalarSynchronousSingle$1",
     "rx.observables.GroupedObservable$1",
     "rx.exceptions.OnErrorThrowable",
     "rx.internal.operators.OperatorZip$ZipProducer",
     "rx.internal.operators.OnSubscribeReduce",
     "rx.internal.operators.OperatorOnBackpressureLatest$LatestSubscriber",
     "rx.internal.schedulers.SchedulerWhen",
     "rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$2",
     "rx.internal.schedulers.ExecutorScheduler$ExecutorSchedulerWorker$1",
     "rx.internal.operators.OperatorMerge$HolderDelayErrors",
     "rx.functions.Functions$10",
     "rx.internal.schedulers.SchedulePeriodicHelper$1",
     "rx.functions.Functions$12",
     "rx.internal.util.OpenHashSet",
     "rx.functions.Functions$11",
     "rx.functions.Functions$14",
     "rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4",
     "rx.functions.Functions$13",
     "rx.observers.SerializedSubscriber",
     "rx.internal.util.unsafe.SpscUnboundedArrayQueueConsumerColdField",
     "rx.internal.operators.OperatorOnErrorResumeNextViaFunction$3",
     "rx.internal.operators.OperatorOnErrorResumeNextViaFunction$2",
     "rx.subjects.ReplaySubject$ReplayProducer",
     "rx.internal.operators.OperatorOnErrorResumeNextViaFunction$1",
     "rx.singles.BlockingSingle",
     "rx.internal.operators.CompletableOnSubscribeConcat",
     "rx.internal.schedulers.TrampolineScheduler$TimedAction",
     "rx.internal.operators.OperatorOnBackpressureBuffer$Holder",
     "rx.observers.Subscribers$2",
     "rx.subjects.ReplaySubject$ReplayState",
     "rx.observers.Subscribers$3",
     "rx.observers.Subscribers$4",
     "rx.internal.operators.OperatorWithLatestFrom$1",
     "rx.observers.Subscribers$5",
     "rx.internal.operators.OperatorWithLatestFrom$2",
     "rx.internal.operators.OperatorSwitch$HolderDelayError",
     "rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool$2",
     "rx.internal.operators.OnSubscribeJoin$ResultSink$RightSubscriber$RightDurationSubscriber",
     "rx.internal.util.ScalarSynchronousObservable$2$1",
     "rx.internal.util.unsafe.SpscUnboundedArrayQueueProducerFields",
     "rx.internal.producers.ProducerObserverArbiter$1",
     "rx.internal.schedulers.CachedThreadScheduler$CachedWorkerPool$1",
     "rx.internal.operators.OperatorTakeLast$1",
     "rx.internal.operators.OnSubscribeDefer",
     "rx.internal.operators.OperatorWithLatestFromMany$WithLatestMainSubscriber",
     "rx.Observer",
     "rx.observables.GroupedObservable",
     "rx.observers.AsyncCompletableSubscriber",
     "rx.exceptions.CompositeException",
     "rx.internal.util.unsafe.MpmcArrayQueueL2Pad",
     "rx.internal.operators.OperatorSingle$Holder",
     "rx.internal.operators.OnSubscribeUsing",
     "rx.internal.operators.OperatorSkipLastTimed",
     "rx.internal.operators.OperatorReplay$BoundedReplayBuffer",
     "rx.internal.operators.OperatorMapNotification",
     "rx.exceptions.OnErrorFailedException",
     "rx.internal.operators.OperatorDoOnSubscribe",
     "rx.SingleSubscriber",
     "rx.internal.util.unsafe.UnsafeAccess",
     "rx.Completable$15",
     "rx.Completable$16",
     "rx.Completable$13",
     "rx.Completable$14",
     "rx.Completable$19",
     "rx.internal.operators.EmptyObservableHolder",
     "rx.internal.operators.OnSubscribeSwitchIfEmpty$AlternateSubscriber",
     "rx.Completable$17",
     "rx.Completable$18",
     "rx.internal.operators.OperatorZipIterable$1",
     "rx.Completable$11",
     "rx.Completable$12",
     "rx.Completable$10",
     "rx.internal.operators.OperatorBufferWithTime$ExactSubscriber",
     "rx.internal.operators.OperatorGroupBy$GroupedUnicast",
     "rx.internal.operators.OperatorMaterialize$1",
     "rx.Completable$4$1",
     "rx.observers.Subscribers$1",
     "rx.Completable$31$1",
     "rx.internal.operators.OperatorSerialize$Holder",
     "rx.Completable$26",
     "rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer",
     "rx.Completable$27",
     "rx.subjects.ReplaySubject$ReplaySizeBoundBuffer",
     "rx.Completable$24",
     "rx.internal.operators.BufferUntilSubscriber$State",
     "rx.Completable$25",
     "rx.Completable$28",
     "rx.Completable$29",
     "rx.internal.operators.BlockingOperatorToIterator",
     "rx.internal.operators.OperatorIgnoreElements",
     "rx.internal.operators.OnSubscribeReduce$1",
     "rx.Completable$22",
     "rx.Completable$23",
     "rx.internal.operators.OnSubscribeJoin$ResultSink",
     "rx.internal.operators.OperatorEagerConcatMap$EagerOuterSubscriber",
     "rx.Completable$20",
     "rx.Completable$21",
     "rx.internal.operators.SingleDelay$ObserveOnSingleSubscriber",
     "rx.internal.util.unsafe.SpmcArrayQueueL2Pad",
     "rx.internal.operators.OperatorOnBackpressureBuffer",
     "rx.internal.operators.OnSubscribeRefCount$3",
     "rx.internal.operators.OnSubscribeRefCount$2",
     "rx.observables.SyncOnSubscribe",
     "rx.plugins.RxJavaPlugins",
     "rx.internal.operators.OnSubscribeRefCount$1",
     "rx.internal.operators.BlockingOperatorMostRecent$MostRecentObserver",
     "rx.internal.operators.SingleTakeUntilSingle$TakeUntilSourceSubscriber$OtherSubscriber",
     "rx.internal.operators.OperatorSequenceEqual$1",
     "rx.internal.util.IndexedRingBuffer",
     "rx.internal.operators.CompletableOnSubscribeConcatArray",
     "rx.internal.operators.CompletableOnSubscribeMergeDelayErrorIterable",
     "rx.internal.operators.CompletableOnSubscribeConcat$CompletableConcatSubscriber",
     "rx.internal.operators.SingleOperatorCast",
     "rx.internal.operators.OperatorDistinct$Holder",
     "rx.internal.operators.OperatorWindowWithSize$WindowSkip",
     "rx.internal.operators.CompletableOnSubscribeConcatArray$ConcatInnerSubscriber",
     "rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler",
     "rx.internal.util.ActionNotificationObserver",
     "rx.internal.operators.SingleTakeUntilCompletable",
     "rx.internal.operators.OperatorMulticast",
     "rx.internal.operators.OperatorBufferWithStartEndObservable",
     "rx.internal.operators.BlockingOperatorToFuture$1",
     "rx.internal.operators.NotificationLite$1",
     "rx.internal.operators.BlockingOperatorToFuture$2",
     "rx.internal.operators.NotificationLite$2",
     "rx.internal.operators.OperatorDebounceWithSelector$1",
     "rx.internal.operators.OperatorTimestamp",
     "rx.internal.operators.OperatorBufferWithSize$BufferOverlap$BufferOverlapProducer",
     "rx.subscriptions.Subscriptions$Unsubscribed",
     "rx.internal.operators.OnSubscribeFromIterable",
     "rx.internal.util.unsafe.SpscArrayQueueL2Pad",
     "rx.internal.operators.CompletableOnSubscribeTimeout",
     "rx.internal.operators.OnSubscribeDelaySubscriptionOther",
     "rx.internal.operators.SingleDoOnEvent",
     "rx.internal.operators.SingleTimeout$TimeoutSingleSubscriber",
     "rx.plugins.RxJavaSingleExecutionHook",
     "rx.internal.schedulers.ScheduledAction$Remover",
     "rx.internal.operators.OperatorReplay$ReplaySubscriber$1",
     "rx.subjects.TestSubject",
     "rx.internal.schedulers.SchedulerWhen$DelayedAction",
     "rx.exceptions.Exceptions",
     "rx.Single$2$1",
     "rx.functions.Function",
     "rx.internal.operators.OperatorWindowWithTime$ExactSubscriber",
     "rx.internal.operators.BlockingOperatorNext",
     "rx.internal.operators.OperatorGroupBy$GroupBySubscriber",
     "rx.internal.operators.OnSubscribeConcatMap$1",
     "rx.observers.TestSubscriber$1",
     "rx.observables.AsyncOnSubscribe$AsyncOuterManager$2",
     "rx.observables.AsyncOnSubscribe$AsyncOuterManager$1",
     "rx.internal.subscriptions.CancellableSubscription",
     "rx.BackpressureOverflow",
     "rx.internal.operators.SingleTakeUntilObservable$TakeUntilSourceSubscriber$OtherSubscriber",
     "rx.internal.operators.SingleTakeUntilObservable$TakeUntilSourceSubscriber",
     "rx.internal.operators.OperatorBufferWithTime$InexactSubscriber",
     "rx.internal.operators.OnSubscribeToObservableFuture",
     "rx.internal.operators.OperatorTakeLast$TakeLastSubscriber",
     "rx.internal.operators.CompletableOnSubscribeMergeDelayErrorArray",
     "rx.internal.operators.OperatorIgnoreElements$1",
     "rx.internal.operators.OperatorTimestamp$1",
     "rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber",
     "rx.internal.operators.OperatorPublish$2",
     "rx.internal.operators.OperatorSwitch",
     "rx.internal.operators.OperatorPublish$1",
     "rx.internal.operators.OperatorGroupByEvicting$GroupedUnicast",
     "rx.observables.SyncOnSubscribe$SyncOnSubscribeImpl",
     "rx.functions.Action",
     "rx.internal.operators.OperatorSingle$ParentSubscriber",
     "rx.subjects.UnicastSubject",
     "rx.observers.Observers$1",
     "rx.internal.util.unsafe.SpmcArrayQueueProducerIndexCacheField",
     "rx.observers.Observers$3",
     "rx.observers.Observers$2",
     "rx.observers.Observers$4",
     "rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1",
     "rx.CompletableEmitter",
     "rx.internal.schedulers.SchedulerWhen$1$1",
     "rx.internal.operators.OnSubscribeCombineLatest$LatestCoordinator",
     "rx.BackpressureOverflow$DropOldest",
     "rx.Emitter$BackpressureMode",
     "rx.internal.operators.SingleTakeUntilSingle$TakeUntilSourceSubscriber",
     "rx.internal.schedulers.EventLoopsScheduler$FixedSchedulerPool",
     "rx.internal.util.InternalObservableUtils$IsInstanceOfFunc1",
     "rx.internal.operators.OperatorTakeUntil",
     "rx.internal.operators.OperatorSkipLastTimed$1",
     "rx.internal.operators.OnSubscribeCombineLatest$CombinerSubscriber",
     "rx.internal.operators.OperatorDebounceWithSelector",
     "rx.internal.operators.OperatorSingle",
     "rx.internal.operators.OnSubscribeFlatMapSingle",
     "rx.internal.util.unsafe.BaseLinkedQueueProducerNodeRef",
     "rx.subscriptions.BooleanSubscription",
     "rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$1",
     "rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker$2",
     "rx.BackpressureOverflow$Strategy",
     "rx.plugins.RxJavaObservableExecutionHookDefault",
     "rx.internal.operators.OnSubscribeReduceSeed$ReduceSeedSubscriber",
     "rx.internal.operators.OnSubscribeSwitchIfEmpty",
     "rx.observables.ConnectableObservable$1",
     "rx.subjects.SubjectSubscriptionManager$State",
     "rx.subjects.PublishSubject$PublishSubjectState",
     "rx.internal.util.atomic.LinkedQueueNode",
     "rx.internal.util.unsafe.QueueProgressIndicators",
     "rx.internal.operators.OperatorEagerConcatMap$EagerOuterProducer",
     "rx.internal.operators.OnSubscribeTimeoutTimedWithFallback$TimeoutMainSubscriber$TimeoutTask",
     "rx.internal.operators.OnSubscribeRedo$RedoFinite",
     "rx.Single$19",
     "rx.Single$17",
     "rx.Single$18",
     "rx.internal.operators.OperatorMulticast$1",
     "rx.Single$15",
     "rx.internal.operators.OperatorMulticast$2",
     "rx.Single$16",
     "rx.internal.operators.OperatorMulticast$3",
     "rx.Single$13",
     "rx.Single$14",
     "rx.internal.util.ScalarSynchronousSingle$2$1",
     "rx.Single$11",
     "rx.Single$12",
     "rx.internal.util.InternalObservableUtils$ToArrayFunc1",
     "rx.internal.operators.OperatorDoOnRequest$ParentSubscriber",
     "rx.Single$10",
     "rx.internal.operators.OnSubscribeLift",
     "rx.observables.AsyncOnSubscribe$AsyncOnSubscribeImpl",
     "rx.internal.util.ScalarSynchronousObservable$ScalarAsyncProducer",
     "rx.internal.operators.OperatorTakeTimed",
     "rx.observables.AsyncOnSubscribe$7",
     "rx.internal.operators.OnSubscribeRedo$RetryWithPredicate",
     "rx.observables.AsyncOnSubscribe$6",
     "rx.observables.AsyncOnSubscribe$5",
     "rx.observables.AsyncOnSubscribe$4",
     "rx.observables.AsyncOnSubscribe$3",
     "rx.observables.AsyncOnSubscribe$2",
     "rx.schedulers.TestScheduler$InnerTestScheduler$2",
     "rx.observables.AsyncOnSubscribe$1",
     "rx.schedulers.TestScheduler$InnerTestScheduler$1",
     "rx.internal.operators.OnSubscribeToObservableFuture$ToObservableFuture",
     "rx.plugins.RxJavaObservableExecutionHook",
     "rx.internal.operators.OperatorTakeUntilPredicate",
     "rx.internal.operators.OperatorReplay$InnerProducer",
     "rx.internal.util.ObserverSubscriber",
     "rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber",
     "rx.internal.operators.OperatorZip$Zip$InnerSubscriber",
     "rx.internal.operators.OnSubscribeFlattenIterable",
     "rx.internal.operators.SingleObserveOn",
     "rx.subjects.SubjectSubscriptionManager$1",
     "rx.internal.operators.OperatorGroupByEvicting$EvictionAction",
     "rx.schedulers.Schedulers",
     "rx.internal.operators.OperatorZipIterable",
     "rx.internal.operators.OperatorTakeUntil$1",
     "rx.internal.operators.OperatorTakeUntil$2",
     "rx.internal.operators.OperatorZip$Zip",
     "rx.internal.schedulers.ImmediateScheduler$InnerImmediateScheduler",
     "rx.BackpressureOverflow$DropLatest",
     "rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther$2",
     "rx.internal.operators.CompletableFlatMapSingleToCompletable$SourceSubscriber",
     "rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther$1",
     "rx.internal.schedulers.CachedThreadScheduler$ThreadWorker",
     "rx.subjects.Subject",
     "rx.internal.operators.OnSubscribeOnAssemblySingle",
     "rx.internal.util.atomic.BaseLinkedAtomicQueue",
     "rx.internal.schedulers.SchedulePeriodicHelper",
     "rx.singles.BlockingSingle$1",
     "rx.internal.operators.OperatorReplay$3$1",
     "rx.internal.operators.OperatorWindowWithObservable$SourceSubscriber",
     "rx.internal.operators.OnSubscribeFlatMapSingle$FlatMapSingleSubscriber",
     "rx.internal.operators.OnSubscribeCreate$NoneEmitter",
     "rx.internal.operators.OperatorOnBackpressureLatest",
     "rx.internal.operators.SingleTimeout$TimeoutSingleSubscriber$OtherSubscriber",
     "rx.internal.schedulers.EventLoopsScheduler$PoolWorker",
     "rx.Completable$25$1",
     "rx.internal.operators.OnSubscribeMap",
     "rx.internal.util.InternalObservableUtils$PlusOneFunc2",
     "rx.internal.operators.OperatorDelayWithSelector$1",
     "rx.internal.operators.OnSubscribeCreate$ErrorEmitter",
     "rx.internal.subscriptions.SequentialSubscription",
     "rx.internal.operators.SingleOnSubscribeUsing$1",
     "rx.internal.operators.OperatorDistinctUntilChanged",
     "rx.internal.util.RxThreadFactory",
     "rx.internal.operators.OperatorWindowWithObservableFactory$SourceSubscriber",
     "rx.internal.util.InternalObservableUtils$ErrorNotImplementedAction",
     "rx.internal.operators.BufferUntilSubscriber$OnSubscribeAction$1",
     "rx.internal.operators.OnSubscribeFlattenIterable$1",
     "rx.internal.operators.OperatorWindowWithSize$WindowSkip$WindowSkipProducer",
     "rx.internal.operators.OperatorSkipWhile$2",
     "rx.internal.util.unsafe.SpscUnboundedArrayQueue",
     "rx.internal.operators.SingleOnErrorReturn$OnErrorReturnsSingleSubscriber",
     "rx.internal.operators.OperatorSkipWhile$1",
     "rx.internal.operators.OperatorBufferWithStartEndObservable$1",
     "rx.exceptions.UnsubscribeFailedException",
     "rx.internal.operators.NeverObservableHolder",
     "rx.internal.operators.SingleToObservable",
     "rx.Single$Transformer",
     "rx.internal.operators.CompletableOnSubscribeMergeIterable",
     "rx.internal.operators.SingleFromObservable$WrapSingleIntoSubscriber",
     "rx.internal.operators.OperatorTakeUntilPredicate$1",
     "rx.subscriptions.Subscriptions$FutureSubscription",
     "rx.observers.SerializedObserver",
     "rx.internal.util.InternalObservableUtils$CollectorCaller",
     "rx.SingleEmitter",
     "rx.internal.operators.BlockingOperatorLatest",
     "rx.internal.operators.CompletableOnSubscribeMergeArray$1",
     "rx.Subscription",
     "rx.internal.operators.CachedObservable$CacheState",
     "rx.internal.operators.OperatorPublish$2$1",
     "rx.internal.operators.CompletableOnSubscribeMergeIterable$1",
     "rx.internal.util.BlockingUtils",
     "rx.internal.operators.OnSubscribeRedo$1$1",
     "rx.internal.operators.OperatorDoOnUnsubscribe",
     "rx.internal.operators.OperatorWindowWithStartEndObservable",
     "rx.internal.operators.SingleLiftObservableOperator$WrapSubscriberIntoSingle",
     "rx.internal.operators.OperatorSkipLast$1",
     "rx.internal.operators.OperatorWindowWithObservable",
     "rx.internal.schedulers.ScheduledAction$Remover2",
     "rx.internal.operators.OperatorMapNotification$1",
     "rx.subjects.PublishSubject$PublishSubjectProducer",
     "rx.internal.operators.DeferredScalarSubscriber",
     "rx.Completable$19$1$1",
     "rx.internal.operators.CompletableOnSubscribeMergeArray",
     "rx.Completable$16$1",
     "rx.internal.operators.OperatorToObservableSortedList$2",
     "rx.internal.operators.OperatorMaterialize",
     "rx.internal.util.InternalObservableUtils$SelectorAndObserveOn",
     "rx.internal.operators.OperatorToObservableSortedList$1",
     "rx.internal.operators.OnSubscribeRedo",
     "rx.Completable$1",
     "rx.internal.operators.OperatorBufferWithSize",
     "rx.internal.operators.OperatorSwitch$Holder",
     "rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$1",
     "rx.internal.operators.OperatorWindowWithTime$InexactSubscriber$2",
     "rx.Completable$3",
     "rx.Emitter",
     "rx.Completable$2",
     "rx.Completable$5",
     "rx.observables.AsyncOnSubscribe$UnicastSubject",
     "rx.Completable$4",
     "rx.Completable$7",
     "rx.Completable$6",
     "rx.Completable$9",
     "rx.Completable$8",
     "rx.internal.util.InternalObservableUtils$ReplaySupplierBuffer",
     "rx.internal.util.unsafe.MessagePassingQueue",
     "rx.internal.util.InternalObservableUtils$RepeatNotificationDematerializer",
     "rx.internal.util.unsafe.MpscLinkedQueue",
     "rx.internal.schedulers.SchedulerWhen$ScheduledAction",
     "rx.internal.util.ScalarSynchronousSingle$NormalScheduledEmission",
     "rx.internal.operators.OnSubscribeUsing$DisposeAction",
     "rx.internal.operators.NotificationLite$OnErrorSentinel",
     "rx.internal.util.ScalarSynchronousSingle$ScalarSynchronousSingleAction",
     "rx.internal.operators.OnSubscribeRange$RangeProducer",
     "rx.internal.operators.OnSubscribeSingle$1",
     "rx.internal.operators.CompletableOnSubscribeMerge$CompletableMergeSubscriber",
     "rx.internal.operators.DeferredScalarSubscriber$InnerProducer",
     "rx.internal.schedulers.GenericScheduledExecutorService",
     "rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker",
     "rx.internal.operators.OperatorSequenceEqual",
     "rx.internal.util.unsafe.SpscUnboundedArrayQueueProducerColdFields",
     "rx.internal.util.unsafe.SpscArrayQueueColdField",
     "rx.Single$19$1",
     "rx.Single$19$2",
     "rx.internal.util.unsafe.SpscArrayQueue",
     "rx.internal.util.unsafe.SpmcArrayQueue",
     "rx.internal.util.ScalarSynchronousObservable",
     "rx.internal.operators.OperatorDelayWithSelector$1$1",
     "rx.internal.operators.OperatorElementAt",
     "rx.internal.operators.OperatorSubscribeOn",
     "rx.Completable",
     "rx.Completable$35$1$1",
     "rx.internal.operators.OnSubscribeRedo$3$1",
     "rx.internal.producers.ProducerArbiter$1",
     "rx.subscriptions.RefCountSubscription$State",
     "rx.internal.operators.OperatorWindowWithSize$WindowExact$1",
     "rx.subjects.ReplaySubject",
     "rx.internal.operators.OperatorAll$1",
     "rx.internal.schedulers.SchedulePeriodicHelper$NowNanoSupplier",
     "rx.internal.operators.OperatorMerge$MergeSubscriber",
     "rx.Completable$OnSubscribe",
     "rx.Completable$10$1",
     "rx.subscriptions.RefCountSubscription$InnerSubscription",
     "rx.internal.operators.OperatorWithLatestFromMany$WithLatestOtherSubscriber",
     "rx.internal.schedulers.ScheduledAction",
     "rx.internal.operators.BlockingOperatorMostRecent",
     "rx.internal.operators.OnSubscribeFlattenIterable$OnSubscribeScalarFlattenIterable",
     "rx.internal.operators.SingleFromFuture",
     "rx.internal.operators.OperatorEagerConcatMap$EagerInnerSubscriber",
     "rx.internal.operators.OperatorDistinctUntilChanged$1",
     "rx.functions.Actions$11",
     "rx.functions.Actions$10",
     "rx.functions.Functions",
     "rx.internal.operators.OperatorDistinct",
     "rx.internal.operators.BackpressureUtils",
     "rx.internal.util.atomic.SpscUnboundedAtomicArrayQueue",
     "rx.subjects.ReplaySubject$ReplaySizeAndTimeBoundBuffer$TimedNode",
     "rx.internal.operators.SingleOnSubscribeMap",
     "rx.internal.operators.OperatorSkipWhile",
     "rx.internal.operators.OnSubscribeAmb$AmbSubscriber",
     "rx.subscriptions.RefCountSubscription",
     "rx.internal.operators.OnSubscribeFlatMapCompletable",
     "rx.internal.operators.OnSubscribeOnAssemblySingle$OnAssemblySingleSubscriber",
     "rx.internal.producers.QueuedProducer",
     "rx.internal.util.ActionObserver",
     "rx.internal.util.SuppressAnimalSniffer",
     "rx.subjects.PublishSubject",
     "rx.internal.operators.OnSubscribeFlatMapSingle$FlatMapSingleSubscriber$Requested",
     "rx.internal.operators.OperatorWindowWithTime$InexactSubscriber",
     "rx.internal.operators.OperatorUnsubscribeOn$1",
     "rx.internal.operators.OperatorUnsubscribeOn$2",
     "rx.internal.operators.CompletableOnSubscribeMerge$CompletableMergeSubscriber$1",
     "rx.internal.operators.OperatorBufferWithSize$BufferOverlap",
     "rx.internal.operators.OperatorGroupBy$1",
     "rx.internal.operators.OperatorDematerialize",
     "rx.subscriptions.Subscriptions",
     "rx.Notification",
     "rx.subjects.ReplaySubject$ReplaySizeAndTimeBoundBuffer",
     "rx.internal.operators.OperatorGroupByEvicting",
     "rx.subjects.BehaviorSubject$1",
     "rx.internal.operators.OperatorGroupByEvicting$GroupBySubscriber",
     "rx.Completable$12$1",
     "rx.CompletableSubscriber",
     "rx.internal.operators.OnSubscribeSwitchIfEmpty$ParentSubscriber",
     "rx.internal.operators.SingleObserveOn$ObserveOnSingleSubscriber",
     "rx.schedulers.TrampolineScheduler",
     "rx.internal.operators.OnSubscribeToMultimap$DefaultMultimapCollectionFactory",
     "rx.internal.operators.OperatorOnBackpressureBuffer$BufferSubscriber",
     "rx.observables.BlockingObservable"
    ],
    "usedTypes": [
     "rx.Completable",
     "rx.Single",
     "rx.singles.BlockingSingle",
     "rx.observables.BlockingObservable",
     "rx.Observable"
    ],
    "usageRatio": 0.0049261083743842365,
    "children": []
   },
   {
    "id": "io.reactivex:rxjava-reactive-streams:jar:1.2.1:compile",
    "coordinates": "io.reactivex:rxjava-reactive-streams:1.2.1",
    "groupId": "io.reactivex",
    "artifactId": "rxjava-reactive-streams",
    "version": "1.2.1",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 18217,
    "type": "direct",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "rx.internal.reactivestreams.PublisherAdapter$1$1",
     "rx.internal.reactivestreams.SubscriberAdapter",
     "rx.internal.reactivestreams.PublisherAsSingle",
     "rx.internal.reactivestreams.SingleAsPublisher$SingleAsPublisherSubscriber",
     "rx.internal.reactivestreams.PublisherAsSingle$PublisherAsSingleSubscriber",
     "rx.internal.reactivestreams.PublisherAsCompletable",
     "rx.RxReactiveStreams$1",
     "rx.RxReactiveStreams",
     "rx.internal.reactivestreams.PublisherAdapter$1",
     "rx.internal.reactivestreams.RxJavaSynchronizedProducer",
     "rx.internal.reactivestreams.PublisherAdapter",
     "rx.internal.reactivestreams.PublisherAsCompletable$PublisherAsCompletableSubscriber",
     "rx.internal.reactivestreams.CompletableAsPublisher$CompletableAsPublisherSubscriber",
     "rx.internal.reactivestreams.SingleAsPublisher",
     "rx.internal.reactivestreams.CompletableAsPublisher"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "io.reactivex.rxjava2:rxjava:jar:2.2.12:compile",
    "coordinates": "io.reactivex.rxjava2:rxjava:2.2.12",
    "groupId": "io.reactivex.rxjava2",
    "artifactId": "rxjava",
    "version": "2.2.12",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 2355485,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "io.reactivex.internal.functions.Functions$JustValue",
     "io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver",
     "io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapSingle",
     "io.reactivex.processors.AsyncProcessor$AsyncSubscription",
     "io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable",
     "io.reactivex.internal.operators.single.SingleDoOnTerminate$DoOnTerminate",
     "io.reactivex.internal.util.ListAddBiConsumer",
     "io.reactivex.internal.operators.flowable.FlowableAny",
     "io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver",
     "io.reactivex.internal.operators.single.SingleZipIterable$SingletonArrayFunc",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector",
     "io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber$ConsumerIndexHolder",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver",
     "io.reactivex.internal.schedulers.SchedulerWhen",
     "io.reactivex.internal.operators.maybe.MaybeCreate$Emitter",
     "io.reactivex.internal.util.ObservableQueueDrain",
     "io.reactivex.internal.operators.flowable.FlowableAmb",
     "io.reactivex.internal.operators.single.SingleOnErrorReturn",
     "io.reactivex.internal.operators.single.SingleDetach",
     "io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableReduce",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber",
     "io.reactivex.processors.AsyncProcessor",
     "io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableConcatArray",
     "io.reactivex.internal.operators.flowable.FlowableRange",
     "io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable",
     "io.reactivex.schedulers.TestScheduler",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier",
     "io.reactivex.internal.operators.observable.BlockingObservableMostRecent",
     "io.reactivex.internal.observers.ConsumerSingleObserver",
     "io.reactivex.internal.operators.observable.ObservableGroupJoin",
     "io.reactivex.Scheduler$PeriodicDirectTask",
     "io.reactivex.internal.observers.QueueDrainSubscriberPad0",
     "io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty",
     "io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent",
     "io.reactivex.internal.observers.QueueDrainSubscriberPad2",
     "io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver",
     "io.reactivex.internal.operators.observable.ObservableReduceSeedSingle",
     "io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver",
     "io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber",
     "io.reactivex.internal.functions.ObjectHelper",
     "io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable",
     "io.reactivex.internal.operators.observable.ObservableScanSeed",
     "io.reactivex.internal.operators.maybe.MaybeMergeArray",
     "io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber",
     "io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver",
     "io.reactivex.internal.operators.maybe.MaybeOnErrorReturn",
     "io.reactivex.MaybeOperator",
     "io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector",
     "io.reactivex.internal.subscribers.DeferredScalarSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver",
     "io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber",
     "io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer",
     "io.reactivex.internal.operators.single.SingleTimer",
     "io.reactivex.internal.operators.single.SingleMap$MapSingleObserver",
     "io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable",
     "io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber",
     "io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber",
     "io.reactivex.disposables.ActionDisposable",
     "io.reactivex.internal.operators.observable.ObservableConcatWithSingle",
     "io.reactivex.internal.operators.single.SingleContains",
     "io.reactivex.internal.operators.maybe.MaybeDefer",
     "io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver",
     "io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray",
     "io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$SingletonArrayFunc",
     "io.reactivex.internal.fuseable.HasUpstreamMaybeSource",
     "io.reactivex.disposables.Disposable",
     "io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver",
     "io.reactivex.internal.operators.flowable.FlowableFilter$FilterConditionalSubscriber",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver",
     "io.reactivex.internal.fuseable.ConditionalSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBuffer",
     "io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber",
     "io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool",
     "io.reactivex.internal.operators.single.SingleZipIterable",
     "io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber",
     "io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver",
     "io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryOpenSubscriber",
     "io.reactivex.internal.schedulers.DisposeOnCancel",
     "io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterConditionalSubscriber",
     "io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver",
     "io.reactivex.internal.operators.single.SingleAmb",
     "io.reactivex.internal.operators.flowable.FlowableConcatMap$1",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle",
     "io.reactivex.annotations.Beta",
     "io.reactivex.internal.operators.observable.ObservableReplay$Replay",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber",
     "io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver",
     "io.reactivex.FlowableConverter",
     "io.reactivex.internal.subscriptions.ArrayCompositeSubscription",
     "io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction",
     "io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver",
     "io.reactivex.internal.operators.flowable.FlowableConcatMap$WeakScalarSubscription",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver",
     "io.reactivex.internal.operators.observable.ObservableBufferTimed",
     "io.reactivex.internal.operators.observable.ObservableGroupBy$State",
     "io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable",
     "io.reactivex.internal.operators.observable.ObservableFlatMapCompletable",
     "io.reactivex.internal.operators.observable.ObservableFromPublisher",
     "io.reactivex.internal.operators.observable.ObservableSubscribeOn",
     "io.reactivex.internal.operators.flowable.FlowableDoFinally",
     "io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver",
     "io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver",
     "io.reactivex.internal.functions.Functions",
     "io.reactivex.internal.operators.observable.ObservableRetryWhen",
     "io.reactivex.internal.operators.flowable.FlowableOnErrorReturn",
     "io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableDelay",
     "io.reactivex.internal.operators.observable.ObservableConcatWithMaybe",
     "io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther",
     "io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber",
     "io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable",
     "io.reactivex.exceptions.CompositeException$PrintStreamOrWriter",
     "io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription",
     "io.reactivex.internal.operators.flowable.FlowableMap$MapSubscriber",
     "io.reactivex.exceptions.CompositeException$WrappedPrintWriter",
     "io.reactivex.internal.operators.observable.ObservableUnsubscribeOn",
     "io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback",
     "io.reactivex.internal.operators.observable.ObservableRangeLong",
     "io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver",
     "io.reactivex.internal.functions.Functions$EmptyRunnable",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleGenerator",
     "io.reactivex.internal.operators.observable.ObservableElementAt",
     "io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver",
     "io.reactivex.internal.schedulers.ExecutorScheduler$DelayedDispose",
     "io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer",
     "io.reactivex.internal.operators.completable.CompletableDoOnEvent",
     "io.reactivex.disposables.FutureDisposable",
     "io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask$DisposeObserver",
     "io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess",
     "io.reactivex.internal.operators.observable.ObservableCount$CountObserver",
     "io.reactivex.internal.operators.parallel.ParallelRunOn$MultiWorkerCallback",
     "io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher",
     "io.reactivex.internal.operators.flowable.FlowableReplay$ReplayPublisher",
     "io.reactivex.internal.functions.Functions$BooleanSupplierPredicateReverse",
     "io.reactivex.internal.operators.observable.ObservableCollect",
     "io.reactivex.BackpressureOverflowStrategy",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundary",
     "io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller",
     "io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber",
     "io.reactivex.internal.operators.observable.ObservableMergeWithMaybe",
     "io.reactivex.processors.PublishProcessor",
     "io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$ItemDelayFunction",
     "io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber",
     "io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast",
     "io.reactivex.subjects.MaybeSubject",
     "io.reactivex.internal.functions.Functions$BoundedConsumer",
     "io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber",
     "io.reactivex.internal.observers.InnerQueuedObserver",
     "io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver",
     "io.reactivex.ObservableConverter",
     "io.reactivex.internal.operators.flowable.FlowableTakeUntil",
     "io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver",
     "io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber",
     "io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver",
     "io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerInner",
     "io.reactivex.internal.operators.observable.ObservableTimeInterval",
     "io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription",
     "io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber",
     "io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection",
     "io.reactivex.internal.operators.observable.ObservableTakeLast",
     "io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver",
     "io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber",
     "io.reactivex.internal.observers.ForEachWhileObserver",
     "io.reactivex.internal.operators.maybe.MaybeMap",
     "io.reactivex.functions.IntFunction",
     "io.reactivex.internal.operators.completable.CompletableCache",
     "io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver",
     "io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue",
     "io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable",
     "io.reactivex.internal.operators.observable.ObservableReplay$MulticastReplay",
     "io.reactivex.internal.operators.flowable.FlowableToListSingle",
     "io.reactivex.internal.operators.flowable.FlowableCombineLatest",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$ZipIterableFunction",
     "io.reactivex.internal.operators.flowable.FlowableSkipLast",
     "io.reactivex.internal.operators.flowable.FlowableRange$RangeSubscription",
     "io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver",
     "io.reactivex.internal.subscriptions.BasicQueueSubscription",
     "io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver",
     "io.reactivex.SingleOnSubscribe",
     "io.reactivex.observables.ConnectableObservable",
     "io.reactivex.disposables.ReferenceDisposable",
     "io.reactivex.internal.subscriptions.ScalarSubscription",
     "io.reactivex.internal.operators.parallel.ParallelFlatMap",
     "io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutTask",
     "io.reactivex.internal.operators.observable.ObservableDebounceTimed",
     "io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed",
     "io.reactivex.exceptions.ProtocolViolationException",
     "io.reactivex.internal.observers.BlockingObserver",
     "io.reactivex.internal.operators.observable.ObservableAutoConnect",
     "io.reactivex.schedulers.TestScheduler$TestWorker",
     "io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver",
     "io.reactivex.Scheduler$Worker$PeriodicTask",
     "io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable",
     "io.reactivex.internal.operators.flowable.FlowableWindowTimed",
     "io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver",
     "io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache",
     "io.reactivex.internal.subscribers.QueueDrainSubscriber",
     "io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase",
     "io.reactivex.internal.operators.single.SingleToFlowable",
     "io.reactivex.internal.operators.flowable.FlowableWindow",
     "io.reactivex.internal.operators.observable.ObservableGenerate",
     "io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver",
     "io.reactivex.internal.operators.single.SingleToObservable",
     "io.reactivex.internal.operators.observable.ObservablePublishClassic",
     "io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer",
     "io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable",
     "io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver",
     "io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver",
     "io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver",
     "io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable",
     "io.reactivex.internal.operators.observable.ObservableCache$Node",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver",
     "io.reactivex.internal.operators.maybe.MaybeError",
     "io.reactivex.internal.operators.flowable.FlowableWithLatestFrom",
     "io.reactivex.internal.operators.single.SingleFlatMapPublisher",
     "io.reactivex.internal.operators.parallel.ParallelFromPublisher",
     "io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle",
     "io.reactivex.internal.operators.flowable.FlowableObserveOn",
     "io.reactivex.internal.fuseable.QueueDisposable",
     "io.reactivex.subjects.BehaviorSubject$BehaviorDisposable",
     "io.reactivex.internal.fuseable.HasUpstreamPublisher",
     "io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver",
     "io.reactivex.internal.operators.maybe.MaybeJust",
     "io.reactivex.internal.operators.observable.ObservableScan$ScanObserver",
     "io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext",
     "io.reactivex.observers.DisposableSingleObserver",
     "io.reactivex.parallel.ParallelFailureHandling",
     "io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableGroupBy",
     "io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySubscriber",
     "io.reactivex.internal.functions.Functions$EmptyLongConsumer",
     "io.reactivex.functions.BiConsumer",
     "io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver",
     "io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver",
     "io.reactivex.internal.operators.maybe.MaybeFromCallable",
     "io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable",
     "io.reactivex.internal.operators.completable.CompletableFromCallable",
     "io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver",
     "io.reactivex.Observable",
     "io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator",
     "io.reactivex.internal.operators.observable.ObservableCountSingle",
     "io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver",
     "io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$2",
     "io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver",
     "io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$1",
     "io.reactivex.functions.Predicate",
     "io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$4",
     "io.reactivex.observers.TestObserver$EmptyObserver",
     "io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$3",
     "io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$6",
     "io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$5",
     "io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver",
     "io.reactivex.internal.operators.flowable.FlowableSampleTimed",
     "io.reactivex.SingleObserver",
     "io.reactivex.internal.functions.Functions$ToMultimapKeyValueSelector",
     "io.reactivex.observers.DisposableMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableGroupJoin$JoinSupport",
     "io.reactivex.processors.ReplayProcessor$ReplayBuffer",
     "io.reactivex.processors.ReplayProcessor$Node",
     "io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker",
     "io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer",
     "io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber",
     "io.reactivex.internal.fuseable.HasUpstreamSingleSource",
     "io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver",
     "io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver",
     "io.reactivex.Observable$1",
     "io.reactivex.internal.operators.flowable.FlowableZipIterable",
     "io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request",
     "io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable",
     "io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask",
     "io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver$OtherSingleObserver",
     "io.reactivex.internal.functions.Functions$FutureAction",
     "io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver",
     "io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription",
     "io.reactivex.internal.fuseable.HasUpstreamObservableSource",
     "io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport$WorkerCallback",
     "io.reactivex.internal.operators.maybe.MaybeUnsafeCreate",
     "io.reactivex.internal.operators.flowable.FlowableSkipWhile",
     "io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher",
     "io.reactivex.internal.subscribers.SinglePostCompleteSubscriber",
     "io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver",
     "io.reactivex.internal.subscriptions.SubscriptionArbiter",
     "io.reactivex.Single",
     "io.reactivex.internal.operators.observable.ObservableSampleWithObservable",
     "io.reactivex.internal.operators.observable.ObservablePublishAlt",
     "io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver",
     "io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver",
     "io.reactivex.internal.operators.flowable.FlowableNever",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapSingle",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleBiGenerator",
     "io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber",
     "io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber",
     "io.reactivex.internal.operators.completable.CompletableResumeNext",
     "io.reactivex.internal.functions.Functions$Array2Func",
     "io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper",
     "io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver",
     "io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver",
     "io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver",
     "io.reactivex.internal.observers.BlockingFirstObserver",
     "io.reactivex.internal.operators.parallel.ParallelSortedJoin",
     "io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher",
     "io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver",
     "io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain",
     "io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$Cancellation",
     "io.reactivex.internal.operators.observable.ObservableTake",
     "io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapIntoIterable",
     "io.reactivex.internal.fuseable.FuseToObservable",
     "io.reactivex.internal.operators.single.SingleDelayWithCompletable",
     "io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver",
     "io.reactivex.internal.operators.observable.ObservableToListSingle",
     "io.reactivex.internal.operators.flowable.FlowableElementAtMaybe",
     "io.reactivex.internal.operators.completable.CompletableFromUnsafeSource",
     "io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver",
     "io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber",
     "io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$1",
     "io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber",
     "io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$DelayWithMainObserver",
     "io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver",
     "io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber",
     "io.reactivex.internal.schedulers.SchedulerPoolFactory$ScheduledTask",
     "io.reactivex.internal.subscribers.InnerQueuedSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver",
     "io.reactivex.subjects.PublishSubject",
     "io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver",
     "io.reactivex.internal.functions.Functions$EmptyConsumer",
     "io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber",
     "io.reactivex.internal.schedulers.TrampolineScheduler",
     "io.reactivex.internal.schedulers.IoScheduler",
     "io.reactivex.internal.operators.observable.ObservableDelay",
     "io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle",
     "io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed",
     "io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver",
     "io.reactivex.internal.operators.observable.ObservableMap",
     "io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver",
     "io.reactivex.internal.operators.observable.ObservableMapNotification",
     "io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription",
     "io.reactivex.internal.operators.completable.CompletableAndThenCompletable$NextObserver",
     "io.reactivex.internal.operators.single.SingleDematerialize",
     "io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver$ConsumerIndexHolder",
     "io.reactivex.exceptions.Exceptions",
     "io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver",
     "io.reactivex.internal.disposables.DisposableHelper",
     "io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver",
     "io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver",
     "io.reactivex.internal.functions.Functions$NotificationOnNext",
     "io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapSingleObserver",
     "io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableSingleMaybe",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayCallable",
     "io.reactivex.internal.operators.maybe.MaybeFromSingle",
     "io.reactivex.functions.BiPredicate",
     "io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver",
     "io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe",
     "io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport",
     "io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedTimedReplay",
     "io.reactivex.internal.operators.observable.ObservableBlockingSubscribe",
     "io.reactivex.internal.operators.maybe.MaybeFlatten",
     "io.reactivex.internal.operators.completable.CompletableToFlowable",
     "io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable",
     "io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter",
     "io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver",
     "io.reactivex.internal.operators.observable.ObservableOnErrorNext",
     "io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError",
     "io.reactivex.internal.observers.DeferredScalarObserver",
     "io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber",
     "io.reactivex.subjects.ReplaySubject$ReplayDisposable",
     "io.reactivex.internal.schedulers.SchedulerWhen$OnCompletedAction",
     "io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber",
     "io.reactivex.internal.functions.Functions$EqualsPredicate",
     "io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver",
     "io.reactivex.exceptions.CompositeException",
     "io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver",
     "io.reactivex.internal.operators.flowable.FlowableReplay$ScheduledReplayBufferTask",
     "io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber",
     "io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker",
     "io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver",
     "io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable",
     "io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver",
     "io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent",
     "io.reactivex.internal.operators.maybe.MaybeDoFinally",
     "io.reactivex.internal.functions.Functions$FalsePredicate",
     "io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer",
     "io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver",
     "io.reactivex.internal.operators.completable.CompletableFromObservable",
     "io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable",
     "io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable",
     "io.reactivex.internal.operators.observable.ObservableToList$ToListObserver",
     "io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver",
     "io.reactivex.internal.operators.flowable.FlowableRetryWhen",
     "io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker",
     "io.reactivex.internal.operators.flowable.FlowableLimit",
     "io.reactivex.internal.operators.observable.ObservableReplay$ReplaySource",
     "io.reactivex.exceptions.OnErrorNotImplementedException",
     "io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier",
     "io.reactivex.internal.operators.observable.ObservableWindow",
     "io.reactivex.internal.operators.flowable.FlowableTake",
     "io.reactivex.internal.operators.maybe.MaybeObserveOn",
     "io.reactivex.Emitter",
     "io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver",
     "io.reactivex.internal.operators.completable.CompletableUsing",
     "io.reactivex.internal.operators.flowable.FlowableInterval",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver",
     "io.reactivex.subjects.PublishSubject$PublishDisposable",
     "io.reactivex.disposables.SerialDisposable",
     "io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver",
     "io.reactivex.internal.subscriptions.BooleanSubscription",
     "io.reactivex.internal.schedulers.RxThreadFactory$RxCustomThread",
     "io.reactivex.internal.subscribers.QueueDrainSubscriberWip",
     "io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable",
     "io.reactivex.internal.operators.completable.CompletableTimeout",
     "io.reactivex.internal.util.HashMapSupplier",
     "io.reactivex.internal.operators.single.SingleNever",
     "io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable",
     "io.reactivex.Notification",
     "io.reactivex.annotations.NonNull",
     "io.reactivex.internal.subscribers.BasicFuseableSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapNotification",
     "io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber",
     "io.reactivex.internal.queue.SpscArrayQueue",
     "io.reactivex.internal.operators.flowable.FlowableHide",
     "io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterConditionalSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber",
     "io.reactivex.internal.operators.completable.CompletableConcat",
     "io.reactivex.internal.operators.flowable.FlowableTimeoutTimed",
     "io.reactivex.parallel.ParallelTransformer",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable",
     "io.reactivex.internal.functions.Functions$TimestampFunction",
     "io.reactivex.internal.util.EmptyComponent",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapIntoIterable",
     "io.reactivex.internal.operators.completable.CompletableLift",
     "io.reactivex.internal.operators.maybe.MaybeCreate",
     "io.reactivex.schedulers.Schedulers$SingleHolder",
     "io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber",
     "io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver",
     "io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber",
     "io.reactivex.internal.operators.observable.ObservableWithLatestFromMany",
     "io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe",
     "io.reactivex.internal.subscriptions.SubscriptionHelper",
     "io.reactivex.internal.operators.maybe.MaybeLift",
     "io.reactivex.internal.operators.flowable.FlowableJoin",
     "io.reactivex.internal.operators.single.SingleHide",
     "io.reactivex.internal.operators.completable.CompletableNever",
     "io.reactivex.subjects.Subject",
     "io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator",
     "io.reactivex.internal.operators.flowable.FlowableFlattenIterable",
     "io.reactivex.subjects.ReplaySubject$TimedNode",
     "io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver",
     "io.reactivex.internal.operators.maybe.MaybeEqualSingle",
     "io.reactivex.internal.operators.flowable.FlowableMergeWithSingle",
     "io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver",
     "io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable",
     "io.reactivex.internal.operators.completable.CompletableToObservable",
     "io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport",
     "io.reactivex.internal.operators.single.SingleDelay",
     "io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver",
     "io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver",
     "io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableDoAfterNext",
     "io.reactivex.internal.util.AtomicThrowable",
     "io.reactivex.internal.operators.mixed.SingleFlatMapObservable",
     "io.reactivex.internal.operators.observable.ObservablePublish$PublishSource",
     "io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver",
     "io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnError",
     "io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableReduceMaybe",
     "io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection",
     "io.reactivex.observers.DefaultObserver",
     "io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError",
     "io.reactivex.internal.operators.flowable.FlowableRepeatWhen",
     "io.reactivex.internal.operators.flowable.FlowableMapNotification",
     "io.reactivex.annotations.Experimental",
     "io.reactivex.internal.operators.observable.ObservableSingleMaybe",
     "io.reactivex.internal.operators.single.SingleFlatMapIterableObservable",
     "io.reactivex.internal.operators.observable.ObservableZip$ZipObserver",
     "io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber",
     "io.reactivex.internal.functions.Functions$Array6Func",
     "io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber",
     "io.reactivex.internal.schedulers.SingleScheduler",
     "io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver",
     "io.reactivex.internal.observers.CallbackCompletableObserver",
     "io.reactivex.internal.schedulers.AbstractDirectTask",
     "io.reactivex.internal.operators.observable.ObservableReplay$BufferSupplier",
     "io.reactivex.internal.operators.observable.ObservableHide",
     "io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe",
     "io.reactivex.MaybeConverter",
     "io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver",
     "io.reactivex.processors.ReplayProcessor$TimedNode",
     "io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver",
     "io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver",
     "io.reactivex.internal.operators.flowable.FlowableRetryPredicate",
     "io.reactivex.internal.operators.flowable.FlowableDoOnEach",
     "io.reactivex.internal.operators.flowable.FlowableTakeLastOne",
     "io.reactivex.observers.BaseTestConsumer$TestWaitStrategy",
     "io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver",
     "io.reactivex.processors.MulticastProcessor$MulticastSubscription",
     "io.reactivex.internal.functions.Functions$NotificationOnComplete",
     "io.reactivex.internal.operators.observable.ObservableJoin",
     "io.reactivex.internal.operators.observable.ObservableDetach",
     "io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator",
     "io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast",
     "io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver",
     "io.reactivex.internal.operators.single.SingleDoOnSuccess$DoOnSuccess",
     "io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver",
     "io.reactivex.internal.observers.BiConsumerSingleObserver",
     "io.reactivex.internal.schedulers.SchedulerWhen$DelayedAction",
     "io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber",
     "io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver",
     "io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer",
     "io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber",
     "io.reactivex.SingleConverter",
     "io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber",
     "io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher$RailSubscription",
     "io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeIgnoreElement",
     "io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter",
     "io.reactivex.MaybeSource",
     "io.reactivex.internal.operators.maybe.MaybeMergeArray$SimpleQueueWithConsumerIndex",
     "io.reactivex.internal.operators.flowable.FlowableUsing",
     "io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber",
     "io.reactivex.schedulers.Schedulers$IOTask",
     "io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction$WorkerCompletable",
     "io.reactivex.disposables.RunnableDisposable",
     "io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowOperation",
     "io.reactivex.internal.operators.completable.CompletableDetach",
     "io.reactivex.Flowable",
     "io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver",
     "io.reactivex.subscribers.TestSubscriber$EmptySubscriber",
     "io.reactivex.BackpressureStrategy",
     "io.reactivex.internal.operators.completable.CompletableDoFinally",
     "io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber",
     "io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator",
     "io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask",
     "io.reactivex.internal.operators.flowable.FlowableCreate$ErrorAsyncEmitter",
     "io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate",
     "io.reactivex.internal.fuseable.FuseToFlowable",
     "io.reactivex.internal.operators.observable.ObservableConcatWithCompletable",
     "io.reactivex.internal.operators.flowable.FlowableGroupBy$EvictionAction",
     "io.reactivex.internal.operators.maybe.MaybeToSingle",
     "io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver",
     "io.reactivex.internal.operators.maybe.MaybeDoOnTerminate",
     "io.reactivex.Observer",
     "io.reactivex.internal.operators.flowable.FlowableToList",
     "io.reactivex.internal.subscribers.BlockingSubscriber",
     "io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver",
     "io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription",
     "io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer",
     "io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber",
     "io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver",
     "io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber",
     "io.reactivex.internal.subscribers.BlockingBaseSubscriber",
     "io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable",
     "io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$SequentialDispose",
     "io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator",
     "io.reactivex.internal.operators.observable.ObservableTakeLastOne",
     "io.reactivex.exceptions.CompositeException$WrappedPrintStream",
     "io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver",
     "io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$FlowableWithLatestSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter",
     "io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver",
     "io.reactivex.internal.operators.observable.BlockingObservableLatest",
     "io.reactivex.internal.operators.observable.ObservableSerialized",
     "io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver",
     "io.reactivex.internal.operators.single.SingleHide$HideSingleObserver",
     "io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver",
     "io.reactivex.internal.operators.completable.CompletableFromObservable$CompletableFromObservableObserver",
     "io.reactivex.internal.operators.single.SingleDoOnTerminate",
     "io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver",
     "io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver",
     "io.reactivex.internal.operators.observable.ObservableReplay$ReplayBufferSupplier",
     "io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver",
     "io.reactivex.internal.operators.flowable.FlowableFromArray",
     "io.reactivex.functions.BooleanSupplier",
     "io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty",
     "io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription",
     "io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver",
     "io.reactivex.internal.operators.maybe.MaybeTimer",
     "io.reactivex.internal.functions.Functions$Array4Func",
     "io.reactivex.Scheduler",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryInnerObserver",
     "io.reactivex.internal.operators.flowable.FlowableGroupJoin",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapSingleObserver",
     "io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableConcatMap",
     "io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver",
     "io.reactivex.internal.operators.single.SingleSubscribeOn",
     "io.reactivex.functions.Action",
     "io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber",
     "io.reactivex.ObservableOperator",
     "io.reactivex.observers.LambdaConsumerIntrospection",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax",
     "io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayFunction",
     "io.reactivex.internal.util.AppendOnlyLinkedArrayList",
     "io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext",
     "io.reactivex.schedulers.Schedulers$IoHolder",
     "io.reactivex.internal.operators.single.SingleContains$ContainsSingleObserver",
     "io.reactivex.internal.operators.observable.ObservableZipIterable",
     "io.reactivex.internal.operators.flowable.FlowableSequenceEqual",
     "io.reactivex.internal.fuseable.ScalarCallable",
     "io.reactivex.internal.operators.single.SingleEquals$InnerObserver",
     "io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver",
     "io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe",
     "io.reactivex.exceptions.UndeliverableException",
     "io.reactivex.internal.operators.flowable.FlowableIntervalRange",
     "io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver",
     "io.reactivex.internal.observers.BlockingBaseObserver",
     "io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter",
     "io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber",
     "io.reactivex.internal.operators.completable.CompletableHide",
     "io.reactivex.functions.LongConsumer",
     "io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool",
     "io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver",
     "io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnComplete",
     "io.reactivex.schedulers.Schedulers$NewThreadTask",
     "io.reactivex.processors.MulticastProcessor",
     "io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter",
     "io.reactivex.internal.operators.flowable.FlowableSubscribeOn",
     "io.reactivex.internal.util.ErrorMode",
     "io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle",
     "io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner",
     "io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver",
     "io.reactivex.internal.operators.single.SingleLift",
     "io.reactivex.FlowableSubscriber",
     "io.reactivex.observers.DisposableObserver",
     "io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber",
     "io.reactivex.internal.operators.single.SingleEquals",
     "io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary",
     "io.reactivex.internal.operators.flowable.FlowableCreate$1",
     "io.reactivex.observers.SerializedObserver",
     "io.reactivex.internal.operators.flowable.FlowableDetach",
     "io.reactivex.internal.operators.flowable.FlowableDematerialize",
     "io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable",
     "io.reactivex.internal.operators.flowable.FlowableLift",
     "io.reactivex.internal.operators.observable.ObservableOnErrorReturn",
     "io.reactivex.internal.operators.flowable.FlowableMapPublisher",
     "io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver",
     "io.reactivex.internal.functions.Functions$NotificationOnError",
     "io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError",
     "io.reactivex.exceptions.MissingBackpressureException",
     "io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable",
     "io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle",
     "io.reactivex.internal.operators.single.SingleUsing",
     "io.reactivex.processors.BehaviorProcessor$BehaviorSubscription",
     "io.reactivex.internal.operators.observable.ObservableDebounce",
     "io.reactivex.subscribers.DefaultSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement",
     "io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber",
     "io.reactivex.internal.operators.observable.BlockingObservableNext",
     "io.reactivex.internal.operators.observable.ObservableCombineLatest",
     "io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable",
     "io.reactivex.internal.operators.flowable.FlowableGenerate",
     "io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableCollectSingle",
     "io.reactivex.internal.operators.observable.ObservableScalarXMap",
     "io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber",
     "io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable",
     "io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver",
     "io.reactivex.internal.operators.observable.ObservableToList",
     "io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter",
     "io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator",
     "io.reactivex.schedulers.Schedulers",
     "io.reactivex.internal.schedulers.SchedulerWhen$ImmediateAction",
     "io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber",
     "io.reactivex.internal.util.QueueDrain",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureError",
     "io.reactivex.internal.operators.maybe.MaybePeek",
     "io.reactivex.internal.operators.observable.ObservableBufferExactBoundary",
     "io.reactivex.internal.operators.observable.ObservableMap$MapObserver",
     "io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBufferEmit",
     "io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedEmitLast",
     "io.reactivex.internal.operators.observable.ObservableSequenceEqual",
     "io.reactivex.internal.operators.single.SingleFromPublisher",
     "io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask",
     "io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber",
     "io.reactivex.observers.SafeObserver",
     "io.reactivex.internal.operators.observable.ObservableThrottleLatest",
     "io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver",
     "io.reactivex.internal.operators.observable.ObservableMergeWithCompletable",
     "io.reactivex.internal.functions.Functions$ToMapKeySelector",
     "io.reactivex.flowables.ConnectableFlowable",
     "io.reactivex.internal.operators.observable.ObservableTimeoutTimed",
     "io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator",
     "io.reactivex.internal.operators.maybe.MaybeMaterialize",
     "io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver",
     "io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableDistinct",
     "io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver",
     "io.reactivex.internal.operators.maybe.MaybeEmpty",
     "io.reactivex.internal.operators.single.SingleDoOnSuccess",
     "io.reactivex.functions.Cancellable",
     "io.reactivex.internal.operators.observable.ObservableLift",
     "io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver",
     "io.reactivex.internal.operators.completable.CompletableFromAction",
     "io.reactivex.internal.operators.observable.ObservableFromFuture",
     "io.reactivex.internal.operators.observable.ObservableDematerialize",
     "io.reactivex.functions.Function",
     "io.reactivex.internal.schedulers.SchedulerWhen$SubscribedDisposable",
     "io.reactivex.internal.operators.observable.ObservableCollectSingle",
     "io.reactivex.internal.util.NotificationLite$ErrorNotification",
     "io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany",
     "io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver",
     "io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableEmpty",
     "io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$Completion",
     "io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnComplete",
     "io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver",
     "io.reactivex.internal.functions.Functions$ClassFilter",
     "io.reactivex.internal.operators.observable.ObservableIgnoreElements",
     "io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate",
     "io.reactivex.internal.operators.observable.ObservableReplay$DisposeConsumer",
     "io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeOnErrorComplete",
     "io.reactivex.internal.disposables.DisposableContainer",
     "io.reactivex.internal.operators.flowable.FlowableCache",
     "io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver",
     "io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver",
     "io.reactivex.internal.functions.Functions$TruePredicate",
     "io.reactivex.internal.operators.completable.CompletableOnErrorComplete$OnError",
     "io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber",
     "io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver",
     "io.reactivex.internal.schedulers.ImmediateThinScheduler$ImmediateThinWorker",
     "io.reactivex.internal.operators.mixed.FlowableConcatMapSingle",
     "io.reactivex.internal.util.SuppressAnimalSniffer",
     "io.reactivex.internal.operators.single.SingleDoOnEvent",
     "io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber",
     "io.reactivex.subjects.AsyncSubject$AsyncDisposable",
     "io.reactivex.internal.operators.flowable.FlowableTimeInterval",
     "io.reactivex.schedulers.Timed",
     "io.reactivex.internal.operators.observable.ObservableGroupJoin$JoinSupport",
     "io.reactivex.internal.operators.completable.CompletableCreate$Emitter",
     "io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber",
     "io.reactivex.internal.operators.observable.ObservableReplay$ScheduledReplaySupplier",
     "io.reactivex.internal.operators.parallel.ParallelMapTry",
     "io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer",
     "io.reactivex.internal.fuseable.QueueFuseable",
     "io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterConditionalSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber",
     "io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator",
     "io.reactivex.internal.operators.parallel.ParallelPeek",
     "io.reactivex.internal.operators.flowable.FlowablePublishMulticast",
     "io.reactivex.internal.schedulers.NewThreadWorker",
     "io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport",
     "io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable",
     "io.reactivex.subjects.BehaviorSubject",
     "io.reactivex.internal.operators.mixed.ObservableConcatMapSingle",
     "io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver",
     "io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter",
     "io.reactivex.internal.operators.mixed.MaybeFlatMapObservable",
     "io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeFromFuture",
     "io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver",
     "io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleGenerator",
     "io.reactivex.internal.operators.maybe.MaybeConcatIterable",
     "io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator",
     "io.reactivex.observables.GroupedObservable",
     "io.reactivex.internal.functions.Functions$Array8Func",
     "io.reactivex.processors.PublishProcessor$PublishSubscription",
     "io.reactivex.internal.operators.single.SingleDoOnError",
     "io.reactivex.internal.observers.EmptyCompletableObserver",
     "io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver",
     "io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterSubscriber",
     "io.reactivex.internal.operators.observable.ObservableRefCount",
     "io.reactivex.internal.operators.completable.CompletableMaterialize",
     "io.reactivex.internal.operators.observable.ObservableAllSingle",
     "io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber",
     "io.reactivex.internal.observers.LambdaObserver",
     "io.reactivex.internal.operators.maybe.MaybeZipArray",
     "io.reactivex.internal.util.BlockingIgnoringReceiver",
     "io.reactivex.internal.observers.ResumeSingleObserver",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber",
     "io.reactivex.internal.subscribers.SubscriberResourceWrapper",
     "io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver",
     "io.reactivex.internal.operators.observable.ObservableReduceMaybe",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy",
     "io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription",
     "io.reactivex.internal.operators.observable.ObservableDoAfterNext",
     "io.reactivex.internal.operators.maybe.MaybeErrorCallable",
     "io.reactivex.internal.operators.observable.ObservablePublishSelector$SourceObserver",
     "io.reactivex.internal.operators.single.SingleDoFinally",
     "io.reactivex.internal.operators.flowable.FlowableReplay$SizeBoundReplayBuffer",
     "io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer",
     "io.reactivex.internal.operators.single.SingleObserveOn",
     "io.reactivex.functions.Function3",
     "io.reactivex.internal.fuseable.FuseToMaybe",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnError",
     "io.reactivex.functions.Function5",
     "io.reactivex.functions.Function4",
     "io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber",
     "io.reactivex.functions.Function7",
     "io.reactivex.functions.Function6",
     "io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver",
     "io.reactivex.functions.Function9",
     "io.reactivex.functions.Function8",
     "io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$FallbackSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver",
     "io.reactivex.internal.operators.completable.CompletableDelay",
     "io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver",
     "io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver",
     "io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove",
     "io.reactivex.internal.subscribers.QueueDrainSubscriberPad2",
     "io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable",
     "io.reactivex.internal.subscribers.QueueDrainSubscriberPad0",
     "io.reactivex.internal.operators.observable.ObservableWithLatestFrom",
     "io.reactivex.internal.util.NotificationLite$DisposableNotification",
     "io.reactivex.internal.subscribers.QueueDrainSubscriberPad3",
     "io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast",
     "io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver",
     "io.reactivex.internal.subscribers.QueueDrainSubscriberPad4",
     "io.reactivex.internal.util.LinkedArrayList",
     "io.reactivex.internal.operators.parallel.ParallelConcatMap",
     "io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer",
     "io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver",
     "io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription",
     "io.reactivex.internal.functions.Functions$CastToClass",
     "io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber",
     "io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator",
     "io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber",
     "io.reactivex.processors.BehaviorProcessor",
     "io.reactivex.internal.schedulers.ScheduledRunnable",
     "io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber",
     "io.reactivex.subjects.SerializedSubject",
     "io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver",
     "io.reactivex.internal.operators.observable.ObserverResourceWrapper",
     "io.reactivex.internal.operators.mixed.CompletableAndThenObservable",
     "io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableDebounceTimed",
     "io.reactivex.internal.operators.flowable.FlowablePublishClassic",
     "io.reactivex.internal.operators.completable.CompletableTimer",
     "io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber",
     "io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream",
     "io.reactivex.internal.queue.MpscLinkedQueue",
     "io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$SubjectWork",
     "io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapSupport",
     "io.reactivex.internal.observers.BlockingLastObserver",
     "io.reactivex.processors.SerializedProcessor",
     "io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber",
     "io.reactivex.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate",
     "io.reactivex.internal.subscribers.ForEachWhileSubscriber",
     "io.reactivex.internal.operators.completable.CompletableAndThenCompletable",
     "io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn",
     "io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver",
     "io.reactivex.internal.subscribers.BlockingFirstSubscriber",
     "io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver",
     "io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber",
     "io.reactivex.internal.util.Pow2",
     "io.reactivex.internal.operators.parallel.ParallelFilterTry$1",
     "io.reactivex.internal.operators.completable.CompletableObserveOn",
     "io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber",
     "io.reactivex.internal.operators.completable.CompletableFromRunnable",
     "io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber",
     "io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver",
     "io.reactivex.internal.schedulers.InstantPeriodicTask",
     "io.reactivex.internal.operators.flowable.FlowableBufferTimed",
     "io.reactivex.internal.observers.FutureSingleObserver",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$CompletionTask",
     "io.reactivex.internal.operators.flowable.FlowableRepeat",
     "io.reactivex.MaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBufferTask",
     "io.reactivex.internal.subscriptions.DeferredScalarSubscription",
     "io.reactivex.internal.operators.maybe.MaybeUsing",
     "io.reactivex.internal.operators.parallel.ParallelFilter",
     "io.reactivex.internal.operators.observable.ObservableLastMaybe",
     "io.reactivex.internal.operators.completable.CompletableConcatIterable",
     "io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableOnErrorNext",
     "io.reactivex.internal.operators.flowable.FlowableReplay$DefaultUnboundedFactory",
     "io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter",
     "io.reactivex.ObservableEmitter",
     "io.reactivex.internal.operators.flowable.FlowableCount",
     "io.reactivex.Scheduler$DisposeTask",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver",
     "io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver",
     "io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver",
     "io.reactivex.observers.BaseTestConsumer$1",
     "io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher",
     "io.reactivex.internal.operators.observable.ObservableFromArray",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$TimedReplay",
     "io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver",
     "io.reactivex.MaybeEmitter",
     "io.reactivex.internal.operators.flowable.FlowableConcatWithSingle",
     "io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer",
     "io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop",
     "io.reactivex.internal.operators.observable.ObservableAny",
     "io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber",
     "io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError",
     "io.reactivex.internal.util.OpenHashSet",
     "io.reactivex.internal.operators.flowable.FlowableSamplePublisher",
     "io.reactivex.schedulers.Schedulers$SingleTask",
     "io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty",
     "io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutSupport",
     "io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator",
     "io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver",
     "io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable$DisposableConsumer",
     "io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber",
     "io.reactivex.internal.operators.observable.ObservableHide$HideDisposable",
     "io.reactivex.internal.operators.observable.ObservableObserveOn",
     "io.reactivex.internal.observers.BasicQueueDisposable",
     "io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver",
     "io.reactivex.internal.operators.single.SingleMaterialize",
     "io.reactivex.processors.FlowableProcessor",
     "io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver",
     "io.reactivex.observers.ResourceObserver",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper",
     "io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber",
     "io.reactivex.internal.operators.single.SingleCache$CacheDisposable",
     "io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator",
     "io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable",
     "io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction",
     "io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver",
     "io.reactivex.internal.operators.single.SingleDoAfterSuccess",
     "io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable",
     "io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable",
     "io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutTask",
     "io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber",
     "io.reactivex.subjects.SingleSubject$SingleDisposable",
     "io.reactivex.internal.operators.flowable.FlowableMaterialize",
     "io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver",
     "io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver",
     "io.reactivex.internal.disposables.ListCompositeDisposable",
     "io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver",
     "io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver",
     "io.reactivex.CompletableOnSubscribe",
     "io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver",
     "io.reactivex.internal.operators.observable.ObservableElementAtMaybe",
     "io.reactivex.internal.operators.observable.ObservableDoOnEach",
     "io.reactivex.internal.operators.observable.ObservableIntervalRange",
     "io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription",
     "io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable",
     "io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber",
     "io.reactivex.schedulers.Schedulers$NewThreadHolder",
     "io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber",
     "io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver",
     "io.reactivex.internal.operators.observable.ObservableFromIterable",
     "io.reactivex.internal.operators.observable.ObservableDefer",
     "io.reactivex.internal.functions.Functions$OnErrorMissingConsumer",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver",
     "io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription",
     "io.reactivex.internal.util.ArrayListSupplier",
     "io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver",
     "io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver",
     "io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableReplay$SizeBoundReplayBuffer",
     "io.reactivex.internal.operators.single.SingleFlatMapCompletable",
     "io.reactivex.internal.operators.observable.ObservableTakeLastTimed",
     "io.reactivex.internal.operators.flowable.FlowableLastSingle",
     "io.reactivex.internal.operators.observable.ObservableSkipWhile",
     "io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription",
     "io.reactivex.FlowableOperator",
     "io.reactivex.internal.schedulers.NonBlockingThread",
     "io.reactivex.internal.operators.flowable.FlowableFromPublisher",
     "io.reactivex.SingleOperator",
     "io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver",
     "io.reactivex.internal.operators.parallel.ParallelMap",
     "io.reactivex.internal.operators.completable.CompletableErrorSupplier",
     "io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver",
     "io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver",
     "io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher",
     "io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier",
     "io.reactivex.internal.subscribers.FutureSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeCallbackObserver",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber",
     "io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver",
     "io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask",
     "io.reactivex.internal.operators.flowable.FlowableSwitchMap",
     "io.reactivex.subscribers.ResourceSubscriber",
     "io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver",
     "io.reactivex.internal.operators.maybe.MaybeDetach",
     "io.reactivex.annotations.CheckReturnValue",
     "io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver",
     "io.reactivex.subscribers.TestSubscriber",
     "io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver",
     "io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver",
     "io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver",
     "io.reactivex.internal.operators.flowable.FlowableError",
     "io.reactivex.internal.operators.maybe.MaybeFilterSingle",
     "io.reactivex.subjects.UnicastSubject",
     "io.reactivex.internal.functions.Functions$ErrorConsumer",
     "io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver",
     "io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber",
     "io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver",
     "io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier",
     "io.reactivex.internal.operators.single.SingleDoOnDispose",
     "io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber",
     "io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver",
     "io.reactivex.internal.operators.flowable.FlowableMap$MapConditionalSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber",
     "io.reactivex.internal.operators.single.SingleDelayWithObservable",
     "io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver",
     "io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$DoOnTerminate",
     "io.reactivex.internal.operators.mixed.ScalarXMapZHelper",
     "io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SamplerObserver",
     "io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeTask",
     "io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber",
     "io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator",
     "io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeNever",
     "io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer",
     "io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber",
     "io.reactivex.internal.operators.observable.ObservableFlatMapSingle",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber",
     "io.reactivex.internal.operators.single.SingleCreate$Emitter",
     "io.reactivex.internal.operators.flowable.FlowableDebounce",
     "io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeContains",
     "io.reactivex.internal.operators.flowable.FlowableBufferBoundary",
     "io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher",
     "io.reactivex.internal.disposables.EmptyDisposable",
     "io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver",
     "io.reactivex.internal.operators.completable.CompletablePeek",
     "io.reactivex.internal.subscribers.BlockingLastSubscriber",
     "io.reactivex.internal.observers.FutureObserver",
     "io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle",
     "io.reactivex.internal.schedulers.SchedulerPoolFactory$PurgeProperties",
     "io.reactivex.internal.operators.observable.ObservableTimer",
     "io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable",
     "io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableDistinct",
     "io.reactivex.internal.operators.observable.ObservableReplay$UnBoundedFactory",
     "io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber",
     "io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferBoundaryObserver",
     "io.reactivex.internal.operators.flowable.FlowableAutoConnect",
     "io.reactivex.subjects.SingleSubject",
     "io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber",
     "io.reactivex.internal.operators.completable.CompletableOnErrorComplete",
     "io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector",
     "io.reactivex.internal.functions.Functions$Array3Func",
     "io.reactivex.internal.operators.flowable.FlowableReplay$ConnectableFlowableReplay",
     "io.reactivex.internal.subscribers.LambdaSubscriber",
     "io.reactivex.internal.operators.single.SingleCache",
     "io.reactivex.internal.subscribers.BoundedSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber",
     "io.reactivex.internal.operators.observable.ObservableWindowTimed",
     "io.reactivex.internal.operators.maybe.MaybeFilter",
     "io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription",
     "io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnComplete",
     "io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnConditionalSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableGroupBy$State",
     "io.reactivex.internal.operators.flowable.FlowableReduceWithSingle",
     "io.reactivex.internal.util.QueueDrainHelper",
     "io.reactivex.internal.operators.single.SingleDoOnSubscribe",
     "io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber",
     "io.reactivex.SingleSource",
     "io.reactivex.internal.operators.single.SingleDoOnError$DoOnError",
     "io.reactivex.internal.operators.flowable.FlowableBuffer",
     "io.reactivex.internal.operators.maybe.MaybeHide",
     "io.reactivex.internal.operators.flowable.FlowableCreate$DropAsyncEmitter",
     "io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver",
     "io.reactivex.internal.operators.flowable.FlowableConcatMapEager",
     "io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber",
     "io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver",
     "io.reactivex.internal.operators.observable.ObservableReplay$ReplayBuffer",
     "io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber",
     "io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterable",
     "io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver",
     "io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver",
     "io.reactivex.internal.operators.observable.ObservableTakeUntil",
     "io.reactivex.internal.operators.observable.ObservableTake$TakeObserver",
     "io.reactivex.internal.operators.maybe.MaybeDelay",
     "io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeOnErrorNext",
     "io.reactivex.internal.fuseable.HasUpstreamCompletableSource",
     "io.reactivex.internal.util.NotificationLite$SubscriptionNotification",
     "io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber",
     "io.reactivex.internal.operators.completable.CompletableMerge",
     "io.reactivex.internal.functions.Functions$EmptyAction",
     "io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver",
     "io.reactivex.internal.operators.observable.ObservableElementAtSingle",
     "io.reactivex.internal.operators.flowable.FlowableAllSingle",
     "io.reactivex.processors.ReplayProcessor$ReplaySubscription",
     "io.reactivex.internal.operators.observable.ObservableRepeat",
     "io.reactivex.internal.operators.maybe.MaybeIsEmpty",
     "io.reactivex.internal.operators.flowable.FlowableDefer",
     "io.reactivex.internal.operators.flowable.FlowableFromCallable",
     "io.reactivex.internal.operators.completable.CompletableCreate",
     "io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe",
     "io.reactivex.internal.operators.observable.ObservableError",
     "io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged",
     "io.reactivex.CompletableOperator",
     "io.reactivex.internal.operators.flowable.FlowablePublishAlt",
     "io.reactivex.ObservableSource",
     "io.reactivex.internal.operators.flowable.FlowableElementAt",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver",
     "io.reactivex.internal.functions.Functions$Identity",
     "io.reactivex.internal.operators.mixed.CompletableAndThenPublisher",
     "io.reactivex.annotations.Nullable",
     "io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription",
     "io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber",
     "io.reactivex.internal.operators.mixed.MaterializeSingleObserver",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableCache$Node",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer",
     "io.reactivex.functions.Consumer",
     "io.reactivex.annotations.BackpressureKind",
     "io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber",
     "io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber",
     "io.reactivex.internal.operators.single.SingleCreate",
     "io.reactivex.internal.operators.observable.ObservableConcatMap",
     "io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate",
     "io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver",
     "io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged",
     "io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver$OnComplete",
     "io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther",
     "io.reactivex.internal.queue.SpscLinkedArrayQueue",
     "io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection",
     "io.reactivex.internal.disposables.ResettableConnectable",
     "io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver",
     "io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver",
     "io.reactivex.disposables.Disposables",
     "io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver",
     "io.reactivex.internal.operators.single.SingleInternalHelper",
     "io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe",
     "io.reactivex.internal.operators.observable.BlockingObservableIterable",
     "io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber",
     "io.reactivex.internal.util.VolatileSizeArrayList",
     "io.reactivex.subjects.CompletableSubject",
     "io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription",
     "io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue",
     "io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription",
     "io.reactivex.observers.ResourceCompletableObserver",
     "io.reactivex.subjects.ReplaySubject$Node",
     "io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver",
     "io.reactivex.internal.operators.single.SingleDelay$Delay",
     "io.reactivex.internal.operators.parallel.ParallelJoin",
     "io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable",
     "io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator",
     "io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation",
     "io.reactivex.internal.operators.parallel.ParallelRunOn",
     "io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate",
     "io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable",
     "io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableRefCount",
     "io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver$DisposeTask",
     "io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker",
     "io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber",
     "io.reactivex.schedulers.Schedulers$ComputationTask",
     "io.reactivex.internal.subscriptions.BasicIntQueueSubscription",
     "io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver",
     "io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber",
     "io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable",
     "io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable",
     "io.reactivex.internal.fuseable.SimpleQueue",
     "io.reactivex.internal.operators.maybe.MaybeFromRunnable",
     "io.reactivex.internal.operators.flowable.FlowableMap",
     "io.reactivex.internal.operators.completable.CompletableDoOnEvent$DoOnEvent",
     "io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver",
     "io.reactivex.internal.util.HalfSerializer",
     "io.reactivex.internal.operators.observable.ObservableSampleTimed",
     "io.reactivex.internal.operators.flowable.FlowableRepeatWhen$RepeatWhenSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber",
     "io.reactivex.internal.operators.flowable.BlockingFlowableLatest",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe",
     "io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber",
     "io.reactivex.observers.TestObserver",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundary",
     "io.reactivex.internal.operators.flowable.FlowableReplay$Node",
     "io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver",
     "io.reactivex.disposables.CompositeDisposable",
     "io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber",
     "io.reactivex.internal.util.ExceptionHelper$Termination",
     "io.reactivex.internal.operators.observable.ObservableReplay$Node",
     "io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber",
     "io.reactivex.internal.operators.parallel.ParallelReduceFull",
     "io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription",
     "io.reactivex.internal.operators.completable.CompletableMergeArray",
     "io.reactivex.internal.schedulers.ExecutorScheduler",
     "io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast",
     "io.reactivex.internal.operators.flowable.FlowableCountSingle",
     "io.reactivex.internal.operators.flowable.FlowableSkipLastTimed",
     "io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver",
     "io.reactivex.internal.functions.Functions$MaxRequestSubscription",
     "io.reactivex.internal.operators.observable.ObservableSkipLastTimed",
     "io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver",
     "io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate",
     "io.reactivex.internal.util.BackpressureHelper",
     "io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe",
     "io.reactivex.internal.operators.observable.ObservableCount",
     "io.reactivex.internal.operators.completable.CompletableEmpty",
     "io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver",
     "io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayFunction",
     "io.reactivex.internal.operators.flowable.BlockingFlowableNext",
     "io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter",
     "io.reactivex.internal.operators.flowable.FlowableCollect",
     "io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream",
     "io.reactivex.internal.operators.observable.ObservableBufferBoundary",
     "io.reactivex.internal.operators.single.SingleFlatMap",
     "io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver",
     "io.reactivex.internal.operators.single.SingleFromCallable",
     "io.reactivex.internal.operators.single.SingleJust",
     "io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver",
     "io.reactivex.internal.operators.single.SingleError",
     "io.reactivex.Scheduler$Worker",
     "io.reactivex.internal.operators.observable.ObservableSkip",
     "io.reactivex.internal.operators.single.SingleFlatMapMaybe",
     "io.reactivex.internal.operators.observable.ObservableSkipUntil",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnNext",
     "io.reactivex.internal.functions.Functions$ArrayListCapacityCallable",
     "io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber",
     "io.reactivex.internal.functions.Functions$Array7Func",
     "io.reactivex.observers.ResourceSingleObserver",
     "io.reactivex.schedulers.Schedulers$ComputationHolder",
     "io.reactivex.internal.operators.parallel.ParallelDoOnNextTry",
     "io.reactivex.internal.operators.flowable.FlowableTakeWhile",
     "io.reactivex.internal.functions.Functions$NaturalObjectComparator",
     "io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator",
     "io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundaryObserver",
     "io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeToObservable",
     "io.reactivex.subjects.AsyncSubject",
     "io.reactivex.annotations.BackpressureSupport",
     "io.reactivex.internal.operators.single.SingleTimer$TimerDisposable",
     "io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver",
     "io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable",
     "io.reactivex.internal.operators.single.SingleDelayWithSingle",
     "io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator",
     "io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber",
     "io.reactivex.internal.util.NotificationLite",
     "io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber",
     "io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver",
     "io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver",
     "io.reactivex.schedulers.SchedulerRunnableIntrospection",
     "io.reactivex.internal.operators.flowable.FlowableJust",
     "io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableRangeLong",
     "io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver",
     "io.reactivex.internal.operators.observable.ObservableFilter",
     "io.reactivex.internal.operators.maybe.MaybeCache",
     "io.reactivex.internal.functions.Functions$ToMapKeyValueSelector",
     "io.reactivex.internal.operators.observable.ObservableJust",
     "io.reactivex.internal.operators.flowable.FlowableSingleSingle",
     "io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable",
     "io.reactivex.internal.operators.observable.ObservableReplay",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$1",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerInner",
     "io.reactivex.internal.schedulers.NewThreadScheduler",
     "io.reactivex.internal.operators.flowable.FlowableEmpty",
     "io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver",
     "io.reactivex.internal.observers.DisposableLambdaObserver",
     "io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber",
     "io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver",
     "io.reactivex.internal.operators.completable.CompletableError",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedReplayCallable",
     "io.reactivex.internal.operators.flowable.FlowableFilter$FilterSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableScanSeed",
     "io.reactivex.internal.operators.completable.CompletableAmb$Amb",
     "io.reactivex.internal.operators.observable.ObservableConcatMapEager",
     "io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver",
     "io.reactivex.internal.observers.SubscriberCompletableObserver",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber",
     "io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable",
     "io.reactivex.internal.operators.observable.ObservableAnySingle",
     "io.reactivex.internal.operators.observable.ObservableRange",
     "io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver",
     "io.reactivex.internal.operators.maybe.MaybeDoOnEvent",
     "io.reactivex.internal.functions.Functions$ListSorter",
     "io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator",
     "io.reactivex.internal.operators.flowable.FlowableThrottleLatest",
     "io.reactivex.internal.operators.completable.CompletableToSingle",
     "io.reactivex.internal.operators.observable.ObservableBuffer",
     "io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver",
     "io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver",
     "io.reactivex.internal.operators.parallel.ParallelFilter$BaseFilterSubscriber",
     "io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver",
     "io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator",
     "io.reactivex.internal.operators.completable.CompletableFromPublisher",
     "io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber",
     "io.reactivex.subscribers.DisposableSubscriber",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$ItemDelayFunction",
     "io.reactivex.observers.ResourceMaybeObserver",
     "io.reactivex.internal.operators.parallel.ParallelCollect",
     "io.reactivex.internal.operators.observable.ObservableRepeatWhen",
     "io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber",
     "io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableFlatMap",
     "io.reactivex.internal.subscriptions.AsyncSubscription",
     "io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber",
     "io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer",
     "io.reactivex.internal.operators.observable.ObservableFromCallable",
     "io.reactivex.internal.operators.flowable.FlowableCreate",
     "io.reactivex.internal.operators.observable.ObservableDoFinally",
     "io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable",
     "io.reactivex.internal.operators.flowable.FlowableSkip",
     "io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeCount",
     "io.reactivex.internal.operators.single.SingleZipArray$SingletonArrayFunc",
     "io.reactivex.internal.operators.flowable.FlowableScalarXMap",
     "io.reactivex.internal.util.ExceptionHelper",
     "io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber",
     "io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver",
     "io.reactivex.internal.operators.observable.ObservableScan",
     "io.reactivex.internal.schedulers.ScheduledDirectTask",
     "io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair",
     "io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver",
     "io.reactivex.internal.operators.completable.CompletableFromSingle$CompletableFromSingleObserver",
     "io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapMaybeObserver",
     "io.reactivex.FlowableEmitter",
     "io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver",
     "io.reactivex.internal.disposables.CancellableDisposable",
     "io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableTimeout",
     "io.reactivex.CompletableSource",
     "io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber",
     "io.reactivex.internal.schedulers.ComputationScheduler",
     "io.reactivex.internal.operators.single.SingleMap",
     "io.reactivex.internal.functions.Functions$Array5Func",
     "io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver",
     "io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnNext",
     "io.reactivex.internal.util.BlockingHelper",
     "io.reactivex.internal.operators.flowable.FlowableZip",
     "io.reactivex.internal.operators.observable.AbstractObservableWithUpstream",
     "io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver",
     "io.reactivex.SingleEmitter",
     "io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$InnerObserver",
     "io.reactivex.internal.schedulers.SchedulerPoolFactory",
     "io.reactivex.internal.observers.BasicFuseableObserver",
     "io.reactivex.internal.operators.observable.ObservableAll$AllObserver",
     "io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver",
     "io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber",
     "io.reactivex.processors.UnicastProcessor",
     "io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver",
     "io.reactivex.internal.operators.single.SingleResumeNext",
     "io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableIgnoreElements",
     "io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker",
     "io.reactivex.FlowableOnSubscribe",
     "io.reactivex.parallel.ParallelFlowableConverter",
     "io.reactivex.internal.schedulers.IoScheduler$ThreadWorker",
     "io.reactivex.internal.operators.observable.ObservableCache",
     "io.reactivex.internal.operators.completable.CompletableMergeIterable",
     "io.reactivex.internal.operators.maybe.MaybeZipIterable$SingletonArrayFunc",
     "io.reactivex.internal.operators.observable.ObservableSkipLast",
     "io.reactivex.internal.operators.flowable.FlowableSerialized",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleBiGenerator",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt",
     "io.reactivex.internal.operators.observable.ObservableZip",
     "io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver",
     "io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher",
     "io.reactivex.internal.operators.single.SingleDefer",
     "io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher",
     "io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver",
     "io.reactivex.internal.subscribers.StrictSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber",
     "io.reactivex.internal.operators.observable.ObservableFlatMapMaybe",
     "io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber",
     "io.reactivex.internal.fuseable.SimplePlainQueue",
     "io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable",
     "io.reactivex.internal.util.SorterFunction",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver",
     "io.reactivex.internal.operators.completable.CompletableDelay$Delay",
     "io.reactivex.internal.operators.flowable.FlowableElementAtSingle",
     "io.reactivex.subjects.ReplaySubject$ReplayBuffer",
     "io.reactivex.internal.operators.flowable.FlowableRetryWhen$RetryWhenSubscriber",
     "io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver",
     "io.reactivex.internal.operators.single.SingleDelay$Delay$OnError",
     "io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver",
     "io.reactivex.internal.operators.completable.CompletableAmb",
     "io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber",
     "io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedReplayCallable",
     "io.reactivex.internal.operators.observable.ObservableNever",
     "io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber",
     "io.reactivex.internal.schedulers.ImmediateThinScheduler",
     "io.reactivex.internal.operators.maybe.MaybeToFlowable",
     "io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber",
     "io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver",
     "io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter",
     "io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableFromObservable",
     "io.reactivex.internal.operators.completable.CompletableFromSingle",
     "io.reactivex.internal.operators.completable.CompletableDefer",
     "io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver",
     "io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator",
     "io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver",
     "io.reactivex.internal.operators.observable.ObservableReduceWithSingle",
     "io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerOuter",
     "io.reactivex.internal.operators.observable.ObservableMaterialize",
     "io.reactivex.internal.operators.flowable.FlowableTakeLastTimed",
     "io.reactivex.subscribers.SafeSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableScan",
     "io.reactivex.internal.operators.observable.ObservableRetryBiPredicate",
     "io.reactivex.CompletableConverter",
     "io.reactivex.functions.BiFunction",
     "io.reactivex.MaybeOnSubscribe",
     "io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver",
     "io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver",
     "io.reactivex.internal.operators.maybe.MaybeAmb",
     "io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver",
     "io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver",
     "io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver",
     "io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver",
     "io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable",
     "io.reactivex.FlowableTransformer",
     "io.reactivex.internal.functions.Functions$NaturalComparator",
     "io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast",
     "io.reactivex.internal.operators.observable.ObservableLastSingle",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction",
     "io.reactivex.internal.operators.flowable.BlockingFlowableIterable",
     "io.reactivex.internal.operators.single.SingleTimeout",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest",
     "io.reactivex.internal.operators.flowable.FlowableRange$RangeConditionalSubscription",
     "io.reactivex.ObservableTransformer",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable",
     "io.reactivex.internal.operators.single.SingleFromUnsafeSource",
     "io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver",
     "io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver",
     "io.reactivex.internal.operators.observable.ObservableSwitchMap",
     "io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber",
     "io.reactivex.Maybe",
     "io.reactivex.flowables.GroupedFlowable",
     "io.reactivex.subjects.CompletableSubject$CompletableDisposable",
     "io.reactivex.internal.operators.flowable.FlowableAnySingle",
     "io.reactivex.internal.schedulers.RxThreadFactory",
     "io.reactivex.internal.operators.flowable.FlowableTakeLast",
     "io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver",
     "io.reactivex.internal.util.MergerBiFunction",
     "io.reactivex.internal.operators.single.SingleDelay$Delay$OnSuccess",
     "io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver",
     "io.reactivex.internal.disposables.SequentialDisposable",
     "io.reactivex.disposables.SubscriptionDisposable",
     "io.reactivex.internal.operators.observable.ObservableFlatMap",
     "io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver",
     "io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber",
     "io.reactivex.internal.operators.single.SingleDoAfterTerminate",
     "io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver",
     "io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver",
     "io.reactivex.internal.operators.maybe.MaybeZipIterable",
     "io.reactivex.CompletableEmitter",
     "io.reactivex.internal.operators.maybe.MaybeFromAction",
     "io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription",
     "io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection",
     "io.reactivex.internal.operators.observable.ObservableCreate",
     "io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver",
     "io.reactivex.internal.operators.parallel.ParallelFromArray",
     "io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer",
     "io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe",
     "io.reactivex.observers.DisposableCompletableObserver",
     "io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver",
     "io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable",
     "io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableFromFuture",
     "io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterator",
     "io.reactivex.plugins.RxJavaPlugins",
     "io.reactivex.internal.operators.flowable.FlowableReplay",
     "io.reactivex.SingleTransformer",
     "io.reactivex.internal.operators.flowable.FlowablePublish",
     "io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable",
     "io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver",
     "io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinatorHelper",
     "io.reactivex.internal.util.EndConsumerHelper",
     "io.reactivex.internal.operators.single.SingleDelayWithPublisher",
     "io.reactivex.internal.subscriptions.EmptySubscription",
     "io.reactivex.internal.operators.flowable.FlowablePublish$FlowablePublisher",
     "io.reactivex.subjects.MaybeSubject$MaybeDisposable",
     "io.reactivex.internal.operators.observable.ObservableRepeatUntil",
     "io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber",
     "io.reactivex.observers.BaseTestConsumer",
     "io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver",
     "io.reactivex.internal.disposables.ArrayCompositeDisposable",
     "io.reactivex.internal.operators.observable.ObservableSingleSingle",
     "io.reactivex.internal.operators.observable.ObservableRetryPredicate",
     "io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast",
     "io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver",
     "io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver",
     "io.reactivex.internal.operators.parallel.ParallelMapTry$1",
     "io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$SubjectWork",
     "io.reactivex.processors.ReplayProcessor",
     "io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver",
     "io.reactivex.internal.operators.flowable.FlowableSingle",
     "io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher",
     "io.reactivex.internal.operators.flowable.FlowableGroupBy",
     "io.reactivex.internal.operators.single.SingleZipArray",
     "io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber",
     "io.reactivex.internal.operators.maybe.MaybeIsEmptySingle",
     "io.reactivex.internal.operators.observable.ObservableFlattenIterable",
     "io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber",
     "io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver",
     "io.reactivex.internal.observers.BasicIntQueueDisposable",
     "io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver",
     "io.reactivex.internal.operators.parallel.ParallelReduce",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$TimedReplayCallable",
     "io.reactivex.internal.operators.completable.CompletableConcatArray",
     "io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription",
     "io.reactivex.ObservableOnSubscribe",
     "io.reactivex.internal.operators.observable.ObservableAll",
     "io.reactivex.Completable",
     "io.reactivex.internal.observers.DeferredScalarDisposable",
     "io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn",
     "io.reactivex.internal.operators.observable.ObservableTakeWhile",
     "io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver",
     "io.reactivex.internal.functions.Functions$Array9Func",
     "io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnComplete",
     "io.reactivex.internal.operators.flowable.FlowableSkipUntil",
     "io.reactivex.MaybeTransformer",
     "io.reactivex.internal.operators.flowable.FlowableTakePublisher",
     "io.reactivex.schedulers.TestScheduler$TimedRunnable",
     "io.reactivex.internal.operators.single.SingleUnsubscribeOn",
     "io.reactivex.internal.operators.maybe.MaybeConcatArray",
     "io.reactivex.CompletableObserver",
     "io.reactivex.internal.operators.observable.ObservableAmb",
     "io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver",
     "io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver",
     "io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainNoLast",
     "io.reactivex.internal.operators.observable.ObservableDoOnLifecycle",
     "io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed",
     "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowOperation",
     "io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableFromUnsafeSource",
     "io.reactivex.internal.operators.maybe.MaybeZipArray$SingletonArrayFunc",
     "io.reactivex.internal.operators.flowable.FlowableFromIterable",
     "io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver",
     "io.reactivex.internal.operators.observable.ObservableInterval",
     "io.reactivex.internal.observers.QueueDrainSubscriberWip",
     "io.reactivex.internal.operators.single.SingleTakeUntil",
     "io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber",
     "io.reactivex.internal.operators.completable.CompletableSubscribeOn",
     "io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver",
     "io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver",
     "io.reactivex.internal.operators.completable.CompletableDisposeOn",
     "io.reactivex.internal.util.ConnectConsumer",
     "io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSupport",
     "io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable",
     "io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator",
     "io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn",
     "io.reactivex.internal.observers.BlockingMultiObserver",
     "io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver",
     "io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver",
     "io.reactivex.internal.operators.observable.ObservableUsing",
     "io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable",
     "io.reactivex.internal.fuseable.QueueSubscription",
     "io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber",
     "io.reactivex.internal.functions.Functions$NullCallable",
     "io.reactivex.internal.operators.flowable.FlowableRepeatUntil",
     "io.reactivex.internal.operators.observable.ObservableAny$AnyObserver",
     "io.reactivex.internal.operators.flowable.FlowableFilter",
     "io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle",
     "io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver",
     "io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver",
     "io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$SingletonArrayFunc",
     "io.reactivex.parallel.ParallelFlowable",
     "io.reactivex.internal.operators.observable.ObservablePublishSelector",
     "io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver",
     "io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableLastMaybe",
     "io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer",
     "io.reactivex.internal.functions.Functions$HashSetCallable",
     "io.reactivex.internal.operators.observable.ObservablePublish",
     "io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver",
     "io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver",
     "io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber",
     "io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport",
     "io.reactivex.CompletableTransformer",
     "io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber",
     "io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber",
     "io.reactivex.subjects.ReplaySubject",
     "io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable",
     "io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber",
     "io.reactivex.internal.operators.maybe.MaybeFromCompletable",
     "io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer",
     "io.reactivex.annotations.SchedulerSupport",
     "io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber",
     "io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver",
     "io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe",
     "io.reactivex.internal.operators.flowable.FlowableAll",
     "io.reactivex.internal.operators.flowable.FlowableTimer",
     "io.reactivex.internal.functions.Functions$ActionConsumer",
     "io.reactivex.internal.observers.InnerQueuedObserverSupport",
     "io.reactivex.internal.operators.maybe.MaybeToPublisher",
     "io.reactivex.subscribers.SerializedSubscriber",
     "io.reactivex.internal.operators.observable.ObservableMergeWithSingle",
     "io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterSubscriber",
     "io.reactivex.internal.operators.observable.ObservableTimeout",
     "io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber",
     "io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver",
     "io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker",
     "io.reactivex.internal.observers.QueueDrainObserver",
     "io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber",
     "io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor",
     "io.reactivex.internal.operators.flowable.FlowableCombineLatest$SingletonArrayFunc",
     "io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription",
     "io.reactivex.internal.operators.maybe.MaybeSubscribeOn",
     "io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver",
     "io.reactivex.internal.operators.parallel.ParallelFilterTry"
    ],
    "usedTypes": [
     "io.reactivex.BackpressureStrategy",
     "io.reactivex.Flowable",
     "io.reactivex.Completable",
     "io.reactivex.Maybe",
     "io.reactivex.Observable",
     "io.reactivex.Single"
    ],
    "usageRatio": 0.003616636528028933,
    "children": []
   },
   {
    "id": "com.querydsl:querydsl-core:jar:4.2.1:compile",
    "coordinates": "com.querydsl:querydsl-core:4.2.1",
    "groupId": "com.querydsl",
    "artifactId": "querydsl-core",
    "version": "4.2.1",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 458591,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "com.querydsl.core.types.dsl.ArrayPath",
     "com.querydsl.core.group.GSum",
     "com.querydsl.core.types.dsl.CollectionExpressionBase",
     "com.querydsl.core.util.ConstructorUtils$1",
     "com.querydsl.core.types.dsl.Wildcard",
     "com.querydsl.core.group.GMin",
     "com.querydsl.core.types.Ops",
     "com.querydsl.core.types.Projections",
     "com.querydsl.core.types.dsl.NumberTemplate",
     "com.querydsl.core.annotations.QueryEntity",
     "com.querydsl.core.group.QPair",
     "com.querydsl.core.types.Template$Operation",
     "com.querydsl.core.group.GSet$3",
     "com.querydsl.core.group.GSet$4",
     "com.querydsl.core.types.dsl.DateTimeTemplate",
     "com.querydsl.core.types.Template",
     "com.querydsl.core.types.TemplateExpressionImpl",
     "com.querydsl.core.group.GOne",
     "com.querydsl.core.group.GSet$1",
     "com.querydsl.core.types.dsl.Param",
     "com.querydsl.core.types.dsl.TimeExpression$Constants",
     "com.querydsl.core.group.GSet$2",
     "com.querydsl.core.types.QTuple$TupleImpl",
     "com.querydsl.core.types.dsl.ComparablePath",
     "com.querydsl.core.types.dsl.DslExpression",
     "com.querydsl.core.group.GroupByIterate",
     "com.querydsl.core.types.OperationImpl",
     "com.querydsl.core.util.BeanMap$MyMapEntry",
     "com.querydsl.core.types.dsl.BooleanTemplate",
     "com.querydsl.core.util.ReflectionUtils",
     "com.querydsl.core.types.dsl.Expressions",
     "com.querydsl.core.annotations.QueryDelegate",
     "com.querydsl.core.types.dsl.DateTemplate",
     "com.querydsl.core.group.GSet",
     "com.querydsl.core.types.ExpressionException",
     "com.querydsl.core.types.Templates",
     "com.querydsl.core.types.dsl.DateExpression$Constants",
     "com.querydsl.core.group.AbstractGroupByTransformer$1",
     "com.querydsl.core.types.CollectionExpression",
     "com.querydsl.core.types.ProjectionRole",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$9",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$8",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$7",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$6",
     "com.querydsl.core.group.GSum$1",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$5",
     "com.querydsl.core.types.Path",
     "com.querydsl.core.types.dsl.PathBuilderFactory",
     "com.querydsl.core.types.dsl.PathBuilderValidator$3",
     "com.querydsl.core.types.SubQueryExpressionImpl",
     "com.querydsl.core.types.dsl.DatePath",
     "com.querydsl.core.types.dsl.PathBuilderValidator$1",
     "com.querydsl.core.types.dsl.PathBuilderValidator$2",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$4",
     "com.querydsl.core.types.PathType",
     "com.querydsl.core.types.QList",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$3",
     "com.querydsl.core.types.ConstantImpl$1",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$2",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$1",
     "com.querydsl.core.types.dsl.ComparableOperation",
     "com.querydsl.core.types.ParamsVisitor",
     "com.querydsl.core.types.Template$OperationConst",
     "com.querydsl.core.group.GMin$1",
     "com.querydsl.core.types.FactoryExpressionUtils$FactoryExpressionAdapter",
     "com.querydsl.core.types.Ops$AggOps",
     "com.querydsl.core.types.HashCodeVisitor",
     "com.querydsl.core.Fetchable",
     "com.querydsl.core.alias.MethodType",
     "com.querydsl.core.group.GroupImpl",
     "com.querydsl.core.util.ConstructorUtils$PrimitiveTransformer",
     "com.querydsl.core.alias.TypeSystem",
     "com.querydsl.core.types.dsl.NumberExpression",
     "com.querydsl.core.types.dsl.SimpleExpression",
     "com.querydsl.core.types.dsl.MapExpressionBase",
     "com.querydsl.core.group.GroupByBuilder$4",
     "com.querydsl.core.alias.PropertyAccessInvocationHandler",
     "com.querydsl.core.group.GroupByBuilder$3",
     "com.querydsl.core.group.GroupByBuilder$2",
     "com.querydsl.core.JoinType",
     "com.querydsl.core.group.GroupByBuilder$1",
     "com.querydsl.core.support.PathsExtractor",
     "com.querydsl.core.types.ArrayConstructorExpression",
     "com.querydsl.core.types.EntityPath",
     "com.querydsl.core.group.GroupByBuilder$6",
     "com.querydsl.core.group.GroupByBuilder$5",
     "com.querydsl.core.util.MultiIterator",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial$1",
     "com.querydsl.core.annotations.QueryTransient",
     "com.querydsl.core.group.GMap$Mixin",
     "com.querydsl.core.QueryException",
     "com.querydsl.core.alias.AliasFactory",
     "com.querydsl.core.group.GroupByProjection",
     "com.querydsl.core.group.GList$1",
     "com.querydsl.core.types.dsl.BooleanOperation",
     "com.querydsl.core.group.GAvg",
     "com.querydsl.core.types.ExpressionUtils$1",
     "com.querydsl.core.types.Ops$DateTimeOps",
     "com.querydsl.core.support.QueryMixin$1",
     "com.querydsl.core.support.QueryMixin$Role",
     "com.querydsl.core.types.NullExpression",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial$5",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial$4",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial$3",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial$2",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial$9",
     "com.querydsl.core.types.dsl.Constants",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial$8",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial$7",
     "com.querydsl.core.types.dsl.MathExpressions",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial$6",
     "com.querydsl.core.types.dsl.DateTimeOperation",
     "com.querydsl.core.types.ToStringVisitor",
     "com.querydsl.core.group.GMap$Mixin$GroupCollectorImpl",
     "com.querydsl.core.types.Expression",
     "com.querydsl.core.types.dsl.EnumPath",
     "com.querydsl.core.FilteredClause",
     "com.querydsl.core.types.dsl.DateOperation",
     "com.querydsl.core.support.FetchableQueryBase",
     "com.querydsl.core.types.ExtractorVisitor",
     "com.querydsl.core.annotations.QuerySupertype",
     "com.querydsl.core.types.dsl.EntityPathBase",
     "com.querydsl.core.types.dsl.PathBuilderValidator",
     "com.querydsl.core.types.Predicate",
     "com.querydsl.core.QueryFlag$Position",
     "com.querydsl.core.Tuple",
     "com.querydsl.core.annotations.QueryProjection",
     "com.querydsl.core.util.CollectionUtils",
     "com.querydsl.core.types.dsl.CaseBuilder$Cases",
     "com.querydsl.core.util.FileUtils",
     "com.querydsl.core.types.dsl.CaseBuilder",
     "com.querydsl.core.types.PathMetadataFactory",
     "com.querydsl.core.types.TemplateExpression",
     "com.querydsl.core.DefaultQueryMetadata",
     "com.querydsl.core.BooleanBuilder",
     "com.querydsl.core.FetchableQuery",
     "com.querydsl.core.util.ConstructorUtils$VarArgsTransformer",
     "com.querydsl.core.types.ExpressionUtils$UnderscoreTemplates",
     "com.querydsl.core.types.dsl.StringExpressions",
     "com.querydsl.core.types.TemplateFactory",
     "com.querydsl.core.types.FactoryExpressionUtils",
     "com.querydsl.core.types.dsl.NumberOperation",
     "com.querydsl.core.group.GroupByIterate$1",
     "com.querydsl.core.support.ExtendedSubQuery",
     "com.querydsl.core.types.dsl.CollectionPathBase",
     "com.querydsl.core.group.GroupExpression",
     "com.querydsl.core.types.dsl.ListExpression",
     "com.querydsl.core.QueryModifiers",
     "com.querydsl.core.types.Templates$Precedence",
     "com.querydsl.core.util.BeanMap$11",
     "com.querydsl.core.support.ConstantHidingExpression",
     "com.querydsl.core.types.Constant",
     "com.querydsl.core.types.FactoryExpression",
     "com.querydsl.core.types.Visitor",
     "com.querydsl.core.util.BeanMap$10",
     "com.querydsl.core.QueryFactory",
     "com.querydsl.core.util.BeanMap",
     "com.querydsl.core.types.ConstructorExpression",
     "com.querydsl.core.alias.Alias",
     "com.querydsl.core.group.AbstractGroupExpression",
     "com.querydsl.core.group.GroupCollector",
     "com.querydsl.core.group.GList",
     "com.querydsl.core.types.dsl.Coalesce",
     "com.querydsl.core.group.GMap$3",
     "com.querydsl.core.group.GMap$4",
     "com.querydsl.core.group.GMap$1",
     "com.querydsl.core.group.GMap$2",
     "com.querydsl.core.types.Templates$1",
     "com.querydsl.core.util.ResultSetAdapter",
     "com.querydsl.core.types.dsl.TemporalExpression",
     "com.querydsl.core.group.GMax$1",
     "com.querydsl.core.alias.DefaultPathFactory",
     "com.querydsl.core.types.dsl.EnumOperation",
     "com.querydsl.core.util.Annotations",
     "com.querydsl.core.types.dsl.ArrayExpression",
     "com.querydsl.core.types.ParamExpression",
     "com.querydsl.core.util.JavaSyntaxUtils",
     "com.querydsl.core.group.MixinGroupExpression$GroupCollectorImpl",
     "com.querydsl.core.support.EnumConversion",
     "com.querydsl.core.types.OrderSpecifier$NullHandling",
     "com.querydsl.core.types.Operation",
     "com.querydsl.core.util.ArrayUtils",
     "com.querydsl.core.types.PredicateOperation",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$CaseWhen",
     "com.querydsl.core.types.QBean",
     "com.querydsl.core.types.Template$Transformed",
     "com.querydsl.core.types.dsl.DateExpression",
     "com.querydsl.core.types.dsl.Expressions$2",
     "com.querydsl.core.types.dsl.Expressions$3",
     "com.querydsl.core.types.dsl.Expressions$4",
     "com.querydsl.core.QueryFlag",
     "com.querydsl.core.types.dsl.Expressions$5",
     "com.querydsl.core.types.AppendingFactoryExpression",
     "com.querydsl.core.types.dsl.Expressions$6",
     "com.querydsl.core.types.dsl.Expressions$7",
     "com.querydsl.core.types.dsl.Expressions$8",
     "com.querydsl.core.alias.DefaultTypeSystem",
     "com.querydsl.core.annotations.PropertyType",
     "com.querydsl.core.types.dsl.Expressions$9",
     "com.querydsl.core.types.dsl.LiteralExpression",
     "com.querydsl.core.types.dsl.MapPath",
     "com.querydsl.core.group.GMap",
     "com.querydsl.core.types.TemplateFactory$3",
     "com.querydsl.core.types.TemplateFactory$2",
     "com.querydsl.core.types.TemplateFactory$1",
     "com.querydsl.core.types.dsl.DateTimePath",
     "com.querydsl.core.types.JavaTemplates",
     "com.querydsl.core.group.GMax",
     "com.querydsl.core.types.FactoryExpressionBase",
     "com.querydsl.core.types.TemplateFactory$8",
     "com.querydsl.core.annotations.QueryEmbedded",
     "com.querydsl.core.types.Ops$StringOps",
     "com.querydsl.core.types.PredicateTemplate",
     "com.querydsl.core.types.TemplateFactory$7",
     "com.querydsl.core.types.TemplateFactory$6",
     "com.querydsl.core.types.dsl.PathInits",
     "com.querydsl.core.types.TemplateFactory$5",
     "com.querydsl.core.support.NumberConversions",
     "com.querydsl.core.types.TemplateFactory$4",
     "com.querydsl.core.support.OrderedQueryMetadata",
     "com.querydsl.core.types.dsl.ComparableEntityPath",
     "com.querydsl.core.types.dsl.CaseBuilder$CaseWhen",
     "com.querydsl.core.types.dsl.ComparableExpressionBase",
     "com.querydsl.core.types.dsl.CaseBuilder$CaseElement",
     "com.querydsl.core.types.Template$Element",
     "com.querydsl.core.group.GroupByList",
     "com.querydsl.core.support.NumberConversion",
     "com.querydsl.core.types.MappingProjection",
     "com.querydsl.core.group.AbstractGroupByTransformer",
     "com.querydsl.core.types.dsl.StringPath",
     "com.querydsl.core.dml.DeleteClause",
     "com.querydsl.core.group.GOne$1",
     "com.querydsl.core.types.dsl.Expressions$1",
     "com.querydsl.core.annotations.QueryExclude",
     "com.querydsl.core.group.AbstractGroupByTransformer$FactoryExpressionAdapter",
     "com.querydsl.core.support.Context",
     "com.querydsl.core.types.ExpressionBase",
     "com.querydsl.core.support.FetchableSubQueryBase",
     "com.querydsl.core.types.dsl.CaseForEqBuilder",
     "com.querydsl.core.types.dsl.TimePath",
     "com.querydsl.core.types.FactoryExpressionBase$FactoryExpressionWrapper",
     "com.querydsl.core.types.dsl.StringExpression",
     "com.querydsl.core.annotations.Config",
     "com.querydsl.core.JoinFlag$Position",
     "com.querydsl.core.util.ConstructorUtils$ArgumentTransformer",
     "com.querydsl.core.types.dsl.BeanPath",
     "com.querydsl.core.types.ParameterizedExpression",
     "com.querydsl.core.util.ConstructorUtils$PrimitiveAwareVarArgsTransformer",
     "com.querydsl.core.types.dsl.TimeOperation",
     "com.querydsl.core.types.QMap",
     "com.querydsl.core.types.dsl.CollectionOperation",
     "com.querydsl.core.types.MutableExpressionBase",
     "com.querydsl.core.types.Ops$QuantOps",
     "com.querydsl.core.types.dsl.DslTemplate",
     "com.querydsl.core.types.PathImpl",
     "com.querydsl.core.types.ValidatingVisitor",
     "com.querydsl.core.support.SerializerBase",
     "com.querydsl.core.types.dsl.NumberExpression$Constants",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$CaseElement",
     "com.querydsl.core.types.dsl.EnumTemplate",
     "com.querydsl.core.types.MapExpression",
     "com.querydsl.core.util.ConstructorUtils",
     "com.querydsl.core.dml.UpdateClause",
     "com.querydsl.core.dml.InsertClause",
     "com.querydsl.core.util.NullSafeComparableComparator",
     "com.querydsl.core.group.GroupByMap",
     "com.querydsl.core.support.QueryBase",
     "com.querydsl.core.group.GAvg$1",
     "com.querydsl.core.alias.PathFactory",
     "com.querydsl.core.types.Ops$MathOps",
     "com.querydsl.core.types.ParameterizedPathImpl",
     "com.querydsl.core.QueryResults",
     "com.querydsl.core.types.QTuple$1",
     "com.querydsl.core.Query",
     "com.querydsl.core.JoinFlag",
     "com.querydsl.core.QueryMetadata",
     "com.querydsl.core.types.dsl.CaseForEqBuilder$Cases",
     "com.querydsl.core.types.dsl.DslOperation",
     "com.querydsl.core.types.QTuple",
     "com.querydsl.core.util.BeanMap$6",
     "com.querydsl.core.util.BeanMap$5",
     "com.querydsl.core.util.BeanMap$8",
     "com.querydsl.core.util.BeanMap$7",
     "com.querydsl.core.types.dsl.EnumExpression",
     "com.querydsl.core.util.BeanMap$2",
     "com.querydsl.core.types.dsl.StringTemplate",
     "com.querydsl.core.types.PathExtractor",
     "com.querydsl.core.util.BeanMap$1",
     "com.querydsl.core.util.BeanMap$4",
     "com.querydsl.core.util.BeanMap$3",
     "com.querydsl.core.annotations.QueryEntities",
     "com.querydsl.core.SimpleQuery",
     "com.querydsl.core.types.dsl.TimeExpression",
     "com.querydsl.core.util.BeanMap$9",
     "com.querydsl.core.annotations.QueryEmbeddable",
     "com.querydsl.core.EmptyMetadata",
     "com.querydsl.core.types.Order",
     "com.querydsl.core.types.dsl.BooleanExpression",
     "com.querydsl.core.types.dsl.SetPath",
     "com.querydsl.core.types.PathMetadata",
     "com.querydsl.core.annotations.QueryInit",
     "com.querydsl.core.types.ParamNotSetException",
     "com.querydsl.core.alias.AliasFactory$1",
     "com.querydsl.core.alias.AliasFactory$2",
     "com.querydsl.core.types.Template$ByIndex",
     "com.querydsl.core.NonUniqueResultException",
     "com.querydsl.core.support.QueryMixin",
     "com.querydsl.core.support.CollectionAnyVisitor",
     "com.querydsl.core.types.dsl.ComparableTemplate",
     "com.querydsl.core.alias.ManagedObject",
     "com.querydsl.core.annotations.QueryType",
     "com.querydsl.core.types.dsl.SimpleTemplate",
     "com.querydsl.core.types.OrderSpecifier",
     "com.querydsl.core.dml.StoreClause",
     "com.querydsl.core.support.ReplaceVisitor",
     "com.querydsl.core.types.ConstantImpl$Constants",
     "com.querydsl.core.types.dsl.CaseBuilder$Initial",
     "com.querydsl.core.types.dsl.ComparableExpression",
     "com.querydsl.core.types.dsl.TimeTemplate",
     "com.querydsl.core.types.Operator",
     "com.querydsl.core.types.ConstantImpl",
     "com.querydsl.core.group.MixinGroupExpression",
     "com.querydsl.core.types.Template$AsString",
     "com.querydsl.core.types.ExpressionUtils",
     "com.querydsl.core.dml.DMLClause",
     "com.querydsl.core.types.dsl.PathBuilder",
     "com.querydsl.core.types.dsl.DslPath",
     "com.querydsl.core.types.dsl.DateTimeExpression$Constants",
     "com.querydsl.core.types.dsl.BooleanPath",
     "com.querydsl.core.types.dsl.SimpleOperation",
     "com.querydsl.core.types.SubQueryExpression",
     "com.querydsl.core.types.dsl.CollectionPath",
     "com.querydsl.core.types.dsl.DateTimeExpression",
     "com.querydsl.core.types.dsl.ListPath",
     "com.querydsl.core.types.Template$StaticText",
     "com.querydsl.core.group.GroupByBuilder",
     "com.querydsl.core.group.GroupBy",
     "com.querydsl.core.util.MathUtils",
     "com.querydsl.core.ResultTransformer",
     "com.querydsl.core.types.dsl.StringOperation",
     "com.querydsl.core.util.BeanUtils",
     "com.querydsl.core.JoinExpression",
     "com.querydsl.core.types.dsl.NumberPath",
     "com.querydsl.core.types.dsl.SimplePath",
     "com.querydsl.core.types.ParamExpressionImpl",
     "com.querydsl.core.group.Group"
    ],
    "usedTypes": [
     "com.querydsl.core.types.dsl.ArrayPath",
     "com.querydsl.core.types.PathMetadataFactory",
     "com.querydsl.core.BooleanBuilder",
     "com.querydsl.core.types.OrderSpecifier",
     "com.querydsl.core.types.Path",
     "com.querydsl.core.QueryResults",
     "com.querydsl.core.types.dsl.PathBuilderFactory",
     "com.querydsl.core.annotations.QueryEntity",
     "com.querydsl.core.types.dsl.StringPath",
     "com.querydsl.core.types.dsl.CollectionPathBase",
     "com.querydsl.core.types.PathType",
     "com.querydsl.core.types.Constant",
     "com.querydsl.core.types.dsl.StringExpression",
     "com.querydsl.core.types.dsl.PathBuilder",
     "com.querydsl.core.types.Expression",
     "com.querydsl.core.types.dsl.NumberExpression",
     "com.querydsl.core.types.dsl.SimpleExpression",
     "com.querydsl.core.types.dsl.ListPath",
     "com.querydsl.core.types.Order",
     "com.querydsl.core.types.dsl.DateTimePath",
     "com.querydsl.core.types.dsl.BooleanExpression",
     "com.querydsl.core.types.dsl.EntityPathBase",
     "com.querydsl.core.types.PathMetadata",
     "com.querydsl.core.types.dsl.NumberPath",
     "com.querydsl.core.types.EntityPath",
     "com.querydsl.core.annotations.QueryInit",
     "com.querydsl.core.types.Predicate",
     "com.querydsl.core.types.dsl.PathInits"
    ],
    "usageRatio": 0.08092485549132948,
    "children": [
     {
      "id": "com.google.code.findbugs:jsr305:jar:1.3.9:compile",
      "coordinates": "com.google.code.findbugs:jsr305:1.3.9",
      "groupId": "com.google.code.findbugs",
      "artifactId": "jsr305",
      "version": "1.3.9",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 33015,
      "type": "transitive",
      "status": "used",
      "parent": "com.querydsl:querydsl-core:jar:4.2.1:compile (optional) )",
      "allTypes": [
       "javax.annotation.Nonnull$Checker",
       "javax.annotation.Nonnegative",
       "javax.annotation.ParametersAreNullableByDefault",
       "javax.annotation.WillClose",
       "javax.annotation.CheckForSigned",
       "javax.annotation.ParametersAreNonnullByDefault",
       "javax.annotation.MatchesPattern$Checker",
       "javax.annotation.meta.Exclusive",
       "javax.annotation.meta.TypeQualifierNickname",
       "javax.annotation.meta.TypeQualifier",
       "javax.annotation.Syntax",
       "javax.annotation.Untainted",
       "javax.annotation.WillCloseWhenClosed",
       "javax.annotation.Nonnull",
       "javax.annotation.Nullable",
       "javax.annotation.OverridingMethodsMustInvokeSuper",
       "javax.annotation.RegEx$Checker",
       "javax.annotation.meta.TypeQualifierValidator",
       "javax.annotation.WillNotClose",
       "javax.annotation.meta.Exhaustive",
       "javax.annotation.Nonnegative$Checker",
       "javax.annotation.MatchesPattern",
       "javax.annotation.concurrent.ThreadSafe",
       "javax.annotation.meta.TypeQualifierDefault",
       "javax.annotation.concurrent.GuardedBy",
       "javax.annotation.Signed",
       "javax.annotation.meta.When",
       "javax.annotation.RegEx",
       "javax.annotation.CheckReturnValue",
       "javax.annotation.Tainted",
       "javax.annotation.PropertyKey",
       "javax.annotation.Detainted",
       "javax.annotation.CheckForNull",
       "javax.annotation.concurrent.Immutable",
       "javax.annotation.concurrent.NotThreadSafe"
      ],
      "usedTypes": [
       "javax.annotation.meta.TypeQualifierDefault",
       "javax.annotation.Nonnull",
       "javax.annotation.meta.When",
       "javax.annotation.Nullable",
       "javax.annotation.ParametersAreNonnullByDefault"
      ],
      "usageRatio": 0.14285714285714285,
      "children": []
     },
     {
      "id": "com.mysema.commons:mysema-commons-lang:jar:0.2.4:compile",
      "coordinates": "com.mysema.commons:mysema-commons-lang:0.2.4",
      "groupId": "com.mysema.commons",
      "artifactId": "mysema-commons-lang",
      "version": "0.2.4",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 12050,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.querydsl:querydsl-core:jar:4.2.1:compile (optional) )",
      "allTypes": [
       "com.mysema.commons.lang.Pair",
       "com.mysema.commons.lang.URLEncoder",
       "com.mysema.commons.lang.URIResolver",
       "com.mysema.commons.lang.EmptyCloseableIterator",
       "com.mysema.commons.lang.IteratorAdapter",
       "com.mysema.commons.lang.Assert",
       "com.mysema.commons.lang.CloseableIterator"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "com.infradna.tool:bridge-method-annotation:jar:1.13:compile",
      "coordinates": "com.infradna.tool:bridge-method-annotation:1.13",
      "groupId": "com.infradna.tool",
      "artifactId": "bridge-method-annotation",
      "version": "1.13",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 3161,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.querydsl:querydsl-core:jar:4.2.1:compile (optional) )",
      "allTypes": [
       "com.infradna.tool.bridge_method_injector.WithBridgeMethods",
       "com.infradna.tool.bridge_method_injector.BridgeMethodsAdded"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "com.querydsl:querydsl-apt:jar:4.2.1:provided",
    "coordinates": "com.querydsl:querydsl-apt:4.2.1",
    "groupId": "com.querydsl",
    "artifactId": "querydsl-apt",
    "version": "4.2.1",
    "scope": "provided",
    "packaging": "jar",
    "omitted": false,
    "size": 65802,
    "type": "direct",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "com.querydsl.apt.ExtendedTypeFactory$2",
     "com.querydsl.apt.ExtendedTypeFactory$3",
     "com.querydsl.apt.TypeUtils",
     "com.querydsl.apt.VisitorConfig",
     "com.querydsl.apt.DefaultConfiguration",
     "com.querydsl.apt.SimpleTypeVisitorAdapter",
     "com.querydsl.apt.hibernate.HibernateConfiguration",
     "com.querydsl.apt.QuerydslAnnotationProcessor",
     "com.querydsl.apt.hibernate.HibernateAnnotationProcessor",
     "com.querydsl.apt.jpa.JPAAnnotationProcessor",
     "com.querydsl.apt.jpa.JPAConfiguration$1",
     "com.querydsl.apt.Configuration",
     "com.querydsl.apt.jpa.JPAConfiguration",
     "com.querydsl.apt.QueryTypeImpl",
     "com.querydsl.apt.roo.RooAnnotationProcessor",
     "com.querydsl.apt.ExtendedTypeFactory$1",
     "com.querydsl.apt.jdo.JDOAnnotationProcessor",
     "com.querydsl.apt.TypeElementHandler",
     "com.querydsl.apt.ExtendedTypeFactory",
     "com.querydsl.apt.Context",
     "com.querydsl.apt.APTOptions",
     "com.querydsl.apt.TypeExtractor",
     "com.querydsl.apt.SpatialSupport",
     "com.querydsl.apt.AbstractQuerydslProcessor",
     "com.querydsl.apt.morphia.MorphiaAnnotationProcessor",
     "com.querydsl.apt.jdo.JDOConfiguration",
     "com.querydsl.apt.TypeExtractor$1"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "com.querydsl:querydsl-codegen:jar:4.2.1:compile",
      "coordinates": "com.querydsl:querydsl-codegen:4.2.1",
      "groupId": "com.querydsl",
      "artifactId": "querydsl-codegen",
      "version": "4.2.1",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 82520,
      "type": "transitive",
      "status": "bloated",
      "parent": "com.querydsl:querydsl-apt:jar:4.2.1:provided",
      "allTypes": [
       "com.querydsl.codegen.PropertyHandling$Config",
       "com.querydsl.codegen.NamingFunction",
       "com.querydsl.codegen.DefaultVariableNameFunction",
       "com.querydsl.codegen.GenericExporter",
       "com.querydsl.codegen.ProjectionSerializer",
       "com.querydsl.codegen.CodegenModule",
       "com.querydsl.codegen.AbstractModule",
       "com.querydsl.codegen.AnnotationHelper",
       "com.querydsl.codegen.GroovyBeanSerializer",
       "com.querydsl.codegen.EntityType",
       "com.querydsl.codegen.ProjectionSerializer$1",
       "com.querydsl.codegen.Keywords",
       "com.querydsl.codegen.PropertyHandling$5",
       "com.querydsl.codegen.Property",
       "com.querydsl.codegen.PropertyHandling$6",
       "com.querydsl.codegen.PropertyHandling$3",
       "com.querydsl.codegen.PropertyHandling$4",
       "com.querydsl.codegen.Delegate",
       "com.querydsl.codegen.EmbeddableSerializer$1",
       "com.querydsl.codegen.ClassPathUtils",
       "com.querydsl.codegen.PropertyHandling$1",
       "com.querydsl.codegen.PropertyHandling$2",
       "com.querydsl.codegen.SupertypeSerializer",
       "com.querydsl.codegen.TypeMappings",
       "com.querydsl.codegen.BeanSerializer$1",
       "com.querydsl.codegen.Serializer",
       "com.querydsl.codegen.EntitySerializer$2",
       "com.querydsl.codegen.EntitySerializer$1",
       "com.querydsl.codegen.QueryTypeFactoryImpl",
       "com.querydsl.codegen.SerializerConfig",
       "com.querydsl.codegen.EmbeddableSerializer",
       "com.querydsl.codegen.BeanSerializer",
       "com.querydsl.codegen.TypeFactory",
       "com.querydsl.codegen.EntitySerializer",
       "com.querydsl.codegen.QueryTypeFactory",
       "com.querydsl.codegen.TypeResolver",
       "com.querydsl.codegen.SimpleSerializerConfig",
       "com.querydsl.codegen.JavaTypeMappings",
       "com.querydsl.codegen.ParameterizedTypeImpl",
       "com.querydsl.codegen.Supertype",
       "com.querydsl.codegen.PropertyHandling"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "com.mysema.codegen:codegen:jar:0.6.8:compile",
        "coordinates": "com.mysema.codegen:codegen:0.6.8",
        "groupId": "com.mysema.codegen",
        "artifactId": "codegen",
        "version": "0.6.8",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 73210,
        "type": "transitive",
        "status": "bloated",
        "parent": "com.querydsl:querydsl-codegen:jar:4.2.1:compile",
        "allTypes": [
         "com.mysema.codegen.MemClassLoader",
         "com.mysema.codegen.model.ClassType",
         "com.mysema.codegen.EvaluatorFactory",
         "com.mysema.codegen.CodegenException",
         "com.mysema.codegen.MemSourceFileObject$1",
         "com.mysema.codegen.model.Type",
         "com.mysema.codegen.support.ScalaSyntaxUtils",
         "com.mysema.codegen.support.ClassUtils",
         "com.mysema.codegen.CodeWriter",
         "com.mysema.codegen.model.Parameter",
         "com.mysema.codegen.model.TypeAdapter",
         "com.mysema.codegen.SimpleCompiler",
         "com.mysema.codegen.ECJEvaluatorFactory$2",
         "com.mysema.codegen.JDKEvaluatorFactory",
         "com.mysema.codegen.model.TypeSuper",
         "com.mysema.codegen.ECJEvaluatorFactory$1",
         "com.mysema.codegen.MemFileSystemRegistry",
         "com.mysema.codegen.AbstractCodeWriter",
         "com.mysema.codegen.ECJEvaluatorFactory$3",
         "com.mysema.codegen.MemJavaFileObject",
         "com.mysema.codegen.JavaWriter",
         "com.mysema.codegen.ECJEvaluatorFactory",
         "com.mysema.codegen.Symbols",
         "com.mysema.codegen.model.SimpleType",
         "com.mysema.codegen.Evaluator",
         "com.mysema.codegen.MethodEvaluator",
         "com.mysema.codegen.MemSourceFileObject",
         "com.mysema.codegen.MemFileManager",
         "com.mysema.codegen.AbstractEvaluatorFactory",
         "com.mysema.codegen.model.TypeCategory",
         "com.mysema.codegen.LocationAndKind",
         "com.mysema.codegen.model.Constructor",
         "com.mysema.codegen.MultiSuppressWarnings",
         "com.mysema.codegen.ScalaWriter",
         "com.mysema.codegen.model.Types",
         "com.mysema.codegen.model.TypeExtends",
         "com.mysema.codegen.StringUtils"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": [
         {
          "id": "org.eclipse.jdt.core.compiler:ecj:jar:4.3.1:compile",
          "coordinates": "org.eclipse.jdt.core.compiler:ecj:4.3.1",
          "groupId": "org.eclipse.jdt.core.compiler",
          "artifactId": "ecj",
          "version": "4.3.1",
          "scope": "compile",
          "packaging": "jar",
          "omitted": false,
          "size": 1830791,
          "type": "transitive",
          "status": "bloated",
          "parent": "com.mysema.codegen:codegen:jar:0.6.8:compile",
          "allTypes": [
           "org.eclipse.jdt.internal.compiler.lookup.MethodVerifier",
           "org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext",
           "org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder",
           "org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject",
           "org.eclipse.jdt.internal.compiler.parser.Parser$1",
           "org.eclipse.jdt.internal.compiler.lookup.MethodScope",
           "org.eclipse.jdt.internal.compiler.ast.SuperReference",
           "org.eclipse.jdt.internal.compiler.codegen.LongCache",
           "org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject",
           "org.eclipse.jdt.internal.compiler.lookup.MethodBinding",
           "org.eclipse.jdt.internal.compiler.util.Util$Displayable",
           "org.eclipse.jdt.internal.compiler.problem.DefaultProblem",
           "org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding",
           "org.eclipse.jdt.internal.compiler.util.HashtableOfType",
           "org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext$EscapingExceptionCatchSite",
           "org.eclipse.jdt.internal.compiler.lookup.ExtraCompilerModifiers",
           "org.eclipse.jdt.internal.compiler.util.HashtableOfInt",
           "org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding",
           "org.eclipse.jdt.internal.compiler.ast.TypeReference",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable",
           "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$2",
           "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$1",
           "org.eclipse.jdt.internal.compiler.impl.Constant",
           "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$3",
           "org.eclipse.jdt.internal.compiler.ast.ForeachStatement",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager",
           "org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference",
           "org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1",
           "org.eclipse.jdt.internal.compiler.lookup.Binding",
           "org.eclipse.jdt.internal.compiler.util.HashtableOfPackage",
           "org.eclipse.jdt.internal.compiler.ast.BreakStatement",
           "org.eclipse.jdt.internal.compiler.impl.IrritantSet",
           "org.eclipse.jdt.internal.compiler.env.ClassSignature",
           "org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants",
           "org.eclipse.jdt.internal.compiler.codegen.ObjectCache",
           "org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding",
           "org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor",
           "org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression",
           "org.eclipse.jdt.internal.compiler.util.SimpleLookupTable",
           "org.eclipse.jdt.internal.compiler.codegen.CharArrayCache",
           "org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding",
           "org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathNormalizer",
           "org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations",
           "org.eclipse.jdt.internal.compiler.Compiler",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredMethod",
           "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.AptProblem",
           "org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding",
           "org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl",
           "org.eclipse.jdt.internal.compiler.impl.StringConstant",
           "org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference",
           "org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser",
           "org.eclipse.jdt.internal.compiler.problem.ProblemSeverities",
           "org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor",
           "org.eclipse.jdt.internal.compiler.parser.ScannerHelper",
           "org.eclipse.jdt.internal.compiler.ReadManager",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation",
           "org.eclipse.jdt.internal.compiler.ast.Statement",
           "org.eclipse.jdt.internal.compiler.lookup.TagBits",
           "org.eclipse.jdt.internal.compiler.ast.OperatorExpression",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredType",
           "org.eclipse.jdt.internal.compiler.env.IBinaryField",
           "org.eclipse.jdt.internal.compiler.ClassFile",
           "org.eclipse.jdt.internal.compiler.ast.CaseStatement",
           "org.eclipse.jdt.internal.compiler.env.IDependent",
           "org.eclipse.jdt.internal.compiler.ast.CastExpression$1",
           "org.eclipse.jdt.internal.compiler.ast.NormalAnnotation",
           "org.eclipse.jdt.internal.compiler.ast.BranchStatement",
           "org.eclipse.jdt.internal.compiler.ast.MessageSend",
           "org.eclipse.jdt.internal.compiler.util.GenericXMLWriter",
           "org.eclipse.jdt.internal.compiler.ast.PostfixExpression",
           "org.eclipse.jdt.core.CheckDebugAttributes",
           "org.eclipse.jdt.internal.compiler.ast.Annotation",
           "org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference",
           "org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo$AssertionFailedException",
           "org.eclipse.jdt.core.compiler.IProblem",
           "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration",
           "org.eclipse.jdt.internal.compiler.env.ICompilationUnit",
           "org.eclipse.jdt.internal.compiler.util.FloatUtil",
           "org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl",
           "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackMarker",
           "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding",
           "org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl",
           "org.eclipse.jdt.internal.compiler.ast.MagicLiteral",
           "org.eclipse.jdt.internal.compiler.problem.AbortType",
           "org.eclipse.jdt.internal.compiler.lookup.ImportBinding",
           "org.eclipse.jdt.internal.compiler.env.AccessRestriction",
           "org.eclipse.jdt.internal.compiler.codegen.StackMapFrame",
           "org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo",
           "org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier",
           "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$FramePosition",
           "org.eclipse.jdt.internal.compiler.impl.ReferenceContext",
           "org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer",
           "org.eclipse.jdt.internal.compiler.env.IBinaryMethod",
           "org.eclipse.jdt.internal.compiler.problem.AbortCompilation",
           "org.eclipse.jdt.internal.compiler.ast.Clinit",
           "org.eclipse.jdt.internal.compiler.ast.ImportReference",
           "org.eclipse.jdt.internal.compiler.tool.Archive",
           "org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding",
           "org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference",
           "org.eclipse.jdt.internal.compiler.batch.CompilationUnit",
           "org.eclipse.jdt.internal.compiler.impl.FloatConstant",
           "org.eclipse.jdt.internal.compiler.ProcessTaskManager",
           "org.eclipse.jdt.internal.compiler.ast.UnionTypeReference",
           "org.eclipse.jdt.internal.compiler.codegen.FloatCache",
           "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackDepthMarker",
           "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl",
           "org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext",
           "org.eclipse.jdt.internal.compiler.ast.Initializer",
           "org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation",
           "org.eclipse.jdt.internal.compiler.parser.TerminalTokens",
           "org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl",
           "org.eclipse.jdt.internal.compiler.ast.Javadoc",
           "org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier$InheritedNonNullnessInfo",
           "org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference",
           "org.eclipse.jdt.core.compiler.batch.BatchCompiler",
           "org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor",
           "org.eclipse.jdt.internal.compiler.lookup.FieldBinding",
           "org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding",
           "org.eclipse.jdt.internal.compiler.ast.MemberValuePair",
           "org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer",
           "org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4",
           "org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo",
           "org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3",
           "org.eclipse.jdt.internal.compiler.flow.FlowContext",
           "org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$2",
           "org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$1",
           "org.eclipse.jdt.internal.compiler.tool.EclipseFileObject",
           "org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector",
           "org.eclipse.jdt.internal.compiler.ast.SwitchStatement$1$StringSwitchCase",
           "org.eclipse.jdt.internal.compiler.util.HashSetOfInt",
           "org.eclipse.jdt.internal.compiler.lookup.TypeConstants$CloseMethodRecord",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl",
           "org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector",
           "org.eclipse.jdt.internal.compiler.apt.util.Util",
           "org.eclipse.jdt.internal.compiler.lookup.ArrayBinding",
           "org.eclipse.jdt.internal.compiler.util.Util",
           "org.eclipse.jdt.internal.compiler.ast.SingleNameReference",
           "org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil",
           "org.eclipse.jdt.internal.compiler.ast.TryStatement",
           "org.eclipse.jdt.internal.compiler.ast.BinaryExpression",
           "org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend",
           "org.eclipse.jdt.internal.compiler.impl.CompilerOptions",
           "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl",
           "org.eclipse.jdt.internal.compiler.codegen.DoubleCache",
           "org.eclipse.jdt.internal.compiler.ast.StringLiteral",
           "org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations",
           "org.eclipse.jdt.core.compiler.CompilationProgress",
           "org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference",
           "org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.IProcessorProvider",
           "org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement",
           "org.eclipse.jdt.internal.compiler.util.HashtableOfLong",
           "org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral",
           "org.eclipse.jdt.internal.compiler.lookup.InferenceContext",
           "org.eclipse.jdt.internal.compiler.problem.ProblemHandler",
           "org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper",
           "org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl",
           "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration",
           "org.eclipse.jdt.internal.compiler.ast.SwitchStatement",
           "org.eclipse.jdt.internal.compiler.batch.ClasspathLocation",
           "org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray",
           "org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2",
           "org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement",
           "org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference",
           "org.eclipse.jdt.internal.compiler.env.IGenericField",
           "org.eclipse.jdt.internal.compiler.ast.FloatLiteral",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager",
           "org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo",
           "org.eclipse.jdt.internal.compiler.lookup.PackageBinding",
           "org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation",
           "org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1",
           "org.eclipse.jdt.internal.compiler.classfmt.MethodInfo",
           "org.eclipse.jdt.internal.compiler.ast.Literal",
           "org.eclipse.jdt.internal.compiler.flow.LabelFlowContext",
           "org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl",
           "org.eclipse.jdt.core.JDTCompilerAdapter",
           "org.eclipse.jdt.internal.compiler.env.IGenericType",
           "org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl",
           "org.eclipse.jdt.internal.compiler.apt.model.NameImpl",
           "org.eclipse.jdt.internal.compiler.ast.Block",
           "org.eclipse.jdt.internal.compiler.lookup.InvocationSite",
           "org.eclipse.jdt.internal.compiler.ClassFilePool",
           "org.eclipse.jdt.internal.antadapter.AntAdapterMessages",
           "org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData",
           "org.eclipse.jdt.internal.compiler.lookup.ProblemBinding",
           "org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding",
           "org.eclipse.jdt.internal.compiler.ast.Expression",
           "org.eclipse.jdt.internal.compiler.ast.OperatorIds",
           "org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory",
           "org.eclipse.jdt.internal.compiler.apt.model.ElementImpl",
           "org.eclipse.jdt.internal.compiler.impl.ByteConstant",
           "org.eclipse.jdt.internal.compiler.ast.ContinueStatement",
           "org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding",
           "org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement",
           "org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory",
           "org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding",
           "org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy",
           "org.eclipse.jdt.internal.compiler.tool.EclipseCompiler",
           "org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation",
           "org.eclipse.jdt.core.compiler.CategorizedProblem",
           "org.eclipse.jdt.internal.compiler.env.IGenericMethod",
           "org.eclipse.jdt.internal.compiler.tool.EclipseFileManager",
           "org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation",
           "org.eclipse.jdt.internal.compiler.batch.Main$Logger",
           "org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties",
           "org.eclipse.jdt.internal.compiler.lookup.TypeIds",
           "org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression",
           "org.eclipse.jdt.internal.compiler.ast.Assignment",
           "org.eclipse.jdt.internal.compiler.env.ISourceMethod",
           "org.eclipse.jdt.internal.compiler.Compiler$1",
           "org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference",
           "org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$2",
           "org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$1",
           "org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue",
           "org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$4",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredImport",
           "org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$3",
           "org.eclipse.jdt.internal.compiler.impl.LongConstant",
           "org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable",
           "org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel",
           "org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel",
           "org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext",
           "org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations",
           "org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding",
           "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding",
           "org.eclipse.jdt.internal.compiler.ast.ForStatement",
           "org.eclipse.jdt.internal.compiler.env.ISourceField",
           "org.eclipse.jdt.internal.compiler.parser.RecoveryScanner",
           "org.eclipse.jdt.internal.compiler.IDebugRequestor",
           "org.eclipse.jdt.internal.compiler.apt.model.IElementInfo",
           "org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl",
           "org.eclipse.jdt.internal.compiler.util.SuffixConstants",
           "org.eclipse.jdt.internal.compiler.problem.AbortMethod",
           "org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext",
           "org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct",
           "org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference",
           "org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1",
           "org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue",
           "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding",
           "org.eclipse.jdt.internal.compiler.ast.FalseLiteral",
           "org.eclipse.jdt.internal.compiler.ast.CompoundAssignment",
           "org.eclipse.jdt.internal.compiler.tool.Util$EncodingError",
           "org.eclipse.jdt.internal.compiler.ast.IntLiteral",
           "org.eclipse.jdt.internal.compiler.batch.ClasspathJar",
           "org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement",
           "org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo",
           "org.eclipse.jdt.internal.compiler.apt.util.Options",
           "org.eclipse.jdt.internal.compiler.CompilationResult$1",
           "org.eclipse.jdt.internal.compiler.ast.NameReference",
           "org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding",
           "org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl",
           "org.eclipse.jdt.internal.compiler.util.Messages",
           "org.eclipse.jdt.internal.compiler.batch.FileSystem",
           "org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl",
           "org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredField",
           "org.eclipse.jdt.internal.compiler.ast.MemberValuePair$1",
           "org.eclipse.jdt.internal.compiler.CompilationResult",
           "org.eclipse.jdt.internal.compiler.ast.NumberLiteral",
           "org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject",
           "org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager",
           "org.eclipse.jdt.internal.compiler.ast.ThisReference",
           "org.eclipse.jdt.internal.compiler.lookup.IQualifiedTypeResolutionListener",
           "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker",
           "org.eclipse.jdt.internal.compiler.lookup.BlockScope",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl",
           "org.eclipse.jdt.internal.compiler.ast.AssertStatement",
           "org.eclipse.jdt.internal.compiler.ast.LongLiteral",
           "org.eclipse.jdt.internal.compiler.flow.FlowInfo",
           "org.eclipse.jdt.internal.compiler.codegen.Opcodes",
           "org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding",
           "org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding",
           "org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher",
           "org.eclipse.jdt.internal.compiler.lookup.ClassScope",
           "org.eclipse.jdt.internal.compiler.codegen.CachedIndexEntry",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl",
           "org.eclipse.jdt.internal.compiler.ast.Wildcard",
           "org.eclipse.jdt.internal.compiler.env.EnumConstantSignature",
           "org.eclipse.jdt.internal.compiler.util.Util$1",
           "org.eclipse.jdt.internal.compiler.ast.IfStatement",
           "org.eclipse.jdt.internal.compiler.ast.PrefixExpression",
           "org.eclipse.jdt.internal.compiler.parser.Parser",
           "org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader",
           "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream",
           "org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl",
           "org.eclipse.jdt.internal.compiler.IProblemFactory",
           "org.eclipse.jdt.internal.compiler.env.ISourceImport",
           "org.eclipse.jdt.internal.compiler.SourceElementNotifier",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredBlock",
           "org.eclipse.jdt.internal.compiler.codegen.CodeStream",
           "org.eclipse.jdt.internal.compiler.ast.EqualExpression",
           "org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding",
           "org.eclipse.jdt.core.compiler.CharOperation",
           "org.eclipse.jdt.internal.compiler.ast.NullLiteral",
           "org.eclipse.jdt.internal.compiler.impl.CompilerStats",
           "org.eclipse.jdt.internal.compiler.impl.CharConstant",
           "org.eclipse.jdt.internal.compiler.util.Sorting",
           "org.eclipse.jdt.internal.compiler.ast.CastExpression",
           "org.eclipse.jdt.internal.compiler.batch.Main$2",
           "org.eclipse.jdt.internal.compiler.batch.Main$3",
           "org.eclipse.jdt.internal.compiler.batch.Main$1",
           "org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference",
           "org.eclipse.jdt.internal.compiler.env.AccessRuleSet",
           "org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil$RangeResult",
           "org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration",
           "org.eclipse.jdt.internal.compiler.apt.util.ManyToMany",
           "org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo",
           "org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding",
           "org.eclipse.jdt.internal.compiler.env.IBinaryNestedType",
           "org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo",
           "org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference",
           "org.eclipse.jdt.internal.compiler.lookup.VariableBinding",
           "org.eclipse.jdt.internal.compiler.parser.JavadocParser",
           "org.eclipse.jdt.internal.compiler.apt.model.TypesImpl",
           "org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext",
           "org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression",
           "org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$MethodHolder",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter",
           "org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl",
           "org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding",
           "org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation",
           "org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression",
           "org.eclipse.jdt.internal.compiler.ast.ArrayReference",
           "org.eclipse.jdt.internal.compiler.batch.Main$4",
           "org.eclipse.jdt.internal.compiler.batch.Main$5",
           "org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants",
           "org.eclipse.jdt.internal.compiler.ast.ConditionalExpression",
           "org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression",
           "org.eclipse.jdt.internal.compiler.env.ISourceType",
           "org.eclipse.jdt.internal.compiler.ast.ReturnStatement",
           "org.eclipse.jdt.internal.compiler.ast.DoubleLiteral",
           "org.eclipse.jdt.internal.compiler.codegen.Label",
           "org.eclipse.jdt.internal.compiler.ast.ASTNode",
           "org.eclipse.jdt.internal.compiler.lookup.CaptureBinding",
           "org.eclipse.jdt.internal.compiler.codegen.BranchLabel",
           "org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit",
           "org.eclipse.jdt.internal.compiler.impl.IntConstant",
           "org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference",
           "org.eclipse.jdt.internal.compiler.lookup.ElementValuePair",
           "org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo",
           "org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants",
           "org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding",
           "org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo",
           "org.eclipse.jdt.internal.compiler.ast.UnaryExpression",
           "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1",
           "org.eclipse.jdt.internal.compiler.ICompilerRequestor",
           "org.eclipse.jdt.internal.compiler.tool.Options",
           "org.eclipse.jdt.internal.compiler.util.HashtableOfObject",
           "org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl",
           "org.eclipse.jdt.internal.compiler.lookup.TypeConstants",
           "org.eclipse.jdt.internal.compiler.codegen.CaseLabel",
           "org.eclipse.jdt.internal.compiler.util.ObjectVector",
           "org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding",
           "org.eclipse.jdt.internal.compiler.ExtraFlags",
           "org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$2",
           "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope",
           "org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$1",
           "org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingError",
           "org.eclipse.jdt.internal.compiler.lookup.AptBinaryLocalVariableBinding",
           "org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess",
           "org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding",
           "org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding",
           "org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt",
           "org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency",
           "org.eclipse.jdt.internal.compiler.lookup.TypeBinding",
           "org.eclipse.jdt.internal.compiler.ast.CharLiteral",
           "org.eclipse.jdt.internal.compiler.flow.TryFlowContext",
           "org.eclipse.jdt.internal.compiler.ast.LabeledStatement",
           "org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject",
           "org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1",
           "org.eclipse.jdt.internal.compiler.parser.TypeConverter",
           "org.eclipse.jdt.internal.compiler.lookup.ProblemReasons",
           "org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathSectionProblemReporter",
           "org.eclipse.jdt.internal.compiler.classfmt.FieldInfo",
           "org.eclipse.jdt.internal.compiler.ast.WhileStatement",
           "org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding",
           "org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference",
           "org.eclipse.jdt.internal.compiler.batch.FileFinder",
           "org.eclipse.jdt.internal.compiler.env.AccessRule",
           "org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredStatement",
           "org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl",
           "org.eclipse.jdt.internal.compiler.impl.BooleanConstant",
           "org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext",
           "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration",
           "org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode",
           "org.eclipse.jdt.internal.compiler.env.INameEnvironment",
           "org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException",
           "org.eclipse.jdt.internal.compiler.util.SimpleSet",
           "org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression",
           "org.eclipse.jdt.internal.compiler.lookup.WildcardBinding",
           "org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredUnit",
           "org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo",
           "org.eclipse.jdt.internal.compiler.ClassFile$2",
           "org.eclipse.jdt.internal.compiler.ClassFile$1",
           "org.eclipse.jdt.internal.compiler.ast.TrueLiteral",
           "org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath",
           "org.eclipse.jdt.internal.compiler.ast.SingleTypeReference",
           "org.eclipse.jdt.internal.compiler.parser.NLSTag",
           "org.eclipse.jdt.internal.compiler.impl.DoubleConstant",
           "org.eclipse.jdt.internal.compiler.lookup.Scope",
           "org.eclipse.jdt.internal.compiler.ast.AllocationExpression",
           "org.eclipse.jdt.internal.compiler.ast.ArrayInitializer",
           "org.eclipse.jdt.internal.compiler.parser.Scanner",
           "org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor",
           "org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression",
           "org.eclipse.jdt.core.compiler.InvalidInputException",
           "org.eclipse.jdt.internal.compiler.ClassFile$3",
           "org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall",
           "org.eclipse.jdt.internal.compiler.ast.Reference",
           "org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager",
           "org.eclipse.jdt.core.BuildJarIndex",
           "org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory",
           "org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo",
           "org.eclipse.jdt.internal.compiler.util.SimpleNameVector",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl",
           "org.eclipse.jdt.internal.compiler.problem.ProblemReporter",
           "org.eclipse.jdt.internal.compiler.tool.Util",
           "org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair",
           "org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference",
           "org.eclipse.jdt.internal.compiler.codegen.IntegerCache",
           "org.eclipse.jdt.internal.compiler.ASTVisitor",
           "org.eclipse.jdt.internal.compiler.lookup.Scope$1",
           "org.eclipse.jdt.internal.compiler.lookup.Scope$2",
           "org.eclipse.jdt.internal.compiler.ast.FieldDeclaration",
           "org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder",
           "org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl",
           "org.eclipse.jdt.internal.compiler.ast.Argument",
           "org.eclipse.jdt.internal.compiler.ast.EmptyStatement",
           "org.eclipse.jdt.internal.compiler.batch.Main",
           "org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding",
           "org.eclipse.jdt.internal.compiler.ast.TypeParameter",
           "org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator",
           "org.eclipse.jdt.core.JDTCompilerAdapter$1",
           "org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies",
           "org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference",
           "org.eclipse.jdt.internal.compiler.ast.FieldReference",
           "org.eclipse.jdt.internal.compiler.apt.model.Factory",
           "org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding",
           "org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser",
           "org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl",
           "org.eclipse.jdt.internal.compiler.lookup.Substitution",
           "org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15",
           "org.eclipse.jdt.internal.compiler.impl.ShortConstant",
           "org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream$Token",
           "org.eclipse.jdt.internal.compiler.util.CompoundNameVector",
           "org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl",
           "org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar",
           "org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression",
           "org.eclipse.jdt.internal.compiler.ast.DoStatement",
           "org.eclipse.jdt.internal.compiler.impl.ITypeRequestor",
           "org.eclipse.jdt.internal.compiler.env.IBinaryType",
           "org.eclipse.jdt.internal.compiler.ast.ThrowStatement",
           "org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation",
           "org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredElement",
           "org.eclipse.jdt.internal.compiler.ast.LocalDeclaration",
           "org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer",
           "org.eclipse.jdt.internal.compiler.apt.util.Archive",
           "org.eclipse.jdt.internal.compiler.lookup.InvocationSite$EmptyWithAstNode",
           "org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream",
           "org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration",
           "org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException",
           "org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue",
           "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration",
           "org.eclipse.jdt.internal.compiler.codegen.ConstantPool"
          ],
          "usedTypes": [],
          "usageRatio": 0.0,
          "children": []
         }
        ]
       },
       {
        "id": "org.reflections:reflections:jar:0.9.9:compile",
        "coordinates": "org.reflections:reflections:0.9.9",
        "groupId": "org.reflections",
        "artifactId": "reflections",
        "version": "0.9.9",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 141744,
        "type": "transitive",
        "status": "bloated",
        "parent": "com.querydsl:querydsl-codegen:jar:4.2.1:compile",
        "allTypes": [
         "org.reflections.vfs.Vfs$DefaultUrlTypes$6",
         "org.reflections.vfs.Vfs$DefaultUrlTypes$5",
         "org.reflections.vfs.CommonsVfs2UrlType$Dir$1",
         "org.reflections.vfs.Vfs$DefaultUrlTypes$8",
         "org.reflections.vfs.Vfs$DefaultUrlTypes$7",
         "org.reflections.vfs.Vfs$UrlType",
         "org.reflections.Store$1",
         "org.reflections.vfs.CommonsVfs2UrlType$Dir",
         "org.reflections.vfs.ZipFile",
         "org.reflections.serializers.JavaCodeSerializer1$Writer",
         "org.reflections.Reflections",
         "org.reflections.scanners.Scanner",
         "org.reflections.adapters.JavaReflectionAdapter",
         "org.reflections.scanners.AbstractScanner",
         "org.reflections.vfs.Vfs$File",
         "org.reflections.scanners.TypeAnnotationsScanner",
         "org.reflections.vfs.CommonsVfs2UrlType$1",
         "org.reflections.vfs.Vfs$2",
         "org.reflections.vfs.Vfs$1",
         "org.reflections.vfs.ZipDir$1$1",
         "org.reflections.serializers.JavaCodeSerializer1$Data",
         "org.reflections.serializers.Serializer",
         "org.reflections.util.FilterBuilder$Include",
         "org.reflections.vfs.Vfs$DefaultUrlTypes$2",
         "org.reflections.vfs.Vfs$DefaultUrlTypes$1",
         "org.reflections.vfs.Vfs$DefaultUrlTypes$4",
         "org.reflections.vfs.Vfs$DefaultUrlTypes$3",
         "org.reflections.vfs.SystemDir",
         "org.reflections.vfs.CommonsVfs2UrlType",
         "org.reflections.serializers.JsonSerializer$1$1",
         "org.reflections.scanners.MethodParameterScanner",
         "org.reflections.util.FilterBuilder",
         "org.reflections.ReflectionUtils$11$1",
         "org.reflections.vfs.UrlTypeVFS",
         "org.reflections.util.Utils",
         "org.reflections.scanners.TypesScanner",
         "org.reflections.serializers.JavaCodeSerializer1$1",
         "org.reflections.util.ConfigurationBuilder",
         "org.reflections.vfs.ZipDir$1",
         "org.reflections.adapters.JavassistAdapter",
         "org.reflections.vfs.JarInputDir$1$1",
         "org.reflections.serializers.JavaCodeSerializer",
         "org.reflections.serializers.JsonSerializer",
         "org.reflections.vfs.JarInputDir",
         "org.reflections.vfs.Vfs$DefaultUrlTypes",
         "org.reflections.scanners.ResourcesScanner",
         "org.reflections.serializers.JavaCodeSerializer$1",
         "org.reflections.vfs.SystemDir$1$1",
         "org.reflections.vfs.Vfs$Dir",
         "org.reflections.vfs.JarInputDir$1",
         "org.reflections.ReflectionUtils",
         "org.reflections.adapters.MetadataAdapter",
         "org.reflections.vfs.SystemFile",
         "org.reflections.ReflectionsException",
         "org.reflections.scanners.MemberUsageScanner$1",
         "org.reflections.scanners.MemberUsageScanner",
         "org.reflections.ReflectionUtils$12$1",
         "org.reflections.serializers.XmlSerializer",
         "org.reflections.ReflectionUtils$11",
         "org.reflections.ReflectionUtils$12",
         "org.reflections.ReflectionUtils$10",
         "org.reflections.vfs.CommonsVfs2UrlType$Dir$FileAbstractIterator",
         "org.reflections.serializers.JsonSerializer$1",
         "org.reflections.util.ClasspathHelper",
         "org.reflections.serializers.JsonSerializer$2",
         "org.reflections.Reflections$2",
         "org.reflections.Reflections$3",
         "org.reflections.Reflections$1",
         "org.reflections.ReflectionUtils$15",
         "org.reflections.ReflectionUtils$16",
         "org.reflections.Configuration",
         "org.reflections.ReflectionUtils$13",
         "org.reflections.ReflectionUtils$14",
         "org.reflections.scanners.TypeElementsScanner",
         "org.reflections.ReflectionUtils$17",
         "org.reflections.ReflectionUtils$18",
         "org.reflections.serializers.JavaCodeSerializer1$Data$1",
         "org.reflections.vfs.Vfs",
         "org.reflections.vfs.JarInputFile$1",
         "org.reflections.serializers.JavaCodeSerializer1",
         "org.reflections.ReflectionUtils$8",
         "org.reflections.util.FilterBuilder$Matcher",
         "org.reflections.ReflectionUtils$9",
         "org.reflections.ReflectionUtils$6",
         "org.reflections.ReflectionUtils$7",
         "org.reflections.vfs.SystemDir$1",
         "org.reflections.serializers.JavassistSerializer",
         "org.reflections.vfs.ZipDir",
         "org.reflections.scanners.MethodAnnotationsScanner",
         "org.reflections.ReflectionUtils$1",
         "org.reflections.util.FilterBuilder$Exclude",
         "org.reflections.ReflectionUtils$4",
         "org.reflections.ReflectionUtils$5",
         "org.reflections.ReflectionUtils$2",
         "org.reflections.ReflectionUtils$3",
         "org.reflections.vfs.CommonsVfs2UrlType$File",
         "org.reflections.scanners.FieldAnnotationsScanner",
         "org.reflections.Store",
         "org.reflections.Store$IterableChain",
         "org.reflections.scanners.SubTypesScanner",
         "org.reflections.vfs.JarInputFile",
         "org.reflections.scanners.MethodParameterNamesScanner",
         "org.reflections.vfs.UrlTypeVFS$1"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": [
         {
          "id": "org.javassist:javassist:jar:3.18.2-GA:compile",
          "coordinates": "org.javassist:javassist:3.18.2-GA",
          "groupId": "org.javassist",
          "artifactId": "javassist",
          "version": "3.18.2-GA",
          "scope": "compile",
          "packaging": "jar",
          "omitted": false,
          "size": 714524,
          "type": "transitive",
          "status": "bloated",
          "parent": "org.reflections:reflections:jar:0.9.9:compile",
          "allTypes": [
           "javassist.bytecode.CodeIterator$Pointers",
           "javassist.tools.reflect.Reflection",
           "javassist.bytecode.DuplicateMemberException",
           "javassist.bytecode.StackMap$Shifter",
           "javassist.expr.Cast$ProceedForCast",
           "javassist.convert.TransformBefore",
           "javassist.bytecode.BootstrapMethodsAttribute",
           "javassist.tools.reflect.CannotInvokeException",
           "javassist.bytecode.Utf8Info",
           "javassist.util.proxy.ProxyObjectInputStream",
           "javassist.bytecode.annotation.BooleanMemberValue",
           "javassist.CodeConverter",
           "javassist.Modifier",
           "javassist.compiler.ast.DoubleConst",
           "javassist.ClassMap",
           "javassist.bytecode.CodeIterator$Jump16",
           "javassist.bytecode.StackMap",
           "javassist.util.proxy.SecurityActions",
           "javassist.CtField$PtreeInitializer",
           "javassist.bytecode.analysis.SubroutineScanner",
           "javassist.bytecode.analysis.ControlFlow$Block",
           "javassist.bytecode.stackmap.BasicBlock$Mark",
           "javassist.bytecode.StackMap$InsertLocal",
           "javassist.bytecode.StackMapTable$RuntimeCopyException",
           "javassist.bytecode.ParameterAnnotationsAttribute",
           "javassist.bytecode.annotation.MemberValue",
           "javassist.bytecode.ByteArray",
           "javassist.CtNewMethod",
           "javassist.CtField$CodeInitializer",
           "javassist.bytecode.annotation.ArrayMemberValue",
           "javassist.util.proxy.SerializedProxy$1",
           "javassist.compiler.SyntaxError",
           "javassist.compiler.ast.InstanceOfExpr",
           "javassist.compiler.KeywordTable",
           "javassist.bytecode.StackMapTable$OffsetShifter",
           "javassist.bytecode.CodeIterator$AlignmentException",
           "javassist.bytecode.CodeIterator$Jump32",
           "javassist.compiler.ast.ASTree",
           "javassist.bytecode.analysis.IntQueue$Entry",
           "javassist.bytecode.analysis.Executor",
           "javassist.tools.web.BadHttpRequest",
           "javassist.bytecode.analysis.MultiArrayType",
           "javassist.bytecode.stackmap.BasicBlock$JsrBytecode",
           "javassist.bytecode.StackMap$Writer",
           "javassist.Translator",
           "javassist.CtNewWrappedConstructor",
           "javassist.bytecode.CodeIterator$Lookup",
           "javassist.CodeConverter$DefaultArrayAccessReplacementMethodNames",
           "javassist.expr.NewArray",
           "javassist.compiler.ast.FieldDecl",
           "javassist.scopedpool.ScopedClassPoolFactory",
           "javassist.CtField$Initializer",
           "javassist.bytecode.SignatureAttribute$MethodSignature",
           "javassist.bytecode.InnerClassesAttribute",
           "javassist.bytecode.stackmap.TypeData",
           "javassist.bytecode.ClassInfo",
           "javassist.bytecode.stackmap.Tracer",
           "javassist.util.HotSwapper$1",
           "javassist.NotFoundException",
           "javassist.bytecode.analysis.ControlFlow$Catcher",
           "javassist.CtClassType",
           "javassist.bytecode.annotation.FloatMemberValue",
           "javassist.compiler.MemberCodeGen$JsrHook2",
           "javassist.bytecode.stackmap.TypeData$AbsTypeVar",
           "javassist.bytecode.CodeIterator$Gap",
           "javassist.bytecode.FloatInfo",
           "javassist.CodeConverter$ArrayAccessReplacementMethodNames",
           "javassist.CtBehavior",
           "javassist.bytecode.annotation.ClassMemberValue",
           "javassist.bytecode.Descriptor$Iterator",
           "javassist.bytecode.LocalVariableTypeAttribute",
           "javassist.CtMethod$StringConstParameter",
           "javassist.CtPrimitiveType",
           "javassist.bytecode.analysis.Frame",
           "javassist.util.proxy.ProxyFactory$2",
           "javassist.compiler.MemberResolver",
           "javassist.util.proxy.ProxyFactory$3",
           "javassist.bytecode.CodeAttribute$LdcEntry",
           "javassist.bytecode.LocalVariableAttribute",
           "javassist.tools.reflect.Compiler",
           "javassist.bytecode.analysis.MultiType",
           "javassist.util.proxy.ProxyFactory$1",
           "javassist.CtNewWrappedMethod",
           "javassist.bytecode.stackmap.MapMaker",
           "javassist.CtField$FloatInitializer",
           "javassist.CtField$MethodInitializer",
           "javassist.bytecode.StackMap$SwitchShifter",
           "javassist.bytecode.SignatureAttribute$ClassSignature",
           "javassist.bytecode.Mnemonic",
           "javassist.bytecode.analysis.ControlFlow$Access",
           "javassist.bytecode.DeprecatedAttribute",
           "javassist.compiler.ast.Variable",
           "javassist.bytecode.analysis.Analyzer$ExceptionInfo",
           "javassist.expr.Cast",
           "javassist.bytecode.Descriptor",
           "javassist.bytecode.AccessFlag",
           "javassist.bytecode.StackMap$Printer",
           "javassist.bytecode.SignatureAttribute$TypeArgument",
           "javassist.bytecode.annotation.NoSuchClassError",
           "javassist.expr.MethodCall",
           "javassist.bytecode.annotation.Annotation",
           "javassist.bytecode.stackmap.TypeData$UninitData",
           "javassist.compiler.JvstTypeChecker",
           "javassist.bytecode.ByteStream",
           "javassist.ClassPool$1",
           "javassist.bytecode.MemberrefInfo",
           "javassist.util.proxy.ProxyFactory$Find2MethodsArgs",
           "javassist.compiler.TypeChecker",
           "javassist.compiler.ast.BinExpr",
           "javassist.bytecode.LineNumberAttribute$Pc",
           "javassist.bytecode.SignatureAttribute$ObjectType",
           "javassist.bytecode.stackmap.TypeData$ClassName",
           "javassist.bytecode.annotation.LongMemberValue",
           "javassist.bytecode.LongInfo",
           "javassist.bytecode.analysis.ControlFlow$1",
           "javassist.bytecode.analysis.ControlFlow$2",
           "javassist.bytecode.analysis.ControlFlow$3",
           "javassist.CtClass$DelayedFileOutputStream",
           "javassist.compiler.ast.Stmnt",
           "javassist.SerialVersionUID",
           "javassist.CtMethod$LongConstParameter",
           "javassist.expr.ConstructorCall",
           "javassist.runtime.Inner",
           "javassist.tools.reflect.CompiledClass",
           "javassist.CtNewConstructor",
           "javassist.bytecode.ClassFileWriter$ConstPoolWriter",
           "javassist.LoaderClassPath",
           "javassist.convert.TransformReadField",
           "javassist.bytecode.StackMapTable$SwitchShifter",
           "javassist.bytecode.ExceptionsAttribute",
           "javassist.compiler.ast.AssignExpr",
           "javassist.tools.rmi.ExportedObject",
           "javassist.bytecode.annotation.AnnotationsWriter",
           "javassist.compiler.ast.Keyword",
           "javassist.bytecode.annotation.StringMemberValue",
           "javassist.compiler.ast.ArrayInit",
           "javassist.bytecode.Descriptor$PrettyPrinter",
           "javassist.bytecode.StackMapTable$Writer",
           "javassist.CtMethod",
           "javassist.compiler.ast.StringL",
           "javassist.util.proxy.ProxyObjectOutputStream",
           "javassist.compiler.ast.Pair",
           "javassist.tools.reflect.Sample",
           "javassist.bytecode.ClassFileWriter$MethodWriter",
           "javassist.tools.rmi.ObjectNotFoundException",
           "javassist.bytecode.analysis.Type",
           "javassist.bytecode.CodeIterator$Branch",
           "javassist.convert.TransformWriteField",
           "javassist.compiler.MemberResolver$Method",
           "javassist.compiler.ast.CallExpr",
           "javassist.bytecode.StackMapTable$Printer",
           "javassist.bytecode.ExceptionTable",
           "javassist.util.proxy.FactoryHelper",
           "javassist.Loader",
           "javassist.bytecode.InvokeDynamicInfo",
           "javassist.convert.TransformAccessArrayField",
           "javassist.runtime.Desc",
           "javassist.CtField$MultiArrayInitializer",
           "javassist.bytecode.StackMapTable$SimpleCopy",
           "javassist.compiler.ast.NewExpr",
           "javassist.bytecode.MethodHandleInfo",
           "javassist.expr.NewExpr",
           "javassist.bytecode.IntegerInfo",
           "javassist.bytecode.stackmap.TypeData$TypeVar",
           "javassist.expr.NewArray$ProceedForArray",
           "javassist.CtField$ArrayInitializer",
           "javassist.bytecode.analysis.IntQueue$1",
           "javassist.compiler.TokenId",
           "javassist.compiler.Token",
           "javassist.bytecode.analysis.FramePrinter",
           "javassist.CtField$LongInitializer",
           "javassist.tools.web.Webserver",
           "javassist.JarDirClassPath",
           "javassist.CtField$NewInitializer",
           "javassist.bytecode.CodeIterator",
           "javassist.bytecode.ExceptionTableEntry",
           "javassist.tools.rmi.ObjectImporter",
           "javassist.bytecode.ClassFile",
           "javassist.bytecode.AnnotationsAttribute$Copier",
           "javassist.compiler.Javac",
           "javassist.expr.ExprEditor$LoopContext",
           "javassist.tools.reflect.ClassMetaobject",
           "javassist.bytecode.CodeAttribute$RuntimeCopyException",
           "javassist.FieldInitLink",
           "javassist.bytecode.StackMapTable$NewRemover",
           "javassist.tools.rmi.StubGenerator",
           "javassist.bytecode.AttributeInfo",
           "javassist.bytecode.StackMap$SimpleCopy",
           "javassist.bytecode.annotation.IntegerMemberValue",
           "javassist.expr.Instanceof",
           "javassist.bytecode.LineNumberAttribute",
           "javassist.scopedpool.SoftValueHashMap$SoftValueRef",
           "javassist.expr.FieldAccess$ProceedForWrite",
           "javassist.scopedpool.ScopedClassPoolRepository",
           "javassist.CtField$CodeInitializer0",
           "javassist.runtime.DotClass",
           "javassist.bytecode.stackmap.TypedBlock",
           "javassist.CtClass",
           "javassist.bytecode.SignatureAttribute$Type",
           "javassist.compiler.Lex",
           "javassist.bytecode.CodeIterator$LdcW",
           "javassist.tools.reflect.CannotCreateException",
           "javassist.bytecode.SignatureAttribute$BaseType",
           "javassist.tools.reflect.Loader",
           "javassist.bytecode.stackmap.TypeTag",
           "javassist.bytecode.stackmap.TypeData$UninitThis",
           "javassist.compiler.CompileError",
           "javassist.compiler.MemberCodeGen$JsrHook",
           "javassist.bytecode.StringInfo",
           "javassist.bytecode.NameAndTypeInfo",
           "javassist.bytecode.CodeIterator$If16",
           "javassist.bytecode.SignatureAttribute",
           "javassist.CtMethod$IntConstParameter",
           "javassist.bytecode.Opcode",
           "javassist.ClassPathList",
           "javassist.tools.web.ServiceThread",
           "javassist.ClassPoolTail",
           "javassist.bytecode.annotation.ShortMemberValue",
           "javassist.expr.NewExpr$ProceedForNew",
           "javassist.bytecode.SyntheticAttribute",
           "javassist.compiler.NoFieldException",
           "javassist.bytecode.stackmap.BasicBlock$Catch",
           "javassist.bytecode.AnnotationsAttribute$Renamer",
           "javassist.bytecode.CodeIterator$Switcher",
           "javassist.bytecode.EnclosingMethodAttribute",
           "javassist.CtField$IntInitializer",
           "javassist.bytecode.stackmap.TypeData$ArrayType",
           "javassist.bytecode.StackMapTable$Copier",
           "javassist.bytecode.analysis.Analyzer$1",
           "javassist.bytecode.StackMap$NewRemover",
           "javassist.convert.TransformFieldAccess",
           "javassist.util.proxy.SerializedProxy",
           "javassist.bytecode.DoubleInfo",
           "javassist.bytecode.InstructionPrinter",
           "javassist.util.proxy.RuntimeSupport$DefaultMethodHandler",
           "javassist.bytecode.LongVector",
           "javassist.util.proxy.SecurityActions$6",
           "javassist.bytecode.annotation.Annotation$Pair",
           "javassist.util.proxy.SecurityActions$5",
           "javassist.bytecode.StackMapTable$Walker",
           "javassist.tools.reflect.Metalevel",
           "javassist.bytecode.ClassFileWriter$AttributeWriter",
           "javassist.scopedpool.ScopedClassPoolFactoryImpl",
           "javassist.util.proxy.SecurityActions$2",
           "javassist.util.proxy.SecurityActions$1",
           "javassist.util.proxy.SecurityActions$4",
           "javassist.util.proxy.SecurityActions$3",
           "javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod",
           "javassist.bytecode.MethodrefInfo",
           "javassist.compiler.ast.CondExpr",
           "javassist.bytecode.stackmap.TypeData$BasicType",
           "javassist.bytecode.StackMapTable$Shifter",
           "javassist.tools.rmi.RemoteRef",
           "javassist.expr.Instanceof$ProceedForInstanceof",
           "javassist.tools.rmi.Sample",
           "javassist.bytecode.StackMapTable$InsertLocal",
           "javassist.bytecode.Bytecode",
           "javassist.CtField$DoubleInitializer",
           "javassist.CtNewClass",
           "javassist.util.proxy.Proxy",
           "javassist.compiler.ast.MethodDecl",
           "javassist.convert.TransformCall",
           "javassist.bytecode.CodeAnalyzer",
           "javassist.compiler.ast.CastExpr",
           "javassist.bytecode.SignatureAttribute$TypeVariable",
           "javassist.bytecode.annotation.AnnotationImpl",
           "javassist.bytecode.ConstInfo",
           "javassist.CtConstructor",
           "javassist.scopedpool.SoftValueHashMap",
           "javassist.tools.rmi.AppletServer",
           "javassist.tools.reflect.Metaobject",
           "javassist.util.proxy.MethodFilter",
           "javassist.ClassPath",
           "javassist.bytecode.InterfaceMethodrefInfo",
           "javassist.CtField",
           "javassist.bytecode.analysis.Subroutine",
           "javassist.expr.Handler",
           "javassist.bytecode.stackmap.TypeData$ArrayElement",
           "javassist.compiler.ast.Member",
           "javassist.ClassPool",
           "javassist.compiler.ast.Symbol",
           "javassist.compiler.Javac$CtFieldWithInit",
           "javassist.JarDirClassPath$1",
           "javassist.bytecode.CodeIterator$Table",
           "javassist.compiler.ProceedHandler",
           "javassist.tools.reflect.CannotReflectException",
           "javassist.scopedpool.ScopedClassPoolRepositoryImpl",
           "javassist.CtField$ParamInitializer",
           "javassist.ByteArrayClassPath",
           "javassist.bytecode.SourceFileAttribute",
           "javassist.CannotCompileException",
           "javassist.tools.Dump",
           "javassist.compiler.MemberCodeGen",
           "javassist.DirClassPath",
           "javassist.compiler.ast.Expr",
           "javassist.expr.ExprEditor$NewOp",
           "javassist.bytecode.analysis.Util",
           "javassist.bytecode.AnnotationsAttribute",
           "javassist.bytecode.ClassFilePrinter",
           "javassist.bytecode.stackmap.BasicBlock",
           "javassist.bytecode.SignatureAttribute$ClassType",
           "javassist.runtime.Cflow",
           "javassist.util.proxy.ProxyFactory",
           "javassist.convert.TransformNew",
           "javassist.bytecode.SignatureAttribute$ArrayType",
           "javassist.bytecode.ConstPool",
           "javassist.bytecode.analysis.Analyzer",
           "javassist.bytecode.stackmap.TypeData$UninitTypeVar",
           "javassist.util.proxy.ProxyFactory$UniqueName",
           "javassist.tools.framedump",
           "javassist.CtClass$1",
           "javassist.bytecode.AnnotationsAttribute$Parser",
           "javassist.util.proxy.RuntimeSupport",
           "javassist.bytecode.SignatureAttribute$TypeParameter",
           "javassist.bytecode.CodeAttribute",
           "javassist.bytecode.FieldInfo",
           "javassist.CtArray",
           "javassist.bytecode.annotation.AnnotationMemberValue",
           "javassist.bytecode.stackmap.BasicBlock$Maker",
           "javassist.compiler.CodeGen$1",
           "javassist.bytecode.ConstantAttribute",
           "javassist.expr.Expr",
           "javassist.compiler.CodeGen$ReturnHook",
           "javassist.compiler.Javac$3",
           "javassist.bytecode.AnnotationsAttribute$Walker",
           "javassist.compiler.Javac$2",
           "javassist.bytecode.analysis.ControlFlow",
           "javassist.compiler.Javac$1",
           "javassist.scopedpool.ScopedClassPool",
           "javassist.bytecode.StackMap$Walker",
           "javassist.bytecode.SignatureAttribute$1",
           "javassist.bytecode.analysis.IntQueue",
           "javassist.bytecode.AnnotationDefaultAttribute",
           "javassist.bytecode.SignatureAttribute$NestedClassType",
           "javassist.tools.rmi.RemoteException",
           "javassist.bytecode.ClassFileWriter$FieldWriter",
           "javassist.CtMember",
           "javassist.CtMember$Cache",
           "javassist.bytecode.StackMap$Copier",
           "javassist.bytecode.analysis.ControlFlow$Node",
           "javassist.compiler.SymbolTable",
           "javassist.SerialVersionUID$2",
           "javassist.SerialVersionUID$3",
           "javassist.bytecode.StackMapTable",
           "javassist.expr.ExprEditor",
           "javassist.util.proxy.MethodHandler",
           "javassist.bytecode.MethodTypeInfo",
           "javassist.convert.TransformAfter",
           "javassist.bytecode.annotation.ByteMemberValue",
           "javassist.bytecode.stackmap.TypeData$NullType",
           "javassist.ClassClassPath",
           "javassist.compiler.AccessorMaker",
           "javassist.compiler.ast.Declarator",
           "javassist.bytecode.annotation.MemberValueVisitor",
           "javassist.CtNewNestedClass",
           "javassist.util.Trigger",
           "javassist.compiler.CodeGen",
           "javassist.expr.FieldAccess$ProceedForRead",
           "javassist.bytecode.ByteVector",
           "javassist.runtime.Cflow$Depth",
           "javassist.CtMethod$ConstParameter",
           "javassist.SerialVersionUID$1",
           "javassist.bytecode.ClassFileWriter",
           "javassist.bytecode.ConstInfoPadding",
           "javassist.compiler.ast.Visitor",
           "javassist.util.proxy.ProxyObject",
           "javassist.util.proxy.ProxyFactory$ProxyDetails",
           "javassist.bytecode.MethodInfo",
           "javassist.tools.rmi.Proxy",
           "javassist.JarClassPath",
           "javassist.URLClassPath",
           "javassist.expr.FieldAccess",
           "javassist.bytecode.CodeIterator$Branch16",
           "javassist.bytecode.BadBytecode",
           "javassist.tools.web.Viewer",
           "javassist.compiler.ast.IntConst",
           "javassist.util.HotSwapper",
           "javassist.bytecode.FieldrefInfo",
           "javassist.bytecode.annotation.CharMemberValue",
           "javassist.compiler.JvstCodeGen",
           "javassist.convert.TransformNewClass",
           "javassist.compiler.Parser",
           "javassist.bytecode.SignatureAttribute$Cursor",
           "javassist.CtField$StringInitializer",
           "javassist.convert.Transformer",
           "javassist.bytecode.annotation.DoubleMemberValue",
           "javassist.util.proxy.ProxyFactory$ClassLoaderProvider",
           "javassist.bytecode.stackmap.TypedBlock$Maker",
           "javassist.compiler.ast.ASTList",
           "javassist.bytecode.annotation.EnumMemberValue"
          ],
          "usedTypes": [],
          "usageRatio": 0.0,
          "children": []
         },
         {
          "id": "com.google.code.findbugs:annotations:jar:2.0.1:compile",
          "coordinates": "com.google.code.findbugs:annotations:2.0.1",
          "groupId": "com.google.code.findbugs",
          "artifactId": "annotations",
          "version": "2.0.1",
          "scope": "compile",
          "packaging": "jar",
          "omitted": false,
          "size": 74557,
          "type": "transitive",
          "status": "bloated",
          "parent": "org.reflections:reflections:jar:0.9.9:compile",
          "allTypes": [
           "javax.annotation.Nonnull$Checker",
           "javax.annotation.Nonnegative",
           "javax.annotation.CheckForSigned",
           "javax.annotation.ParametersAreNonnullByDefault",
           "edu.umd.cs.findbugs.annotations.DefaultAnnotationForParameters",
           "javax.annotation.MatchesPattern$Checker",
           "javax.annotation.meta.Exclusive",
           "edu.umd.cs.findbugs.annotations.SuppressWarnings",
           "edu.umd.cs.findbugs.annotations.ExpectWarning",
           "edu.umd.cs.findbugs.annotations.NonNull",
           "edu.umd.cs.findbugs.annotations.When",
           "javax.annotation.Syntax",
           "javax.annotation.Untainted",
           "javax.annotation.WillCloseWhenClosed",
           "edu.umd.cs.findbugs.annotations.NoWarning",
           "javax.annotation.OverridingMethodsMustInvokeSuper",
           "javax.annotation.RegEx$Checker",
           "javax.annotation.meta.TypeQualifierValidator",
           "javax.annotation.meta.Exhaustive",
           "javax.annotation.MatchesPattern",
           "javax.annotation.concurrent.ThreadSafe",
           "javax.annotation.concurrent.GuardedBy",
           "javax.annotation.meta.When",
           "net.jcip.annotations.NotThreadSafe",
           "edu.umd.cs.findbugs.annotations.DefaultAnnotationForMethods",
           "javax.annotation.Tainted",
           "edu.umd.cs.findbugs.annotations.OverrideMustInvoke",
           "edu.umd.cs.findbugs.annotations.DesireWarning",
           "edu.umd.cs.findbugs.annotations.DefaultAnnotationForFields",
           "edu.umd.cs.findbugs.annotations.DischargesObligation",
           "net.jcip.annotations.GuardedBy",
           "javax.annotation.PropertyKey",
           "javax.annotation.Detainted",
           "edu.umd.cs.findbugs.annotations.SuppressFBWarnings",
           "edu.umd.cs.findbugs.annotations.DesireNoWarning",
           "javax.annotation.WillClose",
           "edu.umd.cs.findbugs.annotations.Confidence",
           "edu.umd.cs.findbugs.annotations.DefaultAnnotation",
           "edu.umd.cs.findbugs.annotations.CheckReturnValue",
           "net.jcip.annotations.ThreadSafe",
           "edu.umd.cs.findbugs.annotations.PossiblyNull",
           "edu.umd.cs.findbugs.annotations.ReturnValuesAreNonnullByDefault",
           "javax.annotation.meta.TypeQualifierNickname",
           "javax.annotation.meta.TypeQualifier",
           "edu.umd.cs.findbugs.annotations.CleanupObligation",
           "javax.annotation.Nonnull",
           "javax.annotation.Nullable",
           "javax.annotation.WillNotClose",
           "javax.annotation.Nonnegative$Checker",
           "edu.umd.cs.findbugs.annotations.Priority",
           "javax.annotation.meta.TypeQualifierDefault",
           "javax.annotation.Signed",
           "edu.umd.cs.findbugs.annotations.UnknownNullness",
           "net.jcip.annotations.Immutable",
           "javax.annotation.RegEx",
           "javax.annotation.CheckReturnValue",
           "edu.umd.cs.findbugs.annotations.CreatesObligation",
           "edu.umd.cs.findbugs.annotations.Nullable",
           "edu.umd.cs.findbugs.annotations.CheckForNull",
           "javax.annotation.CheckForNull",
           "javax.annotation.concurrent.Immutable",
           "javax.annotation.concurrent.NotThreadSafe"
          ],
          "usedTypes": [],
          "usageRatio": 0.0,
          "children": []
         }
        ]
       }
      ]
     }
    ]
   },
   {
    "id": "com.querydsl:querydsl-collections:jar:4.2.1:compile",
    "coordinates": "com.querydsl:querydsl-collections:4.2.1",
    "groupId": "com.querydsl",
    "artifactId": "querydsl-collections",
    "version": "4.2.1",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 48177,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "com.querydsl.collections.MultiComparator",
     "com.querydsl.collections.PathComparator",
     "com.querydsl.collections.GuavaHelpers$1",
     "com.querydsl.collections.CollQueryFunctions",
     "com.querydsl.collections.GuavaHelpers$2",
     "com.querydsl.collections.GuavaHelpers",
     "com.querydsl.collections.CollQueryMixin",
     "com.querydsl.collections.CollUpdateClause",
     "com.querydsl.collections.JodaTimeTemplates",
     "com.querydsl.collections.CollQuery",
     "com.querydsl.collections.DefaultEvaluatorFactory",
     "com.querydsl.collections.DefaultQueryEngine",
     "com.querydsl.collections.CollQueryFactory",
     "com.querydsl.collections.EvaluatorFunction",
     "com.querydsl.collections.CollQueryFunctions$3",
     "com.querydsl.collections.CollQueryTemplates",
     "com.querydsl.collections.CollQueryFunctions$2",
     "com.querydsl.collections.CollQueryFunctions$1",
     "com.querydsl.collections.CollDeleteClause",
     "com.querydsl.collections.CollQueryFunctions$BinaryFunction",
     "com.querydsl.collections.CollQuerySerializer",
     "com.querydsl.collections.DefaultEvaluatorFactory$1",
     "com.querydsl.collections.AbstractCollQuery",
     "com.querydsl.collections.PathMatcher",
     "com.querydsl.collections.QueryEngine"
    ],
    "usedTypes": [
     "com.querydsl.collections.CollQuery",
     "com.querydsl.collections.CollQueryFactory"
    ],
    "usageRatio": 0.08,
    "children": []
   },
   {
    "id": "javax.ejb:ejb-api:jar:3.0:compile",
    "coordinates": "javax.ejb:ejb-api:3.0",
    "groupId": "javax.ejb",
    "artifactId": "ejb-api",
    "version": "3.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 32941,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "javax.interceptor.InvocationContext",
     "javax.ejb.NoSuchEJBException",
     "javax.ejb.EJBMetaData",
     "javax.ejb.Timeout",
     "javax.ejb.ApplicationException",
     "javax.ejb.PostActivate",
     "javax.ejb.SessionSynchronization",
     "javax.ejb.TimedObject",
     "javax.ejb.LocalHome",
     "javax.ejb.SessionBean",
     "javax.ejb.TransactionRequiredLocalException",
     "javax.ejb.ObjectNotFoundException",
     "javax.ejb.TransactionAttributeType",
     "javax.interceptor.ExcludeClassInterceptors",
     "javax.ejb.MessageDrivenBean",
     "javax.ejb.ConcurrentAccessException",
     "javax.ejb.EJBAccessException",
     "javax.ejb.Local",
     "javax.ejb.TimerHandle",
     "javax.ejb.NoSuchEntityException",
     "javax.ejb.RemoveException",
     "javax.ejb.Stateless",
     "javax.ejb.EntityContext",
     "javax.ejb.EJBTransactionRequiredException",
     "javax.ejb.SessionContext",
     "javax.ejb.EJBTransactionRolledbackException",
     "javax.ejb.EJBException",
     "javax.ejb.MessageDriven",
     "javax.ejb.PrePassivate",
     "javax.ejb.EJBLocalHome",
     "javax.ejb.Init",
     "javax.ejb.Remote",
     "javax.ejb.EJBLocalObject",
     "javax.ejb.TimerService",
     "javax.ejb.MessageDrivenContext",
     "javax.ejb.EJBHome",
     "javax.ejb.Timer",
     "javax.ejb.EJBObject",
     "javax.ejb.EJBs",
     "javax.ejb.HomeHandle",
     "javax.ejb.TransactionAttribute",
     "javax.ejb.FinderException",
     "javax.ejb.RemoteHome",
     "javax.ejb.ActivationConfigProperty",
     "javax.ejb.EJB",
     "javax.ejb.EJBContext",
     "javax.ejb.Handle",
     "javax.ejb.TransactionManagement",
     "javax.ejb.DuplicateKeyException",
     "javax.ejb.EnterpriseBean",
     "javax.ejb.EntityBean",
     "javax.ejb.AccessLocalException",
     "javax.interceptor.Interceptors",
     "javax.ejb.TransactionRolledbackLocalException",
     "javax.ejb.Stateful",
     "javax.ejb.Remove",
     "javax.ejb.CreateException",
     "javax.interceptor.AroundInvoke",
     "javax.ejb.spi.HandleDelegate",
     "javax.interceptor.ExcludeDefaultInterceptors",
     "javax.ejb.NoSuchObjectLocalException",
     "javax.ejb.TransactionManagementType"
    ],
    "usedTypes": [
     "javax.ejb.TransactionAttribute"
    ],
    "usageRatio": 0.016129032258064516,
    "children": []
   },
   {
    "id": "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:jar:1.0.1:test",
    "coordinates": "org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:1.0.1",
    "groupId": "org.apache.geronimo.specs",
    "artifactId": "geronimo-jcdi_2.0_spec",
    "version": "1.0.1",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 104197,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "javax.enterprise.inject.spi.PassivationCapable",
     "javax.enterprise.inject.Produces",
     "javax.enterprise.context.RequestScoped$Literal",
     "javax.enterprise.inject.spi.ProcessSyntheticBean",
     "javax.enterprise.inject.spi.ObserverMethod",
     "javax.enterprise.inject.spi.configurator.BeanConfigurator",
     "javax.enterprise.context.BusyConversationException",
     "javax.enterprise.inject.spi.ProcessProducerField",
     "javax.enterprise.inject.spi.BeforeBeanDiscovery",
     "javax.enterprise.inject.spi.EventMetadata",
     "javax.enterprise.context.ContextNotActiveException",
     "javax.enterprise.util.AnnotationLiteral",
     "javax.enterprise.inject.spi.EventContext",
     "javax.enterprise.util.Nonbinding",
     "javax.enterprise.inject.Instance",
     "javax.enterprise.inject.Specializes",
     "javax.enterprise.context.Destroyed",
     "javax.enterprise.inject.spi.Annotated",
     "javax.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator",
     "javax.enterprise.context.Dependent$Literal",
     "javax.enterprise.inject.spi.Extension",
     "javax.enterprise.inject.spi.ProcessManagedBean",
     "javax.enterprise.inject.New",
     "javax.enterprise.inject.spi.Unmanaged$1",
     "javax.enterprise.inject.spi.CDI",
     "javax.enterprise.context.spi.Contextual",
     "javax.enterprise.inject.spi.ProcessProducerMethod",
     "javax.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator",
     "javax.enterprise.context.ContextException",
     "javax.enterprise.context.BeforeDestroyed$Literal",
     "javax.enterprise.event.NotificationOptions$Builder",
     "javax.enterprise.inject.New$Literal",
     "javax.enterprise.inject.spi.Unmanaged",
     "javax.enterprise.inject.spi.Decorator",
     "javax.enterprise.inject.AmbiguousResolutionException",
     "javax.enterprise.inject.Model",
     "javax.enterprise.inject.Typed$Literal",
     "javax.enterprise.context.ConversationScoped",
     "javax.enterprise.inject.Alternative$Literal",
     "javax.enterprise.inject.Alternative",
     "javax.enterprise.util.Nonbinding$Literal",
     "javax.enterprise.context.SessionScoped",
     "javax.enterprise.inject.spi.AnnotatedType",
     "javax.enterprise.inject.Intercepted",
     "javax.enterprise.context.spi.CreationalContext",
     "javax.enterprise.event.NotificationOptions",
     "javax.enterprise.util.TypeLiteral",
     "javax.enterprise.inject.spi.AfterDeploymentValidation",
     "javax.enterprise.inject.literal.SingletonLiteral",
     "javax.enterprise.inject.spi.Producer",
     "javax.enterprise.context.control.RequestContextController",
     "javax.enterprise.context.spi.AlterableContext",
     "javax.enterprise.inject.Default",
     "javax.enterprise.inject.UnproxyableResolutionException",
     "javax.enterprise.inject.spi.AnnotatedField",
     "javax.enterprise.inject.spi.ProcessInjectionTarget",
     "javax.enterprise.context.Dependent",
     "javax.enterprise.inject.spi.configurator.ObserverMethodConfigurator",
     "javax.enterprise.inject.Any$Literal",
     "javax.enterprise.inject.spi.BeforeShutdown",
     "javax.enterprise.context.SessionScoped$Literal",
     "javax.enterprise.inject.spi.AnnotatedCallable",
     "javax.enterprise.inject.ResolutionException",
     "javax.enterprise.inject.spi.Unmanaged$UnmanagedInstance",
     "javax.enterprise.inject.spi.InjectionPoint",
     "javax.enterprise.inject.spi.AnnotatedMethod",
     "javax.enterprise.inject.spi.BeanManager",
     "javax.enterprise.event.TransactionPhase",
     "javax.enterprise.inject.spi.configurator.ProducerConfigurator",
     "javax.decorator.Delegate",
     "javax.enterprise.inject.spi.ProcessSessionBean",
     "javax.enterprise.inject.spi.AfterBeanDiscovery",
     "javax.enterprise.inject.spi.CDIProvider",
     "javax.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator",
     "javax.enterprise.inject.spi.ProcessBean",
     "javax.enterprise.inject.spi.InjectionTargetFactory",
     "javax.enterprise.inject.spi.InterceptionFactory",
     "javax.enterprise.inject.spi.Prioritized",
     "javax.enterprise.event.Reception",
     "javax.enterprise.inject.spi.configurator.ObserverMethodConfigurator$EventConsumer",
     "javax.enterprise.inject.spi.ProcessObserverMethod",
     "javax.enterprise.event.Observes",
     "javax.enterprise.inject.Any",
     "javax.enterprise.inject.spi.AnnotatedConstructor",
     "javax.enterprise.inject.spi.ProcessInjectionPoint",
     "javax.enterprise.context.Conversation",
     "javax.enterprise.inject.Vetoed",
     "javax.enterprise.inject.se.SeContainerInitializer",
     "javax.enterprise.inject.spi.AnnotatedMember",
     "javax.enterprise.inject.spi.DeploymentException",
     "javax.enterprise.inject.spi.ProcessAnnotatedType",
     "javax.enterprise.event.ObserverException",
     "javax.enterprise.inject.spi.WithAnnotations",
     "javax.enterprise.inject.spi.ProcessSyntheticAnnotatedType",
     "javax.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator",
     "javax.enterprise.inject.CreationException",
     "javax.enterprise.inject.spi.DefinitionException",
     "javax.enterprise.inject.Decorated",
     "javax.enterprise.inject.spi.AfterTypeDiscovery",
     "javax.enterprise.inject.Default$Literal",
     "javax.enterprise.inject.spi.ProcessBeanAttributes",
     "javax.enterprise.context.ApplicationScoped",
     "javax.enterprise.event.ImmutableNotificationOptions",
     "javax.enterprise.inject.TransientReference$Literal",
     "javax.enterprise.inject.spi.Bean",
     "javax.enterprise.context.Initialized$Literal",
     "javax.enterprise.inject.Stereotype",
     "javax.enterprise.util.AnnotationLiteral$PrivilegedActionForAccessibleObject",
     "javax.enterprise.context.spi.Context",
     "javax.enterprise.inject.spi.BeanAttributes",
     "javax.enterprise.context.Destroyed$Literal",
     "javax.enterprise.inject.UnsatisfiedResolutionException",
     "javax.enterprise.context.ConversationScoped$Literal",
     "javax.enterprise.inject.literal.InjectLiteral",
     "javax.enterprise.event.ObservesAsync",
     "javax.enterprise.inject.literal.QualifierLiteral",
     "javax.enterprise.inject.Disposes",
     "javax.enterprise.inject.spi.ProcessProducer",
     "javax.enterprise.context.BeforeDestroyed",
     "javax.enterprise.inject.IllegalProductException",
     "javax.enterprise.inject.spi.SessionBeanType",
     "javax.enterprise.inject.spi.InjectionTarget",
     "javax.enterprise.inject.spi.ProducerFactory",
     "javax.decorator.Decorator",
     "javax.enterprise.event.Event",
     "javax.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator",
     "javax.enterprise.context.ApplicationScoped$Literal",
     "javax.enterprise.inject.literal.NamedLiteral",
     "javax.enterprise.context.NonexistentConversationException",
     "javax.enterprise.context.NormalScope",
     "javax.enterprise.inject.Typed",
     "javax.enterprise.inject.spi.AnnotatedParameter",
     "javax.enterprise.inject.TransientReference",
     "javax.enterprise.inject.Specializes$Literal",
     "javax.enterprise.inject.InjectionException",
     "javax.enterprise.context.control.ActivateRequestContext",
     "javax.enterprise.inject.spi.configurator.BeanAttributesConfigurator",
     "javax.enterprise.context.RequestScoped",
     "javax.enterprise.event.ImmutableNotificationOptions$1",
     "javax.enterprise.inject.se.SeContainer",
     "javax.enterprise.inject.Vetoed$Literal",
     "javax.enterprise.event.ImmutableNotificationOptions$Builder",
     "javax.enterprise.inject.spi.InterceptionType",
     "javax.enterprise.inject.spi.ProcessSyntheticObserverMethod",
     "javax.enterprise.inject.spi.configurator.InjectionPointConfigurator",
     "javax.enterprise.inject.spi.Interceptor",
     "javax.enterprise.context.Initialized"
    ],
    "usedTypes": [
     "javax.enterprise.inject.Stereotype",
     "javax.enterprise.inject.spi.PassivationCapable",
     "javax.enterprise.inject.Default",
     "javax.enterprise.inject.spi.AfterBeanDiscovery",
     "javax.enterprise.inject.se.SeContainerInitializer",
     "javax.enterprise.inject.spi.Extension",
     "javax.enterprise.inject.UnsatisfiedResolutionException",
     "javax.enterprise.inject.spi.ProcessAnnotatedType",
     "javax.enterprise.inject.Alternative",
     "javax.enterprise.context.NormalScope",
     "javax.enterprise.inject.spi.AnnotatedType",
     "javax.enterprise.context.spi.CreationalContext",
     "javax.enterprise.util.AnnotationLiteral",
     "javax.enterprise.inject.spi.AfterDeploymentValidation",
     "javax.enterprise.event.Observes",
     "javax.enterprise.inject.se.SeContainer",
     "javax.enterprise.context.ApplicationScoped",
     "javax.enterprise.inject.Any",
     "javax.enterprise.inject.spi.InjectionPoint",
     "javax.enterprise.inject.spi.Bean",
     "javax.enterprise.inject.Instance",
     "javax.enterprise.inject.spi.BeanManager"
    ],
    "usageRatio": 0.14965986394557823,
    "children": []
   },
   {
    "id": "javax.interceptor:javax.interceptor-api:jar:1.2.1:test",
    "coordinates": "javax.interceptor:javax.interceptor-api:1.2.1",
    "groupId": "javax.interceptor",
    "artifactId": "javax.interceptor-api",
    "version": "1.2.1",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 24925,
    "type": "direct",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "javax.interceptor.Interceptor",
     "javax.interceptor.Interceptor$Priority",
     "javax.interceptor.AroundConstruct",
     "javax.interceptor.AroundTimeout",
     "javax.interceptor.InvocationContext",
     "javax.interceptor.ExcludeClassInterceptors",
     "javax.interceptor.AroundInvoke",
     "javax.interceptor.ExcludeDefaultInterceptors",
     "javax.interceptor.Interceptors",
     "javax.interceptor.InterceptorBinding"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "javax.enterprise:cdi-api:jar:1.0:provided",
    "coordinates": "javax.enterprise:cdi-api:1.0",
    "groupId": "javax.enterprise",
    "artifactId": "cdi-api",
    "version": "1.0",
    "scope": "provided",
    "packaging": "jar",
    "omitted": false,
    "size": 44908,
    "type": "direct",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "javax.enterprise.inject.spi.PassivationCapable",
     "javax.decorator.Delegate",
     "javax.enterprise.inject.spi.ProcessSessionBean",
     "javax.enterprise.inject.Produces",
     "javax.enterprise.inject.spi.AfterBeanDiscovery",
     "javax.enterprise.inject.spi.ProcessBean",
     "javax.enterprise.inject.spi.ObserverMethod",
     "javax.enterprise.event.Reception",
     "javax.enterprise.context.BusyConversationException",
     "javax.enterprise.inject.spi.ProcessProducerField",
     "javax.enterprise.inject.spi.BeforeBeanDiscovery",
     "javax.enterprise.context.ContextNotActiveException",
     "javax.enterprise.inject.spi.ProcessObserverMethod",
     "javax.enterprise.util.AnnotationLiteral",
     "javax.enterprise.event.Observes",
     "javax.enterprise.inject.Any",
     "javax.enterprise.util.Nonbinding",
     "javax.enterprise.inject.Instance",
     "javax.enterprise.inject.spi.AnnotatedConstructor",
     "javax.enterprise.inject.Specializes",
     "javax.enterprise.context.Conversation",
     "javax.enterprise.inject.spi.Annotated",
     "javax.enterprise.inject.spi.AnnotatedMember",
     "javax.enterprise.inject.spi.Extension",
     "javax.enterprise.inject.spi.ProcessManagedBean",
     "javax.enterprise.inject.New",
     "javax.enterprise.inject.spi.ProcessAnnotatedType",
     "javax.enterprise.event.ObserverException",
     "javax.enterprise.context.spi.Contextual",
     "javax.enterprise.inject.CreationException",
     "javax.enterprise.inject.spi.ProcessProducerMethod",
     "javax.enterprise.context.ContextException",
     "javax.enterprise.context.ApplicationScoped",
     "javax.enterprise.inject.spi.Bean",
     "javax.enterprise.inject.spi.Decorator",
     "javax.enterprise.inject.Stereotype",
     "javax.enterprise.inject.AmbiguousResolutionException",
     "javax.enterprise.context.spi.Context",
     "javax.enterprise.inject.Model",
     "javax.enterprise.inject.UnsatisfiedResolutionException",
     "javax.enterprise.context.ConversationScoped",
     "javax.enterprise.inject.Alternative",
     "javax.enterprise.context.SessionScoped",
     "javax.enterprise.inject.spi.AnnotatedType",
     "javax.enterprise.context.spi.CreationalContext",
     "javax.enterprise.inject.Disposes",
     "javax.enterprise.inject.spi.ProcessProducer",
     "javax.enterprise.util.TypeLiteral",
     "javax.enterprise.inject.IllegalProductException",
     "javax.enterprise.inject.spi.AfterDeploymentValidation",
     "javax.enterprise.inject.spi.SessionBeanType",
     "javax.enterprise.inject.spi.InjectionTarget",
     "javax.decorator.Decorator",
     "javax.enterprise.inject.spi.Producer",
     "javax.enterprise.event.Event",
     "javax.enterprise.inject.Default",
     "javax.enterprise.inject.UnproxyableResolutionException",
     "javax.enterprise.context.NonexistentConversationException",
     "javax.enterprise.context.NormalScope",
     "javax.enterprise.inject.spi.AnnotatedParameter",
     "javax.enterprise.inject.Typed",
     "javax.enterprise.inject.spi.AnnotatedField",
     "javax.enterprise.inject.InjectionException",
     "javax.enterprise.inject.spi.ProcessInjectionTarget",
     "javax.enterprise.context.Dependent",
     "javax.enterprise.context.RequestScoped",
     "javax.enterprise.inject.spi.BeforeShutdown",
     "javax.enterprise.inject.spi.AnnotatedCallable",
     "javax.enterprise.inject.ResolutionException",
     "javax.enterprise.inject.spi.InterceptionType",
     "javax.enterprise.inject.spi.InjectionPoint",
     "javax.enterprise.inject.spi.AnnotatedMethod",
     "javax.enterprise.inject.spi.BeanManager",
     "javax.enterprise.inject.spi.Interceptor",
     "javax.enterprise.event.TransactionPhase"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "org.jboss.interceptor:jboss-interceptor-api:jar:1.1:provided",
      "coordinates": "org.jboss.interceptor:jboss-interceptor-api:1.1",
      "groupId": "org.jboss.interceptor",
      "artifactId": "jboss-interceptor-api",
      "version": "1.1",
      "scope": "provided",
      "packaging": "jar",
      "omitted": false,
      "size": 5952,
      "type": "transitive",
      "status": "bloated",
      "parent": "javax.enterprise:cdi-api:jar:1.0:provided (optional) )",
      "allTypes": [
       "javax.interceptor.Interceptor",
       "javax.interceptor.AroundTimeout",
       "javax.interceptor.InvocationContext",
       "javax.interceptor.ExcludeClassInterceptors",
       "javax.interceptor.AroundInvoke",
       "javax.interceptor.ExcludeDefaultInterceptors",
       "javax.interceptor.Interceptors",
       "javax.interceptor.InterceptorBinding"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "javax.annotation:jsr250-api:jar:1.0:provided",
      "coordinates": "javax.annotation:jsr250-api:1.0",
      "groupId": "javax.annotation",
      "artifactId": "jsr250-api",
      "version": "1.0",
      "scope": "provided",
      "packaging": "jar",
      "omitted": false,
      "size": 5848,
      "type": "transitive",
      "status": "bloated",
      "parent": "javax.enterprise:cdi-api:jar:1.0:provided (optional) )",
      "allTypes": [
       "javax.annotation.security.DenyAll",
       "javax.annotation.PreDestroy",
       "javax.annotation.Generated",
       "javax.annotation.Resources",
       "javax.annotation.security.RolesAllowed",
       "javax.annotation.security.PermitAll",
       "javax.annotation.Resource$AuthenticationType",
       "javax.annotation.PostConstruct",
       "javax.annotation.Resource",
       "javax.annotation.security.DeclareRoles",
       "javax.annotation.security.RunAs"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "javax.inject:javax.inject:jar:1:compile",
      "coordinates": "javax.inject:javax.inject:1",
      "groupId": "javax.inject",
      "artifactId": "javax.inject",
      "version": "1",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 2497,
      "type": "transitive",
      "status": "used",
      "parent": "javax.enterprise:cdi-api:jar:1.0:provided (optional) )",
      "allTypes": [
       "javax.inject.Inject",
       "javax.inject.Provider",
       "javax.inject.Qualifier",
       "javax.inject.Scope",
       "javax.inject.Named",
       "javax.inject.Singleton"
      ],
      "usedTypes": [
       "javax.inject.Inject",
       "javax.inject.Qualifier",
       "javax.inject.Named"
      ],
      "usageRatio": 0.5,
      "children": []
     }
    ]
   },
   {
    "id": "com.google.guava:guava:jar:19.0:compile",
    "coordinates": "com.google.guava:guava:19.0",
    "groupId": "com.google.guava",
    "artifactId": "guava",
    "version": "19.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 2308517,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "com.google.common.reflect.TypeToken$SimpleTypeToken",
     "com.google.common.collect.ImmutableMultimap$Itr",
     "com.google.common.collect.HashBiMap$Inverse$1",
     "com.google.common.collect.Maps$ValueDifferenceImpl",
     "com.google.common.collect.ImmutableMultimap$FieldSettersHolder",
     "com.google.common.collect.DenseImmutableTable$Column",
     "com.google.common.collect.PeekingIterator",
     "com.google.common.collect.FilteredKeyListMultimap",
     "com.google.common.collect.MapMakerInternalMap$EvictionQueue$2",
     "com.google.common.collect.ImmutableClassToInstanceMap$Builder",
     "com.google.common.primitives.SignedBytes$LexicographicalComparator",
     "com.google.common.base.Predicates$ContainsPatternPredicate",
     "com.google.common.collect.MapMakerInternalMap$EvictionQueue$1",
     "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap$1EntrySetImpl",
     "com.google.common.util.concurrent.CollectionFuture",
     "com.google.common.collect.RegularImmutableMap",
     "com.google.common.base.Objects$ToStringHelper",
     "com.google.common.reflect.ClassPath$1",
     "com.google.common.collect.AbstractSortedKeySortedSetMultimap",
     "com.google.common.collect.TreeTraverser$PostOrderIterator",
     "com.google.common.collect.MultimapBuilder$SetMultimapBuilder",
     "com.google.common.cache.CacheBuilderSpec",
     "com.google.common.base.Joiner",
     "com.google.common.hash.Hashing$ChecksumType$2",
     "com.google.common.hash.Hashing$ChecksumType$1",
     "com.google.common.collect.DenseImmutableTable$ColumnMap",
     "com.google.common.collect.AbstractMultimap$Values",
     "com.google.common.net.HostSpecifier",
     "com.google.thirdparty.publicsuffix.PublicSuffixType",
     "com.google.common.collect.Lists$Partition",
     "com.google.common.hash.Hashing$SipHash24Holder",
     "com.google.common.io.Resources$1",
     "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1",
     "com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2",
     "com.google.common.collect.Sets$PowerSet$1",
     "com.google.common.util.concurrent.AbstractIdleService$1",
     "com.google.common.base.Functions",
     "com.google.common.collect.MapMakerInternalMap$Strength",
     "com.google.common.math.DoubleUtils",
     "com.google.common.collect.Constraints$ConstrainedListIterator",
     "com.google.common.collect.ImmutableSortedSet$Builder",
     "com.google.common.util.concurrent.Service",
     "com.google.common.collect.Multimaps$UnmodifiableMultimap",
     "com.google.common.cache.RemovalListeners",
     "com.google.common.collect.Maps$FilteredEntryMap$EntrySet",
     "com.google.common.collect.StandardTable",
     "com.google.common.collect.ImmutableSortedMultiset$SerializedForm",
     "com.google.common.cache.Striped64$Cell",
     "com.google.common.base.Converter$1",
     "com.google.common.collect.ImmutableEntry",
     "com.google.common.base.Joiner$1",
     "com.google.common.io.Closer$SuppressingSuppressor",
     "com.google.common.base.Joiner$2",
     "com.google.common.collect.StandardTable$1",
     "com.google.common.util.concurrent.SimpleTimeLimiter",
     "com.google.common.base.Joiner$3",
     "com.google.common.collect.AbstractTable$1",
     "com.google.common.primitives.Chars$CharArrayAsList",
     "com.google.common.base.CharMatcher$BitSetMatcher",
     "com.google.common.base.FinalizableReferenceQueue$SystemLoader",
     "com.google.common.io.LineReader$1",
     "com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState",
     "com.google.common.collect.Lists$AbstractListWrapper",
     "com.google.common.collect.AbstractMapBasedMultiset",
     "com.google.common.math.package-info",
     "com.google.common.collect.Multisets$FilteredMultiset$1",
     "com.google.common.collect.DiscreteDomain$LongDomain",
     "com.google.common.collect.SortedLists$1",
     "com.google.common.hash.ChecksumHashFunction",
     "com.google.common.base.Equivalence$Identity",
     "com.google.common.collect.MapConstraints$ConstrainedEntries$1",
     "com.google.common.collect.EnumBiMap",
     "com.google.common.collect.AbstractNavigableMap$1",
     "com.google.common.base.AbstractIterator$1",
     "com.google.common.escape.Platform",
     "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
     "com.google.common.collect.EmptyImmutableListMultimap",
     "com.google.common.collect.Collections2$FilteredCollection",
     "com.google.common.collect.ImmutableMultiset$SerializedForm",
     "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
     "com.google.common.reflect.TypeResolver$1",
     "com.google.common.eventbus.SubscriberRegistry$MethodIdentifier",
     "com.google.common.collect.FluentIterable$1",
     "com.google.common.collect.Maps$FilteredEntrySortedMap",
     "com.google.common.eventbus.SubscriberRegistry",
     "com.google.common.cache.CacheBuilderSpec$KeyStrengthParser",
     "com.google.common.collect.ArrayTable$ColumnMap",
     "com.google.common.collect.Iterators$PeekingImpl",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
     "com.google.common.hash.Funnels$IntegerFunnel",
     "com.google.common.collect.ForwardingList",
     "com.google.common.collect.Multimaps$Keys$1",
     "com.google.common.escape.Escapers$Builder",
     "com.google.common.cache.LocalCache$Segment",
     "com.google.common.collect.HashBiMap",
     "com.google.common.collect.Maps$EntryTransformer",
     "com.google.common.collect.Ordering",
     "com.google.common.util.concurrent.SerializingExecutor$1",
     "com.google.common.io.ByteSource$ConcatenatedByteSource",
     "com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet",
     "com.google.common.collect.EnumMultiset",
     "com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser",
     "com.google.common.collect.AllEqualOrdering",
     "com.google.common.util.concurrent.CheckedFuture",
     "com.google.common.reflect.Types$JavaVersion$3",
     "com.google.common.reflect.Types$JavaVersion$4",
     "com.google.common.reflect.Types$JavaVersion$1",
     "com.google.common.reflect.Types$JavaVersion$2",
     "com.google.common.util.concurrent.Striped$2",
     "com.google.common.util.concurrent.Striped$1",
     "com.google.common.base.CharMatcher$JavaDigit",
     "com.google.common.cache.CacheLoader$1",
     "com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder",
     "com.google.common.collect.Lists$TwoPlusArrayList",
     "com.google.common.collect.ForwardingImmutableMap",
     "com.google.common.io.ByteSource$1",
     "com.google.common.collect.Cut$1",
     "com.google.common.cache.LocalCache$Values",
     "com.google.common.cache.LocalCache$WeakValueReference",
     "com.google.common.collect.MapConstraints$ConstrainedMap",
     "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2",
     "com.google.common.util.concurrent.Striped$PaddedSemaphore",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$2",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$1",
     "com.google.common.util.concurrent.ServiceManager$1",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$4",
     "com.google.common.base.Equivalence$1",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$3",
     "com.google.common.collect.SortedLists$KeyPresentBehavior$5",
     "com.google.common.util.concurrent.ServiceManager$2",
     "com.google.common.util.concurrent.Futures$CatchingFuture",
     "com.google.common.base.CharMatcher$Any",
     "com.google.common.base.FinalizableReferenceQueue",
     "com.google.common.collect.Multimaps$UnmodifiableMultimap$1",
     "com.google.common.collect.Cut$BelowValue",
     "com.google.common.collect.ImmutableSetMultimap$Builder",
     "com.google.common.collect.ImmutableMapEntrySet",
     "com.google.common.collect.Multimaps",
     "com.google.common.collect.ClassToInstanceMap",
     "com.google.common.collect.ImmutableMultiset",
     "com.google.common.collect.ImmutableMultimap$Keys",
     "com.google.common.collect.Multisets$AbstractEntry",
     "com.google.common.util.concurrent.Futures$AbstractChainingFuture",
     "com.google.common.util.concurrent.UncheckedTimeoutException",
     "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator",
     "com.google.common.hash.Hasher",
     "com.google.common.io.ByteSource",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputedReference",
     "com.google.common.primitives.UnsignedBytes",
     "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1",
     "com.google.common.base.CharMatcher$And",
     "com.google.common.collect.ForwardingNavigableMap",
     "com.google.common.util.concurrent.Striped$5",
     "com.google.common.util.concurrent.Striped$4",
     "com.google.common.util.concurrent.Striped$3",
     "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$2",
     "com.google.common.collect.Sets$FilteredSortedSet",
     "com.google.common.collect.TreeRangeSet$1",
     "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$1",
     "com.google.common.reflect.TypeResolver$TypeMappingIntrospector",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
     "com.google.common.base.FinalizablePhantomReference",
     "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1",
     "com.google.common.io.MultiInputStream",
     "com.google.common.base.Objects$ToStringHelper$ValueHolder",
     "com.google.common.collect.Maps$EntryFunction",
     "com.google.common.collect.AbstractTable$CellSet",
     "com.google.common.hash.Hashing$Sha256Holder",
     "com.google.common.collect.ImmutableEnumSet",
     "com.google.common.collect.AbstractMultimap$Entries",
     "com.google.common.primitives.Doubles$LexicographicalComparator",
     "com.google.common.collect.ArrayTable",
     "com.google.common.base.Predicates$ContainsPatternFromStringPredicate",
     "com.google.common.base.Converter",
     "com.google.common.collect.LinkedListMultimap",
     "com.google.common.base.CharMatcher$BreakingWhitespace",
     "com.google.common.io.ByteSource$SlicedByteSource",
     "com.google.common.base.Suppliers$SupplierFunction",
     "com.google.common.io.CharSource$CharSequenceCharSource$1$1",
     "com.google.common.primitives.Doubles",
     "com.google.common.reflect.Types$WildcardTypeImpl",
     "com.google.common.base.CharMatcher$JavaLowerCase",
     "com.google.common.collect.MapConstraints$ConstrainedEntrySet",
     "com.google.common.collect.ImmutableList$Builder",
     "com.google.common.util.concurrent.ThreadFactoryBuilder",
     "com.google.common.collect.DenseImmutableTable$RowMap",
     "com.google.common.collect.AbstractMultiset",
     "com.google.common.io.LineBuffer",
     "com.google.common.primitives.Shorts",
     "com.google.common.collect.AbstractTable$Values",
     "com.google.common.collect.CompoundOrdering",
     "com.google.common.collect.Iterators",
     "com.google.common.cache.AbstractCache$SimpleStatsCounter",
     "com.google.common.collect.MapMakerInternalMap$WeakEntry",
     "com.google.common.collect.HashBiMap$Inverse$InverseKeySet$1",
     "com.google.common.collect.Ordering$IncomparableValueException",
     "com.google.common.collect.ImmutableMultiset$1",
     "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1",
     "com.google.common.reflect.Types$NativeTypeVariableEquals",
     "com.google.common.collect.Synchronized$SynchronizedMap",
     "com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher",
     "com.google.common.cache.Striped64$1",
     "com.google.common.util.concurrent.UncaughtExceptionHandlers",
     "com.google.common.primitives.Doubles$DoubleConverter",
     "com.google.common.io.BaseEncoding$StandardBaseEncoding",
     "com.google.common.reflect.ImmutableTypeToInstanceMap",
     "com.google.common.base.CaseFormat$StringConverter",
     "com.google.common.collect.StandardTable$Column$EntrySet",
     "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
     "com.google.common.collect.Tables$UnmodifiableTable",
     "com.google.common.cache.CacheBuilder$1",
     "com.google.common.cache.CacheBuilder$3",
     "com.google.common.collect.Iterators$MergingIterator",
     "com.google.common.cache.CacheBuilder$2",
     "com.google.common.base.Functions$ForMapWithDefault",
     "com.google.common.collect.ArrayTable$1$1",
     "com.google.common.collect.Collections2$OrderedPermutationIterator",
     "com.google.common.collect.Lists$RandomAccessPartition",
     "com.google.common.base.CharMatcher$ForPredicate",
     "com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher",
     "com.google.common.collect.Lists$RandomAccessReverseList",
     "com.google.common.collect.Multimaps$TransformedEntriesMultimap",
     "com.google.common.collect.SortedLists",
     "com.google.common.reflect.Types$ClassOwnership$1LocalClass",
     "com.google.common.collect.ImmutableRangeSet",
     "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1",
     "com.google.common.collect.AbstractSortedSetMultimap",
     "com.google.common.base.Functions$FunctionForMapNoDefault",
     "com.google.common.collect.ImmutableMultimap$Values",
     "com.google.common.base.Converter$1$1",
     "com.google.common.collect.ByFunctionOrdering",
     "com.google.common.cache.ForwardingLoadingCache",
     "com.google.common.collect.ImmutableListMultimap$Builder",
     "com.google.common.collect.ImmutableSortedMap$SerializedForm",
     "com.google.common.collect.ForwardingSortedMap",
     "com.google.common.collect.Serialization",
     "com.google.common.collect.Tables$UnmodifiableRowSortedMap",
     "com.google.common.reflect.ClassPath$DefaultScanner",
     "com.google.common.collect.ForwardingBlockingDeque",
     "com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues",
     "com.google.common.collect.Synchronized$SynchronizedMultimap",
     "com.google.common.primitives.UnsignedLong",
     "com.google.common.util.concurrent.AbstractFuture$SetFuture",
     "com.google.common.util.concurrent.ExecutionError",
     "com.google.common.io.CharSequenceReader",
     "com.google.common.primitives.UnsignedInts",
     "com.google.common.base.Enums",
     "com.google.common.collect.TreeTraverser$PreOrderIterator",
     "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
     "com.google.common.collect.Multisets$2$1",
     "com.google.common.collect.UnmodifiableListIterator",
     "com.google.common.collect.LinkedHashMultimap$ValueSet",
     "com.google.common.collect.DenseImmutableTable",
     "com.google.common.util.concurrent.Futures$AsyncCatchingFuture",
     "com.google.common.collect.MinMaxPriorityQueue",
     "com.google.common.base.Preconditions",
     "com.google.common.collect.AbstractRangeSet",
     "com.google.common.collect.BinaryTreeTraverser$InOrderIterator",
     "com.google.common.collect.Collections2$OrderedPermutationCollection",
     "com.google.common.collect.AbstractMultimap$EntrySet",
     "com.google.common.collect.AbstractSortedMultiset$1DescendingMultisetImpl",
     "com.google.common.util.concurrent.SettableFuture",
     "com.google.common.base.Predicates$AssignableFromPredicate",
     "com.google.common.hash.Hashing$Sha384Holder",
     "com.google.common.cache.LocalCache$AccessQueue",
     "com.google.common.collect.TreeMultiset",
     "com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter",
     "com.google.common.util.concurrent.MoreExecutors$Application",
     "com.google.common.cache.CacheBuilderSpec$MaximumWeightParser",
     "com.google.common.collect.HashMultimap",
     "com.google.common.net.PercentEscaper",
     "com.google.common.collect.LinkedListMultimap$KeyList",
     "com.google.common.collect.Lists$OnePlusArrayList",
     "com.google.common.collect.Synchronized$SynchronizedNavigableSet",
     "com.google.common.util.concurrent.AbstractCheckedFuture",
     "com.google.common.util.concurrent.AtomicLongMap",
     "com.google.common.util.concurrent.ExecutionList",
     "com.google.common.collect.DescendingMultiset",
     "com.google.common.collect.Maps$AsMapView",
     "com.google.common.collect.StandardTable$Row$1$1",
     "com.google.common.io.ByteSink$1",
     "com.google.common.collect.ImmutableSet",
     "com.google.common.primitives.Chars$LexicographicalComparator",
     "com.google.common.collect.StandardTable$Column$KeySet",
     "com.google.common.reflect.ClassPath$ResourceInfo",
     "com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet",
     "com.google.common.cache.CacheLoader",
     "com.google.common.collect.MapMakerInternalMap$KeySet",
     "com.google.common.collect.Cut$AboveValue",
     "com.google.common.collect.Maps$IteratorBasedAbstractMap",
     "com.google.common.cache.LocalCache$SoftValueReference",
     "com.google.common.collect.Maps$FilteredEntryBiMap",
     "com.google.common.base.Splitter$Strategy",
     "com.google.common.eventbus.Dispatcher",
     "com.google.common.primitives.Longs$LexicographicalComparator",
     "com.google.common.util.concurrent.AbstractScheduledService$1",
     "com.google.common.collect.ArrayTable$ArrayMap$1",
     "com.google.common.collect.Sets$CartesianSet$1",
     "com.google.common.base.Predicates$ObjectPredicate$1",
     "com.google.common.cache.LocalCache$WeakEntry",
     "com.google.common.hash.Hashing",
     "com.google.common.reflect.TypeToken",
     "com.google.common.collect.AbstractSequentialIterator",
     "com.google.common.collect.MapDifference$ValueDifference",
     "com.google.common.collect.TreeTraverser",
     "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
     "com.google.common.io.Files",
     "com.google.common.collect.Range$RangeLexOrdering",
     "com.google.common.collect.ForwardingCollection",
     "com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry",
     "com.google.common.base.Functions$1",
     "com.google.common.collect.FilteredEntryMultimap$Keys$1$1",
     "com.google.common.collect.FilteredKeyMultimap$AddRejectingList",
     "com.google.common.collect.ImmutableRangeMap$SerializedForm",
     "com.google.common.reflect.Types$JavaVersion",
     "com.google.common.hash.HashCode$BytesHashCode",
     "com.google.common.base.Predicates$ObjectPredicate$4",
     "com.google.common.base.Predicates$ObjectPredicate$3",
     "com.google.common.base.Predicates$ObjectPredicate$2",
     "com.google.common.collect.ImmutableTable",
     "com.google.common.cache.LoadingCache",
     "com.google.common.collect.ImmutableList$SubList",
     "com.google.common.base.FunctionalEquivalence",
     "com.google.common.collect.DenseImmutableTable$Row",
     "com.google.common.base.CharMatcher$Whitespace",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior",
     "com.google.common.base.Suppliers$SupplierFunctionImpl",
     "com.google.common.hash.ChecksumHashFunction$1",
     "com.google.common.collect.ImmutableSortedMap$Builder",
     "com.google.common.collect.Multimaps$MapMultimap$1",
     "com.google.thirdparty.publicsuffix.PublicSuffixPatterns",
     "com.google.common.base.Predicates$ObjectPredicate",
     "com.google.common.collect.WellBehavedMap$EntrySet",
     "com.google.common.cache.CacheBuilderSpec$DurationParser",
     "com.google.common.reflect.TypeToken$InterfaceSet",
     "com.google.common.collect.Sets$SubSet$1",
     "com.google.common.collect.Maps$KeySet",
     "com.google.common.collect.Maps$NavigableAsMapView",
     "com.google.common.collect.AbstractIterator$1",
     "com.google.common.cache.LongAddables$1",
     "com.google.common.io.CountingInputStream",
     "com.google.common.util.concurrent.Futures$ListFuture$ListFutureRunningState",
     "com.google.common.cache.LongAddables$2",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
     "com.google.common.collect.HashBiMap$Inverse$1$1",
     "com.google.common.collect.AbstractMapBasedMultimap$1",
     "com.google.common.collect.MultimapBuilder$1",
     "com.google.common.collect.AbstractMapBasedMultimap$2",
     "com.google.common.collect.MultimapBuilder$2",
     "com.google.common.collect.ImmutableMultimap$1",
     "com.google.common.collect.MultimapBuilder$3",
     "com.google.common.collect.MultimapBuilder$4",
     "com.google.common.base.Present",
     "com.google.common.collect.ImmutableMultimap$2",
     "com.google.common.util.concurrent.AbstractService$2",
     "com.google.common.util.concurrent.AbstractService$1",
     "com.google.common.collect.SortedLists$KeyPresentBehavior",
     "com.google.common.util.concurrent.AbstractService$6",
     "com.google.common.util.concurrent.AbstractService$5",
     "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
     "com.google.common.reflect.Types$TypeVariableImpl",
     "com.google.common.util.concurrent.AbstractService$4",
     "com.google.common.util.concurrent.AbstractService$3",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator",
     "com.google.common.util.concurrent.InterruptibleTask",
     "com.google.common.html.package-info",
     "com.google.common.io.Files$FilePredicate$1",
     "com.google.common.collect.Lists$TransformingSequentialList",
     "com.google.common.io.Files$FilePredicate$2",
     "com.google.common.util.concurrent.Striped$PaddedLock",
     "com.google.common.collect.ForwardingIterator",
     "com.google.common.reflect.Types$GenericArrayTypeImpl",
     "com.google.common.util.concurrent.Striped$PowerOfTwoStriped",
     "com.google.common.primitives.package-info",
     "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet",
     "com.google.common.collect.MapMakerInternalMap$NullEntry",
     "com.google.common.primitives.Floats$FloatArrayAsList",
     "com.google.common.eventbus.Dispatcher$1",
     "com.google.common.collect.FilteredEntryMultimap",
     "com.google.common.collect.TreeRangeMap$RangeMapEntry",
     "com.google.common.io.Files$2",
     "com.google.common.collect.Maps$UnmodifiableNavigableMap",
     "com.google.common.io.Files$1",
     "com.google.common.util.concurrent.FuturesGetChecked$1",
     "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
     "com.google.common.collect.Lists$RandomAccessListWrapper",
     "com.google.common.collect.MapMakerInternalMap$ValueIterator",
     "com.google.common.reflect.TypeToken$3",
     "com.google.common.reflect.TypeToken$4",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy",
     "com.google.common.reflect.TypeToken$1",
     "com.google.common.reflect.TypeToken$2",
     "com.google.common.collect.Multimaps$MapMultimap$1$1",
     "com.google.common.io.CharStreams",
     "com.google.common.reflect.TypeToken$5",
     "com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry",
     "com.google.common.eventbus.AllowConcurrentEvents",
     "com.google.common.reflect.AbstractInvocationHandler",
     "com.google.common.util.concurrent.Futures$3",
     "com.google.common.util.concurrent.Runnables$1",
     "com.google.common.collect.ForwardingSortedSetMultimap",
     "com.google.common.util.concurrent.Futures$2",
     "com.google.common.util.concurrent.Futures$5",
     "com.google.common.collect.Multimaps$TransformedEntriesMultimap$1",
     "com.google.common.util.concurrent.Futures$4",
     "com.google.common.util.concurrent.Futures$6",
     "com.google.common.cache.LocalCache$Segment$1",
     "com.google.common.collect.AbstractIndexedListIterator",
     "com.google.common.util.concurrent.AbstractService$StateSnapshot",
     "com.google.common.collect.CollectPreconditions",
     "com.google.common.util.concurrent.Futures$TimeoutFuture",
     "com.google.common.util.concurrent.Futures$1",
     "com.google.common.reflect.TypeCapture",
     "com.google.common.reflect.Types$TypeVariableInvocationHandler",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policy",
     "com.google.common.eventbus.AsyncEventBus",
     "com.google.common.reflect.TypeVisitor",
     "com.google.common.collect.Lists$TransformingRandomAccessList$1",
     "com.google.common.collect.BinaryTreeTraverser$PostOrderIterator",
     "com.google.common.collect.MapConstraints$ConstrainedListMultimap",
     "com.google.common.base.Splitter$1$1",
     "com.google.common.base.Suppliers$ExpiringMemoizingSupplier",
     "com.google.common.base.AbstractIterator$State",
     "com.google.common.base.PairwiseEquivalence",
     "com.google.common.base.Suppliers",
     "com.google.common.math.DoubleMath",
     "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator",
     "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1",
     "com.google.common.collect.Tables$TransformedTable",
     "com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry",
     "com.google.common.collect.Constraint",
     "com.google.thirdparty.publicsuffix.TrieParser",
     "com.google.common.collect.Maps$FilteredEntryNavigableMap$1",
     "com.google.common.base.AbstractIterator",
     "com.google.common.collect.ForwardingImmutableList",
     "com.google.common.primitives.Longs$LongArrayAsList",
     "com.google.common.collect.LinkedListMultimap$NodeIterator",
     "com.google.common.collect.MultimapBuilder$HashSetSupplier",
     "com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp",
     "com.google.common.collect.Table",
     "com.google.common.collect.Sets$CartesianSet",
     "com.google.common.primitives.Longs$LongConverter",
     "com.google.common.util.concurrent.Striped$SmallLazyStriped",
     "com.google.common.base.Suppliers$SupplierOfInstance",
     "com.google.common.cache.AbstractCache$StatsCounter",
     "com.google.common.primitives.Booleans$LexicographicalComparator",
     "com.google.common.collect.MapConstraints$2$1",
     "com.google.common.math.LongMath$1",
     "com.google.common.hash.MessageDigestHashFunction$1",
     "com.google.common.base.Throwables$1",
     "com.google.common.collect.MapConstraints",
     "com.google.common.hash.BloomFilter$Strategy",
     "com.google.common.util.concurrent.Futures$ImmediateFailedFuture",
     "com.google.common.collect.AbstractMapBasedMultiset$1",
     "com.google.common.collect.MultimapBuilder$EnumSetSupplier",
     "com.google.common.collect.Multimaps$CustomSortedSetMultimap",
     "com.google.common.collect.Platform",
     "com.google.common.collect.ForwardingImmutableCollection",
     "com.google.common.collect.ImmutableEnumMap$EnumSerializedForm",
     "com.google.common.cache.LocalCache$LocalManualCache",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$1$1",
     "com.google.common.collect.ArrayTable$Row",
     "com.google.common.collect.ImmutableSet$Indexed$1",
     "com.google.common.collect.ForwardingMapEntry",
     "com.google.common.collect.TreeBasedTable$Factory",
     "com.google.common.collect.MinMaxPriorityQueue$1",
     "com.google.common.cache.LocalCache$WeakWriteEntry",
     "com.google.common.collect.NullsFirstOrdering",
     "com.google.common.util.concurrent.MoreExecutors$DirectExecutor",
     "com.google.common.collect.StandardTable$Row$1",
     "com.google.common.net.InternetDomainName",
     "com.google.common.cache.CacheBuilderSpec$LongParser",
     "com.google.common.collect.ForwardingSortedMultiset$StandardElementSet",
     "com.google.common.reflect.TypeToken$InterfaceSet$1",
     "com.google.common.cache.LocalCache$ValueReference",
     "com.google.common.collect.StandardRowSortedTable",
     "com.google.common.primitives.Ints$IntArrayAsList",
     "com.google.common.collect.Multisets$ImmutableEntry",
     "com.google.common.escape.UnicodeEscaper",
     "com.google.common.base.Absent",
     "com.google.common.base.Functions$ConstantFunction",
     "com.google.common.hash.Funnels$SinkAsStream",
     "com.google.common.io.Files$FilePredicate",
     "com.google.common.base.Throwables",
     "com.google.common.io.FileWriteMode",
     "com.google.common.base.Equivalence$Equals",
     "com.google.common.reflect.TypeResolver$TypeVariableKey",
     "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate",
     "com.google.common.collect.Synchronized$SynchronizedBiMap",
     "com.google.common.cache.ForwardingCache",
     "com.google.common.collect.Sets$ImprovedAbstractSet",
     "com.google.common.collect.StandardTable$Column$EntrySetIterator",
     "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
     "com.google.common.base.FinalizableReferenceQueue$DecoupledLoader",
     "com.google.common.base.CharMatcher$1",
     "com.google.common.collect.ImmutableMapValues",
     "com.google.common.reflect.ImmutableTypeToInstanceMap$Builder",
     "com.google.common.util.concurrent.CycleDetectingLockFactory",
     "com.google.common.collect.AbstractNavigableMap",
     "com.google.common.collect.MapMakerInternalMap$StrongValueReference",
     "com.google.common.util.concurrent.SmoothRateLimiter",
     "com.google.common.collect.GwtTransient",
     "com.google.common.collect.MapMakerInternalMap$EvictionQueue",
     "com.google.common.util.concurrent.Futures$AbstractCatchingFuture",
     "com.google.common.util.concurrent.ForwardingListeningExecutorService",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2",
     "com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector",
     "com.google.common.collect.Interners$1",
     "com.google.common.collect.ForwardingSet",
     "com.google.common.base.Functions$ToStringFunction",
     "com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap",
     "com.google.common.base.Functions$FunctionComposition",
     "com.google.common.collect.MultimapBuilder$TreeSetSupplier",
     "com.google.common.collect.StandardTable$RowMap$EntrySet$1",
     "com.google.common.base.Ticker$1",
     "com.google.common.collect.ImmutableSetMultimap$EntrySet",
     "com.google.common.collect.Multiset",
     "com.google.common.collect.ImmutableEnumSet$1",
     "com.google.common.collect.Maps$TransformedEntriesNavigableMap",
     "com.google.common.hash.BloomFilter$SerialForm",
     "com.google.common.primitives.UnsignedInts$LexicographicalComparator",
     "com.google.common.reflect.Types$ClassOwnership",
     "com.google.common.collect.Table$Cell",
     "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher",
     "com.google.common.base.CharMatcher$Negated",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock",
     "com.google.common.collect.Synchronized$1",
     "com.google.common.collect.MapMakerInternalMap$Values",
     "com.google.common.collect.ArrayTable$ArrayMap$1$1",
     "com.google.common.collect.ForwardingMultimap",
     "com.google.common.collect.MapMaker$1",
     "com.google.common.cache.LocalCache$EntryIterator",
     "com.google.common.collect.TreeMultiset$Aggregate$2",
     "com.google.common.collect.TreeRangeSet$SubRangeSet",
     "com.google.common.collect.TreeMultiset$Aggregate$1",
     "com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture",
     "com.google.common.io.ByteStreams$1",
     "com.google.common.collect.StandardTable$RowMap",
     "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
     "com.google.common.cache.CacheBuilderSpec$AccessDurationParser",
     "com.google.common.collect.ForwardingMap$StandardValues",
     "com.google.common.collect.ImmutableMap$SerializedForm",
     "com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier",
     "com.google.common.base.Optional",
     "com.google.common.io.Closeables",
     "com.google.common.collect.TreeBasedTable$TreeRow",
     "com.google.common.reflect.TypeParameter",
     "com.google.common.base.CharMatcher$NegatedFastMatcher",
     "com.google.common.collect.Range",
     "com.google.common.util.concurrent.ForwardingListenableFuture",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator",
     "com.google.common.base.CharMatcher$IsEither",
     "com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry",
     "com.google.common.collect.FilteredSetMultimap",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap",
     "com.google.common.io.FileBackedOutputStream",
     "com.google.common.io.CharSource$CharSequenceCharSource",
     "com.google.common.collect.ContiguousSet",
     "com.google.common.base.MoreObjects$ToStringHelper",
     "com.google.common.escape.CharEscaperBuilder",
     "com.google.common.util.concurrent.Striped$CompactStriped",
     "com.google.common.cache.LocalCache$HashIterator",
     "com.google.common.collect.RegularImmutableAsList",
     "com.google.common.io.Resources$UrlByteSource",
     "com.google.common.util.concurrent.Striped$LargeLazyStriped",
     "com.google.common.collect.Constraints$ConstrainedCollection",
     "com.google.common.util.concurrent.ServiceManager$ServiceListener",
     "com.google.common.xml.package-info",
     "com.google.common.base.Functions$IdentityFunction",
     "com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture",
     "com.google.common.util.concurrent.ListeningScheduledExecutorService",
     "com.google.common.collect.ImmutableSortedMap",
     "com.google.common.util.concurrent.ForwardingBlockingQueue",
     "com.google.common.io.BaseEncoding",
     "com.google.common.collect.ForwardingSetMultimap",
     "com.google.common.base.MoreObjects",
     "com.google.common.collect.GenericMapMaker",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$1",
     "com.google.common.collect.Multimaps$AsMap$EntrySet$1",
     "com.google.common.collect.ImmutableList$1",
     "com.google.common.hash.BloomFilter$1",
     "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
     "com.google.common.net.InetAddresses",
     "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1",
     "com.google.common.collect.StandardTable$Column$Values",
     "com.google.common.io.package-info",
     "com.google.common.collect.TreeMultiset$Aggregate",
     "com.google.common.collect.MapMaker$RemovalCause",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
     "com.google.common.collect.MapMakerInternalMap$KeyIterator",
     "com.google.common.reflect.Types$1",
     "com.google.common.reflect.Types$2",
     "com.google.common.util.concurrent.Service$State",
     "com.google.common.collect.AbstractBiMap$ValueSet",
     "com.google.common.base.Function",
     "com.google.common.collect.ImmutableMap",
     "com.google.common.collect.ImmutableAsList$SerializedForm",
     "com.google.common.io.ByteStreams$LimitedInputStream",
     "com.google.common.primitives.Bytes",
     "com.google.common.util.concurrent.ForwardingFuture",
     "com.google.common.collect.MinMaxPriorityQueue$Builder",
     "com.google.common.util.concurrent.TimeLimiter",
     "com.google.common.collect.ImmutableSortedMapFauxverideShim",
     "com.google.common.util.concurrent.Futures$ImmediateFailedCheckedFuture",
     "com.google.common.cache.CacheBuilder",
     "com.google.common.collect.Range$2",
     "com.google.common.collect.Range$3",
     "com.google.common.cache.LocalCache$NullEntry",
     "com.google.common.collect.Range$1",
     "com.google.common.base.Stopwatch",
     "com.google.common.collect.StandardTable$Column",
     "com.google.common.collect.RegularContiguousSet$SerializedForm",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$Policies",
     "com.google.common.collect.Interners$WeakInterner",
     "com.google.common.cache.LocalCache$AbstractCacheSet",
     "com.google.common.collect.ImmutableMultiset$Builder",
     "com.google.common.escape.Escapers$1",
     "com.google.common.cache.LocalCache$LocalLoadingCache",
     "com.google.common.collect.HashBiMap$1$MapEntry",
     "com.google.common.collect.SingletonImmutableBiMap",
     "com.google.common.collect.MapConstraints$2",
     "com.google.common.collect.MinMaxPriorityQueue$MoveDesc",
     "com.google.common.collect.Multisets$EntrySet",
     "com.google.common.collect.MapConstraints$1",
     "com.google.common.escape.Escapers$2",
     "com.google.common.util.concurrent.AbstractIdleService",
     "com.google.common.collect.ConsumingQueueIterator",
     "com.google.common.escape.Platform$1",
     "com.google.common.cache.RemovalNotification",
     "com.google.common.base.Equivalence",
     "com.google.common.cache.LocalCache$WriteQueue$1",
     "com.google.common.cache.LocalCache$LoadingValueReference",
     "com.google.common.cache.LocalCache$WriteQueue$2",
     "com.google.common.collect.Maps",
     "com.google.common.cache.Striped64",
     "com.google.common.collect.SetMultimap",
     "com.google.common.collect.ImmutableSet$SerializedForm",
     "com.google.common.collect.TransformedIterator",
     "com.google.common.collect.DescendingImmutableSortedSet",
     "com.google.common.collect.FilteredKeyMultimap$AddRejectingSet",
     "com.google.common.collect.Synchronized$SynchronizedObject",
     "com.google.common.util.concurrent.WrappingExecutorService",
     "com.google.common.util.concurrent.ListenerCallQueue",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet",
     "com.google.common.collect.Cut$AboveAll",
     "com.google.common.net.package-info",
     "com.google.common.util.concurrent.AbstractFuture",
     "com.google.common.collect.RegularContiguousSet",
     "com.google.common.hash.Crc32cHashFunction",
     "com.google.common.collect.RangeSet",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock",
     "com.google.common.escape.CharEscaper",
     "com.google.common.annotations.GwtCompatible",
     "com.google.common.collect.RegularContiguousSet$2",
     "com.google.common.collect.RegularContiguousSet$1",
     "com.google.common.collect.LinkedHashMultiset",
     "com.google.common.cache.LocalCache$WriteThroughEntry",
     "com.google.common.collect.Sets$2",
     "com.google.common.collect.Sets$3",
     "com.google.common.io.CharStreams$NullWriter",
     "com.google.common.collect.Sets$1",
     "com.google.common.base.CharMatcher$JavaLetterOrDigit",
     "com.google.common.collect.Maps$Values",
     "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
     "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1",
     "com.google.common.primitives.Booleans$BooleanArrayAsList",
     "com.google.common.collect.Constraints",
     "com.google.common.util.concurrent.Futures$AsyncChainingFuture",
     "com.google.common.escape.ArrayBasedUnicodeEscaper",
     "com.google.common.base.FinalizableReference",
     "com.google.common.collect.ImmutableEnumMap$1",
     "com.google.common.reflect.TypeToken$TypeCollector",
     "com.google.common.util.concurrent.TrustedListenableFutureTask",
     "com.google.common.util.concurrent.MoreExecutors$ListeningDecorator",
     "com.google.common.collect.FilteredEntryMultimap$ValuePredicate",
     "com.google.common.collect.HashBasedTable$Factory",
     "com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1",
     "com.google.common.collect.AbstractListMultimap",
     "com.google.common.io.MultiReader",
     "com.google.common.base.Predicates$InstanceOfPredicate",
     "com.google.common.cache.CacheBuilderSpec$RefreshDurationParser",
     "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
     "com.google.common.io.Closer$LoggingSuppressor",
     "com.google.common.util.concurrent.ServiceManager$Listener",
     "com.google.common.collect.Lists$ReverseList$1",
     "com.google.common.util.concurrent.AggregateFuture$RunningState$1",
     "com.google.common.collect.ForwardingTable",
     "com.google.common.collect.TreeMultiset$1",
     "com.google.common.io.ByteArrayDataInput",
     "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch",
     "com.google.common.collect.TreeMultiset$4",
     "com.google.common.collect.TreeMultiset$3",
     "com.google.common.collect.TreeMultiset$2",
     "com.google.common.collect.Sets$4",
     "com.google.common.cache.LocalCache$KeySet",
     "com.google.common.collect.MapMakerInternalMap$Segment",
     "com.google.common.base.CharMatcher",
     "com.google.common.collect.FilteredKeyMultimap",
     "com.google.common.collect.Sets$UnmodifiableNavigableSet",
     "com.google.common.collect.Synchronized$SynchronizedSortedMap",
     "com.google.common.collect.Maps$FilteredEntryBiMap$1",
     "com.google.common.collect.RegularImmutableMultiset$1",
     "com.google.common.collect.RegularImmutableTable$Values",
     "com.google.common.collect.MapMaker",
     "com.google.common.collect.ForwardingDeque",
     "com.google.common.util.concurrent.WrappingExecutorService$1",
     "com.google.common.collect.MapMakerInternalMap$EntryIterator",
     "com.google.common.collect.AbstractBiMap",
     "com.google.common.collect.Sets$FilteredSet",
     "com.google.common.math.LongMath$MillerRabinTester",
     "com.google.common.base.Predicates$1",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl",
     "com.google.common.collect.Multisets$3$1",
     "com.google.common.collect.Maps$FilteredEntryMap$KeySet",
     "com.google.common.collect.FilteredKeySetMultimap$EntrySet",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock",
     "com.google.common.io.ByteArrayDataOutput",
     "com.google.common.collect.Iterators$6",
     "com.google.common.collect.BiMap",
     "com.google.common.collect.Iterators$7",
     "com.google.common.collect.Iterators$8",
     "com.google.common.collect.TreeRangeMap$SubRangeMap",
     "com.google.common.collect.Iterators$9",
     "com.google.common.escape.Escaper",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$StoppedGuard",
     "com.google.common.eventbus.Dispatcher$LegacyAsyncDispatcher$EventWithSubscriber",
     "com.google.common.collect.Iterators$1",
     "com.google.common.math.LongMath",
     "com.google.common.collect.Iterators$2",
     "com.google.common.collect.Iterators$3",
     "com.google.common.collect.Iterators$4",
     "com.google.common.collect.Iterators$5",
     "com.google.common.collect.package-info",
     "com.google.common.collect.RegularImmutableBiMap$Inverse",
     "com.google.common.collect.ImmutableMultimap$Builder",
     "com.google.common.base.Defaults",
     "com.google.common.collect.AbstractMultimap",
     "com.google.common.hash.SipHashFunction$SipHasher",
     "com.google.common.hash.AbstractCompositeHashFunction",
     "com.google.common.collect.Ordering$ArbitraryOrdering$1",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference",
     "com.google.common.base.FinalizableSoftReference",
     "com.google.common.cache.LocalCache$Strength$3",
     "com.google.common.cache.LocalCache$Strength$2",
     "com.google.common.reflect.Invokable$ConstructorInvokable",
     "com.google.common.cache.LocalCache$Strength$1",
     "com.google.common.collect.MapConstraints$ConstrainedSetMultimap",
     "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher",
     "com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm",
     "com.google.common.collect.AbstractBiMap$1",
     "com.google.common.collect.TreeRangeSet$Complement",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2",
     "com.google.common.util.concurrent.AsyncFunction",
     "com.google.common.collect.WellBehavedMap$EntrySet$1$1",
     "com.google.common.util.concurrent.AbstractExecutionThreadService",
     "com.google.common.cache.CacheBuilderSpec$WriteDurationParser",
     "com.google.common.cache.LocalCache$WeightedStrongValueReference",
     "com.google.common.collect.TreeRangeSet$RangesByUpperBound$1",
     "com.google.common.io.ByteStreams$FastByteArrayOutputStream",
     "com.google.common.collect.TreeRangeSet$RangesByUpperBound$2",
     "com.google.common.cache.CacheBuilderSpec$ValueStrengthParser",
     "com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl",
     "com.google.common.collect.StandardTable$CellIterator",
     "com.google.common.collect.ComputationException",
     "com.google.common.collect.StandardTable$ColumnKeySet",
     "com.google.common.base.Splitter$2$1",
     "com.google.common.collect.StandardRowSortedTable$RowSortedMap",
     "com.google.common.collect.Lists$TransformingRandomAccessList",
     "com.google.common.cache.CacheLoader$InvalidCacheLoadException",
     "com.google.common.hash.MessageDigestHashFunction$SerializedForm",
     "com.google.common.hash.Hashing$1",
     "com.google.common.collect.Multisets",
     "com.google.common.collect.AbstractMultimap$1",
     "com.google.common.collect.ComparisonChain",
     "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable",
     "com.google.common.collect.Synchronized$SynchronizedQueue",
     "com.google.common.hash.AbstractCompositeHashFunction$1",
     "com.google.common.collect.LinkedHashMultimap$ValueEntry",
     "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
     "com.google.common.util.concurrent.AbstractScheduledService",
     "com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning",
     "com.google.common.base.package-info",
     "com.google.common.collect.MapConstraints$ConstrainedMultimap$1AsMap",
     "com.google.common.io.ByteSink$AsCharSink",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$2",
     "com.google.common.collect.Iterators$MergingIterator$1",
     "com.google.common.collect.TreeRangeSet",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$1",
     "com.google.common.base.Suppliers$ThreadSafeSupplier",
     "com.google.common.collect.StandardTable$RowMap$EntrySet",
     "com.google.common.hash.Funnels$UnencodedCharsFunnel",
     "com.google.common.math.BigIntegerMath$1",
     "com.google.common.base.Predicates",
     "com.google.common.collect.EmptyContiguousSet",
     "com.google.common.util.concurrent.AbstractFuture$Waiter",
     "com.google.common.cache.CacheLoader$1$1",
     "com.google.common.net.MediaType",
     "com.google.common.collect.Synchronized$SynchronizedEntry",
     "com.google.common.util.concurrent.Uninterruptibles",
     "com.google.common.cache.LocalCache$LoadingValueReference$1",
     "com.google.common.reflect.package-info",
     "com.google.common.collect.ConcurrentHashMultiset$2",
     "com.google.common.collect.ConcurrentHashMultiset$1",
     "com.google.common.base.CharMatcher$AnyOf",
     "com.google.common.collect.ConcurrentHashMultiset$3",
     "com.google.common.collect.Synchronized$SynchronizedSetMultimap",
     "com.google.common.collect.MapMakerInternalMap$SoftValueReference",
     "com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1",
     "com.google.common.util.concurrent.Futures$MappingCheckedFuture",
     "com.google.common.primitives.Floats$FloatConverter",
     "com.google.common.escape.package-info",
     "com.google.common.base.Platform",
     "com.google.common.collect.ImmutableList$ReverseImmutableList",
     "com.google.common.util.concurrent.Service$Listener",
     "com.google.common.collect.Collections2$PermutationCollection",
     "com.google.common.hash.Funnels",
     "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap",
     "com.google.common.collect.ImmutableClassToInstanceMap$1",
     "com.google.common.collect.BoundType",
     "com.google.common.hash.Hashing$Sha512Holder",
     "com.google.common.collect.Maps$DescendingMap",
     "com.google.common.hash.Crc32cHashFunction$Crc32cHasher",
     "com.google.common.collect.ImmutableClassToInstanceMap",
     "com.google.common.reflect.TypeToken$ClassSet",
     "com.google.common.io.BaseEncoding$Alphabet",
     "com.google.common.collect.Multimaps$UnmodifiableListMultimap",
     "com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm",
     "com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound",
     "com.google.common.collect.RegularImmutableBiMap$1",
     "com.google.common.collect.MapMakerInternalMap$2",
     "com.google.common.collect.MapMakerInternalMap$1",
     "com.google.common.base.Splitter$3",
     "com.google.common.base.VerifyException",
     "com.google.common.base.Splitter$4",
     "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
     "com.google.common.base.Splitter$5",
     "com.google.common.cache.CacheBuilderSpec$InitialCapacityParser",
     "com.google.common.eventbus.DeadEvent",
     "com.google.common.primitives.Bytes$ByteArrayAsList",
     "com.google.common.hash.HashCode$IntHashCode",
     "com.google.common.base.Splitter$1",
     "com.google.common.base.Splitter$2",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory",
     "com.google.common.collect.Serialization$1",
     "com.google.common.collect.RegularImmutableSortedSet",
     "com.google.common.escape.ArrayBasedEscaperMap",
     "com.google.common.collect.ArrayListMultimap",
     "com.google.common.collect.TreeRangeMap$AsMapOfRanges",
     "com.google.common.collect.HashBasedTable",
     "com.google.common.collect.LinkedHashMultimap$1",
     "com.google.common.collect.MultimapBuilder$ArrayListSupplier",
     "com.google.common.collect.Collections2",
     "com.google.common.collect.ForwardingNavigableSet",
     "com.google.common.math.IntMath",
     "com.google.common.collect.ForwardingImmutableSet",
     "com.google.common.collect.NullsLastOrdering",
     "com.google.common.collect.RegularImmutableMultiset",
     "com.google.common.cache.LocalCache$EntryFactory$6",
     "com.google.common.cache.LocalCache$EntryFactory$7",
     "com.google.common.cache.LocalCache$EntryFactory$8",
     "com.google.common.collect.AbstractSortedMultiset",
     "com.google.common.cache.LocalCache$EntryFactory$2",
     "com.google.common.collect.HashBiMap$1",
     "com.google.common.collect.RegularImmutableMultiset$ElementSet",
     "com.google.common.util.concurrent.Futures$ImmediateSuccessfulFuture",
     "com.google.common.cache.LocalCache$EntryFactory$3",
     "com.google.common.cache.LocalCache$EntryFactory$4",
     "com.google.common.cache.LocalCache$EntryFactory$5",
     "com.google.common.cache.LocalCache$EntryFactory$1",
     "com.google.common.base.CharMatcher$Invisible",
     "com.google.common.collect.HashBiMap$KeySet$1",
     "com.google.common.base.Strings",
     "com.google.common.collect.AbstractMapBasedMultimap",
     "com.google.common.collect.Constraints$ConstrainedRandomAccessList",
     "com.google.common.collect.DiscreteDomain",
     "com.google.common.util.concurrent.Atomics",
     "com.google.common.collect.MapConstraints$ConstrainedAsMapValues",
     "com.google.common.collect.TreeMultiset$AvlNode",
     "com.google.common.collect.AbstractBiMap$EntrySet$1",
     "com.google.common.collect.LinkedListMultimap$1ValuesImpl$1",
     "com.google.common.collect.Cut",
     "com.google.common.collect.FilteredEntryMultimap$Keys",
     "com.google.common.io.Resources",
     "com.google.common.cache.LocalCache$StrongValueReference",
     "com.google.common.collect.MapConstraints$ConstrainedMultimap",
     "com.google.common.util.concurrent.FutureCallback",
     "com.google.common.util.concurrent.Platform",
     "com.google.common.io.CharSource$CharSequenceCharSource$1",
     "com.google.common.reflect.Types$ParameterizedTypeImpl",
     "com.google.common.collect.ImmutableSortedSetFauxverideShim",
     "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
     "com.google.common.collect.ImmutableEnumMap",
     "com.google.common.collect.MapConstraints$ConstrainedAsMapEntries",
     "com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry",
     "com.google.common.reflect.TypeResolver$WildcardCapturer",
     "com.google.common.collect.AbstractMapBasedMultimap$KeySet$1",
     "com.google.common.collect.Collections2$TransformedCollection",
     "com.google.common.collect.ArrayTable$RowMap",
     "com.google.common.io.ByteStreams$ByteArrayDataOutputStream",
     "com.google.common.collect.Synchronized$SynchronizedAsMap",
     "com.google.common.base.CharMatcher$JavaUpperCase",
     "com.google.common.collect.ImmutableSetMultimap",
     "com.google.common.cache.LocalCache$EntrySet",
     "com.google.common.escape.ArrayBasedCharEscaper",
     "com.google.common.io.BaseEncoding$DecodingException",
     "com.google.common.collect.DiscreteDomain$IntegerDomain",
     "com.google.common.hash.Funnels$ByteArrayFunnel",
     "com.google.common.reflect.Reflection",
     "com.google.common.base.CharMatcher$NamedFastMatcher",
     "com.google.common.collect.Interner",
     "com.google.common.net.MediaType$Tokenizer",
     "com.google.common.collect.ImmutableMapValues$1",
     "com.google.common.collect.ImmutableMapValues$2",
     "com.google.common.collect.TreeTraverser$1",
     "com.google.common.collect.TreeTraverser$2",
     "com.google.common.collect.TreeTraverser$3",
     "com.google.common.collect.StandardTable$ColumnMap",
     "com.google.common.collect.TreeRangeMap",
     "com.google.common.base.Converter$ReverseConverter",
     "com.google.common.reflect.Invokable",
     "com.google.common.base.CharMatcher$Is",
     "com.google.common.collect.Lists$2",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$1ValuesImpl",
     "com.google.common.hash.HashFunction",
     "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet",
     "com.google.common.collect.Lists$1",
     "com.google.common.hash.Hashing$Murmur3_128Holder",
     "com.google.common.base.Supplier",
     "com.google.common.eventbus.EventBus",
     "com.google.common.collect.ReverseOrdering",
     "com.google.common.collect.HashBiMap$Inverse$InverseKeySet",
     "com.google.common.eventbus.Subscribe",
     "com.google.common.collect.Synchronized",
     "com.google.common.io.CharSource",
     "com.google.common.cache.CacheBuilder$NullListener",
     "com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry",
     "com.google.common.collect.FilteredEntryMultimap$AsMap",
     "com.google.common.collect.SortedMultisetBridge",
     "com.google.common.collect.MapMakerInternalMap$ExpirationQueue",
     "com.google.common.collect.Synchronized$SynchronizedSet",
     "com.google.common.collect.DescendingMultiset$1EntrySetImpl",
     "com.google.common.primitives.UnsignedLongs",
     "com.google.common.primitives.Shorts$LexicographicalComparator",
     "com.google.common.collect.Tables$TransformedTable$3",
     "com.google.common.collect.Tables$TransformedTable$2",
     "com.google.common.io.LineReader",
     "com.google.common.base.CharMatcher$Digit",
     "com.google.common.collect.Tables$TransformedTable$1",
     "com.google.common.collect.RegularImmutableTable",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1",
     "com.google.common.collect.Multimaps$CustomListMultimap",
     "com.google.common.hash.HashCode$LongHashCode",
     "com.google.common.reflect.TypeToken$Bounds",
     "com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm",
     "com.google.common.math.IntMath$1",
     "com.google.common.collect.Hashing",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock",
     "com.google.common.hash.HashingInputStream",
     "com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap",
     "com.google.common.collect.BinaryTreeTraverser$1",
     "com.google.common.collect.BinaryTreeTraverser$2",
     "com.google.common.collect.Multimaps$AsMap",
     "com.google.common.collect.ImmutableRangeMap",
     "com.google.common.collect.SortedMultiset",
     "com.google.common.collect.AbstractMapBasedMultiset$1$1",
     "com.google.common.collect.SparseImmutableTable",
     "com.google.common.hash.AbstractNonStreamingHashFunction",
     "com.google.common.collect.FluentIterable",
     "com.google.common.reflect.Element",
     "com.google.common.collect.DescendingImmutableSortedMultiset",
     "com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher",
     "com.google.common.base.CharMatcher$InRange",
     "com.google.common.base.CharMatcher$JavaLetter",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$5",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$4",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$7",
     "com.google.common.cache.CacheBuilderSpec$RecordStatsParser",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$6",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$1",
     "com.google.common.math.DoubleMath$1",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$3",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$2",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1",
     "com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm",
     "com.google.common.collect.MapMakerInternalMap$EntryFactory$8",
     "com.google.common.collect.RegularImmutableTable$1",
     "com.google.common.cache.CacheBuilderSpec$IntegerParser",
     "com.google.common.collect.SortedMapDifference",
     "com.google.common.collect.RegularImmutableSet",
     "com.google.common.collect.FilteredEntrySetMultimap",
     "com.google.common.collect.ForwardingSortedSet",
     "com.google.common.collect.MapMaker$NullConcurrentMap",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
     "com.google.common.collect.ImmutableListMultimap",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet",
     "com.google.common.cache.RemovalCause$4",
     "com.google.common.cache.RemovalCause$5",
     "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
     "com.google.common.hash.Hashing$ChecksumType",
     "com.google.common.cache.RemovalCause$1",
     "com.google.common.collect.ImmutableAsList",
     "com.google.common.cache.RemovalCause$2",
     "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
     "com.google.common.cache.RemovalCause$3",
     "com.google.common.util.concurrent.AtomicDouble",
     "com.google.common.util.concurrent.SerializingExecutor",
     "com.google.common.collect.WellBehavedMap",
     "com.google.common.collect.SingletonImmutableSet",
     "com.google.common.util.concurrent.AbstractService$IsStoppedGuard",
     "com.google.common.collect.ImmutableList$SerializedForm",
     "com.google.common.collect.MapMakerInternalMap$HashIterator",
     "com.google.common.util.concurrent.ForwardingExecutorService",
     "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy",
     "com.google.common.util.concurrent.AbstractListeningExecutorService",
     "com.google.common.hash.PrimitiveSink",
     "com.google.common.collect.FluentIterable$FromIterableFunction",
     "com.google.common.collect.AbstractIterator",
     "com.google.common.base.Suppliers$MemoizingSupplier",
     "com.google.common.collect.MutableClassToInstanceMap",
     "com.google.common.util.concurrent.Futures",
     "com.google.common.collect.TreeBasedTable$1",
     "com.google.common.collect.TreeBasedTable$2",
     "com.google.common.cache.RemovalListener",
     "com.google.common.collect.MapMaker$RemovalNotification",
     "com.google.common.base.Functions$PredicateFunction",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
     "com.google.common.collect.ImmutableMapValues$SerializedForm",
     "com.google.common.collect.Maps$TransformedEntriesSortedMap",
     "com.google.common.util.concurrent.AbstractService",
     "com.google.common.io.BaseEncoding$SeparatedBaseEncoding",
     "com.google.common.collect.MapMakerInternalMap$WeakValueReference",
     "com.google.common.collect.Synchronized$SynchronizedNavigableMap",
     "com.google.common.collect.AbstractSetMultimap",
     "com.google.common.collect.ImmutableTable$Builder",
     "com.google.common.primitives.UnsignedLongs$LexicographicalComparator",
     "com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter",
     "com.google.common.util.concurrent.AbstractService$IsStartableGuard",
     "com.google.common.collect.MapMakerInternalMap$Strength$2",
     "com.google.common.collect.MapMakerInternalMap$Strength$1",
     "com.google.common.collect.Multiset$Entry",
     "com.google.common.base.Predicates$NotPredicate",
     "com.google.common.math.BigIntegerMath",
     "com.google.common.collect.MapMakerInternalMap$Strength$3",
     "com.google.common.collect.AbstractMultiset$ElementSet",
     "com.google.common.collect.SortedMultisets$NavigableElementSet",
     "com.google.common.collect.TreeMultiset$Reference",
     "com.google.common.collect.EnumHashBiMap",
     "com.google.common.collect.MapMakerInternalMap$SafeToArraySet",
     "com.google.common.cache.LocalCache$WeakAccessEntry",
     "com.google.common.collect.ImmutableSortedSet$SerializedForm",
     "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier",
     "com.google.common.collect.SortedMultisets",
     "com.google.common.collect.Multimaps$MapMultimap",
     "com.google.common.util.concurrent.FakeTimeLimiter",
     "com.google.common.collect.EvictingQueue",
     "com.google.common.collect.ComparisonChain$InactiveComparisonChain",
     "com.google.common.cache.LocalCache$AbstractReferenceEntry",
     "com.google.common.cache.ForwardingCache$SimpleForwardingCache",
     "com.google.common.collect.Cut$BelowAll",
     "com.google.common.reflect.MutableTypeToInstanceMap$1",
     "com.google.common.hash.Hashing$Adler32Holder",
     "com.google.common.collect.ReverseNaturalOrdering",
     "com.google.common.collect.MapConstraints$InverseConstraint",
     "com.google.common.collect.BinaryTreeTraverser",
     "com.google.common.collect.HashBiMap$BiEntry",
     "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask",
     "com.google.common.annotations.VisibleForTesting",
     "com.google.common.cache.AbstractLoadingCache",
     "com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries",
     "com.google.common.collect.MapMaker$NullComputingConcurrentMap",
     "com.google.common.reflect.MutableTypeToInstanceMap",
     "com.google.common.collect.ComputingConcurrentHashMap",
     "com.google.common.collect.ImmutableRangeMap$2",
     "com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher",
     "com.google.common.escape.CharEscaperBuilder$CharArrayDecorator",
     "com.google.common.collect.Multisets$MultisetIteratorImpl",
     "com.google.common.collect.ImmutableRangeMap$1",
     "com.google.common.cache.package-info",
     "com.google.common.collect.AbstractNavigableMap$DescendingMap",
     "com.google.common.base.FinalizableReferenceQueue$DirectLoader",
     "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
     "com.google.common.collect.RowSortedTable",
     "com.google.common.collect.Iterables$UnmodifiableIterable",
     "com.google.common.collect.Maps$UnmodifiableBiMap",
     "com.google.common.collect.AbstractMapEntry",
     "com.google.common.util.concurrent.Service$State$1",
     "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
     "com.google.common.util.concurrent.Service$State$2",
     "com.google.common.util.concurrent.Service$State$3",
     "com.google.common.util.concurrent.Service$State$4",
     "com.google.common.collect.Sets$PowerSet",
     "com.google.common.util.concurrent.Service$State$5",
     "com.google.common.util.concurrent.Service$State$6",
     "com.google.common.collect.ImmutableRangeSet$ComplementRanges",
     "com.google.common.collect.Maps$10",
     "com.google.common.collect.Maps$11",
     "com.google.common.io.CharStreams$1",
     "com.google.common.collect.GeneralRange",
     "com.google.common.collect.ImmutableRangeSet$SerializedForm",
     "com.google.common.collect.Iterables$10",
     "com.google.common.collect.Iterables$11",
     "com.google.common.collect.Iterables$12",
     "com.google.common.collect.Iterables$13",
     "com.google.common.collect.Iterables$14",
     "com.google.common.util.concurrent.RateLimiter",
     "com.google.common.collect.Iterables$15",
     "com.google.common.hash.Murmur3_32HashFunction",
     "com.google.common.collect.Lists",
     "com.google.common.reflect.Types",
     "com.google.common.io.PatternFilenameFilter",
     "com.google.common.collect.Maps$BiMapConverter",
     "com.google.common.util.concurrent.Futures$ImmediateFuture",
     "com.google.common.xml.XmlEscapers",
     "com.google.common.collect.Interners$WeakInterner$Dummy",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment",
     "com.google.common.base.Predicates$CompositionPredicate",
     "com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1",
     "com.google.common.collect.MapMaker$ComputingMapAdapter",
     "com.google.common.base.CharMatcher$JavaIsoControl",
     "com.google.common.collect.LinkedListMultimap$1EntriesImpl",
     "com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule",
     "com.google.common.io.Files$FileByteSink",
     "com.google.common.collect.Tables",
     "com.google.common.cache.RemovalListeners$1$1",
     "com.google.common.util.concurrent.ListenableFutureTask",
     "com.google.common.cache.RemovalListeners$1",
     "com.google.common.cache.LocalCache$WeightedWeakValueReference",
     "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound",
     "com.google.common.collect.TransformedListIterator",
     "com.google.common.hash.Hashing$Sha1Holder",
     "com.google.common.collect.TreeTraverser$PostOrderNode",
     "com.google.common.util.concurrent.SmoothRateLimiter$1",
     "com.google.common.collect.ImmutableMapEntry",
     "com.google.common.io.LittleEndianDataInputStream",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
     "com.google.common.collect.Lists$ReverseList",
     "com.google.common.base.Equivalence$EquivalentToPredicate",
     "com.google.common.collect.AbstractIterator$State",
     "com.google.common.util.concurrent.Futures$2$1",
     "com.google.common.collect.ImmutableMultimap$EntryCollection",
     "com.google.common.collect.Lists$StringAsImmutableList",
     "com.google.common.base.CharMatcher$SingleWidth",
     "com.google.common.cache.CacheLoader$FunctionToCacheLoader",
     "com.google.common.cache.LocalCache$WeightedSoftValueReference",
     "com.google.common.eventbus.SubscriberRegistry$2",
     "com.google.common.collect.Multimaps$Entries",
     "com.google.common.eventbus.EventBus$LoggingHandler",
     "com.google.common.collect.Multimaps$AsMap$EntrySet",
     "com.google.common.io.BaseEncoding$Base64Encoding",
     "com.google.common.collect.Interners$InternerFunction",
     "com.google.common.collect.MultimapBuilder$LinkedListSupplier",
     "com.google.common.collect.AbstractBiMap$Inverse",
     "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
     "com.google.common.util.concurrent.UncheckedExecutionException",
     "com.google.common.collect.Multisets$4$1",
     "com.google.common.cache.CacheBuilderSpec$MaximumSizeParser",
     "com.google.common.cache.LocalCache$StrongEntry",
     "com.google.common.eventbus.SubscriberExceptionContext",
     "com.google.common.util.concurrent.Striped",
     "com.google.common.collect.BinaryTreeTraverser$PreOrderIterator",
     "com.google.common.collect.MapMakerInternalMap$ReferenceEntry",
     "com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1",
     "com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference",
     "com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap",
     "com.google.common.collect.MapMakerInternalMap$StrongEntry",
     "com.google.common.collect.Multimaps$CustomSetMultimap",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$1KeySetImpl",
     "com.google.common.io.ByteSource$ByteArrayByteSource",
     "com.google.common.reflect.TypeResolver$TypeTable",
     "com.google.common.collect.StandardTable$Column$EntrySetIterator$1EntryImpl",
     "com.google.common.util.concurrent.ForwardingCheckedFuture",
     "com.google.common.collect.NaturalOrdering",
     "com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm",
     "com.google.common.eventbus.SubscriberRegistry$1",
     "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask",
     "com.google.common.cache.Cache",
     "com.google.common.collect.TreeTraverser$BreadthFirstIterator",
     "com.google.common.collect.LinkedListMultimap$Node",
     "com.google.common.collect.ListMultimap",
     "com.google.common.collect.WellBehavedMap$EntrySet$1",
     "com.google.common.collect.AbstractBiMap$EntrySet$1$1",
     "com.google.common.collect.Maps$NavigableKeySet",
     "com.google.common.net.HttpHeaders",
     "com.google.common.reflect.ClassPath$ClassInfo",
     "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering",
     "com.google.common.primitives.ParseRequest",
     "com.google.common.cache.CacheBuilder$OneWeigher",
     "com.google.common.util.concurrent.AbstractFuture$Failure",
     "com.google.common.collect.Multimaps$TransformedEntriesListMultimap",
     "com.google.common.escape.Escapers$Builder$1",
     "com.google.common.primitives.Longs",
     "com.google.common.collect.ForwardingListIterator",
     "com.google.common.net.UrlEscapers",
     "com.google.common.collect.MapConstraints$NotNullMapConstraint",
     "com.google.common.collect.ImmutableBiMap$SerializedForm",
     "com.google.common.collect.Multimaps$UnmodifiableSetMultimap",
     "com.google.common.cache.CacheBuilderSpec$1",
     "com.google.common.util.concurrent.package-info",
     "com.google.common.util.concurrent.ListeningExecutorService",
     "com.google.common.hash.Hashing$Md5Holder",
     "com.google.common.collect.Maps$FilteredEntryMap",
     "com.google.common.util.concurrent.AbstractService$IsStoppableGuard",
     "com.google.common.collect.Synchronized$SynchronizedMultiset",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1",
     "com.google.common.io.FileBackedOutputStream$2",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2",
     "com.google.common.io.FileBackedOutputStream$1",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3",
     "com.google.common.base.Splitter$3$1",
     "com.google.common.base.Stopwatch$1",
     "com.google.common.collect.Synchronized$SynchronizedCollection",
     "com.google.common.util.concurrent.AbstractIdleService$DelegateService$1",
     "com.google.common.util.concurrent.AbstractIdleService$DelegateService$2",
     "com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$4",
     "com.google.common.collect.Serialization$FieldSetter",
     "com.google.common.collect.Maps$UnmodifiableEntrySet",
     "com.google.common.base.CaseFormat$1",
     "com.google.common.hash.HashCode",
     "com.google.common.base.CaseFormat$2",
     "com.google.common.base.CaseFormat$3",
     "com.google.common.base.CaseFormat$4",
     "com.google.common.base.CaseFormat$5",
     "com.google.common.collect.Sets$FilteredNavigableSet",
     "com.google.common.collect.UnmodifiableSortedMultiset",
     "com.google.common.eventbus.Subscriber$1",
     "com.google.common.io.ByteSource$EmptyByteSource",
     "com.google.common.hash.ChecksumHashFunction$ChecksumHasher",
     "com.google.common.collect.MapMakerInternalMap$WriteThroughEntry",
     "com.google.common.collect.ConcurrentHashMultiset",
     "com.google.common.util.concurrent.Service$1",
     "com.google.common.collect.ForwardingQueue",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
     "com.google.common.util.concurrent.AggregateFuture$RunningState",
     "com.google.common.collect.Sets$SubSet",
     "com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator",
     "com.google.common.html.HtmlEscapers",
     "com.google.common.collect.EmptyContiguousSet$SerializedForm",
     "com.google.common.collect.ForwardingMultiset",
     "com.google.common.collect.ImmutableRangeSet$AsSet$2",
     "com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture",
     "com.google.common.collect.ImmutableRangeSet$AsSet$1",
     "com.google.common.collect.ImmutableMultiset$EntrySet",
     "com.google.common.collect.TreeMultimap",
     "com.google.common.hash.Funnels$LongFunnel",
     "com.google.common.base.Splitter",
     "com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet",
     "com.google.common.collect.Maps$8",
     "com.google.common.collect.ArrayTable$Column",
     "com.google.common.collect.Maps$9",
     "com.google.common.collect.Maps$6",
     "com.google.common.util.concurrent.MoreExecutors$2",
     "com.google.common.collect.Maps$7",
     "com.google.common.util.concurrent.MoreExecutors$1",
     "com.google.common.util.concurrent.MoreExecutors$4",
     "com.google.common.util.concurrent.MoreExecutors$3",
     "com.google.common.collect.ComparatorOrdering",
     "com.google.common.math.LongMath$MillerRabinTester$2",
     "com.google.common.math.LongMath$MillerRabinTester$1",
     "com.google.common.collect.Maps$1",
     "com.google.common.collect.Maps$4",
     "com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry",
     "com.google.common.collect.Maps$5",
     "com.google.common.collect.Maps$2",
     "com.google.common.collect.Maps$3",
     "com.google.common.collect.ImmutableSortedMultiset$Builder",
     "com.google.common.reflect.Invokable$MethodInvokable",
     "com.google.common.collect.Queues",
     "com.google.common.collect.FilteredKeyMultimap$Entries",
     "com.google.common.hash.AbstractHasher",
     "com.google.common.util.concurrent.AbstractFuture$Listener",
     "com.google.common.collect.Maps$ViewCachingAbstractMap",
     "com.google.common.reflect.TypeResolver",
     "com.google.common.base.Optional$1$1",
     "com.google.common.collect.Ordering$ArbitraryOrdering",
     "com.google.common.collect.ImmutableMap$1",
     "com.google.common.hash.Hashing$Crc32cHolder",
     "com.google.common.hash.SipHashFunction",
     "com.google.common.primitives.Doubles$DoubleArrayAsList",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior$2",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior$1",
     "com.google.common.collect.AbstractTable",
     "com.google.common.collect.Tables$1",
     "com.google.common.util.concurrent.ServiceManager",
     "com.google.common.collect.SortedLists$KeyAbsentBehavior$3",
     "com.google.common.collect.StandardRowSortedTable$1",
     "com.google.common.cache.LocalCache$LoadingSerializationProxy",
     "com.google.common.eventbus.Subscriber$SynchronizedSubscriber",
     "com.google.common.reflect.TypeToken$TypeFilter",
     "com.google.common.util.concurrent.Futures$ListFuture",
     "com.google.common.collect.Multimap",
     "com.google.common.io.CharSink",
     "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator",
     "com.google.common.collect.ForwardingConcurrentMap",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode",
     "com.google.common.base.StandardSystemProperty",
     "com.google.common.hash.Hashing$Murmur3_32Holder",
     "com.google.common.base.Suppliers$SupplierComposition",
     "com.google.common.collect.Tables$TransposeTable",
     "com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher$Event",
     "com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher",
     "com.google.common.base.CharMatcher$Or",
     "com.google.common.eventbus.Dispatcher$ImmediateDispatcher",
     "com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty",
     "com.google.common.collect.ForwardingSortedMap$StandardKeySet",
     "com.google.common.util.concurrent.MoreExecutors$Application$1",
     "com.google.common.escape.Escaper$1",
     "com.google.common.io.FileBackedOutputStream$MemoryOutput",
     "com.google.common.collect.MultimapBuilder",
     "com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap",
     "com.google.common.util.concurrent.SimpleTimeLimiter$1",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$1",
     "com.google.common.collect.CartesianList$1",
     "com.google.common.collect.Synchronized$SynchronizedRandomAccessList",
     "com.google.common.base.FinalizableWeakReference",
     "com.google.common.base.internal.Finalizer",
     "com.google.common.base.Enums$StringConverter",
     "com.google.common.collect.RegularImmutableBiMap",
     "com.google.common.io.ByteSink",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace",
     "com.google.common.collect.ImmutableBiMap$Builder",
     "com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream",
     "com.google.common.collect.HashBiMap$KeySet",
     "com.google.common.base.CharMatcher$None",
     "com.google.common.hash.BloomFilterStrategies$BitArray",
     "com.google.common.collect.RegularImmutableTable$CellSet",
     "com.google.common.collect.Maps$TransformedEntriesMap",
     "com.google.common.collect.TreeRangeSet$AsRanges",
     "com.google.common.primitives.Chars",
     "com.google.common.cache.LongAdder",
     "com.google.common.collect.WellBehavedMap$1",
     "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry",
     "com.google.common.util.concurrent.AbstractFuture$Cancellation",
     "com.google.common.hash.MessageDigestHashFunction",
     "com.google.common.util.concurrent.ServiceManager$ServiceManagerState$AwaitHealthGuard",
     "com.google.common.util.concurrent.Runnables",
     "com.google.common.collect.DenseImmutableTable$1",
     "com.google.common.cache.LocalCache$StrongAccessEntry",
     "com.google.common.collect.Count",
     "com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet",
     "com.google.common.cache.LocalCache$LocalManualCache$1",
     "com.google.common.util.concurrent.Callables",
     "com.google.common.primitives.Shorts$ShortConverter",
     "com.google.common.io.ByteStreams$ByteArrayDataInputStream",
     "com.google.common.net.HostAndPort",
     "com.google.common.collect.TreeBasedTable",
     "com.google.common.collect.MapConstraints$ConstrainedBiMap",
     "com.google.common.base.Equivalence$Wrapper",
     "com.google.common.util.concurrent.Monitor",
     "com.google.common.base.CharMatcher$FastMatcher",
     "com.google.common.collect.AbstractMapBasedMultimap$Itr",
     "com.google.common.hash.Funnels$StringCharsetFunnel",
     "com.google.common.collect.MapMakerInternalMap$ValueReference",
     "com.google.common.base.Converter$ConverterComposition",
     "com.google.common.collect.EmptyImmutableSetMultimap",
     "com.google.common.base.Predicates$IsEqualToPredicate",
     "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
     "com.google.common.collect.ImmutableCollection",
     "com.google.common.collect.Maps$IteratorBasedAbstractMap$1",
     "com.google.common.cache.LocalCache$ManualSerializationProxy",
     "com.google.common.hash.BloomFilterStrategies",
     "com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry",
     "com.google.common.io.BaseEncoding$5",
     "com.google.common.io.BaseEncoding$3",
     "com.google.common.io.BaseEncoding$4",
     "com.google.common.collect.ImmutableCollection$Builder",
     "com.google.common.io.BaseEncoding$1",
     "com.google.common.io.BaseEncoding$2",
     "com.google.common.annotations.GwtIncompatible",
     "com.google.common.collect.TreeRangeMap$1",
     "com.google.common.collect.CartesianList",
     "com.google.common.collect.Maps$FilteredKeyMap",
     "com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException",
     "com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard",
     "com.google.common.util.concurrent.SerializingExecutor$QueueWorker",
     "com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset",
     "com.google.common.util.concurrent.AbstractScheduledService$Scheduler",
     "com.google.common.util.concurrent.ListenableFuture",
     "com.google.common.collect.ImmutableEnumSet$EnumSerializedForm",
     "com.google.common.io.CharSource$ConcatenatedCharSource",
     "com.google.common.util.concurrent.JdkFutureAdapters",
     "com.google.common.collect.ImmutableList",
     "com.google.common.collect.ImmutableRangeSet$AsSet",
     "com.google.common.escape.Escapers",
     "com.google.common.io.Flushables",
     "com.google.common.collect.Iterables$10$1",
     "com.google.common.collect.SortedMultisets$ElementSet",
     "com.google.common.collect.MapConstraints$ConstrainedEntries",
     "com.google.common.reflect.TypeResolver$TypeTable$1",
     "com.google.common.hash.HashingOutputStream",
     "com.google.common.hash.BloomFilter",
     "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry",
     "com.google.common.util.concurrent.Callables$3",
     "com.google.common.util.concurrent.Callables$2",
     "com.google.common.cache.LongAddable",
     "com.google.common.collect.MapMaker$RemovalListener",
     "com.google.common.util.concurrent.Callables$1",
     "com.google.common.hash.Hashing$ConcatenatedHashFunction",
     "com.google.common.collect.ImmutableRangeMap$Builder",
     "com.google.common.io.LineProcessor",
     "com.google.common.collect.MapMakerInternalMap",
     "com.google.common.collect.ForwardingSortedMultiset",
     "com.google.common.collect.Multisets$ElementSet$1",
     "com.google.common.util.concurrent.Futures$ChainingFuture",
     "com.google.common.collect.HashBiMap$Inverse$1$1$InverseEntry",
     "com.google.common.collect.Maps$UnmodifiableEntries",
     "com.google.common.collect.BoundType$2",
     "com.google.common.collect.ImmutableSortedMap$1EntrySet$1",
     "com.google.common.collect.BoundType$1",
     "com.google.common.io.Closer$Suppressor",
     "com.google.common.collect.RegularImmutableSortedMultiset",
     "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
     "com.google.common.collect.Maps$DescendingMap$1EntrySetImpl",
     "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
     "com.google.common.reflect.ClassPath",
     "com.google.common.collect.LinkedHashMultimap",
     "com.google.common.base.CharMatcher$IsNot",
     "com.google.common.collect.Synchronized$SynchronizedList",
     "com.google.common.base.FinalizableReferenceQueue$FinalizerLoader",
     "com.google.common.cache.AbstractCache",
     "com.google.common.collect.Maps$SortedKeySet",
     "com.google.common.collect.StandardTable$TableSet",
     "com.google.common.util.concurrent.ListenerCallQueue$Callback",
     "com.google.common.util.concurrent.AbstractIdleService$DelegateService",
     "com.google.common.collect.LexicographicalOrdering",
     "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
     "com.google.common.collect.Multisets$5",
     "com.google.common.collect.StandardTable$Row",
     "com.google.common.collect.Multisets$3",
     "com.google.common.collect.Multisets$4",
     "com.google.common.collect.Multisets$1",
     "com.google.common.cache.CacheStats",
     "com.google.common.collect.Multisets$2",
     "com.google.common.collect.Iterables",
     "com.google.common.collect.LinkedListMultimap$1",
     "com.google.common.collect.GenericMapMaker$NullListener",
     "com.google.common.io.CountingOutputStream",
     "com.google.common.cache.CacheLoader$SupplierToCacheLoader",
     "com.google.common.util.concurrent.ThreadFactoryBuilder$1",
     "com.google.common.collect.HashBiMap$Itr",
     "com.google.common.util.concurrent.Futures$ImmediateCancelledFuture",
     "com.google.common.collect.ObjectArrays",
     "com.google.common.collect.Synchronized$SynchronizedDeque",
     "com.google.common.collect.Constraints$ConstrainedSet",
     "com.google.common.util.concurrent.Monitor$Guard",
     "com.google.common.io.OutputSupplier",
     "com.google.common.collect.Constraints$ConstrainedSortedSet",
     "com.google.common.collect.SortedIterable",
     "com.google.common.collect.RangeMap",
     "com.google.common.collect.UnmodifiableIterator",
     "com.google.common.io.ByteSource$AsCharSource",
     "com.google.common.base.Functions$SupplierFunction",
     "com.google.common.collect.ImmutableSortedMultiset",
     "com.google.common.io.InputSupplier",
     "com.google.common.hash.package-info",
     "com.google.common.collect.Maps$EntryFunction$2",
     "com.google.common.collect.Maps$EntryFunction$1",
     "com.google.common.io.BaseEncoding$StandardBaseEncoding$2",
     "com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder",
     "com.google.common.io.BaseEncoding$StandardBaseEncoding$1",
     "com.google.common.io.AppendableWriter",
     "com.google.common.util.concurrent.Futures$ImmediateSuccessfulCheckedFuture",
     "com.google.common.collect.HashMultiset",
     "com.google.common.cache.CacheBuilderSpec$ValueParser",
     "com.google.common.base.SmallCharMatcher",
     "com.google.common.base.CharMatcher$RangesMatcher",
     "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture$1",
     "com.google.common.collect.SingletonImmutableList",
     "com.google.common.base.Predicates$AndPredicate",
     "com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry",
     "com.google.common.io.BaseEncoding$Base16Encoding",
     "com.google.common.primitives.Floats",
     "com.google.common.reflect.TypeToken$TypeCollector$1",
     "com.google.common.collect.Maps$FilteredMapValues",
     "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
     "com.google.common.collect.MinMaxPriorityQueue$QueueIterator",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task",
     "com.google.common.collect.ForwardingMap",
     "com.google.common.collect.ForwardingListMultimap",
     "com.google.common.collect.ExplicitOrdering",
     "com.google.common.io.LittleEndianDataOutputStream",
     "com.google.common.reflect.TypeToken$TypeCollector$3",
     "com.google.common.reflect.TypeToken$TypeCollector$2",
     "com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1",
     "com.google.common.reflect.TypeToken$TypeCollector$4",
     "com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2",
     "com.google.common.cache.LocalCache$Strength",
     "com.google.common.collect.Sets$4$1",
     "com.google.common.collect.MapMakerInternalMap$CleanupMapTask",
     "com.google.common.hash.Murmur3_128HashFunction",
     "com.google.common.util.concurrent.AtomicDoubleArray",
     "com.google.common.collect.Synchronized$SynchronizedListMultimap",
     "com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm",
     "com.google.common.hash.Funnels$SequentialFunnel",
     "com.google.common.hash.AbstractByteHasher",
     "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$1",
     "com.google.common.collect.Tables$AbstractCell",
     "com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$2",
     "com.google.common.base.CaseFormat",
     "com.google.common.collect.Interners",
     "com.google.common.eventbus.Subscriber",
     "com.google.common.primitives.Floats$LexicographicalComparator",
     "com.google.common.cache.LocalCache$ValueIterator",
     "com.google.common.util.concurrent.Futures$TimeoutFuture$Fire",
     "com.google.common.primitives.Ints",
     "com.google.common.annotations.Beta",
     "com.google.common.collect.MapMakerInternalMap$SoftEntry",
     "com.google.common.primitives.Primitives",
     "com.google.common.base.Utf8",
     "com.google.common.base.Splitter$SplittingIterator",
     "com.google.common.collect.Synchronized$SynchronizedAsMapValues",
     "com.google.common.base.Predicates$InPredicate",
     "com.google.common.collect.MapMakerInternalMap$EntrySet",
     "com.google.common.collect.Maps$MapDifferenceImpl",
     "com.google.common.collect.ImmutableSet$Indexed",
     "com.google.common.net.MediaType$2",
     "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
     "com.google.common.collect.Multisets$1$1",
     "com.google.common.primitives.UnsignedInteger",
     "com.google.common.collect.Multisets$FilteredMultiset",
     "com.google.common.base.Splitter$MapSplitter",
     "com.google.common.cache.Weigher",
     "com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference",
     "com.google.common.collect.ImmutableSortedMap$1EntrySet",
     "com.google.common.util.concurrent.MoreExecutors$DirectExecutorService",
     "com.google.common.base.Converter$IdentityConverter",
     "com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder",
     "com.google.common.collect.TreeRangeSet$RangesByUpperBound",
     "com.google.common.collect.HashBiMap$Inverse",
     "com.google.common.collect.ForwardingMap$StandardKeySet",
     "com.google.common.collect.Iterators$10",
     "com.google.common.cache.LocalCache$StrongAccessWriteEntry",
     "com.google.common.collect.Iterators$12",
     "com.google.common.collect.Iterators$11",
     "com.google.common.collect.MapConstraint",
     "com.google.common.base.Predicate",
     "com.google.common.collect.Lists$CharSequenceAsList",
     "com.google.common.cache.LocalCache$KeyIterator",
     "com.google.common.net.InetAddresses$TeredoInfo",
     "com.google.common.collect.Iterators$14",
     "com.google.common.collect.Iterators$13",
     "com.google.common.hash.AbstractStreamingHashFunction",
     "com.google.common.cache.LocalCache",
     "com.google.common.cache.LongAddables$PureJavaLongAddable",
     "com.google.common.collect.ArrayTable$1",
     "com.google.common.math.MathPreconditions",
     "com.google.common.collect.ImmutableMultimap",
     "com.google.common.collect.HashBiMap$InverseSerializedForm",
     "com.google.common.util.concurrent.WrappingScheduledExecutorService",
     "com.google.common.collect.FilteredEntryMultimap$Keys$1",
     "com.google.common.collect.ImmutableSortedSet",
     "com.google.common.base.Charsets",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$1$2",
     "com.google.common.util.concurrent.AbstractExecutionThreadService$1$1",
     "com.google.common.collect.ImmutableRangeSet$Builder",
     "com.google.common.hash.Hashing$LinearCongruentialGenerator",
     "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1",
     "com.google.common.collect.Multimaps$Keys",
     "com.google.common.base.Joiner$MapJoiner",
     "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache",
     "com.google.common.collect.BinaryTreeTraverser$1$1",
     "com.google.common.collect.AbstractMultiset$EntrySet",
     "com.google.common.base.Predicates$OrPredicate",
     "com.google.common.base.Objects$1",
     "com.google.common.base.Optional$1",
     "com.google.common.collect.FilteredKeySetMultimap",
     "com.google.common.base.Splitter$4$1",
     "com.google.common.base.Objects",
     "com.google.common.collect.SortedSetMultimap",
     "com.google.common.collect.ImmutableSortedAsList",
     "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2",
     "com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1",
     "com.google.common.collect.DenseImmutableTable$ImmutableArrayMap",
     "com.google.common.collect.AbstractBiMap$KeySet",
     "com.google.common.collect.Maps$SortedMapDifferenceImpl",
     "com.google.common.collect.Constraints$ConstrainedList",
     "com.google.common.collect.Maps$EntrySet",
     "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
     "com.google.common.util.concurrent.MoreExecutors",
     "com.google.common.io.CharSource$EmptyCharSource",
     "com.google.common.cache.LocalCache$WeakAccessWriteEntry",
     "com.google.common.util.concurrent.AbstractFuture$1",
     "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
     "com.google.common.cache.LocalCache$2",
     "com.google.common.collect.ForwardingMultiset$StandardElementSet",
     "com.google.common.cache.LocalCache$1",
     "com.google.common.hash.Hashing$Crc32Holder",
     "com.google.common.collect.EmptyContiguousSet$1",
     "com.google.common.base.CharMatcher$Ascii",
     "com.google.common.cache.LongAddables",
     "com.google.common.collect.ImmutableMap$Builder",
     "com.google.common.base.Converter$FunctionBasedConverter",
     "com.google.common.cache.LocalCache$ReferenceEntry",
     "com.google.common.collect.MutableClassToInstanceMap$1",
     "com.google.common.collect.AbstractBiMap$EntrySet",
     "com.google.common.reflect.TypeToken$TypeFilter$1",
     "com.google.common.reflect.TypeToken$TypeFilter$2",
     "com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl$1",
     "com.google.common.collect.Multimaps$CustomMultimap",
     "com.google.common.collect.RegularImmutableList",
     "com.google.common.collect.Tables$TransposeTable$1",
     "com.google.common.hash.BloomFilterStrategies$1",
     "com.google.common.hash.BloomFilterStrategies$2",
     "com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException",
     "com.google.common.reflect.Types$ClassOwnership$2",
     "com.google.common.cache.LocalCache$EntryFactory",
     "com.google.common.collect.Synchronized$SynchronizedAsMapEntries",
     "com.google.common.reflect.Types$ClassOwnership$3",
     "com.google.common.collect.SingletonImmutableTable",
     "com.google.common.reflect.Types$ClassOwnership$1",
     "com.google.common.util.concurrent.SimpleTimeLimiter$1$1",
     "com.google.common.collect.ImmutableMapKeySet",
     "com.google.common.base.Verify",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$3",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$2",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1",
     "com.google.common.util.concurrent.FutureFallback",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$6",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$5",
     "com.google.common.base.Ticker",
     "com.google.common.util.concurrent.AggregateFutureState",
     "com.google.common.hash.Funnel",
     "com.google.common.eventbus.SubscriberExceptionHandler",
     "com.google.common.io.ByteStreams",
     "com.google.common.collect.Maps$AbstractFilteredMap",
     "com.google.common.collect.FilteredMultimap",
     "com.google.common.collect.FilteredMultimapValues",
     "com.google.common.io.ByteProcessor",
     "com.google.common.collect.MapMakerInternalMap$SerializationProxy",
     "com.google.common.collect.ImmutableSet$Builder",
     "com.google.common.collect.Sets$SetView",
     "com.google.common.collect.Synchronized$SynchronizedAsMapValues$1",
     "com.google.common.collect.Synchronized$SynchronizedSortedSet",
     "com.google.common.collect.Maps$SortedAsMapView",
     "com.google.common.collect.MapMaker$RemovalCause$4",
     "com.google.common.collect.Collections2$PermutationIterator",
     "com.google.common.collect.MapMaker$RemovalCause$5",
     "com.google.common.collect.MapMaker$RemovalCause$2",
     "com.google.common.collect.MapMaker$RemovalCause$3",
     "com.google.common.primitives.Shorts$ShortArrayAsList",
     "com.google.common.util.concurrent.AggregateFuture",
     "com.google.common.io.Closer",
     "com.google.common.collect.Tables$ImmutableCell",
     "com.google.common.collect.UsingToStringOrdering",
     "com.google.common.collect.ArrayTable$ArrayMap",
     "com.google.common.collect.MapMaker$RemovalCause$1",
     "com.google.common.reflect.TypeToken$TypeSet",
     "com.google.common.util.concurrent.AtomicLongMap$1",
     "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
     "com.google.common.collect.ForwardingMap$StandardEntrySet",
     "com.google.common.cache.LocalCache$WriteQueue",
     "com.google.common.collect.MapDifference",
     "com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry",
     "com.google.common.primitives.Ints$LexicographicalComparator",
     "com.google.common.collect.LinkedListMultimap$1ValuesImpl",
     "com.google.common.collect.StandardTable$ColumnKeyIterator",
     "com.google.common.collect.MinMaxPriorityQueue$Heap",
     "com.google.common.collect.Maps$FilteredEntryNavigableMap",
     "com.google.common.collect.MultimapBuilder$ListMultimapBuilder",
     "com.google.common.reflect.ClassPath$Scanner",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$1",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2",
     "com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$3",
     "com.google.common.collect.Sets$DescendingSet",
     "com.google.common.collect.Sets",
     "com.google.common.primitives.Ints$IntConverter",
     "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
     "com.google.common.collect.Multisets$ElementSet",
     "com.google.common.collect.ComparisonChain$1",
     "com.google.common.cache.LocalCache$AccessQueue$1",
     "com.google.common.cache.LocalCache$AccessQueue$2",
     "com.google.common.collect.Iterables$2",
     "com.google.common.collect.Lists$TransformingSequentialList$1",
     "com.google.common.primitives.Booleans",
     "com.google.common.collect.Iterables$3",
     "com.google.common.collect.Iterables$4",
     "com.google.common.collect.Iterables$5",
     "com.google.common.collect.Iterables$6",
     "com.google.common.collect.ForwardingObject",
     "com.google.common.collect.Iterables$7",
     "com.google.common.collect.Iterables$8",
     "com.google.common.collect.Iterables$9",
     "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys",
     "com.google.common.base.MoreObjects$1",
     "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableBiMapEntry",
     "com.google.common.reflect.TypeToInstanceMap",
     "com.google.common.collect.ImmutableBiMap",
     "com.google.common.collect.Multisets$UnmodifiableMultiset",
     "com.google.common.collect.Multimaps$Keys$1$1",
     "com.google.common.util.concurrent.ServiceManager$NoOpService",
     "com.google.common.io.Files$FileByteSource",
     "com.google.common.collect.Multimaps$Keys$KeysEntrySet",
     "com.google.common.collect.Collections2$1",
     "com.google.common.collect.Iterables$1",
     "com.google.common.reflect.Parameter",
     "com.google.common.util.concurrent.AbstractFuture$Failure$1",
     "com.google.common.base.Ascii",
     "com.google.common.collect.ImmutableRangeSet$1",
     "com.google.common.collect.LinkedHashMultimap$ValueSet$1",
     "com.google.common.primitives.SignedBytes",
     "com.google.common.cache.LocalCache$StrongWriteEntry",
     "com.google.common.net.MediaType$1",
     "com.google.common.reflect.ImmutableTypeToInstanceMap$1",
     "com.google.common.cache.RemovalCause",
     "com.google.common.collect.SortedIterables",
     "com.google.common.util.concurrent.FuturesGetChecked",
     "com.google.common.util.concurrent.ListenableScheduledFuture",
     "com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1",
     "com.google.common.collect.MapConstraints$ConstrainedMultimap$1"
    ],
    "usedTypes": [
     "com.google.common.base.Optional"
    ],
    "usageRatio": 0.0005824111822947001,
    "children": []
   },
   {
    "id": "io.vavr:vavr:jar:0.10.2:compile",
    "coordinates": "io.vavr:vavr:0.10.2",
    "groupId": "io.vavr",
    "artifactId": "vavr",
    "version": "0.10.2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 897876,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "io.vavr.API$For2List",
     "io.vavr.collection.HashSet$1",
     "io.vavr.collection.List$Cons$SerializationProxy",
     "io.vavr.API$Match$Case6",
     "io.vavr.API$Match$Case7",
     "io.vavr.collection.Tree",
     "io.vavr.API$Match$Case4",
     "io.vavr.API$Match$Case5",
     "io.vavr.collection.LeafVisitor",
     "io.vavr.API$Match$Case2",
     "io.vavr.collection.TreeMap",
     "io.vavr.API$Match$Case3",
     "io.vavr.API$Match$Case0",
     "io.vavr.API$Match$Case1",
     "io.vavr.collection.RedBlackTreeModule$Empty",
     "io.vavr.collection.TreeMultimap$Builder",
     "io.vavr.CheckedRunnableModule",
     "io.vavr.collection.LinkedHashMultimap$1",
     "io.vavr.collection.TreeMap$EntryComparator$Natural",
     "io.vavr.control.Validation$Invalid",
     "io.vavr.API$For4Try",
     "io.vavr.collection.Tree$1",
     "io.vavr.collection.StreamModule$FlatMapIterator",
     "io.vavr.collection.Maps$OfEntries",
     "io.vavr.API$Match$Pattern0$2",
     "io.vavr.API$Match$Pattern0$1",
     "io.vavr.collection.Stream$Empty",
     "io.vavr.API$For8Option",
     "io.vavr.collection.Collections$1",
     "io.vavr.collection.Collections$2",
     "io.vavr.collection.Iterator$3",
     "io.vavr.collection.Iterator$4",
     "io.vavr.API$Match$Pattern8$1",
     "io.vavr.collection.Iterator$1",
     "io.vavr.collection.IndexedSeq$1",
     "io.vavr.collection.Iterator$2",
     "io.vavr.collection.IndexedSeq$2",
     "io.vavr.API$For7Future",
     "io.vavr.collection.Iterator$7",
     "io.vavr.PartialFunction$2",
     "io.vavr.collection.Iterator$8",
     "io.vavr.collection.BitSetModule$BitSetIterator",
     "io.vavr.collection.Iterator$5",
     "io.vavr.collection.Iterator$6",
     "io.vavr.collection.List$Nil",
     "io.vavr.collection.Iterator$9",
     "io.vavr.collection.LinkedHashSet$1",
     "io.vavr.CheckedFunction1Module",
     "io.vavr.PartialFunction$1",
     "io.vavr.control.Option$Some",
     "io.vavr.collection.ArrayType$CharArrayType",
     "io.vavr.collection.TreeMultimap$1",
     "io.vavr.API$Match$Case",
     "io.vavr.collection.VectorModule$Combinations",
     "io.vavr.control.HashCodes",
     "io.vavr.collection.Queue",
     "io.vavr.collection.JavaConverters$ListView",
     "io.vavr.collection.ListModule$SplitAt",
     "io.vavr.CheckedPredicate",
     "io.vavr.collection.LinkedHashSet",
     "io.vavr.collection.BitSetModule$BitSetN",
     "io.vavr.collection.Traversable$1",
     "io.vavr.collection.LinearSeq",
     "io.vavr.collection.ArrayType$DoubleArrayType",
     "io.vavr.collection.ArrayType$ShortArrayType",
     "io.vavr.control.Try$Failure",
     "io.vavr.CheckedFunction5Module",
     "io.vavr.collection.LinearSeqModule$Slice",
     "io.vavr.collection.PriorityQueueBase$Node",
     "io.vavr.ValueModule",
     "io.vavr.collection.ArrayType$ObjectArrayType",
     "io.vavr.collection.LinearSeqModule$Search",
     "io.vavr.collection.HashMultimap$1",
     "io.vavr.CheckedFunction0Module",
     "io.vavr.collection.CharSeq$CharUnaryOperator",
     "io.vavr.collection.Ordered",
     "io.vavr.collection.BitMappedTrie$1",
     "io.vavr.collection.HashArrayMappedTrieModule$LeafNodeIterator",
     "io.vavr.API$For5List",
     "io.vavr.API$Match$Pattern7$1",
     "io.vavr.collection.PriorityQueue",
     "io.vavr.API$For7Option",
     "io.vavr.collection.AbstractQueue",
     "io.vavr.collection.Stream$2",
     "io.vavr.collection.Stream$1",
     "io.vavr.collection.AbstractMultimap",
     "io.vavr.collection.Collections$IterableWithSize",
     "io.vavr.collection.BitSetModule$BitSet2",
     "io.vavr.collection.HashArrayMappedTrieModule$ArrayNode",
     "io.vavr.collection.BitSetModule$BitSet1",
     "io.vavr.collection.Comparators",
     "io.vavr.CheckedFunction6Module",
     "io.vavr.control.Option$None",
     "io.vavr.collection.Map",
     "io.vavr.collection.IteratorModule$GroupedIterator",
     "io.vavr.API$For3Try",
     "io.vavr.collection.Iterator$36",
     "io.vavr.collection.StreamModule$SerializationProxy",
     "io.vavr.collection.Iterator$37",
     "io.vavr.collection.Iterator$38",
     "io.vavr.collection.Iterator$39",
     "io.vavr.control.Validation$Builder8",
     "io.vavr.CheckedFunction8",
     "io.vavr.CheckedFunction5",
     "io.vavr.collection.BitSet",
     "io.vavr.control.Validation$Builder4",
     "io.vavr.collection.Tree$Order",
     "io.vavr.CheckedFunction4",
     "io.vavr.control.Validation$Builder5",
     "io.vavr.collection.Stream$3",
     "io.vavr.control.Validation$Builder6",
     "io.vavr.CheckedFunction7",
     "io.vavr.collection.Iterator$30",
     "io.vavr.CheckedConsumerModule",
     "io.vavr.CheckedFunction6",
     "io.vavr.collection.SortedMap",
     "io.vavr.collection.Iterator$31",
     "io.vavr.API$For1List",
     "io.vavr.control.Validation$Builder7",
     "io.vavr.collection.Iterator$32",
     "io.vavr.CheckedFunction1",
     "io.vavr.collection.Iterator$33",
     "io.vavr.CheckedFunction0",
     "io.vavr.collection.Iterator$34",
     "io.vavr.CheckedFunction3",
     "io.vavr.CheckedFunction2",
     "io.vavr.control.Validation$Builder3",
     "io.vavr.collection.Iterator$35",
     "io.vavr.collection.CharSeqModule",
     "io.vavr.collection.Multimap$ContainerType",
     "io.vavr.collection.StreamModule$StreamFactory",
     "io.vavr.$",
     "io.vavr.collection.BitSetModule$AbstractBitSet",
     "io.vavr.API$For6Future",
     "io.vavr.collection.ListModule$Combinations",
     "io.vavr.collection.Multimap$1",
     "io.vavr.collection.AbstractMultimap$SerializableSupplier",
     "io.vavr.collection.HashArrayMappedTrieModule$LeafList$1",
     "io.vavr.collection.IteratorModule$EmptyIterator",
     "io.vavr.collection.CharSeq$CharFunction",
     "io.vavr.collection.BitSet$Builder",
     "io.vavr.CheckedFunction7Module",
     "io.vavr.API$Match$Pattern6$1",
     "io.vavr.collection.Array",
     "io.vavr.collection.Iterator$40",
     "io.vavr.collection.Iterator$41",
     "io.vavr.collection.Iterator$42",
     "io.vavr.collection.Iterator$43",
     "io.vavr.NotImplementedError",
     "io.vavr.control.Try",
     "io.vavr.concurrent.Task$Complete",
     "io.vavr.collection.Tree$Node$SerializationProxy",
     "io.vavr.collection.HashArrayMappedTrieModule$LeafList",
     "io.vavr.collection.LinearSeqModule",
     "io.vavr.API$For5Try",
     "io.vavr.collection.Iterator$14",
     "io.vavr.collection.Iterator$15",
     "io.vavr.collection.Iterator$16",
     "io.vavr.collection.LinkedHashSet$SerializationProxy",
     "io.vavr.collection.Iterator$17",
     "io.vavr.collection.Iterator$18",
     "io.vavr.collection.Iterator$19",
     "io.vavr.collection.VectorModule",
     "io.vavr.control.Either$Right",
     "io.vavr.collection.PriorityQueueBase",
     "io.vavr.API$For8Future",
     "io.vavr.collection.RedBlackTree$1",
     "io.vavr.collection.Iterator$10",
     "io.vavr.collection.Iterator$11",
     "io.vavr.collection.Iterator$12",
     "io.vavr.CheckedFunction8Module",
     "io.vavr.collection.IteratorModule$CachedIterator",
     "io.vavr.collection.Iterator$13",
     "io.vavr.concurrent.Task",
     "io.vavr.control.GwtIncompatible",
     "io.vavr.control.Either$LeftProjection",
     "io.vavr.collection.HashSet",
     "io.vavr.collection.BitSetModule",
     "io.vavr.Lazy",
     "io.vavr.API$For6List",
     "io.vavr.API$Match",
     "io.vavr.collection.Iterator$25",
     "io.vavr.collection.Iterator$26",
     "io.vavr.collection.Iterator$27",
     "io.vavr.collection.Iterator$28",
     "io.vavr.Predicates",
     "io.vavr.collection.Iterator$29",
     "io.vavr.control.Try$1",
     "io.vavr.collection.List$Cons",
     "io.vavr.API$1",
     "io.vavr.API$2",
     "io.vavr.API$Match$Pattern",
     "io.vavr.API$Match$Pattern5$1",
     "io.vavr.collection.StreamModule",
     "io.vavr.collection.Collections",
     "io.vavr.collection.Iterator$20",
     "io.vavr.collection.Iterator$21",
     "io.vavr.collection.Iterator$22",
     "io.vavr.collection.Iterator$23",
     "io.vavr.collection.Iterator$24",
     "io.vavr.Tuple6",
     "io.vavr.Tuple5",
     "io.vavr.Tuple8",
     "io.vavr.collection.AbstractIterator",
     "io.vavr.Tuple7",
     "io.vavr.collection.ArrayType$LongArrayType",
     "io.vavr.collection.RedBlackTreeModule$Node",
     "io.vavr.Tuple2",
     "io.vavr.Tuple1",
     "io.vavr.collection.Multimaps",
     "io.vavr.PartialFunction",
     "io.vavr.Tuple4",
     "io.vavr.collection.StreamModule$Combinations",
     "io.vavr.Tuple3",
     "io.vavr.Tuple0",
     "io.vavr.collection.JavaConverters$ChangePolicy",
     "io.vavr.control.Either$Left",
     "io.vavr.collection.List$1",
     "io.vavr.API$For8",
     "io.vavr.API$For6",
     "io.vavr.collection.IteratorModule$BigDecimalHelper",
     "io.vavr.API$For7",
     "io.vavr.collection.Maps",
     "io.vavr.API$For4",
     "io.vavr.collection.LinkedHashMultimap$Builder",
     "io.vavr.API$For5",
     "io.vavr.API$For2",
     "io.vavr.API$For3",
     "io.vavr.collection.List",
     "io.vavr.API$For1",
     "io.vavr.collection.SortedMultimap",
     "io.vavr.collection.TreeSet",
     "io.vavr.collection.IteratorModule",
     "io.vavr.collection.StreamModule$AppendSelf",
     "io.vavr.collection.Tree$Empty",
     "io.vavr.collection.Iterator",
     "io.vavr.control.Option$1",
     "io.vavr.control.Validation$Valid",
     "io.vavr.collection.BitMappedTrie",
     "io.vavr.collection.HashArrayMappedTrie",
     "io.vavr.API$For4Future",
     "io.vavr.Tuple",
     "io.vavr.collection.IndexedSeqModule",
     "io.vavr.API$Match$Pattern7",
     "io.vavr.concurrent.Promise",
     "io.vavr.API$Match$Pattern6",
     "io.vavr.API$Match$Pattern5",
     "io.vavr.API$Match$Pattern4$1",
     "io.vavr.API$Match$Pattern4",
     "io.vavr.collection.CharSeq",
     "io.vavr.API$Match$Pattern3",
     "io.vavr.API$Match$Pattern2",
     "io.vavr.API$Match$Pattern1",
     "io.vavr.API$Match$Pattern0",
     "io.vavr.collection.JavaConverters$HasDelegate",
     "io.vavr.collection.LinkedHashMultimap",
     "io.vavr.collection.HashSet$SerializationProxy",
     "io.vavr.control.Either",
     "io.vavr.API$Match$Pattern8",
     "io.vavr.control.Validation$Builder",
     "io.vavr.collection.TreeMap$EntryComparator$Specific",
     "io.vavr.API$For5Option",
     "io.vavr.concurrent.FutureImpl",
     "io.vavr.collection.TreeMultimap",
     "io.vavr.API$For1Try",
     "io.vavr.collection.HashArrayMappedTrieModule$EmptyNode",
     "io.vavr.collection.StreamModule$StreamIterator",
     "io.vavr.collection.LinkedHashMap",
     "io.vavr.API$For5Future",
     "io.vavr.collection.HashArrayMappedTrieModule$LeafNode",
     "io.vavr.collection.IteratorModule$ConcatIterator",
     "io.vavr.Memoized",
     "io.vavr.Function5",
     "io.vavr.Function6",
     "io.vavr.concurrent.GwtIncompatible",
     "io.vavr.Function3",
     "io.vavr.MatchError",
     "io.vavr.Function4",
     "io.vavr.API",
     "io.vavr.collection.ArrayType$ByteArrayType",
     "io.vavr.Function1",
     "io.vavr.Value",
     "io.vavr.Function2",
     "io.vavr.API$For7List",
     "io.vavr.Function0",
     "io.vavr.collection.GwtIncompatible",
     "io.vavr.collection.HashMultimap$Builder",
     "io.vavr.API$For6Option",
     "io.vavr.CheckedPredicateModule",
     "io.vavr.CheckedConsumer",
     "io.vavr.collection.RedBlackTree",
     "io.vavr.concurrent.Future",
     "io.vavr.API$For6Try",
     "io.vavr.collection.ArrayType$FloatArrayType",
     "io.vavr.collection.IndexedSeq",
     "io.vavr.collection.TraversableModule",
     "io.vavr.collection.Set",
     "io.vavr.collection.JavaConverters$ListView$ListIterator",
     "io.vavr.collection.ArrayType$BooleanArrayType",
     "io.vavr.API$Match$Pattern3$1",
     "io.vavr.Function1$1",
     "io.vavr.collection.HashArrayMappedTrieModule$Action",
     "io.vavr.API$For3List",
     "io.vavr.collection.RedBlackTreeModule",
     "io.vavr.control.Validation$1",
     "io.vavr.control.TryModule",
     "io.vavr.collection.TreeMap$EntryComparator",
     "io.vavr.collection.Seq",
     "io.vavr.collection.Stream$Cons",
     "io.vavr.collection.IndexedSeqModule$Slice",
     "io.vavr.collection.Foldable",
     "io.vavr.API$For4Option",
     "io.vavr.control.Either$1",
     "io.vavr.API$For3Future",
     "io.vavr.collection.IteratorModule$ConcatIterator$Cell",
     "io.vavr.collection.ArrayModule",
     "io.vavr.control.Either$RightProjection",
     "io.vavr.collection.SortedSet",
     "io.vavr.collection.Tree$Node",
     "io.vavr.collection.HashArrayMappedTrieModule",
     "io.vavr.collection.CharSeqModule$Combinations",
     "io.vavr.control.Option",
     "io.vavr.collection.StreamModule$ConsImpl",
     "io.vavr.CheckedFunction2Module",
     "io.vavr.API$For8Try",
     "io.vavr.collection.NaturalComparator",
     "io.vavr.collection.StreamModule$AppendElements",
     "io.vavr.collection.HashArrayMappedTrieModule$LeafSingleton",
     "io.vavr.concurrent.FutureImpl$Computation",
     "io.vavr.API$For1Option",
     "io.vavr.collection.ArrayType$IntArrayType",
     "io.vavr.API$Match$Pattern2$1",
     "io.vavr.collection.ArrayModule$Combinations",
     "io.vavr.collection.JavaConverters$ListView$Iterator",
     "io.vavr.GwtIncompatible",
     "io.vavr.control.Try$WithResources4",
     "io.vavr.control.Try$WithResources5",
     "io.vavr.collection.JavaConverters",
     "io.vavr.control.Try$WithResources2",
     "io.vavr.collection.HashArrayMappedTrieModule$AbstractNode",
     "io.vavr.collection.NodeModifier",
     "io.vavr.control.Try$WithResources3",
     "io.vavr.Patterns",
     "io.vavr.control.Try$WithResources1",
     "io.vavr.API$For8List",
     "io.vavr.CheckedFunction4Module",
     "io.vavr.control.Try$Success",
     "io.vavr.control.Try$WithResources8",
     "io.vavr.control.Try$WithResources6",
     "io.vavr.Function7",
     "io.vavr.collection.Multimap",
     "io.vavr.Function8",
     "io.vavr.control.Try$WithResources7",
     "io.vavr.collection.HashArrayMappedTrieModule$IndexedNode",
     "io.vavr.collection.LinearSeq$1",
     "io.vavr.control.Validation",
     "io.vavr.collection.Traversable",
     "io.vavr.collection.RedBlackTree$Color",
     "io.vavr.collection.ListModule",
     "io.vavr.API$For2Option",
     "io.vavr.API$For1Future",
     "io.vavr.collection.IteratorModule$DistinctIterator",
     "io.vavr.CheckedRunnable",
     "io.vavr.collection.IndexedSeqModule$Search",
     "io.vavr.collection.Stream",
     "io.vavr.collection.Map$1",
     "io.vavr.collection.Vector",
     "io.vavr.collection.StreamModule$DropRight",
     "io.vavr.concurrent.FutureImpl$1",
     "io.vavr.API$For2Try",
     "io.vavr.collection.TreeModule",
     "io.vavr.collection.ArrayType",
     "io.vavr.API$Match$Pattern1$1",
     "io.vavr.collection.HashMap",
     "io.vavr.API$For3Option",
     "io.vavr.CheckedFunction3Module",
     "io.vavr.collection.Array$1",
     "io.vavr.concurrent.PromiseImpl",
     "io.vavr.API$Match$Case8",
     "io.vavr.collection.HashMultimap",
     "io.vavr.API$For4List",
     "io.vavr.API$For7Try",
     "io.vavr.API$For2Future"
    ],
    "usedTypes": [
     "io.vavr.collection.Traversable",
     "io.vavr.control.Try",
     "io.vavr.control.Option",
     "io.vavr.collection.LinkedHashMap",
     "io.vavr.collection.Set",
     "io.vavr.control.Try$Failure",
     "io.vavr.collection.Seq",
     "io.vavr.collection.LinkedHashSet",
     "io.vavr.CheckedFunction0",
     "io.vavr.collection.List",
     "io.vavr.collection.Map"
    ],
    "usageRatio": 0.028720626631853787,
    "children": [
     {
      "id": "io.vavr:vavr-match:jar:0.10.2:compile",
      "coordinates": "io.vavr:vavr-match:0.10.2",
      "groupId": "io.vavr",
      "artifactId": "vavr-match",
      "version": "0.10.2",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 3039,
      "type": "transitive",
      "status": "bloated",
      "parent": "io.vavr:vavr:jar:0.10.2:compile (optional) )",
      "allTypes": [
       "io.vavr.match.annotation.Patterns",
       "io.vavr.match.annotation.Unapply"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "javax.el:el-api:jar:1.0:test",
    "coordinates": "javax.el:el-api:1.0",
    "groupId": "javax.el",
    "artifactId": "el-api",
    "version": "1.0",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 24432,
    "type": "direct",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "javax.el.ListELResolver",
     "javax.el.ExpressionFactory",
     "javax.el.BeanELResolver",
     "javax.el.Expression",
     "javax.el.CompositeELResolver$CompositeIterator",
     "javax.el.ELContextListener",
     "javax.el.ELUtil",
     "javax.el.MethodExpression",
     "javax.el.ELResolver",
     "javax.el.ELUtil$1",
     "javax.el.MethodNotFoundException",
     "javax.el.PropertyNotWritableException",
     "javax.el.ValueExpression",
     "javax.el.FunctionMapper",
     "javax.el.ELContextEvent",
     "javax.el.MethodInfo",
     "javax.el.ELException",
     "javax.el.ResourceBundleELResolver",
     "javax.el.MapELResolver",
     "javax.el.ArrayELResolver",
     "javax.el.CompositeELResolver",
     "javax.el.ELContext",
     "javax.el.PropertyNotFoundException",
     "javax.el.VariableMapper"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "org.apache.openwebbeans:openwebbeans-se:jar:2.0.11:test",
    "coordinates": "org.apache.openwebbeans:openwebbeans-se:2.0.11",
    "groupId": "org.apache.openwebbeans",
    "artifactId": "openwebbeans-se",
    "version": "2.0.11",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 32610,
    "type": "direct",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.apache.openwebbeans.se.CDISeScannerService$1",
     "org.apache.openwebbeans.se.CDILauncher$1",
     "org.apache.openwebbeans.se.CDISeBeanArchiveService",
     "org.apache.openwebbeans.se.OWBInitializer",
     "org.apache.openwebbeans.se.CDISeScannerService$CaptureClasses",
     "org.apache.openwebbeans.se.OWBContainer",
     "org.apache.openwebbeans.se.SeInitializerFacade",
     "org.apache.openwebbeans.se.SeContainerSelector",
     "org.apache.openwebbeans.se.CDILauncher$Config",
     "org.apache.openwebbeans.se.CDISeScannerService",
     "org.apache.openwebbeans.se.CDISeLoaderService",
     "org.apache.openwebbeans.se.CDILauncher"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "org.apache.openwebbeans:openwebbeans-impl:jar:2.0.11:test",
      "coordinates": "org.apache.openwebbeans:openwebbeans-impl:2.0.11",
      "groupId": "org.apache.openwebbeans",
      "artifactId": "openwebbeans-impl",
      "version": "2.0.11",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 753069,
      "type": "transitive",
      "status": "used",
      "parent": "org.apache.openwebbeans:openwebbeans-se:jar:2.0.11:test",
      "allTypes": [
       "org.apache.webbeans.container.ExternalScope",
       "org.apache.webbeans.portable.events.generics.GProcessObserverMethod",
       "org.apache.webbeans.component.ProducerFieldBean",
       "org.apache.webbeans.portable.events.ProcessInjectionPointImpl",
       "org.apache.webbeans.portable.events.generics.GProcessInjectionTarget",
       "org.apache.webbeans.util.WebBeansUtil$1",
       "org.apache.webbeans.component.NewManagedBean",
       "org.apache.webbeans.conversation.ConversationManager",
       "org.apache.webbeans.config.BeansDeployer$1",
       "org.apache.webbeans.component.BeanMetadataBean$1",
       "org.apache.webbeans.portable.AbstractDecoratorInjectionTarget$SubClassAnnotatedConstructorImpl",
       "org.apache.webbeans.decorator.DecoratorsManager",
       "org.apache.webbeans.component.creation.BeanAttributesBuilder$AnnotatedTypeBeanAttributesBuilder",
       "org.apache.webbeans.portable.events.generics.GProcessBean",
       "org.apache.webbeans.portable.events.ProcessManagedBeanImpl",
       "org.apache.webbeans.configurator.AnnotatedConstructorConfiguratorImpl",
       "org.apache.webbeans.portable.events.discovery.AfterDeploymentValidationImpl",
       "org.apache.webbeans.portable.InjectionPointProducer",
       "org.apache.webbeans.component.creation.BeanAttributesBuilder$AnnotatedFieldBeanAttributesBuilder",
       "org.apache.webbeans.proxy.NormalScopeProxyFactory",
       "org.apache.webbeans.inject.impl.InjectionPointFactory",
       "org.apache.webbeans.util.CollectionUtil",
       "org.apache.webbeans.container.OwbCDIProvider",
       "org.apache.webbeans.corespi.security.ManagedSecurityService$PrivilegedActionForIsAccessible",
       "org.apache.webbeans.service.DefaultLoaderService",
       "org.apache.webbeans.plugins.OpenWebBeansJmsPlugin",
       "org.apache.webbeans.logger.JULLoggerFactory",
       "org.apache.webbeans.exception.DuplicateDefinitionException",
       "org.apache.webbeans.portable.InjectionTargetImpl$ConstructorInstanceProvider",
       "org.apache.webbeans.configurator.ObserverMethodConfiguratorImpl$ConfiguredObserverMethod",
       "org.apache.webbeans.inject.impl.InjectionPointImpl",
       "org.apache.webbeans.event.NotificationManager",
       "org.apache.webbeans.container.ManagerObjectFactory",
       "org.apache.webbeans.event.EventMetadataImpl",
       "org.apache.webbeans.container.SerializableBeanVault",
       "org.apache.webbeans.config.OwbTypeVariableImpl$OwbTypeVariableInvocationHandler",
       "org.apache.webbeans.context.CustomPassivatingContextImpl",
       "org.apache.webbeans.configurator.ProducerConfiguratorImpl$ConfiguredProducer",
       "org.apache.webbeans.context.SingletonContext",
       "org.apache.webbeans.container.InjectionResolver",
       "org.apache.webbeans.component.creation.AbstractBeanBuilder",
       "org.apache.webbeans.portable.events.ProcessProducerMethodImpl",
       "org.apache.webbeans.util.SpecializationUtil$BeanAttributesProvider",
       "org.apache.webbeans.component.creation.CdiInterceptorBeanBuilder",
       "org.apache.webbeans.conversation.DefaultConversationService",
       "org.apache.webbeans.el.ELContextStore$CreationalStore",
       "org.apache.webbeans.config.OpenWebBeansConfiguration",
       "org.apache.webbeans.exception.InconsistentSpecializationException",
       "org.apache.webbeans.portable.events.ProcessInjectionTargetImpl",
       "org.apache.webbeans.proxy.OwbInterceptorProxy",
       "org.apache.webbeans.annotation.InitializedLiteral",
       "org.apache.webbeans.deployment.stereotype.IStereoTypeModel",
       "org.apache.webbeans.config.OwbParametrizedTypeImpl",
       "org.apache.webbeans.container.AnnotatedTypeWrapper",
       "org.apache.webbeans.container.InterceptionFactoryImpl",
       "org.apache.webbeans.portable.events.generics.GenericProducerObserverEvent",
       "org.apache.webbeans.annotation.DestroyedLiteral",
       "org.apache.webbeans.util.ArrayUtil",
       "org.apache.webbeans.context.control.OwbRequestContextController",
       "org.apache.webbeans.intercept.InterceptorResolutionService$BusinessMethodInterceptorInfo",
       "org.apache.webbeans.context.PassivatingContext",
       "org.apache.webbeans.plugins.OpenWebBeansEjbLCAPlugin",
       "org.apache.webbeans.component.InterceptionFactoryBean",
       "org.apache.webbeans.component.InjectionPointBean",
       "org.apache.webbeans.portable.InjectionTargetImpl$1",
       "org.apache.webbeans.component.BeanAttributesImpl",
       "org.apache.webbeans.boot.Bootstrap",
       "org.apache.webbeans.portable.ProviderBasedProducer",
       "org.apache.webbeans.portable.BeanMetadataProducer",
       "org.apache.webbeans.event.OwbObserverMethod",
       "org.apache.webbeans.context.ConversationContext",
       "org.apache.webbeans.context.creational.CreationalContextFactory",
       "org.apache.webbeans.portable.ExtensionProducer",
       "org.apache.webbeans.event.ObserverMethodImpl$1",
       "org.apache.webbeans.corespi.security.ManagedSecurityService$PrivilegedActionForSetAccessible",
       "org.apache.webbeans.lifecycle.AbstractLifeCycle",
       "org.apache.webbeans.annotation.AnnotationManager",
       "org.apache.webbeans.inject.InjectableField",
       "org.apache.webbeans.container.BeanCacheKey$1",
       "org.apache.webbeans.util.AnnotationUtil",
       "org.apache.webbeans.util.SecurityUtil",
       "org.apache.webbeans.container.InterceptorInjectionTargetFactory",
       "org.apache.webbeans.component.ResourceBean",
       "org.apache.webbeans.component.BuiltInOwbBean",
       "org.apache.webbeans.component.ConversationBean",
       "org.apache.webbeans.portable.ProviderBasedProducerFactory",
       "org.apache.webbeans.config.WebBeansFinder",
       "org.apache.webbeans.container.InjectionTargetFactoryImpl",
       "org.apache.webbeans.intercept.NormalScopedBeanInterceptorHandler",
       "org.apache.webbeans.component.creation.BaseProducerFactory",
       "org.apache.webbeans.intercept.InterceptorComparator",
       "org.apache.webbeans.component.creation.MethodProducerFactory",
       "org.apache.webbeans.portable.events.ProcessProducerImpl",
       "org.apache.webbeans.corespi.scanner.xbean.CdiArchive$FoundClasses",
       "org.apache.webbeans.portable.events.ProcessBeanAttributesImpl",
       "org.apache.webbeans.portable.AbstractAnnotatedMember",
       "org.apache.webbeans.service.ManualImplementationLoaderService",
       "org.apache.webbeans.config.OpenWebBeansConfiguration$1",
       "org.apache.webbeans.component.InstanceBean",
       "org.apache.webbeans.deployment.StereoTypeManager",
       "org.apache.webbeans.portable.events.generics.GProcessSyntheticBean",
       "org.apache.webbeans.exception.helper.ExceptionMessageBuilder",
       "org.apache.webbeans.component.EjbInterceptorBean",
       "org.apache.webbeans.portable.events.generics.GProcessProducerField",
       "org.apache.webbeans.annotation.NewLiteral",
       "org.apache.webbeans.component.third.ThirdpartyBeanAttributesImpl",
       "org.apache.webbeans.component.DecoratorMetadataBean$1",
       "org.apache.webbeans.intercept.ConstructorInterceptorInvocationContext",
       "org.apache.webbeans.annotation.ApplicationScopeLiteral",
       "org.apache.webbeans.container.InjectableBeanManager",
       "org.apache.webbeans.context.control.RequestContextControllerProducer",
       "org.apache.webbeans.component.SimpleProducerFactory",
       "org.apache.webbeans.component.PrincipalBean",
       "org.apache.webbeans.annotation.DependentScopeLiteral",
       "org.apache.webbeans.portable.events.discovery.ExtensionAware",
       "org.apache.webbeans.conversation.ConversationStorageBean",
       "org.apache.webbeans.configurator.AnnotatedTypeConfiguratorImpl",
       "org.apache.webbeans.util.ClassUtil",
       "org.apache.webbeans.event.EventImpl",
       "org.apache.webbeans.portable.InjectionPointProducer$InjectionPointDelegate",
       "org.apache.webbeans.util.WebBeansUtil",
       "org.apache.webbeans.util.WebBeansConstants",
       "org.apache.webbeans.component.ManagedBean",
       "org.apache.webbeans.component.InterceptorBean$MultiMethodInvocationContext",
       "org.apache.webbeans.config.OwbWildcardTypeImpl",
       "org.apache.webbeans.config.OWBLogConst",
       "org.apache.webbeans.corespi.security.ManagedSecurityService$PrivilegedActionForClass",
       "org.apache.webbeans.component.ProducerMethodBean",
       "org.apache.webbeans.container.BeanCacheKey$LazyAnnotatedTypes",
       "org.apache.webbeans.jms.JMSModel$JMSType",
       "org.apache.webbeans.config.DeploymentValidationService",
       "org.apache.webbeans.plugins.PluginLoader",
       "org.apache.webbeans.portable.AnnotatedFieldImpl",
       "org.apache.webbeans.util.OwbCustomObjectInputStream",
       "org.apache.webbeans.proxy.SubclassProxyFactory",
       "org.apache.webbeans.xml.WebBeansErrorHandler",
       "org.apache.webbeans.proxy.AbstractProxyFactory",
       "org.apache.webbeans.event.EventUtil",
       "org.apache.webbeans.corespi.se.DefaultBDABeansXmlScanner",
       "org.apache.webbeans.intercept.DefaultInterceptorHandler$InstanceProvider",
       "org.apache.webbeans.corespi.security.ManagedSecurityService$PrivilegedActionForObjectCreation",
       "org.apache.webbeans.component.creation.EjbInterceptorBeanBuilder",
       "org.apache.webbeans.component.creation.SelfInterceptorBeanBuilder",
       "org.apache.webbeans.jms.JMSModel",
       "org.apache.webbeans.portable.events.EventBase",
       "org.apache.webbeans.component.creation.ResourceProducerFactory",
       "org.apache.webbeans.intercept.InterceptorResolutionService",
       "org.apache.webbeans.proxy.Unsafe",
       "org.apache.webbeans.corespi.scanner.xbean.CdiArchive",
       "org.apache.webbeans.component.InterceptorMetadataBean",
       "org.apache.webbeans.configurator.AnnotatedFieldConfiguratorImpl",
       "org.apache.webbeans.portable.EventProducer",
       "org.apache.webbeans.event.EventContextImpl",
       "org.apache.webbeans.portable.AnnotatedTypeImpl$State",
       "org.apache.webbeans.util.PriorityClasses",
       "org.apache.webbeans.corespi.scanner.xbean.OwbAnnotationFinder",
       "org.apache.webbeans.corespi.se.DefaultApplicationBoundaryService",
       "org.apache.webbeans.context.DependentContext",
       "org.apache.webbeans.component.InterceptorBean",
       "org.apache.webbeans.util.ExceptionUtil$1",
       "org.apache.webbeans.portable.events.generics.GProcessManagedBean",
       "org.apache.webbeans.annotation.AnyLiteral",
       "org.apache.webbeans.inject.instance.InstanceImpl$InstanceInjectionPoint",
       "org.apache.webbeans.component.creation.FieldProducerFactory",
       "org.apache.webbeans.config.OwbTypeVariableImpl",
       "org.apache.webbeans.event.NotificationManager$1",
       "org.apache.webbeans.portable.events.discovery.ErrorStack",
       "org.apache.webbeans.logger.WebBeansLoggerFactory",
       "org.apache.webbeans.portable.AbstractEjbInjectionTarget",
       "org.apache.webbeans.util.GenericsUtil",
       "org.apache.webbeans.portable.EventMetadataProducer",
       "org.apache.webbeans.portable.events.discovery.BeforeBeanDiscoveryImpl",
       "org.apache.webbeans.component.ExtensionProducerFactory",
       "org.apache.webbeans.portable.events.generics.GenericBeanEvent",
       "org.apache.webbeans.portable.AbstractDecoratorInjectionTarget$AbstractDecoratorInjectableConstructor",
       "org.apache.webbeans.portable.events.ProcessObserverMethodImpl",
       "org.apache.webbeans.intercept.InterceptorUtil",
       "org.apache.webbeans.portable.AnnotatedTypeImpl$1",
       "org.apache.webbeans.portable.events.discovery.BeforeShutdownImpl",
       "org.apache.webbeans.component.creation.ManagedBeanBuilder",
       "org.apache.webbeans.component.AbstractOwbBean",
       "org.apache.webbeans.logger.WebBeansLoggerFacade",
       "org.apache.webbeans.event.NotificationManager$CDICompletionFuture",
       "org.apache.webbeans.intercept.InterceptorInvocationContext",
       "org.apache.webbeans.inject.AbstractInjectable",
       "org.apache.webbeans.context.RequestContext",
       "org.apache.webbeans.component.creation.BeanAttributesBuilder$BeanAttributesBuilderFactory",
       "org.apache.webbeans.xml.DefaultBeanArchiveService",
       "org.apache.webbeans.decorator.DecoratorComparator",
       "org.apache.webbeans.exception.helper.DescriptiveException",
       "org.apache.webbeans.config.DefaultAnnotation",
       "org.apache.webbeans.corespi.security.ManagedSecurityService$PrivilegedActionGetSystemProperties",
       "org.apache.webbeans.intercept.InterceptorResolutionService$BeanInterceptorInfo",
       "org.apache.webbeans.configurator.BeanAttributesConfiguratorImpl",
       "org.apache.webbeans.inject.AlternativesManager",
       "org.apache.webbeans.portable.MetadataProducer",
       "org.apache.webbeans.component.creation.AbstractProducerBeanBuilder",
       "org.apache.webbeans.portable.AnnotatedConstructorImpl",
       "org.apache.webbeans.deployment.StereoTypeModel",
       "org.apache.webbeans.component.creation.BeanAttributesBuilder$1",
       "org.apache.webbeans.component.InterceptedOrDecoratedBeanMetadataBean$3",
       "org.apache.webbeans.component.InterceptedOrDecoratedBeanMetadataBean$2",
       "org.apache.webbeans.component.InterceptedOrDecoratedBeanMetadataBean$1",
       "org.apache.webbeans.configurator.InjectionPointConfiguratorImpl",
       "org.apache.webbeans.context.creational.BeanInstanceBag",
       "org.apache.webbeans.intercept.SessionScopedBeanInterceptorHandler",
       "org.apache.webbeans.intercept.AbstractInvocationContext",
       "org.apache.webbeans.event.ObserverMethodImpl",
       "org.apache.webbeans.event.NotificationManager$CloseableExecutor",
       "org.apache.webbeans.component.InterceptionFactoryBean$InterceptionFactoryProducer",
       "org.apache.webbeans.portable.events.ProcessSessionBeanImpl",
       "org.apache.webbeans.portable.LazyInterceptorDefinedInjectionTarget",
       "org.apache.webbeans.component.EventBean$2",
       "org.apache.webbeans.component.EventBean$1",
       "org.apache.webbeans.portable.events.generics.GProcessSyntheticAnnotatedType",
       "org.apache.webbeans.proxy.InterceptorDecoratorProxyFactory",
       "org.apache.webbeans.component.creation.UnproxyableBean",
       "org.apache.webbeans.portable.AbstractAnnotated",
       "org.apache.webbeans.xml.DefaultBeanArchiveInformation",
       "org.apache.webbeans.configurator.AnnotatedMethodConfiguratorImpl",
       "org.apache.webbeans.intercept.DecoratorHandler",
       "org.apache.webbeans.component.creation.ProducerFieldBeanBuilder",
       "org.apache.webbeans.container.BeanManagerImpl",
       "org.apache.webbeans.config.OwbGenericArrayTypeImpl",
       "org.apache.webbeans.configurator.BeanConfiguratorImpl$ConstructedBean",
       "org.apache.webbeans.proxy.OwbDecoratorProxy",
       "org.apache.webbeans.util.SingleItemSet",
       "org.apache.webbeans.portable.events.discovery.AfterTypeDiscoveryImpl",
       "org.apache.webbeans.config.WebBeansContext",
       "org.apache.webbeans.component.third.ThirdpartyBeanImpl$1",
       "org.apache.webbeans.exception.helper.ViolationMessageBuilder",
       "org.apache.webbeans.container.BeanCacheKey$AnnotationComparator",
       "org.apache.webbeans.component.creation.ProducerMethodBeanBuilder",
       "org.apache.webbeans.component.creation.BeanAttributesBuilder",
       "org.apache.webbeans.util.Asserts",
       "org.apache.webbeans.portable.events.discovery.AfterBeanDiscoveryImpl",
       "org.apache.webbeans.portable.events.ExtensionLoader",
       "org.apache.webbeans.component.creation.ProducerMethodBeansBuilder",
       "org.apache.webbeans.config.BeansDeployer$ExtendedBeanAttributes",
       "org.apache.webbeans.intercept.InterceptorsManager",
       "org.apache.webbeans.annotation.EmptyAnnotationLiteral",
       "org.apache.webbeans.component.creation.ProducerFieldBeansBuilder",
       "org.apache.webbeans.inject.InjectableMethod",
       "org.apache.webbeans.component.EventMetadataBean",
       "org.apache.webbeans.component.creation.ObserverMethodsBuilder",
       "org.apache.webbeans.corespi.se.DefaultJndiService",
       "org.apache.webbeans.corespi.se.BaseSeContextsService",
       "org.apache.webbeans.component.creation.BeanAttributesBuilder$AnnotatedMemberBeanAttributesBuilder",
       "org.apache.webbeans.portable.events.ProcessProducerFieldImpl",
       "org.apache.webbeans.portable.events.generics.GProcessAnnotatedType",
       "org.apache.webbeans.component.OwbBean",
       "org.apache.webbeans.portable.BaseProducerProducer",
       "org.apache.webbeans.container.SerializableBean",
       "org.apache.webbeans.intercept.DefaultInterceptorHandler",
       "org.apache.webbeans.context.ApplicationContext",
       "org.apache.webbeans.proxy.AbstractProxyFactory$1",
       "org.apache.webbeans.context.SessionContext",
       "org.apache.webbeans.component.EventBean",
       "org.apache.webbeans.util.UrlSet",
       "org.apache.webbeans.context.creational.DependentCreationalContext",
       "org.apache.webbeans.annotation.NamedLiteral",
       "org.apache.webbeans.exception.WebBeansConfigurationException",
       "org.apache.webbeans.intercept.RequestScopedBeanInterceptorHandler",
       "org.apache.webbeans.configurator.BeanConfiguratorImpl$ConstructedBean$1",
       "org.apache.webbeans.component.InjectionTargetBean",
       "org.apache.webbeans.component.creation.ResourceBeanBuilder",
       "org.apache.webbeans.configurator.ObserverMethodConfiguratorImpl",
       "org.apache.webbeans.component.creation.BeanAttributesBuilder$AnnotatedMethodBeanAttributesBuilder",
       "org.apache.webbeans.component.third.ThirdpartyBeanImpl",
       "org.apache.webbeans.component.InterceptedMarker",
       "org.apache.webbeans.exception.ProxyGenerationException",
       "org.apache.webbeans.corespi.security.ManagedSecurityService$PrivilegedActionForProperty",
       "org.apache.webbeans.config.PropertyLoader",
       "org.apache.webbeans.portable.events.generics.GProcessInjectionPoint",
       "org.apache.webbeans.component.BeanManagerBean",
       "org.apache.webbeans.util.ExceptionUtil",
       "org.apache.webbeans.annotation.SessionScopeLiteral",
       "org.apache.webbeans.component.EnterpriseBeanMarker",
       "org.apache.webbeans.portable.events.generics.GProcessSyntheticObserverMethod",
       "org.apache.webbeans.component.third.PassivationCapableThirdpartyBeanImpl",
       "org.apache.webbeans.corespi.se.DefaultScannerService",
       "org.apache.webbeans.portable.InstanceProducer",
       "org.apache.webbeans.portable.events.discovery.AnnotatedTypeConfiguratorHolder",
       "org.apache.webbeans.boot.Bootstrap$1",
       "org.apache.webbeans.component.SelfInterceptorBean",
       "org.apache.webbeans.config.DeploymentValidationService$BeanInterceptorInfoProvider",
       "org.apache.webbeans.config.EJBWebBeansConfigurator",
       "org.apache.webbeans.configurator.BeanConfiguratorImpl",
       "org.apache.webbeans.portable.events.ProcessAnnotatedTypeImpl",
       "org.apache.webbeans.corespi.se.DefaultContextsService",
       "org.apache.webbeans.el.ELContextStore",
       "org.apache.webbeans.portable.InjectionTargetImpl",
       "org.apache.webbeans.component.InterceptorMetadataBean$1",
       "org.apache.webbeans.portable.AnnotatedMethodImpl",
       "org.apache.webbeans.container.BeanCacheKey",
       "org.apache.webbeans.context.CustomAlterablePassivatingContextImpl",
       "org.apache.webbeans.component.PrincipalProvider",
       "org.apache.webbeans.component.IBeanHasParent",
       "org.apache.webbeans.container.BeanManagerImpl$LifecycleState",
       "org.apache.webbeans.portable.ConversationProducer",
       "org.apache.webbeans.component.CdiInterceptorBean",
       "org.apache.webbeans.portable.events.ProcessBeanImpl",
       "org.apache.webbeans.portable.events.generics.TwoParametersGenericBeanEvent",
       "org.apache.webbeans.intercept.ApplicationScopedBeanInterceptorHandler",
       "org.apache.webbeans.portable.events.generics.GProcessSessionBean",
       "org.apache.webbeans.util.OwbCustomObjectInputStream$BlacklistClassResolver",
       "org.apache.webbeans.util.ExceptionUtil$ExceptionHelper",
       "org.apache.webbeans.corespi.security.ManagedSecurityService",
       "org.apache.webbeans.context.AbstractContextsService",
       "org.apache.webbeans.portable.AbstractProducer",
       "org.apache.webbeans.portable.AbstractAnnotatedCallable",
       "org.apache.webbeans.portable.events.ProcessSyntheticAnnotatedTypeImpl",
       "org.apache.webbeans.proxy.AbstractProxyFactory$VersionVisitor",
       "org.apache.webbeans.corespi.scanner.AbstractMetaDataDiscovery",
       "org.apache.webbeans.intercept.InterceptorResolutionService$LifecycleMethodInfo",
       "org.apache.webbeans.corespi.security.SimpleSecurityService",
       "org.apache.webbeans.corespi.se.StandaloneContextsService",
       "org.apache.webbeans.event.ContainerEventObserverMethodImpl",
       "org.apache.webbeans.portable.ProducerMethodProducer",
       "org.apache.webbeans.util.SpecializationUtil",
       "org.apache.webbeans.component.InterceptedOrDecoratedBeanMetadataBean",
       "org.apache.webbeans.portable.AnnotatedParameterImpl",
       "org.apache.webbeans.annotation.BeforeDestroyedLiteral",
       "org.apache.webbeans.context.creational.WrappedCreationalContext",
       "org.apache.webbeans.component.JmsBeanMarker",
       "org.apache.webbeans.configurator.ProducerConfiguratorImpl",
       "org.apache.webbeans.portable.events.generics.GProcessProducer",
       "org.apache.webbeans.configurator.AnnotatedParameterConfiguratorImpl",
       "org.apache.webbeans.portable.AnnotatedTypeImpl",
       "org.apache.webbeans.inject.OWBInjector",
       "org.apache.webbeans.corespi.scanner.xbean.BeanArchiveFilter",
       "org.apache.webbeans.portable.ResourceProducer",
       "org.apache.webbeans.event.ObserverMethodImpl$ObserverParams",
       "org.apache.webbeans.component.DecoratorBean",
       "org.apache.webbeans.component.creation.DecoratorBeanBuilder",
       "org.apache.webbeans.inject.instance.InstanceImpl",
       "org.apache.webbeans.component.PassivationBeanWrapper",
       "org.apache.webbeans.proxy.OwbNormalScopeProxy",
       "org.apache.webbeans.lifecycle.StandaloneLifeCycle",
       "org.apache.webbeans.lifecycle.test.OpenWebBeansTestMetaDataDiscoveryService",
       "org.apache.webbeans.exception.WebBeansCreationException",
       "org.apache.webbeans.xml.ElementIterator",
       "org.apache.webbeans.portable.BeanManagerProducer",
       "org.apache.webbeans.component.DecoratorMetadataBean",
       "org.apache.webbeans.proxy.InterceptorHandler",
       "org.apache.webbeans.portable.events.generics.GProcessBeanAttributes",
       "org.apache.webbeans.util.StringUtil",
       "org.apache.webbeans.exception.WebBeansException",
       "org.apache.webbeans.component.creation.InterceptorBeanBuilder",
       "org.apache.webbeans.portable.ProducerFieldProducer",
       "org.apache.webbeans.container.DecoratorInjectionTargetFactory",
       "org.apache.webbeans.context.control.RequestContextControllerBean",
       "org.apache.webbeans.corespi.security.ManagedSecurityService$PrivilegedActionForSetProperty",
       "org.apache.webbeans.component.AbstractProducerBean",
       "org.apache.webbeans.config.BeansDeployer",
       "org.apache.webbeans.util.SingleItemSet$SingleItemIterator",
       "org.apache.webbeans.context.creational.CreationalContextImpl",
       "org.apache.webbeans.intercept.LifecycleInterceptorInvocationContext",
       "org.apache.webbeans.util.WebBeansUtil$EventCacheKey",
       "org.apache.webbeans.exception.WebBeansDeploymentException",
       "org.apache.webbeans.context.AbstractContext",
       "org.apache.webbeans.component.WebBeansType",
       "org.apache.webbeans.util.JNDIUtil",
       "org.apache.webbeans.container.OwbCDI",
       "org.apache.webbeans.corespi.DefaultSingletonService",
       "org.apache.webbeans.component.ExtensionBean",
       "org.apache.webbeans.component.ProducerAwareInjectionTargetBean",
       "org.apache.webbeans.annotation.RequestedScopeLiteral",
       "org.apache.webbeans.component.InterceptionFactoryBean$1",
       "org.apache.webbeans.component.creation.ExtensionBeanBuilder",
       "org.apache.webbeans.annotation.DefaultLiteral",
       "org.apache.webbeans.conversation.ConversationImpl",
       "org.apache.webbeans.util.SecurityUtil$PrivilegedActionForClass",
       "org.apache.webbeans.inject.InjectableConstructor",
       "org.apache.webbeans.util.InjectionExceptionUtil",
       "org.apache.webbeans.portable.AnnotatedElementFactory",
       "org.apache.webbeans.service.DefaultInjectionPointService",
       "org.apache.webbeans.portable.events.generics.GProcessProducerMethod",
       "org.apache.webbeans.util.PriorityClass",
       "org.apache.webbeans.component.ResourceProvider",
       "org.apache.webbeans.portable.AbstractDecoratorInjectionTarget",
       "org.apache.webbeans.component.NewBean",
       "org.apache.webbeans.component.BeanMetadataBean",
       "org.apache.webbeans.component.InstanceBean$1"
      ],
      "usedTypes": [
       "org.apache.webbeans.context.AbstractContext"
      ],
      "usageRatio": 0.0026041666666666665,
      "children": [
       {
        "id": "org.apache.xbean:xbean-finder-shaded:jar:4.13:test",
        "coordinates": "org.apache.xbean:xbean-finder-shaded:4.13",
        "groupId": "org.apache.xbean",
        "artifactId": "xbean-finder-shaded",
        "version": "4.13",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 153288,
        "type": "transitive",
        "status": "bloated",
        "parent": "org.apache.openwebbeans:openwebbeans-impl:jar:2.0.11:test",
        "allTypes": [
         "org.apache.xbean.finder.AnnotationFinder$Info",
         "org.apache.xbean.finder.Parameter",
         "org.apache.xbean.finder.archive.FilteredArchive$1",
         "org.apache.xbean.finder.MetaAnnotatedConstructor",
         "org.apache.xbean.finder.archive.ClasspathArchive",
         "org.apache.xbean.finder.archive.MJarSupport$1",
         "org.apache.xbean.finder.BundleAssignableClassFinder",
         "org.apache.xbean.finder.AnnotationFinder",
         "org.apache.xbean.finder.archive.FilteredArchive",
         "org.apache.xbean.finder.AbstractFinder$AnnotationInfo",
         "org.apache.xbean.finder.util.Files",
         "org.apache.xbean.finder.AbstractFinder$ClassInfo",
         "org.apache.xbean.finder.BundleAnnotationFinder",
         "org.apache.xbean.finder.filter.ClassFilter",
         "org.apache.xbean.finder.filter.SuffixFilter",
         "org.apache.xbean.finder.AnnotationFinder$MethodInfo",
         "org.apache.xbean.finder.IAnnotationFinder",
         "org.apache.xbean.finder.archive.JarArchive$JarIterator$1",
         "org.apache.xbean.finder.AbstractFinder$FieldInfo",
         "org.apache.xbean.finder.AnnotationFinder$ParameterInfo",
         "org.apache.xbean.finder.MetaAnnotatedField",
         "org.apache.xbean.finder.archive.ArchiveIterator",
         "org.apache.xbean.finder.archive.JarArchive$JarIterator$ClassEntry",
         "org.apache.xbean.finder.archive.CompositeArchive$CompositeIterator",
         "org.apache.xbean.finder.filter.FilterList",
         "org.apache.xbean.finder.MetaAnnotated",
         "org.apache.xbean.finder.archive.ClassesArchive",
         "org.apache.xbean.finder.archive.BundleArchive$AnnotationFindingCallback",
         "org.apache.xbean.finder.filter.PackageFilter",
         "org.apache.xbean.finder.AbstractFinder$MethodInfo",
         "org.apache.xbean.finder.ResourceFinder",
         "org.apache.xbean.finder.AnnotatedMethod",
         "org.apache.xbean.finder.archive.MJarSupport$Clazz",
         "org.apache.xbean.finder.Annotated",
         "org.apache.xbean.finder.util.SingleLinkedList$Values",
         "org.apache.xbean.finder.ClassLoaders",
         "org.apache.xbean.finder.AbstractFinder$Info",
         "org.apache.xbean.finder.archive.Archive$Entry",
         "org.apache.xbean.finder.MetaAnnotatedElement",
         "org.apache.xbean.finder.archive.BundleArchive$1",
         "org.apache.xbean.finder.archive.JarArchive$1",
         "org.apache.xbean.finder.filter.Filters$NegativeFilter",
         "org.apache.xbean.finder.filter.IncludeExcludeFilter",
         "org.apache.xbean.finder.Parameter$1",
         "org.apache.xbean.finder.AnnotationFinder$Annotatable",
         "org.apache.xbean.finder.AnnotationFinder$PackageInfo",
         "org.apache.xbean.finder.AnnotationFinder$SubArchive$E",
         "org.apache.xbean.finder.Parameter$2",
         "org.apache.xbean.finder.util.SingleLinkedList$Entries",
         "org.apache.xbean.finder.filter.PatternFilter",
         "org.apache.xbean.finder.UriSet",
         "org.apache.xbean.finder.archive.MJarSupport",
         "org.apache.xbean.finder.MetaAnnotation",
         "org.apache.xbean.finder.MetaAnnotatedClass",
         "org.apache.xbean.finder.archive.FileArchive",
         "org.apache.xbean.finder.filter.Filters",
         "org.apache.xbean.finder.AnnotationFinder$ClassInfo",
         "org.apache.xbean.finder.UrlSet",
         "org.apache.xbean.finder.MetaAnnotatedMethod",
         "org.apache.xbean.finder.AnnotationFinder$FieldInfo",
         "org.apache.xbean.finder.filter.ContainsFilter",
         "org.apache.xbean.finder.util.SingleLinkedList$Entry",
         "org.apache.xbean.finder.util.Classes",
         "org.apache.xbean.finder.BundleAnnotationFinder$AnnotationFindingCallback",
         "org.apache.xbean.finder.archive.BundleArchive",
         "org.apache.xbean.finder.archive.JarArchive$JarIterator",
         "org.apache.xbean.finder.archive.JarArchive",
         "org.apache.xbean.finder.AnnotationFinder$AnnotationInfo",
         "org.apache.xbean.finder.AbstractFinder",
         "org.apache.xbean.finder.util.SingleLinkedList",
         "org.apache.xbean.finder.filter.Filters$1",
         "org.apache.xbean.finder.filter.Filter",
         "org.apache.xbean.finder.BundleAnnotationFinder$1",
         "org.apache.xbean.finder.ClassFinder",
         "org.apache.xbean.finder.filter.PrefixFilter",
         "org.apache.xbean.finder.archive.CompositeArchive",
         "org.apache.xbean.finder.AnnotatedMember",
         "org.apache.xbean.finder.util.SingleLinkedList$1",
         "org.apache.xbean.finder.AnnotationFinder$InfoBuildingVisitor",
         "org.apache.xbean.finder.archive.ArchiveIterator$1",
         "org.apache.xbean.finder.archive.FilteredArchive$FilteredIterator",
         "org.apache.xbean.finder.archive.Archive",
         "org.apache.xbean.finder.archive.CompositeArchive$1",
         "org.apache.xbean.finder.AbstractFinder$InfoBuildingVisitor",
         "org.apache.xbean.finder.AbstractFinder$PackageInfo",
         "org.apache.xbean.finder.AnnotationFinder$SubArchive",
         "org.apache.xbean.finder.filter.ExcludeIncludeFilter",
         "org.apache.xbean.finder.AbstractFinder$Annotatable"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "org.apache.xbean:xbean-asm7-shaded:jar:4.13:test",
        "coordinates": "org.apache.xbean:xbean-asm7-shaded:4.13",
        "groupId": "org.apache.xbean",
        "artifactId": "xbean-asm7-shaded",
        "version": "4.13",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 281712,
        "type": "transitive",
        "status": "bloated",
        "parent": "org.apache.openwebbeans:openwebbeans-impl:jar:2.0.11:test",
        "allTypes": [
         "org.apache.xbean.asm7.Context",
         "org.apache.xbean.asm7.tree.MethodNode$1",
         "org.apache.xbean.asm7.tree.TypeInsnNode",
         "org.apache.xbean.asm7.ClassReader",
         "org.apache.xbean.asm7.tree.InvokeDynamicInsnNode",
         "org.apache.xbean.asm7.commons.MethodRemapper",
         "org.apache.xbean.asm7.commons.SimpleRemapper",
         "org.apache.xbean.asm7.AnnotationWriter",
         "org.apache.xbean.asm7.Handler",
         "org.apache.xbean.asm7.tree.InnerClassNode",
         "org.apache.xbean.asm7.commons.ClassRemapper",
         "org.apache.xbean.asm7.tree.analysis.SmallSet$IteratorImpl",
         "org.apache.xbean.asm7.MethodWriter",
         "org.apache.xbean.asm7.tree.ParameterNode",
         "org.apache.xbean.asm7.tree.ModuleProvideNode",
         "org.apache.xbean.asm7.Type",
         "org.apache.xbean.asm7.ConstantDynamic",
         "org.apache.xbean.asm7.tree.LocalVariableAnnotationNode",
         "org.apache.xbean.asm7.tree.ModuleExportNode",
         "org.apache.xbean.asm7.ByteVector",
         "org.apache.xbean.asm7.ModuleVisitor",
         "org.apache.xbean.asm7.Constants",
         "org.apache.xbean.asm7.Frame",
         "org.apache.xbean.asm7.tree.FieldInsnNode",
         "org.apache.xbean.asm7.signature.SignatureWriter",
         "org.apache.xbean.asm7.tree.ClassNode",
         "org.apache.xbean.asm7.CurrentFrame",
         "org.apache.xbean.asm7.tree.analysis.BasicInterpreter",
         "org.apache.xbean.asm7.tree.analysis.SimpleVerifier",
         "org.apache.xbean.asm7.FieldWriter",
         "org.apache.xbean.asm7.TypePath",
         "org.apache.xbean.asm7.tree.MultiANewArrayInsnNode",
         "org.apache.xbean.asm7.tree.InsnNode",
         "org.apache.xbean.asm7.MethodVisitor",
         "org.apache.xbean.asm7.commons.GeneratorAdapter",
         "org.apache.xbean.asm7.commons.SignatureRemapper",
         "org.apache.xbean.asm7.shade.commons.EmptyVisitor",
         "org.apache.xbean.asm7.commons.TryCatchBlockSorter$1",
         "org.apache.xbean.asm7.tree.UnsupportedClassVersionException",
         "org.apache.xbean.asm7.commons.AnalyzerAdapter",
         "org.apache.xbean.asm7.commons.JSRInlinerAdapter$Instantiation",
         "org.apache.xbean.asm7.tree.analysis.Subroutine",
         "org.apache.xbean.asm7.SymbolTable$Entry",
         "org.apache.xbean.asm7.commons.TryCatchBlockSorter",
         "org.apache.xbean.asm7.tree.AbstractInsnNode",
         "org.apache.xbean.asm7.Symbol",
         "org.apache.xbean.asm7.tree.LdcInsnNode",
         "org.apache.xbean.asm7.signature.SignatureReader",
         "org.apache.xbean.asm7.commons.SerialVersionUIDAdder",
         "org.apache.xbean.asm7.commons.SerialVersionUIDAdder$Item",
         "org.apache.xbean.asm7.tree.LookupSwitchInsnNode",
         "org.apache.xbean.asm7.tree.JumpInsnNode",
         "org.apache.xbean.asm7.tree.MethodNode",
         "org.apache.xbean.asm7.shade.commons.EmptyVisitor$1",
         "org.apache.xbean.asm7.commons.JSRInlinerAdapter",
         "org.apache.xbean.asm7.shade.commons.EmptyVisitor$3",
         "org.apache.xbean.asm7.shade.commons.EmptyVisitor$2",
         "org.apache.xbean.asm7.commons.Remapper",
         "org.apache.xbean.asm7.tree.TryCatchBlockNode",
         "org.apache.xbean.asm7.tree.IincInsnNode",
         "org.apache.xbean.asm7.signature.SignatureVisitor",
         "org.apache.xbean.asm7.TypeReference",
         "org.apache.xbean.asm7.ClassVisitor",
         "org.apache.xbean.asm7.tree.analysis.Interpreter",
         "org.apache.xbean.asm7.tree.FrameNode",
         "org.apache.xbean.asm7.AnnotationVisitor",
         "org.apache.xbean.asm7.commons.InstructionAdapter",
         "org.apache.xbean.asm7.tree.TableSwitchInsnNode",
         "org.apache.xbean.asm7.Attribute",
         "org.apache.xbean.asm7.commons.ModuleRemapper",
         "org.apache.xbean.asm7.commons.TableSwitchGenerator",
         "org.apache.xbean.asm7.ClassTooLargeException",
         "org.apache.xbean.asm7.tree.InsnList",
         "org.apache.xbean.asm7.commons.FieldRemapper",
         "org.apache.xbean.asm7.tree.analysis.Frame",
         "org.apache.xbean.asm7.tree.IntInsnNode",
         "org.apache.xbean.asm7.tree.analysis.SourceInterpreter",
         "org.apache.xbean.asm7.tree.InsnList$InsnListIterator",
         "org.apache.xbean.asm7.tree.FieldNode",
         "org.apache.xbean.asm7.commons.AdviceAdapter",
         "org.apache.xbean.asm7.Opcodes",
         "org.apache.xbean.asm7.commons.ModuleHashesAttribute",
         "org.apache.xbean.asm7.tree.ModuleRequireNode",
         "org.apache.xbean.asm7.tree.ModuleOpenNode",
         "org.apache.xbean.asm7.Edge",
         "org.apache.xbean.asm7.tree.analysis.SmallSet",
         "org.apache.xbean.asm7.commons.StaticInitMerger",
         "org.apache.xbean.asm7.tree.ModuleNode",
         "org.apache.xbean.asm7.tree.analysis.BasicValue",
         "org.apache.xbean.asm7.tree.LineNumberNode",
         "org.apache.xbean.asm7.tree.AnnotationNode",
         "org.apache.xbean.asm7.commons.ModuleResolutionAttribute",
         "org.apache.xbean.asm7.FieldVisitor",
         "org.apache.xbean.asm7.tree.MethodInsnNode",
         "org.apache.xbean.asm7.commons.LocalVariablesSorter",
         "org.apache.xbean.asm7.commons.CodeSizeEvaluator",
         "org.apache.xbean.asm7.Attribute$Set",
         "org.apache.xbean.asm7.MethodTooLargeException",
         "org.apache.xbean.asm7.commons.AnnotationRemapper",
         "org.apache.xbean.asm7.Handle",
         "org.apache.xbean.asm7.commons.Method",
         "org.apache.xbean.asm7.Label",
         "org.apache.xbean.asm7.tree.TypeAnnotationNode",
         "org.apache.xbean.asm7.SymbolTable",
         "org.apache.xbean.asm7.commons.ModuleTargetAttribute",
         "org.apache.xbean.asm7.tree.analysis.AnalyzerException",
         "org.apache.xbean.asm7.ModuleWriter",
         "org.apache.xbean.asm7.tree.VarInsnNode",
         "org.apache.xbean.asm7.tree.analysis.BasicVerifier",
         "org.apache.xbean.asm7.tree.LabelNode",
         "org.apache.xbean.asm7.tree.analysis.Analyzer",
         "org.apache.xbean.asm7.tree.analysis.SourceValue",
         "org.apache.xbean.asm7.ClassWriter",
         "org.apache.xbean.asm7.tree.analysis.Value",
         "org.apache.xbean.asm7.tree.Util",
         "org.apache.xbean.asm7.tree.LocalVariableNode"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "org.apache.openwebbeans:openwebbeans-spi:jar:2.0.11:test",
        "coordinates": "org.apache.openwebbeans:openwebbeans-spi:2.0.11",
        "groupId": "org.apache.openwebbeans",
        "artifactId": "openwebbeans-spi",
        "version": "2.0.11",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 21945,
        "type": "transitive",
        "status": "bloated",
        "parent": "org.apache.openwebbeans:openwebbeans-impl:jar:2.0.11:test",
        "allTypes": [
         "org.apache.webbeans.spi.adaptor.ELAdaptor",
         "org.apache.webbeans.spi.plugins.AbstractOwbPlugin",
         "org.apache.webbeans.spi.BdaScannerService",
         "org.apache.webbeans.spi.ValidatorService",
         "org.apache.webbeans.spi.ScannerService",
         "org.apache.webbeans.spi.LoaderService",
         "org.apache.webbeans.spi.BeanArchiveService",
         "org.apache.webbeans.spi.ConversationService",
         "org.apache.webbeans.spi.ApplicationBoundaryService",
         "org.apache.webbeans.spi.ResourceInjectionService",
         "org.apache.webbeans.spi.TransactionService",
         "org.apache.webbeans.spi.api.ResourceReference",
         "org.apache.webbeans.spi.plugins.OpenWebBeansPlugin",
         "org.apache.webbeans.spi.plugins.OpenWebBeansEjbPlugin",
         "org.apache.webbeans.spi.SingletonService",
         "org.apache.webbeans.spi.JNDIService",
         "org.apache.webbeans.spi.ContainerLifecycle",
         "org.apache.webbeans.spi.BeanArchiveService$BeanArchiveInformation",
         "org.apache.webbeans.spi.InjectionPointService",
         "org.apache.webbeans.spi.ContextsService",
         "org.apache.webbeans.spi.plugins.OpenWebBeansJavaEEPlugin",
         "org.apache.webbeans.spi.SecurityService",
         "org.apache.webbeans.spi.BeanArchiveService$BeanDiscoveryMode",
         "org.apache.webbeans.spi.BDABeansXmlScanner"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     }
    ]
   },
   {
    "id": "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile",
    "coordinates": "org.springframework.hateoas:spring-hateoas:1.0.0.RC2",
    "groupId": "org.springframework.hateoas",
    "artifactId": "spring-hateoas",
    "version": "1.0.0.RC2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 506890,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.hateoas.server.core.AbstractEntityLinks",
     "org.springframework.hateoas.server.reactive.SimpleReactiveRepresentationModelAssembler",
     "org.springframework.hateoas.client.Traverson$1",
     "org.springframework.hateoas.config.WebMvcHateoasConfiguration$HypermediaRestTemplateBeanPostProcessor",
     "org.springframework.hateoas.mediatype.TypeBasedPayloadMetadata",
     "org.springframework.hateoas.server.reactive.WebFluxLinkBuilder$WebFluxLink",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$UberCollectionModelDeserializer",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsDeserializers",
     "org.springframework.hateoas.server.RepresentationModelAssembler",
     "org.springframework.hateoas.mediatype.hal.CurieProvider",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule$HalLink",
     "org.springframework.hateoas.server.core.EmbeddedWrappers",
     "org.springframework.hateoas.server.mvc.UriComponentsBuilderFactory",
     "org.springframework.hateoas.mediatype.JacksonHelper",
     "org.springframework.hateoas.server.mvc.ControllerLinkBuilderFactory",
     "org.springframework.hateoas.server.mvc.RepresentationModelProcessorHandlerMethodReturnValueHandler",
     "org.springframework.hateoas.client.TraversonDefaults",
     "org.springframework.hateoas.mediatype.hal.forms.Jackson2HalFormsModule$HalFormsHandlerInstantiator",
     "org.springframework.hateoas.config.WebMvcHateoasConfiguration",
     "org.springframework.hateoas.mediatype.collectionjson.package-info",
     "org.springframework.hateoas.server.core.package-info",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule$HalHandlerInstantiator",
     "org.springframework.hateoas.IanaLinkRelations",
     "org.springframework.hateoas.TemplateVariable$VariableType",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonDocument",
     "org.springframework.hateoas.package-info",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$UberRepresentationModelDeserializer",
     "org.springframework.hateoas.mediatype.PropertyUtils$AnnotatedProperty",
     "org.springframework.hateoas.server.core.TypeReferences",
     "org.springframework.hateoas.server.TypedEntityLinks",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$EntityModelMixin",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsSerializers$HalFormsCollectionModelSerializer",
     "org.springframework.hateoas.server.mvc.package-info",
     "org.springframework.hateoas.server.mvc.WebMvcLinkBuilder$CustomUriTemplateHandler",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule$OptionalListJackson2Serializer",
     "org.springframework.hateoas.server.core.DummyInvocationUtils$SimpleMethodInvocation",
     "org.springframework.hateoas.server.mvc.JacksonSerializers",
     "org.springframework.hateoas.mediatype.uber.UberData",
     "org.springframework.hateoas.server.core.EmbeddedWrappers$AbstractEmbeddedWrapper",
     "org.springframework.hateoas.server.core.TypeReferences$EntityModelType",
     "org.springframework.hateoas.config.MediaTypeConfigurationProvider",
     "org.springframework.hateoas.mediatype.hal.RepresentationModelMixin",
     "org.springframework.hateoas.mediatype.hal.DefaultCurieProvider$Curie",
     "org.springframework.hateoas.config.package-info",
     "org.springframework.hateoas.AffordanceModel$Named",
     "org.springframework.hateoas.mediatype.PropertyUtils$ReactiveWrappers",
     "org.springframework.hateoas.config.HateoasConfiguration",
     "org.springframework.hateoas.server.mvc.WebMvcLinkBuilderDslKt",
     "org.springframework.hateoas.client.Rels$LinkDiscovererRel",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule$HalResourcesDeserializer",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule$HalLinkListSerializer",
     "org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration",
     "org.springframework.hateoas.server.core.LastInvocationAware",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonData",
     "org.springframework.hateoas.server.core.DummyInvocationUtils$InvocationRecordingMethodInterceptor",
     "org.springframework.hateoas.mediatype.collectionjson.PagedResourcesMixin",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonTemplate",
     "org.springframework.hateoas.mediatype.uber.UberMediaTypeConfiguration",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonPagedResourcesDeserializer",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule$HalResourcesSerializer",
     "org.springframework.hateoas.mediatype.alps.Format",
     "org.springframework.hateoas.mediatype.hal.HalLinkRelation",
     "org.springframework.hateoas.config.WebMvcHateoasConfiguration$HypermediaWebMvcConfigurer",
     "org.springframework.hateoas.server.core.TemplateVariableAwareLinkBuilderSupport",
     "org.springframework.hateoas.server.core.TypeReferences$SyntheticParameterizedTypeReference",
     "org.springframework.hateoas.mediatype.alps.package-info",
     "org.springframework.hateoas.server.SimpleRepresentationModelAssembler",
     "org.springframework.hateoas.mediatype.hal.forms.Jackson2HalFormsModule$CollectionModelMixin",
     "org.springframework.hateoas.client.Rels$JsonPathRel",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsDocument",
     "org.springframework.hateoas.config.WebClientConfigurer",
     "org.springframework.hateoas.server.core.SpringAffordanceBuilder",
     "org.springframework.hateoas.client.LinkDiscoverers",
     "org.springframework.hateoas.server.core.HeaderLinksResponseEntity",
     "org.springframework.hateoas.client.LinkDiscoverer",
     "org.springframework.hateoas.server.ExposesResourceFor",
     "org.springframework.hateoas.mediatype.vnderrors.VndErrors$VndError",
     "org.springframework.hateoas.mediatype.uber.UberError",
     "org.springframework.hateoas.server.core.AnnotationAttribute",
     "org.springframework.hateoas.support.package-info",
     "org.springframework.hateoas.mediatype.collectionjson.EntityRepresentationModelMixin",
     "org.springframework.hateoas.server.mvc.JacksonSerializers$MediaTypeDeserializer",
     "org.springframework.hateoas.server.mvc.WebMvcAffordanceBuilderDsl",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfigurationProvider",
     "org.springframework.hateoas.mediatype.hal.LinkMixin",
     "org.springframework.hateoas.mediatype.hal.CurieProvider$1",
     "org.springframework.hateoas.config.WebMvcEntityLinksConfiguration",
     "org.springframework.hateoas.AffordanceModel$InputPayloadMetadata",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonLinkDiscoverer",
     "org.springframework.hateoas.client.Traverson",
     "org.springframework.hateoas.mediatype.hal.CollectionModelMixin",
     "org.springframework.hateoas.client.Traverson$UriStringAndHeaders",
     "org.springframework.hateoas.server.mvc.RepresentationModelProcessorInvoker$EntityModelProcessorWrapper",
     "org.springframework.hateoas.mediatype.alps.Descriptor",
     "org.springframework.hateoas.AffordanceModel$PropertyMetadata",
     "org.springframework.hateoas.server.core.ControllerEntityLinksFactoryBean",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonResourceDeserializer",
     "org.springframework.hateoas.mediatype.hal.HalConfiguration",
     "org.springframework.hateoas.mediatype.Affordances$1",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule$HalLinkListDeserializer",
     "org.springframework.hateoas.server.core.WebHandler$AnnotatedParametersParameterAccessor",
     "org.springframework.hateoas.server.LinkRelationProvider$LookupContext",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsTemplateBuilder$PropertyCustomizations",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonLinkDiscoverer$CollectionJsonSelfLinkDiscoverer",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsAffordanceModel",
     "org.springframework.hateoas.server.core.UriTemplateFactory",
     "org.springframework.hateoas.mediatype.hal.HalLinkDiscoverer",
     "org.springframework.hateoas.mediatype.uber.UberAffordanceModelFactory",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsTemplateBuilder$PropertyPrompt",
     "org.springframework.hateoas.mediatype.uber.UberData$LinkAndRels",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonAffordanceModel",
     "org.springframework.hateoas.AffordanceModel$DelegatingInputPayloadMetadata",
     "org.springframework.hateoas.mediatype.AffordanceModelFactory",
     "org.springframework.hateoas.server.mvc.RepresentationModelProcessorInvoker$CustomOrderAwareComparator",
     "org.springframework.hateoas.mediatype.PropertyUtils$Jsr303AwarePropertyMetadata",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonPagedResourcesSerializer",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsProperty",
     "org.springframework.hateoas.server.reactive.WebFluxLinkBuilder",
     "org.springframework.hateoas.server.mvc.ControllerLinkBuilder$CustomUriTemplateHandler",
     "org.springframework.hateoas.server.core.DelegatingEntityLinks",
     "org.springframework.hateoas.server.mvc.RepresentationModelProcessorInvoker$ProcessorWrapper",
     "org.springframework.hateoas.server.core.MethodParameters",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsSerializers",
     "org.springframework.hateoas.mediatype.PropertyUtils$1",
     "org.springframework.hateoas.mediatype.uber.UberLinkDiscoverer",
     "org.springframework.hateoas.mediatype.MessageResolver",
     "org.springframework.hateoas.config.WebStackImportSelector",
     "org.springframework.hateoas.TemplateVariables",
     "org.springframework.hateoas.mediatype.alps.Doc$DocBuilder",
     "org.springframework.hateoas.server.reactive.package-info",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsLinkDiscoverer",
     "org.springframework.hateoas.Link",
     "org.springframework.hateoas.AffordanceModel$NoPayloadMetadata",
     "org.springframework.hateoas.mediatype.uber.UberMediaTypeConfigurationProvider",
     "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter",
     "org.springframework.hateoas.server.core.WebHandler",
     "org.springframework.hateoas.mediatype.hal.forms.Jackson2HalFormsModule",
     "org.springframework.hateoas.mediatype.uber.UberAction",
     "org.springframework.hateoas.server.core.DelegatingLinkRelationProvider",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration",
     "org.springframework.hateoas.mediatype.hal.forms.Jackson2HalFormsModule$EntityModelMixin",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonAffordanceModelFactory",
     "org.springframework.hateoas.server.EntityLinks",
     "org.springframework.hateoas.server.TypedEntityLinks$ExtendedTypedEntityLinks",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonResourceSerializer",
     "org.springframework.hateoas.AffordanceModel$PropertyMetadataConfigured",
     "org.springframework.hateoas.mediatype.package-info",
     "org.springframework.hateoas.server.core.MethodParameters$AnnotationNamingMethodParameter",
     "org.springframework.hateoas.server.LinkBuilderFactory",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsTemplate",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsSerializers$HalFormsEntityModelSerializer",
     "org.springframework.hateoas.mediatype.hal.forms.Jackson2HalFormsModule$RepresentationModelMixin",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsTemplateBuilder$TemplateTitle",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$UberCollectionModelSerializer",
     "org.springframework.hateoas.server.core.DummyInvocationUtils",
     "org.springframework.hateoas.server.core.MethodInvocation",
     "org.springframework.hateoas.mediatype.PropertyUtils",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$UberRepresentationModelSerializer",
     "org.springframework.hateoas.AffordanceModel",
     "org.springframework.hateoas.UriTemplate$1",
     "org.springframework.hateoas.config.EnableHypermediaSupport$HypermediaType",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$PagedModelMixin",
     "org.springframework.hateoas.config.HypermediaConfigurationImportSelector",
     "org.springframework.hateoas.mediatype.Affordances$AffordanceBuilder",
     "org.springframework.hateoas.server.mvc.ControllerLinkRelationProvider",
     "org.springframework.hateoas.IanaRels",
     "org.springframework.hateoas.client.Traverson$TraversalBuilder",
     "org.springframework.hateoas.server.core.WebHandler$AnnotatedParametersParameterAccessor$BoundMethodParameter",
     "org.springframework.hateoas.mediatype.alps.Ext$ExtBuilder",
     "org.springframework.hateoas.RepresentationModel",
     "org.springframework.hateoas.StringLinkRelation",
     "org.springframework.hateoas.mediatype.vnderrors.package-info",
     "org.springframework.hateoas.client.Traverson$URIAndHeaders",
     "org.springframework.hateoas.client.Rels$1",
     "org.springframework.hateoas.CollectionModel",
     "org.springframework.hateoas.QueryParameter",
     "org.springframework.hateoas.mediatype.hal.HalConfiguration$RenderSingleLinks",
     "org.springframework.hateoas.server.RepresentationModelProcessor",
     "org.springframework.hateoas.mediatype.hal.forms.Jackson2HalFormsModule$HalFormsLinksDeserializer",
     "org.springframework.hateoas.config.WebMvcHateoasConfiguration$HypermediaRepresentationModelBeanProcessorPostProcessor",
     "org.springframework.hateoas.client.JsonPathLinkDiscoverer",
     "org.springframework.hateoas.mediatype.hal.package-info",
     "org.springframework.hateoas.server.core.EmbeddedWrappers$EmbeddedCollection",
     "org.springframework.hateoas.server.mvc.RepresentationModelProcessorInvoker",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsDeserializers$MediaTypesDeserializer",
     "org.springframework.hateoas.server.core.Relation",
     "org.springframework.hateoas.server.core.WebHandler$LinkBuilderCreator",
     "org.springframework.hateoas.server.core.TypeReferences$PagedModelType",
     "org.springframework.hateoas.mediatype.hal.DefaultCurieProvider",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonResourceSupportDeserializer",
     "org.springframework.hateoas.Links",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$UberEntityModelDeserializer",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsDeserializers$HalFormsCollectionModelDeserializer",
     "org.springframework.hateoas.mediatype.Affordances",
     "org.springframework.hateoas.server.mvc.WebMvcAffordanceBuilderDslKt",
     "org.springframework.hateoas.server.mvc.WebMvcLinkBuilder",
     "org.springframework.hateoas.mediatype.hal.forms.package-info",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule$TrueOnlyBooleanSerializer",
     "org.springframework.hateoas.server.LinkRelationProvider",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$UberPagedModelSerializer",
     "org.springframework.hateoas.mediatype.hal.HalTraversonDefaults",
     "org.springframework.hateoas.mediatype.alps.Ext",
     "org.springframework.hateoas.config.EnableHypermediaSupport",
     "org.springframework.hateoas.mediatype.hal.forms.Jackson2HalFormsModule$MediaTypeMixin",
     "org.springframework.hateoas.server.mvc.RepresentationModelProcessorInvoker$CollectionModelProcessorWrapper",
     "org.springframework.hateoas.server.mvc.WebMvcLinkBuilderFactory",
     "org.springframework.hateoas.mediatype.PropertyUtils$DefaultPropertyMetadata",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$UberActionDeserializer",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonResourcesSerializer",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsSerializers$HalFormsRepresentationModelSerializer",
     "org.springframework.hateoas.server.reactive.ReactiveRepresentationModelAssembler",
     "org.springframework.hateoas.mediatype.DefaultOnlyMessageResolver",
     "org.springframework.hateoas.server.mvc.UriComponentsContributor",
     "org.springframework.hateoas.mediatype.alps.AlpsLinkDiscoverer",
     "org.springframework.hateoas.server.MethodLinkBuilderFactory",
     "org.springframework.hateoas.client.package-info",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsTemplateBuilder",
     "org.springframework.hateoas.TemplateVariable",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonResourceSupportSerializer",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonMediaTypeConfigurationProvider",
     "org.springframework.hateoas.mediatype.uber.Uber",
     "org.springframework.hateoas.UriTemplate",
     "org.springframework.hateoas.server.LinkBuilder",
     "org.springframework.hateoas.mediatype.AffordanceOperations",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsConfiguration",
     "org.springframework.hateoas.server.mvc.ControllerLinkBuilder",
     "org.springframework.hateoas.server.core.AnnotationMappingDiscoverer",
     "org.springframework.hateoas.mediatype.hal.forms.HalFormsAffordanceModelFactory",
     "org.springframework.hateoas.EntityModel",
     "org.springframework.hateoas.Affordance",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$UberPagedModelDeserializer",
     "org.springframework.hateoas.mediatype.hal.HalLinkRelation$HalLinkRelationBuilder",
     "org.springframework.hateoas.server.core.EvoInflectorLinkRelationProvider",
     "org.springframework.hateoas.server.mvc.WebMvcLinkBuilderDsl",
     "org.springframework.hateoas.server.core.TypeReferences$SyntheticParameterizedType",
     "org.springframework.hateoas.server.mvc.RepresentationModelAssemblerSupport$Builder",
     "org.springframework.hateoas.config.EntityLinksConfiguration",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonError",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonResourcesDeserializer",
     "org.springframework.hateoas.mediatype.vnderrors.VndErrors",
     "org.springframework.hateoas.mediatype.alps.Descriptor$DescriptorBuilder",
     "org.springframework.hateoas.server.mvc.RepresentationModelAssemblerSupport",
     "org.springframework.hateoas.server.core.LinkBuilderSupport",
     "org.springframework.hateoas.server.core.EmbeddedWrappers$EmptyCollectionEmbeddedWrapper",
     "org.springframework.hateoas.mediatype.uber.UberAffordanceModel",
     "org.springframework.hateoas.server.core.EmbeddedWrappers$EmbeddedElement",
     "org.springframework.hateoas.server.core.EmbeddedWrapper",
     "org.springframework.hateoas.server.LinkRelationProvider$LookupContext$ResourceType",
     "org.springframework.hateoas.MediaTypes",
     "org.springframework.hateoas.server.core.MappingDiscoverer",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonMediaTypeConfiguration",
     "org.springframework.hateoas.mediatype.collectionjson.RepresentationModelMixin",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonItem",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJson",
     "org.springframework.hateoas.server.core.WebHandler$AffordanceKey",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule$EmbeddedMapper",
     "org.springframework.hateoas.server.mvc.BasicLinkBuilder",
     "org.springframework.hateoas.server.core.TypeReferences$CollectionModelType",
     "org.springframework.hateoas.mediatype.MessageSourceResolver",
     "org.springframework.hateoas.PagedModel",
     "org.springframework.hateoas.LinkRelation",
     "org.springframework.hateoas.server.core.WebHandler$RequestParamParameterAccessor$1",
     "org.springframework.hateoas.mediatype.alps.Type",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionRepresentationModelMixin",
     "org.springframework.hateoas.config.HypermediaMappingInformation",
     "org.springframework.hateoas.server.core.WebHandler$RequestParamParameterAccessor",
     "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonQuery",
     "org.springframework.hateoas.PagedModel$PageMetadata",
     "org.springframework.hateoas.mediatype.alps.Doc",
     "org.springframework.hateoas.mediatype.uber.package-info",
     "org.springframework.hateoas.Links$MergeMode",
     "org.springframework.hateoas.mediatype.hal.HalMediaTypeConfigurationProvider",
     "org.springframework.hateoas.config.WebFluxHateoasConfiguration",
     "org.springframework.hateoas.server.reactive.WebFluxLinkBuilder$WebFluxBuilder",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule",
     "org.springframework.hateoas.mediatype.alps.Alps$AlpsBuilder",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonLinksSerializer",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonLinksDeserializer",
     "org.springframework.hateoas.server.core.ControllerEntityLinks",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$CollectionJsonDeserializerBase",
     "org.springframework.hateoas.support.WebStack",
     "org.springframework.hateoas.mediatype.collectionjson.Jackson2CollectionJsonModule$1",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$CollectionModelMixin",
     "org.springframework.hateoas.server.core.DefaultLinkRelationProvider",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$UberEntityModelSerializer",
     "org.springframework.hateoas.client.Rels$Rel",
     "org.springframework.hateoas.mediatype.hal.forms.Jackson2HalFormsModule$LinksMixin",
     "org.springframework.hateoas.server.core.EncodingUtils",
     "org.springframework.hateoas.server.core.CachingMappingDiscoverer",
     "org.springframework.hateoas.mediatype.uber.UberDocument",
     "org.springframework.hateoas.config.WebFluxHateoasConfiguration$HypermediaWebFluxConfigurer",
     "org.springframework.hateoas.AffordanceModel$PayloadMetadata",
     "org.springframework.hateoas.client.Rels",
     "org.springframework.hateoas.mediatype.hal.Jackson2HalModule",
     "org.springframework.hateoas.mediatype.hal.HalEmbeddedBuilder",
     "org.springframework.hateoas.config.WebFluxHateoasConfiguration$HypermediaWebClientBeanPostProcessor",
     "org.springframework.hateoas.mediatype.alps.Alps",
     "org.springframework.hateoas.mediatype.uber.Jackson2UberModule$RepresentationModelMixin",
     "org.springframework.hateoas.mediatype.hal.forms.Jackson2HalFormsModule$PagedModelMixin",
     "org.springframework.hateoas.server.package-info",
     "org.springframework.hateoas.client.Hop",
     "org.springframework.hateoas.server.core.AnnotationLinkRelationProvider",
     "org.springframework.hateoas.server.mvc.RepresentationModelProcessorInvoker$DefaultProcessorWrapper"
    ],
    "usedTypes": [
     "org.springframework.hateoas.TemplateVariable$VariableType",
     "org.springframework.hateoas.server.core.EmbeddedWrapper",
     "org.springframework.hateoas.Link",
     "org.springframework.hateoas.server.mvc.UriComponentsContributor",
     "org.springframework.hateoas.server.MethodLinkBuilderFactory",
     "org.springframework.hateoas.TemplateVariable",
     "org.springframework.hateoas.EntityModel",
     "org.springframework.hateoas.RepresentationModel",
     "org.springframework.hateoas.PagedModel",
     "org.springframework.hateoas.LinkRelation",
     "org.springframework.hateoas.server.RepresentationModelAssembler",
     "org.springframework.hateoas.UriTemplate",
     "org.springframework.hateoas.server.LinkBuilder",
     "org.springframework.hateoas.server.core.EmbeddedWrappers",
     "org.springframework.hateoas.server.core.MethodParameters",
     "org.springframework.hateoas.PagedModel$PageMetadata",
     "org.springframework.hateoas.server.mvc.WebMvcLinkBuilderFactory",
     "org.springframework.hateoas.TemplateVariables",
     "org.springframework.hateoas.IanaLinkRelations"
    ],
    "usageRatio": 0.0625,
    "children": [
     {
      "id": "org.springframework.plugin:spring-plugin-core:jar:2.0.0.M2:compile",
      "coordinates": "org.springframework.plugin:spring-plugin-core:2.0.0.M2",
      "groupId": "org.springframework.plugin",
      "artifactId": "spring-plugin-core",
      "version": "2.0.0.M2",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 23812,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.springframework.hateoas:spring-hateoas:jar:1.0.0.RC2:compile (optional) )",
      "allTypes": [
       "org.springframework.plugin.core.config.PluginListDefinitionParser",
       "org.springframework.plugin.core.SimplePluginRegistry",
       "org.springframework.plugin.core.config.PluginRegistryDefinitionParser",
       "org.springframework.plugin.core.PluginRegistrySupport",
       "org.springframework.plugin.core.OrderAwarePluginRegistry",
       "org.springframework.plugin.core.config.EnablePluginRegistries",
       "org.springframework.plugin.core.support.AbstractTypeAwareSupport$BeansOfTypeTargetSource",
       "org.springframework.plugin.core.PluginRegistry",
       "org.springframework.plugin.core.config.PluginRegistriesBeanDefinitionRegistrar",
       "org.springframework.plugin.core.support.package-info",
       "org.springframework.plugin.core.config.PluginNamespaceHandler",
       "org.springframework.plugin.core.support.BeanListFactoryBean",
       "org.springframework.plugin.core.package-info",
       "org.springframework.plugin.core.Plugin",
       "org.springframework.plugin.core.support.PluginRegistryFactoryBean",
       "org.springframework.plugin.core.support.AbstractTypeAwareSupport"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "org.springframework:spring-webmvc:jar:5.2.0.RC2:compile",
    "coordinates": "org.springframework:spring-webmvc:5.2.0.RC2",
    "groupId": "org.springframework",
    "artifactId": "spring-webmvc",
    "version": "5.2.0.RC2",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 938879,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.web.servlet.config.annotation.InterceptorRegistration",
     "org.springframework.web.servlet.function.RequestPredicates$NegateRequestPredicate",
     "org.springframework.web.servlet.resource.VersionPathStrategy",
     "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping$PathExposingHandlerInterceptor",
     "org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$JsonEmitterSubscriber",
     "org.springframework.web.servlet.tags.form.package-info",
     "org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBodyReturnValueHandler$StreamingResponseBodyTask",
     "org.springframework.web.servlet.resource.ResourceUrlEncodingFilter",
     "org.springframework.web.servlet.view.tiles3.package-info",
     "org.springframework.web.servlet.resource.ResourceUrlEncodingFilter$LookupPathIndexException",
     "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
     "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod$ConcurrentResultHandlerMethod",
     "org.springframework.web.servlet.tags.form.TagWriter$SafeWriter",
     "org.springframework.web.servlet.mvc.method.annotation.ViewMethodReturnValueHandler",
     "org.springframework.web.servlet.FrameworkServlet$1",
     "org.springframework.web.servlet.HttpServletBean",
     "org.springframework.web.servlet.mvc.method.annotation.HttpHeadersReturnValueHandler",
     "org.springframework.web.servlet.view.tiles3.SpringLocaleResolver",
     "org.springframework.web.servlet.tags.form.RadioButtonsTag",
     "org.springframework.web.servlet.handler.WebRequestHandlerInterceptorAdapter",
     "org.springframework.web.servlet.resource.CssLinkResourceTransformer",
     "org.springframework.web.servlet.i18n.LocaleChangeInterceptor",
     "org.springframework.web.servlet.HandlerExceptionResolver",
     "org.springframework.web.servlet.view.groovy.package-info",
     "org.springframework.web.servlet.HandlerAdapter",
     "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer",
     "org.springframework.web.servlet.mvc.condition.package-info",
     "org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver",
     "org.springframework.web.servlet.function.DefaultServerRequest$1",
     "org.springframework.web.servlet.tags.form.CheckboxTag",
     "org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver",
     "org.springframework.web.servlet.tags.HtmlEscapingAwareTag",
     "org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain",
     "org.springframework.web.servlet.resource.ResourceTransformerChain",
     "org.springframework.web.servlet.view.xslt.XsltView",
     "org.springframework.web.servlet.tags.form.SelectTag",
     "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMethodMappingNamingStrategy",
     "org.springframework.web.servlet.resource.CachingResourceResolver",
     "org.springframework.web.servlet.view.document.AbstractPdfView",
     "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
     "org.springframework.web.servlet.config.TilesConfigurerBeanDefinitionParser",
     "org.springframework.web.servlet.tags.ArgumentAware",
     "org.springframework.web.servlet.mvc.ServletWrappingController",
     "org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdvice",
     "org.springframework.web.servlet.mvc.ServletForwardingController",
     "org.springframework.web.servlet.view.xslt.package-info",
     "org.springframework.web.servlet.resource.WebJarsResourceResolver",
     "org.springframework.web.servlet.i18n.AbstractLocaleContextResolver",
     "org.springframework.web.servlet.view.xslt.XsltViewResolver",
     "org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean",
     "org.springframework.web.servlet.mvc.support.package-info",
     "org.springframework.web.servlet.mvc.method.annotation.ServletCookieValueMethodArgumentResolver",
     "org.springframework.web.servlet.tags.form.ValueFormatter",
     "org.springframework.web.servlet.theme.ThemeChangeInterceptor",
     "org.springframework.web.servlet.tags.package-info",
     "org.springframework.web.servlet.function.ServerResponseExtensionsKt",
     "org.springframework.web.servlet.view.XmlViewResolver",
     "org.springframework.web.servlet.support.AbstractFlashMapManager",
     "org.springframework.web.servlet.view.ContentNegotiatingViewResolver$1",
     "org.springframework.web.servlet.handler.HandlerMappingIntrospector$RequestAttributeChangeIgnoringWrapper",
     "org.springframework.web.servlet.function.ServerRequest",
     "org.springframework.web.servlet.function.RouterFunctions$Visitor",
     "org.springframework.web.servlet.function.RouterFunctions$DefaultRouterFunction",
     "org.springframework.web.servlet.mvc.method.annotation.SseEmitter",
     "org.springframework.web.servlet.tags.form.SelectTag$1",
     "org.springframework.web.servlet.handler.SimpleServletHandlerAdapter",
     "org.springframework.web.servlet.view.json.package-info",
     "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter",
     "org.springframework.web.servlet.support.JstlUtils$SpringLocalizationContext",
     "org.springframework.web.servlet.tags.form.RadioButtonTag",
     "org.springframework.web.servlet.support.SessionFlashMapManager",
     "org.springframework.web.servlet.mvc.method.annotation.ServletWebArgumentResolverAdapter",
     "org.springframework.web.servlet.function.DefaultEntityResponseBuilder$DefaultEntityResponse",
     "org.springframework.web.servlet.i18n.FixedLocaleResolver",
     "org.springframework.web.servlet.function.ResourceHandlerFunction$1",
     "org.springframework.web.servlet.FrameworkServlet$ContextRefreshListener",
     "org.springframework.web.servlet.view.UrlBasedViewResolver",
     "org.springframework.web.servlet.view.feed.package-info",
     "org.springframework.web.servlet.mvc.method.annotation.JsonViewRequestBodyAdvice",
     "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
     "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
     "org.springframework.web.servlet.theme.package-info",
     "org.springframework.web.servlet.function.RequestPredicates$HttpMethodPredicate",
     "org.springframework.web.servlet.view.groovy.GroovyMarkupView",
     "org.springframework.web.servlet.config.MvcNamespaceUtils",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter",
     "org.springframework.web.servlet.view.freemarker.FreeMarkerView$GenericServletAdapter",
     "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry",
     "org.springframework.web.servlet.tags.form.InputTag",
     "org.springframework.web.servlet.view.feed.AbstractAtomFeedView",
     "org.springframework.web.servlet.handler.UserRoleAuthorizationInterceptor",
     "org.springframework.web.servlet.mvc.ServletWrappingController$DelegatingServletConfig",
     "org.springframework.web.servlet.view.AbstractUrlBasedView",
     "org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver",
     "org.springframework.web.servlet.tags.RequestContextAwareTag",
     "org.springframework.web.servlet.tags.form.PasswordInputTag",
     "org.springframework.web.servlet.resource.EncodedResourceResolver$EncodedResource",
     "org.springframework.web.servlet.resource.VersionStrategy",
     "org.springframework.web.servlet.tags.form.OptionWriter",
     "org.springframework.web.servlet.view.freemarker.FreeMarkerView",
     "org.springframework.web.servlet.mvc.condition.AbstractRequestCondition",
     "org.springframework.web.servlet.view.tiles3.TilesConfigurer$SpringCompleteAutoloadTilesInitializer",
     "org.springframework.web.servlet.handler.AbstractHandlerMapping",
     "org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolver",
     "org.springframework.web.servlet.view.AbstractCachingViewResolver$1",
     "org.springframework.web.servlet.view.AbstractCachingViewResolver$2",
     "org.springframework.web.servlet.tags.UrlTag$UrlType",
     "org.springframework.web.servlet.config.MvcNamespaceHandler",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$1",
     "org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver$EmptyBodyCheckingHttpInputMessage",
     "org.springframework.web.servlet.mvc.condition.ParamsRequestCondition$ParamExpression",
     "org.springframework.web.servlet.resource.DefaultResourceTransformerChain",
     "org.springframework.web.servlet.view.tiles3.TilesViewResolver",
     "org.springframework.web.servlet.mvc.method.annotation.CallableMethodReturnValueHandler",
     "org.springframework.web.servlet.mvc.condition.MediaTypeExpression",
     "org.springframework.web.servlet.function.DefaultServerResponseBuilder$AbstractServerResponse$ErrorHandler",
     "org.springframework.web.servlet.mvc.ParameterizableViewController",
     "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry",
     "org.springframework.web.servlet.mvc.condition.AbstractNameValueExpression",
     "org.springframework.web.servlet.resource.ResourceHttpRequestHandler",
     "org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver",
     "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$KotlinDelegate",
     "org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler",
     "org.springframework.web.servlet.resource.AppCacheManifestTransformer$LineInfo",
     "org.springframework.web.servlet.mvc.UrlFilenameViewController",
     "org.springframework.web.servlet.resource.FixedVersionStrategy",
     "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistration",
     "org.springframework.web.servlet.function.RouterFunctions",
     "org.springframework.web.servlet.resource.VersionResourceResolver$FileNameVersionedResource",
     "org.springframework.web.servlet.mvc.method.annotation.SessionAttributeMethodArgumentResolver",
     "org.springframework.web.servlet.mvc.condition.HeadersRequestCondition",
     "org.springframework.web.servlet.config.annotation.ViewResolverRegistry$TilesRegistration",
     "org.springframework.web.servlet.NoHandlerFoundException",
     "org.springframework.web.servlet.view.tiles3.TilesConfigurer$CompositeELResolverImpl",
     "org.springframework.web.servlet.view.document.AbstractXlsxStreamingView",
     "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition",
     "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
     "org.springframework.web.servlet.function.RouterFunctions$SameComposedRouterFunction",
     "org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap",
     "org.springframework.web.servlet.view.tiles3.TilesView$2",
     "org.springframework.web.servlet.function.DefaultServerRequestBuilder$BuiltServerRequest$BuiltInputMessage",
     "org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory",
     "org.springframework.web.servlet.view.tiles3.TilesView$1",
     "org.springframework.web.servlet.mvc.method.annotation.DeferredResultMethodReturnValueHandler$1",
     "org.springframework.web.servlet.view.tiles3.SpringWildcardServletTilesApplicationContext",
     "org.springframework.web.servlet.function.support.package-info",
     "org.springframework.web.servlet.ModelAndViewDefiningException",
     "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer",
     "org.springframework.web.servlet.view.AbstractTemplateView",
     "org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor",
     "org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody",
     "org.springframework.web.servlet.mvc.condition.HeadersRequestCondition$HeaderExpression",
     "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$PartialMatchHelper",
     "org.springframework.web.servlet.view.script.ScriptTemplateViewResolver",
     "org.springframework.web.servlet.function.ServerRequest$Builder",
     "org.springframework.web.servlet.FlashMapManager",
     "org.springframework.web.servlet.function.RouterFunctions$FilteredRouterFunction",
     "org.springframework.web.servlet.view.tiles3.TilesConfigurer",
     "org.springframework.web.servlet.resource.HttpResource",
     "org.springframework.web.servlet.function.HandlerFunction",
     "org.springframework.web.servlet.tags.form.TagIdGenerator",
     "org.springframework.web.servlet.view.document.AbstractPdfStamperView",
     "org.springframework.web.servlet.config.InterceptorsBeanDefinitionParser",
     "org.springframework.web.servlet.i18n.CookieLocaleResolver",
     "org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMethodArgumentResolver$1",
     "org.springframework.web.servlet.config.annotation.CorsRegistry",
     "org.springframework.web.servlet.mvc.method.RequestMappingInfo",
     "org.springframework.web.servlet.view.script.package-info",
     "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
     "org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver",
     "org.springframework.web.servlet.function.RouterFunctions$Builder",
     "org.springframework.web.servlet.mvc.LastModified",
     "org.springframework.web.servlet.ViewResolver",
     "org.springframework.web.servlet.support.ServletUriComponentsBuilder",
     "org.springframework.web.servlet.view.ViewResolverComposite",
     "org.springframework.web.servlet.support.RequestDataValueProcessor",
     "org.springframework.web.servlet.view.document.AbstractXlsView",
     "org.springframework.web.servlet.view.xml.MappingJackson2XmlView",
     "org.springframework.web.servlet.tags.UrlTag",
     "org.springframework.web.servlet.support.WebContentGenerator",
     "org.springframework.web.servlet.function.RequestPredicate",
     "org.springframework.web.servlet.mvc.condition.ParamsRequestCondition",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler",
     "org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver",
     "org.springframework.web.servlet.mvc.method.annotation.PathVariableMapMethodArgumentResolver",
     "org.springframework.web.servlet.mvc.method.annotation.DeferredResultMethodReturnValueHandler",
     "org.springframework.web.servlet.view.AbstractView",
     "org.springframework.web.servlet.function.RenderingResponse",
     "org.springframework.web.servlet.resource.CssLinkResourceTransformer$ImportStatementLinkParser",
     "org.springframework.web.servlet.view.freemarker.FreeMarkerConfig",
     "org.springframework.web.servlet.SmartView",
     "org.springframework.web.servlet.config.FreeMarkerConfigurerBeanDefinitionParser",
     "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer$1",
     "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
     "org.springframework.web.servlet.tags.EscapeBodyTag",
     "org.springframework.web.servlet.view.RedirectView",
     "org.springframework.web.servlet.view.freemarker.package-info",
     "org.springframework.web.servlet.view.xml.package-info",
     "org.springframework.web.servlet.tags.form.OptionsTag$OptionsWriter",
     "org.springframework.web.servlet.mvc.annotation.package-info",
     "org.springframework.web.servlet.function.RequestPredicates$PathExtensionPredicate",
     "org.springframework.web.servlet.view.ResourceBundleViewResolver",
     "org.springframework.web.servlet.config.CorsBeanDefinitionParser",
     "org.springframework.web.servlet.resource.CssLinkResourceTransformer$ContentChunkInfo",
     "org.springframework.web.servlet.support.JspAwareRequestContext",
     "org.springframework.web.servlet.function.RequestPredicates$SubPathServerRequestWrapper",
     "org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver",
     "org.springframework.web.servlet.i18n.package-info",
     "org.springframework.web.servlet.tags.form.CheckboxesTag",
     "org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor",
     "org.springframework.web.servlet.handler.SimpleMappingExceptionResolver",
     "org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor",
     "org.springframework.web.servlet.mvc.method.annotation.ServletRequestDataBinderFactory",
     "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod",
     "org.springframework.web.servlet.function.DefaultRenderingResponseBuilder",
     "org.springframework.web.servlet.mvc.method.RequestMappingInfo$DefaultBuilder",
     "org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression",
     "org.springframework.web.servlet.support.BindStatus",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$DataWithMediaType",
     "org.springframework.web.servlet.view.json.MappingJackson2JsonView",
     "org.springframework.web.servlet.function.RequestPredicates$PathPatternPredicate",
     "org.springframework.web.servlet.tags.form.AbstractHtmlElementTag",
     "org.springframework.web.servlet.function.RequestPredicates$ParamPredicate",
     "org.springframework.web.servlet.function.ResourceHandlerFunction$HeadMethodResource",
     "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
     "org.springframework.web.servlet.function.DefaultServerRequestBuilder$BuiltServerRequest",
     "org.springframework.web.servlet.view.package-info",
     "org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder$MethodArgumentBuilder",
     "org.springframework.web.servlet.handler.SimpleServletPostProcessor",
     "org.springframework.web.servlet.config.annotation.ViewResolverRegistry$FreeMarkerRegistration",
     "org.springframework.web.servlet.config.ViewResolversBeanDefinitionParser",
     "org.springframework.web.servlet.i18n.SessionLocaleResolver",
     "org.springframework.web.servlet.config.annotation.ViewResolverRegistry$ScriptRegistration",
     "org.springframework.web.servlet.resource.AbstractVersionStrategy",
     "org.springframework.web.servlet.function.ServerResponse$HeadersBuilder",
     "org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor",
     "org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag",
     "org.springframework.web.servlet.function.ServerRequestExtensionsKt",
     "org.springframework.web.servlet.tags.form.AbstractFormTag",
     "org.springframework.web.servlet.view.tiles3.TilesConfigurer$SpringTilesContainerFactory",
     "org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver",
     "org.springframework.web.servlet.config.ScriptTemplateConfigurerBeanDefinitionParser",
     "org.springframework.web.servlet.handler.DispatcherServletWebRequest",
     "org.springframework.web.servlet.resource.ResourceUrlProvider",
     "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration",
     "org.springframework.web.servlet.config.ResourcesBeanDefinitionParser",
     "org.springframework.web.servlet.config.ViewControllerBeanDefinitionParser",
     "org.springframework.web.servlet.LocaleResolver",
     "org.springframework.web.servlet.config.package-info",
     "org.springframework.web.servlet.function.ServerResponse$Context",
     "org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder",
     "org.springframework.web.servlet.mvc.package-info",
     "org.springframework.web.servlet.resource.AbstractVersionStrategy$PrefixVersionPathStrategy",
     "org.springframework.web.servlet.tags.form.OptionTag",
     "org.springframework.web.servlet.tags.form.SelectedValueComparator",
     "org.springframework.web.servlet.mvc.support.RedirectAttributes",
     "org.springframework.web.servlet.config.annotation.PathMatchConfigurer",
     "org.springframework.web.servlet.tags.EvalTag$JspPropertyAccessor",
     "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
     "org.springframework.web.servlet.function.DefaultServerResponseBuilder$AbstractServerResponse",
     "org.springframework.web.servlet.mvc.AbstractController",
     "org.springframework.web.servlet.handler.AbstractHandlerMapping$PreFlightHandler",
     "org.springframework.web.servlet.theme.CookieThemeResolver",
     "org.springframework.web.servlet.tags.form.AbstractHtmlElementBodyTag",
     "org.springframework.web.servlet.support.JstlUtils",
     "org.springframework.web.servlet.config.DefaultServletHandlerBeanDefinitionParser",
     "org.springframework.web.servlet.function.RequestPredicates$AcceptPredicate",
     "org.springframework.web.servlet.theme.FixedThemeResolver",
     "org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration",
     "org.springframework.web.servlet.view.script.ScriptTemplateConfig",
     "org.springframework.web.servlet.function.DefaultServerRequest$ServletAttributesMap",
     "org.springframework.web.servlet.view.tiles3.TilesView",
     "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping$UriTemplateVariablesHandlerInterceptor",
     "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
     "org.springframework.web.servlet.function.RequestPredicates$Visitor",
     "org.springframework.web.servlet.view.script.ScriptTemplateView",
     "org.springframework.web.servlet.function.DefaultRenderingResponseBuilder$DefaultRenderingResponse",
     "org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler",
     "org.springframework.web.servlet.view.json.AbstractJackson2View",
     "org.springframework.web.servlet.ThemeResolver",
     "org.springframework.web.servlet.function.RequestPredicates$ContentTypePredicate",
     "org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser",
     "org.springframework.web.servlet.tags.EditorAwareTag",
     "org.springframework.web.servlet.resource.CssLinkResourceTransformer$UrlFunctionLinkParser",
     "org.springframework.web.servlet.function.RouterFunctionDsl$resources$1",
     "org.springframework.web.servlet.mvc.method.annotation.SseEmitter$SseEventBuilder",
     "org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver",
     "org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver",
     "org.springframework.web.servlet.mvc.ServletWrappingController$1",
     "org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$CollectedValuesList",
     "org.springframework.web.servlet.function.RouterFunctionDsl$nest$1",
     "org.springframework.web.servlet.function.DefaultServerRequestBuilder$1",
     "org.springframework.web.servlet.function.RenderingResponse$Builder",
     "org.springframework.web.servlet.FlashMap",
     "org.springframework.web.servlet.resource.ResourceResolverChain",
     "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
     "org.springframework.web.servlet.resource.CssLinkResourceTransformer$1",
     "org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse$NoContentLengthResponseWrapper",
     "org.springframework.web.servlet.view.tiles3.AbstractSpringPreparerFactory",
     "org.springframework.web.servlet.view.script.RenderingContext",
     "org.springframework.web.servlet.tags.form.OptionsTag",
     "org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber",
     "org.springframework.web.servlet.tags.ArgumentTag",
     "org.springframework.web.servlet.FrameworkServlet",
     "org.springframework.web.servlet.function.RouterFunctionDslKt",
     "org.springframework.web.servlet.function.RequestPredicates",
     "org.springframework.web.servlet.support.AbstractDispatcherServletInitializer",
     "org.springframework.web.servlet.view.BeanNameViewResolver",
     "org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition",
     "org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver",
     "org.springframework.web.servlet.View",
     "org.springframework.web.servlet.config.annotation.ViewResolverRegistry$GroovyMarkupRegistration",
     "org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver$PathVariableNamedValueInfo",
     "org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite",
     "org.springframework.web.servlet.AsyncHandlerInterceptor",
     "org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition",
     "org.springframework.web.servlet.function.RequestPredicates$SubPathServerRequestWrapper$SubPathContainer",
     "org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse",
     "org.springframework.web.servlet.tags.form.TextareaTag",
     "org.springframework.web.servlet.handler.SimpleServletPostProcessor$DelegatingServletConfig",
     "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
     "org.springframework.web.servlet.tags.form.HiddenInputTag",
     "org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder",
     "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
     "org.springframework.web.servlet.mvc.condition.ProducesRequestCondition",
     "org.springframework.web.servlet.resource.VersionResourceResolver",
     "org.springframework.web.servlet.view.freemarker.FreeMarkerView$DelegatingServletConfig",
     "org.springframework.web.servlet.resource.AppCacheManifestTransformer",
     "org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber",
     "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
     "org.springframework.web.servlet.function.DefaultEntityResponseBuilder$PublisherEntityResponse$ProducingSubscriber",
     "org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$1",
     "org.springframework.web.servlet.HandlerExecutionChain",
     "org.springframework.web.servlet.view.InternalResourceView",
     "org.springframework.web.servlet.tags.BindTag",
     "org.springframework.web.servlet.support.RequestContextUtils",
     "org.springframework.web.servlet.mvc.condition.ProducesRequestCondition$ProduceMediaTypeExpression",
     "org.springframework.web.servlet.handler.package-info",
     "org.springframework.web.servlet.function.RouterFunction",
     "org.springframework.web.servlet.mvc.method.annotation.ModelAndViewMethodReturnValueHandler",
     "org.springframework.web.servlet.DispatcherServlet",
     "org.springframework.web.servlet.HttpServletBean$ServletConfigPropertyValues",
     "org.springframework.web.servlet.support.RequestContext",
     "org.springframework.web.servlet.resource.AppCacheManifestTransformer$LineOutput",
     "org.springframework.web.servlet.mvc.method.annotation.package-info",
     "org.springframework.web.servlet.tags.ThemeTag",
     "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
     "org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver",
     "org.springframework.web.servlet.mvc.method.annotation.AbstractMappingJacksonResponseBodyAdvice",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice",
     "org.springframework.web.servlet.mvc.method.annotation.ViewNameMethodReturnValueHandler",
     "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
     "org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber",
     "org.springframework.web.servlet.view.tiles3.TilesConfigurer$1",
     "org.springframework.web.servlet.tags.ParamTag",
     "org.springframework.web.servlet.tags.ParamAware",
     "org.springframework.web.servlet.resource.AbstractResourceResolver",
     "org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder$ControllerMethodInvocationInterceptor",
     "org.springframework.web.servlet.function.ServerResponseExtensionsKt$bodyWithType$1",
     "org.springframework.web.servlet.ModelAndView",
     "org.springframework.web.servlet.function.RouterFunctions$1",
     "org.springframework.web.servlet.view.xml.MarshallingView",
     "org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag",
     "org.springframework.web.servlet.mvc.condition.CompositeRequestCondition",
     "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$Match",
     "org.springframework.web.servlet.resource.CachingResourceTransformer",
     "org.springframework.web.servlet.mvc.condition.RequestCondition",
     "org.springframework.web.servlet.tags.form.LabelTag",
     "org.springframework.web.servlet.resource.ContentVersionStrategy",
     "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer",
     "org.springframework.web.servlet.config.annotation.ViewControllerRegistry",
     "org.springframework.web.servlet.mvc.method.RequestMappingInfo$Builder",
     "org.springframework.web.servlet.view.InternalResourceViewResolver",
     "org.springframework.web.servlet.mvc.method.package-info",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$Handler",
     "org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler",
     "org.springframework.web.servlet.function.EntityResponse$Builder",
     "org.springframework.web.servlet.view.JstlView",
     "org.springframework.web.servlet.tags.form.AbstractSingleCheckedElementTag",
     "org.springframework.web.servlet.mvc.condition.RequestConditionHolder",
     "org.springframework.web.servlet.function.PathResourceLookupFunction",
     "org.springframework.web.servlet.view.script.ScriptTemplateConfigurer",
     "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
     "org.springframework.web.servlet.tags.Param",
     "org.springframework.web.servlet.handler.MatchableHandlerMapping",
     "org.springframework.web.servlet.function.DefaultServerRequestBuilder",
     "org.springframework.web.servlet.handler.AbstractHandlerMapping$CorsInterceptor",
     "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy",
     "org.springframework.web.servlet.function.RouterFunctionDslKt$sam$org_springframework_web_servlet_function_HandlerFunction$0",
     "org.springframework.web.servlet.config.GroovyMarkupConfigurerBeanDefinitionParser",
     "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
     "org.springframework.web.servlet.config.annotation.ViewResolverRegistry",
     "org.springframework.web.servlet.function.EntityResponse",
     "org.springframework.web.servlet.resource.TransformedResource",
     "org.springframework.web.servlet.view.AbstractTemplateViewResolver",
     "org.springframework.web.servlet.view.tiles3.TilesConfigurer$SpringTilesInitializer",
     "org.springframework.web.servlet.config.annotation.ResourceChainRegistration",
     "org.springframework.web.servlet.function.ServerRequestExtensionsKt$body$1",
     "org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag",
     "org.springframework.web.servlet.tags.HtmlEscapeTag",
     "org.springframework.web.servlet.function.DefaultServerRequest",
     "org.springframework.web.servlet.function.ServerResponse$BodyBuilder",
     "org.springframework.web.servlet.function.ServerResponse",
     "org.springframework.web.servlet.tags.BindErrorsTag",
     "org.springframework.web.servlet.tags.MessageTag",
     "org.springframework.web.servlet.resource.GzipResourceResolver$GzippedResource",
     "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
     "org.springframework.web.servlet.function.RouterFunctionBuilder",
     "org.springframework.web.servlet.theme.SessionThemeResolver",
     "org.springframework.web.servlet.support.package-info",
     "org.springframework.web.servlet.function.RequestPredicates$OrRequestPredicate",
     "org.springframework.web.servlet.function.ResourceHandlerFunction",
     "org.springframework.web.servlet.mvc.method.annotation.RedirectAttributesMethodArgumentResolver",
     "org.springframework.web.servlet.theme.AbstractThemeResolver",
     "org.springframework.web.servlet.view.tiles3.TilesConfigurer$TilesElActivator",
     "org.springframework.web.servlet.i18n.SessionLocaleResolver$1",
     "org.springframework.web.servlet.function.DefaultEntityResponseBuilder",
     "org.springframework.web.servlet.resource.PathResourceResolver",
     "org.springframework.web.servlet.resource.ResourceTransformer",
     "org.springframework.web.servlet.view.freemarker.FreeMarkerView$1",
     "org.springframework.web.servlet.function.HandlerFilterFunction",
     "org.springframework.web.servlet.resource.ResourceResolver",
     "org.springframework.web.servlet.HandlerMapping",
     "org.springframework.web.servlet.function.RouterFunctions$ResourcesRouterFunction",
     "org.springframework.web.servlet.resource.AppCacheManifestTransformer$LineAggregator",
     "org.springframework.web.servlet.resource.ResourceUrlEncodingFilter$ResourceUrlEncodingRequestWrapper",
     "org.springframework.web.servlet.config.annotation.CorsRegistration",
     "org.springframework.web.servlet.view.AbstractCachingViewResolver",
     "org.springframework.web.servlet.i18n.FixedLocaleResolver$1",
     "org.springframework.web.servlet.resource.package-info",
     "org.springframework.web.servlet.handler.RequestMatchResult",
     "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
     "org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor",
     "org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration",
     "org.springframework.web.servlet.function.ToStringVisitor",
     "org.springframework.web.servlet.function.support.HandlerFunctionAdapter$ServerRequestContext",
     "org.springframework.web.servlet.support.JspAwareRequestContext$JstlPageLocaleResolver",
     "org.springframework.web.servlet.mvc.Controller",
     "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$PartialMatchHelper$PartialMatch",
     "org.springframework.web.servlet.function.RequestPredicates$HeadersPredicate",
     "org.springframework.web.servlet.function.ServerRequest$Headers",
     "org.springframework.web.servlet.mvc.method.annotation.ModelAndViewResolverMethodReturnValueHandler",
     "org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration",
     "org.springframework.web.servlet.HandlerInterceptor",
     "org.springframework.web.servlet.resource.DefaultResourceResolverChain",
     "org.springframework.web.servlet.mvc.method.annotation.AsyncTaskMethodReturnValueHandler",
     "org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor",
     "org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition$ConsumeMediaTypeExpression",
     "org.springframework.web.servlet.function.DefaultServerResponseBuilder$WriterFunctionResponse",
     "org.springframework.web.servlet.FrameworkServlet$RequestBindingInterceptor",
     "org.springframework.web.servlet.resource.AbstractVersionStrategy$FileNameVersionPathStrategy",
     "org.springframework.web.servlet.function.RouterFunctions$AbstractRouterFunction",
     "org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBodyReturnValueHandler",
     "org.springframework.web.servlet.view.tiles3.SimpleSpringPreparerFactory",
     "org.springframework.web.servlet.config.annotation.package-info",
     "org.springframework.web.servlet.function.DefaultServerRequest$ServletParametersMap",
     "org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer",
     "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MatchComparator",
     "org.springframework.web.servlet.config.annotation.ViewControllerRegistration",
     "org.springframework.web.servlet.function.DefaultServerRequestBuilder$BodyInputStream",
     "org.springframework.web.servlet.tags.form.TagWriter",
     "org.springframework.web.servlet.resource.CssLinkResourceTransformer$LinkParser",
     "org.springframework.web.servlet.LocaleContextResolver",
     "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer$LocaleTemplateResolver",
     "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$NoOpValidator",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$ErrorCallback",
     "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer",
     "org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver",
     "org.springframework.web.servlet.tags.NestedPathTag",
     "org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdviceAdapter",
     "org.springframework.web.servlet.handler.HandlerInterceptorAdapter",
     "org.springframework.web.servlet.function.RouterFunctions$DifferentComposedRouterFunction",
     "org.springframework.web.servlet.mvc.method.annotation.SseEmitter$1",
     "org.springframework.web.servlet.function.DefaultEntityResponseBuilder$CompletionStageEntityResponse",
     "org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver",
     "org.springframework.web.servlet.function.RequestPredicates$AndRequestPredicate",
     "org.springframework.web.servlet.view.groovy.GroovyMarkupConfig",
     "org.springframework.web.servlet.config.annotation.InterceptorRegistry",
     "org.springframework.web.servlet.view.feed.AbstractRssFeedView",
     "org.springframework.web.servlet.tags.EvalTag",
     "org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMethodArgumentResolver",
     "org.springframework.web.servlet.resource.EncodedResourceResolver",
     "org.springframework.web.servlet.mvc.method.annotation.SseEmitter$SseEventBuilderImpl",
     "org.springframework.web.servlet.function.support.RouterFunctionMapping",
     "org.springframework.web.servlet.tags.form.ErrorsTag",
     "org.springframework.web.servlet.view.feed.AbstractFeedView",
     "org.springframework.web.servlet.tags.form.ButtonTag",
     "org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder$MethodInvocationInfo",
     "org.springframework.web.servlet.resource.ResourceUrlEncodingFilter$ResourceUrlEncodingResponseWrapper",
     "org.springframework.web.servlet.view.script.ScriptTemplateView$EngineKey",
     "org.springframework.web.servlet.i18n.CookieLocaleResolver$1",
     "org.springframework.web.servlet.view.document.AbstractXlsxView",
     "org.springframework.web.servlet.tags.form.FormTag",
     "org.springframework.web.servlet.tags.form.AbstractCheckedElementTag",
     "org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer",
     "org.springframework.web.servlet.function.DefaultServerRequest$DefaultRequestHeaders",
     "org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMethodArgumentResolver$MatrixVariableNamedValueInfo",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$StreamingServletServerHttpResponse",
     "org.springframework.web.servlet.handler.MappedInterceptor",
     "org.springframework.web.servlet.resource.CssLinkResourceTransformer$AbstractLinkParser",
     "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$1",
     "org.springframework.web.servlet.mvc.method.annotation.JsonViewResponseBodyAdvice",
     "org.springframework.web.servlet.function.RouterFunctionDslKt$sam$java_util_function_Predicate$0",
     "org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor$1",
     "org.springframework.web.servlet.function.package-info",
     "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
     "org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$TextEmitterSubscriber",
     "org.springframework.web.servlet.RequestToViewNameTranslator",
     "org.springframework.web.servlet.function.RouterFunctions$DefaultNestedRouterFunction",
     "org.springframework.web.servlet.function.RouterFunctionDslKt$sam$java_util_function_Supplier$0",
     "org.springframework.web.servlet.function.RouterFunctionDsl",
     "org.springframework.web.servlet.function.DefaultServerResponseBuilder",
     "org.springframework.web.servlet.mvc.WebContentInterceptor",
     "org.springframework.web.servlet.support.RequestContext$JstlLocaleResolver",
     "org.springframework.web.servlet.view.document.package-info",
     "org.springframework.web.servlet.resource.GzipResourceResolver",
     "org.springframework.web.servlet.tags.TransformTag",
     "org.springframework.web.servlet.mvc.method.annotation.ServletResponseMethodArgumentResolver",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler",
     "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
     "org.springframework.web.servlet.tags.form.TagWriter$TagStateEntry",
     "org.springframework.web.servlet.config.annotation.EnableWebMvc",
     "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$DefaultCallback",
     "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod$ConcurrentResultMethodParameter",
     "org.springframework.web.servlet.resource.ResourceTransformerSupport",
     "org.springframework.web.servlet.mvc.condition.NameValueExpression",
     "org.springframework.web.servlet.view.tiles3.TilesConfigurer$SpringCompleteAutoloadTilesContainerFactory",
     "org.springframework.web.servlet.package-info",
     "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
     "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$1",
     "org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver$PushBuilderDelegate",
     "org.springframework.web.servlet.mvc.AbstractUrlViewController"
    ],
    "usedTypes": [
     "org.springframework.web.servlet.ModelAndView",
     "org.springframework.web.servlet.support.ServletUriComponentsBuilder",
     "org.springframework.web.servlet.config.annotation.EnableWebMvc",
     "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
     "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
    ],
    "usageRatio": 0.009380863039399626,
    "children": []
   },
   {
    "id": "com.sun.xml.bind:jaxb-impl:jar:2.2.3U1:test",
    "coordinates": "com.sun.xml.bind:jaxb-impl:2.2.3U1",
    "groupId": "com.sun.xml.bind",
    "artifactId": "jaxb-impl",
    "version": "2.2.3U1",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 890168,
    "type": "direct",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "com.sun.xml.txw2.output.IndentingXMLFilter",
     "com.sun.xml.txw2.output.DumpSerializer",
     "com.sun.xml.bind.v2.model.impl.PropertySeed",
     "com.sun.xml.bind.v2.schemagen.xmlschema.ComplexTypeHost",
     "com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Long",
     "com.sun.xml.bind.v2.runtime.CompositeStructureBeanInfo",
     "com.sun.xml.bind.v2.runtime.RuntimeUtil$ToStringAdapter",
     "com.sun.xml.txw2.DatatypeWriter$1",
     "com.sun.xml.bind.v2.runtime.reflect.AdaptedAccessor",
     "com.sun.xml.bind.v2.model.annotation.RuntimeAnnotationReader",
     "com.sun.xml.bind.v2.runtime.AssociationMap$Entry",
     "com.sun.xml.bind.v2.model.runtime.RuntimeMapPropertyInfo",
     "com.sun.xml.bind.v2.model.runtime.RuntimeElement",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerInteger$IntegerArrayPack",
     "com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Character",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$UUIDImpl",
     "com.sun.xml.bind.v2.runtime.output.Encoded",
     "com.sun.xml.bind.v2.schemagen.xmlschema.SimpleExtension",
     "com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$1",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Schema",
     "com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$2",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_field_Long",
     "com.sun.xml.bind.v2.model.core.ElementPropertyInfo",
     "com.sun.xml.bind.v2.runtime.property.ValueProperty",
     "com.sun.xml.bind.v2.runtime.reflect.Accessor$ReadOnlyFieldReflection",
     "com.sun.xml.txw2.output.DomSerializer",
     "com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty$1",
     "com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Single",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerShort",
     "com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$Factory",
     "com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data",
     "com.sun.xml.bind.api.impl.NameConverter$Standard",
     "com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element",
     "com.sun.xml.bind.v2.runtime.unmarshaller.Intercepter",
     "com.sun.xml.bind.v2.runtime.output.ForkXmlOutput",
     "com.sun.xml.bind.v2.runtime.reflect.ListTransducedAccessorImpl",
     "com.sun.xml.bind.v2.model.core.EnumLeafInfo",
     "com.sun.xml.bind.v2.runtime.MarshallerImpl",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerShort$1",
     "com.sun.istack.FragmentContentHandler",
     "com.sun.xml.bind.v2.runtime.unmarshaller.ProxyLoader",
     "com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx$Snapshot",
     "com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl",
     "com.sun.xml.txw2.NamespaceResolver",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$IDREFS$Pack",
     "com.sun.xml.bind.v2.runtime.Name",
     "com.sun.xml.bind.v2.model.impl.ModelBuilder$1",
     "com.sun.xml.bind.v2.model.annotation.ClassLocatable",
     "com.sun.xml.bind.v2.model.core.package-info",
     "com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx",
     "com.sun.xml.bind.v2.model.impl.ElementPropertyInfoImpl$1",
     "com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader",
     "com.sun.xml.bind.v2.runtime.output.XMLStreamWriterOutput",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_method_Double",
     "com.sun.xml.txw2.Comment",
     "com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$RuntimePropertySeed",
     "com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo",
     "com.sun.xml.bind.v2.runtime.reflect.opt.FieldAccessor_Character",
     "com.sun.xml.bind.v2.runtime.property.ArrayElementProperty",
     "com.sun.xml.txw2.EndDocument",
     "com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef",
     "com.sun.istack.localization.Localizer",
     "com.sun.xml.txw2.annotation.XmlValue",
     "com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl",
     "com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty$ReceiverImpl",
     "com.sun.istack.Interned",
     "com.sun.xml.bind.v2.model.core.Adapter",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerInteger$1",
     "com.sun.xml.bind.v2.schemagen.Tree$Term",
     "com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector$1",
     "com.sun.xml.bind.v2.schemagen.episode.SchemaBindings",
     "com.sun.xml.bind.v2.runtime.RuntimeUtil",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$2",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$1",
     "com.sun.xml.bind.v2.schemagen.Tree$Group",
     "com.sun.xml.bind.v2.runtime.ArrayBeanInfoImpl$ArrayLoader",
     "com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty",
     "com.sun.xml.bind.v2.model.impl.PropertyInfoImpl",
     "com.sun.xml.bind.v2.model.runtime.RuntimeLeafInfo",
     "com.sun.xml.bind.v2.runtime.property.PropertyFactory",
     "com.sun.xml.txw2.DatatypeWriter",
     "com.sun.xml.bind.v2.model.nav.WildcardTypeImpl",
     "com.sun.xml.bind.v2.util.FlattenIterator",
     "com.sun.xml.bind.v2.runtime.LeafBeanInfoImpl",
     "com.sun.istack.Pool$Impl",
     "com.sun.xml.bind.v2.util.ByteArrayOutputStreamEx",
     "com.sun.xml.bind.marshaller.DumbEscapeHandler",
     "com.sun.xml.bind.v2.schemagen.Tree$Optional",
     "com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedAccessorFactory",
     "com.sun.xml.bind.api.ErrorListener",
     "com.sun.istack.Nullable",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerByte$1",
     "com.sun.istack.SAXParseException2",
     "com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection",
     "com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty",
     "com.sun.xml.bind.v2.schemagen.FoolProofResolver",
     "com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector",
     "com.sun.xml.bind.v2.runtime.reflect.AdaptedLister",
     "com.sun.xml.bind.v2.model.impl.ArrayInfoImpl",
     "com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo",
     "com.sun.xml.bind.v2.model.core.ElementInfo",
     "com.sun.xml.bind.v2.schemagen.episode.Bindings",
     "com.sun.xml.bind.v2.model.impl.AttributePropertyInfoImpl$1",
     "com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo",
     "com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$StaticAttribute",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerByte$ByteArrayPack",
     "com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeContextDependentTransducedAccessorImpl",
     "com.sun.xml.txw2.ContainerElement",
     "com.sun.xml.txw2.Document$1",
     "com.sun.xml.bind.v2.schemagen.xmlschema.AttrDecls",
     "com.sun.xml.bind.v2.runtime.property.Messages",
     "com.sun.xml.bind.v2.model.core.NonElement",
     "com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader",
     "com.sun.xml.bind.v2.model.core.RegistryInfo",
     "com.sun.xml.txw2.annotation.XmlElement",
     "com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder",
     "com.sun.xml.bind.InternalAccessorFactory",
     "com.sun.xml.bind.v2.runtime.output.MTOMXmlOutput",
     "com.sun.istack.XMLStreamReaderToContentHandler",
     "com.sun.xml.bind.v2.model.impl.Messages",
     "com.sun.xml.bind.v2.schemagen.xmlschema.NoFixedFacet",
     "com.sun.xml.txw2.output.TXWResult",
     "com.sun.xml.bind.util.Which",
     "com.sun.xml.bind.api.Bridge",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_field_Double",
     "com.sun.xml.bind.v2.runtime.unmarshaller.Scope",
     "com.sun.xml.bind.v2.model.core.AttributePropertyInfo",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_field_Integer",
     "com.sun.xml.bind.v2.model.core.ArrayInfo",
     "com.sun.xml.bind.v2.model.impl.RuntimeAttributePropertyInfoImpl",
     "com.sun.xml.txw2.Text",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerFloat$FloatArrayPack",
     "com.sun.xml.bind.unmarshaller.Patcher",
     "com.sun.xml.bind.v2.model.core.PropertyKind",
     "com.sun.istack.XMLStreamReaderToContentHandler$1",
     "com.sun.xml.bind.v2.model.impl.ClassInfoImpl$1",
     "com.sun.xml.bind.v2.runtime.unmarshaller.LocatorExWrapper",
     "com.sun.xml.bind.v2.model.annotation.Locatable",
     "com.sun.xml.bind.v2.runtime.reflect.opt.Injector",
     "com.sun.xml.txw2.Attribute",
     "com.sun.xml.bind.v2.model.annotation.XmlValueQuick",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$ArrayLister$1",
     "com.sun.xml.bind.v2.schemagen.MultiMap",
     "com.sun.xml.bind.v2.model.core.TypeInfoSet",
     "com.sun.xml.bind.v2.model.annotation.XmlTypeQuick",
     "com.sun.xml.bind.v2.model.impl.ElementInfoImpl",
     "com.sun.xml.bind.util.AttributesImpl",
     "com.sun.xml.bind.v2.model.impl.FieldPropertySeed",
     "com.sun.xml.bind.v2.model.annotation.Messages",
     "com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl",
     "com.sun.xml.bind.v2.model.core.ValuePropertyInfo",
     "com.sun.xml.bind.v2.model.impl.AttributePropertyInfoImpl",
     "com.sun.xml.bind.v2.model.core.MaybeElement",
     "com.sun.xml.txw2.NamespaceSupport$Context",
     "com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput",
     "com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$CollectionLister$1",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_field_Boolean",
     "com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader$1",
     "com.sun.xml.bind.v2.model.impl.PropertyInfoImpl$1",
     "com.sun.xml.bind.v2.model.runtime.package-info",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$IDREFS",
     "com.sun.xml.bind.marshaller.SAX2DOMEx",
     "com.sun.xml.bind.v2.runtime.reflect.opt.FieldAccessor_Byte",
     "com.sun.xml.bind.v2.model.impl.RuntimeMapPropertyInfoImpl",
     "com.sun.xml.bind.v2.model.impl.TypeRefImpl",
     "com.sun.xml.bind.v2.model.impl.RuntimeTypeRefImpl",
     "com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl",
     "com.sun.xml.bind.v2.model.annotation.XmlElementQuick",
     "com.sun.xml.bind.v2.runtime.output.SAXOutput",
     "com.sun.xml.bind.v2.runtime.ContentHandlerAdaptor",
     "com.sun.xml.bind.v2.schemagen.xmlschema.LocalAttribute",
     "com.sun.xml.txw2.IllegalSignatureException",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Element",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$9$1",
     "com.sun.xml.bind.v2.model.impl.ValuePropertyInfoImpl",
     "com.sun.xml.bind.v2.model.annotation.XmlEnumQuick",
     "com.sun.xml.bind.v2.runtime.unmarshaller.DomLoader",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean$1",
     "com.sun.xml.bind.v2.runtime.property.AttributeProperty",
     "com.sun.xml.bind.v2.runtime.reflect.Lister",
     "com.sun.xml.bind.v2.runtime.reflect.opt.Const",
     "com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter",
     "com.sun.xml.bind.v2.schemagen.Tree$Repeated",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Particle",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerFloat$1",
     "com.sun.xml.bind.v2.model.core.ID",
     "com.sun.xml.bind.v2.runtime.output.C14nXmlOutput",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$13",
     "com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertyGroup",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$12",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$15",
     "com.sun.xml.bind.v2.schemagen.xmlschema.TopLevelElement",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$14",
     "com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef",
     "com.sun.xml.txw2.output.DelegatingXMLStreamWriter",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$11",
     "com.sun.xml.bind.v2.runtime.StAXPostInitAction",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$10",
     "com.sun.xml.bind.api.TypeReference",
     "com.sun.xml.txw2.Document",
     "com.sun.xml.bind.v2.model.annotation.FieldLocatable",
     "com.sun.xml.bind.v2.runtime.reflect.opt.FieldAccessor_Short",
     "com.sun.xml.bind.v2.runtime.property.PropertyImpl",
     "com.sun.xml.bind.v2.schemagen.xmlschema.AttributeType",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$3",
     "com.sun.xml.bind.v2.runtime.output.InPlaceDOMOutput",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$4",
     "com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyXsiLoader",
     "com.sun.xml.txw2.StartDocument",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$5",
     "com.sun.xml.bind.marshaller.XMLWriter",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$6",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$7",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$8",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$9",
     "com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl",
     "com.sun.xml.bind.v2.model.impl.AnyTypeImpl",
     "com.sun.xml.bind.v2.runtime.BridgeContextImpl",
     "com.sun.xml.bind.marshaller.NioEscapeHandler",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$17",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$16",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$1",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$19",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$18",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$2",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$24",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$23",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$26",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$25",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$20",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$22",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$21",
     "com.sun.xml.bind.v2.model.runtime.RuntimeAttributePropertyInfo",
     "com.sun.xml.bind.v2.runtime.reflect.DefaultTransducedAccessor",
     "com.sun.xml.bind.v2.schemagen.xmlschema.ComplexContent",
     "com.sun.xml.bind.IDResolver",
     "com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo",
     "com.sun.xml.bind.Util",
     "com.sun.xml.bind.v2.runtime.unmarshaller.DomLoader$State",
     "com.sun.xml.bind.v2.runtime.ValueListBeanInfoImpl$1",
     "com.sun.xml.bind.v2.model.annotation.XmlElementRefsQuick",
     "com.sun.xml.txw2.output.XMLWriter",
     "com.sun.xml.bind.v2.model.annotation.RuntimeInlineAnnotationReader",
     "com.sun.xml.bind.v2.schemagen.xmlschema.SimpleRestrictionModel",
     "com.sun.xml.bind.v2.runtime.InlineBinaryTransducer",
     "com.sun.xml.bind.v2.runtime.reflect.opt.FieldAccessor_Integer",
     "com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector$1",
     "com.sun.xml.bind.v2.runtime.property.TagAndType",
     "com.sun.xml.bind.v2.model.nav.Navigator",
     "com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Boolean",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_field_Float",
     "com.sun.xml.txw2.DatatypeWriter$1$1",
     "com.sun.xml.bind.api.impl.NameUtil",
     "com.sun.xml.bind.v2.runtime.NameBuilder",
     "com.sun.xml.txw2.DatatypeWriter$1$2",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Documentation",
     "com.sun.xml.txw2.DatatypeWriter$1$5",
     "com.sun.xml.bind.v2.model.core.ReferencePropertyInfo",
     "com.sun.xml.txw2.DatatypeWriter$1$3",
     "com.sun.xml.txw2.DatatypeWriter$1$4",
     "com.sun.xml.bind.v2.runtime.SwaRefAdapter",
     "com.sun.xml.bind.v2.schemagen.xmlschema.ExplicitGroup",
     "com.sun.xml.bind.v2.model.impl.RuntimeArrayInfoImpl",
     "com.sun.xml.bind.v2.runtime.NameList",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_method_Boolean",
     "com.sun.xml.bind.v2.schemagen.GroupKind",
     "com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1",
     "com.sun.istack.localization.LocalizableMessageFactory",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$StringImpl",
     "com.sun.xml.bind.v2.runtime.output.XmlOutput",
     "com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$IDREFTransducedAccessorImpl$1",
     "com.sun.xml.bind.v2.schemagen.xmlschema.SchemaTop",
     "com.sun.xml.bind.v2.schemagen.Form",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Any",
     "com.sun.xml.bind.WhiteSpaceProcessor",
     "com.sun.xml.bind.api.Messages",
     "com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyLoader",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$7",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4",
     "com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor$1",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$5",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Import",
     "com.sun.xml.bind.util.ValidationEventLocatorExImpl",
     "com.sun.xml.bind.v2.model.impl.ReferencePropertyInfoImpl",
     "com.sun.xml.txw2.Pcdata",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl",
     "com.sun.xml.bind.v2.runtime.MarshallerImpl$2",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2",
     "com.sun.xml.bind.v2.runtime.Coordinator",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Occurs",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Redefinable",
     "com.sun.xml.bind.v2.runtime.MarshallerImpl$1",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$1",
     "com.sun.xml.txw2.output.Dom2SaxAdapter",
     "com.sun.xml.bind.marshaller.NamespacePrefixMapper",
     "com.sun.xml.bind.v2.runtime.unmarshaller.IntData",
     "com.sun.xml.bind.v2.runtime.reflect.opt.FieldAccessor_Ref",
     "com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$CollectionLister",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Appinfo",
     "com.sun.xml.bind.CycleRecoverable",
     "com.sun.xml.bind.v2.runtime.output.FastInfosetStreamWriterOutput",
     "com.sun.xml.bind.v2.model.impl.ClassInfoImpl$DuplicateException",
     "com.sun.xml.bind.v2.runtime.LifecycleMethods",
     "com.sun.xml.bind.v2.runtime.unmarshaller.MTOMDecorator",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_method_Float",
     "com.sun.xml.bind.v2.runtime.unmarshaller.TagName",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_method_Byte",
     "com.sun.xml.bind.v2.runtime.unmarshaller.Loader",
     "com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Float",
     "com.sun.xml.bind.v2.runtime.SchemaTypeTransducer",
     "com.sun.xml.bind.v2.model.impl.TypeInfoImpl",
     "com.sun.xml.txw2.IllegalAnnotationException",
     "com.sun.xml.bind.v2.model.annotation.LocatableAnnotation",
     "com.sun.xml.bind.v2.model.core.WildcardTypeInfo",
     "com.sun.xml.bind.v2.model.impl.EnumLeafInfoImpl",
     "com.sun.xml.bind.v2.runtime.BinderImpl",
     "com.sun.xml.bind.v2.schemagen.xmlschema.ComplexRestriction",
     "com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty",
     "com.sun.xml.bind.v2.runtime.unmarshaller.Messages",
     "com.sun.istack.SAXException2",
     "com.sun.xml.bind.api.RawAccessor",
     "com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty",
     "com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl",
     "com.sun.xml.bind.v2.runtime.output.Pcdata",
     "com.sun.xml.bind.v2.schemagen.episode.Klass",
     "com.sun.xml.bind.v2.model.impl.ClassInfoImpl",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$Pack",
     "com.sun.xml.bind.v2.runtime.unmarshaller.Receiver",
     "com.sun.xml.bind.v2.runtime.unmarshaller.DefaultIDResolver",
     "com.sun.xml.bind.v2.model.annotation.XmlTransientQuick",
     "com.sun.xml.bind.v2.model.core.PropertyInfo",
     "com.sun.xml.bind.v2.runtime.FilterTransducer",
     "com.sun.xml.bind.api.impl.NameConverter$2",
     "com.sun.xml.bind.v2.model.annotation.AbstractInlineAnnotationReaderImpl",
     "com.sun.xml.bind.v2.model.impl.RuntimeReferencePropertyInfoImpl",
     "com.sun.xml.bind.v2.runtime.XMLSerializer",
     "com.sun.xml.bind.v2.model.impl.SingleTypePropertyInfoImpl",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerFloat",
     "com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory",
     "com.sun.xml.bind.api.impl.NameConverter$1",
     "com.sun.xml.bind.v2.runtime.BridgeImpl",
     "com.sun.xml.bind.v2.schemagen.xmlschema.ComplexTypeModel",
     "com.sun.xml.bind.v2.runtime.DomPostInitAction",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerInteger",
     "com.sun.xml.bind.v2.model.annotation.XmlSchemaQuick",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder",
     "com.sun.xml.bind.marshaller.MinimumEscapeHandler",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$1",
     "com.sun.xml.bind.v2.runtime.output.DOMOutput",
     "com.sun.xml.bind.v2.runtime.property.ArrayERProperty",
     "com.sun.xml.bind.v2.runtime.property.ArrayProperty",
     "com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector",
     "com.sun.xml.bind.v2.runtime.InternalBridge",
     "com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput",
     "com.sun.xml.bind.v2.model.impl.RuntimeElementInfoImpl",
     "com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader",
     "com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Double",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter$CharacterArrayPack",
     "com.sun.xml.bind.v2.util.QNameMap$EntrySet",
     "com.sun.xml.txw2.output.DataWriter",
     "com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext",
     "com.sun.istack.FinalArrayList",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean$BooleanArrayPack",
     "com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$1",
     "com.sun.xml.bind.v2.runtime.reflect.NullSafeAccessor",
     "com.sun.xml.bind.v2.schemagen.xmlschema.SimpleContent",
     "com.sun.xml.bind.v2.util.CollisionCheckStack",
     "com.sun.xml.bind.v2.model.nav.GenericArrayTypeImpl",
     "com.sun.xml.bind.v2.runtime.XMLSerializer$1",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerDouble$1",
     "com.sun.xml.bind.v2.runtime.unmarshaller.TextLoader",
     "com.sun.xml.bind.marshaller.DataWriter",
     "com.sun.xml.bind.v2.schemagen.xmlschema.SimpleRestriction",
     "com.sun.xml.bind.v2.runtime.unmarshaller.AttributesEx",
     "com.sun.xml.bind.v2.WellKnownNamespace",
     "com.sun.xml.bind.v2.runtime.unmarshaller.ValidatingUnmarshaller",
     "com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector$TagNameImpl",
     "com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection",
     "com.sun.xml.bind.v2.model.impl.EnumLeafInfoImpl$1",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl$1",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl$2",
     "com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementDeclaration",
     "com.sun.istack.NotNull",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_method_Integer",
     "com.sun.xml.bind.v2.ContextFactory",
     "com.sun.xml.bind.v2.model.impl.EnumConstantImpl",
     "com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data$1",
     "com.sun.xml.bind.v2.runtime.reflect.Accessor$2",
     "com.sun.xml.bind.v2.schemagen.Util",
     "com.sun.xml.bind.v2.runtime.reflect.Accessor$1",
     "com.sun.xml.bind.v2.model.annotation.XmlElementRefQuick",
     "com.sun.xml.bind.v2.model.core.BuiltinLeafInfo",
     "com.sun.xml.bind.v2.runtime.reflect.opt.FieldAccessor_Float",
     "com.sun.xml.bind.v2.model.impl.RuntimeEnumConstantImpl",
     "com.sun.xml.bind.v2.model.core.WildcardMode",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack",
     "com.sun.xml.bind.v2.schemagen.Tree$1",
     "com.sun.xml.bind.v2.runtime.MimeTypedTransducer",
     "com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Ref",
     "com.sun.xml.bind.api.AccessorException",
     "com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet",
     "com.sun.xml.bind.v2.model.core.ErrorHandler",
     "com.sun.xml.txw2.Content",
     "com.sun.xml.bind.v2.model.impl.BuiltinLeafInfoImpl",
     "com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty",
     "com.sun.xml.bind.v2.model.impl.RuntimeValuePropertyInfoImpl",
     "com.sun.xml.bind.v2.schemagen.xmlschema.List",
     "com.sun.xml.bind.v2.runtime.reflect.opt.Injector$1",
     "com.sun.xml.bind.v2.model.annotation.XmlAttributeQuick",
     "com.sun.xml.bind.marshaller.Messages",
     "com.sun.xml.bind.CycleRecoverable$Context",
     "com.sun.xml.bind.v2.util.QNameMap$Entry",
     "com.sun.xml.bind.unmarshaller.InfosetScanner",
     "com.sun.xml.bind.v2.schemagen.xmlschema.NestedParticle",
     "com.sun.xml.bind.v2.runtime.JaxBeanInfo",
     "com.sun.xml.bind.v2.runtime.NamespaceContext2",
     "com.sun.xml.txw2.Cdata",
     "com.sun.xml.bind.v2.schemagen.xmlschema.SimpleDerivation",
     "com.sun.xml.bind.v2.model.annotation.XmlRootElementQuick",
     "com.sun.xml.bind.v2.model.annotation.MethodLocatable",
     "com.sun.xml.bind.v2.model.impl.RegistryInfoImpl",
     "com.sun.xml.bind.annotation.OverrideAnnotationOf",
     "com.sun.xml.bind.v2.runtime.property.UnmarshallerChain",
     "com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Annotated",
     "com.sun.xml.bind.v2.model.core.Element",
     "com.sun.xml.bind.v2.model.annotation.AnnotationReader",
     "com.sun.xml.bind.v2.runtime.reflect.opt.Ref",
     "com.sun.istack.ByteArrayDataSource",
     "com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$1",
     "com.sun.xml.bind.v2.util.ClassLoaderRetriever",
     "com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl",
     "com.sun.xml.bind.v2.util.DataSourceSource",
     "com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl",
     "com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Byte",
     "com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl$1",
     "com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$IDREFTransducedAccessorImpl",
     "com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector",
     "com.sun.xml.bind.v2.runtime.ValueListBeanInfoImpl",
     "com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty$MixedTextLoader",
     "com.sun.xml.bind.v2.runtime.unmarshaller.IntArrayData",
     "com.sun.xml.txw2.TXW",
     "com.sun.xml.bind.marshaller.CharacterEscapeHandler",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$PcdataImpl",
     "com.sun.xml.bind.v2.runtime.reflect.opt.Bean",
     "com.sun.xml.bind.v2.runtime.reflect.AdaptedLister$ListIteratorImpl",
     "com.sun.xml.bind.v2.schemagen.Form$1",
     "com.sun.xml.bind.v2.model.impl.RuntimeAnyTypeImpl",
     "com.sun.xml.bind.v2.runtime.IllegalAnnotationException",
     "com.sun.xml.bind.v2.schemagen.Form$2",
     "com.sun.xml.bind.v2.model.core.EnumConstant",
     "com.sun.xml.bind.v2.schemagen.Form$3",
     "com.sun.istack.Pool",
     "com.sun.xml.bind.v2.model.annotation.AnnotationSource",
     "com.sun.xml.bind.v2.model.core.ClassInfo",
     "com.sun.xml.bind.v2.runtime.unmarshaller.DefaultIDResolver$1",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl$3",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl$4",
     "com.sun.xml.bind.v2.schemagen.xmlschema.FixedOrDefault",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl$5",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl$6",
     "com.sun.xml.bind.v2.model.annotation.XmlSchemaTypeQuick",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl$7",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl$8",
     "com.sun.xml.bind.v2.model.impl.LeafInfoImpl",
     "com.sun.xml.bind.v2.runtime.reflect.opt.FieldAccessor_Double",
     "com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$DefaultRootLoader",
     "com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter",
     "com.sun.xml.txw2.output.XmlSerializer",
     "com.sun.xml.bind.v2.model.core.TypeRef",
     "com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo",
     "com.sun.xml.bind.v2.model.impl.DummyPropertyInfo",
     "com.sun.xml.bind.v2.model.nav.ReflectionNavigator",
     "com.sun.xml.bind.v2.runtime.IllegalAnnotationsException",
     "com.sun.xml.bind.api.impl.NameConverter",
     "com.sun.xml.bind.v2.util.EditDistance",
     "com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Array",
     "com.sun.xml.bind.v2.model.core.Ref",
     "com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State",
     "com.sun.istack.logging.Logger",
     "com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter$1",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong",
     "com.sun.xml.txw2.output.ResultFactory",
     "com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector$1",
     "com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl",
     "com.sun.xml.bind.v2.runtime.reflect.Accessor",
     "com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg",
     "com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl",
     "com.sun.istack.localization.LocalizableMessage",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$IDREFSIterator",
     "com.sun.xml.bind.v2.schemagen.Tree",
     "com.sun.xml.bind.v2.schemagen.xmlschema.TopLevelAttribute",
     "com.sun.xml.bind.v2.runtime.Coordinator$1",
     "com.sun.xml.bind.v2.runtime.property.PropertyFactory$1",
     "com.sun.xml.bind.v2.Messages",
     "com.sun.xml.bind.v2.model.core.MapPropertyInfo",
     "com.sun.xml.bind.v2.model.nav.TypeVisitor",
     "com.sun.xml.txw2.output.SaxSerializer",
     "com.sun.xml.bind.v2.model.runtime.RuntimeValuePropertyInfo",
     "com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl",
     "com.sun.xml.bind.v2.TODO",
     "com.sun.xml.bind.v2.runtime.reflect.ListIterator",
     "com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator",
     "com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterOnlyReflection",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter",
     "com.sun.xml.bind.v2.model.impl.ERPropertyInfoImpl",
     "com.sun.xml.bind.v2.runtime.reflect.opt.FieldAccessor_Boolean",
     "com.sun.xml.bind.XmlAccessorFactory",
     "com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor$AttributesImpl",
     "com.sun.xml.bind.api.JAXBRIContext",
     "com.sun.xml.bind.v2.ClassFactory",
     "com.sun.xml.bind.v2.runtime.unmarshaller.FastInfosetConnector",
     "com.sun.xml.bind.v2.model.impl.RuntimeElementPropertyInfoImpl",
     "com.sun.xml.bind.AccessorFactoryImpl",
     "com.sun.xml.bind.v2.model.nav.ParameterizedTypeImpl",
     "com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Wildcard",
     "com.sun.xml.bind.v2.runtime.unmarshaller.XsiTypeLoader",
     "com.sun.xml.bind.v2.model.impl.ElementPropertyInfoImpl",
     "com.sun.xml.txw2.output.StreamSerializer",
     "com.sun.xml.bind.v2.schemagen.episode.package-info",
     "com.sun.xml.txw2.StartTag",
     "com.sun.xml.bind.v2.runtime.property.ArrayERProperty$ItemsLoader",
     "com.sun.xml.bind.annotation.XmlLocation",
     "com.sun.xml.bind.v2.model.runtime.RuntimeNonElement",
     "com.sun.xml.bind.v2.model.core.LeafInfo",
     "com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor",
     "com.sun.xml.bind.v2.runtime.Transducer",
     "com.sun.xml.bind.v2.runtime.output.C14nXmlOutput$DynamicAttribute",
     "com.sun.xml.bind.v2.runtime.reflect.Lister$ArrayLister",
     "com.sun.xml.bind.v2.model.impl.Util",
     "com.sun.xml.bind.AccessorFactory",
     "com.sun.xml.bind.v2.runtime.reflect.opt.AccessorInjector",
     "com.sun.xml.txw2.TypedXmlWriter",
     "com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector",
     "com.sun.xml.bind.v2.util.QNameMap$1",
     "com.sun.xml.bind.v2.schemagen.xmlschema.SimpleTypeHost",
     "com.sun.istack.XMLStreamException2",
     "com.sun.xml.bind.v2.runtime.unmarshaller.Patcher",
     "com.sun.xml.bind.v2.runtime.BridgeAdapter",
     "com.sun.xml.txw2.NamespaceSupport",
     "com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor",
     "com.sun.xml.bind.v2.ClassFactory$1",
     "com.sun.xml.bind.v2.schemagen.Messages",
     "com.sun.xml.txw2.output.StreamSerializer$1",
     "com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Short",
     "com.sun.xml.txw2.ContentVisitor",
     "com.sun.xml.bind.v2.runtime.Messages",
     "com.sun.xml.bind.v2.util.QNameMap$EntryIterator",
     "com.sun.xml.txw2.annotation.XmlNamespace",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_method_Short",
     "com.sun.xml.bind.v2.schemagen.xmlschema.ExtensionType",
     "com.sun.xml.bind.v2.model.impl.ModelBuilder",
     "com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader",
     "com.sun.xml.bind.annotation.XmlIsSet",
     "com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection",
     "com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor",
     "com.sun.xml.txw2.TxwException",
     "com.sun.xml.bind.v2.model.annotation.Init",
     "com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$ExpectedTypeRootLoader",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerByte",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Union",
     "com.sun.xml.txw2.annotation.XmlCDATA",
     "com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer",
     "com.sun.xml.bind.AnyTypeAdapter",
     "com.sun.xml.txw2.NamespaceDecl",
     "com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerDouble$DoubleArrayPack",
     "com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor",
     "com.sun.xml.txw2.output.StaxSerializer",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_method_Long",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator",
     "com.sun.xml.bind.v2.runtime.unmarshaller.FastInfosetConnector$CharSequenceImpl",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_field_Short",
     "com.sun.xml.bind.v2.runtime.AnyTypeBeanInfo",
     "com.sun.xml.bind.v2.util.StackRecorder",
     "com.sun.xml.txw2.output.TXWSerializer",
     "com.sun.xml.bind.v2.runtime.reflect.opt.FieldAccessor_Long",
     "com.sun.xml.bind.v2.schemagen.xmlschema.TypeDefParticle",
     "com.sun.xml.bind.Locatable",
     "com.sun.xml.bind.unmarshaller.Messages",
     "com.sun.xml.bind.v2.runtime.reflect.Messages",
     "com.sun.xml.bind.v2.runtime.property.Property",
     "com.sun.xml.bind.v2.runtime.output.StAXExStreamWriterOutput",
     "com.sun.xml.bind.DatatypeConverterImpl",
     "com.sun.xml.bind.v2.schemagen.xmlschema.ComplexExtension",
     "com.sun.xml.bind.v2.model.core.TypeInfo",
     "com.sun.xml.bind.api.CompositeStructure",
     "com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl",
     "com.sun.xml.bind.v2.model.impl.GetterSetterPropertySeed",
     "com.sun.xml.bind.v2.runtime.unmarshaller.WildcardLoader",
     "com.sun.xml.bind.v2.model.core.NonElementRef",
     "com.sun.xml.bind.v2.model.runtime.RuntimeBuiltinLeafInfo",
     "com.sun.istack.localization.Localizable",
     "com.sun.xml.bind.v2.runtime.AssociationMap",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter$1",
     "com.sun.xml.bind.v2.runtime.unmarshaller.AttributesExImpl",
     "com.sun.xml.bind.v2.runtime.reflect.opt.TransducedAccessor_field_Byte",
     "com.sun.xml.bind.v2.schemagen.xmlschema.SimpleType",
     "com.sun.xml.txw2.output.IndentingXMLStreamWriter",
     "com.sun.xml.bind.v2.runtime.unmarshaller.Discarder",
     "com.sun.xml.bind.unmarshaller.DOMScanner",
     "com.sun.xml.bind.api.BridgeContext",
     "com.sun.xml.bind.v2.runtime.property.ListElementProperty",
     "com.sun.xml.bind.v2.model.annotation.Quick",
     "com.sun.xml.txw2.annotation.XmlAttribute",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType",
     "com.sun.xml.bind.v2.util.FatalAdapter",
     "com.sun.xml.bind.v2.util.TypeCast",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerShort$ShortArrayPack",
     "com.sun.xml.txw2.output.DumbEscapeHandler",
     "com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader",
     "com.sun.xml.txw2.output.CharacterEscapeHandler",
     "com.sun.xml.bind.v2.runtime.reflect.opt.MethodAccessor_Integer",
     "com.sun.xml.bind.v2.runtime.property.StructureLoaderBuilder",
     "com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty",
     "com.sun.xml.bind.v2.runtime.output.FastInfosetStreamWriterOutput$AppData",
     "com.sun.xml.bind.api.ClassResolver",
     "com.sun.xml.bind.v2.runtime.ArrayBeanInfoImpl",
     "com.sun.xml.bind.v2.util.QNameMap$HashIterator",
     "com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$StringImplImpl",
     "com.sun.xml.bind.v2.util.QNameMap",
     "com.sun.xml.bind.v2.runtime.AttributeAccessor",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$2",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$1",
     "com.sun.xml.bind.v2.runtime.property.ArrayERProperty$ReceiverImpl",
     "com.sun.xml.bind.v2.model.impl.ClassInfoImpl$SecondaryAnnotation",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerDouble",
     "com.sun.xml.bind.v2.bytecode.ClassTailor",
     "com.sun.xml.bind.v2.runtime.Location",
     "com.sun.xml.txw2.EndTag",
     "com.sun.xml.bind.v2.runtime.JAXBContextImpl",
     "com.sun.xml.bind.v2.schemagen.xmlschema.package-info",
     "com.sun.xml.bind.v2.model.nav.ReflectionNavigator$2",
     "com.sun.xml.bind.v2.model.impl.RuntimeElementInfoImpl$RuntimePropertyImpl",
     "com.sun.xml.bind.v2.model.nav.ReflectionNavigator$1",
     "com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo",
     "com.sun.xml.bind.v2.model.nav.ReflectionNavigator$4",
     "com.sun.xml.bind.v2.model.nav.ReflectionNavigator$3",
     "com.sun.xml.bind.v2.model.nav.ReflectionNavigator$6",
     "com.sun.xml.bind.v2.model.nav.ReflectionNavigator$5",
     "com.sun.xml.bind.v2.model.impl.ClassInfoImpl$ConflictException",
     "com.sun.xml.bind.v2.runtime.output.FastInfosetStreamWriterOutput$TablesPerJAXBContext",
     "com.sun.xml.bind.v2.model.annotation.XmlElementDeclQuick",
     "com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType",
     "com.sun.xml.bind.ValidationEventLocatorEx",
     "com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean",
     "com.sun.xml.bind.v2.schemagen.xmlschema.Annotation",
     "com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector$TagNameImpl",
     "com.sun.xml.bind.v2.schemagen.xmlschema.TypeHost",
     "com.sun.istack.Builder",
     "com.sun.xml.bind.v2.model.impl.RuntimeTypeInfoSetImpl",
     "com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo",
     "com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput",
     "com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "javax.xml.bind:jaxb-api:jar:2.2.2:test",
      "coordinates": "javax.xml.bind:jaxb-api:2.2.2",
      "groupId": "javax.xml.bind",
      "artifactId": "jaxb-api",
      "version": "2.2.2",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 105134,
      "type": "transitive",
      "status": "used",
      "parent": "com.sun.xml.bind:jaxb-impl:jar:2.2.3U1:test",
      "allTypes": [
       "javax.xml.bind.Element",
       "javax.xml.bind.annotation.XmlAccessOrder",
       "javax.xml.bind.MarshalException",
       "javax.xml.bind.annotation.XmlElement$DEFAULT",
       "javax.xml.bind.annotation.XmlIDREF",
       "javax.xml.bind.ValidationEventHandler",
       "javax.xml.bind.annotation.XmlSchemaType",
       "javax.xml.bind.annotation.XmlElementDecl",
       "javax.xml.bind.helpers.NotIdentifiableEventImpl",
       "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter$DEFAULT",
       "javax.xml.bind.UnmarshallerHandler",
       "javax.xml.bind.helpers.ParseConversionEventImpl",
       "javax.xml.bind.Binder",
       "javax.xml.bind.Validator",
       "javax.xml.bind.ContextFinder",
       "javax.xml.bind.annotation.XmlNs",
       "javax.xml.bind.annotation.adapters.HexBinaryAdapter",
       "javax.xml.bind.annotation.W3CDomHandler",
       "javax.xml.bind.helpers.PrintConversionEventImpl",
       "javax.xml.bind.JAXBIntrospector",
       "javax.xml.bind.annotation.XmlElementDecl$GLOBAL",
       "javax.xml.bind.annotation.XmlValue",
       "javax.xml.bind.NotIdentifiableEvent",
       "javax.xml.bind.DatatypeConverter",
       "javax.xml.bind.annotation.XmlSchema",
       "javax.xml.bind.DatatypeConverterInterface",
       "javax.xml.bind.helpers.ValidationEventImpl",
       "javax.xml.bind.PrintConversionEvent",
       "javax.xml.bind.TypeConstraintException",
       "javax.xml.bind.annotation.XmlSeeAlso",
       "javax.xml.bind.annotation.XmlMixed",
       "javax.xml.bind.annotation.XmlType",
       "javax.xml.bind.util.ValidationEventCollector",
       "javax.xml.bind.helpers.DefaultValidationEventHandler",
       "javax.xml.bind.DatatypeConverterImpl",
       "javax.xml.bind.GetPropertyAction",
       "javax.xml.bind.annotation.XmlSchemaType$DEFAULT",
       "javax.xml.bind.helpers.Messages",
       "javax.xml.bind.annotation.XmlAttribute",
       "javax.xml.bind.ParseConversionEvent",
       "javax.xml.bind.annotation.XmlMimeType",
       "javax.xml.bind.ValidationEventLocator",
       "javax.xml.bind.JAXBElement",
       "javax.xml.bind.annotation.XmlRootElement",
       "javax.xml.bind.annotation.XmlElementRef$DEFAULT",
       "javax.xml.bind.helpers.ValidationEventLocatorImpl",
       "javax.xml.bind.annotation.XmlID",
       "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters",
       "javax.xml.bind.util.JAXBSource",
       "javax.xml.bind.attachment.AttachmentUnmarshaller",
       "javax.xml.bind.annotation.XmlAnyElement",
       "javax.xml.bind.annotation.XmlElementWrapper",
       "javax.xml.bind.helpers.AbstractUnmarshallerImpl",
       "javax.xml.bind.DatatypeConverterImpl$CalendarFormatter",
       "javax.xml.bind.annotation.XmlSchemaTypes",
       "javax.xml.bind.PropertyException",
       "javax.xml.bind.annotation.XmlElementRef",
       "javax.xml.bind.annotation.XmlElements",
       "javax.xml.bind.annotation.adapters.CollapsedStringAdapter",
       "javax.xml.bind.util.JAXBSource$1",
       "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
       "javax.xml.bind.annotation.XmlEnum",
       "javax.xml.bind.JAXB",
       "javax.xml.bind.annotation.XmlAccessorType",
       "javax.xml.bind.Unmarshaller$Listener",
       "javax.xml.bind.annotation.XmlAnyAttribute",
       "javax.xml.bind.annotation.XmlEnumValue",
       "javax.xml.bind.JAXB$Cache",
       "javax.xml.bind.annotation.XmlTransient",
       "javax.xml.bind.ContextFinder$1",
       "javax.xml.bind.JAXBException",
       "javax.xml.bind.annotation.XmlAccessType",
       "javax.xml.bind.ValidationEvent",
       "javax.xml.bind.annotation.XmlAttachmentRef",
       "javax.xml.bind.annotation.XmlElementRefs",
       "javax.xml.bind.SchemaOutputResolver",
       "javax.xml.bind.JAXBPermission",
       "javax.xml.bind.annotation.adapters.NormalizedStringAdapter",
       "javax.xml.bind.annotation.XmlInlineBinaryData",
       "javax.xml.bind.util.JAXBResult",
       "javax.xml.bind.Marshaller",
       "javax.xml.bind.JAXBElement$GlobalScope",
       "javax.xml.bind.WhiteSpaceProcessor",
       "javax.xml.bind.annotation.XmlNsForm",
       "javax.xml.bind.Messages",
       "javax.xml.bind.annotation.DomHandler",
       "javax.xml.bind.DataBindingException",
       "javax.xml.bind.annotation.XmlType$DEFAULT",
       "javax.xml.bind.attachment.AttachmentMarshaller",
       "javax.xml.bind.JAXBContext",
       "javax.xml.bind.Unmarshaller",
       "javax.xml.bind.annotation.adapters.XmlAdapter",
       "javax.xml.bind.annotation.XmlAccessorOrder",
       "javax.xml.bind.UnmarshalException",
       "javax.xml.bind.helpers.AbstractMarshallerImpl",
       "javax.xml.bind.util.Messages",
       "javax.xml.bind.Marshaller$Listener",
       "javax.xml.bind.annotation.XmlRegistry",
       "javax.xml.bind.ValidationException",
       "javax.xml.bind.annotation.XmlList",
       "javax.xml.bind.annotation.XmlElement"
      ],
      "usedTypes": [
       "javax.xml.bind.annotation.XmlAccessorType",
       "javax.xml.bind.annotation.XmlAttribute",
       "javax.xml.bind.Unmarshaller",
       "javax.xml.bind.annotation.adapters.XmlAdapter",
       "javax.xml.bind.annotation.XmlAnyElement",
       "javax.xml.bind.annotation.XmlElementWrapper",
       "javax.xml.bind.Marshaller",
       "javax.xml.bind.annotation.XmlRootElement",
       "javax.xml.bind.annotation.XmlAccessType",
       "javax.xml.bind.annotation.XmlNs",
       "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
       "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters",
       "javax.xml.bind.annotation.XmlSchema",
       "javax.xml.bind.JAXBContext",
       "javax.xml.bind.annotation.XmlElement"
      ],
      "usageRatio": 0.1485148514851485,
      "children": [
       {
        "id": "javax.xml.stream:stax-api:jar:1.0-2:test",
        "coordinates": "javax.xml.stream:stax-api:1.0-2",
        "groupId": "javax.xml.stream",
        "artifactId": "stax-api",
        "version": "1.0-2",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 23346,
        "type": "transitive",
        "status": "bloated",
        "parent": "javax.xml.bind:jaxb-api:jar:2.2.2:test",
        "allTypes": [
         "javax.xml.stream.util.StreamReaderDelegate",
         "javax.xml.stream.XMLInputFactory",
         "javax.xml.stream.util.XMLEventAllocator",
         "javax.xml.stream.FactoryFinder",
         "javax.xml.stream.util.XMLEventConsumer",
         "javax.xml.stream.events.EndDocument",
         "javax.xml.stream.XMLEventWriter",
         "javax.xml.stream.XMLStreamConstants",
         "javax.xml.stream.events.Attribute",
         "javax.xml.stream.events.ProcessingInstruction",
         "javax.xml.stream.events.XMLEvent",
         "javax.xml.stream.XMLStreamReader",
         "javax.xml.stream.XMLStreamException",
         "javax.xml.stream.FactoryFinder$ClassLoaderFinder",
         "javax.xml.stream.FactoryFinder$ClassLoaderFinderConcrete",
         "javax.xml.stream.XMLStreamWriter",
         "javax.xml.stream.events.EndElement",
         "javax.xml.stream.events.StartElement",
         "javax.xml.stream.XMLResolver",
         "javax.xml.stream.XMLReporter",
         "javax.xml.stream.XMLEventReader",
         "javax.xml.stream.events.EntityDeclaration",
         "javax.xml.stream.StreamFilter",
         "javax.xml.stream.events.NotationDeclaration",
         "javax.xml.stream.util.EventReaderDelegate",
         "javax.xml.stream.EventFilter",
         "javax.xml.stream.FactoryConfigurationError",
         "javax.xml.stream.XMLOutputFactory",
         "javax.xml.stream.events.Namespace",
         "javax.xml.stream.events.StartDocument",
         "javax.xml.stream.events.Characters",
         "javax.xml.stream.events.Comment",
         "javax.xml.stream.Location",
         "javax.xml.stream.FactoryFinder$1",
         "javax.xml.stream.events.DTD",
         "javax.xml.stream.events.EntityReference",
         "javax.xml.stream.XMLEventFactory"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "javax.activation:activation:jar:1.1:test",
        "coordinates": "javax.activation:activation:1.1",
        "groupId": "javax.activation",
        "artifactId": "activation",
        "version": "1.1",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 62983,
        "type": "transitive",
        "status": "bloated",
        "parent": "javax.xml.bind:jaxb-api:jar:2.2.2:test",
        "allTypes": [
         "com.sun.activation.viewers.TextEditor",
         "javax.activation.DataContentHandlerFactory",
         "com.sun.activation.registries.MailcapParseException",
         "com.sun.activation.registries.MailcapTokenizer",
         "javax.activation.ActivationDataFlavor",
         "javax.activation.DataSourceDataContentHandler",
         "javax.activation.DataHandlerDataSource",
         "javax.activation.ObjectDataContentHandler",
         "javax.activation.SecuritySupport$2",
         "com.sun.activation.viewers.ImageViewer",
         "javax.activation.CommandObject",
         "javax.activation.DataHandler",
         "javax.activation.MimetypesFileTypeMap",
         "javax.activation.SecuritySupport$1",
         "javax.activation.DataHandler$1",
         "javax.activation.SecuritySupport$4",
         "javax.activation.SecuritySupport",
         "javax.activation.SecuritySupport$3",
         "javax.activation.CommandMap",
         "javax.activation.MimeTypeParameterList",
         "javax.activation.FileDataSource",
         "javax.activation.MimeType",
         "javax.activation.URLDataSource",
         "javax.activation.DataContentHandler",
         "javax.activation.MailcapCommandMap",
         "com.sun.activation.registries.LineTokenizer",
         "com.sun.activation.viewers.TextViewer",
         "com.sun.activation.registries.MimeTypeFile",
         "com.sun.activation.viewers.ImageViewerCanvas",
         "com.sun.activation.registries.LogSupport",
         "javax.activation.MimeTypeParseException",
         "javax.activation.SecuritySupport$5",
         "javax.activation.CommandInfo",
         "com.sun.activation.registries.MailcapFile",
         "javax.activation.FileTypeMap",
         "javax.activation.DataSource",
         "javax.activation.UnsupportedDataTypeException",
         "com.sun.activation.registries.MimeTypeEntry"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     }
    ]
   },
   {
    "id": "xmlunit:xmlunit:jar:1.6:test",
    "coordinates": "xmlunit:xmlunit:1.6",
    "groupId": "xmlunit",
    "artifactId": "xmlunit",
    "version": "1.6",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 101231,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.custommonkey.xmlunit.NodeInputStream",
     "org.custommonkey.xmlunit.DoctypeSupport$Readable",
     "org.custommonkey.xmlunit.NodeTester",
     "org.custommonkey.xmlunit.XMLUnit",
     "org.custommonkey.xmlunit.MatchTracker",
     "org.custommonkey.xmlunit.SimpleXpathEngine$1",
     "org.custommonkey.xmlunit.Difference",
     "org.custommonkey.xmlunit.XpathNodeTracker$1",
     "org.custommonkey.xmlunit.DifferenceEngine$DifferenceFoundException",
     "org.custommonkey.xmlunit.XMLAssert$NodeBasedNamespaceContext",
     "org.custommonkey.xmlunit.DoctypeReader$1",
     "org.custommonkey.xmlunit.ElementQualifier",
     "org.custommonkey.xmlunit.NodeTestException",
     "org.custommonkey.xmlunit.NamespaceContext",
     "org.custommonkey.xmlunit.Validator",
     "org.custommonkey.xmlunit.examples.FloatingPointTolerantDifferenceListener",
     "org.custommonkey.xmlunit.jaxp13.Validator$CollectingErrorHandler",
     "org.custommonkey.xmlunit.DetailedDiff",
     "org.custommonkey.xmlunit.ElementNameAndTextQualifier",
     "org.custommonkey.xmlunit.QualifiedName",
     "org.custommonkey.xmlunit.CountingNodeTester",
     "org.custommonkey.xmlunit.XpathEngine",
     "org.custommonkey.xmlunit.examples.MultiLevelElementNameAndTextQualifier",
     "org.custommonkey.xmlunit.IgnoreTextAndAttributeValuesDifferenceListener",
     "org.custommonkey.xmlunit.XpathNodeTracker$Int",
     "org.custommonkey.xmlunit.exceptions.XMLUnitException",
     "org.custommonkey.xmlunit.DoctypeInputStream$1",
     "org.custommonkey.xmlunit.NodeDescriptor",
     "org.custommonkey.xmlunit.examples.RecursiveElementNameAndTextQualifier",
     "org.custommonkey.xmlunit.jaxp13.Validator",
     "org.custommonkey.xmlunit.XpathNodeTracker$TrackingEntry",
     "org.custommonkey.xmlunit.examples.TextDifferenceListenerBase",
     "org.custommonkey.xmlunit.DifferenceEngine$1",
     "org.custommonkey.xmlunit.XMLAssert",
     "org.custommonkey.xmlunit.XMLConstants",
     "org.custommonkey.xmlunit.jaxp13.XMLUnitNamespaceContext2Jaxp13",
     "org.custommonkey.xmlunit.DoctypeSupport",
     "org.custommonkey.xmlunit.XSLTConstants",
     "org.custommonkey.xmlunit.XMLTestCase",
     "org.custommonkey.xmlunit.NodeTest$NodeTypeNodeFilter",
     "org.custommonkey.xmlunit.JAXPConstants",
     "org.custommonkey.xmlunit.DifferenceConstants",
     "org.custommonkey.xmlunit.DoctypeInputStream",
     "org.custommonkey.xmlunit.exceptions.ConfigurationException",
     "org.custommonkey.xmlunit.exceptions.XMLUnitRuntimeException",
     "org.custommonkey.xmlunit.SimpleXpathEngine",
     "org.custommonkey.xmlunit.SimpleNamespaceContext",
     "org.custommonkey.xmlunit.Transform",
     "org.custommonkey.xmlunit.DoctypeReader",
     "org.custommonkey.xmlunit.DifferenceListener",
     "org.custommonkey.xmlunit.examples.XPathRegexAssert",
     "org.custommonkey.xmlunit.ElementNameAndAttributeQualifier",
     "org.custommonkey.xmlunit.HTMLDocumentBuilder",
     "org.custommonkey.xmlunit.TolerantSaxDocumentBuilder",
     "org.custommonkey.xmlunit.examples.CaseInsensitiveDifferenceListener",
     "org.custommonkey.xmlunit.DifferenceEngine",
     "org.custommonkey.xmlunit.DoctypeSupport$IntBufferReadable",
     "org.custommonkey.xmlunit.examples.CountingNodeTester",
     "org.custommonkey.xmlunit.ElementNameQualifier",
     "org.custommonkey.xmlunit.NodeTest",
     "org.custommonkey.xmlunit.exceptions.XpathException",
     "org.custommonkey.xmlunit.ComparisonController",
     "org.custommonkey.xmlunit.NodeDetail",
     "org.custommonkey.xmlunit.util.IntegerBuffer",
     "org.custommonkey.xmlunit.XMLAssert$NodeBasedNamespaceContext$1",
     "org.custommonkey.xmlunit.XpathNodeTracker",
     "org.custommonkey.xmlunit.jaxp13.Jaxp13XpathEngine",
     "org.custommonkey.xmlunit.JAXPConstants$Properties",
     "org.custommonkey.xmlunit.AbstractNodeTester",
     "org.custommonkey.xmlunit.Diff",
     "org.custommonkey.xmlunit.HTMLDocumentBuilder$SwingEvent2SaxAdapter"
    ],
    "usedTypes": [
     "org.custommonkey.xmlunit.Diff"
    ],
    "usageRatio": 0.014084507042253521,
    "children": []
   },
   {
    "id": "org.codehaus.groovy:groovy-all:jar:2.4.4:test",
    "coordinates": "org.codehaus.groovy:groovy-all:2.4.4",
    "groupId": "org.codehaus.groovy",
    "artifactId": "groovy-all",
    "version": "2.4.4",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 6998724,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.codehaus.groovy.binding.BindingProxy$ModelBindingPropertyBinding",
     "org.codehaus.groovy.runtime.dgm$220",
     "org.codehaus.groovy.tools.shell.commands.HelpCommand",
     "org.codehaus.groovy.runtime.dgm$221",
     "org.codehaus.groovy.runtime.dgm$222",
     "org.codehaus.groovy.runtime.dgm$223",
     "org.codehaus.groovy.runtime.dgm$224",
     "org.codehaus.groovy.runtime.dgm$225",
     "org.codehaus.groovy.runtime.dgm$226",
     "org.codehaus.groovy.classgen.asm.WriterController",
     "org.codehaus.groovy.runtime.dgm$227",
     "org.codehaus.groovy.runtime.dgm$228",
     "org.codehaus.groovy.runtime.dgm$229",
     "groovyjarjarantlr.ANTLRParser",
     "groovy.text.markup.IncludeType",
     "org.codehaus.groovy.classgen.asm.OptimizingStatementWriter",
     "org.codehaus.groovy.classgen.asm.BinaryExpressionMultiTypeDispatcher$BinaryShortExpressionHelper",
     "groovy.transform.ToString",
     "groovy.json.internal.FastStringUtils$1",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesStatementWriter",
     "org.codehaus.groovy.classgen.asm.StatementWriter$1",
     "org.codehaus.groovy.classgen.asm.StatementWriter$2",
     "groovyjarjarasm.asm.signature.SignatureVisitor",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer",
     "org.codehaus.groovy.binding.DeadEndObject",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure10$_closure26",
     "org.codehaus.groovy.tools.shell.util.CommandArgumentParser",
     "groovy.text.XmlTemplateEngine$GspPrinter",
     "org.codehaus.groovy.runtime.dgm$230",
     "groovy.ui.Console$_notifySystemErr_closure15$_closure32",
     "org.codehaus.groovy.runtime.dgm$231",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure8$_closure12$_closure14",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitParameter_closure28",
     "org.codehaus.groovy.antlr.GroovySourceAST",
     "org.codehaus.groovy.runtime.dgm$232",
     "org.codehaus.groovy.runtime.dgm$233",
     "groovy.swing.factory.HStrutFactory",
     "org.codehaus.groovy.runtime.dgm$234",
     "org.codehaus.groovy.runtime.dgm$235",
     "org.codehaus.groovy.runtime.dgm$236",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure8$_closure12$_closure13",
     "org.codehaus.groovy.runtime.dgm$237",
     "org.codehaus.groovy.runtime.dgm$238",
     "groovy.ui.GroovyMain$1DoSetContext",
     "org.codehaus.groovy.ast.builder.AstBuilder",
     "org.codehaus.groovy.runtime.dgm$239",
     "groovy.json.internal.Dates",
     "org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry",
     "groovy.inspect.swingui.TableMap",
     "groovy.lang.MetaClassRegistry",
     "groovy.model.DefaultTableModel",
     "org.codehaus.groovy.ast.stmt.AssertStatement",
     "org.codehaus.groovy.util.ManagedLinkedList$Iter",
     "groovy.xml.streamingmarkupsupport.Builder$Built",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_completeInstanceMembers_closure3",
     "org.codehaus.groovy.vmplugin.v6.Java6",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_completeInstanceMembers_closure2",
     "groovy.util.ObservableList",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_completeInstanceMembers_closure1",
     "groovy.transform.stc.FirstParam",
     "org.codehaus.groovy.runtime.dgm$240",
     "org.codehaus.groovy.runtime.dgm$241",
     "groovy.xml.dom.DOMCategory$NodeListsHolder",
     "org.codehaus.groovy.runtime.dgm$242",
     "org.codehaus.groovy.runtime.dgm$243",
     "org.codehaus.groovy.runtime.dgm$244",
     "org.codehaus.groovy.runtime.dgm$245",
     "org.codehaus.groovy.runtime.dgm$246",
     "org.codehaus.groovy.runtime.dgm$247",
     "org.codehaus.groovy.runtime.dgm$248",
     "org.codehaus.groovy.runtime.dgm$249",
     "org.codehaus.groovy.tools.shell.Groovysh$_getImportStatements_closure7",
     "groovy.json.internal.ValueMap",
     "org.codehaus.groovy.runtime.XmlGroovyMethods$1",
     "groovy.jmx.builder.JmxOperationInfoManager",
     "org.codehaus.groovy.runtime.metaclass.MissingMethodExecutionFailed",
     "org.codehaus.groovy.ast.expr.Expression",
     "org.codehaus.groovy.runtime.dgm$250",
     "org.codehaus.groovy.runtime.dgm$251",
     "org.codehaus.groovy.runtime.dgm$252",
     "org.codehaus.groovy.runtime.dgm$253",
     "org.codehaus.groovy.runtime.dgm$254",
     "org.codehaus.groovy.runtime.dgm$255",
     "org.codehaus.groovy.runtime.dgm$256",
     "org.codehaus.groovy.tools.shell.commands.ShadowCommand$_closure1",
     "org.codehaus.groovy.runtime.dgm$257",
     "org.codehaus.groovy.runtime.dgm$258",
     "org.codehaus.groovy.runtime.dgm$259",
     "org.codehaus.groovy.tools.shell.commands.ShadowCommand$_closure2",
     "org.codehaus.groovy.tools.shell.commands.ShadowCommand$_closure3",
     "org.codehaus.groovy.tools.shell.commands.ShadowCommand$_closure4",
     "groovy.ui.Console$_inspectAst_closure11",
     "groovyjarjarantlr.GrammarAtom",
     "org.codehaus.groovy.ast.expr.BitwiseNegationExpression",
     "org.codehaus.groovy.classgen.BytecodeSequence",
     "org.codehaus.groovy.runtime.dgm$260",
     "org.codehaus.groovy.runtime.dgm$261",
     "org.codehaus.groovy.runtime.dgm$262",
     "org.codehaus.groovy.runtime.dgm$263",
     "org.codehaus.groovy.runtime.dgm$264",
     "groovy.json.internal.FastStringUtils$StringImplementation$1",
     "org.codehaus.groovy.runtime.dgm$265",
     "org.codehaus.groovy.runtime.dgm$266",
     "org.codehaus.groovy.runtime.dgm$267",
     "org.codehaus.groovy.runtime.dgm$268",
     "org.codehaus.groovy.runtime.dgm$269",
     "groovy.json.internal.FastStringUtils$StringImplementation$2",
     "groovy.json.internal.FastStringUtils$StringImplementation$3",
     "org.codehaus.groovy.ast.expr.ConstantExpression",
     "org.codehaus.groovy.ast.ModuleNode",
     "org.codehaus.groovy.runtime.dgm$4",
     "org.codehaus.groovy.util.ReferenceType",
     "org.codehaus.groovy.runtime.dgm$5",
     "org.codehaus.groovy.runtime.dgm$6",
     "org.codehaus.groovy.runtime.dgm$7",
     "org.codehaus.groovy.tools.Compiler",
     "org.codehaus.groovy.runtime.dgm$0",
     "org.codehaus.groovy.runtime.dgm$1",
     "org.codehaus.groovy.runtime.dgm$2",
     "org.codehaus.groovy.runtime.dgm$3",
     "groovy.json.JsonParserType",
     "groovy.ui.Console$_runScriptImpl_closure17",
     "org.codehaus.groovy.runtime.dgm$270",
     "groovy.lang.Binding",
     "org.codehaus.groovy.runtime.dgm$271",
     "org.codehaus.groovy.runtime.dgm$8",
     "org.codehaus.groovy.runtime.dgm$272",
     "org.codehaus.groovy.runtime.dgm$9",
     "org.codehaus.groovy.runtime.dgm$273",
     "org.codehaus.groovy.runtime.dgm$274",
     "org.codehaus.groovy.runtime.dgm$275",
     "org.codehaus.groovy.runtime.dgm$276",
     "org.codehaus.groovy.runtime.dgm$277",
     "org.codehaus.groovy.runtime.dgm$278",
     "groovy.swing.binding.JListMetaMethods$_enhanceMetaClass_closure4",
     "groovy.ui.view.BasicContentPane$_run_closure3",
     "org.codehaus.groovy.runtime.dgm$279",
     "groovy.swing.binding.JListMetaMethods$_enhanceMetaClass_closure5",
     "groovy.ui.view.BasicContentPane$_run_closure2",
     "groovy.swing.binding.JListMetaMethods$_enhanceMetaClass_closure2",
     "groovy.ui.view.BasicContentPane$_run_closure5",
     "groovy.jmx.builder.JmxBuilderTools$_getSignatureFromParamInfo_closure1",
     "groovy.swing.binding.JListMetaMethods$_enhanceMetaClass_closure3",
     "groovy.ui.view.BasicContentPane$_run_closure4",
     "org.codehaus.groovy.classgen.genMathModification$_run_closure3",
     "groovy.swing.binding.JListMetaMethods$_enhanceMetaClass_closure1",
     "org.codehaus.groovy.classgen.genMathModification$_run_closure2",
     "groovy.ui.view.BasicContentPane$_run_closure1",
     "org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrap",
     "org.codehaus.groovy.classgen.genMathModification$_run_closure1",
     "groovy.ui.ConsoleIvyPlugin$_addListener_closure1",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus",
     "groovy.xml.StreamingMarkupBuilder$_closure5",
     "groovy.xml.StreamingMarkupBuilder$_closure4",
     "org.codehaus.groovy.runtime.dgm$280",
     "groovy.xml.StreamingMarkupBuilder$_closure6",
     "org.codehaus.groovy.runtime.dgm$281",
     "groovy.xml.StreamingMarkupBuilder$_closure1",
     "org.codehaus.groovy.runtime.dgm$282",
     "org.codehaus.groovy.runtime.dgm$283",
     "groovy.xml.StreamingMarkupBuilder$_closure3",
     "org.codehaus.groovy.ast.DynamicVariable",
     "org.codehaus.groovy.runtime.dgm$284",
     "org.codehaus.groovy.transform.ThreadInterruptibleASTTransformation",
     "groovy.xml.StreamingMarkupBuilder$_closure2",
     "org.codehaus.groovy.runtime.dgm$285",
     "org.codehaus.groovy.runtime.dgm$286",
     "org.codehaus.groovy.runtime.dgm$287",
     "org.codehaus.groovy.runtime.dgm$288",
     "org.codehaus.groovy.runtime.dgm$289",
     "groovyjarjarantlr.LexerGrammar",
     "org.codehaus.groovy.classgen.genMathModification$_run_closure2$_closure5",
     "org.codehaus.groovy.runtime.ProcessGroovyMethods$ByteDumper",
     "org.codehaus.groovy.classgen.genMathModification$_run_closure2$_closure6",
     "groovyjarjarantlr.StringUtils",
     "groovy.transform.stc.SecondParam$SecondGenericType",
     "org.codehaus.groovy.tools.shell.Parsing",
     "groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder",
     "org.codehaus.groovy.control.customizers.ASTTransformationCustomizer$_setAnnotationParameters_closure1$_closure2",
     "groovyjarjarantlr.DiagnosticCodeGenerator",
     "groovyjarjarasm.asm.ClassVisitor",
     "groovy.xml.StreamingDOMBuilder",
     "org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure4",
     "org.codehaus.groovy.runtime.dgm$290",
     "groovy.util.ObjectGraphBuilder$NodeReference",
     "org.codehaus.groovy.runtime.dgm$291",
     "groovyjarjarasm.asm.tree.InsnList$InsnListIterator",
     "org.codehaus.groovy.runtime.dgm$292",
     "org.codehaus.groovy.vmplugin.v7.TypeHelper",
     "groovyjarjarasm.asm.tree.LookupSwitchInsnNode",
     "org.codehaus.groovy.runtime.dgm$293",
     "org.codehaus.groovy.tools.shell.CommandException",
     "groovy.text.TemplateExecutionException",
     "groovyjarjarantlr.preprocessor.Hierarchy",
     "org.codehaus.groovy.runtime.dgm$294",
     "org.codehaus.groovy.runtime.dgm$295",
     "org.codehaus.groovy.runtime.dgm$296",
     "groovy.servlet.TemplateServlet",
     "org.codehaus.groovy.runtime.dgm$297",
     "org.codehaus.groovy.tools.shell.util.PackageHelperImpl$_getContents_closure3",
     "groovy.model.NestedValueModel",
     "org.codehaus.groovy.runtime.dgm$298",
     "groovy.ui.Console$_addClasspathJar_closure16",
     "org.codehaus.groovy.runtime.dgm$299",
     "org.codehaus.groovy.ast.expr.ConstructorCallExpression",
     "org.codehaus.groovy.classgen.EnumCompletionVisitor$1",
     "org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure1",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$LongFloat",
     "org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure2",
     "org.codehaus.groovy.tools.shell.commands.HistoryCommand$_closure3",
     "org.codehaus.groovy.tools.shell.util.PackageHelperImpl$_getContents_closure4",
     "groovy.transform.builder.SimpleStrategy",
     "groovyjarjarantlr.CharBuffer",
     "org.codehaus.groovy.runtime.GroovyCategorySupport$ThreadCategoryInfo",
     "org.codehaus.groovy.tools.shell.commands.RegisterCommand",
     "org.codehaus.groovy.runtime.ConversionHandler",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$FloatFloat",
     "groovy.inspect.swingui.TreeNodeBuildingNodeOperation$_collectAnnotationData_closure3",
     "org.codehaus.groovy.binding.BindPath",
     "groovy.util.ObservableList$ElementClearedEvent",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_tryCatch_closure19$_closure36",
     "groovy.json.internal.CharScanner",
     "groovy.text.SimpleTemplateEngine",
     "groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3$_closure6$_closure7",
     "groovy.inspect.swingui.AstBrowser",
     "org.codehaus.groovy.reflection.stdclasses.FloatCachedClass",
     "groovy.lang.Closure",
     "groovy.swing.factory.ComboBoxFactory",
     "org.codehaus.groovy.ant.AntProjectPropertiesDelegate",
     "groovy.util.slurpersupport.Node",
     "groovy.json.JsonSlurperClassic",
     "groovy.servlet.ServletCategory",
     "groovyjarjarantlr.preprocessor.Tool",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_enforceConstraints_closure2$_closure29",
     "org.codehaus.groovy.classgen.asm.indy.IndyBinHelper",
     "org.codehaus.groovy.transform.SynchronizedASTTransformation",
     "groovy.lang.GroovyCallable",
     "groovy.ui.text.StructuredSyntaxResources",
     "org.codehaus.groovy.util.ReferenceType$4",
     "org.codehaus.groovy.util.ReferenceType$3",
     "org.codehaus.groovy.transform.sc.transformers.BooleanExpressionTransformer",
     "groovy.json.JsonDelegate",
     "org.codehaus.groovy.util.ManagedConcurrentMap$Entry",
     "org.codehaus.groovy.util.ReferenceType$2",
     "org.codehaus.groovy.util.ReferenceType$1",
     "groovy.transform.stc.PickAnyArgumentHint",
     "groovy.ui.ConsoleTextEditor",
     "groovy.ui.Console$_appendStacktrace_closure4",
     "groovyjarjarantlr.CharQueue",
     "org.codehaus.groovy.jsr223.GroovyCompiledScript",
     "groovy.text.markup.MarkupTemplateEngine$1",
     "groovy.text.markup.MarkupTemplateEngine$2",
     "groovyjarjarantlr.SemanticException",
     "org.codehaus.groovy.ant.UberCompileTask$1",
     "org.codehaus.groovy.tools.groovydoc.Main$_collectSourceFileNames_closure3$_closure4$_closure5",
     "org.codehaus.groovy.ast.MethodNode",
     "groovyjarjarasm.asm.Handle",
     "groovy.lang.IncorrectClosureArgumentsException",
     "groovy.util.OrderBy",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesUnaryExpressionHelper",
     "groovy.json.internal.JsonStringDecoder",
     "org.codehaus.groovy.antlr.treewalker.CompositeVisitor",
     "org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$3",
     "org.codehaus.groovy.transform.BaseScriptASTTransformation",
     "org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$1",
     "org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2",
     "org.codehaus.groovy.groovydoc.GroovyClassDoc",
     "groovy.transform.stc.FirstParam$Component",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_genericsType_closure13",
     "org.codehaus.groovy.runtime.NioGroovyMethods",
     "org.codehaus.groovy.util.ManagedLinkedList",
     "groovy.swing.binding.JSliderProperties",
     "org.codehaus.groovy.tools.shell.Groovysh$_createDefaultRegistrar_closure3",
     "groovyjarjarasm.asm.tree.FieldInsnNode",
     "org.codehaus.groovy.reflection.stdclasses.ArrayCachedClass",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.DoubleArrayPutAtMetaMethod",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$IntegerFloat",
     "org.codehaus.groovy.runtime.GeneratedClosure",
     "org.codehaus.groovy.tools.shell.commands.RecordCommand",
     "org.codehaus.groovy.transform.sc.transformers.BinaryExpressionTransformer",
     "org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector",
     "org.codehaus.groovy.tools.DgmConverter",
     "groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1",
     "org.codehaus.groovy.ast.expr.ArrayExpression",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap$Entry",
     "org.codehaus.groovy.transform.CategoryASTTransformation",
     "groovy.swing.binding.JTableMetaMethods",
     "groovy.swing.factory.FormattedTextFactory",
     "org.codehaus.groovy.runtime.MetaClassHelper",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_parameter_closure10$_closure30",
     "groovy.lang.GroovyShell$1DoSetContext",
     "org.codehaus.groovy.tools.shell.util.Preferences$1",
     "groovy.sql.SqlWhereVisitor",
     "org.codehaus.groovy.reflection.stdclasses.BigDecimalCachedClass",
     "org.codehaus.groovy.tools.shell.IO",
     "org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$1",
     "org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$2",
     "groovyjarjarantlr.AlternativeBlock",
     "org.codehaus.groovy.control.ASTTransformationsContext",
     "groovy.xml.StreamingSAXBuilder$_closure4$_closure11",
     "groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2",
     "org.codehaus.groovy.transform.tailrec.VariableExpressionTransformer",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure2",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor",
     "groovy.xml.StreamingSAXBuilder$_closure4$_closure10",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$DoubleInteger",
     "groovy.time.TimeDatumDependentDuration",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildParameterMapFrom_closure10",
     "groovy.mock.interceptor.StubFor",
     "org.codehaus.groovy.antlr.Main$1",
     "org.codehaus.groovy.transform.trait.TraitASTTransformation",
     "org.codehaus.groovy.tools.shell.Groovysh$_displayBuffer_closure6",
     "org.codehaus.groovy.tools.GroovyClass",
     "org.codehaus.groovy.util.ManagedConcurrentValueMap",
     "groovyjarjarantlr.collections.impl.LLCell",
     "org.codehaus.groovy.transform.tailrec.VariableReplacedListener$2",
     "groovyjarjarasm.asm.AnnotationWriter",
     "org.codehaus.groovy.transform.tailrec.VariableReplacedListener$1",
     "org.codehaus.groovy.ast.FieldNode",
     "org.codehaus.groovy.vmplugin.v7.Selector$1",
     "groovy.util.XmlSlurper",
     "groovyjarjarantlr.LLkGrammarAnalyzer",
     "org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitMethod_closure14",
     "org.codehaus.groovy.antlr.treewalker.NodeCollector",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitMethod_closure12",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitMethod_closure13",
     "groovy.xml.streamingmarkupsupport.StreamingMarkupWriter$1",
     "groovy.swing.binding.JComponentProperties$4$1",
     "groovy.ui.view.WindowsDefaults",
     "groovy.jmx.builder.JmxEmitterFactory",
     "org.codehaus.groovy.antlr.UnicodeEscapingReader$1",
     "groovyjarjarantlr.debug.ParserTokenAdapter",
     "groovy.text.XmlTemplateEngine",
     "groovy.lang.GeneratedGroovyProxy",
     "groovy.lang.MetaClassImpl$1",
     "groovyjarjarantlr.debug.TraceEvent",
     "groovy.lang.MetaClassImpl$2",
     "org.codehaus.groovy.transform.stc.UnionTypeClassNode",
     "groovy.lang.MetaClassImpl$3",
     "groovyjarjarantlr.ParseTree",
     "groovy.lang.MetaClassImpl$4",
     "groovy.lang.MetaClassImpl$5",
     "groovy.lang.MetaClassImpl$6",
     "groovy.lang.MetaClassImpl$7",
     "org.codehaus.groovy.runtime.RegexSupport",
     "groovy.lang.MetaClassImpl$8",
     "groovy.lang.MetaClassImpl$9",
     "groovy.xml.XmlUtil",
     "org.codehaus.groovy.classgen.asm.MopWriter$MopKey",
     "org.codehaus.groovy.reflection.GeneratedMetaMethod$Proxy",
     "groovyjarjarantlr.collections.impl.LLEnumeration",
     "org.codehaus.groovy.binding.BindingUpdatable",
     "org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry",
     "groovy.lang.ExpandoMetaClass",
     "org.codehaus.groovy.tools.shell.BufferManager",
     "org.codehaus.groovy.ant.Groovydoc",
     "org.codehaus.groovy.reflection.stdclasses.ByteCachedClass",
     "groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker",
     "groovy.sql.Sql$CreatePreparedStatementCommand",
     "groovy.jmx.builder.JmxOperationInfoManager$_getConstructorInfoFromMap_closure2",
     "org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce",
     "org.codehaus.groovy.transform.ToStringASTTransformation",
     "org.codehaus.groovy.tools.shell.util.NoExitSecurityManager",
     "groovy.jmx.builder.JmxBeanInfoManager",
     "groovy.swing.factory.ComponentFactory",
     "groovy.xml.XmlUtil$2",
     "groovy.time.Duration",
     "org.codehaus.groovy.ast.expr.UnaryPlusExpression",
     "org.codehaus.groovy.reflection.ClassInfo$LocalMap",
     "groovy.swing.binding.AbstractButtonSelectedBinding",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure6",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure7",
     "org.codehaus.groovy.tools.shell.util.SimpleCompletor",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure8",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure9",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMetaMethod",
     "org.codehaus.groovy.runtime.DefaultMethodKey",
     "org.codehaus.groovy.runtime.wrappers.CharWrapper",
     "groovy.xml.XmlUtil$1",
     "groovyjarjarasm.asm.tree.ClassNode",
     "groovy.lang.MetaClassRegistryChangeEvent",
     "org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation",
     "groovy.ui.text.GroovyFilter$AutoTabAction",
     "org.codehaus.groovy.control.CompilePhase",
     "groovy.util.CharsetToolkit",
     "org.codehaus.groovy.runtime.wrappers.LongWrapper",
     "groovyjarjarantlr.CharFormatter",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitSpreadMapExpression_closure36",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$DoubleInteger",
     "groovyjarjarantlr.build.ANTLR$1",
     "groovyjarjarantlr.FileCopyException",
     "org.codehaus.groovy.runtime.memoize.Memoize",
     "groovy.ui.view.BasicMenuBar",
     "org.codehaus.groovy.classgen.genMathModification$_run_closure3$_closure7",
     "groovy.json.StreamingJsonDelegate",
     "org.codehaus.groovy.ant.RootLoaderRef",
     "org.codehaus.groovy.transform.trait.TraitHelpersTuple",
     "org.codehaus.groovy.classgen.VerifierCodeVisitor",
     "org.codehaus.groovy.control.io.ReaderSource",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.DoubleArrayPutAtMetaMethod$MyPojoMetaMethodSite",
     "org.codehaus.groovy.control.ParserPlugin",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitCaseStatement_closure22",
     "org.codehaus.groovy.util.ListHashMap",
     "groovy.sql.DataSet",
     "groovy.sql.GroovyResultSetProxy$DummyResultSet",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$NumberAwareValueComparator",
     "groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure4",
     "groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3",
     "org.codehaus.groovy.runtime.wrappers.Wrapper",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_innerClass_closure24",
     "org.codehaus.groovy.runtime.typehandling.GroovyCastException",
     "org.codehaus.groovy.classgen.asm.AssertionWriter$1",
     "groovyjarjarasm.asm.tree.InsnList",
     "org.codehaus.groovy.transform.stc.TypeCheckingContext$EnclosingClosure",
     "groovy.jmx.builder.JmxEventListener",
     "groovyjarjarantlr.actions.java.ActionLexer",
     "groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2",
     "org.codehaus.groovy.classgen.genDgmMath$_run_closure1$_closure2",
     "groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure1",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$FloatInteger",
     "org.codehaus.groovy.reflection.stdclasses.StringCachedClass",
     "org.codehaus.groovy.util.ReferenceBundle",
     "groovyjarjarantlr.BlockWithImpliedExitPath",
     "org.codehaus.groovy.tools.shell.CommandAlias",
     "org.codehaus.groovy.util.ManagedReference$1",
     "groovyjarjarantlr.BlockEndElement",
     "groovy.json.internal.CharacterSource",
     "groovyjarjarasm.asm.Opcodes",
     "org.codehaus.groovy.runtime.InvokerHelper$NullScript",
     "groovy.lang.ExpandoMetaClass$MixedInAccessor",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitNotExpression_closure26",
     "groovy.swing.factory.HGlueFactory",
     "groovyjarjarantlr.debug.GuessingEvent",
     "groovy.json.JsonSlurper",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$FloatFloat",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure2$_closure4$_closure5",
     "groovyjarjarantlr.debug.InputBufferListener",
     "org.codehaus.groovy.ant.VerifyClass$1",
     "org.codehaus.groovy.tools.shell.commands.AliasTargetProxyCommand",
     "groovy.transform.stc.IncorrectTypeHintException",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.CharacterArrayGetAtMetaMethod",
     "org.codehaus.groovy.classgen.Verifier$10$1",
     "groovyjarjarantlr.debug.MessageAdapter",
     "org.codehaus.groovy.runtime.m12n.ExtensionModuleScanner",
     "org.codehaus.groovy.reflection.ClassInfo$ClassInfoCleanup",
     "org.codehaus.groovy.ast.expr.BooleanExpression",
     "org.codehaus.groovy.ast.expr.StaticMethodCallExpression",
     "org.codehaus.groovy.ast.builder.AstBuilderTransformation$AstBuilderInvocationTrap",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer$_visitWhileLoop_closure7",
     "org.codehaus.groovy.runtime.powerassert.AssertionRenderer",
     "org.codehaus.groovy.ast.stmt.WhileStatement",
     "org.codehaus.groovy.reflection.CachedMethod$1",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$2",
     "org.codehaus.groovy.groovydoc.GroovyMethodDoc",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$1",
     "org.codehaus.groovy.tools.shell.completion.CommandNameCompleter",
     "groovyjarjarantlr.MismatchedTokenException",
     "groovyjarjarasm.asm.tree.AnnotationNode",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$6",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$5",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$4",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$3",
     "org.codehaus.groovy.classgen.VariableScopeVisitor",
     "groovy.swing.LookAndFeelHelper",
     "org.codehaus.groovy.classgen.DummyClassGenerator",
     "org.codehaus.groovy.tools.shell.completion.ImportsSyntaxCompletor$_findMatchingImportedClassesCached_closure1",
     "groovy.transform.stc.SecondParam$Component",
     "groovy.ui.text.FindReplaceUtility$1",
     "groovy.ui.text.FindReplaceUtility$2",
     "org.codehaus.groovy.tools.shell.Command",
     "groovy.ui.view.MacOSXDefaults",
     "groovyjarjarasm.asm.tree.MethodNode",
     "org.codehaus.groovy.tools.FileSystemCompiler$1",
     "org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite",
     "org.codehaus.groovy.transform.trait.SuperCallTraitTransformer",
     "org.codehaus.groovy.transform.sc.transformers.ConstructorCallTransformer$MapStyleConstructorCall",
     "groovy.json.JsonBuilder",
     "groovy.util.GroovyTestSuite",
     "groovy.transform.stc.SecondParam",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure13",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure12",
     "groovy.text.StreamingTemplateEngine$StreamingTemplate$FinishedReadingException",
     "groovyjarjarasm.asm.commons.Remapper",
     "groovy.grape.GrapeIvy",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure11",
     "org.codehaus.groovy.util.ManagedDoubleKeyMap$Segment",
     "groovy.time.DatumDependentDuration",
     "groovy.swing.factory.VGlueFactory",
     "org.codehaus.groovy.ast.expr.SpreadExpression",
     "org.codehaus.groovy.classgen.ReturnAdder$ReturnStatementListener",
     "org.codehaus.groovy.tools.shell.Parser",
     "groovy.lang.MetaClassImpl$DummyMetaMethod",
     "groovy.transform.stc.MapEntryOrKeyValue",
     "groovy.lang.GroovyShell$6",
     "groovy.lang.GroovyShell$5",
     "groovy.lang.GroovyShell$4",
     "groovy.lang.GroovyShell$3",
     "groovy.lang.GroovyShell$2",
     "groovy.lang.GroovyShell$1",
     "groovy.lang.GroovyLogTestCase",
     "groovy.xml.QName",
     "groovyjarjarantlr.RecognitionException",
     "org.codehaus.groovy.runtime.dgm$200",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$LongDouble",
     "org.codehaus.groovy.runtime.dgm$201",
     "org.codehaus.groovy.runtime.dgm$202",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation$_name2VariableMappingFor_closure4",
     "org.codehaus.groovy.runtime.dgm$203",
     "groovy.swing.binding.JComboBoxProperties$1",
     "org.codehaus.groovy.runtime.ComposedClosure",
     "org.codehaus.groovy.runtime.dgm$204",
     "groovy.swing.binding.JComboBoxProperties$2",
     "org.codehaus.groovy.runtime.dgm$205",
     "org.codehaus.groovy.runtime.dgm$206",
     "org.codehaus.groovy.runtime.dgm$207",
     "org.codehaus.groovy.runtime.dgm$208",
     "org.codehaus.groovy.control.AnnotationConstantsVisitor",
     "org.codehaus.groovy.runtime.dgm$209",
     "groovy.swing.impl.ClosureCellEditor",
     "groovy.inspect.TextTreeNodeMaker",
     "groovy.lang.ObjectRange",
     "org.codehaus.groovy.reflection.v7.GroovyClassValueJava7",
     "groovy.swing.binding.JComboBoxProperties$3",
     "org.codehaus.groovy.control.customizers.SecureASTCustomizer$ExpressionChecker",
     "groovy.swing.binding.JComboBoxProperties$4",
     "org.codehaus.groovy.ast.expr.MethodCallExpression",
     "groovy.transform.BaseScript",
     "groovy.swing.factory.WindowFactory",
     "org.codehaus.groovy.runtime.dgm$210",
     "org.codehaus.groovy.runtime.dgm$211",
     "org.codehaus.groovy.runtime.dgm$212",
     "org.codehaus.groovy.runtime.dgm$213",
     "org.codehaus.groovy.tools.shell.util.PackageHelperImpl$_initializePackages_closure1",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildParameterMapFrom_closure8",
     "org.codehaus.groovy.runtime.dgm$214",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildParameterMapFrom_closure9",
     "groovy.util.JavadocAssertionTestSuite$_suite_closure1",
     "org.codehaus.groovy.runtime.dgm$215",
     "org.codehaus.groovy.runtime.dgm$216",
     "org.codehaus.groovy.runtime.dgm$217",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitTupleExpression_closure29",
     "org.codehaus.groovy.runtime.dgm$218",
     "org.codehaus.groovy.classgen.asm.CompileStack$StateStackElement",
     "org.codehaus.groovy.runtime.dgm$219",
     "groovy.lang.MutableMetaClass",
     "org.codehaus.groovy.classgen.asm.TypeChooser",
     "groovyjarjarantlr.actions.cpp.ActionLexer",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler",
     "groovy.swing.factory.VBoxFactory",
     "org.codehaus.groovy.runtime.dgm$341",
     "groovy.lang.Closure$1",
     "org.codehaus.groovy.runtime.dgm$342",
     "org.codehaus.groovy.runtime.dgm$343",
     "org.codehaus.groovy.runtime.dgm$344",
     "org.codehaus.groovy.transform.MemoizedASTTransformation",
     "groovy.lang.GroovySystem",
     "org.codehaus.groovy.runtime.dgm$345",
     "groovy.grape.GrapeIvy$_processCategoryMethods_closure2",
     "org.codehaus.groovy.runtime.dgm$346",
     "org.codehaus.groovy.runtime.dgm$347",
     "org.codehaus.groovy.runtime.dgm$348",
     "org.codehaus.groovy.runtime.dgm$349",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure26$_closure31$_closure32",
     "org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName",
     "groovy.servlet.ServletBinding$InvalidOutputStream",
     "org.codehaus.groovy.tools.DocGenerator$DocPackage",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure8$_closure12",
     "org.codehaus.groovy.classgen.asm.indy.InvokeDynamicWriter",
     "org.codehaus.groovy.ant.FileIterator",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitStaticMethodCallExpression_closure18",
     "groovy.lang.ObjectRange$1",
     "groovy.ui.Console$_cut_closure21",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_mapEntry_closure22",
     "org.codehaus.groovy.transform.LazyASTTransformation",
     "org.codehaus.groovy.runtime.dgm$350",
     "org.codehaus.groovy.runtime.dgm$351",
     "org.codehaus.groovy.runtime.dgm$352",
     "org.codehaus.groovy.runtime.dgm$353",
     "org.codehaus.groovy.runtime.dgm$354",
     "org.codehaus.groovy.runtime.dgm$355",
     "groovy.ui.view.BasicMenuBar$_run_closure1$_closure2",
     "org.codehaus.groovy.runtime.dgm$356",
     "groovy.ui.view.BasicMenuBar$_run_closure1$_closure3",
     "org.codehaus.groovy.runtime.dgm$357",
     "groovy.ui.view.BasicMenuBar$_run_closure1$_closure4",
     "org.codehaus.groovy.runtime.dgm$358",
     "groovy.ui.view.BasicMenuBar$_run_closure1$_closure5",
     "org.codehaus.groovy.runtime.dgm$359",
     "groovy.json.internal.JsonParserCharArray",
     "groovyjarjarasm.asm.commons.RemappingSignatureAdapter",
     "groovyjarjarantlr.PythonCodeGenerator",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer$_visitDoWhileLoop_closure8",
     "groovy.ui.ConsoleSupport",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$ZipPreIterator",
     "groovy.ui.view.BasicMenuBar$_run_closure1$_closure6",
     "groovy.ui.view.BasicMenuBar$_run_closure1$_closure7",
     "groovy.text.GStringTemplateEngine",
     "groovy.json.internal.FastStringUtils$StringImplementation",
     "groovy.util.FileNameByRegexFinder",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$IntegerInteger",
     "groovy.swing.factory.SeparatorFactory",
     "org.codehaus.groovy.reflection.GroovyClassValuePreJava7$GroovyClassValuePreJava7Segment",
     "org.codehaus.groovy.runtime.dgm$360",
     "org.codehaus.groovy.runtime.dgm$361",
     "org.codehaus.groovy.runtime.dgm$362",
     "org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey",
     "org.codehaus.groovy.runtime.dgm$363",
     "org.codehaus.groovy.runtime.dgm$364",
     "org.codehaus.groovy.runtime.dgm$365",
     "org.codehaus.groovy.runtime.dgm$366",
     "org.codehaus.groovy.runtime.dgm$367",
     "org.codehaus.groovy.runtime.dgm$368",
     "org.codehaus.groovy.runtime.dgm$369",
     "org.codehaus.groovy.transform.stc.Receiver",
     "groovy.swing.binding.JSpinnerProperties$1",
     "groovyjarjarasm.asm.commons.Method",
     "groovy.ui.view.MacOSXMenuBar",
     "org.codehaus.groovy.tools.DocGenerator$DocMethod",
     "org.codehaus.groovy.binding.PropertyBinding$PropertyFullBinding",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_annotation_closure15$_closure31",
     "org.codehaus.groovy.runtime.dgm$370",
     "groovy.beans.Bindable",
     "org.codehaus.groovy.runtime.dgm$371",
     "org.codehaus.groovy.runtime.dgm$372",
     "org.codehaus.groovy.runtime.dgm$373",
     "org.codehaus.groovy.runtime.dgm$374",
     "groovy.lang.MetaClass",
     "org.codehaus.groovy.runtime.dgm$375",
     "org.codehaus.groovy.runtime.dgm$376",
     "org.codehaus.groovy.runtime.dgm$377",
     "groovy.inspect.swingui.TreeNodeBuildingNodeOperation$_collectConstructorData_closure7",
     "org.codehaus.groovy.runtime.dgm$378",
     "org.codehaus.groovy.runtime.dgm$379",
     "org.codehaus.groovy.control.ClassNodeResolver",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingSupport$ExtensionMethodCache",
     "groovy.util.slurpersupport.GPathResult$3",
     "org.codehaus.groovy.ast.stmt.BreakStatement",
     "groovy.util.XmlNodePrinter$NamespaceContext",
     "groovy.util.slurpersupport.GPathResult$4",
     "groovy.util.slurpersupport.GPathResult$1",
     "groovy.util.slurpersupport.GPathResult$2",
     "org.codehaus.groovy.reflection.stdclasses.DoubleCachedClass",
     "groovy.util.slurpersupport.FilteredAttributes$1",
     "org.codehaus.groovy.runtime.BytecodeInterface8",
     "groovy.time.TimeCategory",
     "org.codehaus.groovy.runtime.powerassert.SourceTextNotAvailableException",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$LongDouble",
     "groovyjarjarantlr.DefineGrammarSymbols",
     "org.codehaus.groovy.runtime.dgm$380",
     "org.codehaus.groovy.runtime.dgm$381",
     "org.codehaus.groovy.runtime.dgm$382",
     "groovy.util.AntBuilderLocator",
     "org.codehaus.groovy.runtime.dgm$383",
     "groovy.text.GStringTemplateEngine$GStringTemplate",
     "org.codehaus.groovy.runtime.dgm$384",
     "groovy.json.internal.CacheType",
     "org.codehaus.groovy.runtime.dgm$385",
     "org.codehaus.groovy.runtime.dgm$386",
     "org.codehaus.groovy.runtime.dgm$387",
     "org.codehaus.groovy.runtime.dgm$388",
     "org.codehaus.groovy.runtime.dgm$389",
     "groovy.util.GroovyMBean",
     "groovy.ui.ConsoleView",
     "org.codehaus.groovy.classgen.ReturnAdder$2",
     "groovy.util.slurpersupport.GPathResult",
     "org.codehaus.groovy.control.OptimizerVisitor",
     "org.codehaus.groovy.classgen.ReturnAdder$1",
     "org.codehaus.groovy.tools.xml.DomToGroovy",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv",
     "groovy.sql.Sql$QueryCommand",
     "groovy.servlet.TemplateServlet$TemplateCacheEntry",
     "org.codehaus.groovy.tools.shell.util.XmlCommandRegistrar$_register_closure1$_closure2",
     "org.codehaus.groovy.reflection.stdclasses.LongCachedClass",
     "org.codehaus.groovy.syntax.Numbers",
     "org.codehaus.groovy.transform.sc.transformers.MethodCallExpressionTransformer",
     "org.codehaus.groovy.runtime.dgm$390",
     "org.codehaus.groovy.runtime.dgm$391",
     "org.codehaus.groovy.runtime.dgm$392",
     "groovy.xml.StreamingMarkupBuilder$_closure2$_closure9",
     "org.codehaus.groovy.runtime.dgm$393",
     "org.codehaus.groovy.runtime.dgm$394",
     "org.codehaus.groovy.runtime.dgm$395",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingVisitor$SignatureCodecFactory",
     "groovyjarjarantlr.ANTLRTokdefParserTokenTypes",
     "org.codehaus.groovy.runtime.dgm$396",
     "org.codehaus.groovy.runtime.dgm$397",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_annotation_closure15",
     "org.codehaus.groovy.runtime.dgm$398",
     "org.codehaus.groovy.reflection.CachedClass$5$1",
     "org.codehaus.groovy.runtime.dgm$399",
     "org.codehaus.groovy.tools.shell.ComplexCommandSupport$_closure1$_closure3",
     "groovy.transform.Memoized",
     "groovy.util.AllTestSuite",
     "groovy.lang.Buildable",
     "org.codehaus.groovy.tools.shell.ComplexCommandSupport$_closure1$_closure4",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$TakeIterator",
     "org.codehaus.groovy.ast.stmt.IfStatement",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_staticMethodCall_closure26",
     "groovy.ui.Console$_loadScriptFile_closure8$_closure28",
     "groovy.ui.Console$_loadScriptFile_closure8$_closure27",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_staticMethodCall_closure27",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_mixin_closure16",
     "org.codehaus.groovy.control.customizers.SecureASTCustomizer$StatementChecker",
     "org.codehaus.groovy.control.customizers.DelegatingCustomizer",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$LongLong",
     "groovy.ui.ConsoleIvyPlugin$_addListener_closure1$_closure3",
     "groovy.ui.ConsoleIvyPlugin$_addListener_closure1$_closure2",
     "groovy.ui.Console$_compileScript_closure18",
     "groovy.text.SimpleTemplateEngine$SimpleTemplate",
     "groovyjarjarantlr.debug.DebuggingInputBuffer",
     "org.codehaus.groovy.reflection.MixinInMetaClass$1",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_makeArrayOfNodes_closure6",
     "org.codehaus.groovy.classgen.AsmClassGenerator",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitBooleanExpression_closure25",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildOperationMapFrom_closure7$_closure14",
     "org.codehaus.groovy.transform.GroovyASTTransformationClass",
     "groovy.swing.factory.TextArgWidgetFactory",
     "groovyjarjarcommonscli.OptionBuilder",
     "org.codehaus.groovy.runtime.typehandling.LongMath",
     "groovy.ui.view.MacOSXMenuBar$_run_closure1$_closure2",
     "groovy.ui.view.MacOSXMenuBar$_run_closure1$_closure4",
     "groovy.ui.view.MacOSXMenuBar$_run_closure1$_closure3",
     "groovy.ui.view.MacOSXMenuBar$_run_closure1$_closure6",
     "org.codehaus.groovy.ast.CompileUnit",
     "org.codehaus.groovy.transform.ReadWriteLockASTTransformation",
     "groovy.ui.view.MacOSXMenuBar$_run_closure1$_closure5",
     "org.codehaus.groovy.ast.ConstructorNode",
     "org.codehaus.groovy.tools.GrapeMain$_closure7",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitVariableExpression_closure44",
     "org.codehaus.groovy.runtime.typehandling.NumberMath",
     "org.codehaus.groovy.antlr.parser.GroovyTokenTypes",
     "org.codehaus.groovy.tools.GrapeMain$_closure1",
     "org.codehaus.groovy.tools.GrapeMain$_closure2",
     "org.codehaus.groovy.tools.GrapeMain$_closure3",
     "org.codehaus.groovy.tools.GrapeMain$_closure4",
     "org.codehaus.groovy.tools.GrapeMain$_closure5",
     "groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1",
     "org.codehaus.groovy.tools.GrapeMain$_closure6",
     "groovyjarjarcommonscli.HelpFormatter",
     "groovyjarjarantlr.build.StreamScarfer",
     "org.codehaus.groovy.classgen.asm.BytecodeVariable",
     "groovy.sql.Sql",
     "org.codehaus.groovy.classgen.asm.CompileStack$ExceptionTableEntry",
     "org.codehaus.groovy.transform.ASTTransformationVisitor",
     "groovyjarjarasm.asm.util.TraceMethodVisitor",
     "org.codehaus.groovy.transform.sc.transformers.ConstructorCallTransformer",
     "groovy.lang.ExpandoMetaClass$Callable",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getPublicFieldsAndMethods_closure5",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$LongFloat",
     "org.codehaus.groovy.runtime.metaclass.ThreadManagedMetaBeanProperty",
     "groovyjarjarasm.asm.MethodWriter",
     "org.codehaus.groovy.classgen.asm.BinaryExpressionWriter",
     "org.codehaus.groovy.control.ParserPluginFactory",
     "groovy.lang.MetaExpandoProperty",
     "groovy.transform.CompileDynamic",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitPackage_closure5",
     "org.codehaus.groovy.control.Janitor",
     "groovyjarjarcommonscli.Option",
     "org.codehaus.groovy.transform.sc.transformers.RangeExpressionTransformer",
     "org.codehaus.groovy.tools.shell.commands.DisplayCommand",
     "groovy.jmx.builder.JmxEmitterFactory$_newInstance_closure1",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_classNode_closure17$_closure35",
     "org.codehaus.groovy.tools.shell.util.ScriptVariableAnalyzer",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_classNode_closure17$_closure34",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_classNode_closure17$_closure33",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_classNode_closure17$_closure32",
     "groovyjarjarasm.asm.commons.RemappingFieldAdapter",
     "org.codehaus.groovy.classgen.genMathModification$_run_closure1$_closure4",
     "org.codehaus.groovy.tools.shell.completion.KeywordSyntaxCompletor",
     "groovyjarjarantlr.debug.ListenerBase",
     "groovy.sql.DataSet$1",
     "org.codehaus.groovy.ast.expr.ListExpression",
     "groovy.util.ObservableList$ObservableListIterator",
     "org.codehaus.groovy.groovydoc.GroovyProgramElementDoc",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer$_visitBlockStatement_closure3",
     "groovy.util.slurpersupport.GPathResult$5",
     "org.codehaus.groovy.runtime.callsite.AbstractCallSite",
     "groovy.jmx.builder.JmxAttributeInfoManager",
     "org.codehaus.groovy.transform.ASTTestTransformation$1$_call_closure5",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor",
     "org.codehaus.groovy.transform.ASTTestTransformation$1$_call_closure2",
     "org.codehaus.groovy.transform.ASTTestTransformation$1$_call_closure3",
     "org.codehaus.groovy.transform.ASTTestTransformation$1$_call_closure4",
     "org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine",
     "org.codehaus.groovy.tools.shell.completion.GroovySyntaxCompletor$InStringException",
     "groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3",
     "groovy.ui.view.BasicStatusBar",
     "groovyjarjarasm.asm.tree.VarInsnNode",
     "org.codehaus.groovy.control.ConfigurationException",
     "org.codehaus.groovy.reflection.ClassInfo$DebugRef",
     "org.codehaus.groovy.vmplugin.v7.Selector$PropertySelector",
     "org.codehaus.groovy.tools.shell.IO$Verbosity",
     "groovyjarjarasm.asm.tree.InsnNode",
     "groovy.json.internal.Charsets",
     "org.codehaus.groovy.ast.stmt.Statement",
     "org.codehaus.groovy.runtime.powerassert.AssertionRenderer$1",
     "groovyjarjarasm.asm.commons.GeneratorAdapter",
     "groovyjarjarantlr.Parser",
     "org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$ClassNodeSkip",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$FloatDouble",
     "groovy.jmx.builder.JmxServerConnectorFactory",
     "org.codehaus.groovy.groovydoc.GroovyFieldDoc",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$DoubleLong",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$DoubleDouble",
     "groovy.json.JsonToken",
     "org.codehaus.groovy.transform.BuilderASTTransformation$AbstractBuilderStrategy",
     "groovy.swing.impl.TableLayoutRow",
     "groovy.util.Node$1",
     "groovy.util.ObjectGraphBuilder$ReferenceResolver",
     "org.codehaus.groovy.util.ComplexKeyHashMap",
     "org.codehaus.groovy.runtime.SwingGroovyMethods",
     "org.codehaus.groovy.tools.shell.commands.AliasCommand",
     "groovy.jmx.builder.JmxBeansFactory$_onNodeCompleted_closure2",
     "groovy.text.markup.TemplateASTTransformer",
     "groovy.beans.PropertyAccessor",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingSupport$ObjectArrayStaticTypesHelper",
     "groovy.util.ObservableMap$PropertyUpdatedEvent",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesTypeChooser",
     "groovy.inspect.swingui.AstBrowser$_decompile_closure6",
     "org.codehaus.groovy.runtime.typehandling.BigDecimalMath",
     "groovy.swing.factory.RootPaneContainerFactory",
     "org.codehaus.groovy.runtime.metaclass.DefaultMetaClassInfo$ConstantMetaClassVersioning",
     "org.codehaus.groovy.transform.sc.transformers.ConstructorCallTransformer$MapStyleConstructorCall$1",
     "groovyjarjarasm.asm.tree.LocalVariableNode",
     "groovy.lang.DelegatingMetaClass",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ArrayMetaMethod",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitClass_closure9$_closure36",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitClass_closure9$_closure37",
     "org.codehaus.groovy.syntax.TokenException",
     "org.codehaus.groovy.runtime.AbstractComparator",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitClass_closure9$_closure34",
     "groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitClass_closure9$_closure35",
     "groovy.swing.factory.HBoxFactory",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitExpressionsAndCommaSeparate_closure33",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.CharacterArrayGetAtMetaMethod$MyPojoMetaMethodSite",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap$1",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation",
     "groovyjarjarantlr.actions.java.ActionLexerTokenTypes",
     "groovyjarjarantlr.debug.ParserEventSupport",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitWhileLoop_closure29",
     "groovyjarjarantlr.ASTFactory",
     "org.codehaus.groovy.binding.SourceBinding",
     "org.codehaus.groovy.transform.trait.Traits$TraitBridge",
     "org.codehaus.groovy.antlr.parser.GroovyLexer",
     "groovy.text.StreamingTemplateEngine$StreamingTemplate",
     "groovy.sql.Sql$AbstractStatementCommand",
     "org.codehaus.groovy.runtime.CurriedClosure",
     "groovyjarjarantlr.collections.impl.IntRange",
     "groovyjarjarantlr.ASTNULLType",
     "groovy.transform.builder.Builder",
     "org.codehaus.groovy.tools.javac.JavaStubGenerator",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$FloatInteger",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesWriterController",
     "groovy.transform.AnnotationCollector",
     "groovy.util.ObjectGraphBuilder$DefaultClassNameResolver",
     "org.codehaus.groovy.ast.expr.PrefixExpression",
     "org.codehaus.groovy.tools.shell.completion.CustomClassSyntaxCompletor",
     "groovy.swing.binding.JComponentProperties$3$1",
     "org.codehaus.groovy.reflection.CachedConstructor$1",
     "org.codehaus.groovy.antlr.treewalker.FlatNodeListTraversal",
     "org.codehaus.groovy.binding.MutualPropertyBinding",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.LongArrayGetAtMetaMethod",
     "groovyjarjarasm.asm.tree.MultiANewArrayInsnNode",
     "org.codehaus.groovy.tools.groovydoc.LinkArgument",
     "org.codehaus.groovy.transform.IndexedPropertyASTTransformation",
     "org.codehaus.groovy.control.SourceUnit",
     "org.codehaus.groovy.ast.ClassNode",
     "groovy.ui.text.FindReplaceUtility$CloseAction",
     "org.codehaus.groovy.tools.shell.ShellRunner",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitShortTernaryExpression_closure22",
     "groovyjarjarasm.asm.tree.LdcInsnNode",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitMethodPointerExpression_closure37",
     "groovy.util.ObjectGraphBuilder",
     "groovy.util.Proxy",
     "groovy.mock.interceptor.LooseExpectation",
     "groovy.lang.Category",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$NumberNumber",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$1",
     "org.codehaus.groovy.util.ReferenceManager$ThreadedReferenceManager$1",
     "org.codehaus.groovy.antlr.HScrollableTextPane",
     "groovyjarjarantlr.ASdebug.ASDebugStream",
     "groovy.swing.factory.TableModelFactory",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$DoubleFloat",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesClosureWriter$1",
     "groovy.swing.binding.AbstractButtonProperties$1",
     "groovy.swing.binding.JTableElementsBinding",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure9$_closure17",
     "groovy.sql.Sql$4",
     "org.codehaus.groovy.syntax.Types",
     "groovy.sql.Sql$5",
     "groovy.sql.Sql$2",
     "org.codehaus.groovy.util.ReferenceType$SoftRef",
     "groovy.sql.Sql$3",
     "org.codehaus.groovy.transform.ASTTransformationCollectorCodeVisitor",
     "groovy.sql.Sql$1",
     "groovyjarjarcommonscli.HelpFormatter$1",
     "org.codehaus.groovy.reflection.stdclasses.CachedSAMClass",
     "groovy.transform.stc.FromAbstractTypeMethods",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ShortArrayGetAtMetaMethod",
     "groovy.util.ObservableMap$MultiPropertyEvent",
     "groovy.xml.Namespace",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ObjectArrayPutAtMetaMethod",
     "groovy.swing.binding.AbstractJComponentBinding",
     "groovy.util.ObjectGraphBuilder$NewInstanceResolver",
     "groovy.lang.Tuple2",
     "groovy.util.ObservableSet",
     "groovy.sql.Sql$8",
     "groovy.sql.Sql$9",
     "groovy.sql.Sql$6",
     "groovy.sql.Sql$7",
     "groovyjarjarantlr.LLkAnalyzer",
     "org.codehaus.groovy.ast.ClassCodeVisitorSupport",
     "groovy.ui.Console$_reportException_closure10",
     "org.codehaus.groovy.ast.expr.EmptyExpression",
     "org.codehaus.groovy.tools.GrapeMain",
     "org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass",
     "org.codehaus.groovy.runtime.SocketGroovyMethods",
     "groovy.ui.Console$_notifySystemErr_closure15",
     "groovy.ui.Console$_notifySystemErr_closure14",
     "groovyjarjarantlr.CppCharFormatter",
     "groovy.lang.GrabExclude",
     "org.codehaus.groovy.runtime.NullObject",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyExecutableMemberDoc",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_enforceConstraints_closure1",
     "groovy.swing.binding.JComboBoxElementsBinding",
     "org.codehaus.groovy.transform.tailrec.VariableExpressionReplacer$_closure2",
     "org.codehaus.groovy.transform.tailrec.VariableExpressionReplacer$_closure1",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_enforceConstraints_closure2",
     "groovy.util.ObjectGraphBuilder$DefaultRelationNameResolver",
     "org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethodList",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitListExpression_closure30",
     "groovyjarjarcommonscli.Options",
     "org.codehaus.groovy.runtime.InvokerInvocationException",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitMapEntryExpression_closure33",
     "groovy.jmx.builder.JmxBeanInfoManager$_getModelMBeanInfoFromMap_closure1",
     "org.codehaus.groovy.transform.stc.AbstractTypeCheckingExtension$1",
     "org.codehaus.groovy.util.AbstractConcurrentMap",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitDoWhileLoop_closure4",
     "org.codehaus.groovy.control.messages.SimpleMessage",
     "org.codehaus.groovy.tools.DocGenerator$DocMethod$_getSeeComments_closure4",
     "groovy.grape.GrapeIvy$_addExcludesIfNeeded_closure10",
     "groovy.json.StringEscapeUtils",
     "groovy.beans.DefaultPropertyReader",
     "groovy.lang.MetaMethod",
     "org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$IntegerDouble",
     "groovyjarjarantlr.TokenStreamRewriteEngine$InsertBeforeOp",
     "org.codehaus.groovy.antlr.treewalker.NodePrinter",
     "org.codehaus.groovy.control.CompilationFailedException",
     "groovy.transform.stc.SingleSignatureClosureHint",
     "org.codehaus.groovy.util.ReferenceManager$ThreadedReferenceManager",
     "groovyjarjarantlr.OneOrMoreBlock",
     "groovy.util.ObservableList$ElementRemovedEvent",
     "groovyjarjarantlr.collections.ASTEnumeration",
     "groovy.util.FactoryInterceptorMetaClass",
     "groovy.swing.binding.JListSelectedElementBinding",
     "org.codehaus.groovy.classgen.asm.BinaryFloatExpressionHelper",
     "org.codehaus.groovy.groovydoc.GroovyDocErrorReporter",
     "org.codehaus.groovy.util.FastArray",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitForLoop_closure18",
     "groovy.swing.factory.MapFactory",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$DoubleInteger",
     "groovy.time.TimeDuration$1",
     "org.codehaus.groovy.tools.shell.util.JAnsiHelper",
     "org.codehaus.groovy.tools.shell.completion.ImportsSyntaxCompletor",
     "groovyjarjarantlr.ActionTransInfo",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitIfElse_closure19",
     "groovy.mock.interceptor.MockInterceptor",
     "groovy.json.internal.Exceptions",
     "groovy.xml.MarkupBuilderHelper",
     "groovy.xml.Entity",
     "groovy.swing.factory.DialogFactory",
     "org.codehaus.groovy.runtime.MethodRankHelper$RankableField",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitIfElse_closure20",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$FloatLong",
     "groovy.swing.factory.BindGroupFactory",
     "org.codehaus.groovy.transform.tailrec.VariableAccessReplacer$_replaceIn_closure1",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure9$_closure17$_closure19$_closure20",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure9$_closure17$_closure19$_closure21",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure9$_closure17$_closure19$_closure22",
     "org.codehaus.groovy.transform.tailrec.VariableAccessReplacer$_replaceIn_closure2",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure2$_closure4",
     "org.codehaus.groovy.antlr.LineColumn",
     "groovyjarjarasm.asm.ClassReader",
     "groovy.inspect.swingui.TreeNodeWithProperties$_getPropertyValue_closure1",
     "org.codehaus.groovy.runtime.dgm$300",
     "org.codehaus.groovy.runtime.dgm$301",
     "org.codehaus.groovy.runtime.dgm$302",
     "org.codehaus.groovy.runtime.dgm$303",
     "org.codehaus.groovy.runtime.dgm$304",
     "org.codehaus.groovy.runtime.dgm$305",
     "org.codehaus.groovy.runtime.dgm$306",
     "org.codehaus.groovy.tools.shell.ComplexCommandSupport$_closure1",
     "org.codehaus.groovy.runtime.dgm$307",
     "groovy.text.XmlTemplateEngine$XmlTemplate",
     "groovyjarjarantlr.ASTVisitor",
     "org.codehaus.groovy.runtime.ScriptReference",
     "org.codehaus.groovy.runtime.dgm$308",
     "org.codehaus.groovy.runtime.dgm$309",
     "org.codehaus.groovy.control.customizers.ImportCustomizer",
     "org.codehaus.groovy.tools.shell.util.CurlyCountingGroovyLexer",
     "groovyjarjarasm.asm.tree.InvokeDynamicInsnNode",
     "groovyjarjarantlr.debug.MessageListener",
     "groovy.jmx.builder.JmxClientConnectorFactory",
     "org.codehaus.groovy.runtime.dgm$310",
     "org.codehaus.groovy.tools.DocGenerator$DocSource$_add_closure2",
     "org.codehaus.groovy.runtime.dgm$311",
     "org.codehaus.groovy.tools.DocGenerator$DocSource$_add_closure1",
     "org.codehaus.groovy.runtime.dgm$312",
     "org.codehaus.groovy.runtime.dgm$313",
     "org.codehaus.groovy.runtime.dgm$314",
     "org.codehaus.groovy.runtime.dgm$315",
     "org.codehaus.groovy.runtime.dgm$316",
     "groovyjarjarantlr.TokenRefElement",
     "org.codehaus.groovy.runtime.dgm$317",
     "org.codehaus.groovy.runtime.dgm$318",
     "org.codehaus.groovy.runtime.dgm$319",
     "groovy.util.XmlParser",
     "groovyjarjarantlr.collections.impl.BitSet",
     "org.codehaus.groovy.reflection.GroovyClassValuePreJava7$GroovyClassValuePreJava7Map",
     "groovy.swing.factory.CellEditorFactory",
     "groovy.swing.factory.LayoutFactory$_addLayoutProperties_closure1",
     "groovy.util.slurpersupport.ReplacementNode",
     "org.codehaus.groovy.binding.PropertyBinding$UpdateStrategy",
     "groovy.xml.DOMBuilder",
     "groovyjarjarcommonscli.GnuParser",
     "groovyjarjarasm.asm.tree.TypeAnnotationNode",
     "groovyjarjarasm.asm.commons.SerialVersionUIDAdder",
     "org.codehaus.groovy.runtime.dgm$320",
     "org.codehaus.groovy.runtime.dgm$321",
     "org.codehaus.groovy.runtime.dgm$322",
     "org.codehaus.groovy.runtime.dgm$323",
     "org.codehaus.groovy.ast.CodeVisitorSupport",
     "org.codehaus.groovy.runtime.dgm$324",
     "org.codehaus.groovy.runtime.dgm$325",
     "org.codehaus.groovy.runtime.dgm$326",
     "groovyjarjarantlr.ExceptionSpec",
     "org.codehaus.groovy.runtime.dgm$327",
     "org.codehaus.groovy.transform.DelegateASTTransformation",
     "groovy.inspect.swingui.AstNodeToScriptAdapter$_compileToScript_closure1",
     "org.codehaus.groovy.runtime.dgm$328",
     "org.codehaus.groovy.runtime.dgm$329",
     "org.codehaus.groovy.antlr.ASTParserException",
     "org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap",
     "groovy.util.ObjectGraphBuilder$ObjectBeanFactory",
     "org.codehaus.groovy.transform.tailrec.TernaryToIfStatementConverter",
     "org.codehaus.groovy.reflection.stdclasses.ShortCachedClass",
     "org.codehaus.groovy.runtime.GroovyCategorySupport",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitGenerics_closure10",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitCaseStatement_closure12",
     "groovyjarjarantlr.debug.ParserMatchEvent",
     "groovy.beans.PropertyWriter",
     "org.codehaus.groovy.runtime.dgm$330",
     "groovy.swing.factory.BoxLayoutFactory",
     "org.codehaus.groovy.control.ErrorCollector",
     "org.codehaus.groovy.runtime.dgm$331",
     "org.codehaus.groovy.runtime.dgm$332",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitVariableExpression_closure44$_closure56",
     "org.codehaus.groovy.runtime.dgm$333",
     "org.codehaus.groovy.runtime.dgm$334",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitBlockStatement_closure17",
     "groovy.transform.TimedInterrupt",
     "org.codehaus.groovy.runtime.dgm$335",
     "org.codehaus.groovy.runtime.dgm$336",
     "org.codehaus.groovy.runtime.dgm$337",
     "groovy.lang.ExpandoMetaClass$2",
     "org.codehaus.groovy.runtime.dgm$338",
     "groovy.lang.ExpandoMetaClass$3",
     "org.codehaus.groovy.runtime.dgm$339",
     "groovy.lang.ExpandoMetaClass$4",
     "org.codehaus.groovy.tools.groovydoc.FileOutputTool",
     "groovy.json.internal.JsonParserLax",
     "groovy.lang.ExpandoMetaClass$1",
     "groovy.ui.Console$_compileScript_closure18$_closure36",
     "groovy.ui.Console$_compileScript_closure18$_closure37",
     "groovy.util.ResourceException",
     "groovy.ui.Console$_compileScript_closure18$_closure38",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitThrowStatement_closure16",
     "groovyjarjarantlr.ANTLRTokenTypes",
     "org.codehaus.groovy.runtime.dgm$340",
     "org.codehaus.groovy.ant.Groovydoc$1",
     "org.codehaus.groovy.classgen.EnumVisitor",
     "org.codehaus.groovy.runtime.dgm$462",
     "org.codehaus.groovy.groovydoc.GroovyType",
     "org.codehaus.groovy.runtime.dgm$463",
     "groovyjarjarasm.asm.util.TraceClassVisitor",
     "org.codehaus.groovy.runtime.dgm$464",
     "org.codehaus.groovy.transform.tailrec.VariableAccessReplacer",
     "org.codehaus.groovy.runtime.dgm$465",
     "org.codehaus.groovy.runtime.dgm$466",
     "org.codehaus.groovy.runtime.dgm$467",
     "org.codehaus.groovy.runtime.powerassert.PowerAssertionError",
     "org.codehaus.groovy.runtime.dgm$468",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure15",
     "org.codehaus.groovy.runtime.dgm$469",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure14",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure13",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure12",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure11",
     "org.codehaus.groovy.util.AbstractConcurrentMapBase",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getDefaultMethods_closure10",
     "groovy.mock.interceptor.MockProxyMetaClass",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitSwitch_closure21$_closure40",
     "org.codehaus.groovy.ast.ClassCodeExpressionTransformer",
     "org.codehaus.groovy.classgen.asm.InvocationWriter",
     "org.codehaus.groovy.tools.shell.util.PackageHelperImpl",
     "org.codehaus.groovy.runtime.DefaultGroovyStaticMethods",
     "org.codehaus.groovy.util.ManagedConcurrentMap",
     "groovyjarjarantlr.MismatchedCharException",
     "org.codehaus.groovy.runtime.dgm$470",
     "org.codehaus.groovy.runtime.dgm$471",
     "groovy.util.ProxyGenerator$1",
     "org.codehaus.groovy.runtime.dgm$472",
     "org.codehaus.groovy.runtime.dgm$473",
     "org.codehaus.groovy.bsf.GroovyEngine",
     "org.codehaus.groovy.runtime.dgm$474",
     "org.codehaus.groovy.tools.shell.Groovysh$_evaluateWithStoredBoundVars_closure4",
     "groovy.ui.view.GTKDefaults",
     "org.codehaus.groovy.runtime.dgm$475",
     "org.codehaus.groovy.runtime.dgm$476",
     "groovy.jmx.builder.JmxBeanExportFactory",
     "org.codehaus.groovy.runtime.dgm$477",
     "org.codehaus.groovy.vmplugin.v7.IndyInterface",
     "org.codehaus.groovy.runtime.dgm$478",
     "org.codehaus.groovy.tools.shell.completion.ImportsSyntaxCompletor$_findMatchingPreImportedClasses_closure2",
     "org.codehaus.groovy.runtime.dgm$479",
     "groovy.transform.builder.ExternalStrategy",
     "groovy.util.ObjectGraphBuilder$DefaultReferenceResolver",
     "groovy.sql.InOutParameter",
     "org.codehaus.groovy.runtime.ResourceGroovyMethods$1",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitSynchronizedStatement_closure28",
     "org.codehaus.groovy.ast.expr.TernaryExpression",
     "groovy.util.slurpersupport.Attributes",
     "org.codehaus.groovy.runtime.wrappers.ShortWrapper",
     "groovyjarjarantlr.preprocessor.Option",
     "org.codehaus.groovy.runtime.dgm$480",
     "org.codehaus.groovy.runtime.dgm$481",
     "groovyjarjarantlr.CharScanner",
     "org.codehaus.groovy.runtime.dgm$482",
     "org.codehaus.groovy.runtime.dgm$483",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure28",
     "org.codehaus.groovy.runtime.dgm$484",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure27",
     "org.codehaus.groovy.runtime.dgm$485",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure26",
     "org.codehaus.groovy.runtime.dgm$486",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure25",
     "org.codehaus.groovy.runtime.dgm$487",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesWriterControllerFactoryImpl",
     "org.codehaus.groovy.runtime.dgm$488",
     "org.codehaus.groovy.runtime.dgm$489",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure29",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure24",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure23",
     "groovy.util.ObservableSet$MultiElementRemovedEvent",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap$EntrySet",
     "org.codehaus.groovy.runtime.dgm$490",
     "org.codehaus.groovy.runtime.dgm$491",
     "org.codehaus.groovy.runtime.dgm$492",
     "org.codehaus.groovy.runtime.DefaultCachedMethodKey",
     "org.codehaus.groovy.runtime.dgm$493",
     "groovyjarjarantlr.debug.InputBufferEventSupport",
     "org.codehaus.groovy.runtime.dgm$494",
     "org.codehaus.groovy.runtime.dgm$495",
     "groovy.xml.StreamingMarkupBuilder$_closure2$_closure9$_closure10",
     "org.codehaus.groovy.runtime.dgm$496",
     "org.codehaus.groovy.runtime.dgm$497",
     "org.codehaus.groovy.runtime.dgm$498",
     "groovy.transform.CompileStatic",
     "org.codehaus.groovy.runtime.dgm$499",
     "org.codehaus.groovy.tools.shell.commands.LoadCommand$_load_closure1",
     "org.codehaus.groovy.transform.LogASTTransformation",
     "groovy.lang.ListWithDefault",
     "groovy.servlet.GroovyServlet$1",
     "groovy.util.FileNameByRegexFinder$_getFileNames_closure1",
     "org.codehaus.groovy.tools.shell.util.ScriptVariableAnalyzer$VisitorClassLoader",
     "org.codehaus.groovy.runtime.ClassExtender",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyAbstractableElementDoc",
     "org.codehaus.groovy.transform.ASTTestTransformation$AssertionSourceDelegatingSourceUnit",
     "groovy.text.markup.MarkupTemplateEngine$TemplateResource",
     "groovy.transform.TupleConstructor",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitField_closure15",
     "org.codehaus.groovy.tools.Utilities",
     "groovy.ui.ConsoleTextEditor$UndoAction",
     "org.codehaus.groovy.classgen.asm.BinaryExpressionHelper",
     "groovyjarjarantlr.debug.misc.ASTFrame",
     "org.codehaus.groovy.tools.DocGenerator$_main_closure15$_closure28",
     "groovy.inspect.swingui.TreeNodeBuildingNodeOperation$_makeClosureClassTreeNodes_closure2",
     "groovy.util.ObservableMap$PropertyRemovedEvent",
     "org.codehaus.groovy.tools.shell.util.HelpFormatter$_renderOptions_closure1",
     "groovy.inspect.swingui.TreeNodeBuildingNodeOperation$_makeClosureClassTreeNodes_closure1",
     "org.codehaus.groovy.tools.shell.util.HelpFormatter$_renderOptions_closure2",
     "org.codehaus.groovy.tools.RootLoader",
     "org.codehaus.groovy.tools.shell.util.HelpFormatter$_renderOptions_closure3",
     "org.codehaus.groovy.tools.shell.util.HelpFormatter$_renderOptions_closure4",
     "org.codehaus.groovy.tools.groovydoc.FileSystemResourceManager",
     "groovyjarjarantlr.TokenStreamRewriteEngine",
     "groovyjarjarantlr.TokenSymbol",
     "groovy.json.JsonSlurper$1",
     "groovy.transform.TypeChecked$TypeCheckingInfo",
     "groovyjarjarantlr.HTMLCodeGenerator",
     "groovyjarjarantlr.collections.impl.ASTArray",
     "org.codehaus.groovy.vmplugin.v5.JUnit4Utils",
     "org.codehaus.groovy.binding.EventTriggerBinding$EventTriggerFullBinding",
     "groovyjarjarasm.asm.commons.TableSwitchGenerator",
     "groovyjarjarasm.asm.commons.JSRInlinerAdapter$Instantiation",
     "org.codehaus.groovy.runtime.ArrayUtil",
     "groovy.ui.Console$_loadScriptFile_closure8$_closure27$_closure29",
     "groovy.lang.IntRange$1",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitFieldExpression_closure48",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.BooleanArrayPutAtMetaMethod$MyPojoMetaMethodSite",
     "org.codehaus.groovy.tools.shell.commands.InspectCommandCompletor$_getCandidates_closure1",
     "org.codehaus.groovy.runtime.callsite.DummyCallSite",
     "org.codehaus.groovy.transform.stc.SignatureCodec",
     "org.codehaus.groovy.ant.GenerateStubsTask",
     "org.codehaus.groovy.tools.shell.Groovysh$_evaluateWithStoredBoundVars_closure5",
     "org.codehaus.groovy.classgen.genDgmMath",
     "org.codehaus.groovy.runtime.memoize.Memoize$MemoizeFunction",
     "org.codehaus.groovy.tools.groovydoc.gstringTemplates.GroovyDocTemplateInfo",
     "org.codehaus.groovy.util.ArrayIterator",
     "groovy.lang.ParameterArray",
     "org.codehaus.groovy.util.AbstractConcurrentMapBase$Entry",
     "groovy.lang.MetaClassRegistryChangeEventListener",
     "org.codehaus.groovy.ast.stmt.SynchronizedStatement",
     "groovy.lang.GroovyShell",
     "groovyjarjarantlr.ImportVocabTokenManager",
     "groovy.ui.Console$_loadScriptFile_closure8$_closure27$_closure30",
     "groovy.swing.factory.TableFactory",
     "org.codehaus.groovy.transform.sc.transformers.StaticCompilationTransformer$1",
     "groovy.security.GroovyCodeSourcePermission",
     "org.codehaus.groovy.runtime.InvokerHelper$1",
     "groovy.grape.GrapeIvy$_resolve_closure13",
     "groovy.swing.binding.JTextComponentTextBinding",
     "groovy.grape.GrapeIvy$_resolve_closure12",
     "groovy.swing.SwingBuilder",
     "groovy.grape.GrapeIvy$_resolve_closure14",
     "groovy.swing.factory.RichActionWidgetFactory",
     "groovyjarjarantlr.ZeroOrMoreBlock",
     "groovy.swing.binding.AbstractButtonProperties",
     "groovy.jmx.builder.JmxBuilderException",
     "groovyjarjarantlr.ANTLRTokdefParser",
     "org.codehaus.groovy.ast.GenericsType$1",
     "groovy.ui.text.TextEditor",
     "org.codehaus.groovy.reflection.stdclasses.IntegerCachedClass",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitForLoop_closure2",
     "org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$StatementMeta",
     "org.codehaus.groovy.antlr.java.JavaLexer$1",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyDoc",
     "org.codehaus.groovy.tools.shell.commands.HistoryCommand",
     "org.codehaus.groovy.runtime.m12n.SimpleExtensionModule",
     "org.codehaus.groovy.transform.GroovyASTTransformation",
     "org.codehaus.groovy.tools.shell.ComplexCommandSupport",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitImport_closure6",
     "groovyjarjarantlr.TokenQueue",
     "groovyjarjarantlr.FileLineFormatter",
     "groovyjarjarantlr.CharLiteralElement",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesCallSiteWriter",
     "org.codehaus.groovy.transform.stc.GroovyTypeCheckingExtensionSupport$TypeCheckingDSL",
     "org.codehaus.groovy.runtime.FlushingStreamWriter",
     "groovy.beans.ListenerList",
     "org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSiteNoUnwrap",
     "groovy.util.ObjectGraphBuilder$ClassNameResolver",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitBreakStatement_closure13",
     "groovyjarjarcommonscli.BasicParser",
     "groovyjarjarantlr.debug.misc.JTreeASTPanel",
     "org.codehaus.groovy.tools.javac.JavacJavaCompiler",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$NormalMethodChooser",
     "org.codehaus.groovy.runtime.callsite.CallSiteGenerator",
     "org.codehaus.groovy.GroovyException",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.FloatArrayGetAtMetaMethod",
     "groovyjarjarasm.asm.Attribute",
     "org.codehaus.groovy.tools.shell.completion.NavigablePropertiesCompleter",
     "org.codehaus.groovy.tools.shell.Interpreter",
     "groovyjarjarantlr.JavaCodeGeneratorPrintWriterManager",
     "org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl",
     "groovy.lang.SpreadListEvaluatingException",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$LongFloat",
     "groovy.json.internal.NumberValue$1",
     "groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$5",
     "org.codehaus.groovy.tools.shell.completion.InfixKeywordSyntaxCompletor",
     "groovy.grape.GrapeIvy$_getDependencies_closure6",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.FloatArrayPutAtMetaMethod",
     "groovy.grape.GrapeIvy$_getDependencies_closure7",
     "groovy.grape.GrapeIvy$_getDependencies_closure5",
     "groovy.swing.binding.JComponentProperties$2$1",
     "groovy.servlet.ServletBinding$1",
     "org.codehaus.groovy.tools.shell.CommandRegistry",
     "groovy.inspect.swingui.AstBrowserUiPreferences",
     "org.codehaus.groovy.runtime.ScriptBytecodeAdapter",
     "groovy.inspect.swingui.TreeNodeBuildingNodeOperation",
     "org.codehaus.groovy.control.messages.SyntaxErrorMessage",
     "org.codehaus.groovy.groovydoc.GroovyDoc",
     "groovyjarjarantlr.debug.misc.ASTFrame$1",
     "groovy.lang.ExpandoMetaClass$SubClassDefiningClosure",
     "groovyjarjarantlr.CppCodeGenerator",
     "groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$4",
     "groovy.lang.GroovyResourceLoader",
     "groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$3",
     "groovy.json.internal.ArrayUtils",
     "groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$2",
     "groovyjarjarantlr.debug.TraceListener",
     "groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$1",
     "org.codehaus.groovy.ast.MixinASTTransformation",
     "org.codehaus.groovy.transform.stc.GroovyTypeCheckingExtensionSupport$1",
     "groovyjarjarasm.asm.signature.SignatureWriter",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitClosureExpression_closure27",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_makeListOfNodes_closure5",
     "org.codehaus.groovy.binding.ClosureSourceBinding",
     "groovy.lang.Script",
     "org.codehaus.groovy.binding.PropertyBinding",
     "org.codehaus.groovy.util.FastArray$1",
     "groovy.util.IFileNameFinder",
     "org.codehaus.groovy.groovydoc.GroovyAnnotationRef",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc",
     "groovy.transform.PackageScopeTarget",
     "org.codehaus.groovy.runtime.MethodRankHelper$Pair",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$LongLong",
     "groovy.ui.text.TextEditor$OvertypeCaret",
     "groovyjarjarantlr.ANTLRTokdefLexer",
     "groovy.util.ObservableList$ElementAddedEvent",
     "org.codehaus.groovy.control.StaticVerifier",
     "groovy.swing.binding.JComboBoxSelectedIndexBinding",
     "org.codehaus.groovy.antlr.java.Groovifier",
     "org.codehaus.groovy.reflection.SunClassLoader",
     "org.codehaus.groovy.runtime.metaclass.MethodSelectionException",
     "groovy.inspect.swingui.BytecodeCollector",
     "org.codehaus.groovy.runtime.ProxyGeneratorAdapter$InnerLoader",
     "groovy.util.Node",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitClosureListExpression_closure32",
     "groovy.ui.Console$_notifySystemOut_closure13$_closure31",
     "org.codehaus.groovy.control.customizers.CompilationCustomizer",
     "groovyjarjarantlr.TokenStreamException",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ObjectArrayPutAtMetaMethod$MyPojoMetaMethodSite",
     "groovy.lang.GroovyClassLoader$InnerLoader",
     "groovy.lang.Mixin",
     "org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptVisitor",
     "org.codehaus.groovy.tools.shell.commands.ShowCommand$_closure3$_closure7",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure13$_closure22",
     "groovy.lang.PropertyValue",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_makeNodeWithStringParameter_closure8",
     "groovy.beans.Vetoable",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitBinaryExpression_closure20",
     "groovy.transform.Synchronized",
     "groovy.lang.TracingInterceptor",
     "org.codehaus.groovy.classgen.asm.BinaryObjectExpressionHelper",
     "groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7",
     "org.codehaus.groovy.ast.expr.ClosureListExpression",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$DropWhileIterator",
     "org.codehaus.groovy.transform.TimedInterruptibleASTTransformation$TimedInterruptionVisitor",
     "org.codehaus.groovy.ast.builder.AstStringCompiler",
     "org.codehaus.groovy.ast.GenericsType$GenericsTypeMatcher",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_fieldNode_closure23",
     "org.codehaus.groovy.reflection.GroovyClassValuePreJava7",
     "groovyjarjarantlr.InputBuffer",
     "groovyjarjarantlr.SimpleTokenManager",
     "groovy.json.internal.Type",
     "groovyjarjarasm.asm.commons.InstructionAdapter",
     "groovy.swing.factory.EtchedBorderFactory",
     "org.codehaus.groovy.antlr.treewalker.SourcePrinter",
     "groovy.util.slurpersupport.NamespaceAwareHashMap",
     "org.codehaus.groovy.control.ClassNodeResolver$LookupResult",
     "groovyjarjarasm.asm.ClassWriter",
     "org.codehaus.groovy.classgen.asm.ClosureWriter",
     "groovy.ui.text.TextEditor$TabAction",
     "org.codehaus.groovy.tools.shell.commands.DocCommand",
     "org.codehaus.groovy.antlr.treewalker.MindMapPrinter",
     "groovyjarjarantlr.collections.List",
     "org.codehaus.groovy.tools.shell.util.PackageHelperImpl$_mergeNewPackages_closure2",
     "groovy.mock.interceptor.MockFor",
     "groovy.util.NodePrinter",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ArrayPutAtMetaMethod",
     "groovy.inspect.swingui.AstBrowser$_decompile_closure6$_closure40",
     "org.codehaus.groovy.tools.shell.util.ScriptVariableAnalyzer$VisitorSourceOperation",
     "groovy.inspect.swingui.AstBrowser$_decompile_closure6$_closure41",
     "org.codehaus.groovy.tools.shell.Main$_startGroovysh_closure3",
     "groovyjarjarantlr.actions.cpp.ActionLexerTokenTypes",
     "org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce",
     "groovy.util.slurpersupport.NodeChildren$1",
     "groovy.swing.factory.SwingBorderFactory",
     "groovy.util.slurpersupport.NodeChildren$2",
     "org.codehaus.groovy.runtime.ConvertedClosure",
     "groovy.util.slurpersupport.NodeChildren$3",
     "org.codehaus.groovy.transform.sc.transformers.StaticMethodCallExpressionTransformer",
     "groovy.util.ObservableList$ElementUpdatedEvent",
     "org.codehaus.groovy.runtime.callsite.GroovySunClassLoader$1",
     "org.codehaus.groovy.util.AbstractConcurrentDoubleKeyMap",
     "org.codehaus.groovy.runtime.callsite.GroovySunClassLoader$2",
     "groovy.lang.ExpandoMetaClass$ExpandoMetaConstructor",
     "org.codehaus.groovy.classgen.asm.CompileStack$LabelRange",
     "groovy.util.ConfigSlurper$_parse_closure6",
     "groovy.util.ConfigSlurper$_parse_closure5",
     "groovy.util.ConfigSlurper$_parse_closure4",
     "groovy.util.ConfigSlurper$_parse_closure3",
     "groovy.beans.ListenerListASTTransformation$_visit_closure2",
     "groovy.lang.ExpandoMetaClassCreationHandle",
     "groovy.util.ConfigSlurper$_parse_closure2",
     "groovy.util.ConfigSlurper$_parse_closure1",
     "groovy.beans.ListenerListASTTransformation$_visit_closure1",
     "org.codehaus.groovy.tools.shell.util.DefaultCommandsRegistrar",
     "org.codehaus.groovy.runtime.HandleMetaClass",
     "org.codehaus.groovy.runtime.callsite.CallSiteArray$1",
     "org.codehaus.groovy.syntax.ASTHelper",
     "org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap",
     "groovy.text.markup.MarkupTemplateEngine$DefaultTemplateResolver",
     "groovy.ui.text.FindReplaceUtility",
     "groovy.ui.text.AutoIndentAction$_actionPerformed_closure1",
     "groovy.lang.MetaBeanProperty",
     "org.codehaus.groovy.runtime.memoize.NullProtectionStorage",
     "org.codehaus.groovy.tools.DocGenerator$_parseSource_closure2$_closure19",
     "org.codehaus.groovy.runtime.GroovyCategorySupport$MyThreadLocal",
     "org.codehaus.groovy.tools.shell.commands.SetCommand$_createCompleters_closure1",
     "org.codehaus.groovy.tools.shell.CommandSupport$_getCompleter_closure1",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$FloatFloat",
     "groovy.lang.StringWriterIOException",
     "org.codehaus.groovy.antlr.AntlrParserPluginFactory",
     "groovyjarjarantlr.build.Tool",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_member_closure14",
     "org.codehaus.groovy.classgen.asm.OperandStack",
     "groovy.inspect.swingui.TreeNodeBuildingNodeOperation$_doCollectMethodData_closure6$_closure8",
     "org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorWithString",
     "groovyjarjarantlr.debug.Tracer",
     "org.codehaus.groovy.runtime.wrappers.GroovyObjectWrapper",
     "org.codehaus.groovy.runtime.typehandling.ShortTypeHandling",
     "org.codehaus.groovy.runtime.EncodingGroovyMethods$2",
     "org.codehaus.groovy.runtime.EncodingGroovyMethods$1",
     "groovyjarjarantlr.CommonASTWithHiddenTokens",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$IntegerLong",
     "org.codehaus.groovy.runtime.m12n.StandardPropertiesModuleFactory",
     "org.codehaus.groovy.tools.shell.util.CachedPackage",
     "org.codehaus.groovy.runtime.metaclass.MixinInstanceMetaProperty$2",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitSynchronizedStatement_closure15",
     "org.codehaus.groovy.runtime.metaclass.MixinInstanceMetaProperty$1",
     "org.codehaus.groovy.runtime.callsite.ConstructorMetaMethodSite",
     "org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSiteNoUnwrapNoCoerce",
     "groovy.json.internal.ValueList",
     "groovy.util.ObservableMap$PropertyEvent",
     "org.codehaus.groovy.transform.AbstractASTTransformUtil",
     "org.codehaus.groovy.util.ComplexKeyHashMap$Entry",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.BooleanArrayGetAtMetaMethod$MyPojoMetaMethodSite",
     "groovy.util.FileNameFinder",
     "groovy.transform.NotYetImplemented",
     "groovy.jmx.builder.JmxBuilderModelMBean$NumberSequencer",
     "groovy.util.ObjectGraphBuilder$DefaultNewInstanceResolver",
     "org.codehaus.groovy.ast.PackageNode",
     "org.codehaus.groovy.runtime.powerassert.ValueRecorder",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitListOfExpressions_closure54$_closure57",
     "org.codehaus.groovy.runtime.wrappers.DoubleWrapper",
     "groovyjarjarantlr.PrintWriterWithSMAP",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$NumberNumber",
     "org.codehaus.groovy.reflection.CachedClass$3$1",
     "org.codehaus.groovy.runtime.dgm$400",
     "org.codehaus.groovy.runtime.dgm$401",
     "org.codehaus.groovy.runtime.dgm$402",
     "org.codehaus.groovy.runtime.dgm$403",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc",
     "org.codehaus.groovy.runtime.dgm$404",
     "org.codehaus.groovy.runtime.dgm$405",
     "org.codehaus.groovy.runtime.dgm$406",
     "groovy.transform.builder.InitializerStrategy",
     "org.codehaus.groovy.runtime.dgm$407",
     "groovy.swing.factory.PropertyColumnFactory",
     "org.codehaus.groovy.runtime.dgm$408",
     "groovyjarjarcommonscli.ParseException",
     "org.codehaus.groovy.runtime.dgm$409",
     "org.codehaus.groovy.runtime.metaclass.MultipleSetterProperty",
     "org.codehaus.groovy.tools.shell.commands.SetCommand$_createCompleters_closure1$_closure3",
     "org.codehaus.groovy.classgen.genDgmMath$_run_closure1",
     "org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce",
     "org.codehaus.groovy.util.LockableObject",
     "groovy.swing.binding.JComponentProperties",
     "groovy.jmx.builder.JmxBuilderModelMBean",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesBinaryExpressionMultiTypeDispatcher",
     "org.codehaus.groovy.runtime.dgm$410",
     "org.codehaus.groovy.runtime.InvokerHelper",
     "org.codehaus.groovy.runtime.dgm$411",
     "org.codehaus.groovy.runtime.dgm$412",
     "org.codehaus.groovy.runtime.dgm$413",
     "org.codehaus.groovy.runtime.dgm$414",
     "groovy.swing.impl.ClosureRenderer",
     "org.codehaus.groovy.runtime.dgm$415",
     "org.codehaus.groovy.runtime.dgm$416",
     "org.codehaus.groovy.runtime.dgm$417",
     "org.codehaus.groovy.runtime.dgm$418",
     "org.codehaus.groovy.runtime.dgm$419",
     "groovy.ui.HistoryRecord$_getTextToRun_closure1",
     "org.codehaus.groovy.antlr.ASTRuntimeException",
     "org.codehaus.groovy.runtime.callsite.NullCallSite",
     "org.codehaus.groovy.runtime.metaclass.MissingMethodExceptionNoStack",
     "org.codehaus.groovy.testng.TestNgRunner",
     "org.codehaus.groovy.runtime.dgm$420",
     "org.codehaus.groovy.runtime.dgm$421",
     "org.codehaus.groovy.runtime.dgm$422",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayPutAtMetaMethod",
     "org.codehaus.groovy.runtime.dgm$423",
     "org.codehaus.groovy.runtime.dgm$424",
     "org.codehaus.groovy.runtime.dgm$425",
     "org.codehaus.groovy.runtime.dgm$426",
     "org.codehaus.groovy.transform.CanonicalASTTransformation",
     "groovy.util.ObjectGraphBuilder$ObjectFactory",
     "groovyjarjarantlr.GrammarAnalyzer",
     "org.codehaus.groovy.runtime.dgm$427",
     "org.codehaus.groovy.runtime.dgm$428",
     "org.codehaus.groovy.runtime.dgm$429",
     "org.codehaus.groovy.classgen.asm.StatementWriter",
     "org.codehaus.groovy.transform.TimedInterruptibleASTTransformation$_visit_closure1",
     "org.codehaus.groovy.ast.Variable",
     "org.codehaus.groovy.transform.TimedInterruptibleASTTransformation$_visit_closure2",
     "groovy.util.slurpersupport.NodeChildren",
     "org.codehaus.groovy.runtime.ExceptionUtils",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$IntegerLong",
     "groovy.sql.ExtractIndexAndSql",
     "groovyjarjarantlr.collections.impl.VectorEnumeration",
     "org.codehaus.groovy.transform.sc.ListOfExpressionsExpression",
     "org.codehaus.groovy.classgen.genMathModification",
     "groovy.xml.dom.DOMCategory$NodesHolder",
     "org.codehaus.groovy.runtime.dgm$430",
     "org.codehaus.groovy.runtime.dgm$431",
     "org.codehaus.groovy.runtime.dgm$432",
     "groovy.util.IndentPrinter",
     "groovyjarjarasm.asm.Item",
     "org.codehaus.groovy.runtime.dgm$433",
     "org.codehaus.groovy.runtime.dgm$434",
     "org.codehaus.groovy.runtime.dgm$435",
     "org.codehaus.groovy.runtime.dgm$436",
     "org.codehaus.groovy.runtime.dgm$437",
     "org.codehaus.groovy.runtime.dgm$438",
     "org.codehaus.groovy.runtime.dgm$439",
     "org.codehaus.groovy.tools.DocGenerator$__clinit__closure18",
     "org.codehaus.groovy.tools.groovydoc.Main$_collectSourceFileNames_closure3$_closure4",
     "groovy.util.Expando",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayGetAtMetaMethod$MyPojoMetaMethodSite",
     "groovy.util.ObjectGraphBuilder$DefaultIdentifierResolver",
     "groovy.swing.factory.CollectionFactory",
     "org.codehaus.groovy.runtime.dgm$440",
     "org.codehaus.groovy.runtime.dgm$441",
     "org.codehaus.groovy.runtime.dgm$442",
     "org.codehaus.groovy.runtime.callsite.PojoMetaClassSite",
     "org.codehaus.groovy.runtime.dgm$443",
     "org.codehaus.groovy.runtime.dgm$444",
     "org.codehaus.groovy.runtime.dgm$445",
     "org.codehaus.groovy.runtime.dgm$446",
     "org.codehaus.groovy.runtime.dgm$447",
     "org.codehaus.groovy.runtime.dgm$448",
     "org.codehaus.groovy.runtime.dgm$449",
     "groovyjarjarantlr.CharRangeElement",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitSwitch_closure11",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$_run_closure4",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$_run_closure5",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$_run_closure6",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$_run_closure1",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$LongInteger",
     "org.codehaus.groovy.runtime.wrappers.FloatWrapper",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$_run_closure2",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$_run_closure3",
     "groovyjarjarcommonscli.UnrecognizedOptionException",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitListOfExpressions_closure54",
     "org.codehaus.groovy.reflection.android.AndroidSupport",
     "org.codehaus.groovy.runtime.dgm$450",
     "groovy.json.internal.CharBuf$1",
     "org.codehaus.groovy.runtime.dgm$451",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ObjectArrayGetAtMetaMethod",
     "org.codehaus.groovy.runtime.dgm$452",
     "org.codehaus.groovy.runtime.dgm$453",
     "org.codehaus.groovy.runtime.dgm$454",
     "org.codehaus.groovy.runtime.dgm$455",
     "org.codehaus.groovy.runtime.dgm$456",
     "org.codehaus.groovy.runtime.dgm$457",
     "org.codehaus.groovy.runtime.dgm$458",
     "org.codehaus.groovy.runtime.dgm$459",
     "groovy.inspect.swingui.SwingTreeNodeMaker",
     "groovy.model.ValueHolder",
     "org.codehaus.groovy.ast.stmt.SwitchStatement",
     "org.codehaus.groovy.control.ProcessingUnit",
     "groovy.transform.ThreadInterrupt",
     "groovy.json.JsonException",
     "org.codehaus.groovy.tools.DocGenerator$DocMethod$_getParameterComments_closure3",
     "org.codehaus.groovy.runtime.dgm$460",
     "org.codehaus.groovy.runtime.dgm$461",
     "org.codehaus.groovy.runtime.dgm$583",
     "org.codehaus.groovy.runtime.dgm$584",
     "org.codehaus.groovy.antlr.java.PreJava2GroovyConverter",
     "org.codehaus.groovy.runtime.dgm$585",
     "org.codehaus.groovy.runtime.dgm$586",
     "groovy.text.markup.TagLibAdapter",
     "org.codehaus.groovy.binding.TargetBinding",
     "org.codehaus.groovy.runtime.dgm$587",
     "org.codehaus.groovy.runtime.dgm$588",
     "org.codehaus.groovy.runtime.dgm$589",
     "org.codehaus.groovy.runtime.MethodRankHelper$NullObject",
     "groovy.transform.stc.FirstParam$SecondGenericType",
     "groovyjarjarantlr.debug.ParseTreeDebugParser",
     "org.codehaus.groovy.runtime.dgm$590",
     "org.codehaus.groovy.runtime.XmlGroovyMethods",
     "org.codehaus.groovy.runtime.dgm$591",
     "org.codehaus.groovy.transform.InheritConstructorsASTTransformation",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitTryCatchFinally_closure9",
     "groovy.swing.binding.AbstractSyntheticMetaMethods",
     "org.codehaus.groovy.runtime.dgm$592",
     "org.codehaus.groovy.runtime.dgm$593",
     "groovy.transform.Trait",
     "org.codehaus.groovy.runtime.dgm$594",
     "org.codehaus.groovy.transform.stc.GroovyTypeCheckingExtensionSupport",
     "org.codehaus.groovy.runtime.dgm$595",
     "org.codehaus.groovy.runtime.dgm$596",
     "org.codehaus.groovy.runtime.dgm$597",
     "groovy.transform.WithWriteLock",
     "org.codehaus.groovy.runtime.dgm$598",
     "org.codehaus.groovy.runtime.dgm$599",
     "org.codehaus.groovy.tools.DocGenerator$_main_closure17$_closure29",
     "org.codehaus.groovy.util.ManagedLinkedList$Element",
     "groovy.text.StreamingTemplateEngine$StreamingTemplate$StringSection",
     "org.codehaus.groovy.runtime.callsite.GroovySunClassLoader",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap$KeyIterator",
     "groovy.ui.ConsoleActions",
     "org.codehaus.groovy.classgen.asm.CompileStack",
     "groovy.swing.factory.ButtonGroupFactory",
     "org.codehaus.groovy.tools.shell.commands.DocCommand$_doc_closure2",
     "org.codehaus.groovy.ast.VariableScope",
     "org.codehaus.groovy.runtime.callsite.ConstructorSite",
     "groovy.json.JsonLexer",
     "groovy.lang.MetaClassImpl$13",
     "groovy.lang.MetaClassImpl$12",
     "groovy.lang.MetaClassImpl$11",
     "groovy.lang.MetaClassImpl$10",
     "groovy.lang.MetaClassImpl$17",
     "groovy.lang.MetaClassImpl$16",
     "groovy.lang.MetaClassImpl$15",
     "groovy.lang.MetaClassImpl$14",
     "org.codehaus.groovy.transform.LogASTTransformation$1",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$_run_closure2$_closure8",
     "org.codehaus.groovy.transform.sc.transformers.StaticCompilationTransformer",
     "org.codehaus.groovy.transform.stc.DelegationMetadata",
     "groovy.ui.ConsoleTextEditor$LineNumbersPanel",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayGetAtMetaMethod",
     "org.codehaus.groovy.control.io.FileReaderSource",
     "groovy.lang.MissingClassException",
     "org.codehaus.groovy.tools.DocGenerator$_main_closure17",
     "org.codehaus.groovy.tools.DocGenerator$_main_closure15",
     "org.codehaus.groovy.tools.DocGenerator$_main_closure16",
     "org.codehaus.groovy.tools.shell.commands.ShowCommand$_closure4$_closure8",
     "groovy.swing.binding.JListProperties$1",
     "groovy.text.markup.MarkupTemplateEngine$CachingTemplateResolver",
     "org.codehaus.groovy.runtime.metaclass.MethodMetaProperty",
     "groovy.swing.binding.JListProperties$7",
     "org.codehaus.groovy.transform.tailrec.ReturnStatementToIterationConverter$_convert_closure1",
     "groovy.swing.binding.JListProperties$6",
     "org.codehaus.groovy.transform.tailrec.ReturnStatementToIterationConverter$_convert_closure2",
     "groovy.swing.binding.JListProperties$3",
     "groovy.swing.binding.JListProperties$2",
     "groovy.swing.binding.JListProperties$5",
     "groovy.swing.binding.JListProperties$4",
     "org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrap",
     "org.codehaus.groovy.tools.DocGenerator$DocMethod$_getParametersDocUrl_closure2",
     "org.codehaus.groovy.transform.AutoCloneASTTransformation$1",
     "groovy.util.XmlNodePrinter",
     "org.codehaus.groovy.tools.shell.PatchedConsoleReader",
     "org.codehaus.groovy.tools.GrapeUtil",
     "groovyjarjarantlr.PythonCharFormatter",
     "groovy.util.ObservableList$MultiElementRemovedEvent",
     "org.codehaus.groovy.transform.sc.transformers.VariableExpressionTransformer",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.LongArrayGetAtMetaMethod$MyPojoMetaMethodSite",
     "groovy.json.JsonTokenType",
     "org.codehaus.groovy.ast.stmt.ForStatement",
     "org.codehaus.groovy.binding.ClosureTriggerBinding$1",
     "org.codehaus.groovy.tools.DocGenerator$DocSource$_getAllDocTypes_closure5",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitTryCatchFinally_closure27",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitTryCatchFinally_closure25",
     "groovy.io.LineColumnReader",
     "org.codehaus.groovy.ast.expr.NotExpression",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitTryCatchFinally_closure26",
     "org.codehaus.groovy.reflection.CachedClass",
     "org.codehaus.groovy.transform.trait.TraitComposer",
     "org.codehaus.groovy.transform.tailrec.VariableReplacedListener",
     "org.codehaus.groovy.tools.shell.util.PackageHelperImpl$_getPackagesAndClassesFromJigsaw_closure7",
     "groovyjarjarasm.asm.commons.RemappingAnnotationAdapter",
     "org.codehaus.groovy.tools.shell.commands.DocCommand$__clinit__closure1",
     "groovy.beans.DefaultPropertyWriter",
     "groovyjarjarcommonscli.MissingArgumentException",
     "groovy.transform.stc.ClosureSignatureHint",
     "groovy.util.ResourceConnector",
     "groovy.swing.binding.JListProperties",
     "groovy.util.ObjectGraphBuilder$ChildPropertySetter",
     "groovy.json.internal.LazyValueMap",
     "groovy.text.StreamingTemplateEngine$1",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure9$_closure17$_closure19",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure9$_closure17$_closure18",
     "groovyjarjarantlr.NameSpace",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitBlockStatement_closure1",
     "groovyjarjarasm.asm.tree.LocalVariableAnnotationNode",
     "groovy.util.AbstractFactory",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$LongInteger",
     "groovyjarjarantlr.BaseAST",
     "org.codehaus.groovy.ast.expr.ClassExpression",
     "org.codehaus.groovy.runtime.SwingGroovyMethods$1",
     "org.codehaus.groovy.tools.shell.commands.RecordCommand$_recordError_closure5",
     "org.codehaus.groovy.runtime.SwingGroovyMethods$2",
     "org.codehaus.groovy.runtime.SwingGroovyMethods$3",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_getMetaclassMethods_closure4",
     "org.codehaus.groovy.runtime.SwingGroovyMethods$4",
     "groovy.jmx.builder.JmxOperationInfoManager$_getOperationInfosFromMap_closure3",
     "org.codehaus.groovy.runtime.SwingGroovyMethods$5",
     "org.codehaus.groovy.runtime.SwingGroovyMethods$6",
     "org.codehaus.groovy.runtime.SwingGroovyMethods$7",
     "groovyjarjarantlr.ANTLRHashString",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitAssertStatement_closure8",
     "groovyjarjarantlr.ParseTreeToken",
     "org.codehaus.groovy.antlr.Main",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitPrefixExpression_closure24",
     "org.codehaus.groovy.reflection.ClassInfo$LazyClassLoaderRef",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$BuilderMethodReplacer",
     "org.codehaus.groovy.transform.tailrec.InWhileLoopWrapper",
     "org.codehaus.groovy.ast.expr.VariableExpression",
     "groovy.swing.factory.BindProxyFactory",
     "org.codehaus.groovy.ant.GroovycTask",
     "org.codehaus.groovy.jsr223.GroovyScriptEngineImpl",
     "groovy.transform.TypeCheckingMode",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitIfElse_closure5",
     "org.codehaus.groovy.jsr223.ScriptExtensions",
     "org.codehaus.groovy.reflection.ClassInfo",
     "org.codehaus.groovy.transform.ConditionalInterruptibleASTTransformation",
     "groovy.xml.MarkupBuilder",
     "org.codehaus.groovy.runtime.powerassert.SourceText",
     "org.codehaus.groovy.binding.SwingTimerFullBinding",
     "groovyjarjarcommonscli.AlreadySelectedException",
     "groovy.lang.Tuple",
     "groovy.util.ObjectGraphBuilder$3",
     "groovy.util.ObjectGraphBuilder$2",
     "groovy.util.ObjectGraphBuilder$1",
     "org.codehaus.groovy.control.messages.LocatedMessage",
     "groovy.util.ObjectGraphBuilder$9",
     "org.codehaus.groovy.util.ComplexKeyHashMap$EntryIterator",
     "groovy.util.ObjectGraphBuilder$8",
     "groovy.util.ObjectGraphBuilder$7",
     "groovy.util.ObjectGraphBuilder$6",
     "groovy.util.ObjectGraphBuilder$5",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitGenerics_closure10$_closure38",
     "groovy.util.ObjectGraphBuilder$4",
     "groovy.swing.factory.ColumnFactory",
     "groovyjarjarcommonscli.CommandLine",
     "groovy.transform.AutoClone",
     "groovyjarjarantlr.debug.SemanticPredicateAdapter",
     "org.codehaus.groovy.tools.groovydoc.GroovyDocWriter",
     "groovy.ui.OutputTransforms$ObjectHolder_localTransforms",
     "groovy.xml.StreamingSAXBuilder$_processBody_closure5",
     "org.codehaus.groovy.runtime.callsite.BooleanReturningMethodInvoker",
     "groovy.inspect.swingui.AstNodeToScriptVisitor",
     "org.codehaus.groovy.transform.trait.TraitComposer$1",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$LongInteger",
     "org.codehaus.groovy.classgen.VariableScopeVisitor$StateStackElement",
     "groovyjarjarantlr.ExceptionHandler",
     "groovy.inspect.swingui.TreeNodeWithProperties",
     "groovy.servlet.ServletBinding$ServletOutput$2",
     "groovy.util.FileTreeBuilder",
     "groovy.grape.GrapeIvy$_closure1",
     "groovy.servlet.ServletBinding$ServletOutput$1",
     "groovy.util.logging.Log$JavaUtilLoggingStrategy",
     "org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2",
     "org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure1",
     "groovyjarjarantlr.debug.ParserMatchAdapter",
     "org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure4",
     "org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure3",
     "groovyjarjarantlr.TokenBuffer",
     "org.codehaus.groovy.runtime.callsite.BooleanClosureWrapper",
     "org.codehaus.groovy.classgen.InnerClassVisitor",
     "groovy.ui.ConsoleApplet",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$FloatLong",
     "groovyjarjarantlr.RuleRefElement",
     "org.codehaus.groovy.tools.shell.completion.IdentifierCompletor",
     "groovy.xml.StreamingSAXBuilder$_bind_closure6",
     "groovy.lang.DelegatesTo",
     "groovyjarjarasm.asm.tree.JumpInsnNode",
     "groovy.transform.SourceURI",
     "groovyjarjarantlr.CharStreamException",
     "org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder",
     "org.codehaus.groovy.runtime.memoize.UnlimitedConcurrentCache",
     "groovy.jmx.builder.JmxBuilder",
     "groovyjarjarantlr.collections.impl.VectorEnumerator",
     "org.codehaus.groovy.reflection.stdclasses.BooleanCachedClass",
     "groovy.jmx.builder.JmxListenerFactory",
     "groovyjarjarantlr.LexerSharedInputState",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyPackageDoc",
     "groovy.swing.factory.GlueFactory",
     "groovyjarjarasm.asm.Handler",
     "groovy.sql.Sql$CreateStatementCommand",
     "groovy.ui.view.BasicToolBar",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$LongLong",
     "groovy.grape.GrapeIvy$_enumerateGrapes_closure11$_closure22",
     "org.codehaus.groovy.tools.shell.util.PackageHelperImpl$_getClassnames_closure6",
     "org.codehaus.groovy.groovydoc.GroovyParameter",
     "org.codehaus.groovy.control.customizers.builder.ASTTransformationCustomizerFactory",
     "org.codehaus.groovy.transform.AnnotationCollectorTransform$ClassChanger",
     "org.codehaus.groovy.classgen.asm.CompileStack$BlockRecorder",
     "groovy.swing.binding.JComponentProperties$1$1",
     "org.codehaus.groovy.jsr223.GroovyScriptEngineFactory",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitConstructorCallExpression_closure19",
     "groovy.ui.Console$_comment_closure20",
     "org.codehaus.groovy.tools.shell.util.PackageHelperImpl$_getClassnames_closure5",
     "org.codehaus.groovy.ast.expr.ClosureExpression",
     "groovy.grape.IvyGrabRecord",
     "org.codehaus.groovy.ast.expr.AttributeExpression",
     "groovy.ui.Console$_comment_closure19",
     "groovyjarjarantlr.ANTLRLexer",
     "org.codehaus.groovy.ast.tools.WideningCategories$LowestUpperBoundClassNode",
     "org.codehaus.groovy.control.ResolveVisitor$ConstructedClassWithPackage",
     "groovy.grape.GrapeIvy$_processRunners_closure4",
     "org.codehaus.groovy.classgen.asm.ClosureWriter$1",
     "org.codehaus.groovy.classgen.asm.ClosureWriter$2",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11$_closure31$_closure32",
     "org.codehaus.groovy.classgen.asm.BytecodeHelper",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ArrayGetAtMetaMethod",
     "groovy.text.markup.MarkupTemplateEngine$MarkupTemplateMaker",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitParameters_closure11",
     "org.codehaus.groovy.tools.shell.Interpreter$_evaluate_closure1",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyMemberDoc",
     "org.codehaus.groovy.tools.shell.Interpreter$_evaluate_closure2",
     "groovy.ui.text.AutoIndentAction",
     "org.codehaus.groovy.tools.GrapeMain$_closure3$_closure15",
     "groovy.swing.factory.LayoutFactory",
     "groovy.inspect.swingui.ScriptToTreeNodeAdapter$_getPropertyTable_closure4",
     "groovy.inspect.swingui.ScriptToTreeNodeAdapter$_getPropertyTable_closure3",
     "groovy.inspect.swingui.ScriptToTreeNodeAdapter$_getPropertyTable_closure2",
     "groovy.util.ObservableSet$ElementClearedEvent",
     "org.codehaus.groovy.control.io.AbstractReaderSource",
     "org.codehaus.groovy.tools.groovydoc.Main$_collectSourceFileNames_closure3",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_method_closure20",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure10$_closure23$_closure24",
     "org.codehaus.groovy.classgen.asm.ExpressionAsVariableSlot",
     "groovy.lang.MetaClassImpl$MetaConstructor",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingVisitor$VariableExpressionTypeMemoizer",
     "groovyjarjarantlr.SynPredBlock",
     "groovy.ui.Console$_notifySystemOut_closure13",
     "groovy.json.internal.NumberValue",
     "groovy.transform.WithReadLock",
     "groovy.ui.Console$_notifySystemOut_closure12",
     "org.codehaus.groovy.antlr.LexerFrame$1",
     "groovyjarjarcommonscli.CommandLineParser",
     "groovy.xml.SAXBuilder",
     "groovyjarjarasm.asm.commons.LocalVariablesSorter",
     "org.codehaus.groovy.control.SourceUnit$1",
     "org.codehaus.groovy.antlr.LexerFrame$2",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$FloatInteger",
     "org.codehaus.groovy.ast.MixinNode",
     "org.codehaus.groovy.classgen.asm.indy.IndyCallSiteWriter",
     "org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport",
     "org.codehaus.groovy.runtime.typehandling.NumberMathModificationInfo",
     "groovyjarjarantlr.ANTLRStringBuffer",
     "groovyjarjarasm.asm.tree.TryCatchBlockNode",
     "org.codehaus.groovy.runtime.callsite.PogoGetPropertySite",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc",
     "org.codehaus.groovy.ast.GroovyClassVisitor",
     "groovy.util.Eval",
     "groovy.util.FactoryBuilderSupport$1",
     "org.codehaus.groovy.ast.AnnotatedNode",
     "org.codehaus.groovy.runtime.callsite.MetaMethodSite",
     "groovy.ui.view.BasicMenuBar$_run_closure1",
     "groovyjarjarasm.asm.commons.JSRInlinerAdapter",
     "org.codehaus.groovy.control.HasCleanup",
     "groovy.inspect.swingui.AstBrowser$_closure1",
     "groovyjarjarantlr.TokenWithIndex",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$IntegerInteger",
     "org.codehaus.groovy.runtime.callsite.CallSite",
     "org.codehaus.groovy.vmplugin.v7.IndyMath",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitClass_closure9",
     "org.codehaus.groovy.classgen.BytecodeExpression$1",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitClass_closure8",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitClass_closure7",
     "org.codehaus.groovy.control.customizers.builder.ImportCustomizerFactory$1",
     "groovy.util.GroovyScriptEngine$ScriptClassLoader$2",
     "org.codehaus.groovy.runtime.MethodRankHelper$RankableConstructor",
     "groovy.util.GroovyScriptEngine$ScriptClassLoader$1",
     "groovyjarjarantlr.preprocessor.Preprocessor",
     "org.codehaus.groovy.classgen.asm.BinaryExpressionMultiTypeDispatcher$BinaryByteExpressionHelper",
     "groovy.util.GroovyScriptEngine$ScriptClassLoader$3",
     "groovyjarjarcommonscli.MissingOptionException",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure11$_closure17",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure11$_closure16",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure11$_closure15",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure11$_closure14",
     "org.codehaus.groovy.runtime.m12n.MetaInfExtensionModule",
     "org.codehaus.groovy.ant.UberCompileTask",
     "org.codehaus.groovy.tools.GrapeMain$_closure2$_closure10$_closure13",
     "org.codehaus.groovy.classgen.AnnotationVisitor",
     "groovy.sql.SqlWithParams",
     "groovy.ui.text.FindReplaceUtility$ReplaceAction",
     "org.codehaus.groovy.tools.groovydoc.MockOutputTool",
     "org.codehaus.groovy.tools.groovydoc.Main$_main_closure1",
     "org.codehaus.groovy.util.AbstractConcurrentDoubleKeyMap$Segment",
     "groovyjarjarasm.asm.TypeReference",
     "org.codehaus.groovy.tools.groovydoc.Main$_main_closure2",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitUnaryPlusExpression_closure39",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitAllImports_closure1",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitAllImports_closure2",
     "groovy.swing.factory.RigidAreaFactory",
     "groovy.transform.stc.MapEntryOrKeyValue$Options",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitAllImports_closure3",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitAllImports_closure4",
     "org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesUnaryExpressionHelper$3",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesUnaryExpressionHelper$2",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesUnaryExpressionHelper$1",
     "org.codehaus.groovy.tools.shell.commands.InspectCommand",
     "org.codehaus.groovy.classgen.BytecodeInstruction",
     "groovyjarjarasm.asm.tree.FrameNode",
     "groovy.transform.InheritConstructors",
     "org.codehaus.groovy.runtime.EncodingGroovyMethods",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer$_visitIfElse_closure4",
     "org.codehaus.groovy.classgen.EnumCompletionVisitor",
     "org.codehaus.groovy.ast.ASTNode",
     "org.codehaus.groovy.ast.expr.TupleExpression",
     "org.codehaus.groovy.runtime.metaclass.TransformMetaMethod",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer$_visitIfElse_closure5",
     "org.codehaus.groovy.control.messages.WarningMessage",
     "groovy.util.FactoryBuilderSupport$2",
     "org.codehaus.groovy.ast.expr.ExpressionTransformer",
     "org.codehaus.groovy.ast.expr.MethodPointerExpression",
     "groovyjarjarasm.asm.commons.RemappingMethodAdapter",
     "groovy.json.internal.ReaderCharacterSource",
     "org.codehaus.groovy.classgen.asm.sc.StaticPropertyAccessHelper$PoppingListOfExpressionsExpression",
     "org.codehaus.groovy.groovydoc.GroovyTag",
     "org.codehaus.groovy.util.Reference",
     "org.codehaus.groovy.runtime.dgm$500",
     "org.codehaus.groovy.runtime.dgm$501",
     "org.codehaus.groovy.runtime.dgm$502",
     "org.codehaus.groovy.runtime.dgm$503",
     "org.codehaus.groovy.runtime.dgm$504",
     "groovyjarjarantlr.CommonAST",
     "org.codehaus.groovy.runtime.dgm$505",
     "org.codehaus.groovy.runtime.dgm$506",
     "org.codehaus.groovy.runtime.dgm$507",
     "org.codehaus.groovy.runtime.dgm$508",
     "org.codehaus.groovy.runtime.dgm$509",
     "groovy.transform.builder.InitializerStrategy$SET",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure12$_closure20$_closure21",
     "groovy.ui.text.StructuredSyntaxHandler",
     "groovy.transform.Undefined",
     "groovy.swing.factory.CellEditorGetValueFactory",
     "groovy.json.internal.SimpleCache$InternalCacheLinkedList",
     "groovyjarjarantlr.TokenManager",
     "org.codehaus.groovy.runtime.dgm$510",
     "org.codehaus.groovy.runtime.dgm$511",
     "org.codehaus.groovy.runtime.dgm$512",
     "org.codehaus.groovy.runtime.dgm$513",
     "org.codehaus.groovy.vmplugin.VMPlugin",
     "org.codehaus.groovy.runtime.callsite.PerInstancePojoMetaClassSite",
     "org.codehaus.groovy.runtime.dgm$514",
     "org.codehaus.groovy.control.customizers.SecureASTCustomizer$SecuringCodeVisitor",
     "org.codehaus.groovy.runtime.dgm$515",
     "org.codehaus.groovy.runtime.dgm$516",
     "org.codehaus.groovy.runtime.dgm$517",
     "groovyjarjarantlr.collections.Enumerator",
     "org.codehaus.groovy.runtime.dgm$518",
     "org.codehaus.groovy.runtime.dgm$519",
     "groovyjarjarantlr.TreeParser",
     "org.codehaus.groovy.classgen.ClassCompletionVerifier",
     "org.codehaus.groovy.runtime.callsite.MetaClassSite",
     "groovy.lang.AdaptingMetaClass",
     "org.codehaus.groovy.runtime.dgm$520",
     "org.codehaus.groovy.runtime.dgm$521",
     "org.codehaus.groovy.runtime.dgm$522",
     "groovy.xml.StreamingSAXBuilder$_closure2$_closure7",
     "org.codehaus.groovy.runtime.dgm$523",
     "org.codehaus.groovy.runtime.dgm$524",
     "groovyjarjarantlr.debug.ParserTokenEvent",
     "org.codehaus.groovy.runtime.dgm$525",
     "org.codehaus.groovy.runtime.dgm$526",
     "org.codehaus.groovy.runtime.dgm$527",
     "org.codehaus.groovy.runtime.dgm$528",
     "org.codehaus.groovy.runtime.dgm$529",
     "org.codehaus.groovy.classgen.asm.DelegatingController",
     "groovy.inspect.swingui.TreeNodeBuildingNodeOperation$_collectPropertyData_closure4",
     "groovy.json.StreamingJsonBuilder",
     "groovy.text.markup.BaseTemplate$TagData",
     "groovy.xml.StreamingMarkupBuilder$_bind_closure7",
     "org.codehaus.groovy.runtime.dgm$530",
     "groovy.json.internal.SimpleCache",
     "org.codehaus.groovy.ast.Parameter",
     "org.codehaus.groovy.runtime.dgm$531",
     "groovy.text.markup.TemplateConfiguration",
     "groovy.xml.StreamingDOMBuilder$_closure2$_closure6",
     "org.codehaus.groovy.groovydoc.GroovyConstructorDoc",
     "org.codehaus.groovy.runtime.dgm$532",
     "org.codehaus.groovy.runtime.dgm$533",
     "org.codehaus.groovy.runtime.dgm$534",
     "org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$DefaultModuleListener",
     "org.codehaus.groovy.runtime.dgm$535",
     "org.codehaus.groovy.runtime.dgm$536",
     "org.codehaus.groovy.runtime.dgm$537",
     "org.codehaus.groovy.runtime.dgm$538",
     "org.codehaus.groovy.runtime.dgm$539",
     "org.codehaus.groovy.binding.TriggerBinding",
     "groovy.beans.VetoableASTTransformation",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$TakeWhileIterator",
     "org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$1",
     "groovy.lang.IntRange$IntRangeIterator",
     "groovyjarjarantlr.actions.python.ActionLexer",
     "org.codehaus.groovy.runtime.dgm$540",
     "org.codehaus.groovy.runtime.dgm$541",
     "org.codehaus.groovy.runtime.dgm$542",
     "groovy.json.internal.IO",
     "org.codehaus.groovy.runtime.dgm$543",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure7$_closure23",
     "org.codehaus.groovy.runtime.dgm$544",
     "org.codehaus.groovy.runtime.dgm$545",
     "org.codehaus.groovy.runtime.dgm$546",
     "org.codehaus.groovy.runtime.dgm$547",
     "org.codehaus.groovy.runtime.dgm$548",
     "org.codehaus.groovy.runtime.DateGroovyMethods",
     "org.codehaus.groovy.runtime.dgm$549",
     "org.codehaus.groovy.runtime.callsite.ClassMetaClassGetPropertySite",
     "groovy.swing.factory.LineBorderFactory",
     "org.codehaus.groovy.transform.ASTTestTransformation",
     "groovy.lang.Grab",
     "org.codehaus.groovy.ast.tools.GeneralUtils",
     "org.codehaus.groovy.vmplugin.v7.Selector",
     "org.codehaus.groovy.classgen.BytecodeExpression",
     "org.codehaus.groovy.transform.BuilderASTTransformation",
     "groovyjarjarasm.asm.AnnotationVisitor",
     "org.codehaus.groovy.tools.shell.CommandRegistry$_register_closure1",
     "org.codehaus.groovy.util.LazyReference",
     "org.codehaus.groovy.util.TripleKeyHashMap$Entry",
     "org.codehaus.groovy.runtime.dgm$550",
     "org.codehaus.groovy.runtime.dgm$551",
     "org.codehaus.groovy.runtime.dgm$552",
     "org.codehaus.groovy.runtime.dgm$553",
     "org.codehaus.groovy.runtime.dgm$554",
     "org.codehaus.groovy.runtime.dgm$555",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitClassExpression_closure43",
     "groovy.ui.Console$_loadScriptFile_closure7",
     "org.codehaus.groovy.runtime.dgm$556",
     "groovy.swing.SwingBuilder$_createKeyStrokeAction_closure5",
     "groovy.ui.Console$_loadScriptFile_closure8",
     "org.codehaus.groovy.runtime.dgm$557",
     "org.codehaus.groovy.runtime.dgm$558",
     "org.codehaus.groovy.runtime.dgm$559",
     "groovy.util.ObservableSet$MultiElementAddedEvent",
     "org.codehaus.groovy.transform.AbstractInterruptibleASTTransformation",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesClosureWriter",
     "groovy.jmx.builder.JmxMetaMapBuilder",
     "groovy.util.logging.Commons",
     "org.codehaus.groovy.runtime.memoize.ProtectionStorage",
     "org.codehaus.groovy.runtime.dgm$560",
     "org.codehaus.groovy.runtime.IteratorClosureAdapter",
     "org.codehaus.groovy.runtime.dgm$561",
     "org.codehaus.groovy.runtime.dgm$562",
     "groovy.transform.stc.ThirdParam$Component",
     "org.codehaus.groovy.runtime.dgm$563",
     "org.codehaus.groovy.runtime.dgm$564",
     "org.codehaus.groovy.control.customizers.builder.ImportCustomizerFactory$ImportHelper",
     "org.codehaus.groovy.runtime.dgm$565",
     "org.codehaus.groovy.runtime.dgm$566",
     "org.codehaus.groovy.transform.sc.transformers.CastExpressionOptimizer",
     "org.codehaus.groovy.runtime.dgm$567",
     "org.codehaus.groovy.runtime.dgm$568",
     "org.codehaus.groovy.runtime.dgm$569",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingVisitor$SetterInfo",
     "org.codehaus.groovy.transform.ASTTestTransformation$ProgressCallbackChain",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyTag",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$LongDouble",
     "groovyjarjarantlr.ANTLRGrammarParseBehavior",
     "org.codehaus.groovy.ast.stmt.DoWhileStatement",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitParameters_closure11$_closure39",
     "groovy.inspect.swingui.CompilePhaseAdapter",
     "groovy.xml.StreamingMarkupBuilder$_closure4$_closure11",
     "org.codehaus.groovy.runtime.dgm$570",
     "org.codehaus.groovy.runtime.dgm$571",
     "org.codehaus.groovy.runtime.dgm$572",
     "org.codehaus.groovy.runtime.dgm$573",
     "org.codehaus.groovy.runtime.dgm$574",
     "org.codehaus.groovy.runtime.dgm$575",
     "org.codehaus.groovy.runtime.dgm$576",
     "org.codehaus.groovy.runtime.dgm$577",
     "groovy.swing.factory.RootPaneContainerFactory$_handleRootPaneTasks_closure1",
     "org.codehaus.groovy.runtime.dgm$578",
     "org.codehaus.groovy.runtime.dgm$579",
     "groovy.ui.ConsoleTextEditor$UpdateCaretListener",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$_run_closure6$_closure9",
     "groovy.transform.stc.ThirdParam",
     "org.codehaus.groovy.ast.expr.DeclarationExpression",
     "org.codehaus.groovy.runtime.callsite.ConstructorSite$NoParamSiteInnerClass",
     "org.codehaus.groovy.classgen.asm.BinaryExpressionHelper$1",
     "org.codehaus.groovy.antlr.SourceInfo",
     "org.codehaus.groovy.runtime.callsite.CallSiteClassLoader",
     "org.codehaus.groovy.reflection.CachedClass$2$1",
     "org.codehaus.groovy.runtime.dgm$580",
     "groovyjarjarantlr.CppBlockFinishingInfo",
     "org.codehaus.groovy.runtime.dgm$581",
     "org.codehaus.groovy.runtime.dgm$582",
     "org.codehaus.groovy.classgen.asm.sc.StaticPropertyAccessHelper",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyFieldDoc",
     "org.codehaus.groovy.util.AbstractConcurrentMap$Segment",
     "groovy.swing.factory.TableLayoutFactory",
     "groovy.xml.NamespaceBuilder",
     "groovy.swing.factory.GridBagFactory",
     "org.codehaus.groovy.transform.ImmutableASTTransformation$1",
     "org.codehaus.groovy.util.DoubleKeyHashMap",
     "groovy.grape.GrapeIvy$_createAndAddDependencyArtifactDescriptor_closure8",
     "groovyjarjarantlr.TokenStreamRewriteEngine$1",
     "org.codehaus.groovy.binding.EventTriggerBinding$EventTriggerFullBinding$1",
     "groovyjarjarantlr.debug.SyntacticPredicateAdapter",
     "org.codehaus.groovy.runtime.callsite.GetEffectivePogoFieldSite",
     "groovyjarjarantlr.CommonToken",
     "groovy.inspect.swingui.ScriptToTreeNodeAdapter",
     "groovy.util.logging.Log4j",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitTernaryExpression_closure21",
     "groovy.util.ObjectGraphBuilder$ObjectRefFactory",
     "org.codehaus.groovy.antlr.AntlrASTProcessor",
     "org.codehaus.groovy.reflection.ParameterTypes",
     "groovy.util.GroovyScriptEngine$ScriptClassLoader",
     "groovy.grape.GrapeIvy$_uninstallArtifact_closure9$_closure20$_closure21",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitCatchStatement_closure50",
     "groovy.swing.factory.VStrutFactory",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$IntegerFloat",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap$KeySet",
     "org.codehaus.groovy.antlr.java.Java2GroovyMain",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_array_closure12",
     "org.codehaus.groovy.ast.GenericsType",
     "org.codehaus.groovy.ast.stmt.ReturnStatement",
     "groovy.util.ObservableSet$ElementAddedEvent",
     "org.codehaus.groovy.reflection.GeneratedMetaMethod",
     "org.codehaus.groovy.transform.BuilderASTTransformation$BuilderStrategy",
     "org.codehaus.groovy.runtime.GroovyCategorySupport$1",
     "org.codehaus.groovy.control.CompilationUnit$ProgressCallback",
     "org.codehaus.groovy.ant.FileSystemCompilerFacade",
     "groovy.swing.binding.AbstractSyntheticMetaMethods$_enhance_closure1",
     "org.codehaus.groovy.transform.trait.TraitASTTransformation$DefaultArgsMethodsAdder",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$FloatInteger",
     "org.codehaus.groovy.groovydoc.GroovyExecutableMemberDoc",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitSpreadExpression_closure35",
     "groovyjarjarantlr.debug.LLkDebuggingParser",
     "groovy.swing.binding.JTableMetaMethods$_enhanceMetaClass_closure1",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$InitIterator",
     "groovy.lang.TrampolineClosure",
     "groovy.swing.binding.JTableMetaMethods$_enhanceMetaClass_closure3",
     "groovy.swing.binding.JTableMetaMethods$_enhanceMetaClass_closure2",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation$_replaceRecursiveReturnsInsideClosures_closure8",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation$_replaceRecursiveReturnsInsideClosures_closure9",
     "groovy.lang.GroovyObjectSupport",
     "org.codehaus.groovy.tools.groovydoc.GroovyDocTool",
     "org.codehaus.groovy.vmplugin.v7.TypeTransformers",
     "org.codehaus.groovy.runtime.GStringImpl",
     "org.codehaus.groovy.tools.javac.JavaStubGenerator$1",
     "org.codehaus.groovy.classgen.asm.MethodCallerMultiAdapter",
     "groovy.ui.Console",
     "org.codehaus.groovy.runtime.StringGroovyMethods",
     "org.codehaus.groovy.runtime.dgm$99",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$IntegerDouble",
     "org.codehaus.groovy.runtime.dgm$96",
     "org.codehaus.groovy.runtime.dgm$95",
     "org.codehaus.groovy.runtime.dgm$98",
     "org.codehaus.groovy.antlr.treewalker.NodeAsHTMLPrinter",
     "org.codehaus.groovy.runtime.dgm$97",
     "org.codehaus.groovy.runtime.dgm$92",
     "org.codehaus.groovy.runtime.dgm$91",
     "org.codehaus.groovy.runtime.dgm$94",
     "org.codehaus.groovy.runtime.dgm$93",
     "groovyjarjarantlr.debug.misc.ASTFrame$MyTreeSelectionListener",
     "org.codehaus.groovy.runtime.dgm$90",
     "groovy.swing.binding.JSliderProperties$1",
     "org.codehaus.groovy.tools.shell.commands.DocCommand$_browseWithAWT_closure3",
     "org.codehaus.groovy.reflection.stdclasses.CachedClosureClass",
     "groovy.lang.Delegate",
     "org.codehaus.groovy.util.ManagedConcurrentMap$EntryWithValue",
     "groovy.transform.stc.ThirdParam$FirstGenericType",
     "groovy.mock.interceptor.LooseExpectation$_match_closure1",
     "groovy.json.internal.ValueMapImpl",
     "org.codehaus.groovy.tools.groovydoc.ClasspathResourceManager",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.DoubleArrayGetAtMetaMethod",
     "org.codehaus.groovy.vmplugin.v7.Selector$InitSelector",
     "org.codehaus.groovy.runtime.ReflectionMethodInvoker",
     "groovy.inspect.swingui.AstBrowser$_run_closure5$_closure36",
     "org.codehaus.groovy.transform.ExternalizeMethodsASTTransformation",
     "groovy.inspect.swingui.AstBrowser$_run_closure5$_closure37",
     "groovy.inspect.swingui.AstBrowser$_run_closure5$_closure34",
     "groovy.inspect.swingui.AstBrowser$_run_closure5$_closure35",
     "groovy.inspect.swingui.AstBrowser$_run_closure5$_closure33",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.CharacterArrayPutAtMetaMethod",
     "groovy.swing.factory.RendererFactory",
     "groovyjarjarantlr.TreeWalkerGrammar",
     "groovyjarjarasm.asm.util.Printer",
     "org.codehaus.groovy.classgen.asm.WriterControllerFactory",
     "org.codehaus.groovy.syntax.SyntaxException",
     "org.codehaus.groovy.tools.shell.commands.ShowCommand$_closure1",
     "org.codehaus.groovy.tools.shell.commands.ShowCommand$_closure2",
     "org.codehaus.groovy.transform.SingletonASTTransformation",
     "org.codehaus.groovy.tools.shell.commands.ShowCommand$_closure3",
     "org.codehaus.groovy.tools.shell.commands.ShowCommand$_closure4",
     "groovyjarjarantlr.CSharpNameSpace",
     "org.codehaus.groovy.antlr.LexerFrame",
     "org.codehaus.groovy.runtime.dgm$67",
     "org.codehaus.groovy.runtime.dgm$66",
     "groovy.json.internal.LazyMap",
     "org.codehaus.groovy.runtime.dgm$69",
     "org.codehaus.groovy.runtime.dgm$68",
     "org.codehaus.groovy.runtime.dgm$63",
     "org.codehaus.groovy.runtime.dgm$62",
     "org.codehaus.groovy.runtime.dgm$65",
     "org.codehaus.groovy.runtime.dgm$64",
     "org.codehaus.groovy.syntax.Reduction",
     "org.codehaus.groovy.runtime.dgm$61",
     "org.codehaus.groovy.tools.GrapeMain$_closure6$_closure19",
     "org.codehaus.groovy.runtime.dgm$60",
     "org.codehaus.groovy.tools.GrapeMain$_closure6$_closure18",
     "org.codehaus.groovy.runtime.WritableFile",
     "groovy.swing.factory.ActionFactory",
     "groovy.util.GroovyShellTestCase",
     "groovy.xml.StreamingDOMBuilder$_closure4$_closure9",
     "groovyjarjarantlr.CSharpBlockFinishingInfo",
     "org.codehaus.groovy.runtime.dgm$59",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.FloatArrayPutAtMetaMethod$MyPojoMetaMethodSite",
     "org.codehaus.groovy.util.ManagedConcurrentValueMap$1",
     "org.codehaus.groovy.tools.StringHelper",
     "org.codehaus.groovy.runtime.dgm$56",
     "org.codehaus.groovy.runtime.dgm$55",
     "org.codehaus.groovy.runtime.dgm$58",
     "org.codehaus.groovy.runtime.dgm$57",
     "groovy.lang.GString",
     "org.codehaus.groovy.runtime.dgm$52",
     "org.codehaus.groovy.runtime.metaclass.NewMetaMethod",
     "org.codehaus.groovy.runtime.dgm$51",
     "org.codehaus.groovy.transform.AbstractASTTransformation",
     "org.codehaus.groovy.runtime.dgm$54",
     "org.codehaus.groovy.runtime.dgm$53",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyType",
     "groovyjarjarantlr.GrammarSymbol",
     "org.codehaus.groovy.runtime.dgm$50",
     "groovy.text.TemplateParseException",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure7",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure8",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure9",
     "groovy.jmx.builder.JmxOperationInfoManager$_getConstructorInfosFromMap_closure1",
     "org.codehaus.groovy.runtime.typehandling.IntegerMath",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$LongDouble",
     "groovy.xml.StreamingSAXBuilder",
     "org.codehaus.groovy.runtime.dgm$89",
     "org.codehaus.groovy.runtime.dgm$88",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure4",
     "org.codehaus.groovy.tools.shell.CommandsMultiCompleter",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure5",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure6",
     "org.codehaus.groovy.runtime.dgm$85",
     "org.codehaus.groovy.runtime.dgm$84",
     "org.codehaus.groovy.runtime.callsite.GetEffectivePojoPropertySite",
     "org.codehaus.groovy.runtime.dgm$87",
     "org.codehaus.groovy.runtime.dgm$86",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$DoubleFloat",
     "org.codehaus.groovy.runtime.dgm$81",
     "groovy.xml.NamespaceBuilderSupport",
     "org.codehaus.groovy.runtime.dgm$80",
     "org.codehaus.groovy.runtime.dgm$83",
     "org.codehaus.groovy.runtime.dgm$82",
     "groovyjarjarcommonscli.OptionValidator",
     "groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$OutputSink",
     "org.codehaus.groovy.runtime.dgm$78",
     "org.codehaus.groovy.runtime.dgm$77",
     "groovyjarjarantlr.actions.python.ActionLexerTokenTypes",
     "org.codehaus.groovy.runtime.dgm$79",
     "groovy.ui.ConsoleView$_run_closure2",
     "org.codehaus.groovy.runtime.dgm$74",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11",
     "groovy.ui.ConsoleView$_run_closure3",
     "org.codehaus.groovy.runtime.dgm$73",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure10",
     "groovy.ui.ConsoleView$_run_closure4",
     "org.codehaus.groovy.runtime.dgm$76",
     "groovy.ui.ConsoleView$_run_closure5",
     "org.codehaus.groovy.runtime.dgm$75",
     "groovy.ui.ConsoleView$_run_closure6",
     "groovy.util.OptionAccessor",
     "org.codehaus.groovy.runtime.dgm$70",
     "groovy.ui.ConsoleView$_run_closure7",
     "groovy.ui.ConsoleView$_run_closure8",
     "org.codehaus.groovy.runtime.dgm$72",
     "org.codehaus.groovy.runtime.dgm$71",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_constructor_closure28",
     "org.codehaus.groovy.runtime.ProcessGroovyMethods$ProcessRunner",
     "groovy.ui.ConsoleView$_run_closure1",
     "org.codehaus.groovy.transform.sc.transformers.CompareToNullExpression",
     "groovy.text.TemplateEngine",
     "org.codehaus.groovy.runtime.dgm$27",
     "org.codehaus.groovy.runtime.dgm$26",
     "org.codehaus.groovy.runtime.dgm$29",
     "org.codehaus.groovy.runtime.dgm$28",
     "org.codehaus.groovy.binding.AbstractFullBinding",
     "org.codehaus.groovy.runtime.dgm$23",
     "org.codehaus.groovy.runtime.dgm$22",
     "org.codehaus.groovy.runtime.dgm$25",
     "groovy.jmx.builder.JmxAttributeInfoManager$_getAttributeInfosFromMap_closure1",
     "org.codehaus.groovy.runtime.dgm$24",
     "org.codehaus.groovy.ast.expr.RangeExpression",
     "org.codehaus.groovy.runtime.dgm$21",
     "org.codehaus.groovy.runtime.dgm$20",
     "org.codehaus.groovy.syntax.ParserException",
     "groovyjarjarantlr.TokenStreamSelector",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildConstructorMapFrom_closure4",
     "org.codehaus.groovy.ast.expr.NamedArgumentListExpression",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure26$_closure31",
     "org.codehaus.groovy.control.customizers.SecureASTCustomizer$1",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$IntegerDouble",
     "groovy.xml.FactorySupport$1",
     "org.codehaus.groovy.runtime.dgm$19",
     "groovy.xml.FactorySupport$2",
     "org.codehaus.groovy.control.CompilationUnit$ClassgenCallback",
     "org.codehaus.groovy.runtime.dgm$16",
     "org.codehaus.groovy.runtime.dgm$15",
     "org.codehaus.groovy.runtime.dgm$18",
     "org.codehaus.groovy.runtime.dgm$17",
     "org.codehaus.groovy.ast.stmt.CatchStatement",
     "org.codehaus.groovy.runtime.dgm$12",
     "org.codehaus.groovy.runtime.dgm$11",
     "org.codehaus.groovy.runtime.dgm$14",
     "org.codehaus.groovy.runtime.dgm$13",
     "org.codehaus.groovy.antlr.java.JavaTokenTypes",
     "org.codehaus.groovy.runtime.dgm$10",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$_run_closure1$_closure7",
     "org.codehaus.groovy.tools.gse.DependencyTracker",
     "org.codehaus.groovy.runtime.typehandling.FloatingPointMath",
     "org.codehaus.groovy.ast.expr.ElvisOperatorExpression",
     "org.codehaus.groovy.runtime.dgm$49",
     "org.codehaus.groovy.runtime.dgm$48",
     "groovy.lang.GroovyCodeSource",
     "org.codehaus.groovy.runtime.dgm$45",
     "org.codehaus.groovy.runtime.dgm$44",
     "org.codehaus.groovy.runtime.dgm$47",
     "org.codehaus.groovy.transform.tailrec.GotoRecurHereException",
     "org.codehaus.groovy.runtime.dgm$46",
     "groovy.transform.stc.SecondParam$FirstGenericType",
     "org.codehaus.groovy.runtime.dgm$41",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod$AnonymousMetaMethod",
     "org.codehaus.groovy.runtime.dgm$40",
     "org.codehaus.groovy.runtime.dgm$43",
     "org.codehaus.groovy.runtime.dgm$42",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$IntegerFloat",
     "groovyjarjarasm.asm.commons.RemappingClassAdapter",
     "groovy.jmx.builder.JmxBeansFactory",
     "org.codehaus.groovy.runtime.dgm$38",
     "org.codehaus.groovy.runtime.dgm$37",
     "org.codehaus.groovy.runtime.dgm$39",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer$_visitForLoop_closure6",
     "org.codehaus.groovy.runtime.dgm$34",
     "org.codehaus.groovy.runtime.dgm$33",
     "org.codehaus.groovy.runtime.dgm$36",
     "org.codehaus.groovy.runtime.dgm$35",
     "org.codehaus.groovy.runtime.dgm$30",
     "org.codehaus.groovy.tools.shell.completion.StricterArgumentCompleter",
     "org.codehaus.groovy.runtime.dgm$32",
     "org.codehaus.groovy.runtime.dgm$31",
     "groovyjarjarcommonscli.Parser",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildConstructorMapFrom_closure4$_closure12",
     "groovyjarjarantlr.ASdebug.IASDebugStream",
     "groovyjarjarasm.asm.tree.InnerClassNode",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildConstructorMapFrom_closure4$_closure13",
     "groovyjarjarantlr.debug.SyntacticPredicateEvent",
     "org.codehaus.groovy.runtime.ProcessGroovyMethods$2",
     "org.codehaus.groovy.runtime.ProcessGroovyMethods$1",
     "org.codehaus.groovy.runtime.ProcessGroovyMethods$3",
     "org.codehaus.groovy.tools.GrapeMain$_closure3$_closure15$_closure16",
     "org.codehaus.groovy.tools.shell.Groovysh$_loadUserScript_closure8",
     "org.codehaus.groovy.tools.groovydoc.ResourceManager",
     "groovy.sql.OutParameter",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$DoubleDouble",
     "groovy.model.ValueModel",
     "groovyjarjarasm.asm.util.TraceSignatureVisitor",
     "groovy.util.slurpersupport.NodeChild",
     "groovy.ui.text.TextEditor$1",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc",
     "groovyjarjarantlr.TokenStreamRewriteEngine$DeleteOp",
     "org.codehaus.groovy.antlr.SourceBuffer",
     "groovyjarjarantlr.TokenStream",
     "groovyjarjarasm.asm.tree.MethodInsnNode",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$IntegerInteger",
     "groovy.model.DefaultTableModel$MyTableColumnModel",
     "org.codehaus.groovy.tools.DocGenerator$DocUtil$_linkify_closure1",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitDeclarationExpression_closure45",
     "org.codehaus.groovy.ast.tools.WideningCategories$LowestUpperBoundClassNode$1",
     "org.codehaus.groovy.transform.stc.AbstractTypeCheckingExtension",
     "groovy.xml.StaxBuilder$_createNode_closure1",
     "org.codehaus.groovy.tools.shell.RigidParser",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesClosureWriter$MethodTargetCompletionVisitor",
     "groovy.lang.GrabResolver",
     "groovyjarjarantlr.JavaCharFormatter",
     "groovy.sql.Sql$27",
     "groovy.sql.Sql$26",
     "groovy.sql.Sql$25",
     "groovy.sql.Sql$24",
     "groovy.sql.Sql$29",
     "groovy.sql.Sql$28",
     "org.codehaus.groovy.classgen.asm.BytecodeDumper",
     "groovy.sql.Sql$23",
     "groovy.sql.Sql$22",
     "groovy.sql.Sql$21",
     "groovy.sql.Sql$20",
     "groovy.ui.text.TextUndoManager$1",
     "org.codehaus.groovy.control.MultipleCompilationErrorsException",
     "org.codehaus.groovy.transform.EqualsAndHashCodeASTTransformation",
     "groovy.time.BaseDuration$From",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10$_closure25$_closure30",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ByteArrayPutAtMetaMethod",
     "groovy.sql.Sql$16",
     "groovy.sql.Sql$15",
     "groovy.jmx.builder.JmxBuilderModelMBean$AttributeChangedListener",
     "groovy.sql.Sql$14",
     "org.codehaus.groovy.control.Phases",
     "org.codehaus.groovy.transform.stc.DefaultTypeCheckingExtension",
     "groovy.sql.Sql$13",
     "org.codehaus.groovy.reflection.ClassInfo$GlobalClassSet",
     "groovy.sql.Sql$19",
     "groovy.sql.Sql$18",
     "groovy.sql.Sql$17",
     "org.codehaus.groovy.classgen.ClassGenerator",
     "groovy.lang.GroovyCodeSource$1",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesCallSiteWriter$2",
     "groovy.sql.Sql$12",
     "groovy.transform.stc.SecondParam$ThirdGenericType",
     "org.codehaus.groovy.classgen.asm.sc.StaticTypesCallSiteWriter$1",
     "groovy.sql.Sql$11",
     "groovy.sql.Sql$10",
     "org.codehaus.groovy.antlr.parser.GroovyRecognizer",
     "groovyjarjarasm.asm.FieldWriter",
     "org.codehaus.groovy.classgen.asm.MopWriter",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus",
     "groovy.sql.ResultSetOutParameter",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.BooleanArrayPutAtMetaMethod",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$MethodChooser",
     "org.codehaus.groovy.runtime.MethodKey",
     "org.codehaus.groovy.runtime.m12n.ExtensionModule",
     "org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass",
     "groovy.xml.StreamingDOMBuilder$_bind_closure5",
     "groovyjarjarasm.asm.tree.TableSwitchInsnNode",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMetaMethod$NumberNumberCallSite",
     "groovy.ui.ConsoleTextEditor$RedoAction",
     "groovyjarjarantlr.Version",
     "groovy.inspect.swingui.TableSorter$1",
     "org.codehaus.groovy.runtime.typehandling.BigIntegerMath",
     "org.codehaus.groovy.tools.GrapeMain$_closure1$_closure9",
     "groovy.sql.CallResultSet",
     "groovy.swing.factory.MatteBorderFactory",
     "groovyjarjarasm.asm.TypePath",
     "org.codehaus.groovy.control.io.InputStreamReaderSource",
     "org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods",
     "org.codehaus.groovy.ast.builder.AstBuilderTransformation",
     "org.codehaus.groovy.tools.ErrorReporter",
     "org.codehaus.groovy.runtime.metaclass.OwnedMetaClass",
     "org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit$3",
     "org.codehaus.groovy.tools.shell.util.ScriptVariableAnalyzer$VariableVisitor",
     "org.codehaus.groovy.runtime.dgm$600",
     "org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit$2",
     "org.codehaus.groovy.runtime.dgm$601",
     "org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit$1",
     "org.codehaus.groovy.runtime.dgm$602",
     "org.codehaus.groovy.runtime.dgm$603",
     "groovy.lang.DeprecationException",
     "org.codehaus.groovy.runtime.dgm$604",
     "org.codehaus.groovy.tools.javac.JavacCompilerFactory",
     "org.codehaus.groovy.runtime.dgm$605",
     "org.codehaus.groovy.runtime.dgm$606",
     "org.codehaus.groovy.runtime.dgm$607",
     "org.codehaus.groovy.runtime.dgm$608",
     "org.codehaus.groovy.runtime.dgm$609",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.CharacterArrayPutAtMetaMethod$MyPojoMetaMethodSite",
     "groovy.lang.MetaProperty",
     "groovyjarjarasm.asm.util.Textifier",
     "groovy.text.markup.AutoNewLineTransformer",
     "groovy.util.slurpersupport.NoChildren",
     "org.codehaus.groovy.runtime.dgm$610",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitContinueStatement_closure14",
     "org.codehaus.groovy.runtime.dgm$611",
     "org.codehaus.groovy.runtime.dgm$612",
     "org.codehaus.groovy.runtime.dgm$613",
     "org.codehaus.groovy.runtime.dgm$614",
     "org.codehaus.groovy.runtime.dgm$615",
     "org.codehaus.groovy.runtime.dgm$616",
     "org.codehaus.groovy.transform.sc.TemporaryVariableExpression",
     "org.codehaus.groovy.runtime.dgm$617",
     "org.codehaus.groovy.runtime.dgm$618",
     "org.codehaus.groovy.runtime.dgm$619",
     "groovy.lang.MetaClassImpl$1MOPIter",
     "groovy.swing.SwingBuilder$_clientPropertyAttributeDelegate_closure4",
     "org.codehaus.groovy.runtime.IOGroovyMethods",
     "org.codehaus.groovy.runtime.wrappers.PojoWrapper",
     "groovy.swing.SwingBuilder$_clientPropertyAttributeDelegate_closure3",
     "groovy.jmx.builder.JmxServerConnectorFactory$_confiConnectorProperties_closure1",
     "groovy.swing.SwingBuilder$_clientPropertyAttributeDelegate_closure2",
     "org.codehaus.groovy.reflection.SunClassLoader$1",
     "org.codehaus.groovy.vmplugin.VMPluginFactory",
     "groovyjarjarasm.asm.tree.LineNumberNode",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation$_addLocalVariablesForAllParameters_closure3",
     "org.codehaus.groovy.runtime.dgm$620",
     "org.codehaus.groovy.runtime.dgm$621",
     "org.codehaus.groovy.runtime.dgm$622",
     "org.codehaus.groovy.runtime.dgm$623",
     "org.codehaus.groovy.runtime.dgm$624",
     "org.codehaus.groovy.classgen.asm.MethodCaller",
     "org.codehaus.groovy.runtime.dgm$625",
     "groovyjarjarantlr.TokenStreamRetryException",
     "org.codehaus.groovy.runtime.dgm$626",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitSwitch_closure21",
     "org.codehaus.groovy.runtime.dgm$627",
     "org.codehaus.groovy.runtime.dgm$628",
     "org.codehaus.groovy.runtime.dgm$629",
     "groovy.inspect.Inspector$MemberComparator",
     "org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSite",
     "groovy.lang.MissingPropertyException",
     "groovy.xml.StreamingSAXBuilder$_closure2$_closure7$_closure8",
     "groovy.text.markup.BaseTemplate$1",
     "org.codehaus.groovy.runtime.dgm$630",
     "org.codehaus.groovy.runtime.MethodRankHelper$RankableMethod",
     "org.codehaus.groovy.runtime.dgm$631",
     "org.codehaus.groovy.runtime.dgm$632",
     "org.codehaus.groovy.runtime.dgm$633",
     "org.codehaus.groovy.transform.ASTTestTransformation$1$_closure1",
     "org.codehaus.groovy.runtime.dgm$634",
     "org.codehaus.groovy.runtime.dgm$635",
     "org.codehaus.groovy.runtime.dgm$636",
     "groovy.text.markup.MarkupBuilderCodeTransformer",
     "org.codehaus.groovy.runtime.dgm$637",
     "org.codehaus.groovy.transform.stc.SignatureCodecVersion1",
     "org.codehaus.groovy.runtime.dgm$638",
     "org.codehaus.groovy.runtime.dgm$639",
     "org.codehaus.groovy.runtime.ResourceGroovyMethods",
     "org.codehaus.groovy.classgen.ExtendedVerifier",
     "groovy.util.ObservableSet$ChangeType",
     "groovyjarjarantlr.preprocessor.Grammar",
     "groovy.ui.Console$_bindResults_closure5",
     "groovyjarjarantlr.collections.AST",
     "groovy.ui.view.BasicContentPane$_run_closure4$_closure9",
     "org.codehaus.groovy.runtime.dgm$640",
     "org.codehaus.groovy.runtime.dgm$641",
     "groovy.ui.HistoryRecord",
     "org.codehaus.groovy.runtime.dgm$642",
     "org.codehaus.groovy.runtime.dgm$643",
     "org.codehaus.groovy.runtime.dgm$644",
     "org.codehaus.groovy.runtime.dgm$645",
     "org.codehaus.groovy.runtime.dgm$646",
     "org.codehaus.groovy.tools.FileSystemCompiler",
     "groovy.swing.factory.BindFactory",
     "org.codehaus.groovy.runtime.dgm$647",
     "org.codehaus.groovy.runtime.dgm$648",
     "org.codehaus.groovy.runtime.dgm$649",
     "groovy.inspect.swingui.ObjectBrowser",
     "groovy.transform.Undefined$CLASS",
     "groovy.swing.factory.CompoundBorderFactory$_newInstance_closure1",
     "org.codehaus.groovy.reflection.ReflectionUtils",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$DoubleLong",
     "groovyjarjarantlr.debug.NewLineEvent",
     "org.codehaus.groovy.classgen.genArrayAccess$_genInners_closure1",
     "groovy.ui.view.BasicContentPane$_run_closure3$_closure8",
     "groovy.util.ProxyGenerator",
     "groovy.ui.view.BasicContentPane$_run_closure3$_closure7",
     "groovy.transform.stc.FromString",
     "org.codehaus.groovy.runtime.dgm$650",
     "org.codehaus.groovy.runtime.dgm$651",
     "org.codehaus.groovy.runtime.dgm$652",
     "org.codehaus.groovy.runtime.dgm$653",
     "org.codehaus.groovy.runtime.dgm$654",
     "org.codehaus.groovy.runtime.dgm$655",
     "org.codehaus.groovy.runtime.dgm$656",
     "org.codehaus.groovy.runtime.dgm$657",
     "org.codehaus.groovy.binding.PropertyPathFullBinding",
     "org.codehaus.groovy.runtime.dgm$658",
     "groovyjarjarantlr.BlockContext",
     "org.codehaus.groovy.runtime.dgm$659",
     "groovyjarjarasm.asm.Frame",
     "groovy.swing.factory.ListFactory",
     "groovy.lang.MetaClassImpl$MethodIndex",
     "groovy.transform.stc.FirstParam$ThirdGenericType",
     "groovy.util.slurpersupport.NodeParents",
     "groovy.swing.binding.JListElementsBinding",
     "org.codehaus.groovy.runtime.dgm$660",
     "groovy.grape.Grape",
     "org.codehaus.groovy.runtime.dgm$661",
     "org.codehaus.groovy.runtime.dgm$662",
     "org.codehaus.groovy.runtime.dgm$663",
     "org.codehaus.groovy.runtime.dgm$664",
     "org.codehaus.groovy.runtime.dgm$665",
     "org.codehaus.groovy.runtime.dgm$666",
     "org.codehaus.groovy.runtime.dgm$667",
     "org.codehaus.groovy.runtime.dgm$668",
     "org.codehaus.groovy.runtime.dgm$669",
     "org.codehaus.groovy.runtime.IOGroovyMethods$4",
     "groovy.ui.Console$_fileNewWindow_closure6",
     "groovy.ui.view.MacOSXMenuBar$_run_closure1",
     "org.codehaus.groovy.GroovyExceptionInterface",
     "org.codehaus.groovy.tools.javac.JavaCompilerFactory",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildOperationMapFrom_closure5",
     "org.codehaus.groovy.runtime.IOGroovyMethods$3",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildOperationMapFrom_closure6",
     "org.codehaus.groovy.runtime.IOGroovyMethods$2",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildOperationMapFrom_closure7",
     "org.codehaus.groovy.runtime.IOGroovyMethods$1",
     "org.codehaus.groovy.runtime.dgm$670",
     "org.codehaus.groovy.runtime.dgm$671",
     "org.codehaus.groovy.runtime.dgm$672",
     "groovy.ui.text.StructuredSyntaxDocumentFilter$1",
     "org.codehaus.groovy.runtime.dgm$673",
     "org.codehaus.groovy.runtime.dgm$674",
     "groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document",
     "org.codehaus.groovy.runtime.dgm$675",
     "org.codehaus.groovy.runtime.dgm$676",
     "groovy.transform.ExternalizeVerifier",
     "org.codehaus.groovy.control.io.NullWriter",
     "org.codehaus.groovy.runtime.dgm$677",
     "org.codehaus.groovy.runtime.dgm$678",
     "org.codehaus.groovy.runtime.dgm$679",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc",
     "org.codehaus.groovy.reflection.GroovyClassValueFactory",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.LongArrayPutAtMetaMethod",
     "groovy.sql.Sql$36",
     "groovy.sql.Sql$35",
     "org.codehaus.groovy.tools.GrapeMain$_closure4$_closure17",
     "groovy.sql.Sql$30",
     "org.codehaus.groovy.tools.shell.commands.EditCommand",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_propertyNode_closure25",
     "org.codehaus.groovy.tools.shell.util.Logger",
     "groovy.sql.Sql$34",
     "groovy.sql.Sql$33",
     "groovy.sql.Sql$32",
     "org.codehaus.groovy.runtime.dgm$680",
     "groovy.sql.Sql$31",
     "org.codehaus.groovy.reflection.CachedClass$1$1",
     "org.codehaus.groovy.runtime.dgm$681",
     "org.codehaus.groovy.runtime.dgm$682",
     "org.codehaus.groovy.runtime.dgm$683",
     "org.codehaus.groovy.runtime.dgm$684",
     "org.codehaus.groovy.runtime.dgm$685",
     "org.codehaus.groovy.runtime.dgm$686",
     "org.codehaus.groovy.runtime.dgm$687",
     "org.codehaus.groovy.runtime.dgm$688",
     "org.codehaus.groovy.runtime.dgm$689",
     "org.codehaus.groovy.tools.DocGenerator$_parseSource_closure1",
     "org.codehaus.groovy.tools.DocGenerator$_parseSource_closure2",
     "org.codehaus.groovy.tools.DocGenerator$_parseSource_closure3",
     "groovy.text.SimpleTemplateEngine$SimpleTemplate$1",
     "org.codehaus.groovy.runtime.ScriptTestAdapter",
     "org.codehaus.groovy.runtime.memoize.MemoizeCache",
     "groovyjarjarasm.asm.commons.AnalyzerAdapter",
     "groovy.lang.ExpandoMetaClass$DefiningClosure",
     "org.codehaus.groovy.runtime.dgm$690",
     "org.codehaus.groovy.runtime.dgm$691",
     "org.codehaus.groovy.runtime.dgm$692",
     "groovy.text.StreamingTemplateEngine$StreamingTemplate$1",
     "org.codehaus.groovy.runtime.dgm$693",
     "org.codehaus.groovy.runtime.dgm$694",
     "org.codehaus.groovy.runtime.dgm$695",
     "org.codehaus.groovy.runtime.dgm$696",
     "org.codehaus.groovy.runtime.dgm$697",
     "org.codehaus.groovy.runtime.dgm$698",
     "org.codehaus.groovy.runtime.dgm$699",
     "org.codehaus.groovy.runtime.EncodingGroovyMethodsSupport",
     "groovyjarjarcommonscli.Util",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$DoubleLong",
     "groovy.ui.GroovyFileFilter",
     "org.codehaus.groovy.transform.NotYetImplementedASTTransformation",
     "groovy.util.ObservableList$ElementEvent",
     "groovy.xml.streamingmarkupsupport.Builder",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$3",
     "groovyjarjarasm.asm.tree.MethodNode$1",
     "groovy.util.ObservableList$MultiElementAddedEvent",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$2",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$1",
     "org.codehaus.groovy.tools.DocGenerator$DocSource$_populateInheritedMethods_closure3",
     "groovy.jmx.builder.JmxBuilder$_registerFactories_closure1",
     "org.codehaus.groovy.tools.DocGenerator$DocSource$_populateInheritedMethods_closure4",
     "groovyjarjarantlr.debug.SyntacticPredicateListener",
     "org.codehaus.groovy.ast.PropertyNode",
     "org.codehaus.groovy.transform.AutoCloneASTTransformation",
     "groovy.transform.builder.InitializerStrategy$UNSET",
     "org.codehaus.groovy.transform.tailrec.RecursivenessTester",
     "org.codehaus.groovy.util.AbstractConcurrentMap$Entry",
     "org.codehaus.groovy.ast.expr.ArgumentListExpression",
     "org.codehaus.groovy.transform.stc.PropertyLookupVisitor",
     "groovyjarjarantlr.StringLiteralElement",
     "org.codehaus.groovy.reflection.CachedMethod",
     "org.codehaus.groovy.transform.tailrec.ReturnStatementToIterationConverter$_replaceAllArgUsages_closure3",
     "groovy.lang.ProxyMetaClass$Callable",
     "org.codehaus.groovy.util.ComplexKeyHashMap$1",
     "org.codehaus.groovy.antlr.AntlrASTProcessSnippets",
     "groovyjarjarasm.asm.commons.StaticInitMerger",
     "org.codehaus.groovy.ast.builder.AstStringCompiler$_compile_closure1$_closure2",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$DoubleLong",
     "groovyjarjarantlr.CharStreamIOException",
     "org.codehaus.groovy.transform.trait.TraitASTTransformation$PostTypeCheckingExpressionReplacer",
     "groovyjarjarantlr.debug.ParserListener",
     "groovy.util.JavadocAssertionTestBuilder",
     "org.codehaus.groovy.transform.tailrec.ReturnStatementToIterationConverter",
     "org.codehaus.groovy.ast.expr.PostfixExpression",
     "org.codehaus.groovy.binding.PropertyChangeProxyTargetBinding",
     "org.codehaus.groovy.reflection.CachedField",
     "groovy.xml.StreamingDOMBuilder$_closure2$_closure6$_closure7",
     "org.codehaus.groovy.tools.shell.util.XmlCommandRegistrar",
     "org.codehaus.groovy.antlr.UnicodeEscapingReader",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitDoWhileLoop_closure30",
     "org.codehaus.groovy.reflection.ClassLoaderForClassArtifacts$1",
     "groovyjarjarantlr.debug.DebuggingParser",
     "org.codehaus.groovy.runtime.SqlGroovyMethods$ResultSetMetaDataIterator",
     "groovy.lang.GroovyClassLoader$2",
     "org.codehaus.groovy.plugin.GroovyRunner",
     "groovy.lang.GroovyClassLoader$1",
     "groovy.json.internal.CharSequenceValue",
     "groovy.lang.GroovyClassLoader$4",
     "groovy.lang.GroovyClassLoader$3",
     "groovy.lang.GroovyClassLoader$6",
     "groovy.lang.GroovyClassLoader$5",
     "org.codehaus.groovy.tools.GrapeMain$_run_closure8",
     "groovy.util.Factory",
     "org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack",
     "org.codehaus.groovy.transform.StaticTypesTransformation",
     "groovy.util.GroovyScriptEngine",
     "org.codehaus.groovy.ast.expr.MethodCall",
     "org.codehaus.groovy.classgen.Verifier$10",
     "groovy.ui.view.BasicContentPane$_buildOutputArea_closure6",
     "org.codehaus.groovy.classgen.Verifier$12",
     "org.codehaus.groovy.classgen.Verifier$11",
     "org.codehaus.groovy.classgen.Verifier$14",
     "org.codehaus.groovy.classgen.Verifier$13",
     "groovy.util.logging.Slf4j",
     "groovy.lang.Interceptor",
     "org.codehaus.groovy.classgen.Verifier$15",
     "groovy.ui.text.TextEditor$ReplaceAction",
     "org.codehaus.groovy.util.Finalizable",
     "groovy.text.markup.MarkupTemplateEngine$TemplateGroovyClassLoader",
     "groovy.ui.Console$_finishException_closure9",
     "groovyjarjarcommonscli.OptionGroup",
     "org.codehaus.groovy.ant.FileScanner",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap",
     "groovy.util.ObjectGraphBuilder$IdentifierResolver",
     "org.codehaus.groovy.classgen.Verifier",
     "groovy.xml.StreamingDOMBuilder$_closure4$_closure11",
     "groovy.xml.StreamingDOMBuilder$_closure4$_closure12",
     "groovy.xml.StreamingDOMBuilder$_closure4$_closure13",
     "groovy.xml.StreamingDOMBuilder$_closure4$_closure14",
     "org.codehaus.groovy.control.StaticVerifier$1",
     "groovyjarjarasm.asm.commons.SimpleRemapper",
     "groovy.ui.text.GroovyFilter",
     "org.codehaus.groovy.control.customizers.ASTTransformationCustomizer$_setAnnotationParameters_closure1",
     "groovyjarjarantlr.TokenStreamRewriteEngine$ReplaceOp",
     "groovy.util.FileNameFinder$_getFileNames_closure1",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitClosureExpression_closure27$_closure55",
     "groovy.xml.StreamingDOMBuilder$_closure4$_closure10",
     "groovyjarjarantlr.debug.TraceAdapter",
     "org.codehaus.groovy.runtime.ProxyGeneratorAdapter$ReturnValueWrappingClosure",
     "groovy.sql.ResultSetMetaDataWrapper",
     "org.codehaus.groovy.tools.DocGenerator$_generateIndexMap_closure13$_closure27",
     "groovyjarjarantlr.actions.csharp.ActionLexer",
     "groovyjarjarantlr.NoViableAltForCharException",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_assertStatement_closure18",
     "groovyjarjarasm.asm.signature.SignatureReader",
     "org.codehaus.groovy.reflection.CachedConstructor",
     "org.codehaus.groovy.transform.tailrec.RecursivenessTester$_methodParamsMatchCallArgs_closure1",
     "groovy.beans.DefaultPropertyAccessor",
     "org.codehaus.groovy.ast.stmt.TryCatchStatement",
     "org.codehaus.groovy.runtime.metaclass.MetaMethodIndex",
     "groovy.swing.factory.BeanFactory",
     "groovy.swing.factory.BindFactory$_finishContextualBinding_closure1",
     "org.codehaus.groovy.transform.ASTTestTransformation$1",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9",
     "org.codehaus.groovy.classgen.InnerClassCompletionVisitor",
     "org.codehaus.groovy.tools.shell.AnsiDetector",
     "groovy.transform.stc.SimpleType",
     "groovyjarjarasm.asm.MethodVisitor",
     "org.codehaus.groovy.reflection.ReflectionCache",
     "groovy.json.internal.JsonFastParser",
     "org.codehaus.groovy.classgen.asm.sc.StaticCompilationMopWriter",
     "groovyjarjarantlr.collections.impl.Vector",
     "org.codehaus.groovy.tools.shell.commands.ImportCommand",
     "org.codehaus.groovy.util.LazyReference$1",
     "org.codehaus.groovy.util.LazyReference$2",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation$_replaceReturnsWithTernariesToIfStatements_closure2",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation$_replaceReturnsWithTernariesToIfStatements_closure1",
     "groovyjarjarasm.asm.commons.SerialVersionUIDAdder$Item",
     "org.codehaus.groovy.util.SingleKeyHashMap$Entry",
     "org.codehaus.groovy.util.ReferenceType$HardRef",
     "groovy.swing.impl.DefaultAction",
     "groovy.xml.StreamingMarkupBuilder$_closure6$_closure14",
     "org.codehaus.groovy.ast.ClassNode$1",
     "groovy.xml.StreamingMarkupBuilder$_closure6$_closure13",
     "groovy.xml.StreamingMarkupBuilder$_closure6$_closure15",
     "org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter",
     "groovy.xml.StreamingMarkupBuilder$_closure6$_closure12",
     "org.codehaus.groovy.classgen.ReturnAdder",
     "groovy.lang.Singleton",
     "groovyjarjarantlr.TokenStreamRewriteEngine$RewriteOperation",
     "org.codehaus.groovy.control.BytecodeProcessor",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitClosureExpression_closure23",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11$_closure31",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitEmptyStatement_closure10",
     "org.codehaus.groovy.control.customizers.SourceAwareCustomizer",
     "org.codehaus.groovy.tools.ast.TestHarnessClassLoader",
     "org.codehaus.groovy.runtime.memoize.LRUCache",
     "org.codehaus.groovy.vmplugin.v5.Java5$1",
     "groovyjarjarantlr.Tool",
     "groovyjarjarantlr.ActionElement",
     "org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod",
     "org.codehaus.groovy.vmplugin.v7.IndyInterface$1",
     "groovy.util.logging.Log4j$Log4jLoggingStrategy",
     "groovy.swing.binding.JTableProperties$2",
     "groovy.swing.binding.JTableProperties$3",
     "groovyjarjarantlr.ASdebug.TokenOffsetInfo",
     "groovy.model.PropertyModel",
     "groovy.swing.binding.JTableProperties$1",
     "org.codehaus.groovy.antlr.AntlrParserPlugin$AnonymousInnerClassCarrier",
     "org.codehaus.groovy.ast.stmt.EmptyStatement",
     "org.codehaus.groovy.reflection.MixinInMetaClass",
     "org.codehaus.groovy.control.CompilationUnit$1",
     "org.codehaus.groovy.control.CompilationUnit$4",
     "org.codehaus.groovy.control.CompilationUnit$5",
     "org.codehaus.groovy.control.CompilationUnit$2",
     "org.codehaus.groovy.control.CompilationUnit$3",
     "org.codehaus.groovy.control.CompilationUnit$8",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$UniqueIterator",
     "groovy.util.logging.Log4j2",
     "org.codehaus.groovy.control.CompilationUnit$9",
     "org.codehaus.groovy.control.CompilationUnit$6",
     "org.codehaus.groovy.control.CompilationUnit$7",
     "groovy.xml.dom.DOMCategory$1",
     "groovy.inspect.swingui.AstBrowser$_run_closure5",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitBytecodeExpression_closure53",
     "groovy.transform.stc.FirstParam$FirstGenericType",
     "groovy.inspect.swingui.AstBrowser$_run_closure4",
     "org.codehaus.groovy.classgen.genMathModification$_run_closure3$_closure7$_closure8",
     "org.codehaus.groovy.binding.BindingProxy",
     "groovy.inspect.swingui.AstBrowser$_run_closure3",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ShortArrayPutAtMetaMethod",
     "groovyjarjarantlr.ParseTreeRule",
     "org.codehaus.groovy.binding.FullBinding",
     "groovy.util.slurpersupport.NodeIterator",
     "org.codehaus.groovy.classgen.Verifier$DefaultArgsAction",
     "groovy.mock.interceptor.CallSpec",
     "groovy.xml.dom.DOMCategory",
     "org.codehaus.groovy.transform.stc.TraitTypeCheckingExtension",
     "org.codehaus.groovy.ant.Groovyc$1",
     "groovyjarjarantlr.DumpASTVisitor",
     "org.codehaus.groovy.ast.expr.BinaryExpression",
     "org.codehaus.groovy.tools.shell.util.HelpFormatter",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$DoubleDouble",
     "org.codehaus.groovy.runtime.ReverseListIterator",
     "groovy.ui.GroovySocketServer$GroovyClientConnection",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildAttributeMapFrom_closure2",
     "groovy.lang.Grapes",
     "org.codehaus.groovy.reflection.GroovyClassValue$ComputeValue",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildAttributeMapFrom_closure3",
     "groovy.transform.PackageScope",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildAttributeMapFrom_closure1",
     "org.codehaus.groovy.antlr.EnumHelper",
     "org.codehaus.groovy.antlr.UnicodeLexerSharedInputState",
     "org.codehaus.groovy.transform.ExternalizeVerifierASTTransformation",
     "groovyjarjarantlr.DefaultJavaCodeGeneratorPrintWriterManager",
     "org.codehaus.groovy.transform.trait.NAryOperationRewriter",
     "groovy.util.slurpersupport.Attribute",
     "org.codehaus.groovy.tools.shell.InteractiveShellRunner",
     "org.codehaus.groovy.ast.stmt.ContinueStatement",
     "groovy.text.StreamingTemplateEngine",
     "groovy.xml.FactorySupport",
     "groovy.lang.GrabConfig",
     "groovy.text.markup.BaseTemplate",
     "org.codehaus.groovy.vmplugin.v7.Selector$MethodSelector",
     "org.codehaus.groovy.tools.javac.JavaStubCompilationUnit",
     "groovy.inspect.swingui.AstBrowserNodeMaker",
     "org.codehaus.groovy.classgen.asm.BinaryBooleanExpressionHelper",
     "groovyjarjarasm.asm.Edge",
     "groovy.sql.GroovyResultSetExtension",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$2",
     "groovy.text.markup.MarkupTemplateTypeCheckingExtension$1",
     "org.codehaus.groovy.classgen.GeneratorContext",
     "groovy.util.MapEntry",
     "org.codehaus.groovy.tools.shell.commands.ShowCommand",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure9$_closure24",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure9$_closure25",
     "org.codehaus.groovy.control.customizers.builder.InlinedASTCustomizerFactory",
     "groovy.text.SimpleTemplateEngine$1",
     "org.codehaus.groovy.reflection.ClassInfo$1",
     "org.codehaus.groovy.binding.EventTriggerBinding",
     "groovyjarjarantlr.TokenStreamRecognitionException",
     "groovy.json.internal.JsonParserUsingCharacterSource",
     "groovy.swing.binding.JSliderValueBinding",
     "groovy.sql.ExpandedVariable",
     "groovyjarjarcommonscli.PosixParser",
     "org.codehaus.groovy.util.ManagedDoubleKeyMap",
     "groovy.inspect.TextNode",
     "org.codehaus.groovy.cli.GroovyPosixParser",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_tryCatch_closure19",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ObjectArrayGetAtMetaMethod$MyPojoMetaMethodSite",
     "org.codehaus.groovy.control.customizers.ASTTransformationCustomizer",
     "groovy.time.Duration$1",
     "org.codehaus.groovy.transform.TimedInterruptibleASTTransformation",
     "org.codehaus.groovy.antlr.java.Java2GroovyProcessor",
     "groovyjarjarantlr.preprocessor.Rule",
     "groovy.json.internal.FastStringUtils",
     "groovy.time.BaseDuration",
     "groovy.lang.ExpandoMetaClass$ExpandoMetaProperty",
     "org.codehaus.groovy.classgen.InnerClassVisitorHelper",
     "org.codehaus.groovy.antlr.java.JavaLexer",
     "org.codehaus.groovy.binding.BindPathSnooper",
     "groovy.util.NodeList",
     "org.codehaus.groovy.tools.shell.completion.NavigablePropertiesCompleter$_addMapProperties_closure1",
     "org.codehaus.groovy.runtime.dgm$700",
     "groovyjarjarantlr.DefaultToolErrorHandler",
     "org.codehaus.groovy.runtime.dgm$701",
     "org.codehaus.groovy.runtime.dgm$702",
     "org.codehaus.groovy.runtime.dgm$703",
     "org.codehaus.groovy.runtime.dgm$704",
     "org.codehaus.groovy.runtime.dgm$705",
     "groovy.lang.GroovyClassLoader$ClassCollector",
     "org.codehaus.groovy.runtime.dgm$706",
     "org.codehaus.groovy.runtime.dgm$707",
     "org.codehaus.groovy.runtime.dgm$708",
     "org.codehaus.groovy.runtime.dgm$709",
     "groovy.inspect.swingui.AstBrowser$_compile_closure8",
     "org.codehaus.groovy.runtime.metaclass.MethodMetaProperty$GetBeanMethodMetaProperty",
     "org.codehaus.groovy.ast.EnumConstantClassNode",
     "groovy.inspect.swingui.TableSorter",
     "org.codehaus.groovy.runtime.dgm$710",
     "org.codehaus.groovy.runtime.dgm$711",
     "org.codehaus.groovy.runtime.dgm$712",
     "org.codehaus.groovy.runtime.dgm$713",
     "org.codehaus.groovy.runtime.dgm$714",
     "org.codehaus.groovy.runtime.dgm$715",
     "org.codehaus.groovy.runtime.dgm$716",
     "org.codehaus.groovy.tools.shell.ParseCode",
     "groovy.inspect.swingui.AstBrowser$_compile_closure7",
     "org.codehaus.groovy.classgen.asm.sc.StaticCompilationMopWriter$1",
     "org.codehaus.groovy.runtime.dgm$717",
     "groovy.lang.Lazy",
     "org.codehaus.groovy.runtime.dgm$718",
     "org.codehaus.groovy.runtime.dgm$719",
     "org.codehaus.groovy.runtime.wrappers.ByteWrapper",
     "groovyjarjarantlr.AlternativeElement",
     "groovyjarjarantlr.debug.InputBufferEvent",
     "org.codehaus.groovy.runtime.memoize.Memoize$SoftReferenceMemoizeFunction",
     "groovy.ui.text.StructuredSyntaxDocumentFilter$MultiLineRun",
     "org.codehaus.groovy.runtime.dgm$720",
     "org.codehaus.groovy.runtime.dgm$721",
     "org.codehaus.groovy.transform.trait.TraitASTTransformation$1",
     "org.codehaus.groovy.runtime.dgm$722",
     "org.codehaus.groovy.runtime.dgm$723",
     "org.codehaus.groovy.runtime.dgm$724",
     "org.codehaus.groovy.transform.tailrec.ReturnAdderForClosures",
     "org.codehaus.groovy.runtime.dgm$725",
     "org.codehaus.groovy.runtime.dgm$726",
     "org.codehaus.groovy.runtime.dgm$727",
     "org.codehaus.groovy.util.DoubleKeyHashMap$Entry",
     "org.codehaus.groovy.runtime.dgm$728",
     "org.codehaus.groovy.runtime.dgm$729",
     "org.codehaus.groovy.syntax.CSTNode",
     "org.codehaus.groovy.tools.ast.TransformTestHelper",
     "groovyjarjarantlr.CSharpCodeGenerator",
     "org.codehaus.groovy.runtime.StringBufferWriter",
     "org.codehaus.groovy.ast.stmt.ThrowStatement",
     "org.codehaus.groovy.runtime.memoize.Memoize$1",
     "groovy.ui.text.TextUndoManager$StructuredEdit",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_classNode_closure17",
     "org.codehaus.groovy.transform.tailrec.VariableExpressionReplacer",
     "groovy.swing.binding.JScrollBarProperties",
     "groovy.ui.Console$_runScriptImpl_closure17$_closure34",
     "org.codehaus.groovy.runtime.dgm$730",
     "groovy.ui.Console$_runScriptImpl_closure17$_closure33",
     "org.codehaus.groovy.control.messages.Message",
     "org.codehaus.groovy.runtime.dgm$731",
     "org.codehaus.groovy.runtime.dgm$732",
     "groovy.ui.Console$_runScriptImpl_closure17$_closure35",
     "org.codehaus.groovy.runtime.dgm$733",
     "org.codehaus.groovy.classgen.AsmClassGenerator$2",
     "org.codehaus.groovy.runtime.dgm$734",
     "org.codehaus.groovy.classgen.AsmClassGenerator$3",
     "org.codehaus.groovy.runtime.dgm$735",
     "org.codehaus.groovy.runtime.dgm$736",
     "org.codehaus.groovy.classgen.AsmClassGenerator$1",
     "org.codehaus.groovy.runtime.dgm$737",
     "org.codehaus.groovy.runtime.dgm$738",
     "org.codehaus.groovy.runtime.dgm$739",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_makeNodeFromList_closure4",
     "groovy.lang.ClosureException",
     "org.codehaus.groovy.classgen.AsmClassGenerator$4",
     "org.codehaus.groovy.control.SourceExtensionHandler",
     "org.codehaus.groovy.tools.LoaderConfiguration",
     "org.codehaus.groovy.classgen.AsmClassGenerator$5",
     "org.codehaus.groovy.reflection.ClassInfo$ThreadLocalMapHandler",
     "groovy.xml.StreamingDOMBuilder$_closure3$_closure8",
     "org.codehaus.groovy.runtime.dgm$740",
     "org.codehaus.groovy.runtime.dgm$741",
     "org.codehaus.groovy.runtime.dgm$742",
     "groovy.mock.interceptor.StrictExpectation$_match_closure1",
     "org.codehaus.groovy.runtime.dgm$743",
     "org.codehaus.groovy.runtime.dgm$744",
     "org.codehaus.groovy.runtime.dgm$745",
     "org.codehaus.groovy.classgen.asm.ClosureWriter$UseExistingReference",
     "org.codehaus.groovy.runtime.dgm$746",
     "org.codehaus.groovy.runtime.dgm$747",
     "org.codehaus.groovy.runtime.memoize.LRUProtectionStorage",
     "org.codehaus.groovy.runtime.dgm$748",
     "org.codehaus.groovy.runtime.dgm$749",
     "groovy.util.ObservableSet$ElementRemovedEvent",
     "groovyjarjarantlr.TokenRangeElement",
     "org.codehaus.groovy.antlr.treewalker.PreOrderTraversal",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply",
     "org.codehaus.groovy.antlr.treewalker.VisitorAdapter",
     "groovyjarjarantlr.debug.ParserAdapter",
     "org.codehaus.groovy.runtime.dgm$750",
     "org.codehaus.groovy.runtime.dgm$751",
     "groovy.grape.GrapeIvy$_enumerateGrapes_closure11$_closure22$_closure23",
     "groovyjarjarantlr.debug.ParserController",
     "org.codehaus.groovy.runtime.dgm$752",
     "org.codehaus.groovy.runtime.dgm$753",
     "org.codehaus.groovy.runtime.dgm$754",
     "groovy.swing.factory.EmptyBorderFactory",
     "groovyjarjarantlr.Utils",
     "org.codehaus.groovy.runtime.dgm$755",
     "org.codehaus.groovy.runtime.dgm$756",
     "org.codehaus.groovy.runtime.dgm$757",
     "org.codehaus.groovy.runtime.dgm$758",
     "groovy.json.JsonParser",
     "org.codehaus.groovy.runtime.dgm$759",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$FloatLong",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.LongArrayPutAtMetaMethod$MyPojoMetaMethodSite",
     "groovyjarjarantlr.CodeGenerator",
     "org.codehaus.groovy.runtime.wrappers.BooleanWrapper",
     "org.codehaus.groovy.classgen.InnerClassCompletionVisitor$1",
     "org.codehaus.groovy.classgen.InnerClassCompletionVisitor$2",
     "org.codehaus.groovy.classgen.InnerClassCompletionVisitor$3",
     "org.codehaus.groovy.classgen.asm.BinaryExpressionMultiTypeDispatcher$BinaryCharExpressionHelper",
     "groovy.util.ObjectGraphBuilder$ReflectionClassNameResolver",
     "groovy.test.GroovyAssert",
     "groovy.swing.impl.TableLayoutCell",
     "org.codehaus.groovy.runtime.dgm$760",
     "org.codehaus.groovy.runtime.dgm$761",
     "org.codehaus.groovy.runtime.dgm$762",
     "org.codehaus.groovy.runtime.dgm$763",
     "groovy.util.GroovyAssert",
     "org.codehaus.groovy.runtime.dgm$764",
     "org.codehaus.groovy.runtime.dgm$765",
     "groovy.grape.GrapeIvy$_uninstallArtifact_closure9$_closure20",
     "org.codehaus.groovy.runtime.dgm$766",
     "org.codehaus.groovy.runtime.dgm$767",
     "org.codehaus.groovy.runtime.dgm$768",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.DoubleArrayGetAtMetaMethod$MyPojoMetaMethodSite",
     "org.codehaus.groovy.runtime.dgm$769",
     "groovy.json.JsonOutput$1",
     "groovy.util.PermutationGenerator",
     "groovy.swing.binding.JComponentProperties$7$1",
     "org.codehaus.groovy.runtime.ConvertedMap",
     "groovy.time.DatumDependentDuration$1",
     "groovyjarjarantlr.NoViableAltException",
     "groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitMapExpression_closure32",
     "groovy.xml.streamingmarkupsupport.StreamingMarkupWriter",
     "org.codehaus.groovy.runtime.dgm$770",
     "org.codehaus.groovy.runtime.dgm$771",
     "org.codehaus.groovy.runtime.dgm$772",
     "org.codehaus.groovy.runtime.dgm$773",
     "org.codehaus.groovy.runtime.dgm$774",
     "org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrapNoCoerce",
     "org.codehaus.groovy.runtime.dgm$775",
     "org.codehaus.groovy.runtime.dgm$776",
     "org.codehaus.groovy.runtime.dgm$777",
     "groovyjarjarantlr.debug.ParserMatchListener",
     "org.codehaus.groovy.runtime.dgm$778",
     "org.codehaus.groovy.runtime.dgm$779",
     "groovy.util.GroovyCollections",
     "org.codehaus.groovy.transform.TupleConstructorASTTransformation",
     "org.codehaus.groovy.transform.CategoryASTTransformation$1",
     "groovy.ui.Console$__clinit__closure25$_closure39",
     "groovy.util.CliBuilder$_expandArgumentFile_closure2",
     "org.codehaus.groovy.classgen.asm.MopWriter$Factory",
     "groovy.util.CliBuilder$_expandArgumentFile_closure3",
     "org.codehaus.groovy.runtime.dgm$780",
     "org.codehaus.groovy.runtime.dgm$781",
     "org.codehaus.groovy.runtime.dgm$782",
     "org.codehaus.groovy.runtime.dgm$783",
     "org.codehaus.groovy.runtime.dgm$784",
     "org.codehaus.groovy.runtime.dgm$785",
     "org.codehaus.groovy.tools.groovydoc.ArrayClassDocWrapper",
     "groovy.transform.stc.ThirdParam$ThirdGenericType",
     "org.codehaus.groovy.runtime.dgm$786",
     "groovyjarjarasm.asm.Type",
     "org.codehaus.groovy.runtime.dgm$787",
     "org.codehaus.groovy.runtime.dgm$788",
     "org.codehaus.groovy.runtime.dgm$789",
     "org.codehaus.groovy.control.StaticImportVisitor",
     "org.codehaus.groovy.antlr.AntlrParserPlugin$1",
     "groovy.lang.ReadOnlyPropertyException",
     "org.codehaus.groovy.util.ReleaseInfo",
     "groovy.inspect.swingui.AstBrowser$_compile_closure8$_closure43",
     "groovy.swing.factory.BevelBorderFactory",
     "groovy.inspect.swingui.AstBrowser$_compile_closure8$_closure42",
     "groovy.io.EncodingAwareBufferedWriter",
     "groovy.swing.binding.JScrollBarValueBinding",
     "groovy.inspect.swingui.GeneratedBytecodeAwareGroovyClassLoader",
     "groovyjarjarantlr.debug.SemanticPredicateListener",
     "groovy.servlet.ServletBinding$ServletOutput",
     "org.codehaus.groovy.runtime.dgm$790",
     "org.codehaus.groovy.tools.shell.completion.GroovySyntaxCompletor",
     "groovy.beans.ListenerListASTTransformation$_addFireMethods_closure3",
     "org.codehaus.groovy.runtime.dgm$791",
     "org.codehaus.groovy.runtime.m12n.ExtensionModuleRegistry",
     "groovy.util.FactoryBuilderSupport",
     "org.codehaus.groovy.runtime.dgm$792",
     "org.codehaus.groovy.tools.DocGenerator$DocSource",
     "org.codehaus.groovy.runtime.dgm$793",
     "org.codehaus.groovy.runtime.dgm$794",
     "org.codehaus.groovy.runtime.dgm$795",
     "groovy.swing.binding.JComboBoxProperties",
     "org.codehaus.groovy.runtime.dgm$796",
     "org.codehaus.groovy.runtime.dgm$797",
     "org.codehaus.groovy.runtime.dgm$798",
     "org.codehaus.groovy.runtime.dgm$799",
     "groovy.util.BuilderSupport",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingSupport$1",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingSupport$2",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitGStringExpression_closure49",
     "org.codehaus.groovy.runtime.callsite.PogoMetaClassSite",
     "groovyjarjarantlr.Alternative",
     "groovy.transform.EqualsAndHashCode",
     "groovy.jmx.builder.JmxBeanFactory",
     "org.codehaus.groovy.ast.stmt.BlockStatement",
     "groovy.lang.GroovyClassLoader$1$1",
     "groovy.json.internal.Exceptions$JsonInternalException",
     "org.codehaus.groovy.reflection.CachedMethod$MyComparator",
     "org.codehaus.groovy.runtime.callsite.GetEffectivePojoFieldSite",
     "org.codehaus.groovy.transform.SortableASTTransformation$1",
     "groovy.lang.MetaClassImpl$MethodIndexAction",
     "groovy.transform.builder.DefaultStrategy",
     "groovy.sql.BatchingStatementWrapper",
     "org.codehaus.groovy.control.customizers.ImportCustomizer$1",
     "org.codehaus.groovy.util.ManagedDoubleKeyMap$EntryWithValue",
     "org.codehaus.groovy.control.customizers.builder.SourceAwareCustomizerFactory$1",
     "groovyjarjarantlr.TreeSpecifierNode",
     "org.codehaus.groovy.util.StringUtil",
     "groovy.lang.ProxyMetaClass",
     "groovy.model.FormModel",
     "org.codehaus.groovy.control.customizers.builder.SourceAwareCustomizerFactory$2",
     "org.codehaus.groovy.control.customizers.builder.PostCompletionFactory",
     "groovy.xml.StaxBuilder",
     "groovy.xml.StreamingSAXBuilder$_closure3",
     "groovy.xml.StreamingSAXBuilder$_closure2",
     "groovyjarjarcommonscli.PatternOptionBuilder",
     "groovy.xml.StreamingSAXBuilder$_closure1",
     "groovy.util.logging.Slf4j$Slf4jLoggingStrategy",
     "groovy.lang.IntRange",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitAnnotationNode_closure16",
     "groovy.lang.SpreadMap",
     "groovyjarjarantlr.DefaultFileLineFormatter",
     "org.codehaus.groovy.classgen.asm.BinaryDoubleExpressionHelper",
     "org.codehaus.groovy.runtime.m12n.ExtensionModuleScanner$ExtensionModuleListener",
     "org.codehaus.groovy.control.ResolveVisitor$ConstructedNestedClass",
     "org.codehaus.groovy.syntax.RuntimeParserException",
     "org.codehaus.groovy.ast.tools.WideningCategories",
     "org.codehaus.groovy.util.ReferenceManager",
     "groovy.xml.StreamingSAXBuilder$_closure4",
     "org.codehaus.groovy.antlr.UnicodeEscapingReader$DummyLexer",
     "org.codehaus.groovy.runtime.dgm$1101",
     "org.codehaus.groovy.runtime.dgm$1100",
     "groovy.util.ObservableMap$PropertyAddedEvent",
     "org.codehaus.groovy.runtime.dgm$1103",
     "org.codehaus.groovy.runtime.dgm$1102",
     "org.codehaus.groovy.runtime.dgm$1105",
     "org.codehaus.groovy.runtime.NumberAwareComparator",
     "org.codehaus.groovy.runtime.dgm$1104",
     "org.codehaus.groovy.runtime.dgm$1107",
     "org.codehaus.groovy.runtime.dgm$1106",
     "org.codehaus.groovy.runtime.dgm$1109",
     "org.codehaus.groovy.classgen.genArrays",
     "org.codehaus.groovy.runtime.dgm$1108",
     "groovy.ui.text.FindReplaceUtility$ReplaceAllAction",
     "groovy.swing.binding.JTableProperties",
     "org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_makeNode_closure3",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$IntegerLong",
     "org.codehaus.groovy.control.customizers.ImportCustomizer$ImportType",
     "org.codehaus.groovy.runtime.SqlGroovyMethods",
     "org.codehaus.groovy.runtime.dgm$1112",
     "org.codehaus.groovy.ast.expr.UnaryMinusExpression",
     "org.codehaus.groovy.runtime.dgm$1111",
     "org.codehaus.groovy.runtime.dgm$1114",
     "org.codehaus.groovy.runtime.dgm$1113",
     "org.codehaus.groovy.runtime.dgm$1116",
     "org.codehaus.groovy.runtime.dgm$1115",
     "org.codehaus.groovy.tools.shell.commands.ShowCommand$_closure2$_closure6",
     "org.codehaus.groovy.runtime.dgm$1118",
     "org.codehaus.groovy.runtime.dgm$1117",
     "org.codehaus.groovy.control.customizers.builder.SecureASTCustomizerFactory",
     "org.codehaus.groovy.runtime.dgm$1119",
     "org.codehaus.groovy.tools.javac.JavaAwareResolveVisitor",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitWhileLoop_closure3",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletor$_addClassFieldsAndMethods_closure16",
     "org.codehaus.groovy.runtime.callsite.CallSiteArray",
     "groovy.jmx.builder.JmxEventEmitter",
     "org.codehaus.groovy.runtime.dgm$1110",
     "org.codehaus.groovy.tools.shell.ParseStatus",
     "org.codehaus.groovy.util.SingleKeyHashMap",
     "org.codehaus.groovy.runtime.dgm$1123",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure12$_closure19",
     "org.codehaus.groovy.control.customizers.builder.SourceAwareCustomizerFactory$SourceOptions",
     "org.codehaus.groovy.runtime.dgm$1122",
     "org.codehaus.groovy.runtime.dgm$1125",
     "org.codehaus.groovy.runtime.dgm$1124",
     "org.codehaus.groovy.runtime.dgm$1127",
     "groovy.swing.binding.JComponentProperties$7",
     "org.codehaus.groovy.runtime.dgm$1126",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure12$_closure18",
     "groovy.swing.binding.JComponentProperties$6",
     "org.codehaus.groovy.runtime.dgm$1129",
     "groovy.swing.binding.JComponentProperties$5",
     "org.codehaus.groovy.runtime.dgm$1128",
     "org.codehaus.groovy.runtime.metaclass.MixedInMetaClass",
     "org.codehaus.groovy.tools.GrapeMain$_closure2$_closure11$_closure14",
     "groovy.lang.ExpandoMetaClass$MixedInAccessor$2$1",
     "org.codehaus.groovy.ast.InterfaceHelperClassNode",
     "groovyjarjarasm.asm.commons.AdviceAdapter",
     "org.codehaus.groovy.antlr.treewalker.TraversalHelper",
     "org.codehaus.groovy.classgen.asm.BinaryLongExpressionHelper",
     "org.codehaus.groovy.vmplugin.v7.Java7$2",
     "org.codehaus.groovy.vmplugin.v7.Java7$1",
     "groovy.lang.GString$1",
     "groovy.swing.binding.JComponentProperties$4",
     "org.codehaus.groovy.tools.shell.commands.ClearCommand",
     "groovy.swing.binding.JComponentProperties$3",
     "groovy.swing.binding.JComponentProperties$2",
     "groovy.swing.binding.JComponentProperties$1",
     "org.codehaus.groovy.runtime.memoize.Memoize$MemoizeNullValue",
     "groovy.inspect.swingui.AstBrowser$_main_closure2",
     "org.codehaus.groovy.runtime.dgm$1121",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure9$_closure12$_closure20",
     "org.codehaus.groovy.runtime.dgm$1120",
     "org.codehaus.groovy.runtime.dgm$1134",
     "org.codehaus.groovy.runtime.dgm$1133",
     "groovyjarjarasm.asm.ByteVector",
     "org.codehaus.groovy.runtime.dgm$1136",
     "org.codehaus.groovy.runtime.dgm$1135",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_parameter_closure10",
     "org.codehaus.groovy.runtime.dgm$1138",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_parameter_closure11",
     "org.codehaus.groovy.runtime.dgm$1137",
     "org.codehaus.groovy.runtime.dgm$1139",
     "org.codehaus.groovy.tools.DocGenerator",
     "org.codehaus.groovy.tools.GrapeMain$_closure2$_closure11",
     "org.codehaus.groovy.tools.GrapeMain$_closure2$_closure10",
     "org.codehaus.groovy.ast.expr.AnnotationConstantExpression",
     "groovyjarjarantlr.debug.SemanticPredicateEvent",
     "org.codehaus.groovy.tools.GrapeMain$_closure2$_closure12",
     "groovy.lang.BenchmarkInterceptor",
     "groovy.util.CliBuilder$_option_closure1",
     "org.codehaus.groovy.ant.CompileTaskSupport",
     "org.codehaus.groovy.ast.ClassHelper$ClassHelperCache",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$IntegerFloat",
     "groovyjarjarantlr.debug.NewLineListener",
     "org.codehaus.groovy.util.HashCodeHelper",
     "org.codehaus.groovy.tools.shell.completion.VariableSyntaxCompletor",
     "groovyjarjarantlr.debug.misc.JTreeASTModel",
     "org.codehaus.groovy.tools.gse.StringSetMap",
     "groovy.sql.Sql$PreparedQueryCommand",
     "org.codehaus.groovy.runtime.dgm$1130",
     "org.codehaus.groovy.runtime.dgm$1132",
     "org.codehaus.groovy.runtime.dgm$1131",
     "groovyjarjarantlr.StringLiteralSymbol",
     "org.codehaus.groovy.runtime.dgm$1145",
     "org.codehaus.groovy.runtime.dgm$1144",
     "org.codehaus.groovy.runtime.dgm$1147",
     "org.codehaus.groovy.tools.shell.RelaxedParser",
     "groovy.lang.MetaClassRegistry$MetaClassCreationHandle",
     "org.codehaus.groovy.runtime.dgm$1146",
     "groovyjarjarasm.asm.tree.ParameterNode",
     "org.codehaus.groovy.runtime.dgm$1149",
     "org.codehaus.groovy.runtime.dgm$1148",
     "org.codehaus.groovy.ast.AstToTextHelper",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod$MethodClosureMetaMethod",
     "org.codehaus.groovy.tools.shell.CommandSupport",
     "org.codehaus.groovy.tools.GroovyStarter",
     "groovy.util.logging.Log",
     "groovy.ui.text.TextUndoManager",
     "org.codehaus.groovy.util.ReferenceType$PhantomRef",
     "org.codehaus.groovy.runtime.callsite.GetEffectivePogoPropertySite",
     "org.codehaus.groovy.runtime.SocketGroovyMethods$1",
     "org.codehaus.groovy.runtime.dgm$1141",
     "org.codehaus.groovy.runtime.dgm$1140",
     "org.codehaus.groovy.runtime.dgm$1143",
     "org.codehaus.groovy.runtime.dgm$1142",
     "org.codehaus.groovy.runtime.dgm$1156",
     "org.codehaus.groovy.tools.shell.commands.ImportCompleter",
     "org.codehaus.groovy.runtime.dgm$1155",
     "org.codehaus.groovy.runtime.dgm$1158",
     "org.codehaus.groovy.tools.DocGenerator$_generateIndexMap_closure14",
     "org.codehaus.groovy.runtime.dgm$1157",
     "org.codehaus.groovy.tools.DocGenerator$_generateIndexMap_closure13",
     "org.codehaus.groovy.runtime.dgm$1159",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods",
     "groovyjarjarantlr.debug.ParserTokenListener",
     "org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal",
     "org.codehaus.groovy.tools.shell.completion.GroovySyntaxCompletor$CompletionCase",
     "org.codehaus.groovy.runtime.dgm$1150",
     "org.codehaus.groovy.runtime.dgm$1152",
     "org.codehaus.groovy.runtime.dgm$1151",
     "org.codehaus.groovy.runtime.dgm$1154",
     "org.codehaus.groovy.runtime.dgm$1153",
     "org.codehaus.groovy.runtime.dgm$1167",
     "org.codehaus.groovy.runtime.dgm$1166",
     "org.codehaus.groovy.runtime.dgm$1169",
     "org.codehaus.groovy.tools.shell.PatchedCandidateListCompletionHandler",
     "org.codehaus.groovy.runtime.dgm$1168",
     "org.codehaus.groovy.ast.AnnotationNode",
     "groovy.io.GroovyPrintStream",
     "org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation",
     "groovyjarjarcommonscli.HelpFormatter$OptionComparator",
     "org.codehaus.groovy.reflection.ClassInfo$LazyCachedClassRef",
     "groovy.lang.MetaArrayLengthProperty",
     "org.codehaus.groovy.tools.shell.completion.ReflectionCompletionCandidate",
     "groovy.util.ObjectGraphBuilder$RelationNameResolver",
     "org.codehaus.groovy.runtime.dgm$1161",
     "org.codehaus.groovy.runtime.dgm$1160",
     "org.codehaus.groovy.runtime.dgm$1163",
     "org.codehaus.groovy.runtime.dgm$1162",
     "org.codehaus.groovy.runtime.dgm$1165",
     "org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$1",
     "org.codehaus.groovy.runtime.dgm$1164",
     "org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$2",
     "groovy.ui.view.BasicContentPane",
     "groovy.ui.Console$_paste_closure23",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayPutAtMetaMethod$MyPojoMetaMethodSite",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitCatchStatement_closure31",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitBitwiseNegationExpression_closure40",
     "org.codehaus.groovy.runtime.dgm$1170",
     "org.codehaus.groovy.classgen.asm.BinaryIntExpressionHelper",
     "org.codehaus.groovy.ast.expr.MapEntryExpression",
     "org.codehaus.groovy.tools.shell.Groovysh$_closure2",
     "org.codehaus.groovy.tools.shell.Groovysh$_closure1",
     "groovyjarjarasm.asm.tree.FieldNode",
     "org.codehaus.groovy.tools.DocGenerator$DocType",
     "org.codehaus.groovy.tools.groovydoc.ExternalGroovyClassDoc",
     "org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation",
     "org.codehaus.groovy.ant.Groovy",
     "groovy.transform.stc.ClosureParams",
     "org.codehaus.groovy.transform.sc.transformers.CompareIdentityExpression",
     "org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter",
     "org.codehaus.groovy.transform.trait.Traits",
     "groovy.util.slurpersupport.Attributes$1",
     "groovyjarjarantlr.preprocessor.PreprocessorTokenTypes",
     "groovyjarjarantlr.TokenStreamHiddenTokenFilter",
     "groovy.model.ClosureModel",
     "groovyjarjarantlr.debug.Event",
     "org.codehaus.groovy.runtime.Reflector",
     "groovy.swing.SwingBuilder$_edt_closure1",
     "groovyjarjarcommonscli.GroovyInternalPosixParser",
     "org.codehaus.groovy.control.customizers.builder.SourceAwareCustomizerFactory",
     "org.codehaus.groovy.bsf.CachingGroovyEngine$1",
     "org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite",
     "org.codehaus.groovy.reflection.stdclasses.CharacterCachedClass",
     "org.codehaus.groovy.syntax.Token",
     "org.codehaus.groovy.ast.expr.CastExpression",
     "org.codehaus.groovy.groovydoc.GroovyPackageDoc",
     "groovy.swing.binding.JComboBoxSelectedElementBinding",
     "groovyjarjarantlr.ByteBuffer",
     "org.codehaus.groovy.transform.stc.SecondPassExpression",
     "org.codehaus.groovy.classgen.asm.BinaryExpressionMultiTypeDispatcher",
     "groovy.mock.interceptor.Demand",
     "groovyjarjarantlr.WildcardElement",
     "org.codehaus.groovy.util.TripleKeyHashMap",
     "groovy.text.Template",
     "groovy.lang.MissingFieldException",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitClosureListExpression_closure52",
     "groovy.jmx.builder.JmxEventEmitter$NumberSequencer",
     "groovyjarjarasm.asm.Label",
     "org.codehaus.groovy.tools.DocGenerator$DocMethod$_getParametersSignature_closure1",
     "org.codehaus.groovy.runtime.callsite.PojoMetaClassGetPropertySite",
     "groovy.util.slurpersupport.Node$1",
     "groovy.swing.binding.JTextComponentProperties$1",
     "groovy.util.slurpersupport.Node$3",
     "groovy.util.slurpersupport.Node$2",
     "groovyjarjarantlr.CSharpCharFormatter",
     "groovy.util.slurpersupport.Node$4",
     "org.codehaus.groovy.classgen.asm.UnaryExpressionHelper",
     "groovy.grape.GrapeIvy$_getDependencies_closure7$_closure18",
     "org.codehaus.groovy.control.customizers.builder.CustomizersFactory",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure6$_closure22",
     "groovy.grape.GrapeIvy$_getDependencies_closure7$_closure19",
     "groovyjarjarantlr.TokenStreamBasicFilter",
     "groovy.lang.Closure$WritableClosure",
     "org.codehaus.groovy.tools.shell.completion.FileNameCompleter",
     "groovy.util.logging.Log4j2$Log4j2LoggingStrategy",
     "org.codehaus.groovy.classgen.ClassGeneratorException",
     "org.codehaus.groovy.runtime.powerassert.Value",
     "org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite",
     "org.codehaus.groovy.classgen.Verifier$SwapInitStatement",
     "org.codehaus.groovy.runtime.ProxyGeneratorAdapter$1",
     "groovy.json.internal.CharBuf",
     "org.codehaus.groovy.classgen.Verifier$1",
     "org.codehaus.groovy.transform.NewifyASTTransformation",
     "org.codehaus.groovy.transform.SortableASTTransformation",
     "groovyjarjarantlr.CommonHiddenStreamToken",
     "org.codehaus.groovy.classgen.Verifier$3",
     "org.codehaus.groovy.classgen.Verifier$2",
     "org.codehaus.groovy.tools.shell.commands.SaveCommand",
     "org.codehaus.groovy.classgen.Verifier$5",
     "org.codehaus.groovy.classgen.Verifier$4",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer$_visitBlockStatement_closure3$_closure9",
     "org.codehaus.groovy.classgen.Verifier$7",
     "org.codehaus.groovy.classgen.Verifier$6",
     "org.codehaus.groovy.classgen.Verifier$9",
     "org.codehaus.groovy.classgen.Verifier$8",
     "org.codehaus.groovy.reflection.stdclasses.ObjectCachedClass",
     "groovyjarjarasm.asm.tree.LabelNode",
     "org.codehaus.groovy.control.customizers.ImportCustomizer$Import",
     "org.codehaus.groovy.runtime.DefaultGroovyMethods$ZipPostIterator",
     "groovy.lang.DelegatesTo$Target",
     "org.codehaus.groovy.GroovyBugError",
     "groovy.transform.TypeChecked",
     "org.codehaus.groovy.runtime.metaclass.ThreadManagedMetaBeanProperty$ThreadBoundGetter",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitMethodCallExpression_closure17",
     "org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite",
     "org.codehaus.groovy.transform.tailrec.CollectRecursiveCalls",
     "groovy.lang.Newify",
     "groovy.servlet.ServletBinding",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$DoubleInteger",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitExpressionStatement_closure6",
     "org.codehaus.groovy.runtime.metaclass.ThreadManagedMetaBeanProperty$ThreadBoundSetter",
     "org.codehaus.groovy.tools.shell.ComplexCommandSupport$_createCompleters_closure2",
     "groovy.xml.streamingmarkupsupport.BaseMarkupBuilder",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ShortArrayPutAtMetaMethod$MyPojoMetaMethodSite",
     "org.codehaus.groovy.transform.ASTTestTransformation$LabelFinder",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingSupport$ExtensionMethodCache$1",
     "groovy.ui.Console$_copy_closure22",
     "org.codehaus.groovy.runtime.metaclass.MixinInstanceMetaMethod",
     "org.codehaus.groovy.groovydoc.GroovyMemberDoc",
     "org.codehaus.groovy.classgen.asm.InvocationWriter$1",
     "groovy.sql.GroovyResultSet",
     "org.codehaus.groovy.runtime.metaclass.MethodHelper",
     "org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce",
     "org.codehaus.groovy.tools.DocGenerator$DocUtil",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitCastExpression_closure41",
     "org.codehaus.groovy.transform.tailrec.UsedVariableTracker",
     "groovy.jmx.builder.JmxBuilderTools",
     "org.codehaus.groovy.tools.shell.Main",
     "groovy.text.GStringTemplateEngine$GStringTemplate$1",
     "org.codehaus.groovy.util.AbstractConcurrentMapBase$Segment",
     "groovy.util.ObservableList$ObservableIterator",
     "groovy.util.StringTestUtil",
     "org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrap",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitRangeExpression_closure34",
     "org.codehaus.groovy.transform.FieldASTTransformation",
     "groovyjarjarantlr.debug.DebuggingCharScanner",
     "groovyjarjarantlr.debug.MessageEvent",
     "groovyjarjarantlr.ParserSharedInputState",
     "org.codehaus.groovy.tools.shell.Evaluator",
     "groovyjarjarantlr.preprocessor.GrammarFile",
     "groovy.ui.ConsoleIvyPlugin",
     "groovy.transform.AutoExternalize",
     "org.codehaus.groovy.reflection.ClassInfo$ClassInfoAction",
     "org.codehaus.groovy.classgen.asm.MopWriter$1",
     "org.codehaus.groovy.control.io.StringReaderSource",
     "org.codehaus.groovy.jsr223.ScriptStaticExtensions",
     "groovy.swing.factory.TRFactory",
     "groovy.util.NodeList$1",
     "groovy.ui.Console$_run_closure2",
     "groovy.ui.Console$_run_closure1",
     "groovy.json.internal.Value",
     "groovy.ui.Console$_run_closure3",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler",
     "groovy.time.TimeDatumDependentDuration$1",
     "org.codehaus.groovy.binding.PropertyBinding$3",
     "org.codehaus.groovy.binding.PropertyBinding$1",
     "org.codehaus.groovy.binding.PropertyBinding$2",
     "org.codehaus.groovy.tools.shell.commands.ShowCommand$_closure1$_closure5",
     "org.codehaus.groovy.classgen.asm.sc.StaticPropertyAccessHelper$PoppingMethodCallExpression",
     "org.codehaus.groovy.runtime.dgm$800",
     "org.codehaus.groovy.runtime.dgm$801",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitPostfixExpression_closure23",
     "groovy.transform.AutoCloneStyle",
     "org.codehaus.groovy.runtime.dgm$802",
     "org.codehaus.groovy.runtime.dgm$803",
     "org.codehaus.groovy.transform.sc.transformers.ClosureExpressionTransformer",
     "org.codehaus.groovy.runtime.dgm$804",
     "org.codehaus.groovy.runtime.dgm$805",
     "org.codehaus.groovy.runtime.dgm$806",
     "org.codehaus.groovy.runtime.dgm$807",
     "org.codehaus.groovy.runtime.dgm$808",
     "org.codehaus.groovy.runtime.dgm$809",
     "org.codehaus.groovy.tools.shell.PatchedCandidateListCompletionHandler$_complete_closure1",
     "org.codehaus.groovy.vmplugin.v7.Java7",
     "groovy.swing.impl.TableLayout",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap$ValueIterator",
     "org.codehaus.groovy.tools.groovydoc.SimpleGroovyAnnotationRef",
     "groovy.util.DelegatingScript",
     "org.codehaus.groovy.util.ReferenceType$WeakRef",
     "groovy.jmx.builder.JmxTimerFactory$_getNormalizedRecipientList_closure1",
     "org.codehaus.groovy.runtime.dgm$810",
     "org.codehaus.groovy.runtime.dgm$811",
     "org.codehaus.groovy.runtime.dgm$812",
     "org.codehaus.groovy.runtime.dgm$813",
     "org.codehaus.groovy.runtime.dgm$814",
     "org.codehaus.groovy.runtime.dgm$815",
     "org.codehaus.groovy.runtime.dgm$816",
     "org.codehaus.groovy.runtime.dgm$817",
     "org.codehaus.groovy.runtime.dgm$818",
     "org.codehaus.groovy.runtime.dgm$819",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$FloatLong",
     "groovy.io.FileVisitResult",
     "groovy.io.PlatformLineWriter",
     "groovyjarjarantlr.ToolErrorHandler",
     "groovyjarjarantlr.TreeParserSharedInputState",
     "groovy.ui.text.FindReplaceUtility$FindAction",
     "groovyjarjarantlr.actions.csharp.ActionLexerTokenTypes",
     "org.codehaus.groovy.ast.expr.MapExpression",
     "org.codehaus.groovy.vmplugin.v5.Java5",
     "org.codehaus.groovy.reflection.GeneratedMetaMethod$DgmMethodRecord",
     "org.codehaus.groovy.runtime.dgm$820",
     "org.codehaus.groovy.runtime.dgm$821",
     "org.codehaus.groovy.runtime.dgm$822",
     "org.codehaus.groovy.runtime.dgm$823",
     "org.codehaus.groovy.runtime.dgm$824",
     "org.codehaus.groovy.runtime.dgm$825",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap$HashIterator",
     "org.codehaus.groovy.runtime.dgm$826",
     "org.codehaus.groovy.runtime.dgm$827",
     "org.codehaus.groovy.ast.tools.ClosureUtils",
     "org.codehaus.groovy.runtime.dgm$828",
     "org.codehaus.groovy.runtime.dgm$829",
     "groovy.swing.binding.JComponentProperties$6$1",
     "groovy.beans.ListenerListASTTransformation",
     "groovyjarjarantlr.ANTLRError",
     "groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure3$_closure6",
     "groovy.jmx.builder.JmxBeansFactory$_newInstance_closure1",
     "org.codehaus.groovy.control.LabelVerifier",
     "org.codehaus.groovy.tools.DocGenerator$DocUtil$_codify_closure2",
     "org.codehaus.groovy.runtime.dgm$830",
     "org.codehaus.groovy.runtime.dgm$831",
     "groovy.lang.MissingMethodException",
     "org.codehaus.groovy.runtime.dgm$832",
     "org.codehaus.groovy.runtime.dgm$833",
     "org.codehaus.groovy.runtime.dgm$834",
     "org.codehaus.groovy.runtime.dgm$835",
     "org.codehaus.groovy.runtime.dgm$836",
     "org.codehaus.groovy.runtime.dgm$837",
     "org.codehaus.groovy.runtime.dgm$838",
     "org.codehaus.groovy.runtime.dgm$839",
     "org.codehaus.groovy.ast.expr.FieldExpression",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_switchStatement_closure21",
     "groovy.json.internal.BaseJsonParser",
     "org.codehaus.groovy.control.CompilationUnit$14",
     "org.codehaus.groovy.control.CompilationUnit$13",
     "org.codehaus.groovy.control.CompilationUnit$16",
     "groovy.lang.MapWithDefault",
     "org.codehaus.groovy.control.CompilationUnit$15",
     "org.codehaus.groovy.control.CompilationUnit$18",
     "org.codehaus.groovy.runtime.dgm$840",
     "org.codehaus.groovy.control.CompilationUnit$17",
     "org.codehaus.groovy.runtime.dgm$841",
     "org.codehaus.groovy.classgen.asm.StatementMetaTypeChooser",
     "org.codehaus.groovy.runtime.dgm$842",
     "org.codehaus.groovy.runtime.dgm$843",
     "groovyjarjarantlr.TreeBlockContext",
     "org.codehaus.groovy.runtime.dgm$844",
     "org.codehaus.groovy.runtime.dgm$845",
     "org.codehaus.groovy.runtime.dgm$846",
     "org.codehaus.groovy.runtime.dgm$847",
     "org.codehaus.groovy.runtime.dgm$848",
     "org.codehaus.groovy.runtime.dgm$849",
     "org.codehaus.groovy.classgen.asm.sc.StaticInvocationWriter",
     "groovy.util.ObservableList$ChangeType",
     "org.codehaus.groovy.control.CompilationUnit$10",
     "org.codehaus.groovy.control.CompilationUnit$12",
     "org.codehaus.groovy.control.CompilationUnit$11",
     "org.codehaus.groovy.util.AbstractConcurrentDoubleKeyMap$Entry",
     "groovy.lang.ClosureInvokingMethod",
     "org.codehaus.groovy.runtime.dgm$850",
     "org.codehaus.groovy.runtime.dgm$851",
     "org.codehaus.groovy.runtime.dgm$852",
     "org.codehaus.groovy.runtime.dgm$853",
     "org.codehaus.groovy.ast.ClassHelper",
     "org.codehaus.groovy.runtime.dgm$854",
     "org.codehaus.groovy.tools.shell.commands.ImportCompleter$_complete_closure7",
     "groovyjarjarantlr.ASTPair",
     "org.codehaus.groovy.runtime.dgm$855",
     "org.codehaus.groovy.tools.shell.commands.ImportCompleter$_complete_closure6",
     "org.codehaus.groovy.runtime.dgm$856",
     "org.codehaus.groovy.tools.shell.commands.ImportCompleter$_complete_closure5",
     "groovy.transform.Immutable",
     "org.codehaus.groovy.runtime.dgm$857",
     "org.codehaus.groovy.tools.shell.commands.ImportCompleter$_complete_closure4",
     "org.codehaus.groovy.runtime.dgm$858",
     "org.codehaus.groovy.tools.shell.commands.ImportCompleter$_complete_closure3",
     "groovy.ui.view.GTKDefaults$_run_closure1",
     "org.codehaus.groovy.runtime.dgm$859",
     "org.codehaus.groovy.tools.shell.commands.ImportCompleter$_complete_closure2",
     "groovy.ui.view.GTKDefaults$_run_closure2",
     "org.codehaus.groovy.tools.shell.commands.ImportCompleter$_complete_closure1",
     "groovy.swing.binding.JComboBoxMetaMethods$_enhanceMetaClass_closure1",
     "groovy.json.internal.ValueContainer$1",
     "groovy.swing.binding.JComboBoxMetaMethods$_enhanceMetaClass_closure2",
     "groovyjarjarantlr.Lookahead",
     "groovy.util.ProxyGenerator$CacheKey$ClassReference",
     "groovy.lang.GroovyInterceptable",
     "groovy.swing.binding.JComboBoxMetaMethods$_enhanceMetaClass_closure3",
     "org.codehaus.groovy.tools.shell.Shell",
     "groovy.transform.ASTTest",
     "org.codehaus.groovy.runtime.dgm$860",
     "org.codehaus.groovy.runtime.dgm$861",
     "org.codehaus.groovy.transform.ASTTestTransformation$ProgressCallbackChain$_closure1",
     "org.codehaus.groovy.runtime.dgm$862",
     "org.codehaus.groovy.runtime.dgm$863",
     "org.codehaus.groovy.runtime.dgm$864",
     "groovy.sql.Sql$AbstractQueryCommand",
     "org.codehaus.groovy.runtime.dgm$865",
     "org.codehaus.groovy.runtime.dgm$866",
     "org.codehaus.groovy.runtime.dgm$867",
     "org.codehaus.groovy.runtime.dgm$868",
     "org.codehaus.groovy.runtime.dgm$869",
     "org.codehaus.groovy.tools.shell.commands.SetCommand$_execute_closure2",
     "org.codehaus.groovy.bsf.CachingGroovyEngine",
     "groovy.sql.GroovyResultSetProxy",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitAttributeExpression_closure47",
     "groovy.util.GroovyScriptEngine$ScriptCacheEntry",
     "org.codehaus.groovy.transform.ASTTransformation",
     "groovy.swing.factory.ScrollPaneFactory",
     "groovyjarjarantlr.DocBookCodeGenerator",
     "groovyjarjarantlr.JavaBlockFinishingInfo",
     "org.codehaus.groovy.runtime.dgm$870",
     "org.codehaus.groovy.runtime.dgm$871",
     "groovy.jmx.builder.JmxMetaMapBuilder$_buildListenerMapFrom_closure11",
     "org.codehaus.groovy.runtime.dgm$872",
     "groovy.lang.GroovyRuntimeException",
     "org.codehaus.groovy.runtime.dgm$873",
     "org.codehaus.groovy.runtime.dgm$874",
     "groovyjarjarantlr.RuleBlock",
     "org.codehaus.groovy.runtime.dgm$875",
     "org.codehaus.groovy.runtime.dgm$876",
     "org.codehaus.groovy.runtime.dgm$877",
     "org.codehaus.groovy.runtime.dgm$878",
     "org.codehaus.groovy.runtime.dgm$879",
     "groovy.json.internal.ByteScanner",
     "org.codehaus.groovy.runtime.metaclass.MixinInstanceMetaProperty",
     "groovy.util.slurpersupport.FilteredNodeChildren$1",
     "groovy.swing.factory.CellEditorPrepareFactory",
     "groovy.xml.StreamingDOMBuilder$_closure1",
     "groovy.xml.StreamingDOMBuilder$_closure2",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ByteArrayGetAtMetaMethod$MyPojoMetaMethodSite",
     "org.codehaus.groovy.runtime.wrappers.IntWrapper",
     "groovy.xml.StreamingDOMBuilder$_closure3",
     "groovy.xml.StreamingDOMBuilder$_closure4",
     "groovyjarjarasm.asm.util.TraceFieldVisitor",
     "org.codehaus.groovy.control.messages.ExceptionMessage",
     "org.codehaus.groovy.runtime.dgm$880",
     "org.codehaus.groovy.runtime.dgm$881",
     "org.codehaus.groovy.runtime.dgm$882",
     "org.codehaus.groovy.runtime.dgm$883",
     "org.codehaus.groovy.runtime.dgm$884",
     "org.codehaus.groovy.runtime.dgm$885",
     "org.codehaus.groovy.runtime.dgm$886",
     "org.codehaus.groovy.tools.javac.JavaCompiler",
     "org.codehaus.groovy.runtime.dgm$887",
     "org.codehaus.groovy.runtime.dgm$888",
     "org.codehaus.groovy.runtime.dgm$889",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingVisitor$ExtensionMethodDeclaringClass",
     "groovyjarjarantlr.collections.impl.LList",
     "groovyjarjarantlr.debug.InputBufferReporter",
     "org.codehaus.groovy.util.ManagedReference",
     "groovy.grape.GrapeIvy$_closure1$_closure16",
     "org.codehaus.groovy.runtime.callsite.CallSiteAwareMetaMethod",
     "org.codehaus.groovy.transform.CompileDynamicProcessor",
     "org.codehaus.groovy.control.customizers.builder.CompilerCustomizationBuilder",
     "groovy.transform.SelfType",
     "org.codehaus.groovy.runtime.dgm$890",
     "org.codehaus.groovy.runtime.dgm$891",
     "groovy.swing.binding.JListMetaMethods",
     "org.codehaus.groovy.runtime.dgm$892",
     "org.codehaus.groovy.runtime.dgm$893",
     "groovy.json.JsonOutput",
     "org.codehaus.groovy.runtime.dgm$894",
     "org.codehaus.groovy.runtime.dgm$895",
     "org.codehaus.groovy.runtime.dgm$896",
     "org.codehaus.groovy.runtime.dgm$897",
     "org.codehaus.groovy.runtime.dgm$898",
     "org.codehaus.groovy.runtime.dgm$899",
     "org.codehaus.groovy.control.CompilerConfiguration",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer$_closure2",
     "groovy.util.ObservableSet$ObservableIterator",
     "org.codehaus.groovy.transform.tailrec.StatementReplacer$_closure1",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap$BarrierLock",
     "org.codehaus.groovy.util.StringUtil$_expandHyphen_closure2",
     "groovy.swing.factory.ClosureColumnFactory",
     "groovy.ui.view.BasicStatusBar$_run_closure1",
     "org.codehaus.groovy.control.ClassNodeResolver$1",
     "org.codehaus.groovy.runtime.ProcessGroovyMethods",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure10$_closure23",
     "groovy.util.slurpersupport.FilteredNodeChildren",
     "groovyjarjarantlr.preprocessor.PreprocessorLexer",
     "org.codehaus.groovy.control.customizers.builder.ImportCustomizerFactory",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingVisitor",
     "org.codehaus.groovy.tools.shell.util.WrappedInputStream",
     "groovy.swing.factory.InternalFrameFactory",
     "groovy.grape.GrabAnnotationTransformation",
     "groovy.inspect.swingui.TreeNodeBuildingNodeOperation$_doCollectMethodData_closure6",
     "groovyjarjarantlr.MakeGrammar",
     "groovyjarjarasm.asm.tree.IincInsnNode",
     "org.codehaus.groovy.ast.GroovyCodeVisitor",
     "groovy.swing.factory.CompoundBorderFactory",
     "groovy.xml.StreamingMarkupBuilder$_bindNode_closure8",
     "groovyjarjarantlr.ANTLRException",
     "groovy.ui.text.GroovyFilter$1",
     "groovy.lang.SpreadMapEvaluatingException",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass",
     "org.codehaus.groovy.tools.shell.commands.ShadowCommand",
     "groovy.util.GroovyScriptEngine$LocalData",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure12",
     "org.codehaus.groovy.transform.LogASTTransformation$LoggingStrategy",
     "groovy.swing.binding.JSpinnerValueBinding",
     "org.codehaus.groovy.tools.shell.commands.InspectCommandCompletor",
     "groovy.lang.ExpandoMetaClass$MixedInAccessor$1",
     "groovy.util.ObservableMap$PropertyClearedEvent",
     "groovy.lang.ExpandoMetaClass$MixedInAccessor$2",
     "org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$EntryIterator",
     "org.codehaus.groovy.ast.builder.AstStringCompiler$_compile_closure1",
     "groovy.inspect.swingui.TreeNodeBuildingNodeOperation$_collectFieldData_closure5",
     "org.codehaus.groovy.transform.stc.StaticTypesMarker",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure11",
     "groovy.sql.InParameter",
     "org.codehaus.groovy.tools.DocGenerator$_generateAll_closure10",
     "org.codehaus.groovy.classgen.asm.VariableSlotLoader",
     "groovy.util.slurpersupport.NodeParents$1",
     "org.codehaus.groovy.runtime.dgm$100",
     "org.codehaus.groovy.runtime.dgm$101",
     "org.codehaus.groovy.runtime.dgm$102",
     "org.codehaus.groovy.runtime.dgm$103",
     "org.codehaus.groovy.runtime.dgm$104",
     "org.codehaus.groovy.runtime.dgm$105",
     "groovyjarjarantlr.debug.InputBufferAdapter",
     "org.codehaus.groovy.runtime.dgm$106",
     "org.codehaus.groovy.runtime.dgm$107",
     "org.codehaus.groovy.runtime.dgm$108",
     "org.codehaus.groovy.runtime.dgm$109",
     "org.codehaus.groovy.control.customizers.SecureASTCustomizer",
     "groovy.sql.BatchingPreparedStatementWrapper",
     "groovy.grape.GrapeIvy$_enumerateGrapes_closure11",
     "org.codehaus.groovy.groovydoc.GroovyRootDoc",
     "groovy.jmx.builder.JmxOperationInfoManager$_buildParamInfosFromMaps_closure4",
     "groovyjarjarantlr.PreservingFileWriter",
     "org.codehaus.groovy.syntax.TokenMismatchException",
     "org.codehaus.groovy.runtime.dgm$110",
     "org.codehaus.groovy.transform.trait.Traits$Implemented",
     "org.codehaus.groovy.runtime.dgm$111",
     "groovyjarjarcommonscli.TypeHandler",
     "org.codehaus.groovy.runtime.dgm$112",
     "org.codehaus.groovy.runtime.dgm$113",
     "org.codehaus.groovy.runtime.dgm$114",
     "org.codehaus.groovy.binding.ClosureTriggerBinding",
     "org.codehaus.groovy.runtime.dgm$115",
     "org.codehaus.groovy.runtime.dgm$116",
     "org.codehaus.groovy.runtime.dgm$117",
     "org.codehaus.groovy.runtime.dgm$118",
     "org.codehaus.groovy.runtime.dgm$119",
     "org.codehaus.groovy.transform.LogASTTransformation$AbstractLoggingStrategy",
     "groovy.beans.PropertyReader",
     "groovy.text.markup.DelegatingIndentWriter",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$FloatDouble",
     "groovy.lang.EmptyRange",
     "groovyjarjarantlr.ASTIterator",
     "org.codehaus.groovy.reflection.GroovyClassValuePreJava7$EntryWithValue",
     "org.codehaus.groovy.tools.shell.util.PackageHelper",
     "org.codehaus.groovy.vmplugin.v7.IndyGuardsFiltersAndSignatures",
     "groovyjarjarasm.asm.commons.TryCatchBlockSorter$1",
     "groovy.lang.GroovyClassLoader",
     "org.codehaus.groovy.runtime.ProcessGroovyMethods$TextDumper",
     "groovy.ui.GroovyMain",
     "groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5",
     "groovy.util.ScriptException",
     "org.codehaus.groovy.runtime.dgm$120",
     "org.codehaus.groovy.runtime.dgm$1002",
     "org.codehaus.groovy.runtime.dgm$121",
     "org.codehaus.groovy.runtime.dgm$1001",
     "org.codehaus.groovy.runtime.dgm$122",
     "org.codehaus.groovy.runtime.dgm$1004",
     "org.codehaus.groovy.runtime.dgm$123",
     "groovy.swing.factory.TDFactory",
     "org.codehaus.groovy.runtime.dgm$1003",
     "org.codehaus.groovy.runtime.dgm$124",
     "org.codehaus.groovy.runtime.dgm$1006",
     "org.codehaus.groovy.runtime.dgm$125",
     "org.codehaus.groovy.runtime.dgm$1005",
     "org.codehaus.groovy.runtime.dgm$126",
     "org.codehaus.groovy.util.SingleKeyHashMap$Copier",
     "org.codehaus.groovy.runtime.dgm$1008",
     "org.codehaus.groovy.runtime.dgm$127",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$DoubleFloat",
     "org.codehaus.groovy.runtime.dgm$1007",
     "org.codehaus.groovy.runtime.dgm$128",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure8$_closure12$_closure14$_closure15",
     "org.codehaus.groovy.runtime.dgm$129",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure8$_closure12$_closure14$_closure16",
     "org.codehaus.groovy.runtime.dgm$1009",
     "org.codehaus.groovy.ast.stmt.ExpressionStatement",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$FloatDouble",
     "org.codehaus.groovy.runtime.dgm$1000",
     "org.codehaus.groovy.runtime.dgm$130",
     "org.codehaus.groovy.transform.stc.TypeCheckingContext",
     "org.codehaus.groovy.runtime.dgm$131",
     "org.codehaus.groovy.tools.DocGenerator$_parseSource_closure2$_closure19$_closure20",
     "org.codehaus.groovy.runtime.dgm$1013",
     "org.codehaus.groovy.runtime.dgm$132",
     "org.codehaus.groovy.runtime.dgm$1012",
     "org.codehaus.groovy.runtime.dgm$133",
     "org.codehaus.groovy.runtime.dgm$1015",
     "org.codehaus.groovy.runtime.dgm$134",
     "org.codehaus.groovy.runtime.dgm$1014",
     "org.codehaus.groovy.runtime.dgm$135",
     "org.codehaus.groovy.runtime.dgm$1017",
     "org.codehaus.groovy.runtime.dgm$136",
     "groovy.mock.interceptor.Ignore",
     "org.codehaus.groovy.runtime.dgm$1016",
     "org.codehaus.groovy.runtime.dgm$137",
     "org.codehaus.groovy.runtime.dgm$1019",
     "org.codehaus.groovy.runtime.dgm$138",
     "org.codehaus.groovy.runtime.dgm$1018",
     "org.codehaus.groovy.runtime.dgm$139",
     "org.codehaus.groovy.runtime.callsite.ConstructorMetaClassSite",
     "org.codehaus.groovy.syntax.ReadException",
     "org.codehaus.groovy.transform.AnnotationCollectorTransform",
     "groovy.util.slurpersupport.FilteredAttributes",
     "groovy.lang.MetaClassImpl$Index",
     "org.codehaus.groovy.util.ManagedDoubleKeyMap$Entry",
     "org.codehaus.groovy.runtime.callsite.MetaClassConstructorSite",
     "org.codehaus.groovy.runtime.dgm$140",
     "org.codehaus.groovy.runtime.dgm$1011",
     "org.codehaus.groovy.runtime.dgm$141",
     "org.codehaus.groovy.runtime.dgm$1010",
     "org.codehaus.groovy.runtime.dgm$142",
     "org.codehaus.groovy.tools.DocGenerator$_parseSource_closure2$_closure19$_closure20$_closure21",
     "org.codehaus.groovy.runtime.dgm$1024",
     "org.codehaus.groovy.runtime.dgm$143",
     "org.codehaus.groovy.runtime.dgm$1023",
     "org.codehaus.groovy.runtime.dgm$144",
     "org.codehaus.groovy.runtime.dgm$1026",
     "org.codehaus.groovy.runtime.dgm$145",
     "org.codehaus.groovy.ast.stmt.LoopingStatement",
     "org.codehaus.groovy.runtime.dgm$1025",
     "org.codehaus.groovy.runtime.dgm$146",
     "org.codehaus.groovy.runtime.dgm$1028",
     "org.codehaus.groovy.runtime.dgm$147",
     "org.codehaus.groovy.classgen.Verifier$SwapInitStatement$SwapInitInstruction",
     "org.codehaus.groovy.runtime.dgm$1027",
     "org.codehaus.groovy.runtime.dgm$148",
     "org.codehaus.groovy.runtime.dgm$149",
     "groovyjarjarantlr.TokenStreamIOException",
     "org.codehaus.groovy.runtime.dgm$1029",
     "groovy.inspect.Inspector",
     "groovyjarjarasm.asm.util.TraceAnnotationVisitor",
     "groovy.lang.ExpandoMetaClass$MixedInAccessor$1$1",
     "org.codehaus.groovy.tools.shell.util.MessageSource",
     "groovy.swing.binding.JTableSelectedElementBinding",
     "groovy.jmx.builder.JmxEventEmitterMBean",
     "org.codehaus.groovy.runtime.dgm$1020",
     "org.codehaus.groovy.runtime.dgm$150",
     "groovyjarjarasm.asm.FieldVisitor",
     "org.codehaus.groovy.runtime.dgm$151",
     "org.codehaus.groovy.runtime.dgm$1022",
     "org.codehaus.groovy.runtime.dgm$152",
     "org.codehaus.groovy.runtime.dgm$1021",
     "org.codehaus.groovy.runtime.dgm$153",
     "org.codehaus.groovy.runtime.dgm$1035",
     "org.codehaus.groovy.runtime.dgm$154",
     "org.codehaus.groovy.runtime.dgm$1034",
     "org.codehaus.groovy.runtime.dgm$155",
     "org.codehaus.groovy.runtime.dgm$1037",
     "org.codehaus.groovy.runtime.dgm$156",
     "groovy.lang.GroovyClassLoader$TimestampAdder",
     "groovy.swing.factory.EmptyBorderFactory$_newInstance_closure1",
     "org.codehaus.groovy.runtime.dgm$1036",
     "org.codehaus.groovy.runtime.dgm$157",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure8",
     "org.codehaus.groovy.runtime.dgm$1039",
     "org.codehaus.groovy.runtime.dgm$158",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure9",
     "org.codehaus.groovy.runtime.dgm$1038",
     "org.codehaus.groovy.runtime.dgm$159",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$FloatFloat",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitPropertyExpression_closure46",
     "groovy.lang.Sequence",
     "groovy.swing.factory.ImageIconFactory",
     "org.codehaus.groovy.util.StringUtil$_tr_closure1",
     "org.codehaus.groovy.tools.shell.commands.SetCommand",
     "org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header",
     "org.codehaus.groovy.transform.sc.StaticCompilationVisitor",
     "groovyjarjarasm.asm.tree.IntInsnNode",
     "org.codehaus.groovy.runtime.dgm$160",
     "org.codehaus.groovy.runtime.dgm$1031",
     "org.codehaus.groovy.runtime.dgm$161",
     "org.codehaus.groovy.runtime.dgm$1030",
     "org.codehaus.groovy.runtime.dgm$162",
     "groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2$_closure5",
     "org.codehaus.groovy.runtime.dgm$1033",
     "org.codehaus.groovy.runtime.dgm$163",
     "org.codehaus.groovy.transform.sc.transformers.BooleanExpressionTransformer$OptimizingBooleanExpression",
     "org.codehaus.groovy.runtime.dgm$1032",
     "org.codehaus.groovy.runtime.dgm$164",
     "groovy.transform.ExternalizeMethods",
     "org.codehaus.groovy.runtime.dgm$1046",
     "org.codehaus.groovy.runtime.dgm$165",
     "org.codehaus.groovy.runtime.dgm$1045",
     "org.codehaus.groovy.runtime.dgm$166",
     "org.codehaus.groovy.runtime.dgm$1048",
     "org.codehaus.groovy.runtime.dgm$167",
     "org.codehaus.groovy.runtime.dgm$1047",
     "org.codehaus.groovy.runtime.dgm$168",
     "org.codehaus.groovy.runtime.dgm$169",
     "org.codehaus.groovy.runtime.dgm$1049",
     "groovy.ui.text.StructuredSyntaxDocumentFilter$MLComparator",
     "org.codehaus.groovy.ast.tools.WideningCategories$1",
     "org.codehaus.groovy.transform.sc.transformers.ListExpressionTransformer",
     "groovy.swing.factory.ColumnModelFactory",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ShortArrayGetAtMetaMethod$MyPojoMetaMethodSite",
     "groovy.util.slurpersupport.NodeChild$2",
     "groovy.swing.binding.AbstractSyntheticBinding",
     "groovy.util.slurpersupport.NodeChild$1",
     "groovy.util.CliBuilder$_expandArgumentFile_closure3$_closure4",
     "org.codehaus.groovy.ast.tools.WideningCategories$2",
     "org.codehaus.groovy.runtime.dgm$1040",
     "org.codehaus.groovy.runtime.dgm$170",
     "groovyjarjarantlr.TreeElement",
     "org.codehaus.groovy.runtime.dgm$171",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingSupport",
     "org.codehaus.groovy.runtime.dgm$1042",
     "org.codehaus.groovy.runtime.dgm$172",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.FloatArrayGetAtMetaMethod$MyPojoMetaMethodSite",
     "org.codehaus.groovy.runtime.dgm$1041",
     "org.codehaus.groovy.runtime.dgm$173",
     "org.codehaus.groovy.runtime.dgm$1044",
     "org.codehaus.groovy.runtime.dgm$174",
     "org.codehaus.groovy.runtime.dgm$1043",
     "org.codehaus.groovy.runtime.dgm$175",
     "org.codehaus.groovy.runtime.dgm$1057",
     "org.codehaus.groovy.runtime.dgm$176",
     "org.codehaus.groovy.runtime.dgm$1056",
     "org.codehaus.groovy.runtime.dgm$177",
     "org.codehaus.groovy.runtime.dgm$1059",
     "org.codehaus.groovy.runtime.dgm$178",
     "org.codehaus.groovy.tools.shell.util.Preferences",
     "org.codehaus.groovy.runtime.dgm$1058",
     "org.codehaus.groovy.runtime.dgm$179",
     "groovy.transform.CompilationUnitAware",
     "org.codehaus.groovy.runtime.metaclass.NewStaticMetaMethod",
     "org.codehaus.groovy.runtime.dgm$180",
     "org.codehaus.groovy.runtime.dgm$1051",
     "org.codehaus.groovy.runtime.dgm$181",
     "org.codehaus.groovy.runtime.dgm$1050",
     "org.codehaus.groovy.runtime.dgm$182",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitArgumentlistExpression_closure51",
     "org.codehaus.groovy.ant.UberCompileTask$JavacAdapter",
     "org.codehaus.groovy.runtime.dgm$1053",
     "org.codehaus.groovy.runtime.dgm$183",
     "org.codehaus.groovy.runtime.dgm$1052",
     "org.codehaus.groovy.runtime.dgm$184",
     "groovy.grape.GrapeIvy$_uninstallArtifact_closure9",
     "org.codehaus.groovy.runtime.dgm$1055",
     "org.codehaus.groovy.runtime.dgm$185",
     "org.codehaus.groovy.runtime.dgm$1054",
     "org.codehaus.groovy.runtime.dgm$186",
     "org.codehaus.groovy.runtime.dgm$1068",
     "org.codehaus.groovy.runtime.dgm$187",
     "org.codehaus.groovy.runtime.dgm$1067",
     "org.codehaus.groovy.runtime.dgm$188",
     "org.codehaus.groovy.runtime.dgm$189",
     "org.codehaus.groovy.runtime.dgm$1069",
     "groovy.inspect.swingui.AstBrowserUiPreferences$_closure1",
     "groovy.text.StreamingTemplateEngine$StreamingTemplate$Position",
     "groovy.ui.view.Defaults",
     "org.codehaus.groovy.classgen.genArrayAccess",
     "org.codehaus.groovy.transform.stc.AbstractTypeCheckingExtension$TypeCheckingScope",
     "org.codehaus.groovy.antlr.java.JavaRecognizer",
     "org.codehaus.groovy.runtime.dgm$1060",
     "org.codehaus.groovy.runtime.dgm$190",
     "org.codehaus.groovy.runtime.dgm$191",
     "org.codehaus.groovy.runtime.dgm$1062",
     "org.codehaus.groovy.runtime.dgm$192",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitReturnStatement_closure7",
     "org.codehaus.groovy.runtime.dgm$1061",
     "org.codehaus.groovy.runtime.dgm$193",
     "groovy.json.internal.Chr",
     "org.codehaus.groovy.runtime.dgm$1064",
     "org.codehaus.groovy.runtime.dgm$194",
     "org.codehaus.groovy.runtime.dgm$1063",
     "org.codehaus.groovy.runtime.dgm$195",
     "org.codehaus.groovy.runtime.dgm$1066",
     "org.codehaus.groovy.runtime.dgm$196",
     "org.codehaus.groovy.runtime.dgm$1065",
     "org.codehaus.groovy.runtime.dgm$197",
     "org.codehaus.groovy.runtime.dgm$1079",
     "org.codehaus.groovy.runtime.dgm$198",
     "org.codehaus.groovy.tools.groovydoc.Main",
     "org.codehaus.groovy.runtime.dgm$1078",
     "org.codehaus.groovy.runtime.dgm$199",
     "groovy.lang.ExpandoMetaClass$StaticDefiningClosure",
     "org.codehaus.groovy.runtime.StackTraceUtils",
     "org.codehaus.groovy.transform.ImmutableASTTransformation",
     "org.codehaus.groovy.classgen.asm.AssertionWriter",
     "org.codehaus.groovy.runtime.dgm$1071",
     "org.codehaus.groovy.runtime.dgm$1070",
     "org.codehaus.groovy.runtime.dgm$1073",
     "org.codehaus.groovy.runtime.dgm$1072",
     "org.codehaus.groovy.runtime.dgm$1075",
     "org.codehaus.groovy.runtime.dgm$1074",
     "org.codehaus.groovy.runtime.dgm$1077",
     "org.codehaus.groovy.runtime.dgm$1076",
     "org.codehaus.groovy.runtime.dgm$1089",
     "groovy.inspect.swingui.AstNodeToScriptVisitor$_visitArgumentlistExpression_closure24",
     "groovy.swing.binding.JTextComponentProperties",
     "groovy.jmx.builder.JmxTimerFactory",
     "org.codehaus.groovy.ast.tools.GenericsUtils$1",
     "org.codehaus.groovy.ast.tools.GenericsUtils$2",
     "org.codehaus.groovy.transform.trait.TraitReceiverTransformer",
     "org.codehaus.groovy.control.io.URLReaderSource",
     "groovy.util.NodeBuilder",
     "org.codehaus.groovy.runtime.dgm$1080",
     "org.codehaus.groovy.runtime.dgm$1082",
     "org.codehaus.groovy.runtime.dgm$1081",
     "org.codehaus.groovy.runtime.dgm$1084",
     "org.codehaus.groovy.transform.tailrec.HasRecursiveCalls",
     "org.codehaus.groovy.runtime.dgm$1083",
     "org.codehaus.groovy.runtime.dgm$1086",
     "org.codehaus.groovy.runtime.dgm$1085",
     "groovy.grape.GrapeIvy$_listDependencies_closure15",
     "org.codehaus.groovy.runtime.dgm$1088",
     "org.codehaus.groovy.runtime.dgm$1087",
     "groovy.lang.MetaObjectProtocol",
     "org.codehaus.groovy.tools.shell.Groovysh$_run_closure9",
     "groovy.swing.factory.TabbedPaneFactory",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_makeNodeWithClassParameter_closure7",
     "groovy.json.JsonTokenType$1",
     "groovy.transform.Canonical",
     "org.codehaus.groovy.transform.sc.StaticCompilationMetadataKeys",
     "groovy.grape.GrapeIvy$_processCategoryMethods_closure2$_closure17",
     "groovy.util.ProxyGenerator$CacheKey$1",
     "org.codehaus.groovy.runtime.dgm$1091",
     "org.codehaus.groovy.runtime.dgm$1090",
     "groovy.util.GroovyScriptEngine$1",
     "org.codehaus.groovy.ast.expr.GStringExpression",
     "org.codehaus.groovy.runtime.dgm$1093",
     "groovy.util.GroovyScriptEngine$2",
     "org.codehaus.groovy.runtime.dgm$1092",
     "org.codehaus.groovy.runtime.dgm$1095",
     "groovy.ui.SystemOutputInterceptor",
     "org.codehaus.groovy.runtime.dgm$1094",
     "org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap$Values",
     "org.codehaus.groovy.runtime.dgm$1097",
     "org.codehaus.groovy.runtime.dgm$1096",
     "org.codehaus.groovy.runtime.dgm$1099",
     "org.codehaus.groovy.runtime.dgm$1098",
     "groovy.swing.factory.FrameFactory",
     "groovy.grape.GrapeIvy$_processSerializedCategoryMethods_closure3",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply$DoubleDouble",
     "org.codehaus.groovy.runtime.StringGroovyMethods$1",
     "org.codehaus.groovy.control.ResolveVisitor",
     "groovy.grape.GrapeEngine",
     "org.codehaus.groovy.transform.sc.StaticCompilationVisitor$1",
     "groovyjarjarantlr.PythonBlockFinishingInfo",
     "groovy.swing.binding.JSpinnerProperties",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation$_position2VariableMappingFor_closure5",
     "groovy.ui.OutputTransforms$_loadOutputTransforms_closure3",
     "groovy.ui.OutputTransforms$_loadOutputTransforms_closure4",
     "groovy.ui.OutputTransforms$_loadOutputTransforms_closure5",
     "groovy.ui.OutputTransforms$_loadOutputTransforms_closure1",
     "groovy.ui.OutputTransforms$_loadOutputTransforms_closure2",
     "org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$DoubleFloat",
     "org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure2",
     "org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure1",
     "org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure4",
     "org.codehaus.groovy.tools.shell.commands.PurgeCommand$_closure3",
     "groovyjarjarantlr.collections.impl.IndexedVector",
     "org.codehaus.groovy.runtime.ProxyGeneratorAdapter",
     "org.codehaus.groovy.transform.stc.TypeCheckingExtension",
     "org.codehaus.groovy.reflection.GroovyClassValue",
     "groovy.swing.factory.RendererUpdateFactory",
     "groovy.lang.Writable",
     "org.codehaus.groovy.tools.shell.commands.HistoryCommand$_createCompleters_closure5",
     "org.codehaus.groovy.transform.tailrec.AstHelper",
     "org.codehaus.groovy.control.CompilationUnit",
     "org.codehaus.groovy.antlr.parser.GroovyLexer$1",
     "groovy.ui.text.TextEditor$ShiftTabAction",
     "groovy.util.ConfigSlurper",
     "org.codehaus.groovy.reflection.ClassLoaderForClassArtifacts",
     "groovy.ui.Console$__clinit__closure26",
     "groovy.ui.Console$__clinit__closure25",
     "groovy.beans.BindableASTTransformation",
     "groovy.ui.OutputTransforms",
     "org.codehaus.groovy.transform.ASTTransformationVisitor$2",
     "org.codehaus.groovy.transform.ASTTransformationVisitor$1",
     "org.codehaus.groovy.transform.ASTTransformationVisitor$4",
     "org.codehaus.groovy.transform.ASTTransformationVisitor$3",
     "groovy.ui.ConsoleTextEditor$PrintAction",
     "org.codehaus.groovy.reflection.stdclasses.CachedSAMClass$1",
     "org.codehaus.groovy.ant.LoggingHelper",
     "org.codehaus.groovy.transform.PackageScopeASTTransformation",
     "groovy.swing.factory.TitledBorderFactory",
     "org.codehaus.groovy.transform.stc.StaticTypeCheckingVisitor$1",
     "org.codehaus.groovy.classgen.asm.sc.StaticInvocationWriter$CheckcastReceiverExpression",
     "org.codehaus.groovy.runtime.dgm$900",
     "org.codehaus.groovy.tools.shell.commands.ExitCommand",
     "org.codehaus.groovy.runtime.dgm$901",
     "groovy.util.ObservableMap$ChangeType",
     "org.codehaus.groovy.runtime.dgm$902",
     "org.codehaus.groovy.tools.shell.Groovysh",
     "groovy.transform.IndexedProperty",
     "org.codehaus.groovy.runtime.dgm$903",
     "org.codehaus.groovy.runtime.dgm$904",
     "org.codehaus.groovy.tools.shell.ShellRunner$_closure1",
     "org.codehaus.groovy.runtime.dgm$905",
     "org.codehaus.groovy.runtime.dgm$906",
     "org.codehaus.groovy.runtime.dgm$907",
     "groovy.ui.Console$_selectAll_closure24",
     "org.codehaus.groovy.runtime.dgm$908",
     "org.codehaus.groovy.runtime.dgm$909",
     "org.codehaus.groovy.ast.ClassNode$MapOfLists",
     "groovy.io.FileType",
     "groovy.util.XmlSlurper$1",
     "org.codehaus.groovy.util.ManagedDoubleKeyMap$Ref",
     "org.codehaus.groovy.antlr.AntlrParserPlugin",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure10$_closure23$_closure24$_closure30",
     "org.codehaus.groovy.binding.AggregateBinding",
     "org.codehaus.groovy.runtime.dgm$910",
     "org.codehaus.groovy.runtime.dgm$911",
     "org.codehaus.groovy.runtime.dgm$912",
     "org.codehaus.groovy.runtime.dgm$913",
     "org.codehaus.groovy.runtime.dgm$914",
     "org.codehaus.groovy.runtime.dgm$915",
     "org.codehaus.groovy.classgen.asm.CompileStack$1",
     "org.codehaus.groovy.runtime.dgm$916",
     "org.codehaus.groovy.runtime.dgm$917",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure10$_closure23$_closure24$_closure29",
     "org.codehaus.groovy.classgen.asm.CallSiteWriter",
     "org.codehaus.groovy.runtime.dgm$918",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure10$_closure23$_closure24$_closure28",
     "org.codehaus.groovy.runtime.dgm$919",
     "groovy.lang.MetaClassImpl",
     "groovy.swing.factory.WidgetFactory",
     "org.codehaus.groovy.reflection.ReflectionUtils$1",
     "groovyjarjarantlr.collections.Stack",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure10$_closure23$_closure24$_closure25",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure10$_closure23$_closure24$_closure27",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure10$_closure23$_closure24$_closure26",
     "org.codehaus.groovy.ast.expr.PropertyExpression",
     "groovyjarjarasm.asm.Context",
     "org.codehaus.groovy.ast.builder.AstBuilder$_buildFromBlock_closure1",
     "org.codehaus.groovy.runtime.dgm$920",
     "org.codehaus.groovy.runtime.dgm$921",
     "org.codehaus.groovy.runtime.dgm$922",
     "org.codehaus.groovy.runtime.dgm$923",
     "org.codehaus.groovy.runtime.dgm$924",
     "org.codehaus.groovy.runtime.dgm$925",
     "org.codehaus.groovy.runtime.dgm$926",
     "org.codehaus.groovy.runtime.dgm$927",
     "org.codehaus.groovy.runtime.dgm$928",
     "org.codehaus.groovy.runtime.dgm$929",
     "org.codehaus.groovy.transform.SourceURIASTTransformation",
     "groovy.time.TimeDuration",
     "groovy.transform.stc.ThirdParam$SecondGenericType",
     "org.codehaus.groovy.runtime.dgm$930",
     "groovyjarjarantlr.actions.python.CodeLexerTokenTypes",
     "org.codehaus.groovy.runtime.dgm$931",
     "org.codehaus.groovy.reflection.CachedClass$1",
     "org.codehaus.groovy.runtime.dgm$932",
     "org.codehaus.groovy.reflection.CachedClass$2",
     "org.codehaus.groovy.runtime.dgm$933",
     "org.codehaus.groovy.reflection.CachedClass$3",
     "org.codehaus.groovy.runtime.dgm$934",
     "groovy.util.ObjectGraphBuilder$DefaultChildPropertySetter",
     "org.codehaus.groovy.reflection.CachedClass$4",
     "org.codehaus.groovy.runtime.dgm$935",
     "org.codehaus.groovy.reflection.CachedClass$5",
     "org.codehaus.groovy.runtime.dgm$936",
     "org.codehaus.groovy.reflection.CachedClass$6",
     "org.codehaus.groovy.runtime.dgm$937",
     "org.codehaus.groovy.reflection.CachedClass$7",
     "org.codehaus.groovy.runtime.dgm$938",
     "org.codehaus.groovy.reflection.CachedClass$8",
     "org.codehaus.groovy.runtime.dgm$939",
     "groovy.lang.Range",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod",
     "groovyjarjarantlr.RuleEndElement",
     "org.codehaus.groovy.tools.shell.Main$_main_closure2",
     "org.codehaus.groovy.runtime.RangeInfo",
     "org.codehaus.groovy.tools.shell.Main$_main_closure1",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitArrayExpression_closure31",
     "org.codehaus.groovy.runtime.dgm$940",
     "org.codehaus.groovy.runtime.dgm$941",
     "groovy.swing.factory.ListFactory$_onHandleNodeAttributes_closure1",
     "org.codehaus.groovy.runtime.dgm$942",
     "org.codehaus.groovy.runtime.dgm$943",
     "groovy.io.GroovyPrintWriter",
     "org.codehaus.groovy.runtime.dgm$944",
     "org.codehaus.groovy.runtime.dgm$945",
     "org.codehaus.groovy.runtime.dgm$946",
     "org.codehaus.groovy.runtime.dgm$947",
     "org.codehaus.groovy.runtime.dgm$948",
     "groovyjarjarantlr.Grammar",
     "org.codehaus.groovy.runtime.dgm$949",
     "groovy.ui.view.BasicToolBar$_run_closure1",
     "groovyjarjarantlr.collections.impl.ASTEnumerator",
     "groovy.swing.factory.TableModelFactory$_onNodeCompleted_closure2",
     "groovyjarjarantlr.Token",
     "groovy.swing.factory.TableModelFactory$_onNodeCompleted_closure1",
     "groovy.swing.binding.JComboBoxMetaMethods",
     "groovyjarjarantlr.actions.python.CodeLexer",
     "org.codehaus.groovy.runtime.dgm$950",
     "org.codehaus.groovy.runtime.dgm$951",
     "org.codehaus.groovy.runtime.dgm$952",
     "groovy.sql.SqlOrderByVisitor",
     "org.codehaus.groovy.runtime.dgm$953",
     "org.codehaus.groovy.runtime.dgm$954",
     "org.codehaus.groovy.runtime.dgm$955",
     "org.codehaus.groovy.binding.SwingTimerTriggerBinding",
     "org.codehaus.groovy.runtime.dgm$956",
     "org.codehaus.groovy.runtime.dgm$957",
     "org.codehaus.groovy.runtime.dgm$958",
     "org.codehaus.groovy.runtime.dgm$959",
     "org.codehaus.groovy.ast.InnerClassNode",
     "org.codehaus.groovy.runtime.callsite.StaticMetaClassSite",
     "org.codehaus.groovy.reflection.stdclasses.NumberCachedClass",
     "groovy.swing.binding.JScrollBarProperties$1",
     "org.codehaus.groovy.vmplugin.v7.Selector$CastSelector",
     "groovy.text.markup.TemplateResolver",
     "groovy.util.ConfigObject",
     "groovy.swing.factory.SplitPaneFactory",
     "org.codehaus.groovy.runtime.dgm$960",
     "groovy.util.GroovyTestCase",
     "org.codehaus.groovy.runtime.dgm$961",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$LongFloat",
     "org.codehaus.groovy.runtime.dgm$962",
     "org.codehaus.groovy.runtime.dgm$963",
     "org.codehaus.groovy.runtime.dgm$964",
     "org.codehaus.groovy.runtime.dgm$965",
     "org.codehaus.groovy.runtime.dgm$966",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus$NumberNumber",
     "org.codehaus.groovy.runtime.dgm$967",
     "org.codehaus.groovy.runtime.dgm$968",
     "org.codehaus.groovy.runtime.dgm$969",
     "org.codehaus.groovy.tools.shell.util.XmlCommandRegistrar$_register_closure1",
     "groovy.lang.GroovyObject",
     "org.codehaus.groovy.reflection.ReflectionUtils$ClassContextHelper",
     "groovy.util.slurpersupport.NoChildren$1",
     "org.codehaus.groovy.transform.stc.ExtensionMethodNode",
     "groovy.lang.ProxyMetaClass$2",
     "groovy.lang.ProxyMetaClass$1",
     "groovy.swing.binding.JComponentProperties$5$1",
     "groovy.lang.ProxyMetaClass$3",
     "org.codehaus.groovy.tools.shell.commands.LoadCommand",
     "groovy.util.ConfigBinding",
     "org.codehaus.groovy.runtime.dgm$970",
     "org.codehaus.groovy.runtime.dgm$971",
     "org.codehaus.groovy.runtime.dgm$972",
     "org.codehaus.groovy.runtime.dgm$973",
     "org.codehaus.groovy.runtime.dgm$974",
     "org.codehaus.groovy.runtime.callsite.PogoInterceptableSite",
     "org.codehaus.groovy.runtime.dgm$975",
     "groovy.servlet.AbstractHttpServlet",
     "groovy.ui.ConsoleTextEditor$3",
     "org.codehaus.groovy.runtime.dgm$976",
     "groovy.inspect.swingui.AstNodeToScriptAdapter",
     "groovy.ui.ConsoleTextEditor$4",
     "org.codehaus.groovy.runtime.dgm$977",
     "groovy.ui.ConsoleTextEditor$1",
     "org.codehaus.groovy.runtime.dgm$978",
     "groovy.ui.ConsoleTextEditor$2",
     "groovy.util.ObservableSet$ElementEvent",
     "org.codehaus.groovy.runtime.dgm$979",
     "org.codehaus.groovy.transform.BuilderASTTransformation$AbstractBuilderStrategy$PropertyInfo",
     "groovy.ui.GroovySocketServer",
     "groovyjarjarantlr.ParserGrammar",
     "groovy.xml.StreamingMarkupBuilder",
     "groovy.swing.impl.ListWrapperListModel",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ByteArrayPutAtMetaMethod$MyPojoMetaMethodSite",
     "groovy.mock.interceptor.StrictExpectation",
     "groovy.transform.TailRecursive",
     "org.codehaus.groovy.antlr.java.Java2GroovyConverter",
     "org.codehaus.groovy.ast.tools.GenericsUtils",
     "groovyjarjarasm.asm.commons.TryCatchBlockSorter",
     "org.codehaus.groovy.antlr.treewalker.Visitor",
     "org.codehaus.groovy.control.GenericsVisitor",
     "org.codehaus.groovy.tools.groovydoc.OutputTool",
     "org.codehaus.groovy.transform.sc.StaticCompileTransformation",
     "groovy.ui.GroovyFileFilter$_accept_closure1",
     "org.codehaus.groovy.tools.shell.ExitNotification",
     "org.codehaus.groovy.util.ReferenceManager$1",
     "org.codehaus.groovy.util.ReferenceManager$2",
     "org.codehaus.groovy.runtime.dgm$980",
     "org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$1",
     "org.codehaus.groovy.runtime.dgm$981",
     "org.codehaus.groovy.runtime.dgm$982",
     "org.codehaus.groovy.runtime.callsite.ConstructorSite$NoParamSite",
     "org.codehaus.groovy.runtime.dgm$983",
     "org.codehaus.groovy.runtime.dgm$984",
     "org.codehaus.groovy.runtime.dgm$985",
     "groovy.lang.NonEmptySequence",
     "org.codehaus.groovy.runtime.dgm$986",
     "groovy.swing.binding.JTableMetaMethods$_enhanceMetaClass_closure3$_closure4",
     "org.codehaus.groovy.runtime.dgm$987",
     "org.codehaus.groovy.runtime.dgm$988",
     "org.codehaus.groovy.runtime.dgm$989",
     "groovy.text.XmlTemplateEngine$XmlWritable",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1",
     "org.codehaus.groovy.ant.VerifyClass",
     "groovyjarjarasm.asm.tree.TypeInsnNode",
     "org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod",
     "org.codehaus.groovy.binding.DeadEndException",
     "org.codehaus.groovy.ast.stmt.CaseStatement",
     "groovy.ui.text.TextEditor$FindAction",
     "org.codehaus.groovy.runtime.dgm$990",
     "org.codehaus.groovy.runtime.dgm$991",
     "org.codehaus.groovy.runtime.dgm$992",
     "org.codehaus.groovy.runtime.dgm$993",
     "org.codehaus.groovy.runtime.dgm$994",
     "org.codehaus.groovy.runtime.dgm$995",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.BooleanArrayGetAtMetaMethod",
     "org.codehaus.groovy.runtime.dgm$996",
     "org.codehaus.groovy.runtime.dgm$997",
     "org.codehaus.groovy.runtime.dgm$998",
     "org.codehaus.groovy.runtime.dgm$999",
     "groovy.json.internal.CharSequenceValue$1",
     "groovy.swing.LookAndFeelHelper$_closure3",
     "org.codehaus.groovy.runtime.metaclass.DefaultMetaClassInfo",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7",
     "groovy.swing.LookAndFeelHelper$_closure2",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure6",
     "groovy.swing.LookAndFeelHelper$_closure1",
     "groovy.json.internal.Cache",
     "groovy.swing.LookAndFeelHelper$_closure6",
     "groovy.swing.LookAndFeelHelper$_closure5",
     "groovy.swing.LookAndFeelHelper$_closure4",
     "org.codehaus.groovy.classgen.asm.AssertionWriter$AssertionTracker",
     "groovy.json.internal.MapItemValue",
     "groovy.util.AntBuilder",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation$_replaceRecursiveReturnsOutsideClosures_closure7",
     "org.codehaus.groovy.transform.tailrec.TailRecursiveASTTransformation$_replaceRecursiveReturnsOutsideClosures_closure6",
     "org.codehaus.groovy.ast.builder.AstSpecificationCompiler$_block_closure9",
     "groovy.util.ProxyGenerator$CacheKey",
     "groovy.json.internal.Sys",
     "groovy.ui.text.StructuredSyntaxDocumentFilter",
     "groovy.model.DefaultTableColumn",
     "groovy.inspect.swingui.AstBrowser$_run_closure4$_closure10",
     "groovyjarjarantlr.build.ANTLR",
     "groovy.xml.MarkupBuilder$ReplacingClosure",
     "org.codehaus.groovy.util.ManagedConcurrentMap$Segment",
     "org.codehaus.groovy.vmplugin.v7.IndyInterface$CALL_TYPES",
     "groovy.inspect.swingui.AstBrowser$_run_closure5$_closure37$_closure39",
     "groovy.inspect.swingui.AstBrowser$_run_closure5$_closure37$_closure38",
     "groovy.inspect.swingui.ScriptToTreeNodeAdapter$_compile_closure1",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv$IntegerDouble",
     "org.codehaus.groovy.transform.stc.SharedVariableCollector",
     "org.codehaus.groovy.runtime.callsite.PogoMetaClassGetPropertySite",
     "org.codehaus.groovy.runtime.m12n.PropertiesModuleFactory",
     "groovyjarjarantlr.JavaCodeGenerator",
     "org.codehaus.groovy.runtime.MethodRankHelper",
     "groovy.lang.PropertyAccessInterceptor",
     "groovyjarjarantlr.RuleSymbol",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11$_closure31$_closure32$_closure39",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11$_closure31$_closure32$_closure38",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11$_closure31$_closure32$_closure37",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11$_closure31$_closure32$_closure36",
     "groovy.lang.Reference",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11$_closure31$_closure32$_closure35",
     "org.codehaus.groovy.tools.shell.commands.PurgeCommand",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11$_closure31$_closure32$_closure34",
     "groovy.inspect.swingui.ObjectBrowser$_run_closure1$_closure3$_closure7$_closure11$_closure31$_closure32$_closure33",
     "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus$FloatDouble",
     "groovy.transform.Sortable",
     "groovy.lang.IllegalPropertyAccessException",
     "groovy.text.markup.MarkupTemplateEngine",
     "groovy.xml.StreamingSAXBuilder$_closure4$_closure9",
     "org.codehaus.groovy.runtime.MethodClosure",
     "org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$FastPathData",
     "groovy.transform.Field",
     "groovy.transform.ConditionalInterrupt",
     "org.codehaus.groovy.antlr.GroovySourceToken",
     "groovy.util.ClosureComparator",
     "groovy.util.logging.Commons$CommonsLoggingStrategy",
     "org.codehaus.groovy.runtime.metaclass.MethodMetaProperty$GetMethodMetaProperty",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitUnaryMinusExpression_closure38",
     "groovy.util.CliBuilder",
     "org.codehaus.groovy.tools.DocGenerator$DocUtil$_getLinkAnchor_closure3",
     "org.codehaus.groovy.tools.DocGenerator$DocUtil$_getLinkAnchor_closure4",
     "org.codehaus.groovy.ant.Groovyc",
     "org.codehaus.groovy.runtime.dgmimpl.arrays.ByteArrayGetAtMetaMethod",
     "groovy.swing.factory.BoxFactory",
     "groovyjarjarasm.asm.commons.CodeSizeEvaluator",
     "groovy.sql.GroovyRowResult",
     "groovyjarjarasm.asm.tree.AbstractInsnNode",
     "groovy.servlet.GroovyServlet",
     "groovy.json.internal.Byt",
     "groovy.util.ObservableMap",
     "groovyjarjarantlr.GrammarElement",
     "org.codehaus.groovy.tools.ast.TestHarnessOperation",
     "org.codehaus.groovy.ast.expr.SpreadMapExpression",
     "org.codehaus.groovy.runtime.metaclass.ClosureMetaClass$StandardClosureChooser",
     "groovyjarjarantlr.debug.ParserReporter",
     "org.codehaus.groovy.runtime.WritablePath",
     "groovy.json.internal.ValueContainer",
     "groovyjarjarantlr.LLkParser",
     "groovy.util.slurpersupport.Attribute$1",
     "groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitConstantExpression_closure42",
     "org.codehaus.groovy.ast.ImportNode",
     "groovy.util.JavadocAssertionTestSuite",
     "org.codehaus.groovy.runtime.metaclass.ReflectorLoader"
    ],
    "usedTypes": [
     "groovy.lang.MetaClass"
    ],
    "usageRatio": 0.00022722108611679165,
    "children": []
   },
   {
    "id": "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile",
    "coordinates": "org.jetbrains.kotlin:kotlin-stdlib:1.3.50",
    "groupId": "org.jetbrains.kotlin",
    "artifactId": "kotlin-stdlib",
    "version": "1.3.50",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 1326269,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "kotlin.text.ScreenFloatValueRegEx",
     "kotlin.annotation.AnnotationRetention",
     "kotlin.text.StringsKt__IndentKt$getIndentFunction$1",
     "kotlin.jvm.internal.markers.KMutableList",
     "kotlin.KotlinVersion",
     "kotlin.reflect.KAnnotatedElement",
     "kotlin.coroutines.experimental.CoroutinesKt",
     "kotlin.coroutines.experimental.CombinedContext",
     "kotlin.DslMarker",
     "kotlin.UNumbersKt",
     "kotlin.text.StringsKt__IndentKt$getIndentFunction$2",
     "kotlin.ULongKt",
     "kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$then$1",
     "kotlin.io.FileSystemException",
     "kotlin.reflect.KTypeProjection",
     "kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction2Migration",
     "kotlin.time.TimedValue",
     "kotlin.reflect.KProperty0$Getter",
     "kotlin.UByteKt",
     "kotlin.reflect.KMutableProperty$Setter",
     "kotlin.contracts.CallsInPlace",
     "kotlin.collections.SetsKt",
     "kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1",
     "kotlin.sequences.IndexingSequence$iterator$1",
     "kotlin.collections.AbstractMap$values$1",
     "kotlin.coroutines.experimental.SafeContinuation",
     "kotlin.contracts.ContractBuilder$DefaultImpls",
     "kotlin.collections.RingBuffer$iterator$1",
     "kotlin.text.SystemProperties",
     "kotlin.ULongArray",
     "kotlin.text.CharsetsKt",
     "kotlin.sequences.DropSequence",
     "kotlin.UIntArrayKt",
     "kotlin.coroutines.RestrictsSuspension",
     "kotlin.coroutines.experimental.CoroutineContext$plus$1",
     "kotlin.reflect.KParameter$Kind",
     "kotlin.internal.UProgressionUtilKt",
     "kotlin.collections.CollectionsKt__MutableCollectionsJVMKt",
     "kotlin.text.StringsKt__StringNumberConversionsJVMKt",
     "kotlin.annotation.AnnotationTarget",
     "kotlin.reflect.KType$DefaultImpls",
     "kotlin.jvm.internal.LongCompanionObject",
     "kotlin.collections.AbstractList$SubList",
     "kotlin.SuspendKt",
     "kotlin.ranges.LongProgressionIterator",
     "kotlin.coroutines.jvm.internal.SuspendLambda",
     "kotlin.collections.CollectionsKt__IteratorsJVMKt",
     "kotlin.jvm.internal.Ref$ShortRef",
     "kotlin.jvm.JvmSynthetic",
     "kotlin.reflect.KType",
     "kotlin.collections.MapsKt___MapsKt",
     "kotlin.collections.ArraysKt__ArraysKt",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsFirst$1",
     "kotlin.jvm.internal.LongSpreadBuilder",
     "kotlin.io.LinesSequence",
     "kotlin.ranges.CharProgression",
     "kotlin.LateinitKt",
     "kotlin.collections.MovingSubList",
     "kotlin.text.MatcherMatchResult",
     "kotlin.collections.CollectionsKt__CollectionsKt",
     "kotlin.internal.DynamicExtension",
     "kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics",
     "kotlin.PreconditionsKt",
     "kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1",
     "kotlin.ranges.URangesKt",
     "kotlin.jvm.internal.BooleanCompanionObject",
     "kotlin.ExtensionFunctionType",
     "kotlin.text.CharsKt__CharKt",
     "kotlin.reflect.KDeclarationContainer",
     "kotlin.jvm.internal.MutablePropertyReference",
     "kotlin.collections.FloatIterator",
     "kotlin.jvm.JvmOverloads",
     "kotlin.text.StringsKt__IndentKt",
     "kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache",
     "kotlin.TypeAliasesKt",
     "kotlin.jvm.JvmSuppressWildcards",
     "kotlin.comparisons.ComparisonsKt",
     "kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1",
     "kotlin.properties.ReadWriteProperty",
     "kotlin.collections.SlidingWindowKt",
     "kotlin.collections.GroupingKt__GroupingJVMKt",
     "kotlin.coroutines.experimental.AbstractCoroutineContextElement",
     "kotlin.coroutines.CoroutineContext$Element",
     "kotlin.io.ByteStreamsKt",
     "kotlin.coroutines.experimental.SafeContinuation$Companion",
     "kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings",
     "kotlin.UninitializedPropertyAccessException",
     "kotlin.jvm.internal.ClassReference",
     "kotlin.collections.ArraysKt___ArraysKt$groupingBy$1",
     "kotlin.text.StringsKt__StringsKt$splitToSequence$2",
     "kotlin.text.StringsKt__StringsKt$splitToSequence$1",
     "kotlin.text.MatcherMatchResult$groupValues$1",
     "kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1",
     "kotlin.jvm.internal.markers.KMutableIterable",
     "kotlin.jvm.JvmField",
     "kotlin.jvm.JvmDefault",
     "kotlin.coroutines.CoroutineContext$Key",
     "kotlin.collections.AbstractMutableMap",
     "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2",
     "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1",
     "kotlin.ranges.CharRange$Companion",
     "kotlin.coroutines.experimental.migration.ContextMigration",
     "kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1",
     "kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt",
     "kotlin.SinceKotlin",
     "kotlin.InitializedLazyImpl",
     "kotlin.sequences.SequenceBuilderIterator",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1",
     "kotlin.collections.AbstractIterator$WhenMappings",
     "kotlin.jvm.internal.CollectionToArray",
     "kotlin.jvm.internal.PrimitiveSpreadBuilder",
     "kotlin.system.ProcessKt",
     "kotlin.jvm.internal.Ref$ObjectRef",
     "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsKt",
     "kotlin.random.PlatformRandomKt",
     "kotlin.time.ClockMark",
     "kotlin.jvm.functions.Function3",
     "kotlin.jvm.functions.Function4",
     "kotlin.jvm.functions.Function1",
     "kotlin.jvm.functions.Function2",
     "kotlin.random.AbstractPlatformRandom",
     "kotlin.UIntKt",
     "kotlin.jvm.functions.Function0",
     "kotlin.jvm.functions.Function9",
     "kotlin.coroutines.intrinsics.IntrinsicsKt",
     "kotlin.jvm.functions.Function7",
     "kotlin.jvm.functions.Function8",
     "kotlin.jvm.functions.Function5",
     "kotlin.ranges.UIntProgression$Companion",
     "kotlin.jvm.functions.Function6",
     "kotlin.UByteArray",
     "kotlin.collections.CollectionsKt__MutableCollectionsKt",
     "kotlin.coroutines.experimental.CoroutineContext$Element",
     "kotlin.sequences.FilteringSequence",
     "kotlin.collections.ArrayAsCollection",
     "kotlin.sequences.FilteringSequence$iterator$1",
     "kotlin.UNINITIALIZED_VALUE",
     "kotlin.jvm.internal.FunctionReference",
     "kotlin.jvm.internal.MutablePropertyReference2Impl",
     "kotlin.jvm.internal.Ref$ByteRef",
     "kotlin.collections.CollectionsKt__ReversedViewsKt",
     "kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls",
     "kotlin.random.FallbackThreadLocalRandom",
     "kotlin.io.FilesKt__UtilsKt",
     "kotlin.reflect.KMutableProperty2",
     "kotlin.reflect.KMutableProperty1",
     "kotlin.reflect.KMutableProperty0",
     "kotlin.sequences.SubSequence$iterator$1",
     "kotlin.collections.ArraysKt___ArraysJvmKt",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsLast$1",
     "kotlin.ResultKt",
     "kotlin.io.ConsoleKt$decoder$2",
     "kotlin.UnsafeLazyImpl",
     "kotlin.concurrent.TimersKt$timerTask$1",
     "kotlin.io.FileTreeWalk$DirectoryState",
     "kotlin.OptionalExpectation",
     "kotlin.sequences.SequencesKt___SequencesKt$minus$1",
     "kotlin.collections.AbstractMutableSet",
     "kotlin.coroutines.experimental.migration.ContinuationMigration",
     "kotlin.sequences.SequencesKt___SequencesKt$minus$3",
     "kotlin.sequences.SequencesKt___SequencesKt$minus$2",
     "kotlin.coroutines.experimental.SequenceBuilder",
     "kotlin.sequences.SequencesKt___SequencesKt$minus$4",
     "kotlin.text.Regex",
     "kotlin.jvm.internal.CallableReference$NoReceiver",
     "kotlin.jvm.internal.markers.KMutableSet",
     "kotlin.jvm.internal.ArrayBooleanIterator",
     "kotlin.io.FilesKt__UtilsKt$copyRecursively$2",
     "kotlin.io.FilesKt__UtilsKt$copyRecursively$1",
     "kotlin.jvm.internal.TypeIntrinsics",
     "kotlin.jvm.internal.MutablePropertyReference0Impl",
     "kotlin.collections.CollectionsKt__IterablesKt",
     "kotlin.text.RegexKt",
     "kotlin.collections.AbstractMap$keys$1$iterator$1",
     "kotlin.annotation.Repeatable",
     "kotlin.io.FileWalkDirection",
     "kotlin.jvm.internal.ArrayDoubleIterator",
     "kotlin.Experimental",
     "kotlin.sequences.TransformingSequence$iterator$1",
     "kotlin.text.StringsKt___StringsKt$withIndex$1",
     "kotlin.internal.PlatformImplementations$ReflectAddSuppressedMethod",
     "kotlin.collections.AbstractList$ListIteratorImpl",
     "kotlin.annotation.Retention",
     "kotlin.ranges.RangesKt__RangesKt",
     "kotlin.coroutines.CombinedContext$toString$1",
     "kotlin.reflect.KTypeProjection$Companion",
     "kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1",
     "kotlin.time.DurationUnitKt$WhenMappings",
     "kotlin.coroutines.experimental.SafeContinuation$Fail",
     "kotlin.Result$Companion",
     "kotlin.coroutines.ContinuationKt$Continuation$1",
     "kotlin.sequences.TakeSequence$iterator$1",
     "kotlin.jvm.internal.FloatSpreadBuilder",
     "kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1",
     "kotlin.collections.UIntIterator",
     "kotlin.SafePublicationLazyImpl",
     "kotlin.ranges.IntProgression",
     "kotlin.jvm.internal.TypeReference$WhenMappings",
     "kotlin.collections.AbstractMap",
     "kotlin.io.LinesSequence$iterator$1",
     "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3",
     "kotlin.sequences.SequencesKt__SequencesKt$Sequence$1",
     "kotlin.ranges.CharProgression$Companion",
     "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2",
     "kotlin.random.RandomKt",
     "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5",
     "kotlin.concurrent.TimersKt",
     "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4",
     "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7",
     "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6",
     "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9",
     "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8",
     "kotlin.jvm.internal.MutablePropertyReference1Impl",
     "kotlin.jvm.internal.ByteSpreadBuilder",
     "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1",
     "kotlin.collections.AbstractMutableCollection",
     "kotlin.internal.PlatformImplementationsKt",
     "kotlin.collections.MapWithDefaultImpl",
     "kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1",
     "kotlin.sequences.SequencesKt___SequencesKt$zip$1",
     "kotlin.collections.MapsKt__MapsJVMKt",
     "kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1",
     "kotlin.ranges.ClosedRange",
     "kotlin.Deprecated",
     "kotlin.jvm.internal.FunctionBase",
     "kotlin.time.AbstractLongClock",
     "kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4",
     "kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3",
     "kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2",
     "kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1",
     "kotlin.text.MatchResult",
     "kotlin.collections.AbstractMap$toString$1",
     "kotlin.time.MonoClock",
     "kotlin.jvm.internal.IntSpreadBuilder",
     "kotlin.text.CharCategory",
     "kotlin.ranges.ClosedFloatingPointRange",
     "kotlin.ExperimentalUnsignedTypes",
     "kotlin.sequences.DistinctSequence",
     "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9",
     "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8",
     "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7",
     "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6",
     "kotlin.ExperimentalStdlibApi",
     "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5",
     "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4",
     "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3",
     "kotlin.jvm.internal.unsafe.MonitorKt",
     "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2",
     "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1",
     "kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1",
     "kotlin.contracts.InvocationKind",
     "kotlin.text.StringsKt___StringsJvmKt",
     "kotlin.text.MatchResult$Destructured",
     "kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt",
     "kotlin.ranges.UIntProgression",
     "kotlin.collections.IntIterator",
     "kotlin.collections.MutableMapWithDefault",
     "kotlin.ranges.UIntRange",
     "kotlin.jvm.internal.ArrayShortIterator",
     "kotlin.text.DelimitedRangesSequence",
     "kotlin.contracts.ReturnsNotNull",
     "kotlin.ULongArrayKt",
     "kotlin.text.StringsKt__RegexExtensionsKt",
     "kotlin.collections.LongIterator",
     "kotlin.ranges.RangesKt",
     "kotlin.random.FallbackThreadLocalRandom$implStorage$1",
     "kotlin.properties.ReadOnlyProperty",
     "kotlin.reflect.TypeOfKt",
     "kotlin.TypeCastException",
     "kotlin.internal.Exact",
     "kotlin.collections.ULongIterator",
     "kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2",
     "kotlin.contracts.SimpleEffect",
     "kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1",
     "kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4",
     "kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3",
     "kotlin.collections.IndexingIterator",
     "kotlin.comparisons.UComparisonsKt",
     "kotlin.Lazy",
     "kotlin.text.MatchGroup",
     "kotlin.coroutines.ContinuationInterceptor$Key",
     "kotlin.internal.RequireKotlin",
     "kotlin.DeprecationLevel",
     "kotlin.collections.ReversedListReadOnly",
     "kotlin.jvm.PurelyImplements",
     "kotlin.jvm.KotlinReflectionNotSupportedError",
     "kotlin.sequences.SequencesKt",
     "kotlin.NumbersKt",
     "kotlin.coroutines.experimental.RestrictsSuspension",
     "kotlin.coroutines.ContinuationInterceptor$DefaultImpls",
     "kotlin.time.AbstractLongClock$LongClockMark",
     "kotlin.collections.MutableMapWithDefaultImpl",
     "kotlin.coroutines.jvm.internal.DebugMetadataKt",
     "kotlin.jvm.JvmWildcard",
     "kotlin.ranges.ULongRange$Companion",
     "kotlin.comparisons.ReverseOrderComparator",
     "kotlin.sequences.TakeWhileSequence$iterator$1",
     "kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction0Migration",
     "kotlin.ranges.ComparableRange",
     "kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1",
     "kotlin.reflect.KParameter$DefaultImpls",
     "kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4",
     "kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3",
     "kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2",
     "kotlin.LazyKt$WhenMappings",
     "kotlin.ranges.IntProgressionIterator",
     "kotlin.ExperimentalMultiplatform",
     "kotlin.collections.AbstractMap$values$1$iterator$1",
     "kotlin.collections.EmptyMap",
     "kotlin.random.XorWowRandom",
     "kotlin.text.CharDirectionality$Companion$directionalityMap$2",
     "kotlin.ranges.LongRange$Companion",
     "kotlin.coroutines.jvm.internal.BaseContinuationImpl",
     "kotlin.coroutines.jvm.internal.CompletedContinuation",
     "kotlin.coroutines.experimental.ContinuationInterceptor",
     "kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1",
     "kotlin.StandardKt__StandardKt",
     "kotlin.coroutines.experimental.Continuation",
     "kotlin.jvm.functions.FunctionN",
     "kotlin.coroutines.AbstractCoroutineContextElement",
     "kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2",
     "kotlin.ranges.URangesKt___URangesKt",
     "kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4",
     "kotlin.text.UStringsKt",
     "kotlin.collections.MapsKt__MapsKt",
     "kotlin.collections.CollectionsKt__IteratorsKt",
     "kotlin.collections.CollectionsKt__IterablesKt$Iterable$1",
     "kotlin.time.AbstractDoubleClock",
     "kotlin.ranges.LongRange",
     "kotlin.collections.EmptyList",
     "kotlin.io.CloseableKt",
     "kotlin.random.PlatformRandom",
     "kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1",
     "kotlin.collections.GroupingKt__GroupingKt",
     "kotlin.jvm.internal.ArrayCharIterator",
     "kotlin.comparisons.ComparisonsKt___ComparisonsKt",
     "kotlin.jvm.internal.LocalVariableReferencesKt",
     "kotlin.text.Regex$Serialized$Companion",
     "kotlin.text.StringsKt___StringsKt$groupingBy$1",
     "kotlin.text.StringsKt___StringsKt",
     "kotlin.jvm.internal.InlineMarker",
     "kotlin.io.ConstantsKt",
     "kotlin.reflect.KMutableProperty1$Setter",
     "kotlin.io.TextStreamsKt",
     "kotlin.annotation.Target",
     "kotlin.sequences.DropTakeSequence",
     "kotlin.PreconditionsKt__AssertionsJVMKt",
     "kotlin.time.DurationKt",
     "kotlin.jvm.internal.SpreadBuilder",
     "kotlin.UByteArray$Iterator",
     "kotlin.jvm.internal.FloatCompanionObject",
     "kotlin.reflect.KProperty$DefaultImpls",
     "kotlin.jvm.internal.Ref",
     "kotlin.sequences.DropWhileSequence",
     "kotlin.sequences.SequencesKt__SequenceBuilderKt",
     "kotlin.text.StringsKt__StringsJVMKt",
     "kotlin.jvm.JvmPackageName",
     "kotlin.sequences.FlatteningSequence$iterator$1",
     "kotlin.contracts.Effect",
     "kotlin.coroutines.experimental.CombinedContext$toString$1",
     "kotlin.ranges.ULongProgressionIterator",
     "kotlin.contracts.Returns",
     "kotlin.sequences.TransformingIndexedSequence$iterator$1",
     "kotlin.sequences.TransformingIndexedSequence",
     "kotlin.UShortArrayKt",
     "kotlin.sequences.DropSequence$iterator$1",
     "kotlin.jvm.internal.ArrayIteratorKt",
     "kotlin.ranges.RangesKt__RangesJVMKt",
     "kotlin.experimental.BitwiseOperationsKt",
     "kotlin.UseExperimental",
     "kotlin.internal.PureReifiable",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3",
     "kotlin.text.StringsKt___StringsKt$windowedSequence$1",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2",
     "kotlin.text.StringsKt___StringsKt$windowedSequence$2",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1",
     "kotlin.collections.BooleanIterator",
     "kotlin.jvm.internal.markers.KMutableCollection",
     "kotlin.coroutines.experimental.CoroutineContext$DefaultImpls",
     "kotlin.ranges.ULongRange",
     "kotlin.jvm.internal.LocalVariableReference",
     "kotlin.coroutines.ContinuationKt",
     "kotlin.ULong$Companion",
     "kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2",
     "kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1",
     "kotlin.ExceptionsKt__ExceptionsKt",
     "kotlin.coroutines.experimental.EmptyCoroutineContext",
     "kotlin.reflect.KProperty1$Getter",
     "kotlin.coroutines.CombinedContext$Serialized$Companion",
     "kotlin.collections.MapAccessorsKt",
     "kotlin.NumbersKt__NumbersJVMKt",
     "kotlin.random.Random",
     "kotlin.sequences.TakeSequence",
     "kotlin.time.AbstractDoubleClock$DoubleClockMark",
     "kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1",
     "kotlin.text.RegexOption",
     "kotlin.io.FilesKt",
     "kotlin.math.MathKt",
     "kotlin.comparisons.NaturalOrderComparator",
     "kotlin.reflect.KCallable",
     "kotlin.time.DurationUnitKt",
     "kotlin.text.FlagEnum",
     "kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1",
     "kotlin.text.StringsKt___StringsKt$chunkedSequence$1",
     "kotlin.time.ExperimentalTime",
     "kotlin.sequences.Sequence",
     "kotlin.experimental.ExperimentalTypeInference",
     "kotlin.text.CharsKt",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2",
     "kotlin.UnsignedKt",
     "kotlin.contracts.ContractBuilderKt",
     "kotlin.jvm.internal.Ref$CharRef",
     "kotlin.Suppress",
     "kotlin.collections.EmptySet",
     "kotlin.text.StringsKt__StringBuilderKt",
     "kotlin.io.TerminateException",
     "kotlin.collections.AbstractMap$keys$1",
     "kotlin.text.StringsKt__StringsKt$iterator$1",
     "kotlin.jvm.functions.Function18",
     "kotlin.sequences.DistinctIterator",
     "kotlin.jvm.functions.Function19",
     "kotlin.collections.ArraysUtilJVM",
     "kotlin.ranges.CharRange",
     "kotlin.ranges.ULongProgression$Companion",
     "kotlin.jvm.functions.Function14",
     "kotlin.jvm.functions.Function15",
     "kotlin.jvm.functions.Function16",
     "kotlin.random.Random$Default",
     "kotlin.jvm.functions.Function17",
     "kotlin.jvm.functions.Function10",
     "kotlin.collections.ArraysKt",
     "kotlin.jvm.functions.Function11",
     "kotlin.jvm.functions.Function12",
     "kotlin.io.NoSuchFileException",
     "kotlin.jvm.functions.Function13",
     "kotlin.reflect.KClassifier",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1",
     "kotlin.LazyKt__LazyJVMKt",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2",
     "kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1",
     "kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2",
     "kotlin.jvm.internal.ReflectionFactory",
     "kotlin.sequences.DropWhileSequence$iterator$1",
     "kotlin.jvm.internal.ArrayFloatIterator",
     "kotlin.jvm.internal.ArrayIteratorsKt",
     "kotlin.jvm.functions.Function21",
     "kotlin.coroutines.CoroutineContext$Element$DefaultImpls",
     "kotlin.jvm.functions.Function22",
     "kotlin.jvm.functions.Function20",
     "kotlin.sequences.SequencesKt__SequencesKt$flatten$3",
     "kotlin.collections.UArraysKt",
     "kotlin.coroutines.jvm.internal.ModuleNameRetriever",
     "kotlin.sequences.SequencesKt__SequencesKt$flatten$1",
     "kotlin.reflect.KProperty$Getter",
     "kotlin.sequences.SequencesKt__SequencesKt$flatten$2",
     "kotlin.LazyKt__LazyKt",
     "kotlin.internal.NoInfer",
     "kotlin.io.ConsoleKt",
     "kotlin.io.AccessDeniedException",
     "kotlin.coroutines.jvm.internal.DebugMetadata",
     "kotlin.KotlinVersion$Companion",
     "kotlin.jvm.internal.PropertyReference0",
     "kotlin.sequences.SequencesKt___SequencesKt$elementAt$1",
     "kotlin.jvm.internal.PropertyReference2",
     "kotlin.jvm.internal.PropertyReference1",
     "kotlin.reflect.KFunction",
     "kotlin.text.CharsKt__CharJVMKt",
     "kotlin.io.FileTreeWalk",
     "kotlin.jvm.internal.Ref$BooleanRef",
     "kotlin.math.UMathKt",
     "kotlin.ranges.ClosedFloatingPointRange$DefaultImpls",
     "kotlin.jvm.internal.MutableLocalVariableReference",
     "kotlin.system.TimingKt",
     "kotlin.Unit",
     "kotlin.jvm.internal.StringCompanionObject",
     "kotlin.jvm.internal.PropertyReference2Impl",
     "kotlin.ArrayIntrinsicsKt",
     "kotlin.jvm.internal.PropertyReference",
     "kotlin.LazyThreadSafetyMode",
     "kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1",
     "kotlin.random.KotlinRandom",
     "kotlin.io.FileAlreadyExistsException",
     "kotlin.collections.AbstractCollection",
     "kotlin.time.DurationUnitKt__DurationUnitKt",
     "kotlin.properties.Delegates",
     "kotlin.jvm.internal.IntCompanionObject",
     "kotlin.collections.ShortIterator",
     "kotlin.internal.AccessibleLateinitPropertyLiteral",
     "kotlin.coroutines.jvm.internal.Boxing",
     "kotlin.time.DurationUnitKt__DurationUnitJvmKt",
     "kotlin.text.Regex$Serialized",
     "kotlin.text.StringsKt",
     "kotlin.contracts.ContractBuilder",
     "kotlin.collections.ReversedList",
     "kotlin.io.FileTreeWalk$FileTreeWalkIterator",
     "kotlin.sequences.SubSequence",
     "kotlin.coroutines.CoroutineContext",
     "kotlin.internal.InlineOnly",
     "kotlin.time.AdjustedClockMark",
     "kotlin.internal.OnlyInputTypes",
     "kotlin.io.FilePathComponents",
     "kotlin.text.StringsKt__RegexExtensionsJVMKt",
     "kotlin.collections.AbstractIterator",
     "kotlin.ReplaceWith",
     "kotlin.text.StringsKt__StringBuilderJVMKt",
     "kotlin.collections.IndexedValue",
     "kotlin.coroutines.experimental.migration.ExperimentalContextMigration",
     "kotlin.sequences.SequencesKt___SequencesKt$onEach$1",
     "kotlin.contracts.ConditionalEffect",
     "kotlin.sequences.ConstrainedOnceSequence",
     "kotlin.io.FilesKt__FilePathComponentsKt",
     "kotlin.StandardKt__SynchronizedKt",
     "kotlin.NumbersKt__BigIntegersKt",
     "kotlin.SuccessOrFailureKt",
     "kotlin.UByte$Companion",
     "kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction1Migration",
     "kotlin.jvm.internal.ArrayIterator",
     "kotlin.SynchronizedLazyImpl",
     "kotlin.time.Duration",
     "kotlin.collections.CollectionsKt",
     "kotlin.ParameterName",
     "kotlin.internal.HidesMembers",
     "kotlin.jvm.Strictfp",
     "kotlin.collections.RingBuffer",
     "kotlin.collections.AbstractList",
     "kotlin.reflect.KClass",
     "kotlin.sequences.USequencesKt",
     "kotlin.TuplesKt",
     "kotlin.io.SerializableKt",
     "kotlin.reflect.KVariance",
     "kotlin.coroutines.experimental.SequenceBuilderKt",
     "kotlin.collections.CollectionsKt__CollectionsJVMKt",
     "kotlin.sequences.MergingSequence$iterator$1",
     "kotlin.jvm.internal.markers.KMutableIterator",
     "kotlin.reflect.KMutableProperty",
     "kotlin.jvm.internal.TypeReference",
     "kotlin.reflect.KCallable$DefaultImpls",
     "kotlin.text.MatchGroupCollection",
     "kotlin.coroutines.experimental.migration.ExperimentalContinuationInterceptorMigration",
     "kotlin.random.URandomKt",
     "kotlin.KotlinNullPointerException",
     "kotlin.jvm.JvmMultifileClass",
     "kotlin.collections.CollectionsKt___CollectionsKt",
     "kotlin.WasExperimental",
     "kotlin.coroutines.jvm.internal.CoroutineStackFrame",
     "kotlin.ranges.UIntProgressionIterator",
     "kotlin.jvm.internal.PackageReference",
     "kotlin.random.Random$Companion",
     "kotlin.collections.UCollectionsKt___UCollectionsKt",
     "kotlin.text.StringsKt__StringsKt",
     "kotlin.reflect.KTypeParameter",
     "kotlin.reflect.KProperty2",
     "kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1",
     "kotlin.collections.unsigned.UArraysKt___UArraysKt",
     "kotlin.io.FilesKt__FileReadWriteKt",
     "kotlin.collections.AbstractSet$Companion",
     "kotlin.coroutines.experimental.migration.ExperimentalContextMigration$Key",
     "kotlin.UShortKt",
     "kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1",
     "kotlin.reflect.KProperty1",
     "kotlin.reflect.KProperty0",
     "kotlin.sequences.SequencesKt__SequencesKt",
     "kotlin.jvm.internal.ArrayByteIterator",
     "kotlin.collections.State",
     "kotlin.coroutines.experimental.migration.ExperimentalContinuationMigration",
     "kotlin.text.MatcherMatchResult$groups$1",
     "kotlin.jvm.internal.PropertyReference0Impl",
     "kotlin.jvm.internal.ShortCompanionObject",
     "kotlin.Result$Failure",
     "kotlin.concurrent.LocksKt",
     "kotlin.ranges.ClosedRange$DefaultImpls",
     "kotlin.jvm.JvmName",
     "kotlin.jvm.internal.ClassBasedDeclarationContainer",
     "kotlin.collections.unsigned.UArraysKt___UArraysJvmKt",
     "kotlin.jvm.internal.CallableReference",
     "kotlin.coroutines.experimental.jvm.internal.CoroutineImpl",
     "kotlin.Triple",
     "kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState",
     "kotlin.LazyKt",
     "kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1",
     "kotlin.ranges.UIntRange$Companion",
     "kotlin.collections.EmptyIterator",
     "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1",
     "kotlin.sequences.TransformingSequence",
     "kotlin.BuilderInference",
     "kotlin.ranges.LongProgression",
     "kotlin.Pair",
     "kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1",
     "kotlin.text.StringsKt__IndentKt$prependIndent$1",
     "kotlin.UInt$Companion",
     "kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2",
     "kotlin.collections.CollectionsKt___CollectionsJvmKt",
     "kotlin.ranges.ULongProgression",
     "kotlin.sequences.SequencesKt___SequencesKt$distinct$1",
     "kotlin.jvm.internal.TypeReference$asString$args$1",
     "kotlin.properties.Delegates$vetoable$1",
     "kotlin.text.StringsKt__StringNumberConversionsKt",
     "kotlin.sequences.TakeWhileSequence",
     "kotlin.time.Duration$Companion",
     "kotlin.properties.ObservableProperty",
     "kotlin.jvm.internal.ArrayIntIterator",
     "kotlin.collections.AbstractMap$Companion",
     "kotlin.sequences.MergingSequence",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1",
     "kotlin.UIntArray",
     "kotlin.collections.SlidingWindowKt$windowedIterator$1",
     "kotlin.PreconditionsKt__PreconditionsKt",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenDescending$1",
     "kotlin.math.MathKt__MathJVMKt",
     "kotlin.jvm.internal.PropertyReference1Impl",
     "kotlin.collections.UCollectionsKt",
     "kotlin.text.MatchResult$DefaultImpls",
     "kotlin.coroutines.experimental.migration.ContextMigration$Key",
     "kotlin.UShort",
     "kotlin.jvm.JvmStatic",
     "kotlin.coroutines.jvm.internal.RestrictedSuspendLambda",
     "kotlin._Assertions",
     "kotlin.text.MatcherMatchResult$groups$1$iterator$1",
     "kotlin.internal.ContractsDsl",
     "kotlin.collections.unsigned.UArraysKt",
     "kotlin.jvm.internal.FunctionImpl",
     "kotlin.sequences.GeneratorSequence$iterator$1",
     "kotlin.jvm.internal.ArrayLongIterator",
     "kotlin.sequences.SequencesKt__SequencesJVMKt",
     "kotlin.sequences.IndexingSequence",
     "kotlin.jvm.Synchronized",
     "kotlin.io.OnErrorAction",
     "kotlin.UShortArray",
     "kotlin.text.CharDirectionality$Companion",
     "kotlin.collections.GroupingKt",
     "kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1",
     "kotlin.UByte",
     "kotlin.coroutines.CoroutineContext$DefaultImpls",
     "kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1",
     "kotlin.NumbersKt__NumbersKt",
     "kotlin.ranges.ClosedDoubleRange",
     "kotlin.jvm.JvmClassMappingKt",
     "kotlin.io.FilesKt__FileTreeWalkKt",
     "kotlin.native.concurrent.SharedImmutable",
     "kotlin.jvm.internal.markers.KMappedMarker",
     "kotlin.time.ClockKt",
     "kotlin.reflect.KMutableProperty0$Setter",
     "kotlin.jvm.internal.Reflection",
     "kotlin.coroutines.jvm.internal.ContinuationImpl",
     "kotlin.jvm.Transient",
     "kotlin.coroutines.experimental.migration.ContinuationInterceptorMigration",
     "kotlin.UShortArray$Iterator",
     "kotlin.sequences.SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1",
     "kotlin.collections.UArraySortingKt",
     "kotlin.io.FilesKt__FileReadWriteKt$readLines$1",
     "kotlin.io.ByteStreamsKt$iterator$1",
     "kotlin.collections.AbstractCollection$toString$1",
     "kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1",
     "kotlin.concurrent.ThreadsKt",
     "kotlin.collections.DoubleIterator",
     "kotlin.comparisons.ReversedComparator",
     "kotlin.reflect.KVisibility",
     "kotlin.sequences.SequencesKt___SequencesJvmKt",
     "kotlin.Function",
     "kotlin.concurrent.ThreadsKt$thread$thread$1",
     "kotlin.coroutines.CoroutineContext$plus$1",
     "kotlin.time.Clock",
     "kotlin.time.TestClock",
     "kotlin.io.FileTreeWalk$WalkState",
     "kotlin.collections.ArraysKt___ArraysKt",
     "kotlin.collections.IndexingIterable",
     "kotlin.HashCodeKt",
     "kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1",
     "kotlin.coroutines.experimental.CoroutineContext",
     "kotlin.collections.ArraysKt___ArraysJvmKt$asList$8",
     "kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls",
     "kotlin.collections.ArraysKt___ArraysJvmKt$asList$7",
     "kotlin.collections.ArraysKt___ArraysJvmKt$asList$6",
     "kotlin.collections.ArraysKt___ArraysJvmKt$asList$5",
     "kotlin.UInt",
     "kotlin.collections.ArraysKt___ArraysJvmKt$asList$4",
     "kotlin.collections.ArraysKt___ArraysJvmKt$asList$3",
     "kotlin.collections.ArraysKt___ArraysJvmKt$asList$2",
     "kotlin.collections.ArraysKt___ArraysJvmKt$asList$1",
     "kotlin.reflect.KFunction$DefaultImpls",
     "kotlin.jvm.internal.Ref$DoubleRef",
     "kotlin.jvm.internal.ByteCompanionObject",
     "kotlin.coroutines.SafeContinuation",
     "kotlin.time.MeasureTimeKt",
     "kotlin.jvm.internal.Lambda",
     "kotlin.collections.TypeAliasesKt",
     "kotlin.UByteArrayKt",
     "kotlin.io.ExceptionsKt",
     "kotlin.ULongArray$Iterator",
     "kotlin.jvm.internal.markers.KMutableMap",
     "kotlin.coroutines.CombinedContext$writeReplace$1",
     "kotlin.Result",
     "kotlin.ranges.IntProgression$Companion",
     "kotlin.coroutines.jvm.internal.DebugProbesKt",
     "kotlin.jvm.internal.CharCompanionObject",
     "kotlin.reflect.KClass$DefaultImpls",
     "kotlin.internal.PlatformDependent",
     "kotlin.time.FormatToDecimalsKt",
     "kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState",
     "kotlin.text.DelimitedRangesSequence$iterator$1",
     "kotlin.collections.SetsKt___SetsKt",
     "kotlin.jvm.internal.CharSpreadBuilder",
     "kotlin.text.Regex$findAll$2",
     "kotlin.text.Regex$findAll$1",
     "kotlin.coroutines.ContinuationInterceptor",
     "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt",
     "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt",
     "kotlin.coroutines.CombinedContext$Serialized",
     "kotlin.collections.AbstractList$IteratorImpl",
     "kotlin.coroutines.Continuation",
     "kotlin.ranges.CharProgressionIterator",
     "kotlin.jvm.internal.FunctionReferenceImpl",
     "kotlin.reflect.KProperty2$Getter",
     "kotlin.text.Charsets",
     "kotlin.text.Regex$Companion",
     "kotlin.coroutines.experimental.SequenceBuilderIterator",
     "kotlin.collections.AbstractSet",
     "kotlin.io.TextStreamsKt$readLines$1",
     "kotlin.jvm.internal.DoubleCompanionObject",
     "kotlin.text.TypeAliasesKt",
     "kotlin.collections.SetsKt__SetsJVMKt",
     "kotlin.sequences.SequencesKt___SequencesKt$flatMap$1",
     "kotlin.ranges.RangesKt___RangesKt",
     "kotlin.reflect.KParameter",
     "kotlin.ranges.LongProgression$Companion",
     "kotlin.internal.RequireKotlinVersionKind",
     "kotlin.js.JsName",
     "kotlin.ranges.IntRange$Companion",
     "kotlin.Experimental$Level",
     "kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1",
     "kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2",
     "kotlin.collections.MapsKt",
     "kotlin.native.concurrent.ThreadLocal",
     "kotlin.coroutines.jvm.internal.SuspendFunction",
     "kotlin.collections.ArraysKt___ArraysKt$withIndex$2",
     "kotlin.collections.ArraysKt___ArraysKt$withIndex$1",
     "kotlin.collections.ArraysKt___ArraysKt$withIndex$6",
     "kotlin.collections.ArraysKt___ArraysKt$withIndex$5",
     "kotlin.collections.ArraysKt___ArraysKt$withIndex$4",
     "kotlin.collections.ArraysKt___ArraysKt$withIndex$3",
     "kotlin.collections.ArraysKt___ArraysKt$withIndex$9",
     "kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1",
     "kotlin.collections.ArraysKt___ArraysKt$withIndex$8",
     "kotlin.collections.ArraysKt___ArraysKt$withIndex$7",
     "kotlin.collections.ByteIterator",
     "kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt",
     "kotlin.sequences.SequenceScope",
     "kotlin.collections.CharIterator",
     "kotlin.jvm.internal.Ref$IntRef",
     "kotlin.text.Regex$fromInt$$inlined$apply$lambda$1",
     "kotlin.jvm.internal.Intrinsics",
     "kotlin.jvm.internal.BooleanSpreadBuilder",
     "kotlin.SafePublicationLazyImpl$Companion",
     "kotlin.coroutines.experimental.CoroutineContext$Key",
     "kotlin.jvm.internal.markers.KMutableListIterator",
     "kotlin.UIntArray$Iterator",
     "kotlin.contracts.ExperimentalContracts",
     "kotlin.reflect.KProperty$Accessor",
     "kotlin.jvm.internal.ShortSpreadBuilder",
     "kotlin.comparisons.ComparisonsKt__ComparisonsKt",
     "kotlin.coroutines.SafeContinuation$Companion",
     "kotlin.UnsafeVariance",
     "kotlin.properties.Delegates$observable$1",
     "kotlin.coroutines.jvm.internal.RunSuspend",
     "kotlin.text.CharCategory$Companion$categoryMap$2",
     "kotlin.collections.UByteIterator",
     "kotlin.properties.NotNullVar",
     "kotlin.collections.AbstractMutableList",
     "kotlin.ULong",
     "kotlin.NotImplementedError",
     "kotlin.sequences.FlatteningSequence",
     "kotlin.collections.MapWithDefault",
     "kotlin.ranges.ClosedFloatRange",
     "kotlin.Metadata",
     "kotlin.coroutines.experimental.migration.CoroutinesMigrationKt",
     "kotlin.collections.AbstractList$Companion",
     "kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1",
     "kotlin.collections.ArraysKt__ArraysJVMKt",
     "kotlin.comparisons.UComparisonsKt___UComparisonsKt",
     "kotlin.reflect.KProperty",
     "kotlin.StandardKt",
     "kotlin.jvm.Volatile",
     "kotlin.ranges.IntRange",
     "kotlin.annotation.MustBeDocumented",
     "kotlin.text.Typography",
     "kotlin.jvm.internal.EnumCompanionObject",
     "kotlin.NumbersKt__BigDecimalsKt",
     "kotlin.jvm.internal.MutablePropertyReference2",
     "kotlin.jvm.internal.MutablePropertyReference1",
     "kotlin.jvm.internal.MutablePropertyReference0",
     "kotlin.collections.MapsKt__MapWithDefaultKt",
     "kotlin.sequences.USequencesKt___USequencesKt",
     "kotlin.coroutines.EmptyCoroutineContext",
     "kotlin.text.MatchNamedGroupCollection",
     "kotlin.sequences.SequencesKt___SequencesKt",
     "kotlin.jvm.Throws",
     "kotlin.jvm.internal.DoubleSpreadBuilder",
     "kotlin.text.StringsKt___StringsKt$windowed$1",
     "kotlin.internal.PlatformImplementations",
     "kotlin.math.Constants",
     "kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt",
     "kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1",
     "kotlin.text.CharDirectionality",
     "kotlin.jvm.internal.Ref$LongRef",
     "kotlin.coroutines.jvm.internal.RunSuspendKt",
     "kotlin.collections.UShortIterator",
     "kotlin.coroutines.experimental.ContinuationInterceptor$Key",
     "kotlin.jvm.internal.Ref$FloatRef",
     "kotlin.UShort$Companion",
     "kotlin.jvm.internal.DefaultConstructorMarker",
     "kotlin.sequences.SequencesKt___SequencesKt$sorted$1",
     "kotlin.internal.LowPriorityInOverloadResolution",
     "kotlin.jvm.internal.MagicApiIntrinsics",
     "kotlin.coroutines.jvm.internal.RestrictedContinuationImpl",
     "kotlin.collections.SetsKt__SetsKt",
     "kotlin.sequences.GeneratorSequence",
     "kotlin.internal.ProgressionUtilKt",
     "kotlin.NoWhenBranchMatchedException",
     "kotlin.ExceptionsKt",
     "kotlin.PublishedApi",
     "kotlin.sequences.EmptySequence",
     "kotlin.coroutines.intrinsics.CoroutineSingletons",
     "kotlin.reflect.KMutableProperty2$Setter",
     "kotlin.jvm.internal.markers.KMutableMap$Entry",
     "kotlin.collections.Grouping",
     "kotlin.math.MathKt__MathHKt",
     "kotlin.text.CharCategory$Companion",
     "kotlin.coroutines.CombinedContext"
    ],
    "usedTypes": [
     "kotlin.jvm.JvmClassMappingKt",
     "kotlin.reflect.KClass",
     "kotlin.TypeCastException",
     "kotlin.jvm.functions.Function1",
     "kotlin.reflect.KMutableProperty",
     "kotlin.jvm.functions.Function0",
     "kotlin.jvm.internal.Intrinsics",
     "kotlin.reflect.KParameter$Kind",
     "kotlin.jvm.internal.Lambda",
     "kotlin.reflect.KType",
     "kotlin.jvm.internal.Reflection",
     "kotlin.reflect.KMutableProperty$Setter",
     "kotlin.Unit",
     "kotlin.reflect.KProperty",
     "kotlin.reflect.KParameter",
     "kotlin.jvm.internal.DefaultConstructorMarker",
     "kotlin.reflect.KFunction",
     "kotlin.reflect.KCallable",
     "kotlin.Metadata",
     "kotlin.reflect.KProperty$Getter"
    ],
    "usageRatio": 0.024067388688327317,
    "children": [
     {
      "id": "org.jetbrains.kotlin:kotlin-stdlib-common:jar:1.3.50:compile",
      "coordinates": "org.jetbrains.kotlin:kotlin-stdlib-common:1.3.50",
      "groupId": "org.jetbrains.kotlin",
      "artifactId": "kotlin-stdlib-common",
      "version": "1.3.50",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 170934,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile (optional) )",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": NaN,
      "children": []
     },
     {
      "id": "org.jetbrains:annotations:jar:13.0:compile",
      "coordinates": "org.jetbrains:annotations:13.0",
      "groupId": "org.jetbrains",
      "artifactId": "annotations",
      "version": "13.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 17536,
      "type": "transitive",
      "status": "used",
      "parent": "org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:compile (optional) )",
      "allTypes": [
       "org.intellij.lang.annotations.JdkConstants$CalendarMonth",
       "org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy",
       "org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment",
       "org.intellij.lang.annotations.JdkConstants$CursorType",
       "org.intellij.lang.annotations.JdkConstants$TitledBorderJustification",
       "org.jetbrains.annotations.NonNls",
       "org.intellij.lang.annotations.PrintFormatPattern",
       "org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis",
       "org.jetbrains.annotations.Nls",
       "org.intellij.lang.annotations.JdkConstants$PatternFlags",
       "org.intellij.lang.annotations.PrintFormat",
       "org.intellij.lang.annotations.JdkConstants$TabPlacement",
       "org.intellij.lang.annotations.JdkConstants$AdjustableOrientation",
       "org.intellij.lang.annotations.JdkConstants$HorizontalAlignment",
       "org.intellij.lang.annotations.Pattern",
       "org.jetbrains.annotations.PropertyKey",
       "org.intellij.lang.annotations.JdkConstants",
       "org.intellij.lang.annotations.Language",
       "org.intellij.lang.annotations.JdkConstants$InputEventMask",
       "org.intellij.lang.annotations.JdkConstants$TreeSelectionMode",
       "org.intellij.lang.annotations.Subst",
       "org.jetbrains.annotations.TestOnly",
       "org.intellij.lang.annotations.Flow",
       "org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition",
       "org.intellij.lang.annotations.MagicConstant",
       "org.jetbrains.annotations.Nullable",
       "org.jetbrains.annotations.Contract",
       "org.intellij.lang.annotations.Identifier",
       "org.intellij.lang.annotations.RegExp",
       "org.intellij.lang.annotations.JdkConstants$FontStyle",
       "org.intellij.lang.annotations.JdkConstants$ListSelectionMode",
       "org.jetbrains.annotations.NotNull"
      ],
      "usedTypes": [
       "org.jetbrains.annotations.Nullable",
       "org.jetbrains.annotations.NotNull"
      ],
      "usageRatio": 0.0625,
      "children": []
     }
    ]
   },
   {
    "id": "org.jetbrains.kotlin:kotlin-reflect:jar:1.3.50:compile",
    "coordinates": "org.jetbrains.kotlin:kotlin-reflect:1.3.50",
    "groupId": "org.jetbrains.kotlin",
    "artifactId": "kotlin-reflect",
    "version": "1.3.50",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 2793146,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "kotlin.reflect.jvm.internal.impl.types.StarProjectionImpl$_type$2",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ThisClassReceiver",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$resolveProperty$1",
     "kotlin.reflect.jvm.internal.impl.load.java.JvmAnnotationNames",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$properties$1",
     "kotlin.reflect.jvm.internal.impl.resolve.DescriptorEquivalenceForOverrides$areCallableDescriptorsEquivalent$overridingUtil$1",
     "kotlin.reflect.jvm.internal.components.RuntimeErrorReporter",
     "kotlin.reflect.jvm.internal.calls.BoundCaller",
     "kotlin.reflect.jvm.internal.KPropertyImpl$_javaField$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.SignatureBuildingComponents",
     "kotlin.reflect.full.IllegalPropertyDelegateAccessException",
     "kotlin.reflect.jvm.internal.KDeclarationContainerImpl$findPropertyDescriptor$allMembers$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$1",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$Constructor",
     "kotlin.reflect.jvm.internal.impl.util.ValueParameterCountCheck$SingleValueParameter",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberScope$classNames$2",
     "kotlin.reflect.jvm.internal.impl.types.checker.IntersectionTypeKt",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaTypeParameter",
     "kotlin.reflect.jvm.internal.impl.types.NotNullTypeVariable",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.ProtoTypeTableUtilKt",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$4",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaAnnotation",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$5",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$6",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$7",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingMode",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragment",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$1",
     "kotlin.reflect.jvm.internal.impl.storage.NoLock",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$2",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$3",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinClassFinder$Result$ClassFileContent",
     "kotlin.reflect.jvm.internal.components.ReflectKotlinClass",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$8",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$9",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererOptions$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.types.ErrorType",
     "kotlin.reflect.jvm.internal.EmptyContainerForLocal",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.TypeIntersectionScope$getContributedFunctions$1",
     "kotlin.reflect.jvm.internal.impl.resolve.DescriptorUtils",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.NameResolverImpl",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.SuspendFunctionTypeUtilKt",
     "kotlin.reflect.jvm.internal.impl.protobuf.BoundedByteString",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer$typeConstructor$1$typeParametersCount$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClass",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$inheritedNonStaticMembers$2",
     "kotlin.reflect.jvm.internal.KTypeImpl$classifier$2",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.ReadKotlinClassHeaderAnnotationVisitor$OldDeprecatedAnnotationArgumentVisitor$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers$Companion",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.ReadKotlinClassHeaderAnnotationVisitor$OldDeprecatedAnnotationArgumentVisitor$2",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue",
     "kotlin.reflect.jvm.internal.impl.utils.SmartList$SingletonIteratorBase",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer$typeConstructor$1$typeParametersCount$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeAliasConstructorDescriptorImpl$Companion",
     "kotlin.reflect.jvm.internal.ReflectProperties$Val$1",
     "kotlin.reflect.jvm.internal.impl.utils.WrappedValues$ThrowableWrapper",
     "kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe",
     "kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader",
     "kotlin.reflect.jvm.internal.impl.types.FlexibleType",
     "kotlin.reflect.jvm.internal.impl.utils.SmartList$EmptyIterator",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaClassConstructorDescriptor",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.BuiltInFictitiousFunctionClassFactory$KindWithArity",
     "kotlin.reflect.jvm.internal.impl.types.checker.SimpleClassicTypeSystemContext",
     "kotlin.reflect.jvm.internal.JvmFunctionSignature$KotlinFunction",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaTargetAnnotationDescriptor$allValueArguments$2",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$SupertypesPolicy$DoCustomTransform",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeAliasConstructorDescriptorImpl$withDispatchReceiver$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind$1",
     "kotlin.reflect.jvm.internal.components.RuntimeModuleData$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaAnnotationDescriptor",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsResourceLoader",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeAliasDescriptor$typeConstructor$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.ExtensionRegistryLite$ObjectIntPair",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedContainerSource",
     "kotlin.reflect.jvm.internal.impl.metadata.builtins.BuiltInsBinaryVersion$Companion",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeAlias",
     "kotlin.reflect.jvm.internal.impl.protobuf.CodedOutputStream$OutOfSpaceException",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaStaticClassScope$computeMemberIndex$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.FieldDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$storage$1",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmMemberSignature$Field",
     "kotlin.reflect.jvm.internal.impl.util.collectionUtils.ScopeUtilsKt",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ContractDeserializer$Companion$DEFAULT$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$constructors$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl$Companion",
     "kotlin.reflect.jvm.internal.impl.protobuf.LazyField",
     "kotlin.reflect.jvm.internal.JvmPropertySignature",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer$typeAliasDescriptors$1",
     "kotlin.reflect.jvm.internal.KTypeImpl$arguments$2$parameterizedTypeArguments$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ShortValue",
     "kotlin.reflect.jvm.internal.impl.util.MemberKindCheck$Member",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$SHORT_NAMES_IN_TYPES$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.BinaryClassAnnotationAndConstantLoaderImpl",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction$1",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeSystemInferenceExtensionContext$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver$argumentsMakeSenseOnlyForMutableContainer$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.Internal$EnumLiteMap",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$enhanceSignature$valueParameterEnhancements$1$enhancementResult$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DescriptorWithContainerSource",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor$EnumEntryScope$3",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor$EnumEntryScope$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor$EnumEntryScope$1",
     "kotlin.reflect.jvm.internal.impl.types.model.RawTypeMarker",
     "kotlin.reflect.jvm.internal.impl.types.model.StubTypeMarker",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaAnnotation$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.utils.ExceptionUtilsKt",
     "kotlin.reflect.jvm.internal.impl.protobuf.MessageLite$Builder",
     "kotlin.reflect.jvm.internal.impl.util.CheckResult$SuccessCheck",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaLiteralAnnotationArgument",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassScope$WhenMappings",
     "kotlin.reflect.jvm.internal.KProperty0Impl$delegateFieldValue$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.BuiltInAnnotationDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.EnhancedTypeAnnotationDescriptor",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageScope",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$PackageFragment",
     "kotlin.reflect.jvm.internal.impl.utils.SmartSet$SingletonIterator",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.UIntValue",
     "kotlin.reflect.jvm.internal.impl.protobuf.FieldSet",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor",
     "kotlin.reflect.jvm.internal.components.ReflectKotlinClassKt",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ErrorValue$Companion",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldGetter$BoundJvmStaticInObject",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberScope",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings",
     "kotlin.reflect.jvm.internal.impl.descriptors.deserialization.ClassDescriptorFactory",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.LazyJavaResolverContext",
     "kotlin.reflect.jvm.internal.impl.util.OperatorChecks$checks$2$1",
     "kotlin.reflect.jvm.internal.KMutableProperty0Impl$Setter",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.JavaDescriptorUtilKt",
     "kotlin.reflect.jvm.internal.impl.protobuf.LazyStringList",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageScope$KotlinClassLookupResult$SyntheticClass",
     "kotlin.reflect.jvm.internal.KMutableProperty0Impl$_setter$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorImpl",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$BoundConstructor",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$objectInstance$2",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.ModuleClassResolver",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$1",
     "kotlin.reflect.jvm.internal.pcollections.MapEntry",
     "kotlin.reflect.jvm.internal.impl.protobuf.Parser",
     "kotlin.reflect.jvm.internal.impl.incremental.components.Position$Companion",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Function$1",
     "kotlin.reflect.jvm.internal.KMutableProperty1Impl$_setter$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget",
     "kotlin.reflect.jvm.internal.impl.utils.DFS$1",
     "kotlin.reflect.full.KClasses$sam$org_jetbrains_kotlin_utils_DFS_Neighbors$0",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaModifierListOwner$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$TypeQualifierWithApplicability",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractLazyTypeParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer$simpleType$1",
     "kotlin.reflect.jvm.internal.impl.types.TypeBasedStarProjectionImpl",
     "kotlin.reflect.jvm.internal.calls.AnnotationConstructorCallerKt",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUtilKt$createDeprecatedAnnotation$replaceWithAnnotation$1",
     "kotlin.reflect.jvm.internal.KProperty2Impl",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaElement",
     "kotlin.reflect.jvm.internal.KMutableProperty2Impl$_setter$1",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$FunctionTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.protobuf.GeneratedMessageLite$1",
     "kotlin.reflect.jvm.internal.impl.resolve.calls.inference.CapturedType",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability$NOT_NULL",
     "kotlin.reflect.jvm.internal.KTypeImpl$arguments$2$$special$$inlined$mapIndexed$lambda$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer$Package",
     "kotlin.reflect.jvm.internal.impl.utils.FunctionsKt",
     "kotlin.reflect.jvm.internal.impl.resolve.jvm.JavaDescriptorResolver",
     "kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType",
     "kotlin.reflect.jvm.internal.impl.types.checker.ClassicTypeCheckerContext",
     "kotlin.reflect.jvm.internal.impl.descriptors.SourceFile$1",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmBytecodeBinaryVersion",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities",
     "kotlin.reflect.jvm.internal.impl.types.typesApproximation.CapturedTypeApproximationKt$toTypeProjection$2",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.TypeIntersectionScope$getContributedVariables$1",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$getSpecialSignatureInfo$builtinSignature$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageScope$KotlinClassLookupResult$NotFound",
     "kotlin.reflect.jvm.internal.calls.InternalUnderlyingValOfInlineClass$Unbound",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JavaClassDataFinder",
     "kotlin.reflect.jvm.internal.impl.types.IndexedParametersSubstitution",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberScope$typeAliasByName$1",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.ValueParameterData",
     "kotlin.reflect.jvm.internal.impl.descriptors.NotFoundClasses$MockClassDescriptor",
     "kotlin.reflect.jvm.internal.KPropertyImpl$Setter$caller$2",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragmentImpl$classDataFinder$1",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaPackage",
     "kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor$EnumEntryScope$4",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolverKt$getErasedUpperBound$1",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$constructors$2",
     "kotlin.reflect.jvm.internal.impl.types.checker.NewTypeVariableConstructor",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$1",
     "kotlin.reflect.jvm.internal.impl.platform.PlatformUtilKt",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberDescriptor",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.CloneableClassScope",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeArgumentListMarker",
     "kotlin.reflect.jvm.internal.impl.protobuf.ExtensionRegistryLite",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer$getPropertyFieldAnnotations$1",
     "kotlin.reflect.jvm.internal.impl.types.TypeWithEnhancement",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaAnnotationArgument$Factory",
     "kotlin.reflect.jvm.internal.impl.descriptors.deserialization.PlatformDependentDeclarationFilter$All",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations$Companion",
     "kotlin.reflect.jvm.internal.calls.InlineClassAwareCallerKt",
     "kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns$Primitives",
     "kotlin.reflect.jvm.internal.impl.types.TypeSubstitution$Companion",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirementTable$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.BuiltInAnnotationDescriptor$type$2",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaEnumValueAnnotationArgument",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$annotations$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeAndDefaultQualifiers",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaArrayAnnotationArgument",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$Builder",
     "kotlin.reflect.jvm.internal.impl.resolve.MemberComparator",
     "kotlin.reflect.jvm.internal.impl.types.TypeProjection",
     "kotlin.reflect.jvm.internal.impl.types.DelegatingSimpleType",
     "kotlin.reflect.jvm.internal.impl.types.checker.KotlinTypeChecker$TypeConstructorEquality",
     "kotlin.reflect.jvm.internal.impl.utils.FunctionsKt$DO_NOTHING_2$1",
     "kotlin.reflect.jvm.internal.impl.types.ErrorUtils$ErrorScope",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmNameResolver$Companion",
     "kotlin.reflect.jvm.internal.ReflectProperties$LazySoftVal",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.Flags",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.PossiblyExternalAnnotationDescriptor",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$SupertypesPolicy$None",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.MappingUtilKt",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$ClassOrBuilder",
     "kotlin.reflect.jvm.internal.impl.builtins.ReflectionTypes$ClassLookup",
     "kotlin.reflect.jvm.internal.impl.types.DelegatingSimpleTypeImpl",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirementTable$Builder",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.AbstractReceiverValue",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.Modality$Companion",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$functions$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaAnnotationOwnerKt",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldGetter$Instance",
     "kotlin.reflect.jvm.internal.KProperty0Impl",
     "kotlin.reflect.jvm.internal.impl.protobuf.RopeByteString$RopeInputStream",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.LazyClassReceiverParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.EnumEntry",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageScope$FindClassRequest",
     "kotlin.reflect.jvm.internal.impl.utils.DFS$Neighbors",
     "kotlin.reflect.jvm.internal.KProperty1Impl$_getter$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JvmType$Array",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDependenciesImpl",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.ContextKt$copyWithNewDefaultTypeQualifiers$1",
     "kotlin.reflect.jvm.internal.KPackageImpl$Data$kotlinClass$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter",
     "kotlin.reflect.jvm.internal.JvmFunctionSignature$FakeJavaAnnotationConstructor$$special$$inlined$sortedBy$1",
     "kotlin.reflect.jvm.internal.components.ReflectKotlinClassFinder",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaClassesTracker$Default",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeAliasOrBuilder",
     "kotlin.reflect.jvm.internal.impl.resolve.DescriptorFactory$DefaultClassConstructorDescriptor",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$createMockJavaIoSerializableType$mockJavaIoPackageFragment$1",
     "kotlin.reflect.jvm.internal.impl.load.java.components.DescriptorResolverUtils",
     "kotlin.reflect.jvm.internal.impl.types.DisjointKeysUnionTypeSubstitution$Companion",
     "kotlin.reflect.jvm.internal.impl.builtins.ReflectionTypes$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaTargetAnnotationDescriptor",
     "kotlin.reflect.jvm.internal.impl.types.SimpleTypeWithEnhancement",
     "kotlin.reflect.jvm.internal.KDeclarationContainerImpl$Data",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.JavaResolverComponents",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.ChainedMemberScope$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinSpecialProperties$getBuiltinSpecialPropertyGetterName$descriptor$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeAliasDescriptor",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Property$1",
     "kotlin.reflect.jvm.internal.impl.load.java.SpecialBuiltinMembers",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaAnnotationDescriptor$fqName$2",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ContractDeserializer$Companion",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$1",
     "kotlin.reflect.jvm.internal.KTypeParameterImpl",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$Method",
     "kotlin.reflect.jvm.internal.impl.util.ReturnsCheck$ReturnsInt",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Builder",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect",
     "kotlin.reflect.jvm.internal.impl.builtins.SuspendFunctionTypesKt",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$Kind",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ConstantValue",
     "kotlin.reflect.jvm.internal.KPropertyImpl$Companion",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$3",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$4",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$5",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$6",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$7",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$8",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$allMembers$2",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldSetter$Instance",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$9",
     "kotlin.reflect.jvm.internal.calls.AnnotationConstructorCallerKt$createAnnotationInstance$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeTableOrBuilder",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeSystemCommonSuperTypesContext",
     "kotlin.reflect.jvm.internal.impl.protobuf.LazyField$LazyIterator",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$ResolvedValueParameters",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaDeprecatedAnnotationDescriptor",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.StringValue",
     "kotlin.reflect.jvm.internal.JvmPropertySignature$MappedKotlinProperty",
     "kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageFragment$partToFacade$2",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinarySourceElement",
     "kotlin.reflect.jvm.internal.impl.protobuf.GeneratedMessageLite$ExtendableMessage",
     "kotlin.reflect.jvm.internal.impl.descriptors.PossiblyInnerType",
     "kotlin.reflect.jvm.internal.impl.descriptors.ValueDescriptor",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirementTableOrBuilder",
     "kotlin.reflect.jvm.internal.KTypeParameterImpl$upperBounds$2",
     "kotlin.reflect.jvm.internal.impl.types.NotNullSimpleType",
     "kotlin.reflect.jvm.internal.ReflectProperties$LazyVal",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$ArgumentOrBuilder",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JavaToKotlinClassMap$PlatformMutabilityMapping",
     "kotlin.reflect.jvm.internal.KFunctionImpl",
     "kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaRetentionAnnotationDescriptor$allValueArguments$2",
     "kotlin.reflect.jvm.internal.impl.renderer.ClassifierNamePolicy$SHORT",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.ReadKotlinClassHeaderAnnotationVisitor$KotlinMetadataArgumentVisitor",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaClassDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingMode$Companion",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.ChainedMemberScope",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassDescriptor$Companion",
     "kotlin.reflect.jvm.internal.components.SignatureSerializer",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmFieldSignature",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability$UNKNOWN",
     "kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller",
     "kotlin.reflect.jvm.internal.impl.renderer.ClassifierNamePolicy$SOURCE_CODE_QUALIFIED",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinClassFinder$Result$KotlinClass",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl$WithDestructuringDeclaration",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Constructor$1",
     "kotlin.reflect.jvm.internal.impl.utils.DFS$NodeHandlerWithListResult",
     "kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.NameAndSignature",
     "kotlin.reflect.jvm.internal.impl.utils.DFS$Visited",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaClassesTracker",
     "kotlin.reflect.jvm.internal.KFunctionImpl$caller$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaClassFinder",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Builder",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaElement",
     "kotlin.reflect.jvm.internal.impl.descriptors.VariableAccessorDescriptor",
     "kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat$HTML",
     "kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolverKt",
     "kotlin.reflect.jvm.internal.impl.protobuf.RopeByteString$RopeByteIterator",
     "kotlin.reflect.jvm.internal.impl.utils.WrappedValues$1",
     "kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$1",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedureCallbacks",
     "kotlin.reflect.jvm.internal.impl.load.java.sources.JavaSourceElementFactory",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberScope$functions$1",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInClassDescriptorFactory$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaType",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$HTML$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.LazyPackageViewDescriptorImpl$memberScope$1",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.BuiltInFictitiousFunctionClassFactory",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$ValueParametersHandler$DEFAULT",
     "kotlin.reflect.jvm.internal.KDeclarationContainerImpl$Companion",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.CompositePackageFragmentProvider",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeSystemContext$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.descriptors.Substitutable",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaPackage",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoaderImpl$WhenMappings",
     "kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$Origin",
     "kotlin.reflect.jvm.internal.impl.types.ClassTypeConstructorImpl",
     "kotlin.reflect.jvm.internal.impl.protobuf.SmallSortedMap$EntryIterator",
     "kotlin.reflect.jvm.internal.KFunctionImpl$descriptor$2",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$enumEntryIndex$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationsKt",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$DeserializedClassMemberScope$computeNonDeclaredFunctions$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibility",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$MethodSignatureData",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererOptionsImpl",
     "kotlin.reflect.jvm.internal.impl.types.AbstractClassTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.KClassValue$Value$LocalClass",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$DeserializedClassMemberScope$allDescriptors$1",
     "kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind",
     "kotlin.reflect.jvm.internal.impl.protobuf.SmallSortedMap$EmptySet$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.SmallSortedMap$EmptySet$2",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JvmType",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.VersionRequirementTable",
     "kotlin.reflect.jvm.internal.impl.utils.FunctionsKt$ALWAYS_TRUE$1",
     "kotlin.reflect.jvm.internal.impl.load.java.components.SamConversionResolver",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageScope$knownClassNamesInPackage$1",
     "kotlin.reflect.jvm.internal.JvmPropertySignature$JavaMethodProperty",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl",
     "kotlin.reflect.jvm.internal.impl.load.java.components.TypeUsage",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope$Empty",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaMethod$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmPropertySignature$Builder",
     "kotlin.reflect.jvm.internal.KClassImpl$data$1",
     "kotlin.reflect.jvm.internal.impl.builtins.ReflectionTypesKt",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.UtfEncodingKt",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindExclude$TopLevelPackages",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.InnerClassesScopeWrapper",
     "kotlin.reflect.jvm.internal.impl.types.SubtypingRepresentatives",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl$WithDestructuringDeclaration$copy$1",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$2",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.MethodSignatureMappingKt",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$5",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$6",
     "kotlin.reflect.jvm.internal.impl.protobuf.MessageLiteOrBuilder",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$COMPACT_WITH_MODIFIERS$1",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$3",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$4",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$9",
     "kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns$FqNames",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$7",
     "kotlin.reflect.jvm.internal.impl.renderer.RenderingUtilsKt",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$8",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$allDescriptors$1",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.TypeIntersectionScope",
     "kotlin.reflect.jvm.internal.impl.protobuf.BoundedByteString$BoundedByteIterator",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.BinaryVersion",
     "kotlin.reflect.jvm.internal.impl.types.TypeSubstitution$Companion$EMPTY$1",
     "kotlin.reflect.jvm.internal.impl.storage.MemoizedFunctionToNullable",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.KClassValue$Value$NormalClass",
     "kotlin.reflect.jvm.internal.KClassImpl$getLocalProperty$2$1$1",
     "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.ClassDeclaredMemberIndex$methodFilter$1",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaCallableMemberDescriptor",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaWildcardType",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$loadClassAnnotations$1",
     "kotlin.reflect.jvm.internal.impl.types.KotlinTypeFactory",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaAnnotationArgument",
     "kotlin.reflect.jvm.internal.JvmFunctionSignature$JavaConstructor$asString$1",
     "kotlin.reflect.jvm.internal.impl.resolve.descriptorUtil.DescriptorUtilsKt",
     "kotlin.reflect.jvm.internal.impl.types.TypeProjectionImpl",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.JvmPackageScope$kotlinScopes$2",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.RawSubstitution",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record",
     "kotlin.reflect.jvm.internal.KProperty1Impl$delegateField$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.LazyJavaPackageFragmentProvider$getPackageFragment$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.GeneratedMessageLite$ExtendableMessageOrBuilder",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$supertypes$2",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$declaredMemberIndex$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.FieldSet$FieldDescriptorLite",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtilsKt$selectMostSpecificInEachOverridableGroup$overridableGroup$1",
     "kotlin.reflect.jvm.internal.KPackageImpl$Data",
     "kotlin.reflect.full.KProperties",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.DeserializedDescriptorResolver",
     "kotlin.reflect.jvm.internal.impl.types.StarProjectionImplKt$starProjectionType$1",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeParameterMarker",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.ConstUtil",
     "kotlin.reflect.jvm.internal.impl.types.model.ArgumentList",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass$AnnotationArgumentVisitor",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition",
     "kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation",
     "kotlin.reflect.jvm.internal.impl.types.SimpleTypeImpl",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassDescriptor$declaredParameters$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaStaticClassScope",
     "kotlin.reflect.jvm.internal.impl.resolve.MemberComparator$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaStaticClassScope$flatMapJavaStaticSupertypesScopes$1$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.UnmodifiableLazyStringList",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$supertypes$2$$special$$inlined$mapTo$lambda$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass$AnnotationVisitor",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$19",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.LongValue",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$11",
     "kotlin.reflect.jvm.ReflectLambdaKt",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$12",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$13",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$14",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$KeyWithComputation",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$15",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$16",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$17",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$18",
     "kotlin.reflect.jvm.internal.UtilKt",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaPrimitiveType",
     "kotlin.reflect.jvm.internal.KClassCacheKt",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$AccessorForHiddenBoundConstructor",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Builder",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$computeMemberIndex$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$10",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoader",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.NonEmptyDeserializedAnnotations",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaDefaultValue",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingConfiguration$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.NullabilityQualifierWithApplicability",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer$Class",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$22",
     "kotlin.reflect.jvm.internal.JvmFunctionSignature$JavaConstructor",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$23",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Constructor",
     "kotlin.reflect.jvm.internal.pcollections.ConsPStack",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$descriptor$2",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$24",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$25",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$26",
     "kotlin.reflect.jvm.internal.impl.builtins.DefaultBuiltIns$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$27",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$28",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class",
     "kotlin.reflect.jvm.internal.impl.descriptors.ReceiverParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$20",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt$$special$$inlined$enhancement$lambda$21",
     "kotlin.reflect.jvm.internal.impl.protobuf.GeneratedMessageLite$Builder",
     "kotlin.reflect.jvm.internal.KPackageImpl$Data$metadata$2",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$supertypes$3$2",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$supertypes$3$3",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$PackageFragment$1",
     "kotlin.reflect.jvm.internal.impl.builtins.FunctionTypesKt",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.BinaryVersion$Companion",
     "kotlin.reflect.jvm.internal.impl.protobuf.SmallSortedMap",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl$CopyConfiguration",
     "kotlin.reflect.jvm.internal.impl.protobuf.GeneratedMessageLite$ExtensionDescriptor",
     "kotlin.reflect.jvm.internal.RuntimeTypeMapper",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ContractDeserializer",
     "kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader$Companion",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Builder",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassScope",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerValueTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.TypeIntersectionScope$getContributedDescriptors$2",
     "kotlin.reflect.jvm.internal.impl.resolve.NonReportingOverrideStrategy",
     "kotlin.reflect.jvm.internal.impl.descriptors.FindClassInModuleKt$findNonGenericClassAcrossDependencies$typeParametersCount$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUtilKt",
     "kotlin.reflect.jvm.internal.impl.descriptors.FindClassInModuleKt$findNonGenericClassAcrossDependencies$typeParametersCount$1",
     "kotlin.reflect.jvm.internal.FunctionWithAllInvokes",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaAnnotationDescriptor$type$2",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragmentImpl",
     "kotlin.reflect.jvm.internal.JvmFunctionSignature",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmMemberSignature",
     "kotlin.reflect.jvm.internal.KPackageImpl$Data$members$2",
     "kotlin.reflect.jvm.internal.impl.load.java.components.DescriptorResolverUtils$1$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$FunctionOrBuilder",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JvmDescriptorTypeWriter",
     "kotlin.reflect.jvm.internal.calls.AnnotationConstructorCallerKt$createAnnotationInstance$result$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoBasedClassDataFinder",
     "kotlin.reflect.jvm.internal.impl.types.KotlinTypeKt",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$declaredNonStaticMembers$2",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaModifierListOwner",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.VersionRequirement",
     "kotlin.reflect.jvm.internal.impl.utils.SmartSet$Companion",
     "kotlin.reflect.jvm.internal.impl.name.Name",
     "kotlin.reflect.jvm.internal.KMutableProperty1Impl",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeConstructorMarker",
     "kotlin.reflect.jvm.internal.impl.load.java.sources.JavaSourceElement",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.CompositeAnnotations",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer$getAnnotations$1",
     "kotlin.reflect.jvm.internal.impl.load.java.JvmAnnotationNamesKt",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.ClassMapperLite",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.ResolutionScope$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.protobuf.LiteralByteString",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$EnumEntryClassDescriptors$enumEntryByName$1",
     "kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinClassFinder",
     "kotlin.reflect.full.KClassifiers$createType$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaType",
     "kotlin.reflect.jvm.internal.impl.descriptors.SimpleFunctionDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver$transformJavaClassifierType$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$computeNonDeclaredFunctions$3",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$computeNonDeclaredFunctions$4",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassDescriptor$LazyJavaClassTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Contract$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmBytecodeBinaryVersion$Companion",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldSetter$JvmStaticInObject",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$DeserializedClassMemberScope$2$1",
     "kotlin.reflect.jvm.internal.impl.types.AnnotatedSimpleType",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$EnumEntry$Builder",
     "kotlin.reflect.jvm.internal.impl.util.Check",
     "kotlin.reflect.jvm.internal.impl.utils.CollectionsKt",
     "kotlin.reflect.jvm.internal.KParameterImpl$annotations$2",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaStaticClassScope$computePropertyNames$1$1",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.VersionSpecificBehaviorKt",
     "kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Contract$Builder",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.RawTypeImpl",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Builder",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.JvmPackageScope",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaAnnotationDescriptor$type$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind",
     "kotlin.reflect.jvm.internal.impl.util.capitalizeDecapitalize.CapitalizeDecapitalizeKt",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeAliasDescriptor$isInner$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.GeneratedMessageLite$GeneratedExtension",
     "kotlin.reflect.jvm.internal.impl.resolve.deprecation.DeprecationKt",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.DeclaredMemberIndex",
     "kotlin.reflect.jvm.internal.impl.resolve.calls.inference.CapturedTypeConstructorImpl",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaValueParameter",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassDescriptor",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$renderConstructor$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Function",
     "kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorVisitor",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaWildcardType",
     "kotlin.reflect.jvm.internal.structure.Java8ParameterNamesLoader",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$getJdkMethodStatus$2",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$getJdkMethodStatus$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassConstructorDescriptor",
     "kotlin.reflect.jvm.internal.impl.util.NoDefaultAndVarargsCheck",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.VersionRequirement$Version",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaDeprecatedAnnotationDescriptor$allValueArguments$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.EnumEntrySyntheticClassDescriptor$EnumEntryScope",
     "kotlin.reflect.jvm.internal.impl.utils.ReportLevel",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaStaticScope",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.StringDefaultValue",
     "kotlin.reflect.jvm.internal.impl.util.Check$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.utils.FunctionsKt$IDENTITY$1",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.GivenFunctionsMemberScope",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$SignatureParts$computeIndexedQualifiersForOverride$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingConfiguration",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassDescriptor$LazyJavaClassTypeConstructor$parameters$1",
     "kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType",
     "kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat$PLAIN",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$PartEnhancementResult",
     "kotlin.reflect.jvm.internal.impl.types.StarProjectionImplKt",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$functionTypeAnnotationsRenderer$2",
     "kotlin.reflect.jvm.internal.impl.types.checker.ClassicTypeSystemContext$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl$CopyConfiguration",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.FunctionDescriptorImpl$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeAlias$Builder",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$LowerCapturedTypePolicy",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ErrorReporter",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ClassLiteralValue",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ReceiverValue",
     "kotlin.reflect.jvm.internal.impl.utils.SmartSet",
     "kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.LazyJavaAnnotationsKt",
     "kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptor",
     "kotlin.reflect.jvm.internal.KDeclarationContainerImpl$getMembers$visitor$1",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JavaToKotlinClassMap",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$intersectTypesWithoutIntersectionType$filteredSuperAndEqualTypes$1",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeChecker",
     "kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorNonRoot",
     "kotlin.reflect.jvm.internal.impl.builtins.UnsignedTypes",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Property",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClass$fields$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClass$fields$2",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$Companion",
     "kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$SubstitutionException",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.VersionRequirement$Companion$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.NullDefaultValue",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality$1",
     "kotlin.reflect.jvm.internal.impl.utils.DFS$AbstractNodeHandler",
     "kotlin.reflect.jvm.internal.impl.util.Checks$2",
     "kotlin.reflect.jvm.internal.impl.util.Checks$3",
     "kotlin.reflect.jvm.internal.impl.util.Checks$4",
     "kotlin.reflect.jvm.internal.impl.protobuf.UnmodifiableLazyStringList$1",
     "kotlin.reflect.jvm.internal.KProperty0Impl$_getter$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.TypeSignatureMappingKt",
     "kotlin.reflect.jvm.internal.impl.protobuf.UnmodifiableLazyStringList$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$Builder",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaLiteralAnnotationArgument",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeAliasConstructorDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ULongValue",
     "kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.LazySubstitutingClassDescriptor$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClass$innerClassNames$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClass$innerClassNames$2",
     "kotlin.reflect.jvm.internal.KDeclarationContainerImpl$Data$moduleData$2",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$supertypes$3$resultWithoutCycles$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.protobuf.AbstractMessageLite$Builder$LimitedInputStream",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$supertypes$3$resultWithoutCycles$2",
     "kotlin.reflect.jvm.internal.impl.name.SpecialNames",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindExclude$NonExtensions",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$RenderDeclarationDescriptorVisitor$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.utils.DFS",
     "kotlin.reflect.jvm.internal.impl.utils.ReportLevel$Companion",
     "kotlin.reflect.full.KAnnotatedElements",
     "kotlin.reflect.jvm.internal.impl.renderer.ClassifierNamePolicy",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaClass",
     "kotlin.reflect.jvm.internal.calls.AnnotationConstructorCallerKt$createAnnotationInstance$hashCode$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.ClassOrPackageFragmentDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingMode$WhenMappings",
     "kotlin.reflect.jvm.internal.calls.InternalUnderlyingValOfInlineClass$Bound",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedCallableMemberDescriptor$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoEnumFlags",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.AbstractDeserializedPackageFragmentProvider$fragments$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedCallableMemberDescriptor",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeSystemContext",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.LazyJavaTypeParameterResolver",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.CharValue",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$AnnotationOrBuilder",
     "kotlin.reflect.jvm.internal.impl.types.DynamicTypesKt",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageScope$classes$1",
     "kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe$1",
     "kotlin.reflect.jvm.internal.RuntimeTypeMapperKt$signature$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers",
     "kotlin.reflect.jvm.internal.KDeclarationContainerImpl$findPropertyDescriptor$mostVisibleProperties$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeTable$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JvmTypeFactoryImpl",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument",
     "kotlin.reflect.jvm.internal.impl.types.checker.SubtypePathNode",
     "kotlin.reflect.jvm.internal.impl.types.model.CaptureStatus",
     "kotlin.reflect.jvm.internal.KMutableProperty1Impl$Setter",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.BuiltInFictitiousFunctionClassFactory$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaMember",
     "kotlin.reflect.jvm.internal.KPackageImpl$getLocalProperty$1$1$1",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaClassFinder$Request",
     "kotlin.reflect.jvm.internal.impl.protobuf.FieldSet$1",
     "kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeEnhancementKt$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor$TypeParameterTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.metadata.builtins.BuiltInsBinaryVersion",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns",
     "kotlin.reflect.jvm.internal.impl.types.checker.UtilsKt$debugInfo$1$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.InvalidProtocolBufferException",
     "kotlin.reflect.full.KClasses",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaPropertyInitializerEvaluator",
     "kotlin.reflect.jvm.internal.impl.util.CheckResult",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes",
     "kotlin.reflect.jvm.internal.impl.utils.NumbersKt",
     "kotlin.reflect.jvm.internal.impl.utils.SmartSet$ArrayIterator",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.ContextKt$childForClassOrPackage$1",
     "kotlin.reflect.jvm.internal.impl.types.checker.ClassicTypeSystemContext",
     "kotlin.reflect.jvm.internal.pcollections.HashPMap",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.TypeIntersectionScope$Companion",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$Method$JvmStaticInObject",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$isVisibleAsFunctionInCurrentClass$$inlined$any$lambda$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.RopeByteString$1",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$valueToString$1",
     "kotlin.reflect.jvm.internal.impl.types.checker.NewCapturedType",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.DeserializationComponentsForJava",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$renderSuperTypes$1",
     "kotlin.reflect.jvm.internal.impl.types.AbstractStrictEqualityTypeChecker",
     "kotlin.reflect.jvm.internal.impl.types.typeUtil.TypeUtilsKt",
     "kotlin.reflect.jvm.internal.impl.storage.NullableLazyValue",
     "kotlin.reflect.jvm.internal.impl.load.java.DeprecationCausedByFunctionN",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedPropertyDescriptor",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$appendTypeProjections$1",
     "kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererOptionsImpl$typeNormalizer$2",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$classNamesLazy$2",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.TransientReceiver",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaField",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JvmTypeFactory",
     "kotlin.reflect.jvm.internal.impl.descriptors.ConstUtilKt",
     "kotlin.reflect.jvm.internal.impl.types.DynamicType",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$functionTypeParameterTypesRenderer$2$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor",
     "kotlin.reflect.jvm.internal.impl.types.checker.KotlinTypeCheckerImpl$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirementTable",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.TypeMappingConfigurationImpl",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$SupertypesPolicy",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.StaticScopeForKotlinEnum$functions$2",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaVisibilities",
     "kotlin.reflect.jvm.internal.KProperty2Impl$delegateField$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl$packageFragmentProviderForWholeModuleWithDependencies$2",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldSetter",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsPackageFragmentImpl$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaAnnotationDescriptor$allValueArguments$2",
     "kotlin.reflect.full.KClasses$allSupertypes$2",
     "kotlin.reflect.full.KClasses$allSupertypes$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyDescriptorImpl",
     "kotlin.reflect.jvm.KClassesJvm",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$10",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$12",
     "kotlin.reflect.jvm.internal.impl.types.checker.StrictEqualityTypeChecker",
     "kotlin.reflect.jvm.internal.impl.descriptors.Visibilities$11",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeEnhancementInfo",
     "kotlin.reflect.jvm.internal.impl.resolve.DescriptorEquivalenceForOverrides$areCallableDescriptorsEquivalent$1",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaNamedElement",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaValueParameter",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$ValueParametersHandler",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberDescriptor$CoroutinesCompatibilityMode",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeAliasConstructorDescriptor",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.KClassValue$Value",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy$1",
     "kotlin.reflect.jvm.internal.impl.types.TypeUtils",
     "kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution",
     "kotlin.reflect.jvm.internal.impl.platform.SimplePlatform",
     "kotlin.reflect.jvm.internal.impl.renderer.KeywordStringsGenerated",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeTable",
     "kotlin.reflect.jvm.internal.impl.util.Checks",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$1",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInClassDescriptorFactory$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.types.RawType",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyGetterDescriptorImpl",
     "kotlin.reflect.jvm.internal.JvmPropertySignature$KotlinProperty",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.BinaryClassAnnotationAndConstantLoaderImpl$loadAnnotation$1$visitAnnotation$1",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameterOrBuilder",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.JavaResolverSettings$Companion",
     "kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution$Companion",
     "kotlin.reflect.jvm.internal.impl.name.State",
     "kotlin.reflect.jvm.internal.impl.util.MemberKindCheck$MemberOrExtension",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$COMPACT$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$SignatureParts$enhance$$inlined$let$lambda$1",
     "kotlin.reflect.jvm.internal.pcollections.IntTree",
     "kotlin.reflect.jvm.internal.KPackageImpl$Data$scope$2",
     "kotlin.reflect.jvm.internal.structure.Java8ParameterNamesLoader$Cache",
     "kotlin.reflect.jvm.internal.KTypeParameterImpl$upperBounds$2$$special$$inlined$map$lambda$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$Companion",
     "kotlin.reflect.jvm.internal.impl.types.model.CapturedTypeMarker",
     "kotlin.reflect.jvm.internal.impl.types.model.SimpleTypeMarker",
     "kotlin.reflect.jvm.internal.FunctionWithAllInvokes$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver",
     "kotlin.reflect.jvm.internal.KPropertyImpl",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$EnumEntryClassDescriptors$enumEntryByName$1$$special$$inlined$let$lambda$1",
     "kotlin.reflect.jvm.internal.impl.storage.CacheWithNotNullValues",
     "kotlin.reflect.jvm.internal.impl.types.ErrorUtils$ErrorClassDescriptor",
     "kotlin.reflect.jvm.internal.pcollections.ConsPStack$Itr",
     "kotlin.reflect.jvm.internal.impl.types.NullableSimpleType",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldGetter$JvmStaticInObject",
     "kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind",
     "kotlin.reflect.jvm.internal.KCallableImpl$_parameters$1$3",
     "kotlin.reflect.jvm.internal.KCallableImpl$_parameters$1$2",
     "kotlin.reflect.jvm.internal.KCallableImpl$_parameters$1$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.EnhancedTypeAnnotations",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.Flags$EnumLiteFlagField",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ExtensionReceiver",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmProtoBufUtil",
     "kotlin.reflect.jvm.internal.impl.resolve.DescriptorFactory",
     "kotlin.reflect.full.KClasses$isSubclassOf$1",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$AccessorForHiddenConstructor",
     "kotlin.reflect.full.KClasses$isSubclassOf$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageFragment$subPackages$1",
     "kotlin.reflect.jvm.internal.components.ReflectKotlinClassFinderKt",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$Storage",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$enhanceSignature$receiverTypeEnhancement$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer$containsSuspendFunctionType$1",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$1",
     "kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader$Companion$Instance$2",
     "kotlin.reflect.jvm.internal.impl.load.java.components.SamConversionResolver$Empty",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer$valueParameters$$inlined$mapIndexed$lambda$1",
     "kotlin.reflect.jvm.internal.impl.utils.NumberWithRadix",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil",
     "kotlin.reflect.jvm.internal.impl.renderer.ExcludedTypeAnnotations",
     "kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition",
     "kotlin.reflect.jvm.internal.impl.descriptors.ModalityKt",
     "kotlin.reflect.jvm.internal.impl.types.StarProjectionImpl",
     "kotlin.reflect.jvm.internal.impl.types.typesApproximation.CapturedTypeApproximationKt$approximateCapturedTypes$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsPackageFragmentImpl",
     "kotlin.reflect.jvm.internal.impl.utils.FunctionsKt$DO_NOTHING_3$1",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$notConsideredDeprecation$2",
     "kotlin.reflect.jvm.internal.ModuleByClassLoaderKt",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$SupertypesPolicy$LowerIfFlexible",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.LazyJavaTypeParameterResolver$resolve$1",
     "kotlin.reflect.full.KClassifiers$WhenMappings",
     "kotlin.reflect.jvm.internal.calls.InlineClassAwareCaller",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaClassifier",
     "kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassifierTypeSettings$Default",
     "kotlin.reflect.jvm.internal.impl.util.OperatorChecks$checks$1",
     "kotlin.reflect.jvm.internal.impl.builtins.DefaultBuiltIns",
     "kotlin.reflect.jvm.internal.impl.util.OperatorChecks$checks$2",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NotNullTypeParameter",
     "kotlin.reflect.jvm.internal.impl.util.OperatorChecks$checks$3",
     "kotlin.reflect.jvm.internal.impl.util.CheckResult$IllegalSignature",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$nestedClasses$1",
     "kotlin.reflect.jvm.internal.components.RuntimeModuleData",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind$1",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ImplicitClassReceiver",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationDeserializer",
     "kotlin.reflect.jvm.internal.impl.protobuf.LazyField$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaConstructor",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ReceiverParameterDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind$Companion",
     "kotlin.reflect.jvm.internal.impl.util.ValueParameterCountCheck$AtLeast",
     "kotlin.reflect.jvm.internal.impl.descriptors.deserialization.PlatformDependentDeclarationFilterKt",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$allStaticMembers$2",
     "kotlin.reflect.jvm.internal.KPropertyImpl$Getter",
     "kotlin.reflect.jvm.internal.impl.descriptors.FieldDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaArrayType",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope",
     "kotlin.reflect.jvm.internal.impl.resolve.DescriptorEquivalenceForOverrides$areCallableDescriptorsEquivalent$overridingUtil$1$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl$createPackageFragmentProvider$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaForKotlinOverridePropertyDescriptor",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmMetadataVersion$Companion",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmFieldSignature$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaPrimitiveType",
     "kotlin.reflect.jvm.internal.impl.load.java.components.SignaturePropagator$PropagatedSignature",
     "kotlin.reflect.jvm.internal.impl.protobuf.CodedInputStream$RefillCallback",
     "kotlin.reflect.jvm.internal.components.PackagePartScopeCache",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$functionTypeAnnotationsRenderer$2$1",
     "kotlin.reflect.full.KTypes$withNullability$1",
     "kotlin.reflect.full.KTypes$withNullability$2",
     "kotlin.reflect.full.KTypes$withNullability$3",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInClassDescriptorFactory",
     "kotlin.reflect.jvm.internal.impl.protobuf.AbstractMessageLite",
     "kotlin.reflect.jvm.internal.impl.utils.SmartList",
     "kotlin.reflect.jvm.internal.KClassifierImpl",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindExclude",
     "kotlin.reflect.jvm.internal.impl.util.ValueParameterCountCheck$Equals",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.FilteredAnnotations",
     "kotlin.reflect.jvm.internal.KPackageImpl$Data$multifileFacade$2",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.ClassDeclaredMemberIndex",
     "kotlin.reflect.jvm.internal.impl.storage.MemoizedFunctionToNotNull",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaResolverCache$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinClassFinder$Result",
     "kotlin.reflect.jvm.internal.impl.descriptors.SupertypeLoopChecker$EMPTY",
     "kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptor",
     "kotlin.reflect.jvm.internal.KPropertyImpl$Setter$descriptor$2",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.DeclaredMemberIndex$Empty",
     "kotlin.reflect.jvm.internal.KPackageImpl",
     "kotlin.reflect.jvm.internal.impl.types.DisjointKeysUnionTypeSubstitution",
     "kotlin.reflect.jvm.internal.impl.types.TypeProjectionBase",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$DeserializedClassTypeConstructor$parameters$1",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinSpecialProperties",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageScope$KotlinClassLookupResult",
     "kotlin.reflect.jvm.internal.impl.types.FlexibleTypesKt",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$ArgumentOrBuilder",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorNonRootImpl",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$ConstructorOrBuilder",
     "kotlin.reflect.jvm.internal.KProperty1Impl$Getter",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedNameOrBuilder",
     "kotlin.reflect.jvm.internal.impl.protobuf.RopeByteString",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$ValueParameterOrBuilder",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.types.TypeWithEnhancementKt",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeSystemOptimizationContext",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaAnnotationAsAnnotationArgument",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.BinaryClassAnnotationAndConstantLoaderImpl$loadAnnotation$1",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldSetter$BoundInstance",
     "kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor",
     "kotlin.reflect.jvm.internal.impl.incremental.components.LookupTracker",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.SimpleFunctionDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedTypeAliasDescriptor",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.FloatValue",
     "kotlin.reflect.jvm.internal.JvmFunctionSignature$KotlinConstructor",
     "kotlin.reflect.jvm.internal.structure.ReflectClassUtilKt$parameterizedTypeArguments$2",
     "kotlin.reflect.jvm.internal.structure.ReflectClassUtilKt$parameterizedTypeArguments$1",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Companion",
     "kotlin.reflect.jvm.internal.impl.descriptors.MemberDescriptor",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$getFunctions$2",
     "kotlin.reflect.jvm.internal.KClassImpl",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedClassDataFinder",
     "kotlin.reflect.jvm.internal.impl.util.OperatorNameConventions",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$createMockJavaIoSerializableType$superTypes$1",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$getConstructors$1",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription$MAP_GET_OR_DEFAULT",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier$Companion",
     "kotlin.reflect.jvm.internal.impl.types.typesApproximation.CapturedTypeApproximationKt$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.protobuf.AbstractParser",
     "kotlin.reflect.jvm.internal.impl.incremental.UtilsKt",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass$MethodAnnotationVisitor",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedFunctionEnhancementInfo",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName",
     "kotlin.reflect.jvm.internal.impl.util.ReturnsCheck$ReturnsUnit",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.SingleModuleClassResolver",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection$1",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.VersionRequirementTable$Companion",
     "kotlin.reflect.jvm.internal.impl.descriptors.SourceElement$1",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmFieldSignatureOrBuilder",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$PropertyOrBuilder",
     "kotlin.reflect.jvm.internal.KParameterImpl",
     "kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterUtilsKt",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.KClassValue",
     "kotlin.reflect.jvm.internal.impl.util.AbstractModifierChecks",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.NameResolver",
     "kotlin.reflect.jvm.internal.calls.InternalUnderlyingValOfInlineClass",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$supertypes$2",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$supertypes$1",
     "kotlin.reflect.jvm.internal.impl.types.TypeConstructor",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$getOverriddenBuiltinFunctionWithErasedValueParametersInJava$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver$computeArguments$$inlined$map$lambda$1$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolverKt",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaModifierListOwner",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer$ClassKey",
     "kotlin.reflect.jvm.internal.JvmFunctionSignature$JavaMethod",
     "kotlin.reflect.jvm.internal.KPropertyImpl$_descriptor$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClassObjectAnnotationArgument",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmNameResolver",
     "kotlin.reflect.jvm.internal.impl.descriptors.InvalidModuleException",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$supertypes$3",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Builder",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$declaredMembers$2",
     "kotlin.reflect.jvm.internal.impl.resolve.DescriptorEquivalenceForOverrides",
     "kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$SeveralSupertypesWithSameConstructorPolicy",
     "kotlin.reflect.jvm.internal.impl.load.java.components.SignaturePropagator",
     "kotlin.reflect.jvm.internal.impl.types.TypeUtils$SpecialType",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.Result",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDependencies",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaTypeParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.protobuf.GeneratedMessageLite",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaRetentionAnnotationDescriptor",
     "kotlin.reflect.jvm.internal.impl.descriptors.SourceElement",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.JavaResolverSettings$Default",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$EnumEntryClassDescriptors",
     "kotlin.reflect.jvm.internal.calls.InlineClassAwareCaller$BoxUnboxData",
     "kotlin.reflect.jvm.internal.impl.storage.StorageKt",
     "kotlin.reflect.full.KClassifiers",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationDescriptor",
     "kotlin.reflect.jvm.internal.impl.util.CheckResult$IllegalFunctionName",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$propertyNamesLazy$2",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaAnnotationAsAnnotationArgument",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeArgumentMarker",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$1",
     "kotlin.reflect.jvm.internal.KCallableImpl$_parameters$1$$special$$inlined$sortBy$1",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$isMutabilityViolation$2",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.UByteValue",
     "kotlin.reflect.jvm.internal.components.RuntimeSourceElementFactory$RuntimeSourceElement",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaAnnotationMapper",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.ImplicitReceiver",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.PackageFragmentDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.types.model.DynamicTypeMarker",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$isMutabilityViolation$1",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithDifferentJvmName",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.PredefinedEnhancementInfoKt",
     "kotlin.reflect.jvm.internal.impl.types.ErrorUtils$UninferredParameterTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.UtilKt",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer$classDescriptors$1",
     "kotlin.reflect.jvm.internal.KDeclarationContainerImpl$findFunctionDescriptor$allMembers$1",
     "kotlin.reflect.jvm.internal.KTypeImpl$arguments$2",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$DeserializedClassTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver",
     "kotlin.reflect.jvm.internal.KTypeParameterImpl$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$FQ_NAMES_IN_TYPES$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedTypeParameterDescriptor$annotations$1",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.GivenFunctionsMemberScope$allDescriptors$2",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$intersectTypesWithoutIntersectionType$errorMessage$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$1",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaField",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope$Companion",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$EnumEntryClassDescriptors$enumMemberNames$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement",
     "kotlin.reflect.jvm.internal.impl.protobuf.SmallSortedMap$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaArrayType",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionInvokeDescriptor$Factory",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$SignatureParts",
     "kotlin.reflect.jvm.internal.impl.protobuf.LazyStringArrayList",
     "kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$PackageFragment$Builder",
     "kotlin.reflect.jvm.internal.impl.protobuf.Internal$EnumLite",
     "kotlin.reflect.jvm.internal.impl.load.java.components.SignaturePropagator$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.LazyJavaAnnotations",
     "kotlin.reflect.jvm.internal.impl.load.java.Constant",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.TypeParameterResolver",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$cloneableType$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Package$Builder",
     "kotlin.reflect.jvm.internal.impl.util.ReturnsCheck",
     "kotlin.reflect.jvm.internal.impl.builtins.ReflectionTypes",
     "kotlin.reflect.jvm.internal.impl.utils.DFS$VisitedWithSet",
     "kotlin.reflect.jvm.internal.KProperty2Impl$Getter",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmPropertySignature",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations$Companion$EMPTY$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaStaticClassScope$flatMapJavaStaticSupertypesScopes$1",
     "kotlin.reflect.jvm.internal.impl.types.DefinitelyNotNullType$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaStaticClassScope$flatMapJavaStaticSupertypesScopes$2",
     "kotlin.reflect.jvm.internal.KTypeImpl$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.SmallSortedMap$EntrySet",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass$AnnotationArrayArgumentVisitor",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$ContractOrBuilder",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaStaticClassScope$computeNonDeclaredProperties$propertiesFromSupertypes$1",
     "kotlin.reflect.jvm.internal.impl.resolve.calls.inference.CapturedTypeConstructorKt",
     "kotlin.reflect.jvm.internal.impl.load.java.UtilsKt",
     "kotlin.reflect.jvm.internal.impl.serialization.SerializerExtensionProtocol",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$supertypes$2$3",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind",
     "kotlin.reflect.jvm.internal.impl.types.WrappedType",
     "kotlin.reflect.jvm.internal.KProperty1Impl",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ErrorValue",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.LazyScopeAdapter",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer$classes$1",
     "kotlin.reflect.jvm.internal.impl.resolve.InlineClassesUtilsKt",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.SubpackagesScope",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Builder",
     "kotlin.reflect.jvm.internal.impl.types.Variance",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.ReadKotlinClassHeaderAnnotationVisitor$OldDeprecatedAnnotationArgumentVisitor",
     "kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns$4",
     "kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns$3",
     "kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns$2",
     "kotlin.reflect.jvm.internal.impl.resolve.calls.inference.CapturedTypeConstructorKt$wrapWithCapturingSubstitution$2",
     "kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns$1",
     "kotlin.reflect.jvm.internal.impl.types.typesApproximation.CapturedTypeApproximationKt$toTypeProjection$1$descriptorRenderer$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.LocalClassifierTypeSettings",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$constructors$1",
     "kotlin.reflect.jvm.internal.ReflectionObjectRenderer$renderLambda$1$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.UninitializedMessageException",
     "kotlin.reflect.jvm.internal.impl.resolve.descriptorUtil.DescriptorUtilsKt$computeSealedSubclasses$1",
     "kotlin.reflect.jvm.internal.impl.resolve.descriptorUtil.DescriptorUtilsKt$parentsWithSelf$1",
     "kotlin.reflect.jvm.internal.impl.builtins.CompanionObjectMapping",
     "kotlin.reflect.full.KTypes",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberDescriptor$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.types.TypeSubstitution",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$getAdditionalFunctions$fakeJavaClassDescriptor$1",
     "kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ArrayValue",
     "kotlin.reflect.jvm.internal.impl.descriptors.Modality",
     "kotlin.reflect.jvm.internal.impl.renderer.ClassifierNamePolicy$FULLY_QUALIFIED",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JavaFlexibleTypeDeserializer",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.AbstractDeserializedPackageFragmentProvider",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$RecordOrBuilder",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInSerializerProtocol",
     "kotlin.reflect.jvm.internal.impl.types.model.FlexibleTypeMarker",
     "kotlin.reflect.jvm.internal.impl.descriptors.VariableDescriptorWithAccessors",
     "kotlin.reflect.jvm.internal.impl.incremental.components.LocationInfo",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldGetter$Static",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$ValueParameter$1",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$2",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$1",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$3",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.GivenFunctionsMemberScope$createFakeOverrides$4",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer$simpleType$annotations$1",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.Flags$BooleanFlagField",
     "kotlin.reflect.jvm.internal.impl.utils.WrappedValues",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedSimpleFunctionDescriptor",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInClassDescriptorFactory$cloneable$2",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.SubstitutingScope$_allDescriptors$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor$CopyBuilder",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmMethodSignature$Builder",
     "kotlin.reflect.jvm.internal.impl.types.SpecialTypesKt",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Property$Builder",
     "kotlin.reflect.jvm.internal.impl.platform.TargetPlatform",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.TypeParameterDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.types.ErrorUtils$ThrowingScope",
     "kotlin.reflect.jvm.internal.impl.util.ValueParameterCountCheck",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$nestedClassIndex$1",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.NameResolverImpl$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass$MemberVisitor",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeVariance",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature",
     "kotlin.reflect.jvm.internal.impl.types.error.ErrorSimpleFunctionDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.TypeTable",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.VariableDescriptorWithInitializerImpl",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.SubstitutingScope",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.DeserializedDescriptorResolver$Companion",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationsImpl",
     "kotlin.reflect.jvm.KCallablesJvm",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberScope$computeDescriptors$$inlined$let$lambda$1",
     "kotlin.reflect.jvm.internal.impl.name.NameUtils",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberScope$computeDescriptors$$inlined$let$lambda$3",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoContainer",
     "kotlin.reflect.jvm.internal.impl.resolve.VisibilityUtilKt",
     "kotlin.reflect.jvm.internal.impl.resolve.jvm.InlineClassManglingRulesKt",
     "kotlin.reflect.jvm.internal.Util",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeDeserializer",
     "kotlin.reflect.jvm.internal.KCallableImpl$_returnType$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractReceiverParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.EnumValue",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$ValueOrBuilder",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotationAndConstantLoaderImpl",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$StringTable",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunction",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$WhenMappings",
     "kotlin.reflect.jvm.internal.KPropertyImplKt",
     "kotlin.reflect.jvm.internal.impl.protobuf.LiteralByteString$LiteralByteIterator",
     "kotlin.reflect.jvm.internal.impl.types.error.ErrorSimpleFunctionDescriptorImpl$1",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.ResolutionScope",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.CloneableClassScope$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaAnnotationArgument",
     "kotlin.reflect.jvm.internal.calls.AnnotationConstructorCallerKt$createAnnotationInstance$toString$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$Builder",
     "kotlin.reflect.full.NoSuchPropertyException",
     "kotlin.reflect.jvm.internal.impl.util.ReturnsCheck$ReturnsBoolean$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Package",
     "kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancementKt",
     "kotlin.reflect.jvm.internal.impl.load.java.SpecialBuiltinMembers$getOverriddenSpecialBuiltin$2",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmMemberSignature$Method",
     "kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$Mode",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotatedImpl",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScopeImpl",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.Flags$FlagField",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$typeParameters$2",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ErrorValue$ErrorValueWithMessage",
     "kotlin.reflect.jvm.internal.impl.incremental.components.LookupLocation",
     "kotlin.reflect.jvm.internal.impl.name.FqNamesUtilKt",
     "kotlin.reflect.jvm.internal.impl.types.AbstractNullabilityChecker",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter$Companion$MaskToName",
     "kotlin.reflect.jvm.internal.WeakClassLoaderBox",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaMethod",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererOptions",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererOptionsImpl$property$$inlined$vetoable$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Package$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertyAccessorDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.FlexibleTypeDeserializer$ThrowException",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$companionObjectDescriptor$1",
     "kotlin.reflect.jvm.internal.KCallableImpl$_returnType$1$1",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$CacheWithNotNullValuesBasedOnMemoizedFunction",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirementOrBuilder",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$sealedSubclasses$1",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext$SupertypesPolicy$UpperIfFlexible",
     "kotlin.reflect.jvm.internal.KPropertyImpl$Getter$descriptor$2",
     "kotlin.reflect.jvm.internal.ReflectProperties",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassDescriptorBase",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.UnsignedValueConstant",
     "kotlin.reflect.jvm.internal.impl.descriptors.ClassConstructorDescriptor",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.VersionRequirement$Companion",
     "kotlin.reflect.jvm.internal.impl.types.FlexibleTypeWithEnhancement",
     "kotlin.reflect.jvm.internal.impl.descriptors.NotFoundClasses",
     "kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentDescriptor",
     "kotlin.reflect.jvm.internal.RuntimeTypeMapperKt",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$supertypes$2",
     "kotlin.reflect.full.IllegalCallableAccessException",
     "kotlin.reflect.jvm.internal.impl.utils.Jsr305State$description$2",
     "kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsPackageFragmentProvider",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmPropertySignature$1",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$declaredStaticMembers$2",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer$loadProperty$3",
     "kotlin.reflect.jvm.internal.impl.builtins.KotlinBuiltIns",
     "kotlin.reflect.jvm.internal.impl.util.OperatorChecks",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeOrBuilder",
     "kotlin.reflect.jvm.internal.impl.types.StubType",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldSetter$BoundJvmStaticInObject",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.RawTypeImpl$render$newArgs$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.WireFormat",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$loadAnnotationsAndInitializers$1$AnnotationVisitorForMethod",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$PropertyRelatedElement",
     "kotlin.reflect.jvm.internal.impl.metadata.builtins.BuiltInsProtoBuf",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind$1",
     "kotlin.reflect.jvm.internal.impl.name.FqNamesUtilKt$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.protobuf.RopeByteString$PieceIterator",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinClassFinderKt",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.BooleanValue",
     "kotlin.reflect.jvm.internal.impl.protobuf.LiteralByteString$1",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$FunctionTypeConstructor$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.resolve.DescriptorEquivalenceForOverrides$areTypeParametersEquivalent$1",
     "kotlin.reflect.full.KCallables",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.ReadKotlinClassHeaderAnnotationVisitor",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$functionTypeParameterTypesRenderer$2",
     "kotlin.reflect.jvm.internal.impl.protobuf.ProtocolStringList",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractTypeParameterDescriptor$2$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$SignatureParts$toIndexed$1",
     "kotlin.reflect.jvm.internal.impl.types.checker.NullabilityChecker",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor$1",
     "kotlin.reflect.jvm.internal.impl.types.checker.NewCapturedTypeKt",
     "kotlin.reflect.jvm.internal.impl.util.IsKPropertyCheck",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Builder",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.AbstractClassDescriptor$3",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.FallbackBuiltIns$Companion",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.ReadKotlinClassHeaderAnnotationVisitor$1",
     "kotlin.reflect.jvm.KTypesJvm",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$PackageFragmentOrBuilder",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.PrimitiveTypeUtilKt",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind$1",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaClassObjectAnnotationArgument",
     "kotlin.reflect.jvm.internal.KProperty0Impl$Getter",
     "kotlin.reflect.jvm.internal.KParameterImpl$type$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.ByteString$ByteIterator",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.LazyJavaPackageFragmentProvider",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance",
     "kotlin.reflect.jvm.internal.impl.protobuf.SmallSortedMap$EmptySet",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.JavaResolverSettings",
     "kotlin.reflect.jvm.internal.impl.utils.FunctionsKt$ALWAYS_NULL$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.LazyField$LazyEntry",
     "kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorWithVisibility",
     "kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProviderImpl$getSubPackagesOf$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProviderImpl$getSubPackagesOf$1",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaConstructor",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.KClassValue$Companion",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerProcedureCallbacksImpl",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererOptionsImpl$defaultParameterValueRenderer$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.JvmAbi",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldGetter",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility",
     "kotlin.reflect.jvm.internal.impl.types.UnwrappedType",
     "kotlin.reflect.jvm.internal.impl.resolve.calls.inference.CapturedTypeConstructorKt$createCapturedIfNeeded$1",
     "kotlin.reflect.jvm.internal.impl.load.java.FakePureImplementationsProvider",
     "kotlin.reflect.jvm.internal.impl.protobuf.ByteString$Output",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.CompositeAnnotations$iterator$1",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.AbstractScopeAdapter",
     "kotlin.reflect.jvm.internal.impl.protobuf.RopeByteString$Balancer",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$COMPACT_WITH_SHORT_TYPES$1",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaAnnotationDescriptor",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$Method$BoundStatic",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDataFinder",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaMethod",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerValueConstant",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter$Companion",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor",
     "kotlin.reflect.jvm.ReflectJvmMapping$WhenMappings",
     "kotlin.reflect.jvm.internal.KotlinReflectionInternalError",
     "kotlin.reflect.jvm.internal.impl.descriptors.TypeAliasDescriptor",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.EmptyPackageFragmentDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaAnnotationTargetMapper$mapJavaTargetArguments$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancementBuilder$ClassEnhancementBuilder",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClass$methods$2",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClass$methods$1",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.BitEncoding",
     "kotlin.reflect.jvm.internal.impl.protobuf.CodedOutputStream",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithDifferentJvmName$isBuiltinFunctionWithDifferentNameInJvm$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.deserialization.PlatformDependentDeclarationFilter",
     "kotlin.reflect.jvm.internal.impl.types.TypeCapabilitiesKt",
     "kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition$isOverridable$signatureTypes$1",
     "kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.LazyJavaAnnotations$annotationDescriptors$1",
     "kotlin.reflect.jvm.internal.KMutableProperty2Impl$Setter",
     "kotlin.reflect.jvm.internal.KMutableProperty2Impl",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaAnnotationOwner",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.FallbackBuiltIns",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ConstantValueFactory$createArrayValue$1",
     "kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionInvokeDescriptor",
     "kotlin.reflect.jvm.internal.impl.renderer.PropertyAccessorRenderingPolicy",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaAnnotationOwner",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$StringTable$Builder",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$RenderDeclarationDescriptorVisitor",
     "kotlin.reflect.jvm.internal.impl.types.typesApproximation.TypeArgument",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtilsKt",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaMember",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope$functionNamesLazy$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$ValueParameter",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Contract",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ConstantValueFactory$createArrayValue$3",
     "kotlin.reflect.jvm.internal.impl.types.DefinitelyNotNullType",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.LazyFieldLite",
     "kotlin.reflect.jvm.internal.impl.types.model.DefinitelyNotNullTypeMarker",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.UShortValue",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability$START",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaArrayAnnotationArgument",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$inheritedStaticMembers$2",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationConfiguration$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.protobuf.CodedInputStream",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$WhenMappings",
     "kotlin.reflect.jvm.internal.pcollections.IntTreePMap",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level$1",
     "kotlin.reflect.jvm.internal.impl.types.model.KotlinTypeMarker",
     "kotlin.reflect.jvm.internal.impl.protobuf.Internal",
     "kotlin.reflect.jvm.internal.impl.resolve.descriptorUtil.DescriptorUtilsKt$declaresOrInheritsDefaultValue$2",
     "kotlin.reflect.jvm.internal.impl.resolve.descriptorUtil.DescriptorUtilsKt$declaresOrInheritsDefaultValue$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$computeNonDeclaredProperties$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$computeNonDeclaredProperties$2",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaAnnotationOwner$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberScope$properties$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.ParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaPropertyInitializerEvaluator$DoNothing",
     "kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$resolvedNicknames$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$ONLY_NAMES_WITH_SHORT_TYPES$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.PackageViewDescriptor",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberScope$functionNamesLazy$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$StringTableOrBuilder",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$allNonStaticMembers$2",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer",
     "kotlin.reflect.full.KClasses$allSupertypes$1$1$1$1",
     "kotlin.reflect.jvm.internal.impl.types.typesApproximation.CapturedTypeApproximationKt$substituteCapturedTypesWithProjections$typeSubstitutor$1",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaAnnotationTargetMapper",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtilsKt$retainMostSpecificInEachOverridableGroup$newResult$1",
     "kotlin.reflect.jvm.internal.impl.builtins.FunctionInterfacePackageFragment",
     "kotlin.reflect.jvm.internal.impl.utils.Jsr305State",
     "kotlin.reflect.jvm.internal.impl.types.FlexibleTypeImpl$Companion",
     "kotlin.reflect.jvm.internal.impl.types.ErrorUtils$1",
     "kotlin.reflect.jvm.internal.impl.types.ErrorUtils$2",
     "kotlin.reflect.jvm.internal.impl.types.UnresolvedType",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$annotations$2",
     "kotlin.reflect.jvm.internal.impl.name.FqName",
     "kotlin.reflect.jvm.internal.ReflectProperties$Val",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationConfiguration$Default",
     "kotlin.reflect.jvm.ReflectJvmMapping",
     "kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$2",
     "kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.FindClassInModuleKt",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeTable$Builder",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.DoubleValue",
     "kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$CallMode",
     "kotlin.reflect.jvm.internal.impl.builtins.UnsignedType",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.IncompatibleVersionErrorData",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageScope$KotlinClassLookupResult$Found",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeCheckerContext",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.VersionRequirement$Version$Companion",
     "kotlin.reflect.full.KClasses$defaultType$1",
     "kotlin.reflect.jvm.internal.impl.types.IntersectionTypeConstructor$makeDebugNameForIntersectionType$$inlined$sortedBy$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.JavaTypeQualifiersByElementType",
     "kotlin.reflect.jvm.internal.KPropertyImpl$Accessor",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor",
     "kotlin.reflect.jvm.internal.impl.protobuf.AbstractMessageLite$Builder",
     "kotlin.reflect.jvm.internal.impl.types.checker.ClassicTypeSystemContextKt",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$settings$2",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.receivers.SuperCallReceiverValue",
     "kotlin.reflect.jvm.internal.impl.utils.DFS$NodeHandler",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ModuleDescriptorImpl$packages$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$loadAnnotationsAndInitializers$1",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$qualifiedName$2",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.SignatureBuildingComponents$jvmDescriptor$1",
     "kotlin.reflect.jvm.internal.impl.util.ValueParameterCountCheck$NoValueParameters",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeConstructor$Supertypes",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.LazyPackageViewDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterUtilsKt$computeConstructorTypeParameters$parametersFromContainingFunctions$1",
     "kotlin.reflect.jvm.internal.impl.incremental.components.LookupTracker$DO_NOTHING",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Builder",
     "kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterUtilsKt$computeConstructorTypeParameters$parametersFromContainingFunctions$2",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedMemberScope$variableNamesLazy$2",
     "kotlin.reflect.jvm.internal.components.ReflectKotlinClass$Factory",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeResolver$computeArguments$$inlined$map$lambda$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.SupertypeLoopChecker",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$settings$2$1",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$settings$2$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$ExpressionOrBuilder",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeAttributes",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$enhanceSignature$returnTypeEnhancement$1",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedNotNullLazyValue",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer$typeConstructor$1$classNestingLevel$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$PackageOrBuilder",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeSystemOptimizationContext$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.types.CustomTypeVariable",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaEnumValueAnnotationArgument",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.ReadKotlinClassHeaderAnnotationVisitor$KotlinMetadataArgumentVisitor$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.NotFoundClasses$packageFragments$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.EnhancementResult",
     "kotlin.reflect.jvm.internal.KPropertyImplKt$computeCallerForAccessor$3",
     "kotlin.reflect.jvm.internal.impl.protobuf.GeneratedMessageLite$ExtendableBuilder",
     "kotlin.reflect.jvm.internal.KPropertyImplKt$computeCallerForAccessor$2",
     "kotlin.reflect.jvm.internal.KPropertyImplKt$computeCallerForAccessor$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.types.AbbreviatedType",
     "kotlin.reflect.jvm.internal.impl.resolve.descriptorUtil.DescriptorUtilsKt$firstOverridden$2",
     "kotlin.reflect.jvm.internal.impl.resolve.descriptorUtil.DescriptorUtilsKt$firstOverridden$1",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$1",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaTypeParameter",
     "kotlin.reflect.jvm.internal.impl.load.java.components.JavaResolverCache",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaTypeParameterListOwner",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.ReadKotlinClassHeaderAnnotationVisitor$KotlinMetadataArgumentVisitor$2",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaClassMemberScope$nestedClasses$1$enumMemberNames$1",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ByteValue",
     "kotlin.reflect.jvm.internal.impl.utils.SmartList$1",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability$ACCEPT_NULL",
     "kotlin.reflect.jvm.internal.JvmFunctionSignature$FakeJavaAnnotationConstructor",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$JDKMemberStatus",
     "kotlin.reflect.jvm.internal.impl.util.ReturnsCheck$ReturnsUnit$1",
     "kotlin.reflect.jvm.internal.calls.Caller",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility$1",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.ConstantValueFactory",
     "kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmClassName",
     "kotlin.reflect.jvm.internal.impl.types.KotlinType",
     "kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType$2",
     "kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType$1",
     "kotlin.reflect.jvm.internal.KCallableImpl$_typeParameters$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType$4",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Static",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader$loadAnnotationsAndInitializers$1$MemberAnnotationVisitor",
     "kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType$3",
     "kotlin.reflect.jvm.internal.impl.types.checker.ClassicTypeSystemContextKt$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.utils.Jsr305State$Companion",
     "kotlin.reflect.jvm.internal.impl.descriptors.ClassifierDescriptor",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$Method$BoundJvmStaticInObject",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion",
     "kotlin.reflect.jvm.internal.impl.protobuf.Utf8",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageFragment",
     "kotlin.reflect.jvm.internal.impl.resolve.MemberComparator$NameAndTypeMemberComparator",
     "kotlin.reflect.jvm.internal.structure.ReflectClassUtilKt",
     "kotlin.reflect.jvm.internal.impl.types.checker.KotlinTypeCheckerImpl",
     "kotlin.reflect.jvm.internal.KClassImpl$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.NullValue",
     "kotlin.reflect.jvm.internal.KPropertyImpl$Setter",
     "kotlin.reflect.jvm.internal.impl.types.checker.ClassicTypeCheckerContext$Companion",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$1",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmNameResolver$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.types.ErrorUtils",
     "kotlin.reflect.jvm.internal.impl.load.java.SpecialBuiltinMembers$getOverriddenBuiltinWithDifferentJvmName$1",
     "kotlin.reflect.jvm.internal.impl.load.java.SpecialBuiltinMembers$getOverriddenBuiltinWithDifferentJvmName$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.CompositeAnnotations$findAnnotation$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.DeclarationDescriptorWithSource",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$Method$BoundInstance",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$COMPACT_WITHOUT_SUPERTYPES$1",
     "kotlin.reflect.jvm.internal.impl.types.typesApproximation.ApproximationBounds",
     "kotlin.reflect.jvm.internal.impl.builtins.ReflectionTypes$kotlinReflectScope$2",
     "kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue",
     "kotlin.reflect.jvm.internal.impl.types.SimpleType",
     "kotlin.reflect.jvm.internal.KCallableImpl$_parameters$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.NotFoundClasses$classes$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Builder",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializedPackageFragmentImpl$initialize$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProviderImpl",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancementBuilder$ClassEnhancementBuilder$FunctionEnhancementBuilder",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassDeserializer$Companion",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeEnhancementKt",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JvmType$Object",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$ValueParameter$Builder",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaClassifierType",
     "kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$SignatureParts$enhance$containsFunctionN$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$SignatureParts$extractQualifiersFromAnnotations$2",
     "kotlin.reflect.jvm.internal.impl.types.typesApproximation.CapturedTypeApproximationKt",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$SignatureParts$extractQualifiersFromAnnotations$1",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.ClassMapperLite$map$1$1",
     "kotlin.reflect.jvm.internal.calls.ThrowingCaller",
     "kotlin.reflect.jvm.internal.impl.utils.DFS$CollectingNodeHandler",
     "kotlin.reflect.jvm.internal.impl.resolve.deprecation.DeprecationKt$DEPRECATED_FUNCTION_KEY$1",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypesOrBuilder",
     "kotlin.reflect.jvm.internal.ReflectionObjectRenderer",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldSetter$Static",
     "kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver$QualifierApplicabilityType",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmPropertySignatureOrBuilder",
     "kotlin.reflect.jvm.internal.impl.load.java.components.DescriptorResolverUtils$1",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.IntValue",
     "kotlin.reflect.jvm.internal.impl.builtins.BuiltInsPackageFragment",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeChecker$checkSubtypeForIntegerLiteralType$1",
     "kotlin.reflect.jvm.internal.KPackageImpl$data$1",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion$DEBUG_TEXT$1",
     "kotlin.reflect.jvm.internal.impl.types.TypeSubstitutionKt",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.ContextKt",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryPackageSourceElement",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmFieldSignature$Builder",
     "kotlin.reflect.jvm.internal.impl.resolve.calls.inference.CapturedTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation",
     "kotlin.reflect.jvm.internal.impl.types.checker.ClassicTypeCheckerContext$Companion$classicSubstitutionSupertypePolicy$2",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationAndConstantLoader",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ProtoEnumFlags$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.PropertySetterDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl$renderConstant$1",
     "kotlin.reflect.jvm.internal.impl.types.AbstractTypeChecker$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$EnumEntry",
     "kotlin.reflect.jvm.internal.impl.protobuf.SmallSortedMap$Entry",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaType$Factory",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition$Companion",
     "kotlin.reflect.jvm.internal.impl.types.checker.ClassicTypeCheckerContextKt",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedPackageMemberScope",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$EffectOrBuilder",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.StaticScopeForKotlinEnum",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.RawTypeImpl$render$3",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$primaryConstructor$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClassifierType",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.RawTypeImpl$render$1",
     "kotlin.reflect.jvm.internal.KMutableProperty0Impl",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.RawTypeImpl$render$2",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmMethodSignature",
     "kotlin.reflect.jvm.internal.impl.descriptors.deserialization.AdditionalClassPartsProvider$None",
     "kotlin.reflect.jvm.internal.impl.types.DelegatedTypeSubstitution",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaVisibilities$1",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmMethodSignature$1",
     "kotlin.reflect.jvm.internal.KTypeImpl",
     "kotlin.reflect.jvm.internal.impl.protobuf.MessageLite",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaVisibilities$3",
     "kotlin.reflect.jvm.internal.impl.load.java.JavaVisibilities$2",
     "kotlin.reflect.jvm.internal.impl.types.typesApproximation.CapturedTypeApproximationKt$approximateCapturedTypesIfNecessary$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.NotFoundClasses$ClassRequest",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaScope",
     "kotlin.reflect.jvm.internal.ReflectionObjectRenderer$renderFunction$1$1",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeAlias$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.DeserializedDescriptorResolver$createKotlinPackagePartScope$2",
     "kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsSettings$Companion",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$intersectTypesWithoutIntersectionType$filteredEqualTypes$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedAnnotations",
     "kotlin.reflect.jvm.internal.calls.CallerImpl$FieldGetter$BoundInstance",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedLazyValue",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$StringTable$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.KotlinMetadataFinder",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$DeserializedClassMemberScope",
     "kotlin.reflect.jvm.internal.impl.types.LazyWrappedType",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind$1",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SimpleResult",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl",
     "kotlin.reflect.jvm.internal.components.ReflectJavaClassFinderKt",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer",
     "kotlin.reflect.jvm.internal.JvmPropertySignature$JavaField",
     "kotlin.reflect.jvm.internal.JvmFunctionSignature$FakeJavaAnnotationConstructor$asString$1",
     "kotlin.reflect.jvm.internal.KCallableImpl$_annotations$1",
     "kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope$Companion$ALL_NAME_FILTER$1",
     "kotlin.reflect.jvm.internal.components.ReflectAnnotationSource",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager",
     "kotlin.reflect.jvm.internal.impl.types.model.TypeSystemInferenceExtensionContext",
     "kotlin.reflect.jvm.internal.impl.protobuf.ByteString",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.header.ReadKotlinClassHeaderAnnotationVisitor$CollectStringArrayAnnotationVisitor",
     "kotlin.reflect.jvm.internal.impl.types.IntersectionTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$1",
     "kotlin.reflect.jvm.internal.impl.types.checker.NewCapturedTypeConstructor",
     "kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper$EMPTY",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererImpl",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.types.RawSubstitution$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.util.ReturnsCheck$ReturnsInt$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationConfiguration",
     "kotlin.reflect.jvm.internal.impl.name.ClassId",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.PackagePartProvider$Empty",
     "kotlin.reflect.jvm.internal.components.RuntimeSourceElementFactory",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Constructor$Builder",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.DeclarationDescriptorVisitorEmptyBodies",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.AnnotationDefaultValue",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationContext",
     "kotlin.reflect.jvm.internal.components.ReflectJavaClassFinder",
     "kotlin.reflect.jvm.internal.impl.descriptors.ClassKind",
     "kotlin.reflect.jvm.internal.impl.utils.FunctionsKt$DO_NOTHING$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.ClassConstructorDescriptorImpl",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JvmPackagePartSource",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.MutableClassDescriptor",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmMetadataVersion",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeDeserializer$typeConstructor$1",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.Flags$1",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$simpleName$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.deserialization.AdditionalClassPartsProvider",
     "kotlin.reflect.jvm.internal.KClassImpl$Data",
     "kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaPropertyDescriptor",
     "kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckingProcedure$EnrichedProjectionKind",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$1",
     "kotlin.reflect.jvm.ReflectLambdaKt$reflect$descriptor$1",
     "kotlin.reflect.jvm.internal.KPropertyImpl$Getter$caller$2",
     "kotlin.reflect.jvm.internal.impl.renderer.DescriptorRenderer$Companion",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement$ValueParameterEnhancementResult",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTableOrBuilder",
     "kotlin.reflect.jvm.internal.impl.load.java.structure.JavaAnnotation",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmFlags",
     "kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution$Companion$createByConstructorsMap$1",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedClassDescriptor$DeserializedClassMemberScope$generateFakeOverrides$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.SourceFile",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$1",
     "kotlin.reflect.jvm.internal.impl.protobuf.BoundedByteString$1",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.TypeParameterResolver$EMPTY",
     "kotlin.reflect.jvm.internal.impl.descriptors.deserialization.PlatformDependentDeclarationFilter$NoPlatformDependent",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$EnumEntryOrBuilder",
     "kotlin.reflect.jvm.internal.KProperty2Impl$_getter$1",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.BinaryClassAnnotationAndConstantLoaderImpl$loadAnnotation$1$visitArray$1",
     "kotlin.reflect.jvm.internal.impl.types.FlexibleTypeImpl",
     "kotlin.reflect.jvm.internal.impl.types.checker.UtilsKt",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedTypeParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.DeserializationComponents",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.JvmType$Primitive",
     "kotlin.reflect.jvm.internal.impl.types.checker.KotlinTypeChecker",
     "kotlin.reflect.jvm.internal.impl.descriptors.impl.LazyPackageViewDescriptorImpl$fragments$2",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolverUtilKt",
     "kotlin.reflect.jvm.internal.impl.load.kotlin.PackagePartProvider",
     "kotlin.reflect.jvm.internal.impl.descriptors.Named",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClass$constructors$1",
     "kotlin.reflect.jvm.internal.structure.ReflectJavaClass$constructors$2",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Function$Builder",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$nestedClasses$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor$UserDataKey",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifierWithMigrationStatus",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result",
     "kotlin.reflect.jvm.internal.impl.descriptors.ClassifierDescriptorWithTypeParameters",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.MemberDeserializer$getReceiverParameterAnnotations$1",
     "kotlin.reflect.jvm.internal.impl.util.MemberKindCheck",
     "kotlin.reflect.jvm.internal.impl.descriptors.PropertyGetterDescriptor",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf",
     "kotlin.reflect.jvm.internal.impl.descriptors.CapturedTypeParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy",
     "kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget$Companion",
     "kotlin.reflect.jvm.internal.calls.CallerImpl",
     "kotlin.reflect.jvm.internal.KDeclarationContainerImpl",
     "kotlin.reflect.jvm.internal.KFunctionImpl$defaultCaller$2",
     "kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor",
     "kotlin.reflect.jvm.internal.KCallableImpl",
     "kotlin.reflect.jvm.internal.calls.CallerKt",
     "kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancementBuilder",
     "kotlin.reflect.jvm.internal.impl.incremental.components.Position",
     "kotlin.reflect.jvm.internal.components.ReflectClassStructure",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ClassData",
     "kotlin.reflect.jvm.internal.impl.types.checker.NewKotlinTypeChecker",
     "kotlin.reflect.jvm.internal.impl.serialization.deserialization.ErrorReporter$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.PackageViewDescriptor$DefaultImpls",
     "kotlin.reflect.jvm.internal.KClassImpl$Data$sealedSubclasses$2",
     "kotlin.reflect.jvm.internal.impl.storage.StorageManager",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf",
     "kotlin.reflect.jvm.internal.impl.resolve.OverridingStrategy",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Builder",
     "kotlin.reflect.jvm.internal.impl.utils.SmartList$SingletonIterator",
     "kotlin.reflect.jvm.internal.impl.types.DescriptorSubstitutor",
     "kotlin.reflect.jvm.internal.impl.descriptors.TypeParameterDescriptor",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageFragment$WhenMappings",
     "kotlin.reflect.jvm.internal.impl.metadata.deserialization.ProtoBufUtilKt",
     "kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmMethodSignatureOrBuilder",
     "kotlin.reflect.jvm.internal.impl.descriptors.DescriptorUtilKt",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$EnumEntry$1",
     "kotlin.reflect.jvm.internal.impl.descriptors.PackageFragmentProvider",
     "kotlin.reflect.jvm.internal.calls.AnnotationConstructorCallerKt$createAnnotationInstance$toString$2$1$1",
     "kotlin.reflect.jvm.internal.impl.load.java.PropertiesConventionUtilKt",
     "kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType",
     "kotlin.reflect.jvm.internal.impl.util.ReturnsCheck$ReturnsBoolean",
     "kotlin.reflect.jvm.internal.calls.Caller$DefaultImpls",
     "kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$TypeSafeBarrierDescription",
     "kotlin.reflect.jvm.internal.impl.utils.WrappedValues$WrappedProcessCanceledException",
     "kotlin.reflect.jvm.internal.impl.load.java.lazy.descriptors.LazyJavaPackageFragment$binaryClasses$2",
     "kotlin.reflect.jvm.internal.impl.resolve.constants.AnnotationValue",
     "kotlin.reflect.jvm.internal.ReflectionObjectRenderer$WhenMappings"
    ],
    "usedTypes": [
     "kotlin.reflect.full.KClasses",
     "kotlin.reflect.jvm.ReflectJvmMapping"
    ],
    "usageRatio": 0.0011675423234092236,
    "children": []
   },
   {
    "id": "org.jetbrains.kotlin:kotlin-test:jar:1.3.50:test",
    "coordinates": "org.jetbrains.kotlin:kotlin-test:1.3.50",
    "groupId": "org.jetbrains.kotlin",
    "artifactId": "kotlin-test",
    "version": "1.3.50",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 30972,
    "type": "direct",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "kotlin.test.Asserter$assertNotNull$1",
     "kotlin.test.DefaultAsserter",
     "kotlin.test.Asserter$assertTrue$1",
     "kotlin.test.Asserter$assertSame$1",
     "kotlin.test.AssertionsKt",
     "kotlin.test.AsserterContributor",
     "kotlin.test.Asserter$DefaultImpls",
     "kotlin.test.AssertionsKt__AssertionsKt",
     "kotlin.test.CollectionAssertionsKt$elementAtShouldComply$1",
     "kotlin.test.Asserter$assertNotEquals$1",
     "kotlin.test.CollectionAssertionsKt$containsAll$1",
     "kotlin.test.Asserter$assertNull$1",
     "kotlin.test.CollectionAssertionsKt",
     "kotlin.test.Asserter$assertNotSame$1",
     "kotlin.test.CollectionAssertionSession",
     "kotlin.test.UtilsKt",
     "kotlin.test.DefaultAsserterKt",
     "kotlin.test.AssertionsKt__AssertionsImplKt",
     "kotlin.test.Asserter$assertEquals$1",
     "kotlin.test.Asserter",
     "kotlin.test.AsserterLookupKt"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "org.jetbrains.kotlin:kotlin-test-common:jar:1.3.50:test",
      "coordinates": "org.jetbrains.kotlin:kotlin-test-common:1.3.50",
      "groupId": "org.jetbrains.kotlin",
      "artifactId": "kotlin-test-common",
      "version": "1.3.50",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 4618,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.jetbrains.kotlin:kotlin-test:jar:1.3.50:test",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": NaN,
      "children": []
     }
    ]
   },
   {
    "id": "io.mockk:mockk:jar:1.9.3:test",
    "coordinates": "io.mockk:mockk:1.9.3",
    "groupId": "io.mockk",
    "artifactId": "mockk",
    "version": "1.9.3",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 494133,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "io.mockk.impl.stub.MockKStub$handleInvocation$1$1",
     "io.mockk.impl.recording.CommonCallRecorder",
     "io.mockk.impl.annotations.InjectionLookupType",
     "io.mockk.impl.JvmMockKGateway$Companion",
     "io.mockk.impl.recording.states.RecordingState$workaroundBoxedNumbers$1",
     "io.mockk.impl.JvmMockKGateway$verifier$1",
     "io.mockk.impl.instantiation.AbstractMockFactory$mockk$3",
     "io.mockk.impl.JvmMockKGateway$verifier$2",
     "io.mockk.impl.log.JvmLogging$adaptor$1",
     "io.mockk.impl.recording.SignatureMatcherDetector$detect$4$processCompositeMatchers$$inlined$map$lambda$1",
     "io.mockk.impl.recording.SignatureMatcherDetector$detect$1",
     "io.mockk.impl.recording.SignatureMatcherDetector$detect$2",
     "io.mockk.impl.instantiation.JvmAnyValueGenerator$anyValue$1",
     "io.mockk.impl.stub.MockKStub$defaultAnswer$$inlined$stdObjectFunctions$lambda$1",
     "io.mockk.impl.stub.MockKStub$defaultAnswer$$inlined$stdObjectFunctions$lambda$2",
     "io.mockk.impl.eval.RecordedBlockEvaluator",
     "io.mockk.impl.recording.JvmSignatureValueGenerator",
     "io.mockk.impl.stub.MockKStub$childMockK$$inlined$synchronized$lambda$1$1",
     "io.mockk.impl.instantiation.AbstractMockFactory$mockk$2",
     "io.mockk.impl.instantiation.AbstractMockFactory$mockk$1",
     "io.mockk.impl.instantiation.JvmMockFactoryHelper$findBackingField$1",
     "io.mockk.impl.recording.states.StubbingAwaitingAnswerState$answerOpportunity$ans$1$1",
     "io.mockk.impl.instantiation.JvmInstantiator$Companion",
     "io.mockk.impl.recording.JvmAutoHinter$autoHint$2",
     "io.mockk.impl.recording.PermanentMocker$permamentize$1",
     "io.mockk.impl.log.JvmLogging$slf4jOrJulLogging$1",
     "io.mockk.impl.log.JvmLogging$slf4jOrJulLogging$2",
     "io.mockk.impl.recording.states.AnsweringState",
     "io.mockk.impl.MultiNotifier",
     "io.mockk.impl.recording.states.StubbingAwaitingAnswerState$answerOpportunity$ans$1",
     "io.mockk.impl.InternalPlatform$weakRef$1",
     "io.mockk.impl.annotations.SpyK",
     "io.mockk.impl.instantiation.CommonInstanceFactoryRegistry",
     "io.mockk.impl.recording.states.StubbingAwaitingAnswerState",
     "io.mockk.impl.recording.SignatureMatcherDetector$detect$3",
     "io.mockk.impl.recording.SignatureMatcherDetector$detect$4",
     "io.mockk.impl.stub.StubGatewayAccess",
     "io.mockk.impl.verify.VerificationHelpers$allInvocations$$inlined$sortedBy$1",
     "io.mockk.impl.stub.CommonClearer",
     "io.mockk.impl.instantiation.CommonMockTypeChecker",
     "io.mockk.impl.annotations.MockK",
     "io.mockk.impl.recording.ChainedCallDetector$detect$5$varArgArgument$$inlined$repeat$lambda$1",
     "io.mockk.impl.instantiation.AbstractInstantiator",
     "io.mockk.impl.instantiation.JvmStaticMockFactory",
     "io.mockk.impl.instantiation.JvmStaticMockFactory$staticMockk$4",
     "io.mockk.impl.instantiation.JvmStaticMockFactory$staticMockk$3",
     "io.mockk.impl.instantiation.JvmStaticMockFactory$staticMockk$2",
     "io.mockk.impl.instantiation.JvmStaticMockFactory$staticMockk$1",
     "io.mockk.impl.recording.states.ExclusionState",
     "io.mockk.impl.recording.CommonCallRecorder$startStubbing$1",
     "io.mockk.impl.stub.CommonClearer$clear$1",
     "io.mockk.junit5.MockKExtension",
     "io.mockk.impl.log.SafeLogger$warn$1",
     "io.mockk.impl.eval.RecordedBlockEvaluator$record$block$3",
     "io.mockk.impl.eval.RecordedBlockEvaluator$record$block$2",
     "io.mockk.impl.eval.RecordedBlockEvaluator$record$block$1",
     "io.mockk.impl.stub.MockKStub$recordCall$record$1",
     "io.mockk.impl.InternalPlatform$copyFields$1",
     "io.mockk.impl.stub.AnswerAnsweringOpportunity",
     "io.mockk.impl.recording.states.VerifyingState$Companion",
     "io.mockk.impl.log.SafeLogger$warn$2",
     "io.mockk.impl.instantiation.AbstractMockFactory$spyk$1",
     "io.mockk.impl.instantiation.JvmConstructorMockFactory$ConstructorInvocationHandler",
     "io.mockk.MockKKt$withInstanceFactory$$inlined$useImpl$lambda$2",
     "io.mockk.impl.instantiation.AbstractMockFactory$spyk$2",
     "io.mockk.MockKKt$withInstanceFactory$$inlined$useImpl$lambda$1",
     "io.mockk.impl.instantiation.AbstractMockFactory$spyk$3",
     "io.mockk.impl.stub.MockKStub$excludeRecordedCalls$1$1",
     "io.mockk.impl.recording.states.ExclusionState$Companion",
     "io.mockk.impl.JvmMockKGateway$callRecorderTL$1",
     "io.mockk.impl.JvmMockKGateway",
     "io.mockk.impl.instantiation.JvmStaticMockFactory$staticMockk$4$$special$$inlined$let$lambda$1",
     "io.mockk.impl.stub.StubRepository$stubFor$1",
     "io.mockk.impl.eval.RecordedBlockEvaluator$record$block$2$1",
     "io.mockk.impl.recording.CommonCallRecorder$startVerification$1",
     "io.mockk.impl.instantiation.JvmMockFactoryHelper$findBackingField$1$$special$$inlined$let$lambda$1",
     "io.mockk.impl.instantiation.JvmMockFactoryHelper$findBackingField$1$$special$$inlined$let$lambda$2",
     "io.mockk.impl.recording.states.VerifyingState$recordingDone$1",
     "io.mockk.impl.JvmMockKGateway$excluder$2",
     "io.mockk.impl.JvmMockKGateway$excluder$1",
     "io.mockk.impl.log.JULLogger",
     "io.mockk.impl.stub.Stub",
     "io.mockk.impl.recording.CallRoundBuilder$addWasNotCalled$1",
     "io.mockk.impl.recording.ChainedCallDetector$detect$3$1",
     "io.mockk.impl.recording.VerificationCallSorter",
     "io.mockk.impl.JvmMockKGateway$safeToString$1",
     "io.mockk.impl.JvmMockKGateway$WhenMappings",
     "io.mockk.impl.verify.UnorderedCallVerifier$describeArgumentDifference$argStr$1",
     "io.mockk.impl.log.SafeLogger$trace$2",
     "io.mockk.impl.log.SafeLogger$trace$1",
     "io.mockk.impl.JvmMockKGateway$mockTypeChecker$1",
     "io.mockk.impl.instantiation.JvmMockFactoryHelper$mockHandler$1$invocation$$inlined$stdFunctions$lambda$1",
     "io.mockk.impl.recording.CommonVerificationAcknowledger",
     "io.mockk.impl.stub.MockKStub$InvocationAnswer",
     "io.mockk.impl.log.FilterLogger",
     "io.mockk.impl.recording.CommonCallRecorder$startExclusion$1",
     "io.mockk.impl.log.Logger$Companion",
     "io.mockk.MockKKt$registerInstanceFactory$$inlined$useImpl$lambda$1",
     "io.mockk.impl.recording.states.StubbingAwaitingAnswerState$answerOpportunity$1",
     "io.mockk.MockKKt$registerInstanceFactory$$inlined$useImpl$lambda$2",
     "io.mockk.impl.verify.UnorderedCallVerifier$matchCall$1",
     "io.mockk.impl.JvmMultiNotifier",
     "io.mockk.impl.recording.states.StubbingState",
     "io.mockk.impl.recording.states.RecordingState$call$retValue$1",
     "io.mockk.impl.eval.RecordedBlockEvaluator$record$blockWithRethrow$1",
     "io.mockk.impl.instantiation.AbstractMockFactory$temporaryMock$1",
     "io.mockk.impl.recording.ChainedCallDetector",
     "io.mockk.impl.instantiation.JvmMockFactoryHelper$mockHandler$1",
     "io.mockk.MockKKt",
     "io.mockk.impl.instantiation.AbstractInstantiator$instantiateViaInstanceFactoryRegistry$1",
     "io.mockk.impl.recording.states.VerifyingState$checkWasNotCalled$2",
     "io.mockk.impl.stub.MockKStub$handleInvocation$1",
     "io.mockk.impl.recording.states.VerifyingState$checkWasNotCalled$1",
     "io.mockk.impl.log.LogLevel",
     "io.mockk.impl.recording.PermanentMocker$mock$callTree$1",
     "io.mockk.impl.verify.VerificationHelpers$stackTrace$1",
     "io.mockk.impl.annotations.MockInjector",
     "io.mockk.impl.verify.VerificationHelpers$stackTrace$2",
     "io.mockk.impl.verify.VerificationHelpers$stackTrace$3",
     "io.mockk.impl.verify.VerificationHelpers$stackTrace$4",
     "io.mockk.impl.verify.VerificationHelpers$stackTrace$5",
     "io.mockk.impl.recording.CallRound",
     "io.mockk.impl.log.SafeLogger",
     "io.mockk.impl.JvmMockKGateway$Companion$defaultImplementationBuilder$1",
     "io.mockk.impl.verify.VerificationHelpers",
     "io.mockk.impl.recording.CommonCallRecorder$Companion",
     "io.mockk.impl.recording.SignatureMatcherDetector$detect$3$2",
     "io.mockk.impl.eval.RecordedBlockEvaluator$enhanceWithNPERethrow$1",
     "io.mockk.impl.instantiation.AbstractMockFactory$Companion",
     "io.mockk.impl.recording.JvmAutoHinter",
     "io.mockk.impl.platform.JvmWeakConcurrentMap$StrongKey",
     "io.mockk.impl.recording.CallRoundBuilder$addSignedCall$signedCall$1",
     "io.mockk.impl.eval.EveryBlockEvaluator",
     "io.mockk.impl.instantiation.JvmObjectMockFactory$objectMockk$4$$special$$inlined$let$lambda$1",
     "io.mockk.impl.instantiation.AbstractInstantiator$Companion",
     "io.mockk.impl.annotations.MockInjector$constructorInjection$firstMatching$1",
     "io.mockk.impl.eval.VerifyBlockEvaluator",
     "io.mockk.impl.verify.VerificationHelpers$stackTrace$maxMethodLen$1",
     "io.mockk.impl.log.JvmLogging$adaptor$1$debug$1",
     "io.mockk.impl.instantiation.AnyValueGenerator",
     "io.mockk.impl.eval.ExcludeBlockEvaluator",
     "io.mockk.impl.verify.TimeoutVerifierKt",
     "io.mockk.impl.annotations.OverrideMockKs",
     "io.mockk.impl.stub.MockKStub",
     "io.mockk.impl.Ref",
     "io.mockk.impl.stub.MockKStub$handleInvocation$originalPlusToString$1",
     "io.mockk.impl.instantiation.JvmAnyValueGenerator",
     "io.mockk.impl.annotations.JvmMockInitializer",
     "io.mockk.impl.recording.SignatureMatcherDetector",
     "io.mockk.impl.recording.ChildHinter",
     "io.mockk.impl.WeakRef",
     "io.mockk.impl.recording.ChainedCallDetector$Companion",
     "io.mockk.impl.stub.ConstructorStub",
     "io.mockk.impl.log.SafeLogger$error$1",
     "io.mockk.impl.recording.ChainedCallDetector$detect$7",
     "io.mockk.impl.recording.AutoHinter",
     "io.mockk.impl.recording.states.SafeLoggingState",
     "io.mockk.impl.stub.MockKStub$childMockK$$inlined$synchronized$lambda$1",
     "io.mockk.impl.log.SafeLogger$error$2",
     "io.mockk.impl.recording.ChainedCallDetector$detect$4",
     "io.mockk.impl.recording.ChainedCallDetector$detect$3",
     "io.mockk.impl.recording.ChainedCallDetector$detect$6",
     "io.mockk.impl.recording.ChainedCallDetector$detect$5",
     "io.mockk.impl.instantiation.JvmConstructorMockFactory$ConstructorMock",
     "io.mockk.impl.recording.ChainedCallDetector$detect$2",
     "io.mockk.impl.recording.ChainedCallDetector$detect$1",
     "io.mockk.impl.recording.states.VerifyingState",
     "io.mockk.impl.platform.CommonIdentityHashMapOf",
     "io.mockk.impl.MultiNotifier$Session",
     "io.mockk.impl.platform.Disposable",
     "io.mockk.impl.verify.TimeoutVerifier",
     "io.mockk.impl.verify.SequenceCallVerifier",
     "io.mockk.impl.recording.CallRoundBuilder",
     "io.mockk.impl.instantiation.JvmConstructorMockFactory$ConstructorInvocationHandler$push$2",
     "io.mockk.impl.JvmMockKGateway$callRecorderTL$1$initialValue$1",
     "io.mockk.impl.recording.states.AnsweringState$call$3",
     "io.mockk.impl.recording.states.AnsweringState$call$1",
     "io.mockk.impl.recording.CallRecorderFactories",
     "io.mockk.impl.recording.states.AnsweringState$call$2",
     "io.mockk.impl.instantiation.JvmConstructorMockFactory$ConstructorMock$1",
     "io.mockk.impl.eval.RecordedBlockEvaluator$initializeCoroutines$1",
     "io.mockk.impl.recording.SignedCall",
     "io.mockk.impl.JvmMockKGateway$Companion$1",
     "io.mockk.impl.JvmMockKGateway$stubber$1",
     "io.mockk.impl.JvmMockKGateway$stubber$2",
     "io.mockk.impl.stub.StubRepository",
     "io.mockk.impl.stub.MockKStub$Companion",
     "io.mockk.impl.recording.states.RecordingState$matcher$signatureValue$1$1",
     "io.mockk.MockKKt$spyk$1",
     "io.mockk.impl.recording.PermanentMocker$mock$2",
     "io.mockk.impl.recording.PermanentMocker$mock$1",
     "io.mockk.MockKKt$spyk$3",
     "io.mockk.impl.instantiation.RefCounterMap",
     "io.mockk.impl.log.SafeLogger$info$2",
     "io.mockk.MockKKt$mockkClass$1",
     "io.mockk.impl.recording.CommonVerificationAcknowledger$acknowledgeVerified$nonVerifiedReport$1",
     "io.mockk.impl.verify.AllCallsCallVerifier",
     "io.mockk.impl.instantiation.JvmInstantiator$instantiate$2",
     "io.mockk.impl.instantiation.JvmInstantiator$instantiate$1",
     "io.mockk.impl.stub.SpyKStub",
     "io.mockk.impl.instantiation.JvmObjectMockFactory",
     "io.mockk.impl.instantiation.JvmObjectMockFactory$objectMockk$4",
     "io.mockk.impl.recording.SignatureValueGenerator",
     "io.mockk.impl.instantiation.JvmObjectMockFactory$objectMockk$1",
     "io.mockk.impl.platform.JvmWeakConcurrentMap",
     "io.mockk.impl.instantiation.JvmObjectMockFactory$objectMockk$2",
     "io.mockk.impl.instantiation.JvmObjectMockFactory$objectMockk$3",
     "io.mockk.impl.verify.AllCallsCallVerifier$verify$1",
     "io.mockk.impl.annotations.AdditionalInterface",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$8",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$7",
     "io.mockk.impl.log.Logger",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$6",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$5",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$4",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$3",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$2",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$1",
     "io.mockk.impl.recording.states.RecordingState$call$retType$1",
     "io.mockk.impl.recording.states.StubbingAwaitingAnswerState$assignFieldIfMockingProperty$2",
     "io.mockk.impl.platform.JvmWeakConcurrentMap$WeakKey",
     "io.mockk.impl.log.Slf4jLogger",
     "io.mockk.impl.instantiation.JvmMockFactory",
     "io.mockk.impl.recording.states.StubbingAwaitingAnswerState$assignFieldIfMockingProperty$1",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$9",
     "io.mockk.impl.InternalPlatform",
     "io.mockk.impl.instantiation.JvmObjectMockFactory$Companion",
     "io.mockk.impl.annotations.InjectMockKs",
     "io.mockk.impl.stub.MockKStub$disposeRoutine$1",
     "io.mockk.impl.verify.VerificationHelpers$stackTrace$maxThirdColumn$1",
     "io.mockk.impl.log.SafeLogger$info$1",
     "io.mockk.impl.recording.states.CallRecordingState",
     "io.mockk.impl.annotations.InjectionHelpers",
     "io.mockk.impl.instantiation.JvmConstructorMockFactory",
     "io.mockk.impl.log.SafeLogger$debug$2",
     "io.mockk.impl.log.SafeLogger$debug$1",
     "io.mockk.impl.log.Logger$Companion$loggerFactory$1",
     "io.mockk.impl.recording.ChainedCallDetector$detect$7$1",
     "io.mockk.impl.recording.ChainedCallDetector$detect$7$2",
     "io.mockk.impl.log.NoOpLogger",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$1$1",
     "io.mockk.impl.verify.OrderedCallVerifier",
     "io.mockk.impl.verify.VerificationHelpers$stackTrace$maxClassNameLen$1",
     "io.mockk.impl.verify.UnorderedCallVerifier$verify$callIdxMsg$1",
     "io.mockk.impl.recording.states.RecordingState",
     "io.mockk.impl.instantiation.JvmInstantiator",
     "io.mockk.impl.JvmMockKGateway$gatewayAccess$1",
     "io.mockk.MockK",
     "io.mockk.impl.recording.CallRecorderFactoriesKt",
     "io.mockk.impl.instantiation.JvmConstructorMockFactory$ConstructorMock$2$1",
     "io.mockk.impl.recording.SignedMatcher",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$10",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$11",
     "io.mockk.impl.verify.UnorderedCallVerifier",
     "io.mockk.impl.instantiation.JvmMockTypeChecker",
     "io.mockk.impl.JvmMockKGateway$callRecorderFactories$12",
     "io.mockk.MockKKt$mockk$1",
     "io.mockk.impl.verify.OrderedCallVerifier$verify$4$1",
     "io.mockk.impl.log.JvmLogging",
     "io.mockk.MockKKt$classMockk$1",
     "io.mockk.impl.InternalPlatform$captureStackTrace$1",
     "io.mockk.impl.recording.states.VerifyingState$recordingDone$outcome$1",
     "io.mockk.impl.annotations.JvmMockInitializer$Companion",
     "io.mockk.impl.JvmMultiNotifier$SessionImpl",
     "io.mockk.impl.recording.states.RecordingState$matcher$signatureValue$1",
     "io.mockk.impl.recording.PermanentMocker",
     "io.mockk.impl.recording.VerificationCallSorter$sort$2",
     "io.mockk.impl.recording.JvmAutoHinter$Companion",
     "io.mockk.impl.instantiation.JvmConstructorMockFactory$ConstructorInvocationHandler$invocation$1",
     "io.mockk.impl.verify.SequenceCallVerifier$verify$2",
     "io.mockk.impl.verify.OrderedCallVerifier$verify$4",
     "io.mockk.impl.instantiation.JvmConstructorMockFactory$ConstructorInvocationHandler$invocation$2",
     "io.mockk.impl.verify.SequenceCallVerifier$verify$3",
     "io.mockk.impl.verify.OrderedCallVerifier$verify$5",
     "io.mockk.impl.verify.SequenceCallVerifier$verify$1",
     "io.mockk.impl.annotations.MockInjector$findMatchingConstructor$sortCriteria$1",
     "io.mockk.impl.stub.MockKStub$handleInvocation$invocation$1",
     "io.mockk.impl.JvmMockKGateway$1",
     "io.mockk.impl.platform.CommonRef",
     "io.mockk.impl.annotations.MockInjector$findMatchingConstructor$sortCriteria$2",
     "io.mockk.impl.log.SafeToString",
     "io.mockk.MockKAnnotations",
     "io.mockk.impl.instantiation.JvmStaticMockFactory$Companion",
     "io.mockk.impl.verify.OrderedCallVerifier$verify$1",
     "io.mockk.impl.annotations.RelaxedMockK",
     "io.mockk.impl.verify.OrderedCallVerifier$verify$2",
     "io.mockk.impl.stub.MockType",
     "io.mockk.impl.log.JvmLogging$adaptor$1$warn$2",
     "io.mockk.impl.log.JvmLogging$adaptor$1$warn$1",
     "io.mockk.impl.eval.RecordedBlockEvaluator$NothingThrownNullPointerException",
     "io.mockk.impl.instantiation.AbstractMockFactory",
     "io.mockk.impl.instantiation.JvmMockFactoryHelper",
     "io.mockk.impl.log.JvmLogging$adaptor$1$trace$1",
     "io.mockk.impl.log.JvmLogging$adaptor$1$trace$2",
     "io.mockk.impl.instantiation.JvmMockFactory$newProxy$3",
     "io.mockk.impl.recording.WasNotCalled",
     "io.mockk.impl.verify.UnorderedCallVerifier$matchCall$result$2",
     "io.mockk.impl.verify.UnorderedCallVerifier$matchCall$result$3",
     "io.mockk.impl.verify.UnorderedCallVerifier$matchCall$result$4",
     "io.mockk.impl.instantiation.JvmMockFactory$newProxy$2",
     "io.mockk.impl.instantiation.JvmMockFactory$newProxy$1"
    ],
    "usedTypes": [
     "io.mockk.impl.JvmMockKGateway$Companion",
     "io.mockk.MockKKt",
     "io.mockk.MockK",
     "io.mockk.impl.JvmMockKGateway"
    ],
    "usageRatio": 0.013289036544850499,
    "children": [
     {
      "id": "io.mockk:mockk-common:jar:1.9.3:test",
      "coordinates": "io.mockk:mockk-common:1.9.3",
      "groupId": "io.mockk",
      "artifactId": "mockk-common",
      "version": "1.9.3",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 44052,
      "type": "transitive",
      "status": "bloated",
      "parent": "io.mockk:mockk:jar:1.9.3:test",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": NaN,
      "children": [
       {
        "id": "io.mockk:mockk-dsl:jar:1.9.3:test",
        "coordinates": "io.mockk:mockk-dsl:1.9.3",
        "groupId": "io.mockk",
        "artifactId": "mockk-dsl",
        "version": "1.9.3",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 39472,
        "type": "transitive",
        "status": "bloated",
        "parent": "io.mockk:mockk-common:jar:1.9.3:test",
        "allTypes": [],
        "usedTypes": [],
        "usageRatio": NaN,
        "children": []
       }
      ]
     },
     {
      "id": "io.mockk:mockk-dsl-jvm:jar:1.9.3:test",
      "coordinates": "io.mockk:mockk-dsl-jvm:1.9.3",
      "groupId": "io.mockk",
      "artifactId": "mockk-dsl-jvm",
      "version": "1.9.3",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 407466,
      "type": "transitive",
      "status": "used",
      "parent": "io.mockk:mockk:jar:1.9.3:test",
      "allTypes": [
       "io.mockk.MockKMatcherScope$invoke$10",
       "io.mockk.MockKMatcherScope$invoke$12",
       "io.mockk.MockKMatcherScope$invoke$11",
       "io.mockk.MockKMatcherScope$invoke$18",
       "io.mockk.MockKMatcherScope$invoke$17",
       "io.mockk.MockKMatcherScope$invoke$19",
       "io.mockk.MockKMatcherScope$invoke$14",
       "io.mockk.MockKMatcherScope$invoke$13",
       "io.mockk.MockKSettings",
       "io.mockk.MockKMatcherScope$coInvoke$22$1",
       "io.mockk.BackingFieldValue",
       "io.mockk.MockKMatcherScope$invoke$16",
       "io.mockk.MockKMatcherScope$invoke$15",
       "io.mockk.MockKGateway$ClearOptions",
       "io.mockk.ConstantAnswer",
       "io.mockk.ManyAnswerable",
       "io.mockk.MockKMatcherScope$coInvoke$2$1",
       "io.mockk.APIKt$coInvoke$21",
       "io.mockk.APIKt$coInvoke$20",
       "io.mockk.APIKt$coInvoke$23",
       "io.mockk.APIKt$coInvoke$22",
       "io.mockk.ComparingMatcher",
       "io.mockk.MockKMatcherScope$invoke$21",
       "io.mockk.MockKMatcherScope$invoke$20",
       "io.mockk.MockKMatcherScope$invoke$23",
       "io.mockk.MockKMatcherScope$invoke$22",
       "io.mockk.APIKt$coInvoke$18",
       "io.mockk.APIKt$coInvoke$17",
       "io.mockk.MockKMatcherScope$coInvoke$19$1",
       "io.mockk.APIKt$coInvoke$19",
       "io.mockk.MockKMatcherScope$invoke$24",
       "io.mockk.MockKMatcherScope$coInvoke$11$1",
       "io.mockk.ArrayMatcher",
       "io.mockk.MockKMatcherScope$get$1",
       "io.mockk.APIKt$coInvoke$14",
       "io.mockk.APIKt$coInvoke$13",
       "io.mockk.APIKt$coInvoke$16",
       "io.mockk.APIKt$coInvoke$15",
       "io.mockk.MockKMatcherScope$DynamicSetProperty",
       "io.mockk.APIKt$coInvoke$10",
       "io.mockk.APIKt$coInvoke$12",
       "io.mockk.Answer",
       "io.mockk.MockKMatcherScope$coMatchNullable$1",
       "io.mockk.APIKt$coInvoke$11",
       "io.mockk.ConstantMatcher",
       "io.mockk.MockKGateway$ConstructorMockFactory",
       "io.mockk.MockKMatcherScope$MockKVarargScope",
       "io.mockk.InternalCounter",
       "io.mockk.MethodDescription",
       "io.mockk.MockKMatcherScope$coInvoke$21$1",
       "io.mockk.MockKMatcherScope$coMatchNullable$1$1",
       "io.mockk.CapturingSlotMatcher",
       "io.mockk.MockKMatcherScope$coInvoke$9$1",
       "io.mockk.MockKStubScope$answers$1",
       "io.mockk.MockKAnswerScope$backingFieldValue$2",
       "io.mockk.Invocation",
       "io.mockk.ManyAnswerable$DefaultImpls",
       "io.mockk.MockKMatcherScope$coInvoke$1$1",
       "io.mockk.EqMatcher",
       "io.mockk.MockKAdditionalAnswerScope$andThen$1",
       "io.mockk.MockKGateway$MockTypeChecker",
       "io.mockk.MockKMatcherScope$coInvoke$18$1",
       "io.mockk.MockKAssertScope",
       "io.mockk.MockKMatcherScope$coInvoke$10$1",
       "io.mockk.APIKt$coInvoke$3",
       "io.mockk.APIKt$coInvoke$2",
       "io.mockk.APIKt$coInvoke$5",
       "io.mockk.MockKDsl",
       "io.mockk.APIKt$coInvoke$4",
       "io.mockk.APIKt$coInvoke$7",
       "io.mockk.APIKt$coInvoke$6",
       "io.mockk.MockKVerificationScope$coRun$1",
       "io.mockk.APIKt$coInvoke$9",
       "io.mockk.APIKt$coInvoke$8",
       "io.mockk.MockKGateway$VerificationResult",
       "io.mockk.CaptureNullableMatcher",
       "io.mockk.ManyAnswersAnswer",
       "io.mockk.APIKt$coInvoke$1",
       "io.mockk.MatchersKt",
       "io.mockk.JvmCoroutineCall$Companion",
       "io.mockk.StackElement",
       "io.mockk.MockKGateway$VerificationResult$OK",
       "io.mockk.MockKDsl$internalRegisterInstanceFactory$factoryObj$1",
       "io.mockk.NullCheckMatcher",
       "io.mockk.MockKMatcherScope$coInvoke$8$1",
       "io.mockk.MockKGateway$VerificationResult$Failure",
       "io.mockk.MockKVerificationScope$coAssert$1",
       "io.mockk.MockKMatcherScope$coInvoke$13$1",
       "io.mockk.MockKDsl$internalRegisterInstanceFactory$1",
       "io.mockk.MockKGateway$CallRecorder$DefaultImpls",
       "io.mockk.Call",
       "io.mockk.MockKGateway",
       "io.mockk.InternalPlatformDsl",
       "io.mockk.MockKGateway$ObjectMockFactory",
       "io.mockk.MockKGateway$VerificationAcknowledger",
       "io.mockk.InternalPlatformDsl$counter$1",
       "io.mockk.MockKStubScope",
       "io.mockk.MockKMatcherScope$DynamicCallLong",
       "io.mockk.MockKMatcherScope$coInvoke$23",
       "io.mockk.VarargMatcher",
       "io.mockk.MockKMatcherScope$coInvoke$22",
       "io.mockk.MockKMatcherScope$coInvoke$23$1",
       "io.mockk.MockKMatcherScope$coInvoke$21",
       "io.mockk.MockKMatcherScope$coInvoke$20",
       "io.mockk.RecordedCall",
       "io.mockk.MockKStubScope$returnsArgument$1",
       "io.mockk.InternalPlatformDsl$runCoroutine$1",
       "io.mockk.CaptureMatcher",
       "io.mockk.MockKMatcherScope$coInvoke$7$1",
       "io.mockk.MockKStaticScope",
       "io.mockk.MockKStubScope$coAnswers$1",
       "io.mockk.MockKVerificationScope$coAssertNullable$1$1",
       "io.mockk.MockKException",
       "io.mockk.MockKMatcherScope$DynamicCall",
       "io.mockk.MockKMatcherScope$coInvoke$12",
       "io.mockk.MockKDsl$internalWithInstanceFactory$$inlined$internalRegisterInstanceFactory$2",
       "io.mockk.MockKMatcherScope$coInvoke$12$1",
       "io.mockk.MockKMatcherScope$coInvoke$11",
       "io.mockk.MockKDsl$internalWithInstanceFactory$$inlined$internalRegisterInstanceFactory$1",
       "io.mockk.MockKMatcherScope$coInvoke$10",
       "io.mockk.MockKMatcherScope$coInvoke$16",
       "io.mockk.MockKMatcherScope$coInvoke$15",
       "io.mockk.MockKMatcherScope$coInvoke$14",
       "io.mockk.MockKMatcherScope$coInvoke$13",
       "io.mockk.MockKMatcherScope$varargAny$1",
       "io.mockk.FunctionMatcher",
       "io.mockk.Deregisterable",
       "io.mockk.MockKCancellationRegistry",
       "io.mockk.MockKGateway$MockFactory",
       "io.mockk.MockKMatcherScope$coInvoke$19",
       "io.mockk.MockKMatcherScope$coInvoke$18",
       "io.mockk.MockKMatcherScope$coInvoke$17",
       "io.mockk.AllAnyMatcher",
       "io.mockk.MockKUnmockKCompositeScope$doMock$1",
       "io.mockk.MockKConstructorScope",
       "io.mockk.MockKGateway$AnswerOpportunity",
       "io.mockk.CoroutineCall",
       "io.mockk.MockKGateway$Companion",
       "io.mockk.MockKVerificationScope$coAssert$$inlined$assert$1",
       "io.mockk.MockKMatcherScope",
       "io.mockk.MockKVerificationScope$coAssert$$inlined$assert$2",
       "io.mockk.Called",
       "io.mockk.MockKGateway$VerificationParameters",
       "io.mockk.OfTypeMatcher",
       "io.mockk.MockKMatcherScope$coInvoke$6$1",
       "io.mockk.MockKVerificationScope$assert$1",
       "io.mockk.MockKGateway$InstanceFactoryRegistry",
       "io.mockk.ThrowingAnswer",
       "io.mockk.MockKVerificationScope$coRunNullable$1",
       "io.mockk.MockKMatcherScope$coInvoke$15$1",
       "io.mockk.CoFunctionAnswer$answer$2",
       "io.mockk.CoFunctionAnswer$answer$1",
       "io.mockk.MockKGateway$Clearer",
       "io.mockk.MockKObjectScope$doMock$1",
       "io.mockk.MockKMatcherScope$invoke$1",
       "io.mockk.MockKAnswerScope",
       "io.mockk.MockKVerificationScope$coAssert$1$1",
       "io.mockk.MockKMatcherScope$invoke$4",
       "io.mockk.MockKMatcherScope$invoke$5",
       "io.mockk.MockKCancellationRegistry$stack$1",
       "io.mockk.MockKMatcherScope$invoke$2",
       "io.mockk.MockKGateway$Excluder",
       "io.mockk.AndOrMatcher",
       "io.mockk.MockKMatcherScope$invoke$3",
       "io.mockk.MockKGateway$CallVerifier",
       "io.mockk.MockKMatcherScope$coMatch$1",
       "io.mockk.Answer$DefaultImpls",
       "io.mockk.MockKVerificationScope",
       "io.mockk.Matcher",
       "io.mockk.MockKVerificationScope$run$1",
       "io.mockk.MockKStaticScope$doMock$1",
       "io.mockk.MockKAdditionalAnswerScope$coAndThen$1",
       "io.mockk.MockKMatcherScope$coInvoke$5$1",
       "io.mockk.MockKGateway$ExclusionParameters",
       "io.mockk.MockKCancellationRegistry$RegistryPerType",
       "io.mockk.MockKUnmockKCompositeScope",
       "io.mockk.MockKDsl$internalMockk$1",
       "io.mockk.MockKMatcherScope$coMatch$1$1",
       "io.mockk.MockKGateway$StaticMockFactory",
       "io.mockk.MockKMatcherScope$coInvoke$14$1",
       "io.mockk.MockKCancellationRegistry$Type",
       "io.mockk.MockKGateway$Stubber",
       "io.mockk.CapturingMatcher",
       "io.mockk.MockKUnmockKScope",
       "io.mockk.MockKMatcherScope$varargAll$1",
       "io.mockk.Matcher$DefaultImpls",
       "io.mockk.NotMatcher",
       "io.mockk.MockKGateway$Verifier",
       "io.mockk.TypedMatcher",
       "io.mockk.InternalPlatformDsl$threadLocal$TL",
       "io.mockk.CoFunctionAnswer$Companion",
       "io.mockk.MockKObjectScope",
       "io.mockk.MockKVerificationScope$coAssertNullable$1",
       "io.mockk.MockKMatcherScope$coInvoke$20$1",
       "io.mockk.MockKMatcherScope$coInvoke$6",
       "io.mockk.MockKMatcherScope$coInvoke$7",
       "io.mockk.MockKGateway$MockInitializer",
       "io.mockk.MockKMatcherScope$coInvoke$8",
       "io.mockk.MockKMatcherScope$coInvoke$9",
       "io.mockk.CapturingSlot",
       "io.mockk.MockKMatcherScope$coInvoke$2",
       "io.mockk.MockKMatcherScope$coInvoke$3",
       "io.mockk.MockKGateway$CallRecorder",
       "io.mockk.MockKMatcherScope$coInvoke$4",
       "io.mockk.InvocationMatcher",
       "io.mockk.MockKMatcherScope$coInvoke$5",
       "io.mockk.MockKVerificationScope$runNullable$1",
       "io.mockk.JvmCoroutineCall",
       "io.mockk.MockKMatcherScope$coInvoke$4$1",
       "io.mockk.MockKMatcherScope$coInvoke$1",
       "io.mockk.Ordering",
       "io.mockk.InvokeMatcher",
       "io.mockk.MockKMatcherScope$coInvoke$17$1",
       "io.mockk.MockKAdditionalAnswerScope",
       "io.mockk.MockKVerificationScope$coRun$1$1",
       "io.mockk.MockKMatcherScope$anyVararg$1",
       "io.mockk.MockKGateway$InstanceFactory",
       "io.mockk.MockKDsl$internalSpyk$1",
       "io.mockk.MockKDsl$internalSpyk$2",
       "io.mockk.MockKMatcherScope$match$1",
       "io.mockk.Runs",
       "io.mockk.MockKMatcherScope$invoke$8",
       "io.mockk.MockKMatcherScope$invoke$9",
       "io.mockk.MockKMatcherScope$invoke$6",
       "io.mockk.MockKMatcherScope$invoke$7",
       "io.mockk.MockKVerificationScope$coRunNullable$1$1",
       "io.mockk.FunctionAnswer",
       "io.mockk.InternalRef",
       "io.mockk.MockKMatcherScope$coInvoke$3$1",
       "io.mockk.CompositeMatcher",
       "io.mockk.Invocation$toString$1",
       "io.mockk.APIKt",
       "io.mockk.MockKMatcherScope$coInvoke$16$1",
       "io.mockk.MockKCancellationRegistry$RegistryPerType$mapTl$1",
       "io.mockk.TypedMatcher$DefaultImpls",
       "io.mockk.AssertMatcher",
       "io.mockk.EquivalentMatcher",
       "io.mockk.CoFunctionAnswer"
      ],
      "usedTypes": [
       "io.mockk.ConstantMatcher",
       "io.mockk.Matcher",
       "io.mockk.MockKDsl",
       "io.mockk.MockKGateway",
       "io.mockk.MockKGateway$CallRecorder",
       "io.mockk.MockKGateway$MockFactory",
       "io.mockk.MockKGateway$Companion",
       "io.mockk.MockKMatcherScope",
       "io.mockk.MockKStubScope",
       "io.mockk.MockKVerificationScope"
      ],
      "usageRatio": 0.04201680672268908,
      "children": []
     },
     {
      "id": "io.mockk:mockk-agent-jvm:jar:1.9.3:test",
      "coordinates": "io.mockk:mockk-agent-jvm:1.9.3",
      "groupId": "io.mockk",
      "artifactId": "mockk-agent-jvm",
      "version": "1.9.3",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 80919,
      "type": "transitive",
      "status": "bloated",
      "parent": "io.mockk:mockk:jar:1.9.3:test",
      "allTypes": [
       "io.mockk.proxy.jvm.transformation.SubclassInstrumentation",
       "io.mockk.proxy.jvm.advice.SelfCallEliminator",
       "io.mockk.proxy.jvm.ConstructorProxyMaker$constructorProxy$1",
       "io.mockk.proxy.jvm.transformation.SubclassInstrumentation$subclass$1",
       "io.mockk.proxy.jvm.transformation.FixParameterNamesVisitor",
       "io.mockk.proxy.jvm.advice.jvm.JvmMockKProxyAdvice",
       "io.mockk.proxy.jvm.advice.jvm.JvmMockKStaticProxyAdvice",
       "io.mockk.proxy.jvm.advice.MethodCall",
       "io.mockk.proxy.jvm.transformation.SubclassInstrumentation$AdviceBuilder",
       "io.mockk.proxy.jvm.ClassLoadingStrategyChooser",
       "io.mockk.proxy.jvm.ObjenesisInstantiator$Companion",
       "io.mockk.proxy.jvm.ProxyMaker",
       "io.mockk.proxy.jvm.advice.jvm.JvmMockKConstructorProxyAdvice",
       "io.mockk.proxy.jvm.transformation.FixParameterNamesVisitor$FixParameterNamesClassVisitor",
       "io.mockk.proxy.jvm.advice.ProxyAdviceId",
       "io.mockk.proxy.jvm.transformation.InliningClassTransformer$AdviceBuilder",
       "io.mockk.proxy.jvm.transformation.CacheKey",
       "io.mockk.proxy.jvm.ProxyMaker$Companion",
       "io.mockk.proxy.jvm.MockKSubclassNamingStrategy",
       "io.mockk.proxy.jvm.dispatcher.BootJarLoader",
       "io.mockk.proxy.jvm.transformation.InliningClassTransformer$Companion",
       "io.mockk.proxy.jvm.transformation.InliningClassTransformer$sam$net_bytebuddy_matcher_ElementMatcher$0",
       "io.mockk.proxy.jvm.advice.SelfCallEliminatorCallable",
       "io.mockk.proxy.jvm.transformation.InliningClassTransformer",
       "io.mockk.proxy.jvm.ObjenesisInstantiator",
       "io.mockk.proxy.jvm.StaticProxyMaker$staticProxy$1",
       "io.mockk.proxy.jvm.transformation.SubclassInstrumentation$Companion",
       "io.mockk.proxy.jvm.transformation.FixParameterNamesVisitor$FixParameterNamesClassVisitor$visitMethod$1",
       "io.mockk.proxy.jvm.ProxyMaker$inline$1",
       "io.mockk.proxy.jvm.JvmMockKAgentFactory",
       "io.mockk.proxy.jvm.transformation.InliningClassTransformer$staticAdvice$1",
       "io.mockk.proxy.jvm.JvmMockKAgentFactory$init$Initializer",
       "io.mockk.proxy.jvm.advice.jvm.JvmMockKProxyInterceptor",
       "io.mockk.proxy.jvm.advice.BaseAdvice$Companion",
       "io.mockk.proxy.jvm.ProxyMaker$proxy$1",
       "io.mockk.proxy.jvm.advice.jvm.JvmMockKHashMapStaticProxyAdvice",
       "io.mockk.proxy.jvm.StaticProxyMaker",
       "io.mockk.proxy.jvm.transformation.JvmInlineInstrumentation",
       "io.mockk.proxy.jvm.ConstructorProxyMaker",
       "io.mockk.proxy.jvm.advice.BaseAdvice",
       "io.mockk.proxy.jvm.dispatcher.BootJarLoader$Companion",
       "io.mockk.proxy.jvm.advice.Interceptor",
       "io.mockk.proxy.jvm.ObjenesisInstantiator$instantiateViaProxy$proxyCls$1"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "io.mockk:mockk-agent-api:jar:1.9.3:test",
        "coordinates": "io.mockk:mockk-agent-api:1.9.3",
        "groupId": "io.mockk",
        "artifactId": "mockk-agent-api",
        "version": "1.9.3",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 11342,
        "type": "transitive",
        "status": "bloated",
        "parent": "io.mockk:mockk-agent-jvm:jar:1.9.3:test",
        "allTypes": [
         "io.mockk.proxy.MockKAgentLogFactory",
         "io.mockk.proxy.Cancelable",
         "io.mockk.proxy.MockKAgentLogger",
         "io.mockk.proxy.MockKInstantiatior",
         "io.mockk.proxy.MockKAgentLogger$Companion$NO_OP$1",
         "io.mockk.proxy.MockKAgentLogger$Companion",
         "io.mockk.proxy.MockKAgentLogFactory$Companion$NO_OP$1",
         "io.mockk.proxy.MockKProxyMaker",
         "io.mockk.proxy.MockKInvocationHandler",
         "io.mockk.proxy.MockKAgentLogFactory$Companion",
         "io.mockk.proxy.MockKConstructorProxyMaker",
         "io.mockk.proxy.MockKStaticProxyMaker",
         "io.mockk.proxy.MockKAgentException",
         "io.mockk.proxy.MockKAgentFactory"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "io.mockk:mockk-agent-common:jar:1.9.3:test",
        "coordinates": "io.mockk:mockk-agent-common:1.9.3",
        "groupId": "io.mockk",
        "artifactId": "mockk-agent-common",
        "version": "1.9.3",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 39087,
        "type": "transitive",
        "status": "bloated",
        "parent": "io.mockk:mockk-agent-jvm:jar:1.9.3:test",
        "allTypes": [
         "io.mockk.proxy.common.transformation.TransformationRequest",
         "io.mockk.proxy.common.transformation.ClassTransformationSpec",
         "io.mockk.proxy.common.CancelableResult",
         "io.mockk.proxy.common.transformation.InlineInstrumentation",
         "io.mockk.proxy.common.ProxyMaker",
         "io.mockk.proxy.common.ProxyMaker$inline$1",
         "io.mockk.proxy.common.transformation.ClassTransformationSpecMap$WhenMappings",
         "io.mockk.proxy.common.transformation.SubclassInstrumentation",
         "io.mockk.proxy.common.transformation.TransformationType",
         "io.mockk.proxy.common.ProxyInvocationHandler$CallProxySuper",
         "io.mockk.proxy.common.transformation.RetransformInlineInstrumnetation$execute$3",
         "io.mockk.proxy.common.transformation.RetransformInlineInstrumnetation$execute$2",
         "io.mockk.proxy.common.CancelableResult$alsoOnCancel$1",
         "io.mockk.proxy.common.transformation.RetransformInlineInstrumnetation$execute$1$1",
         "io.mockk.proxy.common.transformation.RetransformInlineInstrumnetation$execute$1",
         "io.mockk.proxy.common.CancelableResult$1",
         "io.mockk.proxy.common.transformation.RetransformInlineInstrumnetation",
         "io.mockk.proxy.common.transformation.ClassTransformationSpecMap",
         "io.mockk.proxy.common.transformation.RetransformInlineInstrumnetation$doCancel$1",
         "io.mockk.proxy.common.ProxyMaker$proxy$1",
         "io.mockk.proxy.common.ProxyInvocationHandler",
         "io.mockk.proxy.common.ProxyMaker$Companion",
         "io.mockk.proxy.common.ProxyInvocationHandler$Companion",
         "io.mockk.proxy.common.transformation.ClassTransformationSpec$Categories"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     }
    ]
   },
   {
    "id": "org.scala-lang:scala-library:jar:2.11.7:compile",
    "coordinates": "org.scala-lang:scala-library:2.11.7",
    "groupId": "org.scala-lang",
    "artifactId": "scala-library",
    "version": "2.11.7",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 5745606,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "scala.collection.parallel.ParSeq$class",
     "scala.Function2$mcDJI$sp$class",
     "scala.Product2$mcDJ$sp",
     "scala.reflect.macros.internal.macroImpl",
     "scala.sys.process.ProcessImpl$SequentialProcess$$anonfun$runAndExitValue$5$$anonfun$apply$2",
     "scala.collection.parallel.mutable.ParTrieMapSplitter",
     "scala.sys.process.ProcessImpl$SequentialProcess$$anonfun$runAndExitValue$5$$anonfun$apply$3",
     "scala.collection.IterableViewLike$$anonfun$grouped$1$$anonfun$apply$1",
     "scala.Function2$mcVDJ$sp$class",
     "scala.util.hashing.MurmurHash3$ArrayHashing$mcC$sp",
     "scala.Function1$mcFI$sp",
     "scala.Function6$$anonfun$curried$1",
     "scala.collection.parallel.mutable.ParHashSetCombiner$",
     "scala.math.Numeric$FloatAsIfIntegral$",
     "scala.collection.immutable.IntMap$$anonfun$toList$1",
     "scala.beans.BeanDescription",
     "scala.collection.SeqLike$PermutationsItr",
     "scala.collection.parallel.ParIterableLike$Take$$anonfun$12",
     "scala.sys.CreatorImpl",
     "scala.math.Numeric$BigDecimalIsConflicted$class",
     "scala.collection.mutable.SortedSet$class",
     "scala.Function2$mcZDI$sp",
     "scala.runtime.Tuple3Zipped",
     "scala.collection.IterableLike$$anonfun$sliding$1",
     "scala.collection.immutable.MapLike$$anonfun$$plus$plus$1",
     "scala.runtime.ByteRef",
     "scala.collection.SeqViewLike$Sliced$class",
     "scala.collection.parallel.IterableSplitter$Zipped$$anonfun$split$3",
     "scala.Tuple2$mcIJ$sp",
     "scala.Tuple2$mcZC$sp",
     "scala.collection.immutable.StringLike$$anonfun$linesIterator$1",
     "scala.collection.parallel.FutureThreadPoolTasks",
     "scala.collection.generic.SortedMapFactory",
     "scala.collection.TraversableLike$$anonfun$iterateUntilEmpty$2",
     "scala.collection.SortedMap$Default$$anonfun$$minus$2",
     "scala.collection.TraversableLike$$anonfun$iterateUntilEmpty$1",
     "scala.collection.SortedMap$Default$$anonfun$$minus$1",
     "scala.collection.parallel.mutable.ParMapLike",
     "scala.collection.TraversableViewLike$$anonfun$inits$1$$anonfun$apply$3",
     "scala.concurrent.duration.package",
     "scala.collection.GenSet$",
     "scala.collection.generic.GenSetFactory",
     "scala.collection.parallel.ParMap",
     "scala.sys.process.BasicIO$Streamed$$anonfun$apply$1",
     "scala.collection.generic.Shrinkable$class",
     "scala.collection.mutable.SynchronizedPriorityQueue",
     "scala.math.Integral$ExtraImplicits",
     "scala.sys.process.BasicIO$Streamed$$anonfun$apply$2",
     "scala.sys.process.BasicIO$Streamed$$anonfun$apply$3",
     "scala.collection.parallel.mutable.ExposedArraySeq",
     "scala.reflect.ClassManifestFactory$$anon$2",
     "scala.reflect.ClassManifestFactory$$anon$1",
     "scala.Function0$mcB$sp$class",
     "scala.DelayedInit",
     "scala.collection.parallel.ExecutionContextTasks$class",
     "scala.collection.parallel.ParIterableLike$Partition",
     "scala.collection.GenSeq$",
     "scala.Function21$$anonfun$tupled$1",
     "scala.collection.generic.SliceInterval",
     "scala.collection.parallel.ForkJoinTaskSupport",
     "scala.concurrent.ThreadPoolRunner",
     "scala.collection.parallel.ParallelCollectionImplicits$",
     "scala.collection.convert.Wrappers$JListWrapper$",
     "scala.collection.parallel.immutable.HashMapCombiner$CreateGroupedTrie",
     "scala.collection.generic.GenericParMapTemplate",
     "scala.concurrent.duration.package$span$",
     "scala.Function1$mcIJ$sp$class",
     "scala.concurrent.AwaitPermission",
     "scala.Enumeration$ValueOrdering$",
     "scala.Function0$mcV$sp$class",
     "scala.io.StdIn$",
     "scala.collection.parallel.ParSeqLike$IndexWhere$$anonfun$split$6",
     "scala.collection.parallel.immutable.ParMap$WithDefault",
     "scala.collection.parallel.ParSeqLike$IndexWhere$$anonfun$split$4",
     "scala.collection.parallel.ParSeqLike$IndexWhere$$anonfun$split$5",
     "scala.collection.BitSetLike$class",
     "scala.runtime.AbstractFunction0",
     "scala.runtime.AbstractFunction1",
     "scala.runtime.AbstractPartialFunction$mcIJ$sp",
     "scala.runtime.AbstractFunction2",
     "scala.Function8$$anonfun$tupled$1",
     "scala.runtime.AbstractFunction3",
     "scala.runtime.AbstractFunction4",
     "scala.collection.mutable.Iterable",
     "scala.runtime.AbstractFunction5",
     "scala.runtime.AbstractFunction6",
     "scala.runtime.AbstractFunction7",
     "scala.collection.SeqViewLike$$anonfun$permutations$1$$anonfun$apply$2",
     "scala.Boolean",
     "scala.collection.IterableProxyLike",
     "scala.collection.immutable.LongMap$Bin$",
     "scala.collection.convert.Wrappers$JDictionaryWrapper$$anonfun$iterator$1",
     "scala.Function1$mcJF$sp",
     "scala.math.Numeric",
     "scala.util.control.NoStackTrace",
     "scala.collection.generic.GenericParMapTemplate$class",
     "scala.concurrent.Future$$anonfun$fallbackTo$1$$anonfun$apply$9",
     "scala.util.control.Exception$Catch$$anonfun$withTry$1",
     "scala.Array$$anonfun$tabulate$1$$anonfun$apply$11",
     "scala.sys.process.ProcessBuilderImpl$PipedBuilder",
     "scala.runtime.Tuple2Zipped$$anonfun$exists$extension$1",
     "scala.collection.TraversableViewLike$Filtered$$anonfun$foreach$4",
     "scala.collection.parallel.SeqSplitter$$anon$1",
     "scala.languageFeature$existentials",
     "scala.collection.mutable.LongMap$",
     "scala.collection.parallel.mutable.ParHashTable$EntryIterator$$anonfun$debugInformation$1",
     "scala.reflect.ClassManifestFactory",
     "scala.Byte$",
     "scala.Tuple2$mcCI$sp",
     "scala.collection.generic.SortedMapFactory$SortedMapCanBuildFrom",
     "scala.collection.immutable.LongMapUtils$",
     "scala.collection.immutable.Stream$$anonfun$flatMap$1",
     "scala.concurrent.duration.DurationConversions$",
     "scala.concurrent.duration.package$DurationInt$",
     "scala.collection.TraversableLike$$anonfun$isEmpty$1$$anonfun$apply$mcV$sp$1",
     "scala.concurrent.forkjoin.ForkJoinTask",
     "scala.collection.mutable.HashTable$",
     "scala.runtime.AbstractFunction1$mcDD$sp",
     "scala.util.control.Exception$Finally$$anonfun$and$1",
     "scala.collection.generic.ImmutableSortedMapFactory",
     "scala.Function2$mcDIJ$sp$class",
     "scala.collection.parallel.immutable.ParSet$",
     "scala.collection.generic.Shrinkable$$anonfun$$minus$minus$eq$1",
     "scala.math.BigDecimal$$anonfun$isValidLong$1",
     "scala.runtime.AbstractFunction1$mcZJ$sp",
     "scala.math.Numeric$BigDecimalIsFractional$class",
     "scala.collection.parallel.mutable.ParArray$Map",
     "scala.util.matching.Regex$Match$$anonfun$starts$1",
     "scala.collection.parallel.ParMap$WithDefault",
     "scala.text.DocText",
     "scala.collection.SeqViewLike$Transformed",
     "scala.collection.TraversableLike$class",
     "scala.Responder$$anonfun$loop$1",
     "scala.concurrent.impl.Promise$KeptPromise",
     "scala.Function2$mcJDI$sp$class",
     "scala.collection.parallel.ParIterableLike$$anonfun$reduce$1",
     "scala.collection.concurrent.TrieMapIterator$",
     "scala.collection.generic.GenTraversableFactory$$anon$1",
     "scala.Responder$$anon$4$$anonfun$respond$3",
     "scala.collection.parallel.ParIterableLike$$anonfun$min$1",
     "scala.annotation.varargs",
     "scala.concurrent.duration.DurationConversions",
     "scala.collection.mutable.OpenHashMap$$anon$1",
     "scala.Product2$mcII$sp",
     "scala.annotation.tailrec",
     "scala.collection.mutable.Builder",
     "scala.collection.parallel.ParSeqLike$Zip",
     "scala.text.Document$",
     "scala.Function$$anonfun$untupled$1",
     "scala.Function18$$anonfun$curried$1",
     "scala.Function2$mcZJJ$sp",
     "scala.Function$$anonfun$untupled$2",
     "scala.Function$$anonfun$untupled$3",
     "scala.Function$$anonfun$untupled$4",
     "scala.collection.parallel.ParIterableLike$Sum",
     "scala.sys.process.ProcessImpl$ThreadProcess",
     "scala.collection.GenMapLike",
     "scala.collection.parallel.ParIterableLike$$anonfun$minBy$1",
     "scala.concurrent.JavaConversions$",
     "scala.collection.ViewMkString",
     "scala.UninitializedFieldError",
     "scala.Function1$mcID$sp",
     "scala.collection.parallel.ParIterableLike$SplitAt$$anonfun$15",
     "scala.Function2$mcZID$sp$class",
     "scala.LowPriorityImplicits",
     "scala.math.BigDecimal$$anonfun$until$1",
     "scala.collection.parallel.BufferSplitter$$anonfun$debugInformation$1",
     "scala.annotation.migration",
     "scala.collection.BitSet",
     "scala.collection.Iterator$ConcatIterator",
     "scala.collection.parallel.mutable.UnrolledParArrayCombiner$",
     "scala.Function2$mcJID$sp",
     "scala.collection.immutable.RedBlackTree$",
     "scala.package$$anon$1",
     "scala.collection.mutable.DoubleLinkedList$$anon$1",
     "scala.collection.mutable.PriorityQueue$",
     "scala.collection.parallel.ParSeqLike$Corresponds",
     "scala.deprecated",
     "scala.annotation.meta.package",
     "scala.Predef$any2stringadd$",
     "scala.Function21$$anonfun$curried$1",
     "scala.collection.script.Remove$",
     "scala.util.DynamicVariable",
     "scala.collection.parallel.ParSeqLike$$anonfun$sameElements$2$$anon$7",
     "scala.collection.parallel.mutable.UnrolledParArrayCombiner$$anon$1",
     "scala.collection.convert.DecorateAsScala$$anonfun$mapAsScalaConcurrentMapConverter$1",
     "scala.collection.$plus$colon",
     "scala.runtime.Null$",
     "scala.collection.mutable.SynchronizedQueue",
     "scala.collection.mutable.SynchronizedSet",
     "scala.Function16$$anonfun$curried$1",
     "scala.Function1$mcZI$sp$class",
     "scala.collection.mutable.ArrayStack$$anonfun$1",
     "scala.math.Numeric$class",
     "scala.collection.GenSetLike",
     "scala.collection.SeqViewLike$Mapped",
     "scala.collection.parallel.ParIterableLike$ZipAll",
     "scala.util.hashing.MurmurHash3$",
     "scala.collection.parallel.SeqSplitter$Zipped$$anonfun$psplit$3",
     "scala.sys.process.BasicIO",
     "scala.sys.process.ProcessLogger",
     "scala.collection.immutable.AbstractMap",
     "scala.collection.parallel.mutable.ParHashTable$EntryIterator",
     "scala.collection.mutable.ArraySeq$$anon$1",
     "scala.sys.process.ProcessImpl$SequentialProcess",
     "scala.languageFeature$",
     "scala.collection.convert.DecorateAsJava$$anonfun$mutableSetAsJavaSetConverter$1",
     "scala.collection.mutable.AnyRefMap$$anonfun$apply$1",
     "scala.collection.mutable.WeakHashMap",
     "scala.deprecatedInheritance$",
     "scala.sys.ShutdownHookThread",
     "scala.collection.package",
     "scala.collection.mutable.Leaf$",
     "scala.math.Ordering$StringOrdering",
     "scala.runtime.IntRef",
     "scala.collection.parallel.SeqSplitter$Mapped",
     "scala.runtime.AbstractFunction0$mcC$sp",
     "scala.sys.process.ProcessBuilderImpl$FileInput",
     "scala.collection.parallel.mutable.ParSetLike",
     "scala.collection.convert.Decorators$",
     "scala.runtime.AbstractPartialFunction$mcVF$sp",
     "scala.concurrent.duration.package$DurationLong",
     "scala.collection.convert.DecorateAsScala$$anonfun$iterableAsScalaIterableConverter$1",
     "scala.collection.parallel.ParSeqLike$Reverse",
     "scala.collection.generic.IsTraversableLike$$anon$1$$anonfun$1",
     "scala.annotation.meta.companionClass",
     "scala.collection.immutable.RedBlackTree$EntriesIterator",
     "scala.NotImplementedError",
     "scala.collection.concurrent.SNode",
     "scala.reflect.ManifestFactory$ClassTypeManifest",
     "scala.runtime.AbstractFunction2$mcVJJ$sp",
     "scala.Product1$mcD$sp$class",
     "scala.collection.parallel.ParSeqLike$$anonfun$intersect$1",
     "scala.util.control.Exception$Described$class",
     "scala.collection.mutable.ArrayOps$ofUnit$",
     "scala.collection.immutable.HashMap$EmptyHashMap$",
     "scala.collection.Iterator$JoinIterator",
     "scala.collection.immutable.SortedSet",
     "scala.sys.SystemProperties$$anonfun$contains$1",
     "scala.collection.LinearSeq$",
     "scala.util.matching.Regex$MatchIterator",
     "scala.Float",
     "scala.collection.generic.MutableMapFactory",
     "scala.collection.mutable.TreeSet",
     "scala.sys.process.ProcessImpl$PipeSource",
     "scala.sys.process.ProcessImpl$PipeThread",
     "scala.collection.immutable.ListMap$EmptyListMap$",
     "scala.runtime.AbstractFunction2$mcFID$sp",
     "scala.util.control.Exception$Catch$$anon$2",
     "scala.collection.SeqProxyLike$$anonfun$lastIndexOf$1",
     "scala.collection.immutable.Iterable$",
     "scala.collection.immutable.Stream$$anonfun$from$1",
     "scala.collection.parallel.mutable.package",
     "scala.collection.immutable.NumericRange",
     "scala.collection.TraversableView$$anon$1",
     "scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask$class",
     "scala.collection.parallel.mutable.ParHashMap$$anonfun$2",
     "scala.collection.parallel.mutable.ParHashMap$$anonfun$1",
     "scala.Function2$mcIDJ$sp$class",
     "scala.collection.parallel.mutable.ParHashMap$$anonfun$3",
     "scala.collection.mutable.ListBuffer$",
     "scala.Enumeration$ValueSet$$anonfun$iterator$1",
     "scala.collection.generic.IsTraversableOnce",
     "scala.collection.mutable.SetLike$class",
     "scala.Function1$mcJJ$sp$class",
     "scala.concurrent.duration.package$DoubleMult",
     "scala.Predef$$eq$colon$eq$",
     "scala.collection.immutable.StreamView",
     "scala.runtime.OrderedProxy",
     "scala.collection.script.Include$",
     "scala.math.PartialOrdering$$anon$1",
     "scala.util.control.Exception$$anonfun$throwableSubtypeToCatcher$1",
     "scala.util.control.Exception$$anonfun$throwableSubtypeToCatcher$2",
     "scala.concurrent.forkjoin.TransferQueue",
     "scala.ref.Reference$class",
     "scala.collection.mutable.ObservableSet$class",
     "scala.collection.immutable.WrappedString$$anon$1",
     "scala.collection.mutable.ArrayOps$ofRef$",
     "scala.Function18$$anonfun$tupled$1",
     "scala.collection.GenMapLike$$anonfun$liftedTree1$1$1",
     "scala.collection.mutable.IndexedSeqLike$class",
     "scala.util.control.Exception$Catch$",
     "scala.collection.parallel.ParIterableLike$$anonfun$max$1",
     "scala.util.control.Exception$Catch$$anonfun$toTry$1",
     "scala.sys.process.ProcessBuilderImpl$FileInput$$anonfun$$lessinit$greater$2",
     "scala.package$",
     "scala.runtime.Tuple2Zipped$$anonfun$flatMap$extension$1",
     "scala.ref.ReferenceQueue",
     "scala.runtime.Tuple3Zipped$$anonfun$map$extension$1",
     "scala.collection.mutable.MapProxy$$anon$1",
     "scala.runtime.package",
     "scala.collection.mutable.MapProxy$$anon$2",
     "scala.concurrent.Await$$anonfun$result$1",
     "scala.collection.immutable.ListMap$Node",
     "scala.util.PropertiesTrait$$anonfun$scalaProps$2",
     "scala.collection.parallel.ParSeqLike$$anonfun$3",
     "scala.collection.parallel.ParSeqLike$$anonfun$2",
     "scala.collection.Set$class",
     "scala.collection.mutable.HashMap",
     "scala.collection.parallel.mutable.ParFlatHashTable",
     "scala.concurrent.forkjoin.ForkJoinPool$DefaultForkJoinWorkerThreadFactory",
     "scala.Function13$class",
     "scala.collection.convert.Wrappers$JDictionaryWrapper",
     "scala.concurrent.Future",
     "scala.collection.mutable.IndexedSeq",
     "scala.collection.SeqViewLike$$anonfun$diff$1",
     "scala.collection.parallel.immutable.ParSeq$",
     "scala.util.PropertiesTrait$$anonfun$scalaProps$1",
     "scala.collection.parallel.immutable.HashSetCombiner$CreateTrie",
     "scala.Function2$mcDII$sp$class",
     "scala.deprecatedOverriding$",
     "scala.util.control.Exception$Catch$$anonfun$either$1",
     "scala.collection.mutable.Set$class",
     "scala.reflect.NameTransformer$",
     "scala.collection.parallel.ParMapLike$$anon$1$$anonfun$filtered$1",
     "scala.collection.parallel.SeqSplitter$Patched",
     "scala.collection.parallel.BucketCombiner",
     "scala.Function1$mcFF$sp",
     "scala.Function15$$anonfun$tupled$1",
     "scala.collection.immutable.RedBlackTree$$anonfun$1",
     "scala.runtime.AbstractPartialFunction$mcFD$sp",
     "scala.io.Codec",
     "scala.collection.generic.BitOperations",
     "scala.math.Numeric$FloatAsIfIntegral",
     "scala.Symbol$",
     "scala.collection.mutable.ListBuffer$$anon$1",
     "scala.collection.mutable.Publisher$class",
     "scala.Function18$class",
     "scala.collection.immutable.VectorPointer",
     "scala.collection.SeqViewLike$Forced",
     "scala.collection.mutable.ArraySeq$",
     "scala.PartialFunction$",
     "scala.io.AnsiColor$class",
     "scala.math.Ordering$BigDecimal$",
     "scala.collection.mutable.ArrayOps$ofUnit",
     "scala.Function2$mcFIJ$sp",
     "scala.collection.mutable.ArrayLike",
     "scala.util.hashing.MurmurHash3$ArrayHashing$mcF$sp",
     "scala.runtime.AbstractFunction8",
     "scala.runtime.AbstractFunction9",
     "scala.collection.mutable.OpenHashMap$$anonfun$foreachUndeletedEntry$1",
     "scala.runtime.AbstractFunction1$mcVJ$sp",
     "scala.collection.TraversableLike$$anonfun$exists$1$$anonfun$apply$mcV$sp$3",
     "scala.collection.parallel.ParIterableLike$TaskOps",
     "scala.util.matching.Regex$Replacement",
     "scala.collection.immutable.HashMap$$anon$2$$anon$3",
     "scala.collection.generic.GenTraversableFactory$$anonfun$fill$1",
     "scala.collection.generic.GenTraversableFactory$$anonfun$fill$2",
     "scala.collection.generic.GenTraversableFactory$$anonfun$fill$3",
     "scala.collection.generic.GenTraversableFactory$$anonfun$fill$4",
     "scala.runtime.AbstractFunction2$mcJID$sp",
     "scala.collection.SeqViewLike$$anon$11",
     "scala.collection.SeqViewLike$$anon$10",
     "scala.collection.SeqViewLike$$anon$13",
     "scala.collection.immutable.LongMapEntryIterator",
     "scala.collection.SeqViewLike$$anon$12",
     "scala.collection.mutable.FlatHashTable$NullSentinel$",
     "scala.concurrent.Future$$anonfun$transform$1",
     "scala.util.hashing.Hashing$Default",
     "scala.collection.Parallelizable$class",
     "scala.collection.parallel.ParallelCollectionImplicits$$anon$4",
     "scala.collection.convert.Wrappers$JMapWrapperLike",
     "scala.math.Ordered$class",
     "scala.Function0$mcS$sp",
     "scala.collection.parallel.ParallelCollectionImplicits$$anon$2",
     "scala.collection.SeqLike$class",
     "scala.collection.immutable.LongMap$Tip",
     "scala.collection.mutable.LinkedListLike$class",
     "scala.collection.parallel.ParallelCollectionImplicits$$anon$1",
     "scala.languageFeature$implicitConversions$",
     "scala.collection.mutable.OpenHashMap$$anonfun$foreach$1",
     "scala.runtime.AbstractFunction2$mcIIJ$sp",
     "scala.concurrent.impl.Future$",
     "scala.collection.parallel.FactoryOps$Otherwise",
     "scala.collection.parallel.mutable.ParHashMapCombiner$$anonfun$4",
     "scala.collection.parallel.ParIterableLike$BuilderOps",
     "scala.collection.GenSeqLike$$anonfun$indexOf$1",
     "scala.math.Ordering$IntOrdering$class",
     "scala.Predef$Ensuring$",
     "scala.UniquenessCache",
     "scala.collection.mutable.LinkedHashMap$",
     "scala.collection.parallel.ThreadPoolTaskSupport",
     "scala.collection.mutable.AbstractIterable",
     "scala.collection.SortedMapLike$$anonfun$$plus$plus$1",
     "scala.sys.process.ProcessIO",
     "scala.annotation.elidable$",
     "scala.collection.TraversableLike$$anonfun$groupBy$2",
     "scala.collection.TraversableLike$$anonfun$groupBy$1",
     "scala.collection.immutable.StringLike$class",
     "scala.concurrent.forkjoin.ForkJoinPool",
     "scala.collection.TraversableLike$$anonfun$groupBy$3",
     "scala.Proxy$",
     "scala.collection.immutable.List$SerializationProxy",
     "scala.collection.mutable.AVLIterator",
     "scala.concurrent.duration.FiniteDuration",
     "scala.runtime.AbstractPartialFunction$mcZF$sp",
     "scala.runtime.AbstractFunction2$mcZJJ$sp",
     "scala.collection.SeqLike$CombinationsItr$$anonfun$next$1$$anonfun$apply$mcVI$sp$1",
     "scala.collection.parallel.immutable.LazyParVectorCombiner$$anonfun$result$1",
     "scala.collection.immutable.IntMap$$anonfun$unionWith$1",
     "scala.collection.immutable.IntMap$$anonfun$unionWith$2",
     "scala.collection.parallel.ParSeqLike$Updated",
     "scala.collection.immutable.Stream$$anonfun$2",
     "scala.collection.immutable.Stream$$anonfun$1",
     "scala.collection.IterableLike",
     "scala.concurrent.DelayedLazyVal$$anon$1",
     "scala.collection.parallel.immutable.HashMapCombiner$$anonfun$2",
     "scala.collection.parallel.immutable.HashMapCombiner$$anonfun$1",
     "scala.collection.parallel.immutable.HashMapCombiner$$anonfun$4",
     "scala.collection.parallel.immutable.HashMapCombiner$$anonfun$3",
     "scala.Function2$mcDDD$sp$class",
     "scala.collection.parallel.immutable.HashMapCombiner$$anonfun$6",
     "scala.collection.parallel.immutable.HashMapCombiner$$anonfun$5",
     "scala.collection.convert.Wrappers$JConcurrentMapWrapper$",
     "scala.Function19$class",
     "scala.sys.process.BasicIO$$anonfun$appendLine$1",
     "scala.sys.process.ProcessBuilder$Source$class",
     "scala.collection.script.Reset",
     "scala.runtime.VolatileByteRef",
     "scala.concurrent.forkjoin.LinkedTransferQueue$Itr",
     "scala.collection.immutable.Traversable$class",
     "scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask$$anonfun$split$1",
     "scala.util.matching.Regex$",
     "scala.collection.immutable.HashSet$LeafHashSet",
     "scala.collection.parallel.IterableSplitter$$anonfun$splitWithSignalling$1",
     "scala.annotation.bridge",
     "scala.collection.SetProxyLike",
     "scala.collection.concurrent.BasicNode",
     "scala.collection.immutable.NumericRange$$anon$1$$anonfun$containsTyped$1",
     "scala.util.PropertiesTrait$$anonfun$scalaPropOrElse$1",
     "scala.collection.MapLike$FilteredKeys$$anonfun$iterator$1",
     "scala.collection.mutable.FlatHashTable$HashUtils",
     "scala.math.Ordering$LongOrdering",
     "scala.collection.IterableViewLike$Forced$class",
     "scala.collection.generic.VolatileAbort$class",
     "scala.collection.parallel.immutable.Repetition$ParIterator$$anonfun$psplit$1",
     "scala.collection.mutable.ListMap",
     "scala.Function2$mcJID$sp$class",
     "scala.sys.SystemProperties$",
     "scala.collection.TraversableLike$$anonfun$groupBy$1$$anonfun$1",
     "scala.collection.parallel.immutable.Repetition$ParIterator$$anonfun$psplit$2",
     "scala.collection.parallel.immutable.ParHashSet$ParHashSetIterator",
     "scala.collection.AbstractMap",
     "scala.collection.ViewMkString$$anonfun$addString$1",
     "scala.math.Ordering$BooleanOrdering",
     "scala.math.Fractional",
     "scala.collection.parallel.ParIterableLike$ZipAll$$anonfun$split$20",
     "scala.collection.concurrent.CNode$$anonfun$scala$collection$concurrent$CNode$$collectElems$1",
     "scala.collection.GenSeqLike$$anonfun$lastIndexOf$2",
     "scala.concurrent.JavaConversions",
     "scala.collection.GenSeqLike$$anonfun$lastIndexOf$1",
     "scala.collection.SetProxy",
     "scala.math.Numeric$DoubleIsFractional$",
     "scala.collection.TraversableLike$WithFilter$$anonfun$flatMap$2",
     "scala.collection.immutable.LongMap$$anon$1",
     "scala.collection.parallel.immutable.LazyParVectorCombiner",
     "scala.Function14$$anonfun$curried$1",
     "scala.collection.parallel.SeqSplitter$Zipped",
     "scala.collection.parallel.mutable.LazyCombiner",
     "scala.collection.immutable.StringLike$$anonfun$format$1",
     "scala.Function2$mcDDJ$sp",
     "scala.Array$$anonfun$apply$10",
     "scala.sys.Prop$DoubleProp$$anonfun$$lessinit$greater$4",
     "scala.util.control.TailCalls$Call$",
     "scala.collection.parallel.mutable.ParTrieMap$Size",
     "scala.Function1$mcVJ$sp$class",
     "scala.Product2$mcIJ$sp$class",
     "scala.collection.immutable.PagedSeq$$anonfun$fromStrings$1",
     "scala.concurrent.Future$$anonfun$recoverWith$1",
     "scala.collection.parallel.SeqSplitter$Appended$$anonfun$10",
     "scala.util.control.TailCalls$TailRec$$anonfun$result$1",
     "scala.collection.parallel.ParSeqLike$$anonfun$sameElements$1",
     "scala.collection.parallel.immutable.ParIterable$",
     "scala.collection.parallel.ParIterableLike$FromScanTree",
     "scala.sys.process.ProcessImpl$OrProcess$$anonfun$$lessinit$greater$2",
     "scala.sys.process.ProcessBuilder$",
     "scala.collection.parallel.ParSeqLike$$anonfun$sameElements$2",
     "scala.collection.concurrent.TrieMapSerializationEnd",
     "scala.collection.generic.GenTraversableFactory$$anonfun$tabulate$2$$anonfun$apply$2",
     "scala.collection.generic.GenericClassTagTraversableTemplate$class",
     "scala.Function13$$anonfun$curried$1$$anonfun$apply$1",
     "scala.sys.process.ProcessBuilderImpl$URLInput",
     "scala.collection.IterableViewLike$EmptyView",
     "scala.runtime.StringFormat",
     "scala.collection.TraversableView",
     "scala.concurrent.Future$$anonfun$foreach$1",
     "scala.util.control.Exception$Described",
     "scala.collection.SeqViewLike$Forced$class",
     "scala.collection.Iterator$ConcatIterator$$anonfun$$plus$plus$1",
     "scala.Function11$$anonfun$curried$1$$anonfun$apply$1",
     "scala.sys.process.ProcessImpl$PipeThread$$anonfun$10",
     "scala.Function14$class",
     "scala.math.Equiv$$anonfun$by$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$map$2",
     "scala.collection.parallel.ParIterableLike$$anonfun$map$1",
     "scala.collection.parallel.AdaptiveWorkStealingThreadPoolTasks$WrappedTask",
     "scala.math.Numeric$BigDecimalIsConflicted",
     "scala.collection.immutable.MapProxy$$anon$2",
     "scala.collection.parallel.immutable.ParRange$",
     "scala.Function2$mcFJI$sp$class",
     "scala.collection.MapLike$MappedValues",
     "scala.Function18$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.generic.BitOperations$",
     "scala.collection.immutable.Stack",
     "scala.math.Integral",
     "scala.Function16$$anonfun$curried$1$$anonfun$apply$1",
     "scala.concurrent.duration.Duration$Infinite",
     "scala.concurrent.ThreadPoolRunner$$anonfun$futureAsFunction$1",
     "scala.Function1$mcZJ$sp$class",
     "scala.collection.convert.Decorators",
     "scala.collection.convert.Wrappers$MutableSetWrapper$",
     "scala.collection.parallel.mutable.ParHashSetCombiner$$anonfun$parPopulate$1",
     "scala.volatile",
     "scala.Function1$$anonfun$andThen$1",
     "scala.collection.TraversableLike$$anonfun$last$1",
     "scala.collection.parallel.ParIterableLike$NonDivisibleTask",
     "scala.Function2$mcFID$sp",
     "scala.collection.parallel.immutable.ParSet",
     "scala.collection.immutable.Stream$ConsWrapper",
     "scala.util.Try",
     "scala.collection.parallel.immutable.ParSeq",
     "scala.math.Numeric$ShortIsIntegral",
     "scala.reflect.NameTransformer",
     "scala.Tuple2$mcCC$sp",
     "scala.collection.immutable.IndexedSeq$",
     "scala.collection.convert.DecorateAsJava$$anonfun$bufferAsJavaListConverter$1",
     "scala.collection.TraversableOnce$FlattenOps",
     "scala.collection.generic.BitSetFactory$$anonfun$apply$1",
     "scala.collection.mutable.LinkedHashMap$FilteredKeys",
     "scala.Function2$$anonfun$curried$1",
     "scala.concurrent.Awaitable",
     "scala.collection.mutable.HashMap$",
     "scala.collection.mutable.SortedSet",
     "scala.util.Random",
     "scala.collection.parallel.ParIterableLike$$anonfun$scan$1$$anonfun$apply$3",
     "scala.collection.parallel.ParIterableLike$$anonfun$scan$1$$anonfun$apply$4",
     "scala.collection.generic.DelegatedContext",
     "scala.collection.mutable.ArrayOps$class",
     "scala.util.hashing.MurmurHash3$ArrayHashing$mcV$sp",
     "scala.collection.generic.ClassTagTraversableFactory$GenericCanBuildFrom",
     "scala.Function2$mcDII$sp",
     "scala.reflect.ManifestFactory",
     "scala.text.DocText$",
     "scala.sys.process.ProcessImpl",
     "scala.Function0$mcB$sp",
     "scala.collection.immutable.Stream$Empty$",
     "scala.math.ScalaNumericConversions",
     "scala.math.Integral$class",
     "scala.collection.parallel.ThreadPoolTasks",
     "scala.runtime.ScalaRunTime$$anonfun$toArray$1",
     "scala.collection.mutable.ArrayOps$ofChar$",
     "scala.math.Numeric$ShortIsIntegral$",
     "scala.annotation.unchecked.uncheckedVariance",
     "scala.Console$",
     "scala.Product5$class",
     "scala.math.BigInt",
     "scala.collection.immutable.MapProxy$$anon$1",
     "scala.concurrent.impl.Promise",
     "scala.collection.GenMap",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$reverse2combiner$1$$anonfun$apply$mcV$sp$2",
     "scala.collection.IndexedSeqOptimized$$anonfun$indexWhere$1",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$reverse2combiner$1$$anonfun$apply$mcV$sp$4",
     "scala.collection.SeqView",
     "scala.collection.TraversableViewLike$TakenWhile$$anonfun$foreach$5",
     "scala.runtime.AbstractFunction2$mcZJD$sp",
     "scala.sys.process.ProcessCreation$$anonfun$apply$3",
     "scala.deprecatedOverriding",
     "scala.sys.process.ProcessCreation$$anonfun$apply$1",
     "scala.sys.process.ProcessCreation$$anonfun$apply$2",
     "scala.collection.mutable.WrappedArray$ofLong",
     "scala.collection.immutable.BitSet$",
     "scala.collection.immutable.IndexedSeq$Impl",
     "scala.collection.immutable.IntMapIterator",
     "scala.collection.mutable.IndexedSeqView$DroppedWhile",
     "scala.collection.parallel.ParSeqLike$$anonfun$endsWith$2$$anon$8",
     "scala.collection.immutable.HashSet$HashSet1",
     "scala.collection.parallel.ParIterableLike$Forall",
     "scala.collection.mutable.ObservableSet",
     "scala.concurrent.impl.ExecutionContextImpl",
     "scala.collection.parallel.immutable.HashSetCombiner$",
     "scala.collection.immutable.StreamIterator",
     "scala.collection.immutable.Stream$$anonfun$scala$collection$immutable$Stream$$advance$1$1",
     "scala.languageFeature$experimental$macros$",
     "scala.collection.concurrent.TrieMapSerializationEnd$",
     "scala.sys.process.ProcessBuilderImpl$AbstractBuilder",
     "scala.collection.TraversableLike$$anonfun$head$1$$anonfun$apply$mcV$sp$5",
     "scala.collection.SeqViewLike$$anonfun$sortWith$1",
     "scala.collection.parallel.immutable.ParIterable$$anonfun$toSeq$1",
     "scala.math.Ordering$Unit$",
     "scala.concurrent.ExecutionContext$Implicits$",
     "scala.util.hashing.ByteswapHashing$",
     "scala.collection.immutable.StreamIterator$LazyCell",
     "scala.text.DocNest$",
     "scala.collection.immutable.StringLike$$anonfun$1",
     "scala.collection.generic.SeqForwarder$class",
     "scala.collection.immutable.Vector$$anon$1",
     "scala.Function2$mcIJJ$sp",
     "scala.collection.parallel.mutable.ParHashMap$$anonfun$brokenInvariants$2",
     "scala.runtime.AbstractPartialFunction$mcFI$sp",
     "scala.collection.parallel.mutable.ParHashMap$$anonfun$brokenInvariants$1",
     "scala.collection.mutable.WrappedArray$",
     "scala.math.Ordering$ShortOrdering$class",
     "scala.Tuple2$mcJI$sp",
     "scala.runtime.AbstractFunction2$mcIJD$sp",
     "scala.collection.parallel.ParMap$class",
     "scala.runtime.AbstractFunction2$mcJJI$sp",
     "scala.collection.parallel.ParIterableLike$Fold",
     "scala.concurrent.duration.Deadline$",
     "scala.runtime.NonLocalReturnControl$mcI$sp",
     "scala.collection.mutable.Traversable$class",
     "scala.collection.parallel.SeqSplitter$Taken$$anonfun$psplit$1",
     "scala.Function2$mcVDI$sp$class",
     "scala.collection.parallel.ParSeqLike",
     "scala.collection.parallel.FutureTasks$$anonfun$scala$collection$parallel$FutureTasks$$compute$1$2$$anonfun$apply$1",
     "scala.util.MurmurHash$mcJ$sp",
     "scala.collection.convert.package$$anon$6",
     "scala.collection.convert.package$$anon$5",
     "scala.Tuple2$mcID$sp",
     "scala.collection.GenSetLike$class",
     "scala.collection.LinearSeqOptimized",
     "scala.math.Fractional$ExtraImplicits",
     "scala.throws$",
     "scala.collection.generic.IndexedSeqFactory",
     "scala.concurrent.duration.Duration$$anon$3",
     "scala.concurrent.duration.Duration$$anon$2",
     "scala.None",
     "scala.concurrent.duration.Duration$$anon$1",
     "scala.collection.LinearSeqLike$$anon$1",
     "scala.collection.mutable.Leaf",
     "scala.concurrent.forkjoin.LinkedTransferQueue",
     "scala.collection.immutable.StreamViewLike",
     "scala.collection.parallel.ForkJoinTasks$",
     "scala.collection.immutable.LongMap$Bin",
     "scala.sys.BooleanProp$ConstantImpl",
     "scala.runtime.FractionalProxy$$anonfun$until$1",
     "scala.collection.parallel.ParSeqLike$Accessor",
     "scala.collection.mutable.AnyRefMap$$anon$2",
     "scala.collection.mutable.AnyRefMap$$anon$1",
     "scala.math.Numeric$Implicits$",
     "scala.collection.TraversableViewLike$Filtered$class",
     "scala.runtime.RichLong$",
     "scala.runtime.NonLocalReturnControl",
     "scala.collection.convert.Wrappers$ConcurrentMapWrapper",
     "scala.collection.generic.GenTraversableFactory",
     "scala.collection.parallel.mutable.ParSet$",
     "scala.collection.parallel.ParMapLike$DefaultValuesIterable$$anonfun$foreach$4",
     "scala.collection.parallel.ParMapLike$DefaultValuesIterable$$anonfun$foreach$3",
     "scala.Function2$mcVDD$sp",
     "scala.collection.TraversableLike$$anonfun$head$1$$anonfun$apply$mcV$sp$5$$anonfun$apply$1",
     "scala.Product1$class",
     "scala.collection.mutable.DoubleLinkedListLike$$anonfun$update$2",
     "scala.reflect.ClassManifestFactory$",
     "scala.collection.convert.Wrappers$JListWrapper",
     "scala.collection.mutable.DoubleLinkedListLike$$anonfun$update$1",
     "scala.collection.immutable.MapLike$$anonfun$transform$1",
     "scala.collection.parallel.mutable.ParHashTable$EntryIterator$$anonfun$convertToArrayBuffer$1",
     "scala.collection.TraversableLike$$anonfun$scanRight$2",
     "scala.collection.immutable.MapLike$$anonfun$transform$2",
     "scala.Tuple2$mcIZ$sp",
     "scala.collection.GenTraversable",
     "scala.math.Ordering$Char$",
     "scala.collection.mutable.LinkedEntry",
     "scala.util.control.Exception$$anonfun$2",
     "scala.collection.JavaConversions",
     "scala.util.control.Exception$$anonfun$1",
     "scala.io.LowPriorityCodecImplicits",
     "scala.Function2$mcFJI$sp",
     "scala.collection.convert.Wrappers$MutableSetWrapper",
     "scala.collection.parallel.ParIterableLike$Filter",
     "scala.collection.TraversableLike$$anonfun$scanRight$1",
     "scala.util.control.Breaks",
     "scala.Product6$class",
     "scala.collection.mutable.UnrolledBuffer$Unrolled$",
     "scala.collection.convert.package$$anon$4",
     "scala.collection.convert.package$$anon$3",
     "scala.collection.parallel.ParIterableLike$Copy",
     "scala.collection.convert.package$$anon$2",
     "scala.collection.convert.package$$anon$1",
     "scala.io.AnsiColor$",
     "scala.math.ScalaNumericAnyConversions$class",
     "scala.compat.Platform",
     "scala.math.Ordering$FloatOrdering$$anon$1",
     "scala.collection.immutable.HashSet",
     "scala.collection.immutable.MapLike$class",
     "scala.collection.concurrent.RestartException",
     "scala.runtime.RichChar",
     "scala.collection.immutable.IntMapEntryIterator",
     "scala.collection.Iterator$$anonfun$filterNot$1",
     "scala.collection.mutable.LinkedHashMap$$anon$3",
     "scala.runtime.AbstractFunction2$mcDDD$sp",
     "scala.collection.parallel.ParSeq$",
     "scala.collection.mutable.LinkedHashMap$DefaultKeySet",
     "scala.collection.immutable.Nil$",
     "scala.Enumeration$ValueSet$$anonfun$keysIteratorFrom$1",
     "scala.Tuple8",
     "scala.concurrent.duration.package$IntMult$",
     "scala.Tuple9",
     "scala.Tuple6",
     "scala.sys.PropImpl$$anonfun$get$1",
     "scala.Tuple7",
     "scala.collection.parallel.IterableSplitter$Mapped",
     "scala.Tuple4",
     "scala.Function4$$anonfun$curried$1",
     "scala.Tuple5",
     "scala.collection.immutable.StreamViewLike$Forced",
     "scala.collection.parallel.mutable.ParArray",
     "scala.Tuple2",
     "scala.collection.mutable.LinkedHashMap$$anon$1",
     "scala.Tuple3",
     "scala.collection.mutable.LinkedHashMap$$anon$2",
     "scala.collection.mutable.Publisher$$anonfun$publish$1",
     "scala.Tuple1",
     "scala.collection.MapProxyLike",
     "scala.sys.SystemProperties$$anonfun$$minus$eq$1",
     "scala.math.Ordering$ByteOrdering",
     "scala.Function2$mcJDJ$sp",
     "scala.collection.immutable.Seq",
     "scala.collection.immutable.Set",
     "scala.collection.TraversableViewLike$$anonfun$unzip3$3",
     "scala.collection.TraversableLike$$anonfun$takeWhile$1",
     "scala.collection.TraversableViewLike$$anonfun$unzip3$1",
     "scala.collection.TraversableViewLike$$anonfun$unzip3$2",
     "scala.collection.convert.Wrappers$JIterableWrapper$",
     "scala.collection.mutable.IndexedSeq$class",
     "scala.collection.parallel.Splitter$",
     "scala.collection.IndexedSeq$",
     "scala.collection.IndexedSeqLike",
     "scala.Responder$$anonfun$loopWhile$1$$anonfun$apply$2",
     "scala.Product9",
     "scala.Product7",
     "scala.Product8",
     "scala.Product5",
     "scala.concurrent.impl.Promise$",
     "scala.util.control.Exception$Finally",
     "scala.Product2$mcDD$sp",
     "scala.Product6",
     "scala.collection.immutable.Set$Set4",
     "scala.Product3",
     "scala.annotation.unchecked.uncheckedStable",
     "scala.collection.DebugUtils$$anonfun$arrayString$1",
     "scala.util.Try$",
     "scala.Product4",
     "scala.Product1",
     "scala.Product2",
     "scala.math.Numeric$FloatIsConflicted$class",
     "scala.collection.immutable.Set$Set1",
     "scala.collection.mutable.ObservableBuffer",
     "scala.collection.script.Update",
     "scala.collection.immutable.HashMap$SerializationProxy$$anonfun$writeObject$1",
     "scala.collection.immutable.Set$Set3",
     "scala.collection.immutable.HashMap$SerializationProxy$$anonfun$writeObject$2",
     "scala.collection.immutable.Set$Set2",
     "scala.Predef$DummyImplicit$",
     "scala.util.control.TailCalls$Call",
     "scala.collection.TraversableLike$$anonfun$map$1",
     "scala.Option",
     "scala.collection.immutable.RedBlackTree$NList",
     "scala.collection.generic.GenericTraversableTemplate$$anonfun$1",
     "scala.collection.parallel.immutable.ParMap$class",
     "scala.collection.immutable.Map$Map3",
     "scala.collection.immutable.Map$Map2",
     "scala.collection.immutable.Map$Map1",
     "scala.collection.convert.Wrappers$MutableMapWrapper",
     "scala.collection.parallel.ParIterableLike$Drop",
     "scala.util.control.TailCalls$TailRec$$anonfun$map$1$$anonfun$apply$1",
     "scala.runtime.AbstractFunction0$mcF$sp",
     "scala.collection.immutable.Map$Map4",
     "scala.sys.process.ProcessImpl$PipedProcesses$$anonfun$9",
     "scala.collection.parallel.ParSet$",
     "scala.sys.process.ProcessImpl$PipedProcesses$$anonfun$5",
     "scala.sys.process.ProcessImpl$PipedProcesses$$anonfun$6",
     "scala.sys.process.ProcessImpl$PipedProcesses$$anonfun$7",
     "scala.sys.process.ProcessImpl$PipedProcesses$$anonfun$8",
     "scala.collection.parallel.mutable.SizeMapUtils",
     "scala.concurrent.Future$$anonfun$reduce$1",
     "scala.collection.mutable.ArrayOps$ofShort$",
     "scala.annotation.elidable",
     "scala.runtime.BoxesRunTime",
     "scala.collection.generic.GenericParTemplate$class",
     "scala.concurrent.package",
     "scala.runtime.AbstractFunction2$mcVDI$sp",
     "scala.sys.BooleanProp$$anonfun$valueIsTrue$1",
     "scala.collection.generic.GenericTraversableTemplate$$anonfun$flatten$1",
     "scala.collection.mutable.Buffer$class",
     "scala.collection.immutable.Stream$$anonfun$map$1",
     "scala.collection.generic.GenMapFactory$MapCanBuildFrom",
     "scala.collection.concurrent.RDCSS_Descriptor$",
     "scala.collection.convert.Wrappers$MapWrapper$$anon$1$$anon$5$$anon$6",
     "scala.util.matching.Regex$Groups$$anonfun$unapplySeq$4",
     "scala.util.Either$LeftProjection$",
     "scala.Short",
     "scala.collection.immutable.StreamViewLike$class",
     "scala.collection.BufferedIterator$class",
     "scala.concurrent.Promise$class",
     "scala.concurrent.SyncChannel",
     "scala.io.Source$Positioner",
     "scala.collection.immutable.StreamViewLike$Transformed$class",
     "scala.unchecked",
     "scala.sys.process.BasicIO$$anonfun$processFully$1",
     "scala.collection.convert.Decorators$AsJavaDictionary",
     "scala.StringContext$InvalidEscapeException",
     "scala.collection.parallel.ParSeqLike$$anonfun$zip$1",
     "scala.Function1$mcJI$sp$class",
     "scala.collection.parallel.ParSeqLike$$anonfun$zip$2",
     "scala.collection.parallel.mutable.ParTrieMap",
     "scala.runtime.AbstractFunction1$mcZD$sp",
     "scala.sys.process.BasicIO$$anonfun$toStdErr$1",
     "scala.sys.process.ProcessImpl$OrProcess",
     "scala.collection.parallel.mutable.ParHashMap$ParHashMapIterator",
     "scala.util.Either",
     "scala.Product2$mcJI$sp$class",
     "scala.collection.immutable.StringLike$$anon$1",
     "scala.languageFeature$experimental$",
     "scala.math.Ordering$BigInt$",
     "scala.collection.generic.GenericSeqCompanion",
     "scala.collection.mutable.WrappedArray",
     "scala.collection.parallel.mutable.ParSeq",
     "scala.concurrent.impl.AbstractPromise",
     "scala.sys.Prop$StringProp$$anonfun$$lessinit$greater$2",
     "scala.collection.SeqLike$$anonfun$contains$1",
     "scala.collection.$colon$plus",
     "scala.collection.TraversableOnce$",
     "scala.collection.generic.ParMapFactory$CanCombineFromMap",
     "scala.collection.immutable.BitSet$BitSet2",
     "scala.collection.parallel.mutable.ParSet",
     "scala.collection.immutable.BitSet$BitSet1",
     "scala.util.PropertiesTrait$$anonfun$envOrSome$1",
     "scala.collection.immutable.BitSet$BitSetN",
     "scala.runtime.AbstractPartialFunction$mcJI$sp",
     "scala.util.Right$",
     "scala.sys.process.BasicIO$$anonfun$processErrFully$1$$anonfun$apply$4",
     "scala.collection.generic.GenericOrderedTraversableTemplate",
     "scala.io.Codec$",
     "scala.math.LowPriorityEquiv$class",
     "scala.language$experimental$",
     "scala.sys.process.ProcessBuilder$Sink",
     "scala.collection.TraversableViewLike$Sliced",
     "scala.collection.immutable.Range$BigDecimal$",
     "scala.concurrent.impl.Promise$class",
     "scala.sys.process.ProcessBuilderImpl$URLInput$$anonfun$$lessinit$greater$1",
     "scala.collection.mutable.DoubleLinkedList$",
     "scala.collection.generic.SeqForwarder",
     "scala.collection.immutable.RedBlackTree$RedTree",
     "scala.util.MurmurHash$",
     "scala.collection.immutable.Stream$$anonfun$flatten$1",
     "scala.math.Numeric$Ops",
     "scala.collection.generic.IsTraversableLike$",
     "scala.collection.immutable.List$",
     "scala.sys.process.ProcessImpl$PipeSink",
     "scala.collection.generic.ClassTagTraversableFactory",
     "scala.io.Source",
     "scala.runtime.RichFloat$",
     "scala.collection.immutable.SortedMap$class",
     "scala.math.Numeric$DoubleAsIfIntegral$class",
     "scala.math.Ordering$BigIntOrdering$class",
     "scala.concurrent.Channel",
     "scala.collection.immutable.ListMap",
     "scala.runtime.AbstractFunction2$mcFDJ$sp",
     "scala.collection.parallel.mutable.ParHashSetCombiner$FillBlocks",
     "scala.collection.convert.Wrappers$MutableBufferWrapper",
     "scala.collection.mutable.SortedSet$",
     "scala.concurrent.impl.ExecutionContextImpl$$anon$1",
     "scala.concurrent.forkjoin.ForkJoinPool$Submitter",
     "scala.collection.parallel.ParIterableLike$CopyToArray$$anonfun$split$24",
     "scala.concurrent.impl.ExecutionContextImpl$$anon$3",
     "scala.collection.parallel.ParIterableLike$CopyToArray$$anonfun$split$23",
     "scala.collection.parallel.ParIterableLike$CopyToArray$$anonfun$split$22",
     "scala.collection.parallel.ParIterableLike$CopyToArray$$anonfun$split$21",
     "scala.collection.convert.WrapAsScala",
     "scala.sys.process.BasicIO$Uncloseable",
     "scala.runtime.VolatileIntRef",
     "scala.reflect.AnyValManifest",
     "scala.sys.Prop$IntProp$$anonfun$$lessinit$greater$3",
     "scala.collection.concurrent.CNode$$anonfun$string$1",
     "scala.collection.immutable.StreamViewLike$Reversed",
     "scala.collection.script.NoLo$",
     "scala.collection.parallel.TraversableOps$Otherwise",
     "scala.collection.TraversableOnce$$anonfun$count$1",
     "scala.collection.TraversableViewLike$$anonfun$tails$1",
     "scala.collection.mutable.ArrayBuilder",
     "scala.collection.TraversableLike$$anonfun$exists$1",
     "scala.collection.convert.Wrappers$IteratorWrapper$",
     "scala.collection.generic.TraversableForwarder$class",
     "scala.runtime.AbstractFunction1$mcDI$sp",
     "scala.Function2$mcJII$sp",
     "scala.collection.GenMapLike$class",
     "scala.collection.mutable.ListMap$",
     "scala.package",
     "scala.collection.Iterable",
     "scala.runtime.SeqCharSequence",
     "scala.Function1$mcJI$sp",
     "scala.Function2$mcIDI$sp",
     "scala.runtime.Tuple2Zipped$Ops$",
     "scala.collection.parallel.ParIterableLike$$anonfun$$plus$plus$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$$plus$plus$3",
     "scala.collection.parallel.ParIterableLike$$anonfun$$plus$plus$2",
     "scala.collection.SortedMapLike$DefaultKeySortedSet",
     "scala.sys.process.BasicIO$Streamed$",
     "scala.collection.TraversableLike$$anonfun$dropWhile$1",
     "scala.collection.parallel.SeqSplitter",
     "scala.collection.TraversableViewLike$TakenWhile$class",
     "scala.collection.parallel.ParIterableLike$$anon$13",
     "scala.collection.parallel.ParIterableLike$$anon$12",
     "scala.collection.parallel.ParIterableLike$$anon$11",
     "scala.collection.parallel.ParIterableLike$$anon$10",
     "scala.Function1$mcZF$sp$class",
     "scala.collection.parallel.ParIterableLike$$anon$19",
     "scala.collection.parallel.ParIterableLike$$anon$18",
     "scala.reflect.Manifest$class",
     "scala.collection.parallel.ParIterableLike$$anon$17",
     "scala.collection.parallel.ParIterableLike$$anon$16",
     "scala.collection.parallel.ParIterableLike$$anon$15",
     "scala.collection.immutable.StreamViewLike$DroppedWhile",
     "scala.Product7$class",
     "scala.Function2$mcFDD$sp$class",
     "scala.runtime.AbstractFunction2$mcJDD$sp",
     "scala.concurrent.Future$$anonfun$zip$1$$anonfun$apply$7",
     "scala.collection.TraversableOnce$ForceImplicitAmbiguity",
     "scala.collection.parallel.ExecutionContextTaskSupport$",
     "scala.util.matching.Regex$MatchData$$anonfun$subgroups$1",
     "scala.collection.SeqViewLike$EmptyView$class",
     "scala.math.Ordering$Int$",
     "scala.Function0$mcJ$sp",
     "scala.collection.concurrent.Debug",
     "scala.collection.IndexedSeqOptimized$$anonfun$1",
     "scala.concurrent.ExecutionContext$",
     "scala.collection.mutable.AVLTree",
     "scala.Predef$RichException$",
     "scala.collection.SeqViewLike$DroppedWhile$class",
     "scala.math.Numeric$IntIsIntegral$",
     "scala.collection.TraversableLike$WithFilter$$anonfun$withFilter$1",
     "scala.collection.mutable.ArrayOps$$anonfun$transpose$1",
     "scala.collection.immutable.SetProxy",
     "scala.collection.mutable.ArrayOps$$anonfun$transpose$2",
     "scala.collection.mutable.FlatHashTable$Contents",
     "scala.runtime.IntegralProxy$class",
     "scala.collection.MapLike$class",
     "scala.collection.TraversableLike$$anonfun$find$1$$anonfun$apply$mcV$sp$4",
     "scala.collection.mutable.OpenHashMap$$anonfun$growTable$1",
     "scala.runtime.Tuple2Zipped$$anonfun$forall$extension$1",
     "scala.Function2$mcDDI$sp",
     "scala.collection.generic.Subtractable$class",
     "scala.Double$",
     "scala.collection.Searching$SearchImpl",
     "scala.collection.parallel.ParSeqLike$$anonfun$startsWith$2$$anon$6",
     "scala.collection.immutable.IntMap",
     "scala.math.Numeric$BigDecimalAsIfIntegral",
     "scala.collection.parallel.Splitter$$anon$1",
     "scala.runtime.AbstractFunction2$mcFII$sp",
     "scala.Function$$anonfun$tupled$2",
     "scala.Function$$anonfun$tupled$1",
     "scala.Function$$anonfun$tupled$4",
     "scala.concurrent.Future$$anonfun$flatMap$1",
     "scala.Function$$anonfun$tupled$3",
     "scala.reflect.ClassManifestDeprecatedApis$$anonfun$subargs$1",
     "scala.util.MurmurHash$$anonfun$symmetricHash$1",
     "scala.collection.TraversableViewLike$$anonfun$collect$1",
     "scala.collection.convert.DecorateAsJava",
     "scala.math.Numeric$ExtraImplicits",
     "scala.sys.process.package$",
     "scala.collection.mutable.ArrayLike$class",
     "scala.collection.parallel.immutable.ParMap$$anonfun$withDefaultValue$1",
     "scala.collection.SeqViewLike$Appended",
     "scala.sys.process.processInternal$$anonfun$onInterrupt$1",
     "scala.collection.mutable.HashMap$$anonfun$writeObject$1",
     "scala.collection.mutable.TreeSet$",
     "scala.collection.TraversableViewLike$Appended$class",
     "scala.math.Ordering$BigDecimalOrdering",
     "scala.collection.immutable.StreamViewLike$$anon$10",
     "scala.collection.generic.BitOperations$Long$$anonfun$bits$2",
     "scala.collection.immutable.StreamViewLike$$anon$11",
     "scala.collection.SeqViewLike$Appended$class",
     "scala.collection.immutable.StreamViewLike$$anon$12",
     "scala.collection.immutable.StreamViewLike$$anon$13",
     "scala.Function$$anonfun$uncurried$4",
     "scala.Function$$anonfun$uncurried$1",
     "scala.concurrent.Future$$anonfun$onSuccess$1",
     "scala.Function$$anonfun$uncurried$3",
     "scala.collection.parallel.ParIterableLike$Composite",
     "scala.Function$$anonfun$uncurried$2",
     "scala.Function2$mcFDI$sp$class",
     "scala.collection.TraversableViewLike$$anonfun$groupBy$1",
     "scala.collection.convert.Wrappers$JEnumerationWrapper$",
     "scala.collection.mutable.TreeSet$$anonfun$iteratorFrom$1",
     "scala.collection.immutable.LongMap$$anonfun$unionWith$2",
     "scala.collection.TraversableView$NoBuilder",
     "scala.collection.immutable.LongMap$$anonfun$unionWith$1",
     "scala.collection.mutable.IndexedSeqView$Reversed",
     "scala.collection.script.Reset$",
     "scala.collection.mutable.DefaultMapModel$class",
     "scala.runtime.AbstractFunction2$mcDDJ$sp",
     "scala.collection.mutable.ArrayOps$ofDouble$",
     "scala.collection.mutable.LinkedHashSet$Entry",
     "scala.collection.immutable.IntMap$Tip$",
     "scala.collection.immutable.HashMap$$anonfun$1",
     "scala.collection.immutable.Stream$$anonfun$scanLeft$1",
     "scala.sys.process.BasicIO$$anonfun$1",
     "scala.collection.immutable.HashSet$HashTrieSet",
     "scala.collection.TraversableOnce$BufferedCanBuildFrom",
     "scala.collection.generic.IterableForwarder",
     "scala.collection.SeqLike$$anonfun$distinct$1",
     "scala.collection.TraversableOnce$$anonfun$sum$1",
     "scala.concurrent.Future$$anonfun$map$1",
     "scala.collection.parallel.mutable.ResizableParArrayCombiner$$anon$1",
     "scala.language",
     "scala.Function1$mcDF$sp$class",
     "scala.collection.mutable.ObservableBuffer$$anonfun$1",
     "scala.Predef$ArrowAssoc$",
     "scala.collection.parallel.ParSet",
     "scala.collection.immutable.Stream$Cons",
     "scala.collection.mutable.BufferLike",
     "scala.collection.Iterator$PartitionIterator$1",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$2",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$1",
     "scala.collection.immutable.LinearSeq$",
     "scala.Function10$$anonfun$curried$1",
     "scala.collection.mutable.LazyBuilder",
     "scala.runtime.Tuple3Zipped$",
     "scala.collection.mutable.IndexedSeqView$Reversed$class",
     "scala.collection.generic.ImmutableMapFactory",
     "scala.collection.parallel.immutable.HashMapCombiner$$anon$1",
     "scala.Function1$mcFD$sp$class",
     "scala.collection.mutable.PriorityQueue$ResizableArrayAccess",
     "scala.collection.generic.GenericTraversableTemplate$$anonfun$unzip$1",
     "scala.collection.mutable.SetLike$$anonfun$clear$1",
     "scala.annotation.strictfp",
     "scala.collection.generic.HasNewCombiner",
     "scala.runtime.VolatileLongRef",
     "scala.concurrent.duration.package$LongMult",
     "scala.deprecatedInheritance",
     "scala.collection.immutable.ListSet$$anon$1",
     "scala.collection.mutable.OpenHashMap$$anonfun$transform$1",
     "scala.reflect.NameTransformer$OpCodes",
     "scala.sys.Prop$FileProp$$anonfun$$lessinit$greater$1",
     "scala.collection.SortedSet",
     "scala.collection.parallel.immutable.ParRange$ParRangeIterator$$anonfun$psplit$1",
     "scala.collection.mutable.IndexedSeqView$$anon$7",
     "scala.collection.immutable.SortedMap",
     "scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1",
     "scala.collection.mutable.IndexedSeqView$$anon$5",
     "scala.collection.mutable.IndexedSeqView$$anon$6",
     "scala.Boolean$",
     "scala.collection.mutable.IndexedSeqView$$anon$3",
     "scala.collection.mutable.IndexedSeqView$$anon$4",
     "scala.collection.mutable.IndexedSeqView$$anon$1",
     "scala.collection.mutable.IndexedSeqView$$anon$2",
     "scala.runtime.AbstractPartialFunction$mcFJ$sp",
     "scala.collection.parallel.ParIterableLike$Count",
     "scala.Char$",
     "scala.collection.script.NoLo",
     "scala.Function13$$anonfun$tupled$1",
     "scala.collection.parallel.ParSeq",
     "scala.collection.mutable.ArrayOps$ofChar",
     "scala.collection.SortedMap$",
     "scala.collection.mutable.SetProxy",
     "scala.math.Numeric$BigDecimalAsIfIntegral$",
     "scala.collection.mutable.Map$$anonfun$withDefaultValue$1",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$",
     "scala.runtime.Tuple3Zipped$$anonfun$exists$extension$1",
     "scala.collection.generic.MapFactory",
     "scala.collection.immutable.HashMap$HashTrieMap$$anonfun$3",
     "scala.collection.immutable.HashMap$HashTrieMap$$anonfun$2",
     "scala.runtime.NonLocalReturnControl$mcJ$sp",
     "scala.collection.SortedSet$class",
     "scala.collection.IterableProxy",
     "scala.Function2$mcIII$sp$class",
     "scala.collection.GenIterable",
     "scala.ref.WeakReferenceWithWrapper",
     "scala.sys.Prop$DoubleProp$",
     "scala.collection.IterableViewLike$TakenWhile$class",
     "scala.collection.mutable.Cloneable$class",
     "scala.collection.mutable.DefaultEntry",
     "scala.collection.parallel.immutable.HashMapCombiner",
     "scala.ScalaReflectionException$",
     "scala.annotation.meta.field",
     "scala.runtime.AbstractFunction2$mcIID$sp",
     "scala.Function12$$anonfun$curried$1",
     "scala.collection.immutable.Traversable$",
     "scala.sys.process.ProcessBuilder$class",
     "scala.collection.parallel.ParIterableLike$SplitAt$$anonfun$split$11",
     "scala.Product2$mcJI$sp",
     "scala.collection.parallel.ParIterableLike$Zip",
     "scala.collection.parallel.ParIterableLike$Accessor$$anonfun$split$1",
     "scala.collection.immutable.IntMap$$anonfun$apply$1",
     "scala.collection.SortedMapLike$class",
     "scala.math.LowPriorityOrderingImplicits",
     "scala.deprecatedName",
     "scala.collection.parallel.ParIterableLike$SplitAt$$anonfun$split$12",
     "scala.Tuple2$mcJJ$sp",
     "scala.collection.parallel.mutable.ParHashMapCombiner",
     "scala.collection.IterableViewLike$Filtered",
     "scala.runtime.AbstractPartialFunction$mcDF$sp",
     "scala.Function2$mcZDI$sp$class",
     "scala.Byte",
     "scala.collection.mutable.Undoable",
     "scala.math.Numeric$FloatIsFractional",
     "scala.collection.parallel.ParSeqLike$class",
     "scala.util.Either$RightProjection$",
     "scala.collection.parallel.immutable.Repetition$ParIterator",
     "scala.collection.immutable.Range$Int$",
     "scala.collection.parallel.ThreadPoolTasks$WrappedTask$class",
     "scala.runtime.ScalaRunTime$$anon$1",
     "scala.sys.ShutdownHookThread$",
     "scala.collection.Traversable",
     "scala.Function2$mcDJJ$sp",
     "scala.util.control.Exception$$anonfun$failing$1",
     "scala.PartialFunction$$anonfun$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$toMap$1",
     "scala.collection.parallel.mutable.ParSeq$",
     "scala.runtime.AbstractFunction1$mcFF$sp",
     "scala.Enumeration$$anonfun$1",
     "scala.Array$$anonfun$tabulate$3$$anonfun$apply$13",
     "scala.collection.mutable.ResizableArray$",
     "scala.Function4$$anonfun$curried$1$$anonfun$apply$1$$anonfun$apply$2",
     "scala.math.BigDecimal$",
     "scala.PartialFunction$$anonfun$2",
     "scala.collection.Iterator$$anon$3",
     "scala.collection.Iterator$$anon$2",
     "scala.collection.convert.Wrappers$MapWrapper",
     "scala.collection.Iterator$$anon$24",
     "scala.collection.Iterator$$anon$5",
     "scala.collection.Iterator$$anon$4",
     "scala.collection.Iterator$$anon$22",
     "scala.collection.Iterator$$anon$7",
     "scala.collection.Iterator$$anon$23",
     "scala.collection.Iterator$$anon$6",
     "scala.collection.Iterator$$anon$20",
     "scala.collection.Iterator$$anon$9",
     "scala.collection.Iterator$$anon$21",
     "scala.collection.Iterator$$anon$8",
     "scala.Function2$mcVJD$sp$class",
     "scala.collection.immutable.Queue",
     "scala.collection.immutable.Stream$StreamBuilder",
     "scala.collection.Iterator$class",
     "scala.collection.parallel.mutable.ParArray$ScanToArray",
     "scala.collection.Iterator$$anon$1",
     "scala.collection.Iterator$$anon$15",
     "scala.collection.Iterator$$anon$16",
     "scala.collection.Iterator$$anon$13",
     "scala.collection.Iterator$$anon$14",
     "scala.collection.Iterator$$anon$11",
     "scala.collection.Iterator$$anon$12",
     "scala.collection.Iterator$$anon$10",
     "scala.runtime.AbstractPartialFunction$mcVD$sp",
     "scala.collection.Iterator$$anon$19",
     "scala.concurrent.forkjoin.ThreadLocalRandom$1",
     "scala.collection.Iterator$$anon$17",
     "scala.collection.IndexedSeqLike$Elements",
     "scala.collection.Iterator$$anon$18",
     "scala.collection.SeqLike$CombinationsItr$$anonfun$4",
     "scala.collection.SeqLike$CombinationsItr$$anonfun$5",
     "scala.sys.process.BasicIO$$anonfun$processOutFully$1",
     "scala.Tuple20$",
     "scala.collection.SeqLike$CombinationsItr$$anonfun$1",
     "scala.math.Numeric$DoubleIsFractional$class",
     "scala.collection.IterableProxyLike$class",
     "scala.collection.convert.Wrappers$SetWrapper",
     "scala.collection.parallel.FutureThreadPoolTasks$",
     "scala.sys.process.ProcessBuilder$Source",
     "scala.collection.mutable.LinkedHashSet$",
     "scala.concurrent.duration.Duration$$anonfun$3",
     "scala.concurrent.duration.Duration$$anonfun$2",
     "scala.concurrent.duration.Duration$$anonfun$1",
     "scala.collection.Searching$Found$",
     "scala.collection.parallel.mutable.ParHashMap$$anonfun$readObject$1",
     "scala.collection.SortedMapLike",
     "scala.concurrent.duration.Duration$$anonfun$4",
     "scala.collection.parallel.mutable.ParSet$class",
     "scala.concurrent.Future$$anonfun$zip$1$$anonfun$apply$7$$anonfun$apply$8",
     "scala.Mutable",
     "scala.util.Either$MergeableEither",
     "scala.Tuple21$",
     "scala.util.hashing.MurmurHash3$ArrayHashing$mcS$sp",
     "scala.Function15$class",
     "scala.collection.mutable.LinearSeq",
     "scala.language$",
     "scala.Function2$mcFIJ$sp$class",
     "scala.collection.parallel.ParIterableLike$FilterNot",
     "scala.runtime.AbstractFunction2$mcDII$sp",
     "scala.Tuple22$",
     "scala.collection.parallel.ParIterable",
     "scala.collection.immutable.SetProxy$class",
     "scala.io.Source$$anonfun$spaces$1",
     "scala.Function2$mcFJJ$sp",
     "scala.collection.mutable.DoubleLinkedListLike$class",
     "scala.collection.convert.Wrappers$IterableWrapper",
     "scala.Tuple2$mcCZ$sp",
     "scala.Function1$mcZJ$sp",
     "scala.collection.generic.GenTraversableFactory$$anonfun$tabulate$3$$anonfun$apply$3",
     "scala.collection.concurrent.TNode",
     "scala.collection.parallel.mutable.ParArray$$anonfun$scan$1",
     "scala.Function10",
     "scala.Array$$anonfun$tabulate$4",
     "scala.Array$$anonfun$tabulate$3",
     "scala.collection.parallel.ParIterableLike$$anonfun$splitAt$1",
     "scala.Array$$anonfun$tabulate$2",
     "scala.collection.parallel.ParIterableLike$$anonfun$take$1",
     "scala.Array$$anonfun$tabulate$1",
     "scala.collection.parallel.ParIterableLike$Product",
     "scala.collection.immutable.Seq$class",
     "scala.collection.SeqLike$CombinationsItr",
     "scala.collection.SeqViewLike$TakenWhile$class",
     "scala.Function1$mcIF$sp",
     "scala.PartialFunction$$anonfun$apply$1",
     "scala.Function0$mcD$sp$class",
     "scala.collection.immutable.Queue$EmptyQueue$",
     "scala.Function2$mcZDD$sp$class",
     "scala.collection.SeqViewLike$$anonfun$permutations$1",
     "scala.collection.parallel.Combiner",
     "scala.Function17$$anonfun$tupled$1",
     "scala.runtime.AbstractFunction2$mcVDJ$sp",
     "scala.collection.SeqLike$$anonfun$reverseMap$1",
     "scala.collection.SeqLike$$anonfun$reverseMap$2",
     "scala.collection.parallel.ParSeqLike$Corresponds$$anonfun$split$15",
     "scala.collection.parallel.ParSeqLike$Corresponds$$anonfun$split$16",
     "scala.Function22",
     "scala.util.Failure$",
     "scala.UninitializedFieldError$",
     "scala.Predef",
     "scala.collection.generic.DelegatedSignalling$class",
     "scala.collection.parallel.mutable.ParHashTable$class",
     "scala.collection.immutable.RedBlackTree$RedTree$",
     "scala.collection.SeqView$",
     "scala.concurrent.BlockContext$",
     "scala.math.Numeric$CharIsIntegral$",
     "scala.concurrent.impl.ExecutionContextImpl$",
     "scala.Function19",
     "scala.runtime.AbstractPartialFunction$mcDI$sp",
     "scala.Tuple2$mcCD$sp",
     "scala.Predef$StringFormat",
     "scala.collection.mutable.FlatHashTable$HashUtils$class",
     "scala.Function15",
     "scala.Function16",
     "scala.Function17",
     "scala.util.Failure$$anonfun$recover$1",
     "scala.Function18",
     "scala.collection.mutable.LinkedList",
     "scala.Function11",
     "scala.Function12",
     "scala.collection.script.Update$",
     "scala.Function13",
     "scala.Function14",
     "scala.Function20",
     "scala.Function21",
     "scala.Unit$",
     "scala.runtime.ZippedTraversable2$$anon$1",
     "scala.collection.parallel.mutable.ParHashSet$$anonfun$readObject$1",
     "scala.concurrent.duration.DurationConversions$spanConvert$",
     "scala.collection.parallel.immutable.HashSetCombiner$$anonfun$3",
     "scala.runtime.package$",
     "scala.collection.parallel.immutable.HashSetCombiner$$anonfun$2",
     "scala.collection.parallel.immutable.HashSetCombiner$$anonfun$1",
     "scala.sys.process.ProcessImpl$AndProcess",
     "scala.collection.generic.GenericClassTagCompanion",
     "scala.collection.immutable.WrappedString$",
     "scala.collection.mutable.LinkedHashSet",
     "scala.collection.parallel.ThreadPoolTasks$class",
     "scala.Responder$",
     "scala.collection.immutable.List$$anonfun$flatMap$1",
     "scala.collection.convert.Wrappers$DictionaryWrapper$",
     "scala.collection.generic.GenTraversableFactory$$anonfun$tabulate$4$$anonfun$apply$4",
     "scala.collection.generic.GenericTraversableTemplate$$anonfun$transpose$1",
     "scala.collection.generic.SortedSetFactory$SortedSetCanBuildFrom",
     "scala.collection.generic.GenericTraversableTemplate$$anonfun$transpose$2",
     "scala.collection.parallel.immutable.ParVector$ParVectorIterator",
     "scala.collection.Map$class",
     "scala.collection.immutable.Stream$$anonfun$take$1",
     "scala.collection.parallel.ParIterableLike$Slice$$anonfun$split$10",
     "scala.runtime.AbstractPartialFunction$mcJJ$sp",
     "scala.collection.TraversableViewLike$$anonfun$scanLeft$1",
     "scala.collection.immutable.Stream$$anonfun$take$2",
     "scala.Product2$mcID$sp",
     "scala.Tuple1$mcI$sp",
     "scala.collection.mutable.ArrayOps$",
     "scala.runtime.VolatileFloatRef",
     "scala.Function13$$anonfun$curried$1",
     "scala.collection.immutable.MapProxy",
     "scala.collection.TraversableViewLike$Forced$class",
     "scala.sys.process.ProcessImpl$Future$$anonfun$apply$4",
     "scala.collection.SeqProxyLike",
     "scala.collection.mutable.ArrayStack",
     "scala.collection.mutable.MutableList$",
     "scala.collection.SeqViewLike$ZippedAll$class",
     "scala.collection.generic.GenericOrderedCompanion",
     "scala.sys.process.ProcessImpl$Future$$anonfun$apply$1",
     "scala.util.control.ControlThrowable",
     "scala.collection.mutable.PriorityQueue",
     "scala.runtime.AbstractFunction1$mcDJ$sp",
     "scala.collection.immutable.Page",
     "scala.math.Ordering$CharOrdering$class",
     "scala.math.Ordering$Long$",
     "scala.collection.TraversableViewLike$EmptyView",
     "scala.collection.script.Start",
     "scala.concurrent.ExecutionContext$class",
     "scala.Function2$mcJDD$sp",
     "scala.concurrent.Future$$anonfun$firstCompletedOf$1",
     "scala.collection.parallel.ThreadPoolTasks$",
     "scala.collection.parallel.ParallelCollectionImplicits",
     "scala.collection.parallel.ParIterableLike$TakeWhile$$anonfun$split$13",
     "scala.reflect.ClassTag$$anon$1",
     "scala.collection.IterableViewLike$Sliced$class",
     "scala.collection.parallel.ParIterableLike$TakeWhile$$anonfun$split$14",
     "scala.sys.process.ProcessLogger$",
     "scala.concurrent.impl.Future$PromiseCompletingRunnable",
     "scala.collection.parallel.ParIterableLike$TakeWhile$$anonfun$split$15",
     "scala.concurrent.DelayedLazyVal",
     "scala.io.Source$$anonfun$2",
     "scala.sys.process.ProcessImplicits$class",
     "scala.io.Source$$anonfun$3",
     "scala.io.Source$$anonfun$1",
     "scala.collection.immutable.Stream$$anonfun$zip$1",
     "scala.math.BigDecimal$$anonfun$isValidByte$1",
     "scala.collection.TraversableLike$$anonfun$span$1",
     "scala.math.Numeric$ShortIsIntegral$class",
     "scala.collection.immutable.RedBlackTree$Tree",
     "scala.math.Ordering$ExtraImplicits$class",
     "scala.collection.mutable.LinkedList$",
     "scala.collection.mutable.Stack",
     "scala.collection.immutable.BitSet",
     "scala.None$",
     "scala.collection.convert.Wrappers$IterableWrapper$",
     "scala.collection.parallel.immutable.ParVector",
     "scala.collection.convert.Wrappers$SeqWrapper",
     "scala.Option$$anonfun$orNull$1",
     "scala.collection.SeqViewLike$Zipped",
     "scala.collection.parallel.ParIterableLike$$anonfun$zip$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$zip$2",
     "scala.collection.parallel.BufferSplitter",
     "scala.util.Success$",
     "scala.collection.mutable.WrappedArray$ofByte",
     "scala.collection.parallel.ParSeqLike$$anon$3",
     "scala.collection.mutable.LinkedListLike$$anonfun$apply$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$to$1",
     "scala.collection.parallel.IterableSplitter",
     "scala.concurrent.forkjoin.CountedCompleter",
     "scala.collection.parallel.ParSeqLike$$anon$5",
     "scala.collection.parallel.ParSeqLike$$anon$4",
     "scala.Function17$class",
     "scala.util.control.NonFatal$",
     "scala.util.Either$LeftProjection",
     "scala.collection.parallel.ParIterableLike$$anonfun$maxBy$1",
     "scala.collection.parallel.ParMapLike$DefaultKeySet$$anonfun$foreach$2",
     "scala.Function2$mcZDJ$sp$class",
     "scala.io.BufferedSource$BufferedLineIterator",
     "scala.collection.parallel.ParMapLike$DefaultKeySet$$anonfun$foreach$1",
     "scala.collection.immutable.Stream$$anonfun$init$1",
     "scala.beans.BeanDisplayName",
     "scala.util.control.Exception$$anonfun$catchingPromiscuously$1",
     "scala.Function0$mcJ$sp$class",
     "scala.collection.generic.GenTraversableFactory$$anonfun$tabulate$4",
     "scala.collection.generic.GenTraversableFactory$$anonfun$tabulate$3",
     "scala.collection.IterableViewLike$Sliced",
     "scala.collection.immutable.TrieIterator$DupIterator",
     "scala.collection.generic.GenTraversableFactory$$anonfun$tabulate$2",
     "scala.collection.mutable.ArrayOps$ofLong$",
     "scala.collection.generic.GenTraversableFactory$$anonfun$tabulate$1",
     "scala.Function2$mcDDJ$sp$class",
     "scala.io.Source$RelaxedPositioner$",
     "scala.collection.parallel.ParMapLike",
     "scala.concurrent.duration.package$DurationLong$",
     "scala.Function22$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.convert.DecorateAsScala$$anonfun$enumerationAsScalaIteratorConverter$1",
     "scala.collection.parallel.immutable.ParHashSet",
     "scala.collection.convert.Wrappers$SetWrapper$$anon$4",
     "scala.collection.TraversableOnce$OnceCanBuildFrom",
     "scala.collection.IterableViewLike$$anonfun$sliding$1$$anonfun$apply$2",
     "scala.collection.generic.BitSetFactory$$anon$1",
     "scala.collection.mutable.MultiMap",
     "scala.collection.generic.HasNewBuilder",
     "scala.PartialFunction$AndThen",
     "scala.collection.AbstractTraversable",
     "scala.runtime.ArrayRuntime",
     "scala.collection.parallel.TaskSupport",
     "scala.runtime.AbstractFunction2$mcZIJ$sp",
     "scala.sys.Prop$FileProp$",
     "scala.collection.immutable.List$$anonfun$toStream$1",
     "scala.collection.mutable.AbstractSet",
     "scala.sys.Prop$StringProp$",
     "scala.collection.mutable.AbstractSeq",
     "scala.math.Numeric$LongIsIntegral$",
     "scala.math.Ordering$FloatOrdering",
     "scala.Function2$mcZDJ$sp",
     "scala.collection.SeqView$$anon$1",
     "scala.collection.convert.Wrappers$JListWrapper$$anonfun$insertAll$1",
     "scala.Enumeration$Value",
     "scala.collection.script.Index$",
     "scala.runtime.AbstractFunction2$mcZID$sp",
     "scala.runtime.AbstractPartialFunction$mcVI$sp",
     "scala.Function3$$anonfun$tupled$1",
     "scala.util.control.Exception$Catch$$anonfun$$lessinit$greater$default$3$1",
     "scala.text.DocNest",
     "scala.collection.parallel.ParMapLike$$anon$4$$anonfun$2",
     "scala.Option$WithFilter$$anonfun$withFilter$1",
     "scala.collection.mutable.ListMap$$anonfun$get$1",
     "scala.util.matching.UnanchoredRegex",
     "scala.collection.parallel.mutable.ParArray$",
     "scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$class",
     "scala.concurrent.Future$$anonfun$failed$1",
     "scala.Function2$mcVDI$sp",
     "scala.runtime.AbstractFunction1$mcII$sp",
     "scala.runtime.AbstractFunction2$mcDID$sp",
     "scala.collection.SeqViewLike$Patched",
     "scala.languageFeature$postfixOps$",
     "scala.Product22$class",
     "scala.collection.SeqViewLike",
     "scala.Function2$mcFJD$sp",
     "scala.collection.Iterator$Leading$1",
     "scala.collection.TraversableProxy",
     "scala.collection.immutable.HashMap$HashMapCollision1$$anonfun$merge0$1",
     "scala.collection.mutable.Publisher$$anonfun$publish$1$$anonfun$apply$1",
     "scala.collection.parallel.Tasks$class",
     "scala.collection.LinearSeqLike$class",
     "scala.collection.generic.GenericTraversableTemplate",
     "scala.math.Ordering",
     "scala.collection.SeqViewLike$Zipped$class",
     "scala.AnyValCompanion",
     "scala.Function22$class",
     "scala.collection.parallel.FactoryOps",
     "scala.collection.parallel.ParIterableLike$Slice$$anonfun$14",
     "scala.math.Numeric$FloatAsIfIntegral$class",
     "scala.Function5$$anonfun$tupled$1",
     "scala.math.Ordering$OptionOrdering$class",
     "scala.collection.TraversableLike$$anonfun$find$1",
     "scala.concurrent.Future$$anonfun$filter$1",
     "scala.collection.parallel.ParIterableLike$Exists",
     "scala.collection.immutable.DefaultMap$class",
     "scala.runtime.AbstractFunction2$mcFDD$sp",
     "scala.collection.parallel.ParIterableLike$$anonfun$span$1",
     "scala.Function1$mcIF$sp$class",
     "scala.text.DocNil",
     "scala.collection.TraversableLike$$anonfun$init$1",
     "scala.collection.LinearSeq",
     "scala.collection.immutable.WrappedString$$anonfun$newBuilder$1",
     "scala.collection.mutable.IndexedSeqLike$$anon$1",
     "scala.concurrent.AwaitPermission$",
     "scala.collection.immutable.Stream$$anonfun$partition$2",
     "scala.collection.generic.TraversableForwarder",
     "scala.collection.immutable.Stream$$anonfun$partition$1",
     "scala.collection.convert.Wrappers$MutableSeqWrapper$",
     "scala.collection.convert.DecorateAsScala$$anonfun$propertiesAsScalaMapConverter$1",
     "scala.collection.concurrent.CNodeBase",
     "scala.collection.generic.GenericTraversableTemplate$$anonfun$unzip3$1",
     "scala.collection.parallel.ParIterableLike$ScanLeaf",
     "scala.collection.Searching$InsertionPoint$",
     "scala.collection.parallel.ParIterableLike$$anonfun$zipAll$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$zipAll$2",
     "scala.collection.generic.SetFactory",
     "scala.Product6$",
     "scala.collection.immutable.HashMap$HashMap1",
     "scala.util.Left",
     "scala.collection.generic.ParSetFactory$GenericCanCombineFrom",
     "scala.collection.immutable.HashMap$HashTrieMap$$anon$1",
     "scala.collection.GenSet$class",
     "scala.collection.convert.Wrappers$JMapWrapperLike$$anon$2",
     "scala.collection.convert.Wrappers$JPropertiesWrapper",
     "scala.collection.mutable.AVLTree$class",
     "scala.collection.immutable.IntMap$$anon$1",
     "scala.collection.parallel.mutable.ParFlatHashTable$ParFlatHashTableIterator$$anonfun$debugInformation$1",
     "scala.collection.immutable.ListMap$$anonfun$$plus$plus$1",
     "scala.Function7$$anonfun$tupled$1",
     "scala.Predef$ArrowAssoc",
     "scala.Product7$",
     "scala.collection.mutable.FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1",
     "scala.collection.immutable.HashMap$HashMapCollision1",
     "scala.util.hashing.MurmurHash3$ArrayHashing$mcB$sp",
     "scala.Product19$class",
     "scala.collection.immutable.Stream$StreamWithFilter$$anonfun$foreach$1",
     "scala.Int$",
     "scala.StringContext$",
     "scala.collection.parallel.immutable.ParVector$ParVectorIterator$$anonfun$psplit$2",
     "scala.collection.mutable.PriorityQueue$$anon$1",
     "scala.collection.mutable.PriorityQueue$$anon$2",
     "scala.collection.mutable.PriorityQueue$$anon$3",
     "scala.collection.mutable.IndexedSeqOptimized",
     "scala.collection.generic.DefaultSignalling",
     "scala.collection.parallel.ParIterableLike$Zip$$anonfun$16",
     "scala.io.LowPriorityCodecImplicits$class",
     "scala.Product8$",
     "scala.util.control.Exception$Catch$$anonfun$toOption$1",
     "scala.collection.mutable.ObservableMap$$anon$3",
     "scala.collection.mutable.ObservableMap$$anon$4",
     "scala.collection.parallel.immutable.ParVector$ParVectorIterator$$anonfun$psplit$1",
     "scala.collection.mutable.ObservableMap$$anon$1",
     "scala.collection.mutable.ObservableMap$$anon$2",
     "scala.concurrent.duration.package$DurationInt",
     "scala.collection.immutable.ListMap$",
     "scala.util.hashing.MurmurHash3",
     "scala.collection.Searching$Found",
     "scala.collection.TraversableViewLike$$anonfun$filterNot$1",
     "scala.util.MurmurHash$mcD$sp",
     "scala.collection.immutable.TrieIterator$$anonfun$iteratorWithSize$1",
     "scala.Product9$",
     "scala.collection.convert.Decorators$AsJavaCollection",
     "scala.collection.mutable.ArrayBuilder$ofLong",
     "scala.runtime.AbstractFunction0$mcV$sp",
     "scala.Product11",
     "scala.Product10",
     "scala.collection.immutable.PagedSeq$",
     "scala.Product2$mcJD$sp$class",
     "scala.Product19",
     "scala.collection.parallel.mutable.ParHashSet$$anonfun$debugInformation$1",
     "scala.Product18",
     "scala.runtime.AbstractFunction2$mcVDD$sp",
     "scala.Product17",
     "scala.collection.TraversableLike$$anonfun$scala$collection$TraversableLike$$sliceInternal$1",
     "scala.Product16",
     "scala.Product15",
     "scala.collection.TraversableViewLike$Transformed$$anonfun$headOption$1",
     "scala.Product14",
     "scala.Product13",
     "scala.Product12",
     "scala.Function2$mcFDJ$sp$class",
     "scala.collection.immutable.SortedMap$$anon$1$$anonfun$iteratorFrom$1",
     "scala.Function2$mcZII$sp",
     "scala.collection.generic.ImmutableSortedSetFactory",
     "scala.math.Numeric$CharIsIntegral$class",
     "scala.Product2$",
     "scala.collection.parallel.ParSet$class",
     "scala.collection.parallel.Tasks$WrappedTask",
     "scala.Product22",
     "scala.Product21",
     "scala.Function2$mcDDI$sp$class",
     "scala.Product20",
     "scala.collection.parallel.IterableSplitter$$anonfun$buildString$1",
     "scala.runtime.RichBoolean$",
     "scala.collection.parallel.ParIterableLike$Accessor",
     "scala.sys.process.ProcessBuilderImpl$FileImpl",
     "scala.collection.generic.GenericCompanion",
     "scala.collection.parallel.ParIterableLike$Foreach",
     "scala.languageFeature$higherKinds",
     "scala.collection.Iterator$$anonfun$toStream$1",
     "scala.collection.parallel.IterableSplitter$ZippedAll",
     "scala.collection.parallel.ParIterableLike$CreateScanTree",
     "scala.collection.convert.Wrappers$DictionaryWrapper",
     "scala.languageFeature",
     "scala.ref.PhantomReferenceWithWrapper",
     "scala.Function2$mcVJJ$sp$class",
     "scala.collection.immutable.StringOps",
     "scala.Product3$",
     "scala.runtime.MegaMethodCache",
     "scala.collection.mutable.OpenHashMap$",
     "scala.collection.immutable.Range$",
     "scala.reflect.ClassTag",
     "scala.collection.mutable.WrappedArray$ofFloat",
     "scala.util.matching.Regex$Replacement$class",
     "scala.collection.convert.Wrappers$MutableBufferWrapper$",
     "scala.collection.parallel.ParIterableLike$BuilderOps$class",
     "scala.annotation.meta.beanSetter",
     "scala.collection.parallel.immutable.ParHashMap$",
     "scala.Product4$",
     "scala.collection.mutable.Buffer$",
     "scala.collection.parallel.Task",
     "scala.runtime.AbstractPartialFunction$mcJD$sp",
     "scala.collection.mutable.ArrayOps$$anonfun$1",
     "scala.beans.BeanInfo",
     "scala.collection.parallel.mutable.ParSetLike$class",
     "scala.math.Ordering$UnitOrdering",
     "scala.collection.immutable.StreamViewLike$Sliced",
     "scala.runtime.Statics",
     "scala.collection.mutable.ArrayBuilder$ofRef",
     "scala.concurrent.package$",
     "scala.runtime.AbstractFunction2$mcJII$sp",
     "scala.collection.parallel.ParIterableLike$TakeWhile",
     "scala.collection.immutable.TrieIterator$$anonfun$collisionToArray$2",
     "scala.collection.immutable.TrieIterator$$anonfun$collisionToArray$1",
     "scala.Product5$",
     "scala.collection.immutable.Stream",
     "scala.runtime.ScalaRunTime",
     "scala.collection.TraversableOnce$$anonfun$max$1",
     "scala.collection.parallel.ForkJoinTaskSupport$",
     "scala.collection.mutable.Stack$StackBuilder",
     "scala.collection.concurrent.Map",
     "scala.collection.mutable.HashTable$HashUtils",
     "scala.concurrent.Await$$anonfun$ready$1",
     "scala.collection.BitSet$class",
     "scala.collection.parallel.ParSeqLike$SegmentLength",
     "scala.Function17$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.IterableViewLike$Transformed$class",
     "scala.util.matching.Regex$$anonfun$replaceAllIn$1",
     "scala.Function12$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.parallel.immutable.Repetition$ParIterator$",
     "scala.collection.parallel.ParSeqLike$LastIndexWhere$$anonfun$split$7",
     "scala.collection.parallel.ParSeqLike$LastIndexWhere$$anonfun$split$9",
     "scala.Function2$mcIDD$sp",
     "scala.collection.parallel.ParSeqLike$LastIndexWhere$$anonfun$split$8",
     "scala.collection.generic.SortedSetFactory",
     "scala.collection.mutable.LinkedList$$anonfun$newBuilder$1",
     "scala.collection.parallel.ThreadPoolTasks$WrappedTask",
     "scala.Tuple2$mcDC$sp",
     "scala.collection.parallel.SeqSplitter$Appended",
     "scala.math.LowPriorityOrderingImplicits$$anon$6",
     "scala.math.LowPriorityOrderingImplicits$$anon$7",
     "scala.collection.immutable.LongMapIterator",
     "scala.collection.IndexedSeq",
     "scala.math.Ordering$Boolean$",
     "scala.math.Ordering$FloatOrdering$class",
     "scala.collection.parallel.ParIterableLike$Collect",
     "scala.collection.immutable.IntMap$Nil$",
     "scala.collection.mutable.UnrolledBuffer$",
     "scala.collection.mutable.ArrayBuilder$ofInt",
     "scala.collection.Parallelizable$$anonfun$par$1",
     "scala.collection.parallel.mutable.ParHashMapCombiner$",
     "scala.Function0$mcC$sp$class",
     "scala.concurrent.SyncVar",
     "scala.Immutable",
     "scala.math.Numeric$DoubleIsConflicted",
     "scala.util.control.TailCalls$TailRec$$anonfun$flatMap$1",
     "scala.collection.immutable.MapLike$ImmutableDefaultKeySet",
     "scala.collection.immutable.Range",
     "scala.util.control.TailCalls$Cont",
     "scala.util.control.TailCalls$TailRec$$anonfun$flatMap$2",
     "scala.Product13$class",
     "scala.annotation.StaticAnnotation",
     "scala.collection.TraversableViewLike$Mapped$$anonfun$foreach$2",
     "scala.util.Either$RightProjection",
     "scala.collection.mutable.UnrolledBuffer$$anonfun$writeObject$1",
     "scala.collection.TraversableOnce$$anonfun$maxBy$1",
     "scala.collection.TraversableViewLike$Sliced$class",
     "scala.collection.generic.Signalling",
     "scala.Function$$anonfun$chain$1",
     "scala.Function0$mcD$sp",
     "scala.collection.TraversableViewLike$Transformed$class",
     "scala.collection.CustomParallelizable",
     "scala.Product1$",
     "scala.collection.parallel.immutable.HashMapCombiner$CreateGroupedTrie$$anonfun$7",
     "scala.Product2$mcJJ$sp$class",
     "scala.collection.mutable.MapLike$$anonfun$retain$2",
     "scala.collection.mutable.MapLike$$anonfun$retain$1",
     "scala.collection.parallel.package$CollectionsHaveToParArray",
     "scala.collection.mutable.Publisher$$anonfun$subscribe$1",
     "scala.runtime.PolyMethodCache",
     "scala.compat.Platform$",
     "scala.Function2$mcZDD$sp",
     "scala.collection.parallel.ParIterableLike$ToParCollection",
     "scala.specialized",
     "scala.collection.immutable.HashSet$HashSetCollision1$$anonfun$subsetOf0$1",
     "scala.runtime.VolatileObjectRef",
     "scala.Function1$mcFJ$sp$class",
     "scala.collection.mutable.PriorityQueueProxy",
     "scala.collection.convert.Wrappers$JCollectionWrapper",
     "scala.runtime.AbstractPartialFunction$mcZI$sp",
     "scala.collection.DebugUtils",
     "scala.Function2$mcDDD$sp",
     "scala.PartialFunction$$anonfun$runWith$1",
     "scala.collection.generic.GenericSetTemplate",
     "scala.collection.generic.GenericParMapCompanion",
     "scala.Product15$class",
     "scala.collection.parallel.ParSeqLike$$anonfun$reverseMap$1",
     "scala.math.package",
     "scala.collection.parallel.ParSeqLike$$anonfun$reverseMap$2",
     "scala.collection.TraversableViewLike$Appended",
     "scala.collection.concurrent.LNode",
     "scala.collection.mutable.ObservableBuffer$$anonfun$$plus$plus$eq$1",
     "scala.collection.IterableViewLike$FlatMapped$class",
     "scala.Function0$mcI$sp$class",
     "scala.util.control.TailCalls$Cont$",
     "scala.collection.parallel.CompositeThrowable$",
     "scala.collection.parallel.immutable.ParRange",
     "scala.runtime.AbstractFunction2$mcVII$sp",
     "scala.collection.generic.IterableForwarder$class",
     "scala.collection.parallel.FutureTasks$$anonfun$scala$collection$parallel$FutureTasks$$compute$1$3",
     "scala.math.BigDecimal$$anonfun$equals$1",
     "scala.collection.parallel.FutureTasks$$anonfun$scala$collection$parallel$FutureTasks$$compute$1$1",
     "scala.collection.parallel.FutureTasks$$anonfun$scala$collection$parallel$FutureTasks$$compute$1$2",
     "scala.io.BufferedSource",
     "scala.math.Fractional$ExtraImplicits$class",
     "scala.Function2$class",
     "scala.collection.immutable.Stack$",
     "scala.collection.TraversableProxyLike",
     "scala.collection.immutable.StreamViewLike$EmptyView",
     "scala.collection.parallel.mutable.ParTrieMapCombiner",
     "scala.io.StdIn$class",
     "scala.collection.TraversableViewLike$FlatMapped$class",
     "scala.collection.immutable.TreeSet",
     "scala.text.Document",
     "scala.sys.PropImpl",
     "scala.sys.process.ProcessBuilder$URLBuilder",
     "scala.Function2$mcFII$sp$class",
     "scala.collection.immutable.Stream$StreamWithFilter$$anonfun$withFilter$1",
     "scala.Tuple2$mcZI$sp",
     "scala.collection.immutable.Stream$$anonfun$fill$1",
     "scala.collection.Searching$InsertionPoint",
     "scala.collection.mutable.AnyRefMap$$anonfun$1",
     "scala.collection.generic.OrderedTraversableFactory",
     "scala.App",
     "scala.Predef$$eq$colon$eq",
     "scala.Function0$class",
     "scala.sys.SystemProperties$$anonfun$iterator$1",
     "scala.math.Ordering$Float$",
     "scala.concurrent.BlockContext$DefaultBlockContext$",
     "scala.collection.convert.Wrappers$",
     "scala.collection.immutable.Map$EmptyMap$",
     "scala.Enumeration$ValueSet",
     "scala.collection.parallel.immutable.package$",
     "scala.collection.IterableView",
     "scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask",
     "scala.sys.process.BasicIO$Streamed",
     "scala.Product17$class",
     "scala.collection.Iterator$$anonfun$1",
     "scala.collection.mutable.DoubleLinkedListLike$$anonfun$get$1",
     "scala.math.Numeric$BigDecimalAsIfIntegral$class",
     "scala.collection.mutable.DoubleLinkedListLike$$anonfun$get$2",
     "scala.sys.process.ProcessImplicits",
     "scala.collection.convert.WrapAsJava$class",
     "scala.collection.mutable.WrappedArray$$anon$1",
     "scala.sys.process.processInternal$",
     "scala.collection.parallel.mutable.ParHashMapCombiner$FillBlocks",
     "scala.collection.LinearSeq$class",
     "scala.collection.mutable.WrappedArray$ofShort",
     "scala.collection.SeqViewLike$$anonfun$combinations$1$$anonfun$apply$1",
     "scala.collection.convert.WrapAsScala$",
     "scala.runtime.AbstractFunction2$mcJDJ$sp",
     "scala.collection.parallel.ParIterableLike$ScanTree$class",
     "scala.Function1$mcDJ$sp",
     "scala.collection.TraversableOnce$$anonfun$min$1",
     "scala.sys.process.ProcessImpl$PipedProcesses$$anonfun$runAndExitValue$4",
     "scala.collection.mutable.MutableList$$anon$1",
     "scala.sys.process.ProcessImpl$PipedProcesses$$anonfun$runAndExitValue$3",
     "scala.collection.immutable.Map$$anonfun$withDefaultValue$1",
     "scala.collection.parallel.ParallelCollectionImplicits$$anon$4$$anon$5",
     "scala.sys.process.ProcessBuilderImpl$SequentialBuilder",
     "scala.runtime.LongRef",
     "scala.collection.generic.BitOperations$Int$class",
     "scala.beans.ScalaBeanInfo$$anonfun$2",
     "scala.reflect.ScalaSignature",
     "scala.math.Numeric$DoubleIsConflicted$class",
     "scala.Function20$class",
     "scala.runtime.AbstractFunction1$mcIF$sp",
     "scala.sys.process.ProcessBuilderImpl$AndBuilder",
     "scala.util.matching.Regex",
     "scala.collection.immutable.TrieIterator$$anon$1",
     "scala.collection.mutable.SetLike$$anonfun$$less$less$1",
     "scala.beans.ScalaBeanInfo$$anonfun$1",
     "scala.collection.convert.DecorateAsScala$$anonfun$asScalaBufferConverter$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$toSeq$1",
     "scala.collection.mutable.AnyRefMap$AnyRefMapBuilder",
     "scala.math.Ordering$DoubleOrdering$class",
     "scala.runtime.Tuple3Zipped$$anonfun$flatMap$extension$1",
     "scala.collection.parallel.immutable.ParSeq$class",
     "scala.collection.immutable.LongMap$Tip$",
     "scala.collection.generic.BitOperations$Int$$anonfun$bitString$1",
     "scala.collection.parallel.immutable.ParIterable",
     "scala.collection.SeqViewLike$Transformed$class",
     "scala.collection.parallel.FutureTasks$$anonfun$1",
     "scala.collection.parallel.FutureTasks$$anonfun$2",
     "scala.Function4$class",
     "scala.collection.immutable.StreamViewLike$Mapped",
     "scala.collection.IndexedSeqOptimized$class",
     "scala.collection.mutable.DoubleLinkedList",
     "scala.runtime.AbstractFunction2$mcZJI$sp",
     "scala.collection.parallel.AugmentedIterableIterator$class",
     "scala.collection.SeqViewLike$Filtered$class",
     "scala.collection.immutable.SortedMap$$anon$1",
     "scala.collection.immutable.SortedMap$$anon$2",
     "scala.runtime.ZippedTraversable3$$anon$1",
     "scala.collection.convert.Wrappers$JSetWrapper$",
     "scala.collection.SeqLike$CombinationsItr$$anonfun$init$1",
     "scala.collection.IterableViewLike$ZippedAll",
     "scala.collection.SeqLike$CombinationsItr$$anonfun$init$2",
     "scala.util.Sorting",
     "scala.collection.TraversableViewLike$$anonfun$tails$1$$anonfun$apply$4",
     "scala.collection.mutable.HashEntry",
     "scala.Long",
     "scala.Function22$$anonfun$curried$1",
     "scala.collection.parallel.ParMapLike$$anon$3",
     "scala.collection.parallel.ParMapLike$$anon$4",
     "scala.collection.parallel.ParMapLike$$anon$1",
     "scala.collection.TraversableViewLike",
     "scala.collection.concurrent.INode$",
     "scala.collection.parallel.ParMapLike$$anon$2",
     "scala.collection.mutable.Map",
     "scala.Function2$mcJJJ$sp$class",
     "scala.collection.parallel.ParIterableLike$Zip$$anonfun$split$19",
     "scala.util.matching.Regex$Groups$",
     "scala.runtime.StringAdd",
     "scala.Function9$$anonfun$tupled$1",
     "scala.collection.immutable.List$$anon$1",
     "scala.util.matching.Regex$MatchData",
     "scala.math.Numeric$ExtraImplicits$class",
     "scala.Predef$StringFormat$",
     "scala.Function1$mcII$sp",
     "scala.collection.TraversableViewLike$$anonfun$scanRight$1",
     "scala.collection.parallel.mutable.ParHashMap",
     "scala.collection.parallel.mutable.LazyCombiner$class",
     "scala.concurrent.Future$$anonfun$transform$1$$anonfun$apply$2",
     "scala.concurrent.Future$$anonfun$transform$1$$anonfun$apply$1",
     "scala.collection.immutable.ListMap$Node$$anonfun$remove0$1",
     "scala.Function8$class",
     "scala.collection.mutable.AbstractBuffer",
     "scala.collection.generic.SeqFactory",
     "scala.runtime.ScalaRunTime$$anonfun$scala$runtime$ScalaRunTime$$inner$1$4",
     "scala.runtime.ScalaRunTime$$anonfun$scala$runtime$ScalaRunTime$$inner$1$3",
     "scala.Cloneable",
     "scala.runtime.ScalaRunTime$$anonfun$scala$runtime$ScalaRunTime$$inner$1$2",
     "scala.runtime.ScalaRunTime$$anonfun$scala$runtime$ScalaRunTime$$inner$1$1",
     "scala.sys.process.ProcessBuilderImpl$Dummy",
     "scala.Function11$$anonfun$curried$1",
     "scala.runtime.NonLocalReturnControl$mcZ$sp",
     "scala.Tuple2$mcJZ$sp",
     "scala.Product1$mcI$sp",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator",
     "scala.DeprecatedPredef$class",
     "scala.collection.mutable.DefaultMapModel$$anonfun$iterator$1",
     "scala.sys.process.ProcessImpl$class",
     "scala.Array$$anonfun$ofDim$3",
     "scala.collection.mutable.HashTable$class",
     "scala.collection.parallel.mutable.ParHashSet$",
     "scala.Array$$anonfun$ofDim$4",
     "scala.Array$$anonfun$ofDim$2",
     "scala.runtime.AbstractFunction2$mcIJI$sp",
     "scala.sys.process.BasicIO$Uncloseable$$anon$1",
     "scala.collection.TraversableLike",
     "scala.sys.process.BasicIO$Uncloseable$$anon$2",
     "scala.collection.parallel.ParIterableLike$$anonfun$partition$1",
     "scala.concurrent.duration.package$IntMult",
     "scala.LowPriorityImplicits$$anon$4",
     "scala.ref.ReferenceWithWrapper",
     "scala.Function2$mcIDI$sp$class",
     "scala.Short$",
     "scala.concurrent.Future$$anonfun$flatMap$1$$anonfun$apply$3",
     "scala.concurrent.Future$$anonfun$sequence$1$$anonfun$apply$10$$anonfun$apply$11",
     "scala.collection.GenTraversableOnce",
     "scala.Function6$class",
     "scala.runtime.NonLocalReturnControl$mcD$sp",
     "scala.collection.generic.IdleSignalling$",
     "scala.collection.immutable.TreeMap$$anonfun$$plus$plus$1",
     "scala.runtime.AbstractFunction0$mcS$sp",
     "scala.collection.immutable.Traversable",
     "scala.collection.parallel.ParIterableLike$NonDivisible",
     "scala.Function2$mcVJJ$sp",
     "scala.collection.generic.DelegatedSignalling",
     "scala.Function2$mcJJD$sp$class",
     "scala.collection.mutable.SetProxy$$anon$1",
     "scala.collection.immutable.SortedSet$",
     "scala.annotation.meta.companionObject",
     "scala.Tuple2$mcJD$sp",
     "scala.collection.generic.IdleSignalling",
     "scala.collection.Seq$",
     "scala.collection.script.End",
     "scala.collection.immutable.IntMapUtils",
     "scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory",
     "scala.collection.immutable.LongMap$$anonfun$apply$1",
     "scala.collection.SeqViewLike$Prepended$$anonfun$iterator$1",
     "scala.runtime.AbstractFunction1$mcFD$sp",
     "scala.collection.SeqLike$CombinationsItr$$anonfun$next$2",
     "scala.collection.SeqLike$CombinationsItr$$anonfun$next$1",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$copy2builder$1$$anonfun$apply$mcV$sp$1",
     "scala.reflect.Manifest",
     "scala.collection.IterableViewLike$Filtered$class",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$copy2builder$1$$anonfun$apply$mcV$sp$3",
     "scala.concurrent.ExecutionContext$$anonfun$defaultReporter$1",
     "scala.Function17$$anonfun$curried$1",
     "scala.collection.parallel.mutable.ParMap$",
     "scala.collection.immutable.Range$Double$$anonfun$apply$1",
     "scala.annotation.compileTimeOnly",
     "scala.collection.parallel.IterableSplitter$Taken$$anonfun$takeSeq$1",
     "scala.collection.parallel.SeqSplitter$$anonfun$psplitWithSignalling$1",
     "scala.runtime.AbstractPartialFunction$mcDD$sp",
     "scala.collection.immutable.Stack$$anonfun$pushAll$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$toParMap$1",
     "scala.collection.parallel.ParIterableLike$ZipAll$$anonfun$17",
     "scala.util.Success",
     "scala.Product16$class",
     "scala.collection.CustomParallelizable$class",
     "scala.Unit",
     "scala.math.Ordering$UnitOrdering$class",
     "scala.collection.parallel.ParIterableLike$$anonfun$drop$1",
     "scala.annotation.meta.beanGetter",
     "scala.collection.SortedMap",
     "scala.runtime.AbstractFunction2$mcVID$sp",
     "scala.Function2$mcDJD$sp$class",
     "scala.collection.parallel.mutable.ParHashSetCombiner$$anon$1",
     "scala.collection.parallel.mutable.ParHashSetCombiner$$anon$2",
     "scala.math.Equiv$$anon$2",
     "scala.collection.parallel.mutable.ResizableParArrayCombiner",
     "scala.math.Equiv$$anon$3",
     "scala.collection.BitSetLike$$anonfun$subsetOf$1",
     "scala.math.Equiv$$anon$1",
     "scala.math.Equiv$$anon$4",
     "scala.sys.process.ProcessImpl$CompoundProcess",
     "scala.collection.generic.Subtractable$$anonfun$$minus$minus$1",
     "scala.sys.process.ProcessBuilderImpl$URLImpl",
     "scala.collection.mutable.Set",
     "scala.runtime.AbstractPartialFunction$mcVJ$sp",
     "scala.collection.mutable.Seq",
     "scala.collection.parallel.ParSeqLike$SameElements$$anonfun$split$11",
     "scala.collection.SeqViewLike$$anonfun$intersect$1",
     "scala.concurrent.Future$$anonfun$traverse$1$$anonfun$apply$12$$anonfun$apply$13",
     "scala.collection.immutable.SortedMap$DefaultKeySortedSet",
     "scala.collection.mutable.IndexedSeqView$Filtered$class",
     "scala.collection.parallel.ParSeqLike$SameElements$$anonfun$split$10",
     "scala.concurrent.Future$$anonfun$collect$1",
     "scala.util.control.Exception",
     "scala.Function16$class",
     "scala.util.control.Exception$$anonfun$catching$1",
     "scala.collection.SortedMapLike$$anon$1$$anonfun$valuesIteratorFrom$1",
     "scala.util.DynamicVariable$$anon$1",
     "scala.Function1$mcVF$sp$class",
     "scala.collection.immutable.HashMap$HashTrieMap",
     "scala.collection.parallel.ParIterableLike$BuilderOps$Otherwise",
     "scala.collection.immutable.IntMap$$anonfun$intersection$1",
     "scala.concurrent.forkjoin.ForkJoinTask$ExceptionNode",
     "scala.collection.immutable.Queue$$anonfun$newBuilder$1",
     "scala.util.control.Breaks$TryBlock",
     "scala.annotation.meta.package$",
     "scala.runtime.RichLong",
     "scala.collection.parallel.mutable.ParMap$WithDefault",
     "scala.runtime.ScalaWholeNumberProxy",
     "scala.collection.script.Message",
     "scala.collection.concurrent.TrieMap",
     "scala.collection.SeqLike$$anonfun$reverse$2",
     "scala.collection.SeqLike$$anonfun$reverse$1",
     "scala.collection.Set$",
     "scala.reflect.ManifestFactory$SingletonTypeManifest",
     "scala.collection.mutable.LinkedHashMap$$anonfun$writeObject$1",
     "scala.collection.Seq$class",
     "scala.Function2$mcFDD$sp",
     "scala.Proxy$class",
     "scala.Function11$class",
     "scala.Proxy$Typed",
     "scala.concurrent.ExecutionContextExecutor",
     "scala.collection.parallel.ParIterableLike$$anonfun$10",
     "scala.annotation.meta.languageFeature",
     "scala.collection.parallel.ParSetLike$class",
     "scala.collection.TraversableViewLike$DroppedWhile$class",
     "scala.collection.parallel.ParIterableLike$$anonfun$11",
     "scala.Function1$mcZD$sp",
     "scala.reflect.NameTransformer$$anonfun$1",
     "scala.math.Numeric$FloatIsFractional$",
     "scala.collection.mutable.FlatHashTable$$anon$1",
     "scala.collection.mutable.FlatHashTable$$anon$2",
     "scala.reflect.NameTransformer$$anonfun$2",
     "scala.collection.convert.Wrappers$MapWrapper$$anon$1$$anon$5",
     "scala.collection.IterableViewLike$AbstractTransformed",
     "scala.collection.mutable.ObservableBuffer$class",
     "scala.collection.SortedMap$Default",
     "scala.Predef$ArrayCharSequence",
     "scala.collection.immutable.IntMap$Tip",
     "scala.collection.immutable.StreamViewLike$Filtered",
     "scala.collection.parallel.mutable.ParHashMapCombiner$AddingHashTable",
     "scala.collection.mutable.IndexedSeqView$Transformed$class",
     "scala.runtime.AbstractFunction1$mcVF$sp",
     "scala.sys.process.FileProcessLogger",
     "scala.Int",
     "scala.collection.parallel.ParIterableLike$$anonfun$6$$anonfun$apply$1",
     "scala.util.PropertiesTrait$$anonfun$4",
     "scala.util.PropertiesTrait$$anonfun$3",
     "scala.util.PropertiesTrait$$anonfun$2",
     "scala.util.PropertiesTrait$$anonfun$1",
     "scala.PartialFunction$class",
     "scala.collection.mutable.ArrayBuilder$ofShort",
     "scala.collection.mutable.ArrayOps$ofFloat$",
     "scala.concurrent.forkjoin.ForkJoinPool$ForkJoinWorkerThreadFactory",
     "scala.StringContext$$anonfun$raw$1",
     "scala.collection.immutable.StreamViewLike$Patched",
     "scala.concurrent.duration.package$fromNow$",
     "scala.collection.generic.Subtractable",
     "scala.collection.immutable.NumericRange$$anon$1",
     "scala.Function4$$anonfun$tupled$1",
     "scala.sys.package",
     "scala.util.control.Breaks$$anon$1",
     "scala.io.Codec$$anonfun$1",
     "scala.math.BigDecimal$$anonfun$isValidInt$1",
     "scala.collection.parallel.ParSeqLike$Elements$$anonfun$psplit$1",
     "scala.runtime.AbstractFunction2$mcJJJ$sp",
     "scala.Product20$class",
     "scala.collection.MapLike$MappedValues$$anonfun$iterator$2",
     "scala.collection.MapLike$MappedValues$$anonfun$iterator$3",
     "scala.Tuple2$mcDZ$sp",
     "scala.collection.parallel.ParIterableLike$ScanNode$",
     "scala.util.matching.Regex$Match$$anonfun$ends$1",
     "scala.Function2$mcJDI$sp",
     "scala.collection.mutable.Queue$$anonfun$newBuilder$1",
     "scala.runtime.AbstractFunction2$mcZDJ$sp",
     "scala.collection.SeqLike$$anonfun$intersect$1",
     "scala.collection.parallel.ParSeqLike$Elements$$anonfun$psplit$2",
     "scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks",
     "scala.collection.convert.Wrappers$IterableWrapperTrait",
     "scala.concurrent.duration.Deadline$DeadlineIsOrdered$",
     "scala.Function$$anonfun$chain$1$$anonfun$apply$1",
     "scala.sys.process.ProcessImpl$DummyProcess",
     "scala.concurrent.duration.Duration",
     "scala.reflect.ClassTag$class",
     "scala.collection.SeqLike$$anonfun$diff$1",
     "scala.Tuple1$mcD$sp",
     "scala.runtime.Tuple2Zipped$$anonfun$filter$extension$1",
     "scala.collection.parallel.IterableSplitter$Appended",
     "scala.collection.mutable.SynchronizedBuffer",
     "scala.math.ScalaNumber",
     "scala.ref.ReferenceWrapper",
     "scala.collection.Searching",
     "scala.collection.SetLike$$anonfun$$plus$plus$1",
     "scala.Function11$$anonfun$tupled$1",
     "scala.Predef$DummyImplicit",
     "scala.reflect.ManifestFactory$PhantomManifest",
     "scala.Function1$mcDI$sp",
     "scala.collection.convert.WrapAsJava",
     "scala.concurrent.ExecutionContext",
     "scala.Function2$mcDIJ$sp",
     "scala.Tuple2$mcDD$sp",
     "scala.util.hashing.MurmurHash3$$anonfun$orderedHash$1",
     "scala.App$$anonfun$main$1",
     "scala.collection.SeqLike$$anonfun$sorted$1",
     "scala.collection.parallel.SeqSplitter$$anonfun$splitWithSignalling$2",
     "scala.runtime.NonLocalReturnControl$mcS$sp",
     "scala.collection.concurrent.CNode$",
     "scala.collection.parallel.FutureTasks$$anonfun$scala$collection$parallel$FutureTasks$$compute$1$2$$anonfun$apply$1$$anonfun$apply$2",
     "scala.collection.parallel.ParSeqLike$Elements$$anonfun$psplit$2$$anon$2",
     "scala.collection.immutable.TreeMap",
     "scala.collection.immutable.Stream$$anonfun$range$1",
     "scala.sys.BooleanProp",
     "scala.collection.mutable.ArrayOps$ofBoolean",
     "scala.Function4$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.mutable.IndexedSeqView$",
     "scala.runtime.Tuple3Zipped$$anonfun$foreach$extension$1",
     "scala.concurrent.duration.package$LongMult$",
     "scala.Specializable",
     "scala.collection.immutable.SortedMap$Default$class",
     "scala.collection.parallel.ParIterableLike$Accessor$class",
     "scala.collection.immutable.Iterable",
     "scala.collection.mutable.LongMap",
     "scala.sys.process.ProcessBuilderImpl$Simple$$anonfun$2",
     "scala.Function19$$anonfun$tupled$1",
     "scala.concurrent.BatchingExecutor$Batch",
     "scala.collection.SeqLike$",
     "scala.Function2$mcIII$sp",
     "scala.sys.process.ProcessLogger$$anon$1",
     "scala.collection.parallel.ParallelCollectionImplicits$$anon$2$$anon$3",
     "scala.collection.parallel.mutable.UnrolledParArrayCombiner",
     "scala.collection.generic.BitSetFactory",
     "scala.collection.mutable.WrappedArray$ofDouble",
     "scala.collection.mutable.BufferLike$class",
     "scala.collection.mutable.OpenHashMap$$anonfun$retain$1",
     "scala.collection.generic.GenSeqFactory",
     "scala.annotation.meta.param",
     "scala.Product11$class",
     "scala.math.Ordering$Byte$",
     "scala.sys.ShutdownHookThread$$anon$1",
     "scala.Function5$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.convert.Wrappers$IteratorWrapper",
     "scala.collection.immutable.PagedSeq$$anonfun$toString$1",
     "scala.collection.immutable.SortedMap$",
     "scala.reflect.ClassManifestDeprecatedApis$class",
     "scala.sys.process.ProcessBuilderImpl$Simple$$anonfun$4",
     "scala.sys.process.ProcessBuilderImpl$Simple$$anonfun$3",
     "scala.collection.parallel.immutable.ParMap$WithDefault$$anonfun$withDefaultValue$2",
     "scala.runtime.Tuple3Zipped$$anonfun$forall$extension$1",
     "scala.Product8$class",
     "scala.collection.parallel.AdaptiveWorkStealingThreadPoolTasks",
     "scala.util.hashing.MurmurHash3$ArrayHashing$mcJ$sp",
     "scala.collection.immutable.MapProxy$class",
     "scala.collection.parallel.mutable.ParHashMap$$anonfun$writeObject$1",
     "scala.math.Numeric$FloatIsConflicted",
     "scala.Function2$mcJDD$sp$class",
     "scala.collection.parallel.immutable.ParRange$ParRangeIterator$",
     "scala.collection.parallel.ParSeqLike$$anonfun$updated$2",
     "scala.collection.parallel.ParSeqLike$$anonfun$updated$1",
     "scala.collection.TraversableOnce$$anonfun$reduceLeft$1",
     "scala.collection.generic.BitOperations$Int$$anonfun$bits$1",
     "scala.sys.package$",
     "scala.util.control.NonFatal",
     "scala.Predef$",
     "scala.collection.script.End$",
     "scala.collection.generic.BitOperations$Long$class",
     "scala.util.hashing.ByteswapHashing",
     "scala.util.control.NoStackTrace$class",
     "scala.collection.script.Location",
     "scala.collection.TraversableOnce$$anonfun$addString$1",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$psplit$1",
     "scala.collection.IndexedSeqOptimized",
     "scala.collection.immutable.LongMap$",
     "scala.collection.SetLike$SubsetsItr$$anonfun$next$2",
     "scala.runtime.AbstractFunction1$mcIJ$sp",
     "scala.collection.TraversableLike$WithFilter",
     "scala.collection.generic.GenSetFactory$$anon$1",
     "scala.concurrent.BatchingExecutor$Batch$$anonfun$run$1",
     "scala.math.Ordering$ExtraImplicits",
     "scala.ref.SoftReference",
     "scala.collection.parallel.ParIterableLike$Transformer",
     "scala.concurrent.BatchingExecutor$class",
     "scala.collection.immutable.StringLike$$anonfun$formatLocal$1",
     "scala.sys.process.ProcessImpl$PipedProcesses",
     "scala.remote",
     "scala.collection.mutable.FlatHashTable$$anonfun$checkConsistent$1",
     "scala.Array",
     "scala.runtime.EmptyMethodCache",
     "scala.runtime.AbstractPartialFunction$mcIF$sp",
     "scala.collection.IterableViewLike$Zipped",
     "scala.collection.parallel.AdaptiveWorkStealingTasks",
     "scala.Function0$mcZ$sp",
     "scala.collection.parallel.ThreadPoolTaskSupport$",
     "scala.collection.mutable.Seq$class",
     "scala.Product19$",
     "scala.collection.mutable.Stack$$anonfun$pushAll$1",
     "scala.util.control.Breaks$",
     "scala.Product1$mcI$sp$class",
     "scala.reflect.ManifestFactory$$anon$11",
     "scala.reflect.ManifestFactory$$anon$12",
     "scala.reflect.ManifestFactory$$anon$10",
     "scala.runtime.AbstractPartialFunction$mcZJ$sp",
     "scala.util.control.Exception$$anon$1",
     "scala.collection.immutable.RedBlackTree$ValuesIterator",
     "scala.collection.mutable.ArrayOps$ofFloat",
     "scala.collection.mutable.LongMap$$anonfun$apply$1",
     "scala.reflect.ManifestFactory$$anon$17",
     "scala.reflect.ManifestFactory$$anon$15",
     "scala.reflect.ManifestFactory$$anon$16",
     "scala.Function9$$anonfun$curried$1$$anonfun$apply$1",
     "scala.Tuple9$",
     "scala.reflect.ManifestFactory$$anon$13",
     "scala.reflect.ManifestFactory$$anon$14",
     "scala.Product18$",
     "scala.collection.generic.IsSeqLike$$anon$1$$anonfun$1",
     "scala.collection.mutable.IndexedSeqLike",
     "scala.runtime.AbstractFunction2$mcJDI$sp",
     "scala.collection.generic.BitOperations$Int$",
     "scala.Product2$mcDI$sp$class",
     "scala.collection.generic.FilterMonadic",
     "scala.collection.parallel.ParIterableLike$$anon$13$$anon$14",
     "scala.runtime.AbstractFunction2$mcFDI$sp",
     "scala.util.hashing.Hashing$$anon$1",
     "scala.collection.GenIterableLike",
     "scala.Equals",
     "scala.math.BigDecimal$$anonfun$isValidShort$1",
     "scala.Function3$$anonfun$curried$1$$anonfun$apply$1$$anonfun$apply$2",
     "scala.reflect.ScalaLongSignature",
     "scala.Product17$",
     "scala.Function1$mcJJ$sp",
     "scala.collection.immutable.IntMapUtils$",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$reverse2combiner$1",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$reverse2combiner$2",
     "scala.collection.TraversableOnce$$anonfun$size$1",
     "scala.Function20$$anonfun$curried$1",
     "scala.languageFeature$higherKinds$",
     "scala.collection.immutable.SortedMap$Default$$anonfun$$minus$2",
     "scala.collection.immutable.SortedMap$Default$$anonfun$$minus$1",
     "scala.collection.generic.Sizing",
     "scala.Specializable$Group",
     "scala.concurrent.Lock",
     "scala.PartialFunction$OrElse",
     "scala.collection.SeqLike",
     "scala.collection.mutable.WrappedArray$ofUnit",
     "scala.Product16$",
     "scala.collection.mutable.ObservableMap",
     "scala.collection.parallel.HavingForkJoinPool",
     "scala.collection.parallel.ThreadPoolTasks$$anonfun$execute$1",
     "scala.Enumeration$ValueSet$$anon$1",
     "scala.Function6$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.mutable.Publisher$$anon$1",
     "scala.collection.parallel.SeqSplitter$Mapped$$anonfun$psplit$2",
     "scala.concurrent.duration.FiniteDuration$",
     "scala.io.Source$$anonfun$fromFile$2",
     "scala.collection.parallel.IterableSplitter$Taken$$anonfun$split$1",
     "scala.sys.BooleanProp$",
     "scala.Function1$mcVD$sp",
     "scala.Enumeration$ValueSet$$anon$2",
     "scala.concurrent.Channel$LinkedList",
     "scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom",
     "scala.concurrent.Future$$anonfun$recoverWith$1$$anonfun$apply$6",
     "scala.concurrent.Future$$anonfun$recoverWith$1$$anonfun$apply$5",
     "scala.collection.generic.GenericTraversableTemplate$$anonfun$transpose$1$$anonfun$apply$1",
     "scala.util.matching.Regex$Match$",
     "scala.PartialFunction",
     "scala.collection.generic.SliceInterval$",
     "scala.collection.generic.BitOperations$Long",
     "scala.util.control.BreakControl",
     "scala.collection.convert.DecorateAsJava$$anonfun$mapAsJavaMapConverter$1",
     "scala.math.Ordering$Double$",
     "scala.Function1$mcID$sp$class",
     "scala.util.control.Exception$$anonfun$failAsValue$1",
     "scala.collection.parallel.immutable.ParHashMap",
     "scala.collection.convert.package$",
     "scala.collection.parallel.ParIterableLike$ResultMapping",
     "scala.collection.mutable.HashMap$$anon$4",
     "scala.collection.mutable.HashMap$$anon$3",
     "scala.collection.mutable.HashMap$$anon$2",
     "scala.collection.generic.package$",
     "scala.collection.parallel.ParSeqLike$Elements$$anonfun$1",
     "scala.runtime.RichException",
     "scala.Function8$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.convert.Wrappers$MapWrapper$$anon$1",
     "scala.Enumeration$ValueSet$",
     "scala.collection.mutable.HashMap$$anon$1",
     "scala.Enumeration$$anonfun$scala$Enumeration$$nameOf$1",
     "scala.io.Position$",
     "scala.util.MurmurHash$mcI$sp",
     "scala.sys.process.ProcessImpl$SequentialProcess$$anonfun$runAndExitValue$1",
     "scala.sys.process.ProcessImpl$SequentialProcess$$anonfun$runAndExitValue$2",
     "scala.collection.IterableViewLike$DroppedWhile",
     "scala.sys.process.ProcessImpl$SequentialProcess$$anonfun$runAndExitValue$5",
     "scala.collection.parallel.ParIterableLike$$anon$9",
     "scala.collection.parallel.ParIterableLike$$anon$7",
     "scala.math.Ordering$DoubleOrdering$$anon$2",
     "scala.collection.parallel.ParIterableLike$$anon$8",
     "scala.collection.parallel.ParIterableLike$$anon$5",
     "scala.collection.parallel.ParIterableLike$$anon$6",
     "scala.Function2$mcJJI$sp$class",
     "scala.collection.parallel.ParIterableLike$$anon$4",
     "scala.Function2$mcIDD$sp$class",
     "scala.io.Source$$anonfun$fromFile$1",
     "scala.collection.mutable.Queue",
     "scala.collection.mutable.AbstractMap",
     "scala.collection.DebugUtils$$anonfun$buildString$1",
     "scala.math.Numeric$CharIsIntegral",
     "scala.collection.generic.IsSeqLike$",
     "scala.collection.SortedSet$",
     "scala.Function14$$anonfun$tupled$1",
     "scala.Product1$mcJ$sp",
     "scala.collection.MapLike$FilteredKeys$$anonfun$foreach$1",
     "scala.util.Try$WithFilter",
     "scala.languageFeature$postfixOps",
     "scala.collection.MapLike$$anon$2",
     "scala.collection.MapLike$$anon$1",
     "scala.collection.immutable.VectorIterator",
     "scala.Function2$mcZJI$sp$class",
     "scala.collection.TraversableLike$$anonfun$forall$1$$anonfun$apply$mcV$sp$2",
     "scala.collection.convert.DecorateAsJava$$anonfun$seqAsJavaListConverter$1",
     "scala.runtime.ZippedTraversable2$",
     "scala.Product11$",
     "scala.collection.mutable.GrowingBuilder",
     "scala.collection.script.Start$",
     "scala.runtime.AbstractFunction2$mcDJI$sp",
     "scala.sys.process.ProcessCreation$class",
     "scala.util.Properties$",
     "scala.Function5$$anonfun$curried$1",
     "scala.Tuple2$mcZJ$sp",
     "scala.collection.immutable.LinearSeq",
     "scala.util.Properties",
     "scala.collection.mutable.ArrayBuilder$ofFloat",
     "scala.Product10$",
     "scala.runtime.RichChar$",
     "scala.collection.immutable.VectorPointer$class",
     "scala.runtime.ZippedTraversable3$",
     "scala.Function2$mcIJJ$sp$class",
     "scala.Function2$mcVJI$sp",
     "scala.collection.IterableLike$$anonfun$zipWithIndex$1",
     "scala.collection.mutable.ArrayLike$$anon$1",
     "scala.collection.mutable.MultiMap$class",
     "scala.collection.parallel.TraversableOps$class",
     "scala.collection.parallel.immutable.ParIterable$class",
     "scala.runtime.AbstractFunction2$mcIDD$sp",
     "scala.math.Integral$IntegralOps",
     "scala.ref.WeakReference",
     "scala.collection.immutable.NumericRange$$anon$1$$anonfun$foreach$1",
     "scala.collection.parallel.mutable.ParMapLike$class",
     "scala.Function2$mcZII$sp$class",
     "scala.collection.concurrent.FailedNode",
     "scala.collection.DefaultMap",
     "scala.collection.immutable.MapLike$$anon$1",
     "scala.collection.immutable.MapLike$$anon$2",
     "scala.util.Failure",
     "scala.collection.mutable.MapLike$$anonfun$transform$1",
     "scala.collection.SortedMapLike$$anon$1$$anonfun$iteratorFrom$1",
     "scala.sys.process.ProcessBuilderImpl$BasicBuilder",
     "scala.collection.concurrent.RestartException$",
     "scala.collection.immutable.IntMap$",
     "scala.collection.immutable.TreeMap$",
     "scala.collection.immutable.HashSet$EmptyHashSet$",
     "scala.collection.immutable.IntMapValueIterator",
     "scala.collection.parallel.mutable.ParMap$class",
     "scala.collection.parallel.immutable.ParHashSet$",
     "scala.collection.immutable.PagedSeq$$anonfun$fromLines$1",
     "scala.collection.immutable.Stream$$anonfun$iterate$1",
     "scala.Array$$anonfun$apply$5",
     "scala.Array$$anonfun$apply$4",
     "scala.Array$$anonfun$apply$7",
     "scala.math.Ordering$Implicits$",
     "scala.Array$$anonfun$apply$6",
     "scala.Array$$anonfun$apply$1",
     "scala.collection.TraversableOnce$$anonfun$toMap$1",
     "scala.AnyVal",
     "scala.Array$$anonfun$apply$3",
     "scala.Array$$anonfun$apply$2",
     "scala.Product2$mcJD$sp",
     "scala.Function22$$anonfun$tupled$1",
     "scala.collection.parallel.ParSeqLike$$anonfun$distinct$1",
     "scala.Function2$mcIDJ$sp",
     "scala.collection.generic.IsTraversableLike",
     "scala.collection.mutable.MapBuilder",
     "scala.collection.TraversableViewLike$class",
     "scala.Function2$mcDJD$sp",
     "scala.Function1$mcJD$sp$class",
     "scala.collection.immutable.NumericRange$Inclusive",
     "scala.collection.TraversableOnce$$anonfun$foldLeft$1",
     "scala.collection.mutable.ObservableMap$class",
     "scala.Product15$",
     "scala.sys.process.BasicIO$$anonfun$processErrFully$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$collect$1",
     "scala.concurrent.ThreadPoolRunner$class",
     "scala.collection.parallel.ParIterableLike$$anonfun$collect$2",
     "scala.collection.mutable.FlatHashTable",
     "scala.collection.mutable.History",
     "scala.Array$$anonfun$apply$9",
     "scala.UninitializedError",
     "scala.Array$$anonfun$apply$8",
     "scala.collection.parallel.FutureTasks$$anonfun$exec$1",
     "scala.collection.immutable.TrieIterator",
     "scala.concurrent.impl.Future",
     "scala.annotation.meta.setter",
     "scala.Function2$mcIIJ$sp$class",
     "scala.Product14$",
     "scala.collection.mutable.Queue$",
     "scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask",
     "scala.collection.immutable.Stream$$anon$1",
     "scala.math.Numeric$BigIntIsIntegral$",
     "scala.collection.parallel.ParMapLike$class",
     "scala.collection.generic.OrderedTraversableFactory$GenericCanBuildFrom",
     "scala.collection.mutable.LongMap$LongMapBuilder",
     "scala.collection.generic.GenTraversableFactory$$anonfun$concat$3",
     "scala.collection.generic.GenTraversableFactory$$anonfun$concat$1",
     "scala.collection.immutable.LongMap$$anonfun$intersection$1",
     "scala.collection.generic.GenTraversableFactory$$anonfun$concat$2",
     "scala.collection.TraversableViewLike$Transformed",
     "scala.collection.mutable.Map$class",
     "scala.collection.package$$anon$1",
     "scala.runtime.RichInt$",
     "scala.collection.parallel.mutable.ParHashSetCombiner$AddingFlatHashTable",
     "scala.collection.AbstractIterable",
     "scala.collection.parallel.mutable.ParIterable$$anonfun$toSeq$1",
     "scala.Product13$",
     "scala.Function2$mcFID$sp$class",
     "scala.collection.concurrent.TrieMap$MangledHashing",
     "scala.collection.parallel.ParIterableLike$class",
     "scala.Function7$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.generic.Growable$class",
     "scala.collection.parallel.mutable.ParHashTable",
     "scala.runtime.Nothing$",
     "scala.Function2$mcJJJ$sp",
     "scala.sys.process.ProcessBuilderImpl$FileOutput$$anonfun$$lessinit$greater$3",
     "scala.Tuple2$mcIC$sp",
     "scala.collection.IterableViewLike$Forced",
     "scala.collection.generic.IsTraversableOnce$$anon$2",
     "scala.sys.process.ProcessBuilderImpl$ThreadBuilder$$anonfun$1",
     "scala.collection.generic.IsTraversableOnce$$anon$1",
     "scala.sys.process.ProcessBuilder$Sink$class",
     "scala.annotation.Annotation",
     "scala.collection.generic.GenMapFactory",
     "scala.math.Equiv$",
     "scala.collection.parallel.AdaptiveWorkStealingThreadPoolTasks$class",
     "scala.collection.IterableLike$class",
     "scala.concurrent.Future$",
     "scala.Product12$",
     "scala.util.control.Exception$$anonfun$scala$util$control$Exception$$wouldMatch$1",
     "scala.collection.TraversableOnce$$anonfun$reversed$1",
     "scala.collection.mutable.Publisher",
     "scala.math.Equiv",
     "scala.runtime.AbstractFunction0$mcB$sp",
     "scala.collection.SortedMapLike$$anon$1",
     "scala.collection.SortedMapLike$$anon$2",
     "scala.collection.immutable.RedBlackTree$BlackTree",
     "scala.collection.parallel.ParSeqLike$SameElements",
     "scala.Function0$mcZ$sp$class",
     "scala.math.Ordering$$anonfun$by$1",
     "scala.collection.parallel.ParIterableLike$SignallingOps",
     "scala.sys.process.processInternal",
     "scala.math.BigInt$",
     "scala.Function2$mcZIJ$sp$class",
     "scala.collection.parallel.mutable.ResizableParArrayCombiner$",
     "scala.math.Ordering$LongOrdering$class",
     "scala.collection.mutable.ArrayOps$$anonfun$flatten$1",
     "scala.concurrent.duration.package$DurationDouble",
     "scala.collection.mutable.ArrayOps$$anonfun$flatten$2",
     "scala.collection.SeqViewLike$EmptyView",
     "scala.collection.convert.Wrappers",
     "scala.reflect.ManifestFactory$$anon$2",
     "scala.collection.immutable.HashMap$Merger",
     "scala.reflect.ManifestFactory$$anon$3",
     "scala.reflect.ManifestFactory$$anon$4",
     "scala.reflect.ManifestFactory$$anon$5",
     "scala.reflect.ManifestFactory$$anon$1",
     "scala.Enumeration",
     "scala.concurrent.Await",
     "scala.reflect.ManifestFactory$$anon$6",
     "scala.reflect.ManifestFactory$$anon$7",
     "scala.reflect.ManifestFactory$$anon$8",
     "scala.reflect.ManifestFactory$$anon$9",
     "scala.sys.process.Process$",
     "scala.collection.generic.GenericClassTagTraversableTemplate",
     "scala.collection.parallel.RemainsIterator$class",
     "scala.collection.mutable.LinearSeq$",
     "scala.math.PartiallyOrdered$class",
     "scala.runtime.AbstractPartialFunction$mcZD$sp",
     "scala.Double",
     "scala.collection.IterableViewLike$Mapped$class",
     "scala.collection.immutable.LongMap$Nil$",
     "scala.collection.immutable.ListSerializeEnd",
     "scala.collection.mutable.TreeSet$$anonfun$3",
     "scala.collection.mutable.TreeSet$$anonfun$2",
     "scala.collection.mutable.TreeSet$$anonfun$1",
     "scala.collection.mutable.DoubleLinkedListLike",
     "scala.collection.package$",
     "scala.runtime.AbstractFunction1$mcJI$sp",
     "scala.collection.mutable.IndexedSeqView$AbstractTransformed",
     "scala.collection.immutable.Map$",
     "scala.collection.parallel.AdaptiveWorkStealingThreadPoolTasks$WrappedTask$$anonfun$split$2",
     "scala.collection.generic.GenericOrderedTraversableTemplate$class",
     "scala.Enumeration$Val",
     "scala.Tuple2$mcCJ$sp",
     "scala.collection.immutable.SortedMap$$anonfun$$plus$plus$1",
     "scala.util.Random$$anonfun$alphanumeric$1",
     "scala.annotation.switch",
     "scala.collection.mutable.SynchronizedBuffer$class",
     "scala.collection.SeqViewLike$Patched$class",
     "scala.collection.TraversableViewLike$$anon$2",
     "scala.collection.immutable.RedBlackTree",
     "scala.collection.TraversableViewLike$$anon$1",
     "scala.collection.TraversableViewLike$$anon$4",
     "scala.collection.TraversableViewLike$$anon$3",
     "scala.collection.TraversableViewLike$$anon$6",
     "scala.collection.TraversableViewLike$$anon$5",
     "scala.runtime.AbstractFunction2$mcIDJ$sp",
     "scala.collection.immutable.Map$WithDefault",
     "scala.collection.parallel.ParIterableLike$StrictSplitterCheckTask",
     "scala.collection.IndexedSeqLike$class",
     "scala.collection.immutable.VectorBuilder",
     "scala.collection.parallel.mutable.ParHashMapCombiner$$anon$1",
     "scala.Function3$$anonfun$curried$1",
     "scala.collection.mutable.SetProxy$class",
     "scala.Function1$mcDD$sp",
     "scala.collection.mutable.LinkedListLike$$anonfun$update$1",
     "scala.collection.Iterator$$anonfun$copyToArray$1",
     "scala.collection.immutable.StreamViewLike$Transformed",
     "scala.collection.generic.CanCombineFrom",
     "scala.runtime.StringFormat$",
     "scala.util.Success$$anonfun$map$1",
     "scala.collection.immutable.Range$Long$",
     "scala.Function1$mcVJ$sp",
     "scala.Tuple2$mcZZ$sp",
     "scala.math.Ordering$ShortOrdering",
     "scala.runtime.AbstractFunction2$mcFJJ$sp",
     "scala.collection.JavaConverters$",
     "scala.Predef$Pair$",
     "scala.runtime.CharRef",
     "scala.collection.parallel.ParMapLike$DefaultValuesIterable",
     "scala.collection.GenIterable$",
     "scala.runtime.RichByte",
     "scala.collection.SeqLike$$anon$2",
     "scala.collection.TraversableViewLike$$anon$8",
     "scala.collection.SeqLike$$anon$3",
     "scala.collection.TraversableViewLike$$anon$7",
     "scala.collection.parallel.ParIterableLike$GroupBy",
     "scala.collection.SeqLike$$anon$4",
     "scala.collection.SeqLike$$anon$5",
     "scala.sys.Prop$Creator",
     "scala.runtime.Tuple2Zipped$",
     "scala.collection.SeqLike$PermutationsItr$$anonfun$2",
     "scala.runtime.DoubleRef",
     "scala.Tuple2$mcZD$sp",
     "scala.collection.SeqLike$PermutationsItr$$anonfun$3",
     "scala.collection.SeqLike$$anon$1",
     "scala.Function2$mcZJI$sp",
     "scala.collection.immutable.PagedSeq$$anonfun$fromReader$1",
     "scala.concurrent.duration.Duration$$anonfun$4$$anonfun$apply$1",
     "scala.collection.immutable.LongMap",
     "scala.collection.mutable.AnyRefMap$",
     "scala.collection.parallel.ExecutionContextTasks",
     "scala.math.Ordering$DoubleOrdering",
     "scala.math.Ordering$BigIntOrdering",
     "scala.collection.immutable.Stream$cons$",
     "scala.collection.generic.AtomicIndexFlag",
     "scala.collection.immutable.StringLike$$anonfun$stripMargin$1",
     "scala.concurrent.Promise",
     "scala.runtime.Tuple2Zipped$$anonfun$map$extension$1",
     "scala.collection.parallel.package",
     "scala.collection.immutable.StreamViewLike$ZippedAll",
     "scala.collection.Iterable$",
     "scala.runtime.VolatileCharRef",
     "scala.concurrent.duration.DurationConversions$fromNowConvert$",
     "scala.Product4$class",
     "scala.concurrent.forkjoin.RecursiveTask",
     "scala.io.Position",
     "scala.Product1$mcD$sp",
     "scala.math.PartialOrdering",
     "scala.Function2$mcVJD$sp",
     "scala.util.control.Exception$$anonfun$unwrapping$1",
     "scala.collection.parallel.CombinerFactory",
     "scala.beans.BeanProperty",
     "scala.collection.mutable.Set$",
     "scala.collection.mutable.IndexedSeqView$Sliced$class",
     "scala.runtime.VolatileShortRef",
     "scala.math.Numeric$DoubleAsIfIntegral$",
     "scala.sys.process.ProcessImpl$ProcessSequence$$anonfun$$lessinit$greater$3",
     "scala.collection.concurrent.KVNode",
     "scala.math.Ordering$StringOrdering$class",
     "scala.collection.concurrent.CNode",
     "scala.Function2$mcVIJ$sp$class",
     "scala.collection.immutable.IntMap$Bin",
     "scala.collection.mutable.LinearSeq$class",
     "scala.Responder$$anon$4",
     "scala.Responder$$anon$3",
     "scala.collection.parallel.ParIterableLike$$anonfun$printDebugBuffer$1$$anonfun$apply$5",
     "scala.io.Codec$$anon$1",
     "scala.Responder$$anon$2",
     "scala.native",
     "scala.Responder$$anon$1",
     "scala.annotation.unspecialized",
     "scala.util.hashing.Hashing$",
     "scala.collection.TraversableLike$$anonfun$inits$1",
     "scala.collection.parallel.ParSeqLike$$anonfun$patch$2",
     "scala.collection.parallel.ParSeqLike$$anonfun$patch$1",
     "scala.collection.parallel.ParSeqLike$$anonfun$patch$3",
     "scala.collection.IterableViewLike$Mapped",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$copy2builder$2",
     "scala.collection.TraversableViewLike$Mapped",
     "scala.collection.parallel.mutable.ParArray$ParArrayIterator$$anonfun$copy2builder$1",
     "scala.collection.Iterator$GroupedIterator",
     "scala.runtime.ShortRef",
     "scala.Function1$mcDI$sp$class",
     "scala.concurrent.Future$$anonfun$sequence$2",
     "scala.concurrent.Future$$anonfun$sequence$1",
     "scala.math.Ordering$String$",
     "scala.collection.TraversableLike$$anonfun$copyToArray$1",
     "scala.collection.parallel.Splitter",
     "scala.collection.immutable.Stream$StreamCanBuildFrom",
     "scala.collection.parallel.ParIterableLike$$anonfun$8$$anonfun$apply$2",
     "scala.collection.immutable.SortedMap$$anon$1$$anonfun$valuesIteratorFrom$1",
     "scala.collection.mutable.ArrayBuilder$ofDouble",
     "scala.collection.generic.MutableSetFactory",
     "scala.StringContext$$anonfun$s$1",
     "scala.concurrent.forkjoin.RecursiveAction",
     "scala.collection.MapLike$$anonfun$$plus$plus$1",
     "scala.collection.TraversableViewLike$Sliced$$anonfun$foreach$1",
     "scala.collection.mutable.HashTable$$anon$1",
     "scala.sys.Prop",
     "scala.collection.parallel.mutable.ParHashSetCombiner$$anon$2$$anonfun$2$$anonfun$apply$1",
     "scala.util.MurmurHash$mcF$sp",
     "scala.collection.mutable.ArrayStack$$anon$1",
     "scala.math.Ordering$ExtraImplicits$$anon$8",
     "scala.runtime.ScalaWholeNumberProxy$class",
     "scala.beans.ScalaBeanInfo$$anonfun$1$$anonfun$apply$1",
     "scala.collection.immutable.StringLike$",
     "scala.runtime.AbstractFunction2$mcDJD$sp",
     "scala.collection.TraversableLike$$anonfun$partition$1",
     "scala.collection.IterableLike$$anonfun$grouped$1",
     "scala.math.Numeric$ByteIsIntegral$",
     "scala.collection.immutable.Range$Partial",
     "scala.collection.mutable.StackProxy",
     "scala.math.ScalaNumericAnyConversions",
     "scala.collection.TraversableOnce$MonadOps",
     "scala.collection.immutable.MapLike",
     "scala.collection.IterableViewLike$Appended$class",
     "scala.collection.mutable.QueueProxy",
     "scala.runtime.Tuple2Zipped$$anonfun$foreach$extension$1",
     "scala.collection.parallel.ParMapLike$DefaultKeySet",
     "scala.io.AnsiColor",
     "scala.collection.parallel.Task$class",
     "scala.Product9$class",
     "scala.collection.mutable.HashSet",
     "scala.collection.parallel.ParIterableLike$$anonfun$dropWhile$1",
     "scala.collection.mutable.ArraySeq",
     "scala.util.control.Exception$Catch$$anonfun$opt$1",
     "scala.collection.mutable.Seq$",
     "scala.Predef$StringAdd$",
     "scala.collection.Traversable$",
     "scala.collection.Iterator$Partner$1",
     "scala.collection.generic.Growable",
     "scala.runtime.AbstractFunction2$mcVJI$sp",
     "scala.math.Numeric$DoubleIsFractional",
     "scala.collection.SetLike$$anon$1",
     "scala.collection.mutable.HashMap$$anonfun$foreach$1",
     "scala.Function2$mcDID$sp$class",
     "scala.math.Ordering$$anon$15",
     "scala.math.Ordering$$anon$16",
     "scala.math.Ordering$$anon$13",
     "scala.math.Ordering$$anon$14",
     "scala.collection.TraversableLike$$anonfun$scanLeft$1",
     "scala.math.Ordering$$anon$17",
     "scala.math.Ordering$$anon$18",
     "scala.collection.TraversableLike$WithFilter$$anonfun$map$2",
     "scala.runtime.AbstractFunction2$mcDIJ$sp",
     "scala.math.Ordered$$anon$1",
     "scala.math.Ordering$$anon$11",
     "scala.math.Ordering$$anon$12",
     "scala.sys.process.ProcessBuilderImpl$OStreamBuilder",
     "scala.math.Ordering$$anon$10",
     "scala.collection.mutable.ArrayOps$ofLong",
     "scala.collection.JavaConversions$",
     "scala.math.Numeric$ByteIsIntegral",
     "scala.text.DocBreak$",
     "scala.collection.immutable.ListSerializeEnd$",
     "scala.collection.immutable.HashSet$",
     "scala.concurrent.forkjoin.ForkJoinWorkerThread",
     "scala.collection.parallel.mutable.ParIterable$class",
     "scala.collection.Map",
     "scala.sys.process.ProcessImpl$Spawn$$anon$1",
     "scala.collection.immutable.ListSet$",
     "scala.concurrent.BatchingExecutor",
     "scala.Float$",
     "scala.collection.parallel.ParIterableLike",
     "scala.collection.SeqViewLike$$anonfun$distinct$1",
     "scala.Function1$mcJF$sp$class",
     "scala.collection.mutable.IndexedSeqView$Sliced",
     "scala.collection.GenMap$",
     "scala.collection.immutable.RedBlackTree$NList$",
     "scala.runtime.AbstractFunction2$mcZII$sp",
     "scala.io.BufferedSource$$anonfun$iter$3",
     "scala.io.BufferedSource$$anonfun$iter$1",
     "scala.io.BufferedSource$$anonfun$iter$2",
     "scala.Specializable$",
     "scala.collection.IterableViewLike$FlatMapped",
     "scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1",
     "scala.collection.mutable.StringBuilder",
     "scala.collection.immutable.ListSet$Node",
     "scala.sys.process.BasicIO$$anonfun$input$1",
     "scala.collection.immutable.Vector$",
     "scala.collection.mutable.HashSet$$anonfun$readObject$1",
     "scala.collection.parallel.IterableSplitter$Taken",
     "scala.collection.generic.TaggedDelegatedContext",
     "scala.collection.IterableViewLike$$anon$10",
     "scala.collection.mutable.ArrayBuilder$ofByte",
     "scala.collection.immutable.Stream$$anonfun$continually$1",
     "scala.Function2$mcVIJ$sp",
     "scala.Tuple10$",
     "scala.Predef$$anon$2",
     "scala.Predef$$anon$3",
     "scala.collection.immutable.Set$EmptySet$",
     "scala.Predef$$anon$1",
     "scala.collection.parallel.mutable.ParHashMapCombiner$$anonfun$result$1",
     "scala.collection.parallel.AugmentedIterableIterator",
     "scala.collection.parallel.mutable.ParHashSet",
     "scala.runtime.NonLocalReturnControl$mcB$sp",
     "scala.util.hashing.package$",
     "scala.collection.convert.Wrappers$JMapWrapperLike$class",
     "scala.collection.generic.IsTraversableOnce$",
     "scala.collection.immutable.Iterable$class",
     "scala.concurrent.BlockContext",
     "scala.collection.TraversableViewLike$AbstractTransformed",
     "scala.io.Source$NoPositioner$",
     "scala.Responder$$anonfun$run$1",
     "scala.collection.immutable.LongMapKeyIterator",
     "scala.collection.mutable.FlatHashTable$$anonfun$serializeTo$1",
     "scala.collection.SeqViewLike$Prepended",
     "scala.collection.mutable.ArrayOps$$anonfun$transpose$1$$anonfun$apply$1",
     "scala.collection.parallel.mutable.ParArray$$anonfun$fromTraversables$1",
     "scala.collection.convert.Wrappers$JSetWrapper",
     "scala.collection.SortedMap$class",
     "scala.util.control.NoStackTrace$",
     "scala.collection.TraversableLike$$anonfun$isEmpty$1",
     "scala.collection.DefaultMap$$anonfun$$minus$1",
     "scala.Function1$mcZD$sp$class",
     "scala.collection.parallel.ForkJoinTasks$WrappedTask",
     "scala.collection.mutable.ArrayOps$ofInt$",
     "scala.collection.script.Include",
     "scala.Function1$mcFI$sp$class",
     "scala.collection.convert.Wrappers$JMapWrapper",
     "scala.collection.parallel.ThrowableOps",
     "scala.collection.immutable.SortedMap$Default",
     "scala.collection.parallel.ParIterableLike$Slice",
     "scala.collection.TraversableOnce$BufferedCanBuildFrom$$anonfun$newIterator$1",
     "scala.collection.mutable.HashMap$$anonfun$readObject$1",
     "scala.util.hashing.ByteswapHashing$Chained",
     "scala.collection.convert.DecorateAsJava$$anonfun$mutableMapAsJavaMapConverter$1",
     "scala.collection.immutable.HashSet$SerializationProxy$$anonfun$writeObject$1",
     "scala.concurrent.Promise$",
     "scala.math.Ordering$Short$",
     "scala.collection.immutable.Stream$$anonfun$append$1",
     "scala.sys.process.package",
     "scala.sys.process.BasicIO$$anonfun$toStdOut$1",
     "scala.Product2$mcIJ$sp",
     "scala.collection.script.Index",
     "scala.collection.convert.Wrappers$JIterableWrapper",
     "scala.collection.parallel.FactoryOps$class",
     "scala.io.BufferedSource$$anonfun$iter$1$$anonfun$apply$mcI$sp$1",
     "scala.runtime.BoxedUnit",
     "scala.collection.mutable.QueueProxy$class",
     "scala.Function2$mcFDI$sp",
     "scala.collection.parallel.IterableSplitter$class",
     "scala.collection.IndexedSeq$class",
     "scala.runtime.AbstractFunction1$mcFI$sp",
     "scala.collection.immutable.IntMap$$anonfun$$plus$plus$1",
     "scala.collection.mutable.IndexedSeqView$class",
     "scala.Product3$class",
     "scala.collection.generic.GenericParCompanion",
     "scala.collection.mutable.LinkedListLike$$anon$1",
     "scala.sys.process.ProcessBuilderImpl$AbstractBuilder$$anonfun$lineStream$1",
     "scala.Tuple16$",
     "scala.collection.generic.ParFactory",
     "scala.Function2$mcJIJ$sp$class",
     "scala.Tuple15$",
     "scala.collection.TraversableLike$$anonfun$scala$collection$TraversableLike$$sliceInternal$1$$anonfun$apply$mcV$sp$6",
     "scala.collection.mutable.UnrolledBuffer",
     "scala.collection.mutable.LinkedHashMap$MappedValues",
     "scala.reflect.package$",
     "scala.collection.mutable.SynchronizedMap$class",
     "scala.sys.process.ProcessImpl$Future$",
     "scala.Function3$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.SeqViewLike$DroppedWhile",
     "scala.collection.immutable.IntMapKeyIterator",
     "scala.concurrent.forkjoin.ForkJoinPool$ManagedBlocker",
     "scala.collection.parallel.CompositeThrowable$$anonfun$$lessinit$greater$1",
     "scala.collection.TraversableViewLike$Transformed$$anonfun$lastOption$1",
     "scala.Tuple17$",
     "scala.text.DocCons",
     "scala.util.Try$WithFilter$$anonfun$withFilter$1",
     "scala.Product22$",
     "scala.collection.generic.ImmutableSetFactory",
     "scala.collection.parallel.immutable.HashSetCombiner$$anon$1",
     "scala.Function8",
     "scala.Tuple1$mcJ$sp",
     "scala.Function9",
     "scala.collection.mutable.Node",
     "scala.Function0",
     "scala.collection.concurrent.Debug$$anonfun$flush$1",
     "scala.Function1",
     "scala.math.Ordering$Ops",
     "scala.Function2",
     "scala.Function3",
     "scala.util.Random$$anonfun$nextString$1",
     "scala.Function4",
     "scala.Function5",
     "scala.collection.convert.Wrappers$MutableMapWrapper$",
     "scala.Function6",
     "scala.Tuple18$",
     "scala.Function7",
     "scala.collection.parallel.ParMapLike$$anon$2$$anonfun$splitter$1",
     "scala.util.control.Exception$Catch$$anonfun$toEither$1",
     "scala.Product21$",
     "scala.Function$",
     "scala.Function1$mcFF$sp$class",
     "scala.runtime.RichDouble",
     "scala.collection.convert.package",
     "scala.math.Ordering$CharOrdering",
     "scala.collection.SeqViewLike$Mapped$class",
     "scala.util.hashing.MurmurHash3$$anon$5",
     "scala.util.hashing.MurmurHash3$$anon$2",
     "scala.util.hashing.MurmurHash3$$anon$1",
     "scala.util.hashing.package",
     "scala.util.hashing.MurmurHash3$$anon$4",
     "scala.Function2$mcZID$sp",
     "scala.util.hashing.MurmurHash3$$anon$3",
     "scala.collection.parallel.AugmentedIterableIterator$$anonfun$2",
     "scala.collection.parallel.ForkJoinTasks$class",
     "scala.collection.parallel.mutable.ParFlatHashTable$ParFlatHashTableIterator",
     "scala.collection.mutable.MapProxy$class",
     "scala.Tuple19$",
     "scala.collection.mutable.ArrayOps$ofShort",
     "scala.runtime.AbstractFunction0$mcJ$sp",
     "scala.collection.parallel.ThreadPoolTasks$$anon$1",
     "scala.sys.process.ProcessBuilderImpl$OStreamBuilder$$anonfun$$lessinit$greater$4",
     "scala.Product20$",
     "scala.Tuple2$mcDI$sp",
     "scala.collection.concurrent.INode",
     "scala.Predef$RichException",
     "scala.collection.mutable.StackProxy$class",
     "scala.collection.TraversableOnce$$anonfun$foldRight$1",
     "scala.collection.mutable.ArrayStack$$anonfun$$plus$plus$eq$1",
     "scala.reflect.NoManifest",
     "scala.collection.concurrent.MainNode",
     "scala.concurrent.Future$$anonfun$sequence$1$$anonfun$apply$10",
     "scala.collection.script.Scriptable",
     "scala.Tuple11$",
     "scala.collection.parallel.ParIterableLike$CopyToArray",
     "scala.util.control.Exception$$anonfun$ignoring$1",
     "scala.reflect.OptManifest",
     "scala.runtime.AbstractFunction1$mcJF$sp",
     "scala.collection.TraversableOnce$class",
     "scala.collection.DefaultMap$class",
     "scala.Tuple12$",
     "scala.math.Ordered",
     "scala.Function15$$anonfun$curried$1",
     "scala.concurrent.duration.FiniteDuration$FiniteDurationIsOrdered$",
     "scala.collection.mutable.Subscriber",
     "scala.collection.MapLike$FilteredKeys",
     "scala.collection.mutable.FlatHashTable$class",
     "scala.collection.convert.Decorators$AsJava",
     "scala.collection.mutable.HashTable$Contents$$anonfun$debugInformation$1",
     "scala.Function",
     "scala.runtime.AbstractFunction2$mcIII$sp",
     "scala.io.StdIn",
     "scala.util.matching.Regex$MatchData$class",
     "scala.collection.SeqViewLike$$anonfun$sorted$1",
     "scala.collection.immutable.StreamViewLike$$anon$8",
     "scala.collection.immutable.StreamViewLike$$anon$9",
     "scala.collection.immutable.StreamViewLike$$anon$6",
     "scala.Tuple13$",
     "scala.collection.immutable.StreamViewLike$$anon$7",
     "scala.collection.immutable.StreamViewLike$$anon$4",
     "scala.collection.immutable.PagedSeq$$anonfun$fromIterator$1",
     "scala.collection.immutable.StreamViewLike$$anon$5",
     "scala.Function0$mcI$sp",
     "scala.collection.immutable.StreamViewLike$$anon$2",
     "scala.runtime.AbstractFunction1$mcID$sp",
     "scala.collection.immutable.StreamViewLike$$anon$3",
     "scala.Function1$mcVD$sp$class",
     "scala.collection.immutable.StreamViewLike$$anon$1",
     "scala.Function2$mcVJI$sp$class",
     "scala.math.Numeric$BigIntIsIntegral",
     "scala.sys.Prop$IntProp$",
     "scala.collection.Map$WithDefault",
     "scala.collection.convert.DecorateAsJava$class",
     "scala.collection.mutable.ArrayBuffer",
     "scala.collection.mutable.LinkedHashSet$$anon$1",
     "scala.runtime.ScalaRunTime$$anonfun$arrayToString$1$2",
     "scala.collection.immutable.Stack$$anonfun$newBuilder$1",
     "scala.runtime.ScalaRunTime$$anonfun$arrayToString$1$1",
     "scala.collection.immutable.ListSet$ListSetBuilder",
     "scala.collection.mutable.IndexedSeq$",
     "scala.Tuple14$",
     "scala.math.Numeric$DoubleAsIfIntegral",
     "scala.Function2$mcIID$sp",
     "scala.collection.LinearSeqOptimized$class",
     "scala.concurrent.OnCompleteRunnable",
     "scala.runtime.ObjectRef",
     "scala.concurrent.Future$$anonfun$andThen$1",
     "scala.concurrent.duration.package$DoubleMult$",
     "scala.annotation.implicitNotFound",
     "scala.Function1$mcZF$sp",
     "scala.collection.mutable.OpenHashMap$OpenEntry",
     "scala.sys.process.BasicIO$",
     "scala.collection.mutable.Iterable$class",
     "scala.collection.immutable.Queue$",
     "scala.Function20$$anonfun$curried$1$$anonfun$apply$1",
     "scala.sys.process.ProcessImpl$Spawn$",
     "scala.concurrent.forkjoin.package-info",
     "scala.Function1$class",
     "scala.runtime.NonLocalReturnControl$mcF$sp",
     "scala.util.control.TailCalls$Done",
     "scala.Function2$mcJJD$sp",
     "scala.runtime.AbstractFunction2$mcIJJ$sp",
     "scala.Function1$mcJD$sp",
     "scala.collection.mutable.PriorityQueueProxy$$anon$1",
     "scala.collection.parallel.ParSeqLike$Elements$$anon$1",
     "scala.collection.immutable.DefaultMap",
     "scala.collection.mutable.ArrayOps",
     "scala.runtime.Tuple3Zipped$$anonfun$filter$extension$1",
     "scala.concurrent.CanAwait",
     "scala.collection.mutable.LinkedHashSet$$anonfun$readObject$1",
     "scala.runtime.AbstractFunction1$mcJJ$sp",
     "scala.util.Either$",
     "scala.Product2$class",
     "scala.Function2$$anonfun$tupled$1",
     "scala.StringContext",
     "scala.collection.TraversableOnce$FlattenOps$$anon$1",
     "scala.collection.IterableView$",
     "scala.collection.TraversableViewLike$$anonfun$unzip$1",
     "scala.collection.mutable.SetLike",
     "scala.collection.mutable.WrappedArray$ofChar",
     "scala.collection.parallel.immutable.Repetition$ParIterator$$anonfun$1",
     "scala.annotation.ClassfileAnnotation",
     "scala.collection.IterableViewLike$class",
     "scala.collection.BitSetLike$",
     "scala.collection.TraversableViewLike$$anonfun$unzip$2",
     "scala.collection.parallel.mutable.LazyCombiner$$anonfun$size$1",
     "scala.collection.mutable.Buffer",
     "scala.languageFeature$reflectiveCalls",
     "scala.collection.convert.WrapAsJava$",
     "scala.collection.TraversableViewLike$EmptyView$class",
     "scala.runtime.ScalaRunTime$",
     "scala.collection.immutable.LongMapUtils",
     "scala.collection.TraversableViewLike$$anonfun$inits$1",
     "scala.collection.parallel.SeqSplitter$Taken",
     "scala.collection.parallel.ParIterableLike$Reduce",
     "scala.collection.SortedMapLike$$anon$2$$anonfun$iteratorFrom$2",
     "scala.collection.mutable.ObservableBuffer$$anon$6",
     "scala.collection.mutable.ObservableBuffer$$anon$5",
     "scala.Long$",
     "scala.collection.SeqViewLike$Reversed$$anonfun$createReversedIterator$1",
     "scala.collection.mutable.ObservableBuffer$$anon$2",
     "scala.collection.mutable.ObservableBuffer$$anon$1",
     "scala.collection.mutable.ObservableBuffer$$anon$4",
     "scala.collection.mutable.ObservableBuffer$$anon$3",
     "scala.collection.mutable.BitSet$",
     "scala.runtime.ArrayCharSequence",
     "scala.collection.parallel.ParSeqLike$IndexWhere",
     "scala.collection.convert.Wrappers$ToIteratorWrapper",
     "scala.collection.parallel.ParSeqLike$Transformer",
     "scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask$$anonfun$spawnSubtasks$1",
     "scala.collection.generic.Sorted$class",
     "scala.util.PropertiesTrait$$anonfun$envOrElse$1",
     "scala.collection.TraversableViewLike$Filtered",
     "scala.collection.parallel.ParIterableLike$Map",
     "scala.collection.IterableView$$anon$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$filter$1",
     "scala.collection.convert.DecorateAsJava$$anonfun$mapAsJavaConcurrentMapConverter$1",
     "scala.collection.GenSeqLike",
     "scala.collection.parallel.ParIterableLike$Max",
     "scala.math.package$",
     "scala.collection.parallel.IterableSplitter$Zipped",
     "scala.collection.immutable.Vector",
     "scala.collection.generic.GenericParTemplate",
     "scala.collection.parallel.IterableSplitter$Zipped$$anonfun$6",
     "scala.util.control.TailCalls$TailRec$$anonfun$resume$1",
     "scala.throws",
     "scala.ScalaReflectionException",
     "scala.Some$",
     "scala.collection.SeqViewLike$$anonfun$padTo$1",
     "scala.util.control.TailCalls$TailRec$$anonfun$resume$2",
     "scala.collection.convert.WrapAsScala$class",
     "scala.concurrent.Promise$$anonfun$tryCompleteWith$1",
     "scala.math.Integral$ExtraImplicits$class",
     "scala.runtime.AbstractFunction2$mcJIJ$sp",
     "scala.collection.BitSetLike",
     "scala.collection.LinearSeqLike",
     "scala.util.MurmurHash",
     "scala.Function2$mcVDJ$sp",
     "scala.math.Fractional$",
     "scala.collection.BitSet$",
     "scala.collection.mutable.HashTable$HashUtils$class",
     "scala.concurrent.Future$$anonfun$collect$1$$anonfun$apply$4",
     "scala.sys.process.BasicIO$$anonfun$processFully$1$$anonfun$apply$6",
     "scala.collection.immutable.HashSet$SerializationProxy",
     "scala.collection.convert.Wrappers$MutableSeqWrapper",
     "scala.collection.TraversableViewLike$$anonfun$groupBy$1$$anonfun$apply$2",
     "scala.collection.TraversableLike$$anonfun$filterImpl$1",
     "scala.collection.mutable.SynchronizedMap",
     "scala.collection.TraversableOnce",
     "scala.Function1$mcVI$sp",
     "scala.runtime.TraitSetter",
     "scala.ref.ReferenceWrapper$class",
     "scala.collection.convert.DecorateAsScala$class",
     "scala.util.matching.Regex$$anonfun$replaceSomeIn$1",
     "scala.collection.parallel.immutable.ParRange$ParRangeIterator",
     "scala.sys.process.ProcessBuilderImpl$OrBuilder",
     "scala.util.matching.Regex$$anon$4",
     "scala.collection.parallel.ParIterableLike$Drop$$anonfun$13",
     "scala.concurrent.Future$$anonfun$fallbackTo$1",
     "scala.util.matching.Regex$$anon$2",
     "scala.collection.parallel.mutable.ParHashSetCombiner",
     "scala.collection.parallel.mutable.ParSeq$class",
     "scala.collection.concurrent.TrieMapIterator",
     "scala.Specializable$SpecializedGroup",
     "scala.collection.IterableViewLike$$anon$1",
     "scala.Function1$$anonfun$compose$1",
     "scala.collection.mutable.MapLike",
     "scala.collection.immutable.StreamViewLike$AbstractTransformed",
     "scala.Function2$mcVID$sp$class",
     "scala.Function21$$anonfun$curried$1$$anonfun$apply$1",
     "scala.Option$",
     "scala.collection.mutable.BufferProxy$$anon$1",
     "scala.collection.SeqProxy",
     "scala.collection.IterableViewLike$$anon$3",
     "scala.collection.parallel.ParIterableLike$FlatMap",
     "scala.collection.IterableViewLike$$anon$2",
     "scala.collection.IterableViewLike$$anon$5",
     "scala.runtime.AbstractPartialFunction$mcFF$sp",
     "scala.collection.IterableViewLike$$anon$4",
     "scala.collection.convert.Wrappers$SeqWrapper$",
     "scala.collection.IterableViewLike$$anon$7",
     "scala.collection.IterableViewLike$$anon$6",
     "scala.collection.IterableViewLike$$anon$9",
     "scala.collection.concurrent.Debug$",
     "scala.collection.IterableViewLike$$anon$8",
     "scala.collection.parallel.mutable.ExposedArrayBuffer",
     "scala.collection.TraversableOnce$$anonfun$minBy$1",
     "scala.collection.parallel.ParIterableLike$Drop$$anonfun$split$7",
     "scala.collection.parallel.ParIterableLike$Drop$$anonfun$split$6",
     "scala.math.Numeric$ByteIsIntegral$class",
     "scala.collection.parallel.ParIterableLike$Drop$$anonfun$split$5",
     "scala.collection.parallel.immutable.HashMapCombiner$",
     "scala.collection.parallel.ParIterableLike$Span$$anonfun$split$17",
     "scala.collection.parallel.ParIterableLike$Span$$anonfun$split$18",
     "scala.Product2$mcII$sp$class",
     "scala.collection.mutable.History$$anonfun$events$1",
     "scala.collection.parallel.ParIterableLike$ScanTree",
     "scala.collection.parallel.ParIterableLike$Span$$anonfun$split$16",
     "scala.runtime.Tuple3Zipped$Ops$",
     "scala.collection.parallel.RemainsIterator",
     "scala.sys.BooleanProp$$anonfun$keyExists$1",
     "scala.Dynamic",
     "scala.runtime.AbstractFunction2$mcIDI$sp",
     "scala.collection.convert.DecorateAsScala$$anonfun$asScalaSetConverter$1",
     "scala.concurrent.ExecutionContextExecutorService",
     "scala.runtime.Tuple3Zipped$Ops",
     "scala.collection.mutable.LinkedHashSet$$anonfun$writeObject$1",
     "scala.collection.MapProxy",
     "scala.runtime.AbstractFunction1$mcVD$sp",
     "scala.collection.Iterator$JoinIterator$$anonfun$$plus$plus$2",
     "scala.math.Numeric$",
     "scala.collection.generic.GenericSetTemplate$class",
     "scala.runtime.Tuple2Zipped$Ops",
     "scala.collection.immutable.List",
     "scala.collection.immutable.Stream$StreamWithFilter$$anonfun$scala$collection$immutable$Stream$StreamWithFilter$$tailMap$1$1",
     "scala.collection.mutable.SeqLike$class",
     "scala.collection.immutable.Stream$$anonfun$scala$collection$immutable$Stream$$loop$3$1",
     "scala.collection.mutable.ArrayBuilder$",
     "scala.collection.immutable.Stream$$anonfun$scala$collection$immutable$Stream$$loop$3$2",
     "scala.collection.TraversableOnce$$anonfun$1",
     "scala.collection.immutable.ListSet$ListSetBuilder$$anonfun$result$1",
     "scala.collection.generic.package",
     "scala.collection.GenTraversable$",
     "scala.collection.MapLike",
     "scala.collection.convert.DecorateAsJava$$anonfun$asJavaIterableConverter$1",
     "scala.collection.parallel.Task$$anonfun$tryLeaf$1",
     "scala.collection.parallel.Task$$anonfun$tryLeaf$2",
     "scala.math.Integral$Implicits$",
     "scala.collection.Traversable$class",
     "scala.collection.parallel.TraversableOps",
     "scala.collection.mutable.Iterable$",
     "scala.runtime.Boxed",
     "scala.collection.generic.IsTraversableOnce$$anon$1$$anonfun$1",
     "scala.inline",
     "scala.util.control.Exception$Catch",
     "scala.collection.SortedSetLike$class",
     "scala.annotation.meta.companionMethod",
     "scala.collection.SeqViewLike$$anonfun$union$1",
     "scala.collection.TraversableViewLike$TakenWhile",
     "scala.collection.parallel.ParIterableLike$Min",
     "scala.Function2$mcIJI$sp",
     "scala.collection.IterableViewLike$ZippedAll$class",
     "scala.sys.process.ProcessBuilderImpl$class",
     "scala.beans.BeanInfoSkip",
     "scala.Array$$anon$2",
     "scala.io.Source$$anon$1",
     "scala.collection.immutable.BitSet$$anon$1",
     "scala.collection.mutable.HashMap$$anon$2$$anonfun$foreach$3",
     "scala.collection.parallel.mutable.ParHashMap$",
     "scala.math.Ordering$BigDecimalOrdering$class",
     "scala.collection.mutable.WeakHashMap$",
     "scala.collection.mutable.Builder$class",
     "scala.collection.mutable.FlatHashTable$",
     "scala.Product",
     "scala.collection.convert.Wrappers$JIteratorWrapper$",
     "scala.runtime.FractionalProxy",
     "scala.collection.convert.Wrappers$JIteratorWrapper",
     "scala.util.PropertiesTrait$class",
     "scala.collection.SetLike$class",
     "scala.concurrent.Future$$anonfun$fold$1",
     "scala.math.Numeric$BigDecimalIsFractional$",
     "scala.util.control.Exception$$anonfun$pfFromExceptions$1",
     "scala.Function0$mcC$sp",
     "scala.util.Left$",
     "scala.math.BigDecimal",
     "scala.collection.generic.IsSeqLike",
     "scala.collection.mutable.ArrayBuilder$ofChar",
     "scala.collection.convert.DecorateAsScala$$anonfun$asScalaIteratorConverter$1",
     "scala.collection.mutable.StackProxy$$anon$1",
     "scala.concurrent.forkjoin.ForkJoinPool$EmptyTask",
     "scala.collection.TraversableViewLike$DroppedWhile$$anonfun$foreach$6",
     "scala.collection.immutable.TreeSet$",
     "scala.ref.PhantomReference",
     "scala.collection.SetLike",
     "scala.collection.immutable.Range$Inclusive",
     "scala.collection.parallel.mutable.ParTrieMapCombiner$class",
     "scala.util.control.TailCalls$",
     "scala.Function2$mcZIJ$sp",
     "scala.collection.SeqViewLike$FlatMapped$class",
     "scala.sys.process.ProcessImpl$AndProcess$$anonfun$$lessinit$greater$1",
     "scala.collection.immutable.ListMap$$anon$1",
     "scala.reflect.NoManifest$",
     "scala.collection.parallel.ParSeqLike$SegmentLength$$anonfun$split$1",
     "scala.collection.parallel.ParSeqLike$SegmentLength$$anonfun$split$3",
     "scala.collection.parallel.ParSeqLike$SegmentLength$$anonfun$split$2",
     "scala.Function6$$anonfun$tupled$1",
     "scala.collection.generic.IsTraversableLike$$anon$1",
     "scala.collection.generic.IsTraversableLike$$anon$2",
     "scala.collection.IterableViewLike$EmptyView$class",
     "scala.Product12$class",
     "scala.collection.parallel.immutable.ParHashSet$ParHashSetIterator$$anonfun$split$1",
     "scala.Proxy",
     "scala.collection.IterableViewLike$TakenWhile",
     "scala.collection.SeqViewLike$$anonfun$combinations$1",
     "scala.collection.TraversableViewLike$FlatMapped$$anonfun$foreach$3$$anonfun$apply$1",
     "scala.collection.convert.Wrappers$JPropertiesWrapper$$anon$3",
     "scala.collection.convert.DecorateAsScala$$anonfun$collectionAsScalaIterableConverter$1",
     "scala.collection.SeqViewLike$class",
     "scala.collection.MapLike$$anonfun$addString$1",
     "scala.Product2$mcID$sp$class",
     "scala.collection.SeqViewLike$Reversed",
     "scala.collection.mutable.LongMap$$anonfun$1",
     "scala.collection.immutable.NumericRange$Exclusive",
     "scala.collection.immutable.StringOps$",
     "scala.collection.immutable.IntMap$Bin$",
     "scala.collection.parallel.ParIterableLike$$anonfun$last$1",
     "scala.collection.parallel.ParIterableLike$SplitAt",
     "scala.ref.SoftReferenceWithWrapper",
     "scala.FallbackArrayBuilding",
     "scala.collection.convert.Wrappers$class",
     "scala.collection.SeqLike$CombinationsItr$$anonfun$4$$anonfun$apply$2",
     "scala.collection.mutable.LinkedListLike",
     "scala.collection.parallel.ParSetLike$$anonfun$diff$1",
     "scala.collection.immutable.LongMap$$anonfun$$plus$plus$1",
     "scala.Char",
     "scala.collection.parallel.mutable.ParHashMapCombiner$table$2$",
     "scala.collection.TraversableLike$$anonfun$splitAt$1",
     "scala.collection.mutable.WrappedArray$ofInt",
     "scala.Product10$class",
     "scala.collection.generic.Shrinkable",
     "scala.Function10$class",
     "scala.runtime.AbstractFunction1$mcFJ$sp",
     "scala.collection.immutable.List$$anonfun$foldRight$1",
     "scala.collection.mutable.MapProxy",
     "scala.collection.immutable.IndexedSeq",
     "scala.collection.SortedSetLike",
     "scala.collection.convert.DecorateAsJava$$anonfun$setAsJavaSetConverter$1",
     "scala.collection.mutable.HashTable",
     "scala.math.LowPriorityOrderingImplicits$class",
     "scala.collection.immutable.SetProxy$$anon$1",
     "scala.collection.parallel.AugmentedSeqIterator",
     "scala.concurrent.FutureTaskRunner",
     "scala.collection.mutable.Cloneable",
     "scala.concurrent.Future$$anonfun$mapTo$1",
     "scala.collection.parallel.ParIterableLike$ToParMap",
     "scala.concurrent.ThreadPoolRunner$RunCallable",
     "scala.collection.immutable.StreamIterator$$anonfun$toStream$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$toParCollection$1",
     "scala.Function2$mcFDJ$sp",
     "scala.collection.immutable.Set$class",
     "scala.sys.process.ProcessBuilderImpl$DaemonBuilder",
     "scala.collection.parallel.ParIterableLike$ParComposite",
     "scala.collection.convert.Wrappers$JPropertiesWrapper$",
     "scala.Function1$mcVF$sp",
     "scala.collection.convert.Wrappers$JCollectionWrapper$",
     "scala.collection.parallel.CompositeThrowable",
     "scala.collection.immutable.HashSet$HashSetCollision1",
     "scala.Function0$mcS$sp$class",
     "scala.collection.immutable.HashSet$HashSetCollision1$$anonfun$2",
     "scala.collection.immutable.HashSet$HashSetCollision1$$anonfun$1",
     "scala.collection.parallel.ForkJoinTasks",
     "scala.math.Ordering$class",
     "scala.collection.mutable.SetBuilder",
     "scala.collection.immutable.StreamIterator$$anonfun$next$1",
     "scala.concurrent.impl.Promise$DefaultPromise",
     "scala.collection.immutable.PagedSeq",
     "scala.collection.Searching$",
     "scala.collection.SortedMapLike$$anonfun$$plus$1",
     "scala.collection.immutable.DefaultMap$$anonfun$$minus$1",
     "scala.collection.mutable.IndexedSeqView$TakenWhile",
     "scala.collection.immutable.DefaultMap$$anonfun$$minus$2",
     "scala.collection.IterableViewLike$$anonfun$sliding$1",
     "scala.runtime.AbstractFunction2$mcVIJ$sp",
     "scala.collection.generic.IsSeqLike$$anon$1",
     "scala.collection.generic.IsSeqLike$$anon$2",
     "scala.concurrent.Future$$anonfun$onFailure$1",
     "scala.sys.SystemProperties$$anonfun$get$1",
     "scala.collection.immutable.Stream$$anonfun$filteredTail$1",
     "scala.concurrent.impl.Promise$CompletionLatch",
     "scala.collection.convert.Wrappers$JEnumerationWrapper",
     "scala.beans.BooleanBeanProperty",
     "scala.collection.Iterator$",
     "scala.runtime.AbstractPartialFunction$mcJF$sp",
     "scala.reflect.ClassTypeManifest",
     "scala.collection.mutable.ArrayOps$ofInt",
     "scala.collection.parallel.ParIterableLike$$anonfun$takeWhile$1",
     "scala.sys.process.ProcessBuilderImpl$FileOutput",
     "scala.math.Numeric$FloatIsFractional$class",
     "scala.collection.parallel.ParIterableLike$$anonfun$takeWhile$2",
     "scala.collection.mutable.HashMap$$anonfun$iterator$1",
     "scala.concurrent.forkjoin.LinkedTransferQueue$Node",
     "scala.collection.convert.DecorateAsScala",
     "scala.collection.mutable.WrappedArray$ofRef",
     "scala.Function2$mcIID$sp$class",
     "scala.Function0$mcF$sp",
     "scala.collection.parallel.ParIterable$class",
     "scala.runtime.AbstractFunction1$mcDF$sp",
     "scala.collection.mutable.MutableList",
     "scala.math.Numeric$LongIsIntegral",
     "scala.sys.SystemProperties$$anonfun$help$1",
     "scala.collection.mutable.ResizableArray$class",
     "scala.languageFeature$implicitConversions",
     "scala.collection.parallel.ParSetLike$$anonfun$union$1",
     "scala.math.Ordering$$anon$4",
     "scala.math.Ordering$$anon$5",
     "scala.math.PartiallyOrdered",
     "scala.math.Ordering$$anon$3",
     "scala.runtime.RichByte$",
     "scala.runtime.AbstractPartialFunction$mcID$sp",
     "scala.collection.TraversableOnce$$anonfun$product$1",
     "scala.collection.mutable.WrappedArray$ofBoolean",
     "scala.concurrent.duration.Duration$",
     "scala.Function12$class",
     "scala.collection.mutable.HashSet$",
     "scala.math.Ordering$$anon$9",
     "scala.collection.$colon$plus$",
     "scala.collection.mutable.SeqLike$$anonfun$transform$1",
     "scala.collection.parallel.Tasks",
     "scala.util.Right",
     "scala.sys.process.ProcessBuilderImpl",
     "scala.runtime.AbstractFunction2$mcFJD$sp",
     "scala.collection.MapLike$$anonfun$filterNot$1",
     "scala.collection.immutable.Stream$$anonfun$scala$collection$immutable$Stream$$loop$2$1",
     "scala.collection.immutable.Range$Double$$anonfun$inclusive$1",
     "scala.collection.mutable.Stack$",
     "scala.sys.process.ProcessBuilderImpl$SequenceBuilder",
     "scala.math.Fractional$Implicits$",
     "scala.collection.TraversableOnce$$anonfun$reduceRight$1",
     "scala.runtime.FractionalProxy$$anonfun$to$1",
     "scala.Function2$mcDID$sp",
     "scala.collection.immutable.$colon$colon$",
     "scala.collection.immutable.RedBlackTree$BlackTree$",
     "scala.collection.parallel.mutable.ParTrieMap$",
     "scala.collection.parallel.ParMapLike$$anon$4$$anonfun$split$2",
     "scala.sys.process.ProcessBuilder$FileBuilder",
     "scala.Function1$mcVI$sp$class",
     "scala.ref.Reference",
     "scala.concurrent.Future$$anonfun$traverse$1$$anonfun$apply$12",
     "scala.collection.parallel.mutable.ParHashSetCombiner$$anon$2$$anonfun$2",
     "scala.sys.process.ProcessImpl$ProcessSequence",
     "scala.math.LowPriorityEquiv",
     "scala.collection.parallel.mutable.ParHashSetCombiner$$anon$2$$anonfun$1",
     "scala.collection.AbstractSet",
     "scala.collection.AbstractSeq",
     "scala.concurrent.Future$$anonfun$recover$1",
     "scala.Tuple2$mcDJ$sp",
     "scala.collection.mutable.StringBuilder$",
     "scala.collection.convert.Wrappers$JDictionaryWrapper$",
     "scala.runtime.NonLocalReturnControl$mcC$sp",
     "scala.sys.process.BasicIO$Uncloseable$class",
     "scala.collection.mutable.WrappedArrayBuilder",
     "scala.collection.concurrent.INodeBase",
     "scala.Function1$mcIJ$sp",
     "scala.collection.IterableViewLike$$anonfun$grouped$1",
     "scala.util.MurmurHash$$anonfun$1",
     "scala.collection.SeqViewLike$Filtered",
     "scala.collection.parallel.mutable.ParIterable",
     "scala.util.MurmurHash$$anonfun$2",
     "scala.sys.process.ProcessCreation",
     "scala.Function16$$anonfun$tupled$1",
     "scala.Product1$mcJ$sp$class",
     "scala.collection.parallel.ExecutionContextTaskSupport",
     "scala.Array$$anonfun$concat$2",
     "scala.Array$$anonfun$concat$1",
     "scala.collection.parallel.mutable.ResizableParArrayCombiner$CopyChainToArray",
     "scala.collection.script.Script",
     "scala.languageFeature$dynamics",
     "scala.Function2$mcFJD$sp$class",
     "scala.Symbol",
     "scala.collection.parallel.ParSetLike",
     "scala.concurrent.ManagedBlocker",
     "scala.Product$$anon$1",
     "scala.util.Sorting$",
     "scala.collection.parallel.ParSeqLike$$anonfun$diff$1",
     "scala.collection.immutable.Stream$$hash$colon$colon$",
     "scala.collection.parallel.immutable.ParMap$",
     "scala.collection.immutable.Nil",
     "scala.collection.immutable.Stream$$anonfun$$plus$colon$1",
     "scala.collection.immutable.Stream$$anonfun$takeWhile$1",
     "scala.sys.process.ProcessBuilderImpl$Simple",
     "scala.collection.immutable.ListSet$EmptyListSet$",
     "scala.collection.TraversableOnce$BufferedCanBuildFrom$$anonfun$apply$1",
     "scala.collection.parallel.ParIterable$",
     "scala.Tuple2$mcJC$sp",
     "scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2",
     "scala.collection.mutable.ResizableArray",
     "scala.Function2$mcJIJ$sp",
     "scala.collection.IterableLike$$anon$1",
     "scala.runtime.RichInt",
     "scala.runtime.Tuple2Zipped",
     "scala.collection.SeqViewLike$Sliced",
     "scala.runtime.AbstractFunction16",
     "scala.runtime.AbstractFunction15",
     "scala.collection.mutable.ArrayOps$ofByte",
     "scala.runtime.AbstractFunction18",
     "scala.runtime.AbstractFunction17",
     "scala.collection.parallel.immutable.HashMapCombiner$CreateTrie",
     "scala.runtime.AbstractFunction12",
     "scala.runtime.AbstractFunction11",
     "scala.runtime.AbstractFunction14",
     "scala.runtime.AbstractFunction13",
     "scala.runtime.AbstractFunction10",
     "scala.collection.SeqViewLike$FlatMapped",
     "scala.collection.concurrent.Gen",
     "scala.PartialFunction$Lifted",
     "scala.runtime.AbstractFunction0$mcI$sp",
     "scala.reflect.ClassManifestDeprecatedApis",
     "scala.collection.immutable.Stream$StreamBuilder$$anonfun$result$1",
     "scala.collection.mutable.Node$",
     "scala.collection.parallel.ParMapLike$$anon$3$$anonfun$split$1",
     "scala.util.control.TailCalls$Done$",
     "scala.collection.SetLike$SubsetsItr",
     "scala.util.hashing.MurmurHash3$ArrayHashing$mcZ$sp",
     "scala.collection.mutable.MapLike$class",
     "scala.runtime.AbstractFunction22",
     "scala.math.Numeric$IntIsIntegral",
     "scala.Responder$$anonfun$loopWhile$1",
     "scala.math.Fractional$FractionalOps",
     "scala.runtime.AbstractFunction21",
     "scala.runtime.AbstractFunction20",
     "scala.collection.mutable.ArrayBuilder$ofBoolean",
     "scala.Predef$Ensuring",
     "scala.languageFeature$dynamics$",
     "scala.runtime.AbstractFunction19",
     "scala.util.hashing.MurmurHash3$ArrayHashing$mcD$sp",
     "scala.collection.mutable.BufferProxy$class",
     "scala.runtime.AbstractFunction2$mcJJD$sp",
     "scala.collection.mutable.ArrayOps$ofRef",
     "scala.collection.generic.BitOperations$Int",
     "scala.Function1$mcFD$sp",
     "scala.Function2$mcFJJ$sp$class",
     "scala.concurrent.duration.DurationConversions$Classifier",
     "scala.concurrent.util.Unsafe",
     "scala.collection.generic.ParSetFactory",
     "scala.collection.parallel.ParIterableLike$ScanLeaf$",
     "scala.collection.mutable.UnrolledBuffer$Unrolled$$anonfun$insertAll$2",
     "scala.collection.mutable.UnrolledBuffer$Unrolled$$anonfun$insertAll$1",
     "scala.languageFeature$experimental$macros",
     "scala.collection.mutable.ArrayBuffer$",
     "scala.Function2$mcVII$sp",
     "scala.collection.parallel.ParIterableLike$$anonfun$toSet$1",
     "scala.runtime.AbstractFunction2$mcZDD$sp",
     "scala.collection.TraversableViewLike$Mapped$class",
     "scala.DeprecatedPredef",
     "scala.collection.parallel.AdaptiveWorkStealingTasks$class",
     "scala.util.PropertiesTrait",
     "scala.util.hashing.Hashing",
     "scala.collection.parallel.ParSeqLike$$anonfun$corresponds$2$$anon$9",
     "scala.collection.Iterator",
     "scala.sys.process.ProcessBuilderImpl$ThreadBuilder",
     "scala.math.Numeric$BigIntIsIntegral$class",
     "scala.concurrent.forkjoin.ThreadLocalRandom",
     "scala.collection.mutable.BufferLike$$anonfun$$less$less$1",
     "scala.collection.parallel.immutable.ParMap",
     "scala.collection.parallel.mutable.ResizableParArrayCombiner$class",
     "scala.collection.parallel.ParSeqLike$$anonfun$startsWith$1",
     "scala.collection.convert.Wrappers$IterableWrapperTrait$class",
     "scala.collection.parallel.ParSeqLike$$anonfun$startsWith$2",
     "scala.sys.SystemProperties$$anonfun$$plus$eq$1",
     "scala.collection.immutable.Range$Double$",
     "scala.DeprecatedConsole",
     "scala.collection.parallel.Tasks$WrappedTask$class",
     "scala.runtime.FloatRef",
     "scala.collection.mutable.WrappedArray$$anon$1$$anonfun$apply$1",
     "scala.collection.mutable.WrappedArray$$anon$1$$anonfun$apply$2",
     "scala.runtime.BooleanRef",
     "scala.sys.process.Process",
     "scala.collection.mutable.LinkedHashMap",
     "scala.Console",
     "scala.collection.immutable.Stream$$anonfun$$plus$plus$1",
     "scala.collection.parallel.ForkJoinTasks$WrappedTask$class",
     "scala.Function14$$anonfun$curried$1$$anonfun$apply$1",
     "scala.sys.process.processInternal$$anonfun$ioFailure$1",
     "scala.collection.parallel.mutable.DoublingUnrolledBuffer",
     "scala.text.DocGroup$",
     "scala.collection.script.Remove",
     "scala.collection.Iterator$GroupedIterator$$anonfun$padding$1",
     "scala.Function9$$anonfun$curried$1",
     "scala.collection.parallel.mutable.ParMap$$anonfun$withDefaultValue$1",
     "scala.Tuple2$mcII$sp",
     "scala.Function15$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.parallel.ParIterableLike$Find",
     "scala.Predef$StringAdd",
     "scala.collection.mutable.ArrayOps$ofByte$",
     "scala.runtime.RichFloat",
     "scala.collection.IterableViewLike$Appended",
     "scala.Function2$mcJDJ$sp$class",
     "scala.Predef$Triple$",
     "scala.collection.GenIterable$class",
     "scala.Function2$mcJII$sp$class",
     "scala.collection.TraversableOnce$$anon$2",
     "scala.collection.parallel.immutable.ParSet$class",
     "scala.collection.IterableViewLike$Zipped$class",
     "scala.text.DocCons$",
     "scala.Array$$anonfun$tabulate$4$$anonfun$apply$14",
     "scala.Function1$mcDF$sp",
     "scala.util.Either$MergeableEither$",
     "scala.collection.generic.ParMapFactory",
     "scala.transient",
     "scala.collection.parallel.mutable.ParMap",
     "scala.runtime.AbstractFunction2$mcFIJ$sp",
     "scala.runtime.RangedProxy",
     "scala.collection.mutable.ArrayStack$",
     "scala.collection.immutable.StreamViewLike$Zipped",
     "scala.collection.immutable.Stream$StreamWithFilter$$anonfun$scala$collection$immutable$Stream$StreamWithFilter$$tailFlatMap$1$1",
     "scala.collection.convert.Decorators$AsScala",
     "scala.Array$$anonfun$tabulate$2$$anonfun$apply$12",
     "scala.sys.process.ProcessBuilderImpl$IStreamBuilder",
     "scala.sys.Prop$",
     "scala.concurrent.impl.CallbackRunnable",
     "scala.collection.parallel.ParIterableLike$$anonfun$flatMap$1",
     "scala.concurrent.duration.package$",
     "scala.text.DocGroup",
     "scala.collection.parallel.ParIterableLike$$anonfun$flatMap$2",
     "scala.concurrent.forkjoin.ForkJoinTask$AdaptedRunnable",
     "scala.collection.TraversableViewLike$DroppedWhile",
     "scala.collection.parallel.immutable.ParHashMap$ParHashMapIterator$$anonfun$split$1",
     "scala.Function0$mcV$sp",
     "scala.collection.generic.VolatileAbort",
     "scala.collection.TraversableLike$$anonfun$forall$1",
     "scala.NotNull",
     "scala.collection.generic.ParFactory$GenericCanCombineFrom",
     "scala.collection.immutable.HashMap$$anon$2",
     "scala.collection.BitSetLike$$anon$1",
     "scala.Predef$$less$colon$less",
     "scala.runtime.RichDouble$",
     "scala.collection.generic.GenericTraversableTemplate$class",
     "scala.concurrent.Future$$anonfun$find$1",
     "scala.languageFeature$existentials$",
     "scala.Function10$$anonfun$tupled$1",
     "scala.Function20$$anonfun$tupled$1",
     "scala.annotation.TypeConstraint",
     "scala.runtime.VolatileDoubleRef",
     "scala.concurrent.forkjoin.ForkJoinTask$AdaptedRunnableAction",
     "scala.collection.mutable.Map$WithDefault$$anonfun$withDefaultValue$2",
     "scala.ref.WeakReference$",
     "scala.runtime.AbstractFunction2$mcDDI$sp",
     "scala.collection.JavaConverters",
     "scala.collection.mutable.HashTable$Contents",
     "scala.Array$$anonfun$fill$2",
     "scala.Array$$anonfun$fill$1",
     "scala.Array$$anonfun$fill$4",
     "scala.Array$$anonfun$fill$3",
     "scala.Function2$mcIJD$sp$class",
     "scala.io.Source$RelaxedPosition$",
     "scala.collection.mutable.ArraySeq$$anonfun$newBuilder$1",
     "scala.collection.parallel.mutable.ParHashTable$EntryIterator$$anonfun$debugInformation$1$$anonfun$apply$1",
     "scala.collection.immutable.Stream$$anonfun$collectedTail$1",
     "scala.Function2$mcZJD$sp$class",
     "scala.collection.parallel.mutable.UnrolledParArrayCombiner$CopyUnrolledToArray",
     "scala.runtime.OrderedProxy$class",
     "scala.util.matching.Regex$MatchIterator$$anon$3",
     "scala.collection.generic.Sorted",
     "scala.util.matching.Regex$MatchIterator$$anon$1",
     "scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$2",
     "scala.collection.immutable.NumericRange$",
     "scala.sys.BooleanProp$BooleanPropImpl",
     "scala.collection.mutable.BitSet",
     "scala.runtime.AbstractPartialFunction$mcII$sp",
     "scala.Product2$mcDI$sp",
     "scala.collection.immutable.LongMap$$anonfun$toList$1",
     "scala.collection.Parallel",
     "scala.util.matching.UnanchoredRegex$class",
     "scala.reflect.ClassTag$",
     "scala.collection.immutable.RedBlackTree$TreeIterator",
     "scala.collection.parallel.mutable.SizeMapUtils$class",
     "scala.util.control.Exception$$anonfun$handling$1",
     "scala.Tuple16",
     "scala.Tuple15",
     "scala.Tuple18",
     "scala.Tuple17",
     "scala.collection.Parallelizable",
     "scala.Tuple12",
     "scala.Tuple11",
     "scala.Serializable",
     "scala.Tuple14",
     "scala.Tuple13",
     "scala.collection.IterableViewLike$Appended$$anonfun$iterator$1",
     "scala.PartialFunction$$anon$1$$anonfun$3",
     "scala.collection.SeqViewLike$TakenWhile",
     "scala.Tuple19",
     "scala.math.Ordering$ByteOrdering$class",
     "scala.collection.TraversableLike$$anonfun$flatMap$1",
     "scala.beans.ScalaBeanInfo",
     "scala.Tuple2$",
     "scala.Tuple21",
     "scala.Tuple20",
     "scala.collection.immutable.StringLike$$anonfun$lines$1",
     "scala.collection.mutable.UnrolledBuffer$Unrolled",
     "scala.Product18$class",
     "scala.collection.TraversableLike$$anonfun$head$1",
     "scala.collection.mutable.MapLike$$anonfun$clear$1",
     "scala.collection.parallel.immutable.ParVector$",
     "scala.collection.mutable.ObservableSet$$anon$3",
     "scala.collection.TraversableViewLike$$anonfun$partition$1",
     "scala.collection.mutable.ObservableSet$$anon$2",
     "scala.io.Source$",
     "scala.collection.mutable.ObservableSet$$anon$1",
     "scala.collection.IterableViewLike$DroppedWhile$class",
     "scala.collection.mutable.HashEntry$class",
     "scala.Tuple1$",
     "scala.collection.IterableViewLike$Transformed",
     "scala.Tuple10",
     "scala.collection.immutable.StreamViewLike$Prepended",
     "scala.util.control.TailCalls$TailRec",
     "scala.collection.SeqLike$PermutationsItr$$anonfun$2$$anonfun$apply$1",
     "scala.collection.parallel.immutable.HashSetCombiner",
     "scala.concurrent.Future$$anonfun$zip$1",
     "scala.collection.parallel.SeqSplitter$ZippedAll",
     "scala.PartialFunction$Unlifted",
     "scala.util.hashing.MurmurHash3$$anonfun$unorderedHash$1",
     "scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask",
     "scala.collection.immutable.IndexedSeq$class",
     "scala.collection.parallel.IterableSplitter$Mapped$$anonfun$split$2",
     "scala.Product2$mcJJ$sp",
     "scala.util.matching.Regex$$anonfun$unapplySeq$1",
     "scala.math.Fractional$class",
     "scala.util.matching.Regex$$anonfun$unapplySeq$2",
     "scala.Tuple4$",
     "scala.collection.MapLike$DefaultKeySet",
     "scala.collection.SeqProxyLike$class",
     "scala.collection.mutable.LinkedHashMap$$anonfun$readObject$1",
     "scala.util.matching.Regex$$anonfun$unapplySeq$3",
     "scala.collection.parallel.Combiner$class",
     "scala.collection.mutable.ArrayOps$ofBoolean$",
     "scala.collection.parallel.ParSeqLike$$anonfun$corresponds$1",
     "scala.collection.parallel.ParSeqLike$$anonfun$corresponds$2",
     "scala.collection.parallel.ParIterableLike$Span",
     "scala.Tuple22",
     "scala.sys.process.BasicIO$$anonfun$processOutFully$1$$anonfun$apply$5",
     "scala.math.Ordering$IntOrdering",
     "scala.Product21$class",
     "scala.collection.immutable.Stream$$anonfun$scala$collection$immutable$Stream$$loop$4$1",
     "scala.collection.parallel.immutable.package",
     "scala.collection.MapLike$MappedValues$$anonfun$foreach$3",
     "scala.collection.MapLike$MappedValues$$anonfun$foreach$2",
     "scala.Tuple3$",
     "scala.collection.immutable.Stream$",
     "scala.noinline",
     "scala.util.control.Exception$By",
     "scala.collection.BitSetLike$$anonfun$isEmpty$1",
     "scala.collection.GenTraversable$class",
     "scala.runtime.AbstractFunction0$mcZ$sp",
     "scala.languageFeature$reflectiveCalls$",
     "scala.Function1$mcDD$sp$class",
     "scala.Function1$mcFJ$sp",
     "scala.math.Ordering$OptionOrdering",
     "scala.Tuple6$",
     "scala.runtime.MethodCache",
     "scala.collection.parallel.mutable.ParIterable$",
     "scala.collection.GenSeqLike$class",
     "scala.collection.TraversableLike$$anon$1",
     "scala.Some",
     "scala.collection.mutable.ImmutableMapAdaptor$$anonfun$retain$1",
     "scala.MatchError",
     "scala.Tuple5$",
     "scala.runtime.ZippedTraversable2",
     "scala.runtime.VolatileBooleanRef",
     "scala.runtime.ZippedTraversable3",
     "scala.runtime.AbstractFunction1$mcZI$sp",
     "scala.collection.ViewMkString$class",
     "scala.Responder$$anon$2$$anonfun$respond$2",
     "scala.runtime.AbstractFunction0$mcD$sp",
     "scala.Function2$mcVID$sp",
     "scala.math.Numeric$IntIsIntegral$class",
     "scala.Product14$class",
     "scala.Function2$mcDJI$sp",
     "scala.collection.parallel.SeqSplitter$Appended$$anonfun$1",
     "scala.collection.mutable.Traversable$",
     "scala.math.Numeric$LongIsIntegral$class",
     "scala.runtime.ScalaNumberProxy",
     "scala.Tuple8$",
     "scala.Function2$mcIIJ$sp",
     "scala.runtime.RichShort",
     "scala.collection.mutable.QueueProxy$$anon$1",
     "scala.collection.Searching$SearchResult",
     "scala.collection.parallel.ParSeqLike$$anonfun$reverse$2",
     "scala.collection.parallel.ParSeqLike$$anonfun$reverse$1",
     "scala.io.Source$$anonfun$fromIterable$1",
     "scala.math.Ordered$",
     "scala.Function0$mcF$sp$class",
     "scala.collection.SeqViewLike$$anonfun$sortBy$1",
     "scala.collection.parallel.IterableSplitter$Taken$$anonfun$3",
     "scala.collection.parallel.IterableSplitter$Taken$$anonfun$4",
     "scala.collection.parallel.IterableSplitter$Taken$$anonfun$5",
     "scala.Function12$$anonfun$tupled$1",
     "scala.collection.parallel.SeqSplitter$Appended$$anonfun$9",
     "scala.collection.parallel.SeqSplitter$Appended$$anonfun$7",
     "scala.collection.parallel.SeqSplitter$Appended$$anonfun$8",
     "scala.concurrent.Future$InternalCallbackExecutor$",
     "scala.collection.SeqViewLike$Prepended$class",
     "scala.collection.immutable.Map$class",
     "scala.collection.immutable.RedBlackTree$KeysIterator",
     "scala.Function2$mcDJJ$sp$class",
     "scala.collection.TraversableLike$$anonfun$tails$1",
     "scala.Tuple7$",
     "scala.collection.mutable.Map$WithDefault",
     "scala.util.control.Exception$$anonfun$nonFatalCatcher$2",
     "scala.collection.immutable.LinearSeq$class",
     "scala.collection.mutable.BufferProxy",
     "scala.collection.parallel.ParIterableLike$Aggregate",
     "scala.util.control.Exception$$anonfun$nonFatalCatcher$1",
     "scala.collection.MapLike$DefaultValuesIterable",
     "scala.runtime.AbstractFunction2$mcZDI$sp",
     "scala.collection.SeqLike$$anonfun$occCounts$1",
     "scala.collection.TraversableLike$$anonfun$collect$1",
     "scala.collection.parallel.ParIterableLike$$anonfun$slice$1",
     "scala.sys.process.ProcessBuilderImpl$AbstractBuilder$$anonfun$runBuffered$1",
     "scala.collection.mutable.UnrolledBuffer$$anon$1",
     "scala.Function2$mcIJI$sp$class",
     "scala.sys.process.ProcessImpl$BasicProcess",
     "scala.collection.parallel.ParIterableLike$SeqComposite",
     "scala.SerialVersionUID",
     "scala.collection.generic.BitOperations$Long$$anonfun$bitString$2",
     "scala.collection.parallel.ParIterableLike$Slice$$anonfun$split$8",
     "scala.collection.mutable.AnyRefMap",
     "scala.collection.parallel.ParIterableLike$Slice$$anonfun$split$9",
     "scala.collection.TraversableLike$$anonfun$copyToArray$1$$anonfun$apply$mcV$sp$8",
     "scala.App$class",
     "scala.collection.generic.BitOperations$Long$",
     "scala.collection.parallel.ParIterableLike$ScanNode",
     "scala.collection.mutable.IndexedSeqView$DroppedWhile$class",
     "scala.collection.immutable.StreamViewLike$FlatMapped",
     "scala.util.hashing.MurmurHash3$ArrayHashing$mcI$sp",
     "scala.concurrent.Await$",
     "scala.collection.immutable.Seq$",
     "scala.collection.immutable.StringLike",
     "scala.collection.immutable.SortedMap$$anon$2$$anonfun$iteratorFrom$2",
     "scala.runtime.NonLocalReturnControl$mcV$sp",
     "scala.Function7$class",
     "scala.Product2$mcDD$sp$class",
     "scala.collection.parallel.mutable.UnrolledParArrayCombiner$class",
     "scala.Enumeration$$anonfun$scala$Enumeration$$populateNameMap$1",
     "scala.PartialFunction$$anon$1",
     "scala.collection.parallel.ParSeqLike$LastIndexWhere",
     "scala.util.control.Exception$$anonfun$allCatcher$2",
     "scala.util.Random$",
     "scala.collection.convert.DecorateAsScala$$anonfun$mapAsScalaMapConverter$1",
     "scala.Function2$mcJJI$sp",
     "scala.Option$WithFilter",
     "scala.Responder$$anon$3$$anonfun$respond$1",
     "scala.concurrent.Future$$anonfun$traverse$1",
     "scala.concurrent.Future$$anonfun$traverse$2",
     "scala.reflect.package",
     "scala.Product$class",
     "scala.collection.parallel.mutable.ParHashSet$ParHashSetIterator",
     "scala.reflect.ManifestFactory$",
     "scala.text.DocNil$",
     "scala.Function2$mcZJJ$sp$class",
     "scala.runtime.AbstractPartialFunction$mcDJ$sp",
     "scala.collection.parallel.ParSeqLike$ReverseMap",
     "scala.util.hashing.MurmurHash3$ArrayHashing",
     "scala.collection.convert.DecorateAsJava$$anonfun$asJavaIteratorConverter$1",
     "scala.collection.parallel.ParIterableLike$Take$$anonfun$split$2",
     "scala.collection.GenSet",
     "scala.collection.MapProxyLike$class",
     "scala.collection.parallel.ParIterableLike$Take$$anonfun$split$4",
     "scala.collection.IndexedSeqOptimized$$anon$1",
     "scala.collection.parallel.ParIterableLike$Take$$anonfun$split$3",
     "scala.runtime.AbstractFunction1$mcJD$sp",
     "scala.collection.GenSeq",
     "scala.collection.parallel.ParSeqLike$$anonfun$endsWith$1",
     "scala.collection.parallel.ParSeqLike$$anonfun$endsWith$2",
     "scala.collection.parallel.ParIterableLike$$anonfun$filterNot$1",
     "scala.concurrent.forkjoin.ForkJoinTask$AdaptedCallable",
     "scala.collection.immutable.LongMapValueIterator",
     "scala.Responder",
     "scala.collection.parallel.ParIterableLike$CreateScanTree$$anonfun$split$27",
     "scala.collection.immutable.WrappedString",
     "scala.sys.process.ProcessBuilderImpl$IStreamBuilder$$anonfun$$lessinit$greater$5",
     "scala.sys.process.ProcessImpl$SimpleProcess",
     "scala.collection.generic.BitSetFactory$class",
     "scala.collection.parallel.package$",
     "scala.collection.parallel.ParMapLike$$anon$1$$anonfun$foreach$5",
     "scala.collection.parallel.ParIterableLike$CreateScanTree$$anonfun$split$25",
     "scala.collection.parallel.ParIterableLike$CreateScanTree$$anonfun$split$26",
     "scala.collection.immutable.StreamViewLike$Appended",
     "scala.collection.DebugUtils$",
     "scala.collection.parallel.AugmentedSeqIterator$class",
     "scala.util.control.TailCalls$TailRec$$anonfun$map$1",
     "scala.collection.SetProxyLike$class",
     "scala.Function2$mcZJD$sp",
     "scala.concurrent.forkjoin.ForkJoinPool$WorkQueue",
     "scala.runtime.AbstractFunction1$mcZF$sp",
     "scala.collection.mutable.SeqLike",
     "scala.collection.immutable.SortedSet$class",
     "scala.collection.TraversableViewLike$FlatMapped$$anonfun$foreach$3",
     "scala.collection.mutable.DoubleLinkedListLike$$anonfun$apply$1",
     "scala.Function7$$anonfun$curried$1",
     "scala.collection.parallel.ParIterableLike$Take",
     "scala.Function8$$anonfun$curried$1",
     "scala.collection.mutable.DoubleLinkedListLike$$anonfun$apply$2",
     "scala.collection.mutable.ImmutableSetAdaptor",
     "scala.collection.mutable.RevertibleHistory",
     "scala.collection.parallel.ParIterableLike$StrictSplitterCheckTask$class",
     "scala.sys.process.BasicIO$Streamed$$anonfun$scala$sys$process$BasicIO$Streamed$$next$1$1",
     "scala.sys.process.ProcessBuilder",
     "scala.Predef$any2stringadd",
     "scala.math.BigDecimal$$anonfun$to$1",
     "scala.concurrent.duration.DurationConversions$class",
     "scala.math.BigDecimal$RoundingMode$",
     "scala.collection.BufferedIterator",
     "scala.collection.mutable.ImmutableMapAdaptor",
     "scala.collection.immutable.ListSet",
     "scala.Predef$SeqCharSequence",
     "scala.text.DocBreak",
     "scala.collection.parallel.ParSeqLike$Updated$$anonfun$split$14",
     "scala.collection.parallel.ParSeqLike$Updated$$anonfun$split$13",
     "scala.collection.mutable.IndexedSeqView",
     "scala.collection.immutable.Set$",
     "scala.collection.parallel.ParSeqLike$Updated$$anonfun$split$12",
     "scala.collection.GenTraversableLike",
     "scala.collection.parallel.ParIterableLike$$anonfun$2",
     "scala.collection.parallel.mutable.ParMap$WithDefault$$anonfun$withDefaultValue$2",
     "scala.collection.parallel.ParIterableLike$$anonfun$3",
     "scala.runtime.IntegralProxy",
     "scala.sys.SystemProperties",
     "scala.collection.parallel.ParIterableLike$$anonfun$1",
     "scala.runtime.ScalaNumberProxy$class",
     "scala.Function2$mcFII$sp",
     "scala.collection.TraversableViewLike$FlatMapped",
     "scala.collection.$plus$colon$",
     "scala.collection.parallel.ParIterableLike$$anonfun$8",
     "scala.collection.parallel.ParIterableLike$$anonfun$9",
     "scala.collection.parallel.ParIterableLike$$anonfun$6",
     "scala.collection.parallel.ParIterableLike$$anonfun$7",
     "scala.collection.parallel.ParIterableLike$$anonfun$4",
     "scala.collection.parallel.ParIterableLike$$anonfun$5",
     "scala.Function2$mcVDD$sp$class",
     "scala.collection.generic.AtomicIndexFlag$class",
     "scala.collection.generic.TraversableFactory",
     "scala.math.Numeric$BigDecimalIsFractional",
     "scala.Function1$mcZI$sp",
     "scala.math.Ordering$BooleanOrdering$class",
     "scala.Function1$mcDJ$sp$class",
     "scala.collection.mutable.Traversable",
     "scala.concurrent.TaskRunner",
     "scala.deprecated$",
     "scala.concurrent.duration.Duration$$anonfun$scala$concurrent$duration$Duration$$expandLabels$1",
     "scala.runtime.FractionalProxy$class",
     "scala.collection.parallel.ParIterableLike$$anon$11$$anon$3",
     "scala.collection.convert.DecorateAsJava$$anonfun$mutableSeqAsJavaListConverter$1",
     "scala.collection.mutable.Map$",
     "scala.collection.parallel.ParIterableLike$$anon$11$$anon$1",
     "scala.collection.parallel.ParIterableLike$$anon$11$$anon$2",
     "scala.collection.mutable.ArrayOps$ofDouble",
     "scala.collection.parallel.mutable.ParFlatHashTable$class",
     "scala.util.control.Exception$",
     "scala.collection.mutable.OpenHashMap$$anonfun$clone$1",
     "scala.collection.immutable.Range$BigInt$",
     "scala.collection.TraversableLike$$anonfun$3",
     "scala.Function2$$anonfun$curried$1$$anonfun$apply$1",
     "scala.collection.TraversableLike$$anonfun$takeWhile$1$$anonfun$apply$mcV$sp$7",
     "scala.collection.TraversableLike$$anonfun$2",
     "scala.collection.TraversableProxyLike$class",
     "scala.Product2$mcDJ$sp$class",
     "scala.collection.Seq",
     "scala.collection.TraversableView$",
     "scala.collection.Set",
     "scala.collection.immutable.Map$WithDefault$$anonfun$withDefaultValue$2",
     "scala.collection.parallel.ParMap$",
     "scala.util.control.TailCalls",
     "scala.collection.concurrent.RDCSS_Descriptor",
     "scala.collection.convert.Decorators$class",
     "scala.Function1$mcII$sp$class",
     "scala.runtime.AbstractFunction2$mcFJI$sp",
     "scala.collection.mutable.SynchronizedStack",
     "scala.math.PartialOrdering$class",
     "scala.collection.SeqExtractors",
     "scala.collection.SeqViewLike$ZippedAll",
     "scala.collection.mutable.LongMap$$anon$1",
     "scala.concurrent.duration.package$DurationDouble$",
     "scala.collection.mutable.LongMap$$anon$2",
     "scala.sys.process.BasicIO$Uncloseable$",
     "scala.collection.immutable.Stream$StreamWithFilter",
     "scala.collection.immutable.StreamIterator$$anonfun$$lessinit$greater$1",
     "scala.collection.convert.Decorators$AsJavaEnumeration",
     "scala.io.Source$LineIterator",
     "scala.concurrent.duration.Deadline",
     "scala.runtime.RichBoolean",
     "scala.util.matching.Regex$Match",
     "scala.Function3$class",
     "scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$2$$anon$4",
     "scala.collection.convert.Wrappers$JConcurrentMapWrapper",
     "scala.collection.mutable.DefaultMapModel",
     "scala.collection.immutable.HashSet$HashTrieSet$$anon$1",
     "scala.sys.process.ProcessCreation$$anonfun$cat$1",
     "scala.sys.process.ProcessCreation$$anonfun$cat$2",
     "scala.collection.SeqViewLike$AbstractTransformed",
     "scala.collection.parallel.ParSeqLike$Elements",
     "scala.runtime.StringAdd$",
     "scala.Function4$$anonfun$curried$1$$anonfun$apply$1$$anonfun$apply$2$$anonfun$apply$3",
     "scala.collection.mutable.OpenHashMap",
     "scala.collection.parallel.PreciseSplitter",
     "scala.concurrent.Future$$anonfun$2",
     "scala.concurrent.Future$$anonfun$1",
     "scala.collection.mutable.Builder$$anon$1",
     "scala.collection.parallel.FutureTasks",
     "scala.collection.parallel.mutable.package$",
     "scala.collection.parallel.ParIterableLike$NonDivisibleTask$class",
     "scala.Function19$$anonfun$curried$1$$anonfun$apply$1",
     "scala.Function9$class",
     "scala.collection.parallel.ParMapLike$$anon$2$$anonfun$foreach$6",
     "scala.Function2$mcIJD$sp",
     "scala.collection.parallel.ParMapLike$$anon$2$$anonfun$foreach$7",
     "scala.Function21$class",
     "scala.collection.Map$",
     "scala.collection.parallel.immutable.ParHashMap$ParHashMapIterator",
     "scala.collection.IndexedSeq$$anon$1",
     "scala.runtime.AbstractFunction2$mcDJJ$sp",
     "scala.runtime.AbstractPartialFunction",
     "scala.Function19$$anonfun$curried$1",
     "scala.collection.mutable.ArrayBuilder$ofUnit",
     "scala.collection.immutable.HashMap$SerializationProxy",
     "scala.math.Integral$",
     "scala.concurrent.duration.Duration$DurationIsOrdered$",
     "scala.collection.parallel.ForkJoinTasks$$anonfun$execute$2",
     "scala.runtime.RichShort$",
     "scala.collection.generic.GenTraversableFactory$$anonfun$tabulate$1$$anonfun$apply$1",
     "scala.collection.GenSeq$class",
     "scala.Function2$mcVII$sp$class",
     "scala.annotation.meta.getter",
     "scala.collection.parallel.ParIterableLike$$anonfun$scan$1",
     "scala.collection.mutable.IndexedSeqView$TakenWhile$class",
     "scala.collection.immutable.Map",
     "scala.collection.parallel.SeqSplitter$class",
     "scala.Array$",
     "scala.collection.generic.CanBuildFrom",
     "scala.Enumeration$$anonfun$scala$Enumeration$$isValDef$1$1",
     "scala.collection.SeqViewLike$$anon$2",
     "scala.collection.SeqViewLike$$anon$1",
     "scala.collection.SeqViewLike$$anon$4",
     "scala.collection.convert.Wrappers$JMapWrapper$",
     "scala.collection.SeqViewLike$$anon$3",
     "scala.collection.IterableViewLike",
     "scala.collection.mutable.IndexedSeqView$Filtered",
     "scala.collection.mutable.ListBuffer",
     "scala.collection.concurrent.TrieMap$",
     "scala.runtime.AbstractFunction2$mcVJD$sp",
     "scala.collection.TraversableViewLike$Forced",
     "scala.collection.mutable.IndexedSeqView$Transformed",
     "scala.collection.convert.DecorateAsScala$$anonfun$dictionaryAsScalaMapConverter$1",
     "scala.collection.immutable.HashMap$",
     "scala.util.control.Exception$$anonfun$allCatcher$1",
     "scala.collection.AbstractIterator",
     "scala.collection.concurrent.CNode$$anonfun$collectLocalElems$1",
     "scala.collection.SortedMap$Default$class",
     "scala.collection.SeqViewLike$$anon$9",
     "scala.FallbackArrayBuilding$$anon$1",
     "scala.collection.SeqViewLike$$anon$6",
     "scala.collection.mutable.SynchronizedSet$class",
     "scala.collection.SeqViewLike$$anon$5",
     "scala.collection.SeqViewLike$$anon$8",
     "scala.collection.SeqViewLike$$anon$7",
     "scala.collection.immutable.$colon$colon",
     "scala.sys.process.ProcessImpl$CompoundProcess$$anonfun$4",
     "scala.collection.immutable.StreamViewLike$TakenWhile",
     "scala.collection.parallel.ParMapLike$$anon$3$$anonfun$1",
     "scala.sys.process.ProcessImpl$CompoundProcess$$anonfun$1",
     "scala.sys.process.ProcessImpl$CompoundProcess$$anonfun$2",
     "scala.collection.immutable.Vector$$anonfun$$plus$plus$1",
     "scala.runtime.AbstractFunction1$mcVI$sp",
     "scala.sys.process.ProcessImpl$CompoundProcess$$anonfun$3",
     "scala.Function5$class",
     "scala.collection.Iterator$$anonfun$contains$1",
     "scala.collection.generic.Clearable",
     "scala.collection.SeqViewLike$Reversed$class",
     "scala.collection.generic.MutableSortedSetFactory",
     "scala.Enumeration$$anonfun$withName$2",
     "scala.Enumeration$$anonfun$withName$1",
     "scala.collection.Iterable$class",
     "scala.collection.parallel.ParIterableLike$$anonfun$printDebugBuffer$1",
     "scala.Function10$$anonfun$curried$1$$anonfun$apply$1",
     "scala.concurrent.Future$class",
     "scala.collection.immutable.HashMap",
     "scala.collection.parallel.immutable.Repetition",
     "scala.Responder$$anonfun$loop$1$$anonfun$apply$1",
     "scala.math.Ordering$"
    ],
    "usedTypes": [
     "scala.collection.mutable.Publisher",
     "scala.runtime.AbstractFunction0",
     "scala.Function0",
     "scala.Option"
    ],
    "usageRatio": 0.0010457516339869282,
    "children": []
   },
   {
    "id": "javax.transaction:javax.transaction-api:jar:1.2:test",
    "coordinates": "javax.transaction:javax.transaction-api:1.2",
    "groupId": "javax.transaction",
    "artifactId": "javax.transaction-api",
    "version": "1.2",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 30724,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "javax.transaction.Transaction",
     "javax.transaction.TransactionRequiredException",
     "javax.transaction.Transactional",
     "javax.transaction.HeuristicRollbackException",
     "javax.transaction.UserTransaction",
     "javax.transaction.InvalidTransactionException",
     "javax.transaction.Transactional$TxType",
     "javax.transaction.NotSupportedException",
     "javax.transaction.TransactionSynchronizationRegistry",
     "javax.transaction.xa.XAResource",
     "javax.transaction.Status",
     "javax.transaction.TransactionalException",
     "javax.transaction.SystemException",
     "javax.transaction.RollbackException",
     "javax.transaction.TransactionScoped",
     "javax.transaction.xa.XAException",
     "javax.transaction.HeuristicMixedException",
     "javax.transaction.TransactionRolledbackException",
     "javax.transaction.HeuristicCommitException",
     "javax.transaction.TransactionManager",
     "javax.transaction.Synchronization",
     "javax.transaction.xa.Xid"
    ],
    "usedTypes": [
     "javax.transaction.Transactional"
    ],
    "usageRatio": 0.045454545454545456,
    "children": []
   },
   {
    "id": "com.jayway.jsonpath:json-path:jar:2.4.0:compile",
    "coordinates": "com.jayway.jsonpath:json-path:2.4.0",
    "groupId": "com.jayway.jsonpath",
    "artifactId": "json-path",
    "version": "2.4.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 223186,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "com.jayway.jsonpath.Filter$1",
     "com.jayway.jsonpath.internal.filter.ExpressionNode",
     "com.jayway.jsonpath.internal.filter.RelationalOperator",
     "com.jayway.jsonpath.internal.CharacterIndex",
     "com.jayway.jsonpath.internal.function.PathFunctionFactory",
     "com.jayway.jsonpath.internal.JsonFormatter",
     "com.jayway.jsonpath.Criteria",
     "com.jayway.jsonpath.internal.Utils",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$IntegerReader",
     "com.jayway.jsonpath.internal.function.latebinding.PathLateBindingValue",
     "com.jayway.jsonpath.internal.function.latebinding.ILateBindingValue",
     "com.jayway.jsonpath.internal.DefaultsImpl",
     "com.jayway.jsonpath.internal.path.ScanPathToken$ArrayPathTokenPredicate",
     "com.jayway.jsonpath.EvaluationListener$EvaluationContinuation",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$1",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$SubsetOfEvaluator",
     "com.jayway.jsonpath.internal.filter.RelationalExpressionNode",
     "com.jayway.jsonpath.internal.function.numeric.Max",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$DoubleReader",
     "com.jayway.jsonpath.spi.json.JacksonJsonNodeJsonProvider",
     "com.jayway.jsonpath.ParseContext",
     "com.jayway.jsonpath.Configuration",
     "com.jayway.jsonpath.internal.filter.LogicalOperator",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$EmptyEvaluator",
     "com.jayway.jsonpath.EvaluationListener$FoundResult",
     "com.jayway.jsonpath.spi.json.JettisonProvider$JettisonArray",
     "com.jayway.jsonpath.internal.filter.FilterCompiler$CompiledFilter",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$PredicateMatchEvaluator",
     "com.jayway.jsonpath.internal.filter.ValueNode$PathNode",
     "com.jayway.jsonpath.spi.json.JsonSmartJsonProvider",
     "com.jayway.jsonpath.TypeRef",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$GreaterThanEqualsEvaluator",
     "com.jayway.jsonpath.spi.mapper.GsonMappingProvider$1",
     "com.jayway.jsonpath.InvalidCriteriaException",
     "com.jayway.jsonpath.internal.path.ArraySliceOperation",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory",
     "com.jayway.jsonpath.spi.json.JettisonProvider$JettisonObjectIterator",
     "com.jayway.jsonpath.spi.mapper.GsonMappingProvider$2",
     "com.jayway.jsonpath.internal.filter.ValueNode$ClassNode",
     "com.jayway.jsonpath.MapFunction",
     "com.jayway.jsonpath.internal.path.ScanPathToken$FilterPathTokenPredicate",
     "com.jayway.jsonpath.internal.JsonContext$1",
     "com.jayway.jsonpath.internal.function.PassthruPathFunction",
     "com.jayway.jsonpath.Predicate",
     "com.jayway.jsonpath.spi.cache.LRUCache",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$InEvaluator",
     "com.jayway.jsonpath.internal.filter.ValueNode$UndefinedNode",
     "com.jayway.jsonpath.PathNotFoundException",
     "com.jayway.jsonpath.internal.path.PathTokenFactory",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$TypeSafeEqualsEvaluator",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$ExistsEvaluator",
     "com.jayway.jsonpath.internal.EvaluationContext",
     "com.jayway.jsonpath.internal.filter.FilterCompiler$1",
     "com.jayway.jsonpath.internal.function.numeric.Average",
     "com.jayway.jsonpath.internal.PathRef",
     "com.jayway.jsonpath.internal.path.ScanPathToken",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$BigDecimalReader",
     "com.jayway.jsonpath.spi.json.JsonProvider",
     "com.jayway.jsonpath.internal.filter.ValueNode$NumberNode",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$LessThanEqualsEvaluator",
     "com.jayway.jsonpath.ReadContext",
     "com.jayway.jsonpath.spi.cache.Cache",
     "com.jayway.jsonpath.Configuration$ConfigurationBuilder",
     "com.jayway.jsonpath.internal.path.FunctionPathToken",
     "com.jayway.jsonpath.internal.path.ArraySliceOperation$Operation",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$StringReader",
     "com.jayway.jsonpath.internal.function.ParamType",
     "com.jayway.jsonpath.internal.path.ArrayPathToken$1",
     "com.jayway.jsonpath.Configuration$Defaults",
     "com.jayway.jsonpath.internal.path.PathCompiler$1",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$DateReader",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$NotInEvaluator",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$TypeEvaluator",
     "com.jayway.jsonpath.Filter",
     "com.jayway.jsonpath.internal.Path",
     "com.jayway.jsonpath.internal.path.RootPathToken$1",
     "com.jayway.jsonpath.InvalidPathException",
     "com.jayway.jsonpath.spi.mapper.TapestryMappingProvider",
     "com.jayway.jsonpath.internal.filter.ValueNode",
     "com.jayway.jsonpath.spi.mapper.GsonMappingProvider",
     "com.jayway.jsonpath.internal.path.EvaluationContextImpl",
     "com.jayway.jsonpath.internal.function.PathFunction",
     "com.jayway.jsonpath.JsonPath",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$TypeSafeNotEqualsEvaluator",
     "com.jayway.jsonpath.EvaluationListener",
     "com.jayway.jsonpath.internal.filter.ValueNode$PredicateNode",
     "com.jayway.jsonpath.spi.mapper.MappingProvider",
     "com.jayway.jsonpath.spi.mapper.JsonOrgMappingProvider",
     "com.jayway.jsonpath.internal.path.PropertyPathToken",
     "com.jayway.jsonpath.internal.filter.ValueNode$1",
     "com.jayway.jsonpath.internal.path.CompiledPath",
     "com.jayway.jsonpath.internal.path.PathTokenAppender",
     "com.jayway.jsonpath.internal.function.Parameter",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$FloatReader",
     "com.jayway.jsonpath.internal.path.EvaluationContextImpl$1",
     "com.jayway.jsonpath.internal.PathRef$1",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$RegexpEvaluator",
     "com.jayway.jsonpath.internal.path.FunctionPathToken$1",
     "com.jayway.jsonpath.WriteContext",
     "com.jayway.jsonpath.internal.filter.ValueNode$StringNode",
     "com.jayway.jsonpath.internal.function.numeric.StandardDeviation",
     "com.jayway.jsonpath.internal.function.text.Length",
     "com.jayway.jsonpath.spi.json.AbstractJsonProvider",
     "com.jayway.jsonpath.spi.mapper.JacksonMappingProvider",
     "com.jayway.jsonpath.internal.path.ArrayIndexOperation",
     "com.jayway.jsonpath.InvalidJsonException",
     "com.jayway.jsonpath.internal.EvaluationAbortException",
     "com.jayway.jsonpath.internal.path.PredicateContextImpl",
     "com.jayway.jsonpath.spi.json.JettisonProvider",
     "com.jayway.jsonpath.spi.json.JettisonProvider$JettisonTokener",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$BooleanReader",
     "com.jayway.jsonpath.ValueCompareException",
     "com.jayway.jsonpath.internal.path.PredicatePathToken",
     "com.jayway.jsonpath.internal.path.ScanPathToken$WildcardPathTokenPredicate",
     "com.jayway.jsonpath.internal.filter.ValueNode$JsonNode",
     "com.jayway.jsonpath.internal.PathRef$RootPathRef",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$GreaterThanEvaluator",
     "com.jayway.jsonpath.spi.mapper.MappingException",
     "com.jayway.jsonpath.internal.function.latebinding.JsonLateBindingValue",
     "com.jayway.jsonpath.Option",
     "com.jayway.jsonpath.internal.JsonContext",
     "com.jayway.jsonpath.internal.path.EvaluationContextImpl$FoundResultImpl",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$BigIntegerReader",
     "com.jayway.jsonpath.DocumentContext",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider$LongReader",
     "com.jayway.jsonpath.Filter$SingleFilter",
     "com.jayway.jsonpath.spi.json.JettisonProvider$JettisonObject",
     "com.jayway.jsonpath.spi.json.JettisonProvider$JettisonArrayIterator",
     "com.jayway.jsonpath.internal.path.PathToken",
     "com.jayway.jsonpath.Predicate$PredicateContext",
     "com.jayway.jsonpath.spi.json.JettisonProvider$1",
     "com.jayway.jsonpath.internal.path.ScanPathToken$1",
     "com.jayway.jsonpath.internal.path.ScanPathToken$Predicate",
     "com.jayway.jsonpath.Filter$AndFilter",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$1",
     "com.jayway.jsonpath.internal.filter.LogicalExpressionNode",
     "com.jayway.jsonpath.internal.filter.ValueNode$ValueListNode",
     "com.jayway.jsonpath.internal.ParseContextImpl",
     "com.jayway.jsonpath.spi.cache.NOOPCache",
     "com.jayway.jsonpath.internal.path.PathCompiler",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$LessThanEvaluator",
     "com.jayway.jsonpath.internal.function.text.Concatenate",
     "com.jayway.jsonpath.spi.json.TapestryJsonProvider",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$NotEqualsEvaluator",
     "com.jayway.jsonpath.spi.json.JsonOrgJsonProvider",
     "com.jayway.jsonpath.InvalidModificationException",
     "com.jayway.jsonpath.internal.PathRef$ObjectPropertyPathRef",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$EqualsEvaluator",
     "com.jayway.jsonpath.internal.filter.ValueNode$PatternNode",
     "com.jayway.jsonpath.internal.filter.ValueNode$NullNode",
     "com.jayway.jsonpath.spi.cache.CacheProvider",
     "com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider",
     "com.jayway.jsonpath.Filter$OrFilter",
     "com.jayway.jsonpath.Configuration$1",
     "com.jayway.jsonpath.internal.filter.ValueNode$BooleanNode",
     "com.jayway.jsonpath.internal.function.numeric.Min",
     "com.jayway.jsonpath.spi.json.JacksonJsonProvider",
     "com.jayway.jsonpath.internal.filter.Evaluator",
     "com.jayway.jsonpath.internal.path.RootPathToken",
     "com.jayway.jsonpath.spi.json.GsonJsonProvider",
     "com.jayway.jsonpath.internal.PathRef$ObjectMultiPropertyPathRef",
     "com.jayway.jsonpath.internal.function.numeric.Sum",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$AllEvaluator",
     "com.jayway.jsonpath.internal.JsonContext$LimitingEvaluationListener",
     "com.jayway.jsonpath.internal.PathRef$ArrayIndexPathRef",
     "com.jayway.jsonpath.internal.filter.FilterCompiler",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$ContainsEvaluator",
     "com.jayway.jsonpath.internal.function.json.Append",
     "com.jayway.jsonpath.internal.filter.EvaluatorFactory$SizeEvaluator",
     "com.jayway.jsonpath.internal.path.ArrayPathToken",
     "com.jayway.jsonpath.internal.path.ScanPathToken$PropertyPathTokenPredicate",
     "com.jayway.jsonpath.internal.function.numeric.AbstractAggregation",
     "com.jayway.jsonpath.JsonPathException",
     "com.jayway.jsonpath.internal.path.WildcardPathToken"
    ],
    "usedTypes": [
     "com.jayway.jsonpath.Predicate",
     "com.jayway.jsonpath.Configuration$ConfigurationBuilder",
     "com.jayway.jsonpath.DocumentContext",
     "com.jayway.jsonpath.ParseContext",
     "com.jayway.jsonpath.TypeRef",
     "com.jayway.jsonpath.spi.mapper.MappingProvider",
     "com.jayway.jsonpath.Configuration",
     "com.jayway.jsonpath.Option",
     "com.jayway.jsonpath.PathNotFoundException",
     "com.jayway.jsonpath.JsonPath",
     "com.jayway.jsonpath.spi.mapper.JacksonMappingProvider"
    ],
    "usageRatio": 0.06321839080459771,
    "children": [
     {
      "id": "net.minidev:json-smart:jar:2.3:compile",
      "coordinates": "net.minidev:json-smart:2.3",
      "groupId": "net.minidev",
      "artifactId": "json-smart",
      "version": "2.3",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 120316,
      "type": "transitive",
      "status": "used",
      "parent": "com.jayway.jsonpath:json-path:jar:2.4.0:compile (optional) )",
      "allTypes": [
       "net.minidev.json.parser.JSONParserInputStream",
       "net.minidev.json.reader.BeansWriterASM",
       "net.minidev.json.writer.BeansMapper$BeanNoConv",
       "net.minidev.json.JSONAwareEx",
       "net.minidev.json.JSONNavi",
       "net.minidev.json.parser.JSONParserBase$MSB",
       "net.minidev.json.parser.ParseException",
       "net.minidev.json.annotate.JsonSmartAnnotation",
       "net.minidev.json.writer.ArraysMapper$5",
       "net.minidev.json.writer.ArraysMapper$6",
       "net.minidev.json.writer.ArraysMapper$3",
       "net.minidev.json.JSONUtil$JsonSmartFieldFilter",
       "net.minidev.json.JStylerObj$MustProtect",
       "net.minidev.json.writer.ArraysMapper$4",
       "net.minidev.json.JStylerObj$StringProtector",
       "net.minidev.json.writer.ArraysMapper$9",
       "net.minidev.json.JSONStyle",
       "net.minidev.json.JStylerObj$MPTrue",
       "net.minidev.json.writer.ArraysMapper$7",
       "net.minidev.json.writer.ArraysMapper$8",
       "net.minidev.json.writer.CollectionMapper$ListType",
       "net.minidev.json.reader.JsonWriter$1",
       "net.minidev.json.reader.JsonWriter$2",
       "net.minidev.json.writer.ArraysMapper$1",
       "net.minidev.json.writer.ArraysMapper",
       "net.minidev.json.writer.CollectionMapper$MapType",
       "net.minidev.json.writer.ArraysMapper$2",
       "net.minidev.json.parser.JSONParserString",
       "net.minidev.json.writer.CompessorMapper",
       "net.minidev.json.writer.FakeMapper",
       "net.minidev.json.parser.JSONParserReader",
       "net.minidev.json.JStylerObj$MPAgressive",
       "net.minidev.json.JSONObject",
       "net.minidev.json.writer.DefaultMapper",
       "net.minidev.json.reader.JsonWriter$7",
       "net.minidev.json.reader.JsonWriter$8",
       "net.minidev.json.writer.BeansMapper",
       "net.minidev.json.reader.JsonWriter$9",
       "net.minidev.json.reader.JsonWriter$3",
       "net.minidev.json.reader.JsonWriter$4",
       "net.minidev.json.writer.MapperRemapped",
       "net.minidev.json.JSONValue",
       "net.minidev.json.reader.JsonWriter$5",
       "net.minidev.json.reader.JsonWriter$6",
       "net.minidev.json.writer.DefaultMapperOrdered",
       "net.minidev.json.JStylerObj$Escape4Web",
       "net.minidev.json.reader.JsonWriter$18",
       "net.minidev.json.reader.JsonWriter",
       "net.minidev.json.reader.JsonWriter$17",
       "net.minidev.json.reader.JsonWriter$16",
       "net.minidev.json.writer.BeansMapper$1",
       "net.minidev.json.reader.JsonWriter$15",
       "net.minidev.json.reader.JsonWriter$14",
       "net.minidev.json.reader.JsonWriter$13",
       "net.minidev.json.reader.JsonWriter$12",
       "net.minidev.json.reader.JsonWriter$11",
       "net.minidev.json.reader.JsonWriter$10",
       "net.minidev.json.JSONUtil",
       "net.minidev.json.parser.JSONParser",
       "net.minidev.json.parser.JSONParserBase",
       "net.minidev.json.writer.JsonReader",
       "net.minidev.json.writer.CollectionMapper$ListClass",
       "net.minidev.json.reader.BeansWriterASMRemap",
       "net.minidev.json.writer.ArraysMapper$GenericMapper",
       "net.minidev.json.reader.JsonWriter$WriterByInterface",
       "net.minidev.json.parser.JSONParserStream",
       "net.minidev.json.writer.UpdaterMapper",
       "net.minidev.json.writer.CollectionMapper$MapClass",
       "net.minidev.json.JSONStreamAware",
       "net.minidev.json.reader.BeansWriter",
       "net.minidev.json.writer.BeansMapper$Bean",
       "net.minidev.json.writer.CollectionMapper",
       "net.minidev.json.writer.DefaultMapperCollection",
       "net.minidev.json.writer.JsonReaderI",
       "net.minidev.json.JStylerObj",
       "net.minidev.json.annotate.JsonIgnore",
       "net.minidev.json.parser.JSONParserMemory",
       "net.minidev.json.reader.ArrayWriter",
       "net.minidev.json.JSONAware",
       "net.minidev.json.JSONStreamAwareEx",
       "net.minidev.json.reader.JsonWriterI",
       "net.minidev.json.JStylerObj$MPSimple",
       "net.minidev.json.parser.JSONParserByteArray",
       "net.minidev.json.writer.ArraysMapper$11",
       "net.minidev.json.writer.ArraysMapper$10",
       "net.minidev.json.writer.ArraysMapper$13",
       "net.minidev.json.writer.ArraysMapper$12",
       "net.minidev.json.JSONArray",
       "net.minidev.json.writer.ArraysMapper$15",
       "net.minidev.json.writer.ArraysMapper$14",
       "net.minidev.json.writer.ArraysMapper$16",
       "net.minidev.json.JStylerObj$EscapeLT"
      ],
      "usedTypes": [
       "net.minidev.json.JSONArray",
       "net.minidev.json.JSONObject"
      ],
      "usageRatio": 0.021739130434782608,
      "children": [
       {
        "id": "net.minidev:accessors-smart:jar:1.2:compile",
        "coordinates": "net.minidev:accessors-smart:1.2",
        "groupId": "net.minidev",
        "artifactId": "accessors-smart",
        "version": "1.2",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 30035,
        "type": "transitive",
        "status": "bloated",
        "parent": "net.minidev:json-smart:jar:2.3:compile (optional) )",
        "allTypes": [
         "net.minidev.asm.ASMUtil",
         "net.minidev.asm.ex.NoSuchFieldException",
         "net.minidev.asm.ConvertDate",
         "net.minidev.asm.Accessor",
         "net.minidev.asm.ConvertDate$StringCmpNS",
         "net.minidev.asm.BasicFiledFilter",
         "net.minidev.asm.FieldFilter",
         "net.minidev.asm.BeansAccess",
         "net.minidev.asm.ex.ConvertException",
         "net.minidev.asm.BeansAccessBuilder",
         "net.minidev.asm.DynamicClassLoader",
         "net.minidev.asm.DefaultConverter",
         "net.minidev.asm.BeansAccessConfig"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     }
    ]
   },
   {
    "id": "org.xmlbeam:xmlprojector:jar:1.4.16:compile",
    "coordinates": "org.xmlbeam:xmlprojector:1.4.16",
    "groupId": "org.xmlbeam",
    "artifactId": "xmlprojector",
    "version": "1.4.16",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 296241,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.xmlbeam.util.intern.duplex.DuplexXPathParser",
     "org.xmlbeam.util.intern.DOMHelper$2$1",
     "org.xmlbeam.XBProjector$1",
     "org.xmlbeam.types.DefaultTypeConverter$19",
     "org.xmlbeam.XBProjector$2",
     "org.xmlbeam.config.DefaultXMLFactoriesConfig$3",
     "org.xmlbeam.config.DefaultXMLFactoriesConfig$2",
     "org.xmlbeam.ProjectionInvocationHandler$DeleteInvocationHandler",
     "org.xmlbeam.externalizer.ExternalizerAdapter",
     "org.xmlbeam.AutoMap",
     "org.xmlbeam.annotation.XBDocURL",
     "org.xmlbeam.config.DefaultXMLFactoriesConfig$1",
     "org.xmlbeam.types.DefaultTypeConverter",
     "org.xmlbeam.types.DefaultTypeConverter$20",
     "org.xmlbeam.evaluation.DefaultXPathEvaluator",
     "org.xmlbeam.DefaultFileIO$1",
     "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$ApplyPredicatesVisitor",
     "org.xmlbeam.DefaultFileIO$2",
     "org.xmlbeam.ProjectionInvocationHandler$UpdateInvocationHandler",
     "org.xmlbeam.io.StreamOutput",
     "org.xmlbeam.io.StreamInput$1",
     "org.xmlbeam.DefaultFileMap",
     "org.xmlbeam.evaluation.DocumentResolver",
     "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluatePredicateListVisitor",
     "org.xmlbeam.config.DefaultXMLFactoriesConfig$NamespacePhilosophy",
     "org.xmlbeam.AutoList$1",
     "org.xmlbeam.annotation.XBWrite",
     "org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor$VisitorClosure",
     "org.xmlbeam.externalizer.PropertyFileExternalizer",
     "org.xmlbeam.DefaultXPathBinder$CollectionType",
     "org.xmlbeam.util.intern.duplex.XParserVisitor",
     "org.xmlbeam.types.DefaultTypeConverter$Conversion",
     "org.xmlbeam.util.intern.duplex.XParser$JJCalls",
     "org.xmlbeam.types.DefaultTypeConverter$10",
     "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$EvaluateStepExprVisitor",
     "org.xmlbeam.exceptions.XBDocumentParsingException",
     "org.xmlbeam.DefaultDOMAccessInvoker$DefaultObjectInvoker",
     "org.xmlbeam.io.FileIO",
     "org.xmlbeam.util.intern.Preprocessor",
     "org.xmlbeam.ProjectionInvocationHandler$1",
     "org.xmlbeam.types.DefaultTypeConverter$13",
     "org.xmlbeam.types.DefaultTypeConverter$14",
     "org.xmlbeam.types.DefaultTypeConverter$11",
     "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor$1",
     "org.xmlbeam.types.DefaultTypeConverter$12",
     "org.xmlbeam.XBProjector$Flags",
     "org.xmlbeam.types.DefaultTypeConverter$17",
     "org.xmlbeam.types.DefaultTypeConverter$18",
     "org.xmlbeam.util.intern.DOMHelper",
     "org.xmlbeam.types.DefaultTypeConverter$15",
     "org.xmlbeam.types.DefaultTypeConverter$16",
     "org.xmlbeam.annotation.XBOverride",
     "org.xmlbeam.AutoMap$1",
     "org.xmlbeam.ProjectionInvocationHandler$ReflectionInvoker",
     "org.xmlbeam.AutoMap$2",
     "org.xmlbeam.evaluation.InvocationContext",
     "org.xmlbeam.util.intern.duplex.ExpressionType",
     "org.xmlbeam.types.CloseableList",
     "org.xmlbeam.AutoMap$3",
     "org.xmlbeam.util.intern.duplex.DuplexExpression",
     "org.xmlbeam.MixinHolder",
     "org.xmlbeam.annotation.XBUpdate",
     "org.xmlbeam.util.intern.ReflectionHelper",
     "org.xmlbeam.util.intern.duplex.SimpleNode",
     "org.xmlbeam.types.StringFactoryConversion",
     "org.xmlbeam.annotation.XBDelete",
     "org.xmlbeam.DefaultDOMAccessInvoker",
     "org.xmlbeam.util.intern.duplex.Token",
     "org.xmlbeam.types.XBAutoList",
     "org.xmlbeam.XBProjector$2$1",
     "org.xmlbeam.util.intern.duplex.XParserTreeConstants",
     "org.xmlbeam.evaluation.XPathBinder",
     "org.xmlbeam.XBProjector",
     "org.xmlbeam.DefaultFileIO$3",
     "org.xmlbeam.DefaultFileIO$4",
     "org.xmlbeam.ProjectionInvocationHandler$MixinInvoker",
     "org.xmlbeam.util.intern.duplex.ExpressionTypeEvaluationVisitor",
     "org.xmlbeam.util.intern.duplex.XParserTokenManager",
     "org.xmlbeam.util.intern.DocScope",
     "org.xmlbeam.io.UrlIO$1",
     "org.xmlbeam.AutoValue",
     "org.xmlbeam.DefaultDOMAccessInvoker$1",
     "org.xmlbeam.types.CloseableMap",
     "org.xmlbeam.util.intern.duplex.TokenMgrError",
     "org.xmlbeam.util.intern.duplex.DuplexExpression$1",
     "org.xmlbeam.DomChangeTracker",
     "org.xmlbeam.util.IOHelper",
     "org.xmlbeam.util.intern.duplex.DuplexExpression$3",
     "org.xmlbeam.annotation.XBSchemaURL",
     "org.xmlbeam.util.intern.duplex.DuplexExpression$2",
     "org.xmlbeam.util.intern.ReflectionHelper$1",
     "org.xmlbeam.util.intern.Scope",
     "org.xmlbeam.types.TypeConverter",
     "org.xmlbeam.util.intern.duplex.SimpleNode$StepListFilter",
     "org.xmlbeam.annotation.XBValue",
     "org.xmlbeam.ProjectionInvocationHandler$ReadInvocationHandler",
     "org.xmlbeam.io.ProjectionIO",
     "org.xmlbeam.dom.DOMAccess",
     "org.xmlbeam.evaluation.CanEvaluateOrProject",
     "org.xmlbeam.util.intern.duplex.XBXPathExprNotAllowedForWriting",
     "org.xmlbeam.ProjectionInvocationHandler$OverrideByDefaultMethodInvocationHandler",
     "org.xmlbeam.types.StringConstructorConversion",
     "org.xmlbeam.DefaultFileIO",
     "org.xmlbeam.util.intern.DOMHelper$2",
     "org.xmlbeam.config.XMLFactoriesConfig",
     "org.xmlbeam.externalizer.Externalizer",
     "org.xmlbeam.util.intern.DOMHelper$1",
     "org.xmlbeam.util.intern.duplex.XParserConstants",
     "org.xmlbeam.DefaultXPathBinder",
     "org.xmlbeam.ProjectionFactory",
     "org.xmlbeam.AutoList$EmptyAutoList",
     "org.xmlbeam.exceptions.XBIOException",
     "org.xmlbeam.ProjectionInvocationHandler$WriteInvocationHandler",
     "org.xmlbeam.util.intern.duplex.SimpleCharStream",
     "org.xmlbeam.evaluation.XPathEvaluator",
     "org.xmlbeam.ProjectionFactoryConfig",
     "org.xmlbeam.MethodSignature",
     "org.xmlbeam.types.StringRenderer",
     "org.xmlbeam.config.DefaultXMLFactoriesConfig$NSMapping",
     "org.xmlbeam.util.intern.duplex.XParser$1",
     "org.xmlbeam.exceptions.XBDataNotFoundException",
     "org.xmlbeam.util.intern.duplex.INodeEvaluationVisitor",
     "org.xmlbeam.types.DefaultTypeConverter$5",
     "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$1",
     "org.xmlbeam.util.intern.duplex.XParser$LookaheadSuccess",
     "org.xmlbeam.util.intern.duplex.ParseException",
     "org.xmlbeam.types.DefaultTypeConverter$4",
     "org.xmlbeam.util.intern.ReflectionHelper$ClassContextAccess",
     "org.xmlbeam.types.DefaultTypeConverter$7",
     "org.xmlbeam.types.DefaultTypeConverter$6",
     "org.xmlbeam.types.DefaultTypeConverter$1",
     "org.xmlbeam.types.DefaultTypeConverter$3",
     "org.xmlbeam.types.DefaultTypeConverter$2",
     "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$MODE",
     "org.xmlbeam.types.CloseableValue",
     "org.xmlbeam.XBProjector$MixinBuilder",
     "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$FindNameTestVisitor",
     "org.xmlbeam.types.DefaultTypeConverter$9",
     "org.xmlbeam.io.StreamInput",
     "org.xmlbeam.exceptions.XBException",
     "org.xmlbeam.types.DefaultTypeConverter$8",
     "org.xmlbeam.annotation.XBAuto",
     "org.xmlbeam.types.XBAutoMap",
     "org.xmlbeam.XBProjector$ConfigBuilder",
     "org.xmlbeam.util.intern.MethodParamVariableResolver",
     "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor$LiteralVisitor",
     "org.xmlbeam.util.UnionIterator",
     "org.xmlbeam.AutoList",
     "org.xmlbeam.config.DefaultXMLFactoriesConfig",
     "org.xmlbeam.util.intern.duplex.BuildDocumentVisitor",
     "org.xmlbeam.DefaultFileValue",
     "org.xmlbeam.util.intern.duplex.JJTXParserState",
     "org.xmlbeam.util.intern.duplex.XBPathParsingException",
     "org.xmlbeam.intern.DOMChangeListener",
     "org.xmlbeam.evaluation.CanEvaluate",
     "org.xmlbeam.DefaultFileList",
     "org.xmlbeam.annotation.XBRead",
     "org.xmlbeam.ProjectionInvocationHandler",
     "org.xmlbeam.util.intern.duplex.PostParseException",
     "org.xmlbeam.ProjectionInvocationHandler$XPathInvocationHandler",
     "org.xmlbeam.exceptions.XBPathException",
     "org.xmlbeam.DefaultDOMAccessInvoker$XMLRenderingObjectInvoker",
     "org.xmlbeam.util.intern.duplex.XParser",
     "org.xmlbeam.ProjectionInvocationHandler$ProjectionMethodInvocationHandler",
     "org.xmlbeam.util.intern.duplex.Node",
     "org.xmlbeam.util.intern.ReflectionHelper$ClassContextAccess$1",
     "org.xmlbeam.io.UrlIO",
     "org.xmlbeam.AutoValue$2",
     "org.xmlbeam.types.XBAutoValue",
     "org.xmlbeam.AutoValue$1",
     "org.xmlbeam.XBProjector$IOBuilder"
    ],
    "usedTypes": [
     "org.xmlbeam.config.DefaultXMLFactoriesConfig",
     "org.xmlbeam.XBProjector",
     "org.xmlbeam.io.StreamInput",
     "org.xmlbeam.annotation.XBRead",
     "org.xmlbeam.io.ProjectionIO",
     "org.xmlbeam.XBProjector$Flags"
    ],
    "usageRatio": 0.03508771929824561,
    "children": []
   },
   {
    "id": "de.schauderhaft.degraph:degraph-check:jar:0.1.4:test",
    "coordinates": "de.schauderhaft.degraph:degraph-check:0.1.4",
    "groupId": "de.schauderhaft.degraph",
    "artifactId": "degraph-check",
    "version": "0.1.4",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 65884,
    "type": "direct",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "de.schauderhaft.degraph.check.SlicedConstraint$$anonfun$3",
     "de.schauderhaft.degraph.check.SlicedConstraint$$anonfun$2",
     "de.schauderhaft.degraph.check.LenientLayer$",
     "de.schauderhaft.degraph.check.SlicedConstraint$$anonfun$1",
     "de.schauderhaft.degraph.check.SlicedConstraint$$anonfun$shortString$1",
     "de.schauderhaft.degraph.check.SlicedConstraint$$anonfun$shortString$2",
     "de.schauderhaft.degraph.check.ConstraintBuilder$$anonfun$noJars$1",
     "de.schauderhaft.degraph.check.DirectLayeringConstraint$",
     "de.schauderhaft.degraph.check.JCheck",
     "de.schauderhaft.degraph.check.DirectLayeringConstraint",
     "de.schauderhaft.degraph.check.LenientLayer",
     "de.schauderhaft.degraph.check.ConstraintBuilder$$anonfun$filterClasspath$1",
     "de.schauderhaft.degraph.check.SlicedConstraint$$anonfun$indexOf$1",
     "de.schauderhaft.degraph.check.Check$$anon$1$$anonfun$2$$anonfun$apply$1",
     "de.schauderhaft.degraph.check.Check$$anon$1$$anonfun$maybePrintGraph$1$1",
     "de.schauderhaft.degraph.check.Check$",
     "de.schauderhaft.degraph.check.hamcrest.HamcrestWrapper",
     "de.schauderhaft.degraph.check.JLayer$",
     "de.schauderhaft.degraph.check.hamcrest.HamcrestWrapper$",
     "de.schauderhaft.degraph.check.ConstraintBuilder$",
     "de.schauderhaft.degraph.check.StrictLayer$",
     "de.schauderhaft.degraph.check.ConstraintBuilder$$anonfun$1",
     "de.schauderhaft.degraph.check.ConstraintBuilder$$anonfun$2",
     "de.schauderhaft.degraph.check.ConstraintBuilder$$anonfun$3",
     "de.schauderhaft.degraph.check.SimpleLayer",
     "de.schauderhaft.degraph.check.Layer$",
     "de.schauderhaft.degraph.check.SlicedConstraint",
     "de.schauderhaft.degraph.check.ConstraintBuilder",
     "de.schauderhaft.degraph.check.LayeringConstraint",
     "de.schauderhaft.degraph.check.Check$$anon$1$$anonfun$1",
     "de.schauderhaft.degraph.check.Check$$anon$1$$anonfun$2",
     "de.schauderhaft.degraph.check.JLayer",
     "de.schauderhaft.degraph.check.StrictLayer",
     "de.schauderhaft.degraph.check.SlicedConstraint$class",
     "de.schauderhaft.degraph.check.Layer",
     "de.schauderhaft.degraph.check.Check$$anon$1",
     "de.schauderhaft.degraph.check.Check",
     "de.schauderhaft.degraph.check.JCheck$",
     "de.schauderhaft.degraph.check.LayeringConstraint$"
    ],
    "usedTypes": [
     "de.schauderhaft.degraph.check.ConstraintBuilder",
     "de.schauderhaft.degraph.check.JCheck"
    ],
    "usageRatio": 0.05128205128205128,
    "children": [
     {
      "id": "de.schauderhaft.degraph:degraph-core:jar:0.1.4:test",
      "coordinates": "de.schauderhaft.degraph:degraph-core:0.1.4",
      "groupId": "de.schauderhaft.degraph",
      "artifactId": "degraph-core",
      "version": "0.1.4",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 261821,
      "type": "transitive",
      "status": "bloated",
      "parent": "de.schauderhaft.degraph:degraph-check:jar:0.1.4:test",
      "allTypes": [
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visitField$2",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visitField$1",
       "de.schauderhaft.degraph.analysis.IncludeExcludeFilter$$anonfun$include_$qmark$1",
       "de.schauderhaft.degraph.slicer.ParallelCategorizer$$anonfun$apply$1",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$",
       "de.schauderhaft.degraph.analysis.asm.Analyzer$$anonfun$analyze$1$$anonfun$apply$1",
       "de.schauderhaft.degraph.analysis.asm.DirFilter$",
       "de.schauderhaft.degraph.model.Node",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitAnnotation$4",
       "de.schauderhaft.degraph.writer.EdgeWriter",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingAnnotationVisitor$$anonfun$visitEnum$1",
       "de.schauderhaft.degraph.graph.SliceSource",
       "de.schauderhaft.degraph.writer.PredicateStyler",
       "de.schauderhaft.degraph.configuration.NamedPattern$",
       "de.schauderhaft.degraph.configuration.CycleFree$$anonfun$2$$anonfun$apply$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$slice$3$$anonfun$apply$4$$anonfun$apply$5",
       "de.schauderhaft.degraph.graph.Graph",
       "de.schauderhaft.degraph.graph.SliceNodeFinder$$anonfun$findIn$1",
       "de.schauderhaft.degraph.model.SimpleNode",
       "de.schauderhaft.degraph.configuration.Configuration$$anonfun$buildFilter$1",
       "de.schauderhaft.degraph.java.JavaGraph",
       "de.schauderhaft.degraph.configuration.Configuration$$anonfun$buildFilter$2",
       "de.schauderhaft.degraph.configuration.NoPrinting$",
       "de.schauderhaft.degraph.model.ParentAwareNode$$anonfun$types$1",
       "de.schauderhaft.degraph.slicer.PatternMatchingFilter",
       "de.schauderhaft.degraph.slicer.InternalClassCategorizer",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$slice$1",
       "de.schauderhaft.degraph.slicer.PatternMatchingCategorizer$$anonfun$apply$2",
       "de.schauderhaft.degraph.writer.DefaultEdgeStyle$",
       "de.schauderhaft.degraph.writer.SlicePredicate$$anonfun$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$slice$2",
       "de.schauderhaft.degraph.slicer.PatternMatchingCategorizer$$anonfun$apply$1",
       "de.schauderhaft.degraph.slicer.NamedPatternMatchingCategorizer$",
       "de.schauderhaft.degraph.writer.EdgeStyle",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitLocalVariableAnnotation$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$slice$3",
       "de.schauderhaft.degraph.writer.Writer$$anonfun$toXml$2$$anonfun$apply$1",
       "de.schauderhaft.degraph.configuration.CycleFree$$anonfun$6$$anonfun$apply$2",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$connectedNodes$1",
       "de.schauderhaft.degraph.slicer.CombinedSlicer",
       "de.schauderhaft.degraph.writer.PredicateStyler$",
       "de.schauderhaft.degraph.analysis.asm.FileFinder$$anonfun$expandDirs$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$slices$1",
       "de.schauderhaft.degraph.model.ParentAwareNode",
       "de.schauderhaft.degraph.writer.DefaultEdgeStyle",
       "de.schauderhaft.degraph.analysis.asm.FileFinder$$anonfun$de$schauderhaft$degraph$analysis$asm$FileFinder$$singleDirFind$1",
       "de.schauderhaft.degraph.analysis.asm.FileFinder$$anonfun$de$schauderhaft$degraph$analysis$asm$FileFinder$$singleDirFind$2",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visitMethod$1",
       "de.schauderhaft.degraph.analysis.asm.FileFinder",
       "de.schauderhaft.degraph.slicer.MultiCategorizer$$anonfun$combine$1",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitLdcInsn$1",
       "de.schauderhaft.degraph.analysis.AnalyzerLike",
       "de.schauderhaft.degraph.configuration.UnnamedPattern$",
       "de.schauderhaft.degraph.slicer.NamedPatternMatchingCategorizer$$anonfun$apply$1",
       "de.schauderhaft.degraph.configuration.Configuration$$anonfun$1",
       "de.schauderhaft.degraph.slicer.NamedPatternMatchingCategorizer$$anonfun$apply$2",
       "de.schauderhaft.degraph.configuration.Configuration$$anonfun$2",
       "de.schauderhaft.degraph.configuration.Print",
       "de.schauderhaft.degraph.slicer.MultiCategorizer",
       "de.schauderhaft.degraph.java.JavaGraph$$anonfun$$lessinit$greater$1",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visitTypeAnnotation$1",
       "de.schauderhaft.degraph.java.JavaHierarchicGraph",
       "de.schauderhaft.degraph.configuration.CycleFree$$anonfun$5",
       "de.schauderhaft.degraph.configuration.Slicer$",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visitOuterClass$1",
       "de.schauderhaft.degraph.configuration.CycleFree$$anonfun$6",
       "de.schauderhaft.degraph.writer.EdgeWriter$",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$$lessinit$greater$default$1$1",
       "de.schauderhaft.degraph.model.ParentAwareNode$",
       "de.schauderhaft.degraph.analysis.asm.Analyzer$",
       "de.schauderhaft.degraph.configuration.Print$",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$slice$3$$anonfun$apply$4",
       "de.schauderhaft.degraph.slicer.PatternMatchingCategorizer",
       "de.schauderhaft.degraph.writer.Writer",
       "de.schauderhaft.degraph.configuration.Configuration",
       "de.schauderhaft.degraph.configuration.ConstraintViolation$$anonfun$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$topNodes$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$topNodes$2",
       "de.schauderhaft.degraph.analysis.asm.ClassFileFilter",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$1$$anonfun$apply$6$$anonfun$apply$7",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$internal$1$1",
       "de.schauderhaft.degraph.analysis.IncludeExcludeFilter$$anonfun$apply$1",
       "de.schauderhaft.degraph.graph.HierarchicGraph",
       "de.schauderhaft.degraph.writer.Labeling",
       "de.schauderhaft.degraph.analysis.asm.Analyzer$$anonfun$analyze$1",
       "de.schauderhaft.degraph.java.Categorizer",
       "de.schauderhaft.degraph.slicer.PatternMatchingCategorizer$",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitFieldInsn$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$sliceNodes$1$2",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$sliceNodes$1$1",
       "de.schauderhaft.degraph.writer.SlicePredicate$$anonfun$apply$2$$anonfun$apply$3",
       "de.schauderhaft.degraph.configuration.CycleFree$",
       "de.schauderhaft.degraph.analysis.asm.Analyzer",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingAnnotationVisitor$$anonfun$visitAnnotation$1",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor",
       "de.schauderhaft.degraph.model.SimpleNode$",
       "de.schauderhaft.degraph.configuration.Configuration$$anonfun$toString$2",
       "de.schauderhaft.degraph.configuration.Configuration$$anonfun$toString$1",
       "de.schauderhaft.degraph.writer.SlicePredicate$$anonfun$apply$2",
       "de.schauderhaft.degraph.writer.GroupNodeWriter$$anonfun$apply$2",
       "de.schauderhaft.degraph.graph.SliceNodeFinder$$anonfun$2$$anonfun$apply$9",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitLocalVariable$2",
       "de.schauderhaft.degraph.graph.SliceNodeFinder$$anonfun$2$$anonfun$apply$8",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitLocalVariable$1",
       "de.schauderhaft.degraph.slicer.ParallelCategorizer",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingFieldVisitor$1$$anonfun$visitAnnotation$3",
       "de.schauderhaft.degraph.slicer.PackageCategorizer",
       "de.schauderhaft.degraph.writer.GroupNodeWriter$",
       "de.schauderhaft.degraph.writer.Labeling$",
       "de.schauderhaft.degraph.writer.PredicateStyler$$anonfun$styler$1",
       "de.schauderhaft.degraph.configuration.ConstraintViolation$",
       "de.schauderhaft.degraph.configuration.Slicer",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$1",
       "de.schauderhaft.degraph.configuration.Constraint",
       "de.schauderhaft.degraph.analysis.IncludeExcludeFilter",
       "de.schauderhaft.degraph.configuration.NamedPattern",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$$lessinit$greater$default$2$1",
       "de.schauderhaft.degraph.analysis.NoSelfReference$",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visitAnnotation$2",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingFieldVisitor$1",
       "de.schauderhaft.degraph.graph.Graph$$typecreator2$1",
       "de.schauderhaft.degraph.analysis.NoSelfReference",
       "de.schauderhaft.degraph.configuration.CycleFree$$anonfun$iter$1$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$topNodes$1$$anonfun$apply$1",
       "de.schauderhaft.degraph.configuration.CycleFree",
       "de.schauderhaft.degraph.writer.NodeWriter",
       "de.schauderhaft.degraph.graph.SliceNodeFinder$$anonfun$2",
       "de.schauderhaft.degraph.writer.GroupNodeWriter",
       "de.schauderhaft.degraph.writer.SlicePredicate",
       "de.schauderhaft.degraph.slicer.PackageCategorizer$",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitTypeAnnotation$3",
       "de.schauderhaft.degraph.analysis.NoSelfReference$$anonfun$$lessinit$greater$default$1$1",
       "de.schauderhaft.degraph.configuration.CycleFree$$anonfun$3",
       "de.schauderhaft.degraph.configuration.CycleFree$$anonfun$4",
       "de.schauderhaft.degraph.configuration.NoPrinting",
       "de.schauderhaft.degraph.writer.LeafNodeWriter$",
       "de.schauderhaft.degraph.configuration.CycleFree$$anonfun$2",
       "de.schauderhaft.degraph.slicer.PatternMatcher",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitMethodInsn$1",
       "de.schauderhaft.degraph.analysis.asm.ClassFileFilter$",
       "de.schauderhaft.degraph.graph.SliceNodeFinder$$anonfun$contains$1",
       "de.schauderhaft.degraph.analysis.asm.DirFilter",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingAnnotationVisitor",
       "de.schauderhaft.degraph.configuration.PrintConfiguration",
       "de.schauderhaft.degraph.slicer.PatternMatcher$$anonfun$getPlaceHolder$1",
       "de.schauderhaft.degraph.writer.Writer$$anonfun$toXml$2",
       "de.schauderhaft.degraph.writer.Writer$$anonfun$toXml$1",
       "de.schauderhaft.degraph.slicer.NamedPatternMatchingCategorizer",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visitMethod$2",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visitMethod$3",
       "de.schauderhaft.degraph.writer.LeafNodeWriter",
       "de.schauderhaft.degraph.slicer.CombinedSlicer$$anonfun$apply$1",
       "de.schauderhaft.degraph.slicer.MultiCategorizer$",
       "de.schauderhaft.degraph.configuration.Pattern",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$allNodes$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$1$$anonfun$apply$6",
       "de.schauderhaft.degraph.model.ParentAwareNode$$anonfun$name$1",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitInsnAnnotation$1",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$$lessinit$greater$default$3$1",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visit$2",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visit$1",
       "de.schauderhaft.degraph.slicer.InternalClassCategorizer$",
       "de.schauderhaft.degraph.configuration.ConstraintViolation",
       "de.schauderhaft.degraph.graph.Graph$$typecreator1$1",
       "de.schauderhaft.degraph.graph.Graph$",
       "de.schauderhaft.degraph.writer.EdgeStyle$",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$connectedNodes$1$$anonfun$apply$3",
       "de.schauderhaft.degraph.graph.Graph$$anonfun$connectedNodes$1$$anonfun$apply$2",
       "de.schauderhaft.degraph.graph.SliceNodeFinder",
       "de.schauderhaft.degraph.writer.EdgeWriter$$anonfun$$lessinit$greater$default$1$1",
       "de.schauderhaft.degraph.writer.NodeWriter$",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitTryCatchAnnotation$1",
       "de.schauderhaft.degraph.configuration.Configuration$$anonfun$de$schauderhaft$degraph$configuration$Configuration$$buildCategorizer$1",
       "de.schauderhaft.degraph.model.ParentAwareNode$$anonfun$contains$1",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$$anonfun$visitMethod$3$$anonfun$apply$1",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1$$anonfun$visitParameterAnnotation$1",
       "de.schauderhaft.degraph.configuration.Configuration$",
       "de.schauderhaft.degraph.writer.SlicePredicate$$anonfun$1$$anonfun$apply$1",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingFieldVisitor$1$$anonfun$visitTypeAnnotation$2",
       "de.schauderhaft.degraph.analysis.asm.GraphBuildingClassVisitor$GraphBuildingMethodVisitor$1",
       "de.schauderhaft.degraph.configuration.UnnamedPattern"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "org.scala-lang.modules:scala-xml_2.11:jar:1.0.3:test",
        "coordinates": "org.scala-lang.modules:scala-xml_2.11:1.0.3",
        "groupId": "org.scala-lang.modules",
        "artifactId": "scala-xml_2.11",
        "version": "1.0.3",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 647893,
        "type": "transitive",
        "status": "bloated",
        "parent": "de.schauderhaft.degraph:degraph-core:jar:0.1.4:test",
        "allTypes": [
         "scala.xml.Null",
         "scala.xml.XML$$anonfun$save$1",
         "scala.xml.XML$$anonfun$save$2",
         "scala.xml.dtd.ParsedEntityDecl$",
         "scala.xml.Utility$",
         "scala.xml.dtd.impl.WordExp$Wildcard$",
         "scala.xml.parsing.MarkupHandler$$anonfun$parameterEntityDecl$1",
         "scala.xml.NamespaceBinding$$anonfun$buildString$1",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$1$$anonfun$apply$mcII$sp$1",
         "scala.xml.dtd.impl.SubsetConstruction$$anon$1",
         "scala.xml.parsing.ExternalSources",
         "scala.xml.PrettyPrinter$$anonfun$format$2",
         "scala.xml.PrettyPrinter$$anonfun$format$1",
         "scala.xml.parsing.ConsoleErrorHandler$class",
         "scala.xml.pull.ProducerConsumerIterator$class",
         "scala.xml.Atom",
         "scala.xml.NodeSeq$$anonfun$filt$1$1",
         "scala.xml.dtd.IntDef$",
         "scala.xml.dtd.AttrDecl$$anonfun$toString$1",
         "scala.xml.dtd.ELEMENTS$",
         "scala.xml.dtd.impl.Base$RegExp",
         "scala.xml.dtd.ElementValidator$$anonfun$check$6",
         "scala.xml.Utility$$anonfun$escape$1",
         "scala.xml.Xhtml$$anonfun$1",
         "scala.xml.dtd.ElementValidator$$anonfun$check$5",
         "scala.xml.dtd.ElementValidator$$anonfun$check$4",
         "scala.xml.dtd.impl.Base$Sequ",
         "scala.xml.parsing.ExternalSources$class",
         "scala.xml.PrettyPrinter$$anonfun$startTag$1",
         "scala.xml.Xhtml$$anonfun$toXhtml$3",
         "scala.xml.Source$",
         "scala.xml.Xhtml$$anonfun$toXhtml$2",
         "scala.xml.Xhtml$$anonfun$toXhtml$1",
         "scala.xml.Elem$",
         "scala.xml.dtd.ElementValidator$$anonfun$check$3",
         "scala.xml.dtd.ElementValidator$$anonfun$check$2",
         "scala.xml.dtd.ElementValidator$$anonfun$check$1",
         "scala.xml.transform.RuleTransformer",
         "scala.xml.dtd.impl.Base$Eps$",
         "scala.xml.pull.EvText$",
         "scala.xml.Group",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$initializeAutom$1",
         "scala.xml.PrettyPrinter$$anonfun$leafTag$1",
         "scala.xml.dtd.impl.Base$Sequ$",
         "scala.xml.Source",
         "scala.xml.dtd.ElementValidator",
         "scala.xml.dtd.impl.WordBerrySethi",
         "scala.xml.dtd.SystemID",
         "scala.xml.MetaData$$anonfun$asAttrMap$1",
         "scala.xml.parsing.MarkupParser",
         "scala.xml.dtd.ElementValidator$$anonfun$getIterable$1",
         "scala.xml.dtd.ElementValidator$$anonfun$getIterable$2",
         "scala.xml.dtd.impl.PointedHedgeExp$Point$",
         "scala.xml.PrettyPrinter$$anonfun$formatNodes$2",
         "scala.xml.XML",
         "scala.xml.PrettyPrinter$$anonfun$formatNodes$1",
         "scala.xml.PrettyPrinter$Break$",
         "scala.xml.dtd.impl.PointedHedgeExp$TopIter",
         "scala.xml.package",
         "scala.xml.parsing.ConsoleErrorHandler",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xCharRef$2",
         "scala.xml.NamespaceBinding",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xCharRef$1",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xCharRef$4",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xCharRef$3",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xCharRef$6",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xCharRef$5",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xCharRef$8",
         "scala.xml.TopScope$",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xCharRef$7",
         "scala.xml.parsing.MarkupHandler$$anonfun$parsedEntityDecl$1",
         "scala.xml.dtd.ParsedEntityDecl",
         "scala.xml.parsing.MarkupParser$$anonfun$document$1",
         "scala.xml.Utility$Escapes$",
         "scala.xml.dtd.ContentModel$$anonfun$scala$xml$dtd$ContentModel$$traverse$1$2",
         "scala.xml.dtd.ContentModel$$anonfun$scala$xml$dtd$ContentModel$$traverse$1$1",
         "scala.xml.TextBuffer$$anonfun$append$1",
         "scala.xml.include.XIncludeException",
         "scala.xml.parsing.FatalError$",
         "scala.xml.dtd.ParameterEntityDecl$",
         "scala.xml.Xhtml",
         "scala.xml.dtd.MIXED",
         "scala.xml.dtd.AttrDecl",
         "scala.xml.Text",
         "scala.xml.persistent.CachedFileStorage",
         "scala.xml.dtd.impl.PointedHedgeExp$Node",
         "scala.xml.dtd.impl.SyntaxError",
         "scala.xml.NodeSeq$$anonfun$$bslash$bslash$4",
         "scala.xml.NamespaceBinding$",
         "scala.xml.NodeSeq$$anonfun$$bslash$bslash$3",
         "scala.xml.NodeSeq$$anonfun$$bslash$bslash$2",
         "scala.xml.NodeSeq$$anonfun$$bslash$bslash$1",
         "scala.xml.dtd.NoExternalID",
         "scala.xml.dtd.AttListDecl$",
         "scala.xml.dtd.ELEMENTS",
         "scala.xml.Utility$$anonfun$appendQuoted$1",
         "scala.xml.Node$",
         "scala.xml.dtd.impl.Base$Alt",
         "scala.xml.include.sax.XIncluder",
         "scala.xml.dtd.AttrDecl$",
         "scala.xml.dtd.ExtDef$",
         "scala.xml.factory.NodeFactory$class",
         "scala.xml.NodeSeq$$anonfun$$bslash$1",
         "scala.xml.Utility",
         "scala.xml.UnprefixedAttribute$",
         "scala.xml.pull.XMLEvent",
         "scala.xml.dtd.impl.WordExp",
         "scala.xml.NodeSeq$$anonfun$$bslash$2",
         "scala.xml.SpecialNode",
         "scala.xml.dtd.PCDATA$",
         "scala.xml.dtd.impl.NondetWordAutom",
         "scala.xml.dtd.impl.NondetWordAutom$$anonfun$isEmpty$1",
         "scala.xml.dtd.impl.Base$Alt$",
         "scala.xml.dtd.ElementValidator$$anonfun$check$6$$anonfun$apply$1",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$collectTransitions$1",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$collectTransitions$2",
         "scala.xml.Utility$$anonfun$unescape$1",
         "scala.xml.Attribute$",
         "scala.xml.include.sax.EncodingHeuristics$",
         "scala.xml.dtd.ContentModelParser$",
         "scala.xml.parsing.FactoryAdapter$$anonfun$characters$1",
         "scala.xml.factory.XMLLoader$class",
         "scala.xml.PrettyPrinter$$anonfun$endTag$1",
         "scala.xml.Text$",
         "scala.xml.MetaData$",
         "scala.xml.transform.RewriteRule",
         "scala.xml.Elem$$anonfun$text$1",
         "scala.xml.EntityRef",
         "scala.xml.dtd.DocType",
         "scala.xml.parsing.XhtmlParser",
         "scala.xml.Xhtml$$anonfun$sequenceToXML$1",
         "scala.xml.QNode",
         "scala.xml.Utility$$anonfun$1",
         "scala.xml.Node$$anonfun$nonEmptyChildren$1",
         "scala.xml.Utility$$anonfun$4",
         "scala.xml.Utility$$anonfun$5",
         "scala.xml.parsing.ConstructingHandler",
         "scala.xml.Utility$$anonfun$2",
         "scala.xml.factory.LoggedNodeFactory$class",
         "scala.xml.Utility$$anonfun$3",
         "scala.xml.Utility$$anonfun$9",
         "scala.xml.parsing.ConsoleErrorHandler$$anonfun$printError$1",
         "scala.xml.Utility$$anonfun$6",
         "scala.xml.Utility$$anonfun$7",
         "scala.xml.UnprefixedAttribute",
         "scala.xml.factory.Binder",
         "scala.xml.QNode$",
         "scala.xml.dtd.ValidationException$",
         "scala.xml.pull.ProducerConsumerIterator$$anonfun$produce$1",
         "scala.xml.parsing.TokenTests$$anonfun$checkPubID$1",
         "scala.xml.NodeSeq",
         "scala.xml.Utility$$anonfun$serialize$1",
         "scala.xml.dtd.DTD",
         "scala.xml.dtd.impl.NondetWordAutom$$anonfun$next$1",
         "scala.xml.dtd.impl.NondetWordAutom$$anonfun$next$2",
         "scala.xml.dtd.impl.SubsetConstruction$$anonfun$selectTag$1",
         "scala.xml.dtd.impl.WordBerrySethi$$anon$1",
         "scala.xml.ProcInstr$",
         "scala.xml.dtd.Tokens",
         "scala.xml.dtd.UnparsedEntityDecl",
         "scala.xml.dtd.impl.NondetWordAutom$$anonfun$next$3",
         "scala.xml.dtd.impl.Base$Star$",
         "scala.xml.NodeSeq$$anonfun$text$1",
         "scala.xml.dtd.impl.DetWordAutom$$anonfun$toString$1",
         "scala.xml.dtd.ContentModel$$anonfun$isMixed$1",
         "scala.xml.package$",
         "scala.xml.dtd.ANY",
         "scala.xml.dtd.NotationDecl$",
         "scala.xml.dtd.impl.NondetWordAutom$$anonfun$finalStates$1",
         "scala.xml.dtd.ANY$",
         "scala.xml.parsing.MarkupParser$$anonfun$1",
         "scala.xml.parsing.MarkupParser$$anonfun$2",
         "scala.xml.pull.ProducerConsumerIterator$$anonfun$fillBuffer$2",
         "scala.xml.pull.ProducerConsumerIterator$$anonfun$fillBuffer$1",
         "scala.xml.dtd.MIXED$",
         "scala.xml.dtd.ParameterEntityDecl",
         "scala.xml.Node",
         "scala.xml.include.CircularIncludeException",
         "scala.xml.Attribute$$anonfun$iterator$1",
         "scala.xml.Utility$$anonfun$10",
         "scala.xml.MinimizeMode",
         "scala.xml.Properties",
         "scala.xml.dtd.UnparsedEntityDecl$",
         "scala.xml.parsing.MarkupParser$WithLookAhead$$anonfun$3$$anon$3",
         "scala.xml.parsing.XhtmlEntities",
         "scala.xml.XML$$anon$1",
         "scala.xml.NodeBuffer$$anonfun$$amp$plus$1",
         "scala.xml.dtd.impl.DetWordAutom$$anonfun$next$1",
         "scala.xml.dtd.impl.Base$Star",
         "scala.xml.parsing.ConstructingParser$",
         "scala.xml.PrefixedAttribute$",
         "scala.xml.pull.XMLEventReader",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$doComp$1",
         "scala.xml.parsing.TokenTests$$anonfun$isSpace$1",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$doComp$3",
         "scala.xml.pull.XMLEventReader$Parser",
         "scala.xml.Utility$$anonfun$collectNamespaces$1",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$doComp$2",
         "scala.xml.Utility$$anonfun$collectNamespaces$2",
         "scala.xml.Utility$$anonfun$collectNamespaces$3",
         "scala.xml.pull.ExceptionEvent$",
         "scala.xml.parsing.ConstructingParser",
         "scala.xml.MalformedAttributeException$",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$initialize$1",
         "scala.xml.MetaData$$anonfun$toString1$1",
         "scala.xml.Equality$",
         "scala.xml.Elem$$anon$1",
         "scala.xml.dtd.impl.NondetWordAutom$$anonfun$1",
         "scala.xml.dtd.ContentModelParser",
         "scala.xml.pull.XMLEventReader$Parser$$anonfun$run$1",
         "scala.xml.dtd.ContentModel$$anonfun$buildString$1",
         "scala.xml.dtd.ContentModel$$anonfun$buildString$2",
         "scala.xml.pull.XMLEventReader$Parser$$anonfun$setEvent$1",
         "scala.xml.dtd.impl.NondetWordAutom$$anonfun$2",
         "scala.xml.NodeSeq$$anon$1",
         "scala.xml.dtd.ElementValidator$$anonfun$check$1$$anonfun$find$1$1",
         "scala.xml.dtd.ExtDef",
         "scala.xml.Comment$",
         "scala.xml.Attribute$class",
         "scala.xml.Equality$class",
         "scala.xml.pull.XMLEventReader$POISON$",
         "scala.xml.dtd.ContentModel$",
         "scala.xml.NodeSeq$$anon$2",
         "scala.xml.factory.LoggedNodeFactory",
         "scala.xml.dtd.NotationDecl",
         "scala.xml.transform.BasicTransformer",
         "scala.xml.PrettyPrinter",
         "scala.xml.parsing.DefaultMarkupHandler",
         "scala.xml.dtd.EMPTY$",
         "scala.xml.dtd.IMPLIED$",
         "scala.xml.dtd.ValidationException",
         "scala.xml.parsing.FactoryAdapter",
         "scala.xml.parsing.MarkupParser$WithLookAhead$$anonfun$3",
         "scala.xml.NodeSeq$$anonfun$makeSeq$1$1",
         "scala.xml.parsing.MarkupParserCommon$class",
         "scala.xml.dtd.MakeValidationException",
         "scala.xml.transform.BasicTransformer$$anonfun$transform$1",
         "scala.xml.dtd.ElementValidator$$anonfun$scala$xml$dtd$ElementValidator$$isAllWhitespace$1$1",
         "scala.xml.MetaData$$anonfun$toString$1",
         "scala.xml.Elem",
         "scala.xml.dtd.IntDef",
         "scala.xml.Utility$$anonfun$getName$1",
         "scala.xml.PrettyPrinter$$anonfun$makeBox$1",
         "scala.xml.dtd.impl.WordExp$Label",
         "scala.xml.Utility$$anonfun$appendEscapedQuoted$1",
         "scala.xml.PrefixedAttribute",
         "scala.xml.parsing.ValidatingMarkupHandler",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$3$$anonfun$apply$2",
         "scala.xml.PrettyPrinter$Item",
         "scala.xml.PrettyPrinter$BrokenException",
         "scala.xml.dtd.DEFAULT",
         "scala.xml.pull.package",
         "scala.xml.parsing.XhtmlEntities$",
         "scala.xml.dtd.impl.DetWordAutom",
         "scala.xml.parsing.FatalError",
         "scala.xml.Utility$$anonfun$sequenceToXML$2",
         "scala.xml.parsing.FactoryAdapter$$anonfun$2",
         "scala.xml.Utility$$anonfun$sequenceToXML$1",
         "scala.xml.parsing.FactoryAdapter$$anonfun$1",
         "scala.xml.dtd.impl.SubsetConstruction$$anonfun$determinize$2",
         "scala.xml.dtd.impl.SubsetConstruction$$anonfun$determinize$1",
         "scala.xml.PrettyPrinter$$anonfun$doPreserve$2",
         "scala.xml.transform.BasicTransformer$$anonfun$1",
         "scala.xml.PrettyPrinter$$anonfun$doPreserve$1",
         "scala.xml.dtd.impl.SubsetConstruction$$anonfun$determinize$3",
         "scala.xml.pull.ProducerConsumerIterator",
         "scala.xml.TypeSymbol",
         "scala.xml.pull.EvEntityRef$",
         "scala.xml.dtd.impl.NondetWordAutom$$anonfun$containsFinal$1",
         "scala.xml.Unparsed",
         "scala.xml.dtd.PublicID",
         "scala.xml.factory.XMLLoader",
         "scala.xml.Unparsed$",
         "scala.xml.dtd.NoExternalID$",
         "scala.xml.parsing.TokenTests",
         "scala.xml.include.sax.XIncludeFilter",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$collectTransitions$2$$anonfun$apply$1",
         "scala.xml.parsing.MarkupParser$$anonfun$appendText$1",
         "scala.xml.dtd.EMPTY",
         "scala.xml.pull.EvElemStart",
         "scala.xml.dtd.DocType$",
         "scala.xml.dtd.Decl",
         "scala.xml.dtd.AttListDecl",
         "scala.xml.Comment",
         "scala.xml.dtd.PublicID$",
         "scala.xml.dtd.impl.Base$Meta",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xProcInstr$2",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xProcInstr$1",
         "scala.xml.dtd.MakeValidationException$$anonfun$fromMissingAttribute$1",
         "scala.xml.pull.EvProcInstr$",
         "scala.xml.dtd.ContentModel$ElemName$",
         "scala.xml.dtd.PEReference",
         "scala.xml.MetaData",
         "scala.xml.parsing.MarkupParser$$anonfun$xCharData$2",
         "scala.xml.PrettyPrinter$$anonfun$childrenAreLeaves$1",
         "scala.xml.parsing.MarkupParser$$anonfun$xCharData$1",
         "scala.xml.PrettyPrinter$Box",
         "scala.xml.dtd.impl.Base$Sequ$$anonfun$2",
         "scala.xml.PrettyPrinter$Box$",
         "scala.xml.dtd.ContentModel$$anonfun$toString$1",
         "scala.xml.dtd.impl.Inclusion$class",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$peek$1",
         "scala.xml.dtd.DTD$$anonfun$toString$1",
         "scala.xml.dtd.EntityDecl",
         "scala.xml.persistent.SetStorage",
         "scala.xml.parsing.MarkupParser$WithLookAhead",
         "scala.xml.dtd.Scanner$$anonfun$accS$1",
         "scala.xml.Group$",
         "scala.xml.Utility$$anonfun$sort$1",
         "scala.xml.dtd.IMPLIED",
         "scala.xml.NamespaceBinding$$anonfun$toString$1",
         "scala.xml.Node$$anonfun$descendant$1",
         "scala.xml.dtd.REQUIRED",
         "scala.xml.pull.package$",
         "scala.xml.pull.EvElemStart$",
         "scala.xml.dtd.impl.PointedHedgeExp$TopIter$",
         "scala.xml.parsing.TokenTests$class",
         "scala.xml.factory.NodeFactory$$anonfun$1",
         "scala.xml.XML$",
         "scala.xml.PrettyPrinter$Para",
         "scala.xml.parsing.MarkupParser$WithLookAhead$$anon$2",
         "scala.xml.include.sax.EncodingHeuristics",
         "scala.xml.Properties$",
         "scala.xml.TextBuffer",
         "scala.xml.parsing.MarkupHandler$$anonfun$lookupElemDecl$1",
         "scala.xml.parsing.MarkupHandler$$anonfun$lookupElemDecl$2",
         "scala.xml.parsing.MarkupParser$$anon$4",
         "scala.xml.PCData$",
         "scala.xml.pull.ExceptionEvent",
         "scala.xml.dtd.DEFAULT$$anonfun$toString$2",
         "scala.xml.parsing.TokenTests$$anonfun$isName$1",
         "scala.xml.parsing.FactoryAdapter$$anonfun$startElement$1",
         "scala.xml.NodeSeq$$anonfun$newBuilder$1",
         "scala.xml.Utility$Escapes$$anonfun$8",
         "scala.xml.dtd.PCDATA",
         "scala.xml.dtd.PEReference$",
         "scala.xml.parsing.MarkupParser$$anon$1",
         "scala.xml.dtd.ContentModel$ElemName",
         "scala.xml.pull.EvComment",
         "scala.xml.Document",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$compLast$1",
         "scala.xml.dtd.impl.Base$Alt$$anonfun$1",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$compFollow1$2",
         "scala.xml.dtd.impl.Inclusion",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$compFollow1$1",
         "scala.xml.persistent.Index",
         "scala.xml.EntityRef$",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$traverse$1",
         "scala.xml.pull.EvElemEnd",
         "scala.xml.transform.RuleTransformer$$anonfun$transform$1",
         "scala.xml.pull.EvElemEnd$",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$traverse$2",
         "scala.xml.dtd.DEFAULT$",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$2",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$1",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$4",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$3",
         "scala.xml.pull.EvComment$",
         "scala.xml.factory.Binder$$anonfun$traverse$1",
         "scala.xml.parsing.MarkupParserCommon$$anonfun$xToken$1",
         "scala.xml.pull.EvEntityRef",
         "scala.xml.dtd.ExternalID",
         "scala.xml.MinimizeMode$",
         "scala.xml.include.sax.EncodingHeuristics$EncodingNames$",
         "scala.xml.parsing.MarkupHandler",
         "scala.xml.dtd.impl.PointedHedgeExp$Node$",
         "scala.xml.parsing.TokenTests$$anonfun$isValidIANAEncoding$1",
         "scala.xml.dtd.impl.WordBerrySethi$$anonfun$makeTransition$1",
         "scala.xml.dtd.MarkupDecl",
         "scala.xml.ProcInstr",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$compFirst$1",
         "scala.xml.MalformedAttributeException",
         "scala.xml.Attribute",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$compFollow$1",
         "scala.xml.parsing.XhtmlParser$",
         "scala.xml.dtd.EntityDef",
         "scala.xml.dtd.ElemDecl",
         "scala.xml.dtd.REQUIRED$",
         "scala.xml.dtd.impl.DetWordAutom$$anonfun$1",
         "scala.xml.dtd.impl.WordExp$Letter$",
         "scala.xml.dtd.ElementValidator$$anonfun$scala$xml$dtd$ElementValidator$$find$2$1",
         "scala.xml.dtd.impl.Inclusion$$anonfun$inclusion$1",
         "scala.xml.TopScope",
         "scala.xml.dtd.impl.PointedHedgeExp",
         "scala.xml.parsing.MarkupParser$class",
         "scala.xml.factory.NodeFactory$$anonfun$eqElements$1",
         "scala.xml.dtd.Scanner",
         "scala.xml.pull.EvProcInstr",
         "scala.xml.Equality",
         "scala.xml.dtd.ContentModel",
         "scala.xml.dtd.impl.SubsetConstruction",
         "scala.xml.dtd.impl.BaseBerrySethi",
         "scala.xml.dtd.ContentModel$Translator$",
         "scala.xml.TextBuffer$",
         "scala.xml.Xhtml$",
         "scala.xml.Null$",
         "scala.xml.parsing.XhtmlEntities$$anonfun$2",
         "scala.xml.PrettyPrinter$Para$",
         "scala.xml.PCData",
         "scala.xml.parsing.XhtmlEntities$$anonfun$1",
         "scala.xml.factory.NodeFactory",
         "scala.xml.parsing.TokenTests$$anonfun$checkSysID$1",
         "scala.xml.dtd.MakeValidationException$",
         "scala.xml.parsing.MarkupParserCommon",
         "scala.xml.pull.EvText",
         "scala.xml.NodeSeq$",
         "scala.xml.dtd.impl.Base",
         "scala.xml.dtd.DefaultDecl",
         "scala.xml.dtd.impl.SubsetConstruction$$anonfun$determinize$2$$anonfun$apply$1",
         "scala.xml.dtd.ElemDecl$",
         "scala.xml.dtd.impl.SubsetConstruction$$anonfun$determinize$2$$anonfun$apply$2",
         "scala.xml.include.UnavailableResourceException",
         "scala.xml.EntityRef$$anonfun$text$1",
         "scala.xml.PrettyPrinter$$anonfun$traverse$1",
         "scala.xml.parsing.NoBindingFactoryAdapter",
         "scala.xml.dtd.impl.BaseBerrySethi$$anonfun$1",
         "scala.xml.dtd.impl.WordExp$Wildcard",
         "scala.xml.NodeBuffer",
         "scala.xml.dtd.DFAContentModel",
         "scala.xml.dtd.SystemID$",
         "scala.xml.dtd.impl.WordExp$Letter"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "org.scala-lang.modules:scala-parser-combinators_2.11:jar:1.0.3:test",
        "coordinates": "org.scala-lang.modules:scala-parser-combinators_2.11:1.0.3",
        "groupId": "org.scala-lang.modules",
        "artifactId": "scala-parser-combinators_2.11",
        "version": "1.0.3",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 415523,
        "type": "transitive",
        "status": "bloated",
        "parent": "de.schauderhaft.degraph:degraph-core:jar:0.1.4:test",
        "allTypes": [
         "scala.util.parsing.input.PagedSeqReader$",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$6$$anonfun$apply$28",
         "scala.util.parsing.combinator.ImplicitConversions$$anonfun$flatten4$1",
         "scala.util.parsing.combinator.RegexParsers$class",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$1",
         "scala.util.parsing.json.Lexer$$anonfun$string$1$$anonfun$apply$14$$anonfun$apply$15",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$2",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$3",
         "scala.util.parsing.json.JSONObject",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$4",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$5",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$withFilter$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$1$$anonfun$apply$1$$anonfun$apply$2",
         "scala.util.parsing.combinator.PackratParsers$Head",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1$$anonfun$apply$2",
         "scala.util.parsing.json.Lexer$$anonfun$intPart$1",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$6$$anonfun$apply$29",
         "scala.util.parsing.combinator.token.Tokens$class",
         "scala.util.parsing.json.Lexer$$anonfun$string$1$$anonfun$apply$14",
         "scala.util.parsing.combinator.PackratParsers$LR$",
         "scala.util.parsing.combinator.PackratParsers$class",
         "scala.util.parsing.combinator.Parsers$Error$",
         "scala.util.parsing.combinator.Parsers$$anonfun$chainr1$2",
         "scala.util.parsing.combinator.Parsers$$anonfun$chainr1$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$elem$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$17",
         "scala.util.parsing.combinator.PackratParsers$Head$",
         "scala.util.parsing.combinator.Parsers$$anonfun$positioned$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$scala$util$parsing$combinator$lexical$StdLexical$$parseDelim$1$1",
         "scala.util.parsing.combinator.token.StdTokens$class",
         "scala.util.parsing.json.Lexer$$anonfun$string$2",
         "scala.util.parsing.json.Lexer$$anonfun$string$3",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1",
         "scala.util.parsing.combinator.Parsers$OnceParser",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$24",
         "scala.util.parsing.json.Lexer$$anonfun$string$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$20",
         "scala.util.parsing.json.Lexer$$anonfun$nonzero$1",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$10",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$6",
         "scala.util.parsing.combinator.PackratParsers",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$7",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$4",
         "scala.util.parsing.combinator.PackratParsers$LR",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$5",
         "scala.util.parsing.combinator.JavaTokenParsers$class",
         "scala.util.parsing.input.OffsetPosition",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$8",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$9",
         "scala.util.parsing.combinator.ImplicitConversions$$anonfun$flatten3$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$6$$anonfun$apply$14",
         "scala.util.parsing.input.Position",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$1$$anonfun$apply$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$20$$anonfun$apply$22$$anonfun$apply$23",
         "scala.util.parsing.combinator.PackratParsers$PackratReader",
         "scala.util.parsing.json.Parser$$anonfun$2",
         "scala.util.parsing.combinator.token.StdTokens$Keyword$",
         "scala.util.parsing.combinator.Parsers$$anonfun$chainl1$2$$anonfun$apply$11",
         "scala.util.parsing.combinator.token.Tokens",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$tilde$greater$1$$anonfun$apply$4",
         "scala.util.parsing.input.OffsetPosition$",
         "scala.util.parsing.input.Reader",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$tilde$greater$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$withFailureMessage$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$chainr1$2$$anonfun$apply$13",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$_delim$2",
         "scala.util.parsing.input.CharArrayReader",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$_delim$1",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$2",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$4$$anonfun$apply$24",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$3",
         "scala.util.parsing.combinator.Parsers$$anonfun$rep1$1",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$1",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$4$$anonfun$apply$25",
         "scala.util.parsing.json.Parser",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$4$$anonfun$apply$6$$anonfun$apply$7",
         "scala.util.parsing.combinator.ImplicitConversions$class",
         "scala.util.parsing.combinator.token.Tokens$ErrorToken",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$24$$anonfun$apply$26",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$24$$anonfun$apply$25",
         "scala.util.parsing.combinator.RegexParsers",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$8$$anonfun$apply$16",
         "scala.util.parsing.input.StreamReader",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$10$$anonfun$apply$37",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$5$$anonfun$apply$30",
         "scala.util.parsing.json.Parser$$anonfun$stringVal$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anon$5$$anonfun$apply$7",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$10$$anonfun$apply$36",
         "scala.util.parsing.input.StreamReader$$anon$1",
         "scala.util.parsing.json.Parser$$anonfun$root$1",
         "scala.util.parsing.json.Lexer$$anonfun$intList$2",
         "scala.util.parsing.combinator.lexical.Lexical$$anonfun$chrExcept$1",
         "scala.util.parsing.json.Lexer$$anonfun$intList$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$acceptSeq$1$$anonfun$apply$8",
         "scala.util.parsing.combinator.lexical.Lexical",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$5$$anonfun$apply$28",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$5$$anonfun$apply$27",
         "scala.util.parsing.combinator.Parsers$$anonfun$commit$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$comment$5$$anonfun$apply$29",
         "scala.util.parsing.json.JSONFormat",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$9$$anonfun$apply$34",
         "scala.util.parsing.json.Lexer$$anonfun$expPart$3",
         "scala.util.parsing.json.JSONFormat$$anonfun$1",
         "scala.util.parsing.json.Lexer$$anonfun$expPart$1",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$9$$anonfun$apply$35",
         "scala.util.parsing.json.Lexer$$anonfun$expPart$2",
         "scala.util.parsing.combinator.token.StdTokens$Keyword",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$withFilter$1$$anonfun$apply$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anon$4",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$8$$anonfun$apply$33",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$8$$anonfun$apply$32",
         "scala.util.parsing.combinator.Parsers$Parser$$anon$5",
         "scala.util.parsing.combinator.lexical.Lexical$$anonfun$whitespaceChar$1",
         "scala.util.parsing.combinator.Parsers$ParseResult",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$less$tilde$1$$anonfun$apply$5",
         "scala.util.parsing.json.Lexer$$anonfun$intList$1$$anonfun$apply$18",
         "scala.util.parsing.combinator.lexical.Scanners$class",
         "scala.util.parsing.json.Parser$$anonfun$jsonObj$3",
         "scala.util.parsing.json.Lexer$$anonfun$token$8$$anonfun$apply$13",
         "scala.util.parsing.json.Parser$$anonfun$jsonObj$1",
         "scala.util.parsing.json.Lexer$$anonfun$token$8$$anonfun$apply$12",
         "scala.util.parsing.json.Parser$$anonfun$jsonObj$2",
         "scala.util.parsing.json.Lexer$$anonfun$number$2$$anonfun$apply$17",
         "scala.util.parsing.json.Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$3",
         "scala.util.parsing.combinator.ImplicitConversions$$anonfun$flatten5$1",
         "scala.util.parsing.combinator.token.Tokens$Token",
         "scala.util.parsing.json.Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$4",
         "scala.util.parsing.json.Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$1",
         "scala.util.parsing.json.JSONArray",
         "scala.util.parsing.json.Lexer$$anonfun$scala$util$parsing$json$Lexer$$unicodeBlock$2",
         "scala.util.parsing.combinator.ImplicitConversions$$anonfun$headOptionTailToFunList$1",
         "scala.util.parsing.combinator.RegexParsers$$anonfun$phrase$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$chainr1$1$$anonfun$apply$12",
         "scala.util.parsing.json.JSON$$anonfun$scala$util$parsing$json$JSON$$unRaw$2",
         "scala.util.parsing.combinator.Parsers$Error",
         "scala.util.parsing.json.Lexer$$anonfun$token$2$$anonfun$apply$4",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$tilde$bang$1$$anonfun$apply$6",
         "scala.util.parsing.combinator.syntactical.TokenParsers",
         "scala.util.parsing.json.Lexer$$anonfun$token$2$$anonfun$apply$3",
         "scala.util.parsing.combinator.Parsers$$anonfun$mkList$1",
         "scala.util.parsing.json.JSON$$anonfun$scala$util$parsing$json$JSON$$unRaw$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$5$$anonfun$apply$10",
         "scala.util.parsing.combinator.Parsers$$anonfun$accept$1",
         "scala.util.parsing.combinator.lexical.Lexical$$anonfun$letter$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$5$$anonfun$apply$12",
         "scala.util.parsing.combinator.Parsers$$anonfun$accept$2",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$5$$anonfun$apply$13",
         "scala.util.parsing.json.Parser$$anonfun$value$3$$anonfun$apply$1",
         "scala.util.parsing.combinator.JavaTokenParsers",
         "scala.util.parsing.input.CharArrayReader$",
         "scala.util.parsing.combinator.Parsers$$anonfun$repsep$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$chainl1$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$chainl1$2",
         "scala.util.parsing.input.Position$$anonfun$longString$1",
         "scala.util.parsing.combinator.Parsers$Failure$",
         "scala.util.parsing.json.Lexer$$anonfun$exponent$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$qmark$1",
         "scala.util.parsing.json.JSON$$anonfun$resolveType$1",
         "scala.util.parsing.json.JSON$",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$5$$anonfun$apply$26",
         "scala.util.parsing.json.Lexer$$anonfun$token$2$$anonfun$apply$6",
         "scala.util.parsing.combinator.Parsers$NoSuccess",
         "scala.util.parsing.json.JSON$$anonfun$resolveType$2",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$5$$anonfun$apply$27",
         "scala.util.parsing.json.Lexer$$anonfun$token$2$$anonfun$apply$5",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$3$$anonfun$apply$3",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$3$$anonfun$apply$5",
         "scala.util.parsing.combinator.RegexParsers$$anonfun$phrase$1$$anonfun$apply$1",
         "scala.util.parsing.json.Parser$$anonfun$value$5$$anonfun$apply$8",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$_delim$2$$anonfun$apply$31",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$withErrorMessage$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$not$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$acceptMatch$1",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers$$anonfun$stringLit$2",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers$class",
         "scala.util.parsing.input.Positional",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers$$anonfun$stringLit$1",
         "scala.util.parsing.input.StreamReader$",
         "scala.util.parsing.json.JSONObject$$anonfun$toString$1",
         "scala.util.parsing.json.Lexer$$anonfun$token$5$$anonfun$apply$10",
         "scala.util.parsing.combinator.PackratParsers$$anonfun$scala$util$parsing$combinator$PackratParsers$$setupLR$1",
         "scala.util.parsing.json.Lexer$$anonfun$hexDigit$1",
         "scala.util.parsing.json.JSONType",
         "scala.util.parsing.combinator.PackratParsers$$anonfun$scala$util$parsing$combinator$PackratParsers$$setupLR$2",
         "scala.util.parsing.combinator.Parsers$Success$",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers$$anonfun$numericLit$1",
         "scala.util.parsing.json.Lexer$$anonfun$token$3$$anonfun$apply$9",
         "scala.util.parsing.json.Lexer$$anonfun$token$3$$anonfun$apply$8",
         "scala.util.parsing.combinator.PackratParsers$PackratParser",
         "scala.util.parsing.combinator.Parsers$$anonfun$success$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$times$2",
         "scala.util.parsing.json.Lexer$$anonfun$token$3$$anonfun$apply$7",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers$$anonfun$numericLit$2",
         "scala.util.parsing.combinator.Parsers$$anonfun$acceptSeq$1",
         "scala.util.parsing.json.Lexer$$anonfun$fracPart$2",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$5$$anonfun$apply$10$$anonfun$apply$11",
         "scala.util.parsing.combinator.Parsers$OnceParser$class",
         "scala.util.parsing.combinator.PackratParsers$MemoEntry",
         "scala.util.parsing.combinator.token.Tokens$ErrorToken$",
         "scala.util.parsing.json.Lexer$$anonfun$fracPart$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$17$$anonfun$apply$19",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$17$$anonfun$apply$18",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers$$anonfun$keyword$1$$anonfun$apply$1",
         "scala.util.parsing.input.NoPosition$",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$3$$anonfun$apply$3$$anonfun$apply$4",
         "scala.util.parsing.combinator.Parsers$$tilde$",
         "scala.util.parsing.json.Parser$$anonfun$number$1",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers$$anonfun$ident$2",
         "scala.util.parsing.combinator.lexical.Scanners$Scanner",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers$$anonfun$ident$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$tilde$1$$anonfun$apply$3",
         "scala.util.parsing.combinator.syntactical.StdTokenParsers$$anonfun$keyword$1",
         "scala.util.parsing.combinator.lexical.Scanners",
         "scala.util.parsing.combinator.lexical.Lexical$$anonfun$digit$1",
         "scala.util.parsing.combinator.token.StdTokens$Identifier",
         "scala.util.parsing.combinator.token.StdTokens$NumericLit$",
         "scala.util.parsing.combinator.Parsers$$anonfun$rep1sep$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$rep1sep$2",
         "scala.util.parsing.combinator.token.StdTokens",
         "scala.util.parsing.json.JSONObject$",
         "scala.util.parsing.combinator.Parsers$$tilde",
         "scala.util.parsing.json.Parser$$anonfun$jsonObj$1$$anonfun$apply$3",
         "scala.util.parsing.json.Parser$$anonfun$jsonObj$1$$anonfun$apply$4",
         "scala.util.parsing.combinator.Parsers$$anonfun$log$1",
         "scala.util.parsing.combinator.ImplicitConversions",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$10",
         "scala.util.parsing.combinator.Parsers$$anonfun$repN$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$20$$anonfun$apply$21",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$whitespace$1$$anonfun$apply$20$$anonfun$apply$22",
         "scala.util.parsing.input.NoPosition",
         "scala.util.parsing.combinator.Parsers$NoSuccess$",
         "scala.util.parsing.input.PagedSeqReader",
         "scala.util.parsing.combinator.Parsers$OnceParser$$anonfun$$tilde$2",
         "scala.util.parsing.json.JSON",
         "scala.util.parsing.json.Lexer$$anonfun$token$7$$anonfun$apply$11",
         "scala.util.parsing.combinator.Parsers$NoSuccess$$anonfun$1",
         "scala.util.parsing.json.Parser$$anonfun$value$4$$anonfun$apply$2",
         "scala.util.parsing.combinator.syntactical.StandardTokenParsers",
         "scala.util.parsing.json.Lexer$$anonfun$number$2",
         "scala.util.parsing.combinator.Parsers$$anonfun$guard$1",
         "scala.util.parsing.combinator.token.StdTokens$NumericLit",
         "scala.util.parsing.json.Lexer$$anonfun$number$3",
         "scala.util.parsing.combinator.PackratParsers$$anon$2",
         "scala.util.parsing.combinator.PackratParsers$$anonfun$scala$util$parsing$combinator$PackratParsers$$recall$1",
         "scala.util.parsing.input.CharSequenceReader$",
         "scala.util.parsing.json.Lexer$$anonfun$number$1",
         "scala.util.parsing.combinator.PackratParsers$$anon$1",
         "scala.util.parsing.json.Parser$$anon$1",
         "scala.util.parsing.combinator.lexical.StdLexical",
         "scala.util.parsing.json.JSONFormat$",
         "scala.util.parsing.combinator.Parsers$$anonfun$rep1sep$1$$anonfun$apply$9",
         "scala.util.parsing.json.JSONFormat$$anonfun$quoteString$1",
         "scala.util.parsing.combinator.token.StdTokens$Identifier$",
         "scala.util.parsing.combinator.Parsers$$anonfun$opt$2",
         "scala.util.parsing.combinator.Parsers$$anonfun$opt$1",
         "scala.util.parsing.json.Lexer$$anonfun$token$6",
         "scala.util.parsing.json.Lexer$$anonfun$token$7",
         "scala.util.parsing.json.Lexer$$anonfun$token$4",
         "scala.util.parsing.combinator.token.StdTokens$StringLit$",
         "scala.util.parsing.json.Lexer$$anonfun$token$5",
         "scala.util.parsing.input.Position$class",
         "scala.util.parsing.json.Lexer$$anonfun$token$8",
         "scala.util.parsing.json.Lexer$$anonfun$token$9",
         "scala.util.parsing.combinator.lexical.Lexical$$anonfun$chrExcept$1$$anonfun$apply$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$4$$anonfun$apply$6",
         "scala.util.parsing.json.Lexer$$anonfun$expPart$2$$anonfun$apply$21",
         "scala.util.parsing.combinator.ImplicitConversions$$anonfun$flatten2$1",
         "scala.util.parsing.combinator.Parsers$Success",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$4$$anonfun$apply$8",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$4$$anonfun$apply$9",
         "scala.util.parsing.combinator.Parsers",
         "scala.util.parsing.json.Lexer$$anonfun$expPart$1$$anonfun$apply$20",
         "scala.util.parsing.json.Lexer",
         "scala.util.parsing.combinator.Parsers$$anonfun$err$1",
         "scala.util.parsing.json.Parser$$anonfun$jsonArray$1$$anonfun$apply$6",
         "scala.util.parsing.json.Parser$$anonfun$jsonArray$1$$anonfun$apply$5",
         "scala.util.parsing.combinator.Parsers$Failure",
         "scala.util.parsing.json.Parser$$anonfun$objEntry$1$$anonfun$apply$7",
         "scala.util.parsing.json.Lexer$$anonfun$whitespace$1",
         "scala.util.parsing.json.Lexer$$anonfun$token$2",
         "scala.util.parsing.json.Lexer$$anonfun$token$3",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$tilde$1",
         "scala.util.parsing.json.Lexer$$anonfun$token$1",
         "scala.util.parsing.combinator.RegexParsers$$anon$1",
         "scala.util.parsing.combinator.RegexParsers$$anon$2",
         "scala.util.parsing.combinator.Parsers$class",
         "scala.util.parsing.combinator.PackratParsers$$anonfun$scala$util$parsing$combinator$PackratParsers$$setupLR$2$$anonfun$apply$1",
         "scala.util.parsing.input.OffsetPosition$$anonfun$index$1",
         "scala.util.parsing.combinator.Parsers$$anon$2$$anonfun$apply$14$$anonfun$apply$15",
         "scala.util.parsing.combinator.Parsers$$anonfun$chainl1$1$$anonfun$apply$10",
         "scala.util.parsing.combinator.Parsers$$anon$2$$anonfun$apply$14",
         "scala.util.parsing.combinator.Parsers$$anon$2$$anonfun$apply$14$$anonfun$apply$16",
         "scala.util.parsing.combinator.Parsers$$anonfun$acceptIf$1",
         "scala.util.parsing.combinator.RegexParsers$$anon$3",
         "scala.util.parsing.combinator.Parsers$$anon$2$$anonfun$apply$14$$anonfun$apply$17",
         "scala.util.parsing.json.Lexer$$anonfun$number$1$$anonfun$apply$16",
         "scala.util.parsing.json.Lexer$$anonfun$sign$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$failure$1",
         "scala.util.parsing.json.JSONArray$",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$identChar$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$7$$anonfun$apply$15",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$tilde$bang$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$less$tilde$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$up$qmark$2",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$up$qmark$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$plus$1",
         "scala.util.parsing.json.Lexer$$anonfun$token$1$$anonfun$apply$2",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1",
         "scala.util.parsing.json.Lexer$$anonfun$token$1$$anonfun$apply$1",
         "scala.util.parsing.combinator.token.StdTokens$StringLit",
         "scala.util.parsing.combinator.Parsers$Parser",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$3$$anonfun$apply$23",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$3$$anonfun$apply$22",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$5",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$6",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$3",
         "scala.util.parsing.combinator.PackratParsers$MemoEntry$",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$4",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$7$$anonfun$apply$30",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$1",
         "scala.util.parsing.combinator.PackratParsers$$anonfun$parser2packrat$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$2",
         "scala.util.parsing.combinator.token.Tokens$EOF$",
         "scala.util.parsing.input.CharSequenceReader",
         "scala.util.parsing.combinator.Parsers$$anon$3",
         "scala.util.parsing.json.Lexer$$anonfun$charSeq$7$$anonfun$apply$31",
         "scala.util.parsing.combinator.Parsers$$anon$2",
         "scala.util.parsing.combinator.Parsers$$anon$1",
         "scala.util.parsing.json.Lexer$$anonfun$zero$1",
         "scala.util.parsing.combinator.Parsers$Parser$$anonfun$$times$1",
         "scala.util.parsing.combinator.Parsers$OnceParser$$anonfun$$tilde$2$$anonfun$apply$18",
         "scala.util.parsing.combinator.PackratParsers$PackratReader$$anon$3",
         "scala.util.parsing.json.Parser$$anonfun$jsonArray$3",
         "scala.util.parsing.json.Parser$$anonfun$jsonArray$2",
         "scala.util.parsing.json.Parser$$anonfun$jsonArray$1",
         "scala.util.parsing.combinator.Parsers$$anonfun$rep$1",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$9",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$7",
         "scala.util.parsing.combinator.lexical.StdLexical$$anonfun$token$8",
         "scala.util.parsing.combinator.SubSequence",
         "scala.util.parsing.input.Positional$class",
         "scala.util.parsing.json.Parser$$anonfun$value$5",
         "scala.util.parsing.json.Parser$$anonfun$value$6",
         "scala.util.parsing.json.Parser$$anonfun$value$3",
         "scala.util.parsing.json.Parser$$anonfun$value$4",
         "scala.util.parsing.json.Parser$$anonfun$value$1",
         "scala.util.parsing.json.Parser$$anonfun$value$2",
         "scala.util.parsing.json.Parser$$anonfun$objEntry$2",
         "scala.util.parsing.json.Lexer$$anonfun$fracPart$1$$anonfun$apply$19",
         "scala.util.parsing.json.Parser$$anonfun$objEntry$1"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "org.ow2.asm:asm:jar:5.1:compile",
        "coordinates": "org.ow2.asm:asm:5.1",
        "groupId": "org.ow2.asm",
        "artifactId": "asm",
        "version": "5.1",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 53468,
        "type": "transitive",
        "status": "bloated",
        "parent": "de.schauderhaft.degraph:degraph-core:jar:0.1.4:test",
        "allTypes": [
         "org.objectweb.asm.ClassWriter",
         "org.objectweb.asm.AnnotationVisitor",
         "org.objectweb.asm.MethodVisitor",
         "org.objectweb.asm.Edge",
         "org.objectweb.asm.FieldWriter",
         "org.objectweb.asm.FieldVisitor",
         "org.objectweb.asm.TypeReference",
         "org.objectweb.asm.Label",
         "org.objectweb.asm.Type",
         "org.objectweb.asm.Context",
         "org.objectweb.asm.Attribute",
         "org.objectweb.asm.signature.SignatureWriter",
         "org.objectweb.asm.ClassVisitor",
         "org.objectweb.asm.Frame",
         "org.objectweb.asm.ByteVector",
         "org.objectweb.asm.Opcodes",
         "org.objectweb.asm.Handler",
         "org.objectweb.asm.signature.SignatureReader",
         "org.objectweb.asm.Handle",
         "org.objectweb.asm.Item",
         "org.objectweb.asm.TypePath",
         "org.objectweb.asm.ClassReader",
         "org.objectweb.asm.AnnotationWriter",
         "org.objectweb.asm.MethodWriter",
         "org.objectweb.asm.signature.SignatureVisitor"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "com.assembla.scala-incubator:graph-core_2.11:jar:1.9.1:test",
        "coordinates": "com.assembla.scala-incubator:graph-core_2.11:1.9.1",
        "groupId": "com.assembla.scala-incubator",
        "artifactId": "graph-core_2.11",
        "version": "1.9.1",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 1466536,
        "type": "transitive",
        "status": "bloated",
        "parent": "de.schauderhaft.degraph:degraph-core:jar:0.1.4:test",
        "allTypes": [
         "scalax.collection.GraphEdge$DiHyperEdgeLike$class",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfs$1$$anonfun$loop$2$4",
         "scalax.collection.mutable.GraphLike$$anonfun$removeGently$3",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfs$1$$anonfun$loop$2$1",
         "scalax.collection.GraphLike$InnerNode",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfs$1$$anonfun$loop$2$3",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfs$1$$anonfun$loop$2$2",
         "scalax.collection.mutable.SimpleArraySet$$anonfun$mapUnchecked$1",
         "scalax.collection.GraphEdge$LoopFreeEdge",
         "scalax.collection.edge.WLBase$WLEdgeCompanionBase",
         "scalax.collection.GraphTraversal$Walk$$anonfun$isValid$2$$anonfun$apply$1$$anonfun$apply$3",
         "scalax.collection.edge.WLHyperEdge$",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$addDiPredecessors$1",
         "scalax.collection.GraphTraversal$Walk$$anonfun$isValid$2$$anonfun$apply$1$$anonfun$apply$2",
         "scalax.collection.GraphTraversal$Walk$$anonfun$isValid$2",
         "scalax.collection.GraphTraversal$Walk$$anonfun$isValid$1",
         "scalax.collection.edge.LBase$",
         "scalax.collection.GraphDegree$$anonfun$degreeCount$1",
         "scalax.collection.edge.WkLkBase$WkLkEdge",
         "scalax.collection.GraphTraversal$$anonfun$isConnected$1",
         "scalax.collection.GraphPredef$Param$Partitions",
         "scalax.collection.GraphTraversal$Path$$anon$1",
         "scalax.collection.edge.WLkUnDiEdge$$anon$7",
         "scalax.collection.mutable.GraphLike$$anonfun$$amp$eq$1",
         "scalax.collection.GraphTraversal$$anonfun$isConnected$2",
         "scalax.collection.mutable.GraphLike$$anonfun$$amp$eq$2",
         "scalax.collection.generic.MutableGraphCompanion",
         "scalax.collection.GraphPredef$",
         "scalax.collection.mutable.AdjacencyListGraph$class",
         "scalax.collection.edge.WkLkBase$",
         "scalax.collection.edge.WLBase$WLHyperEdgeCompanion$class",
         "scalax.collection.GraphPredef$OutParam",
         "scalax.collection.generic.AnyOrdering$FloatType$",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfs$1",
         "scalax.collection.mutable.GraphLike$InnerNode",
         "scalax.collection.GraphTraversal$Walk$",
         "scalax.collection.edge.LBase$LEdgeCompanionBase",
         "scalax.collection.GraphBase$NodeOrdering$",
         "scalax.collection.GraphTraversal$Visitor$",
         "scalax.collection.GraphLike$$anonfun$$minus$minus$bang$1",
         "scalax.collection.State$InnerNodeState$class",
         "scalax.collection.GraphEdge$DiEdgeLike",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anon$5$$anonfun$foreach$4",
         "scalax.collection.GraphTraversalImpl$AnyEdgeLazyPath",
         "scalax.collection.GraphTraversal$Path$$anon$5",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anonfun$edges$3$$anonfun$7",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anonfun$edges$3$$anonfun$6",
         "scalax.collection.mutable.EqHashSet$$anon$1",
         "scalax.collection.State$$anonfun$withHandles$1",
         "scalax.collection.TraverserImpl$class",
         "scalax.collection.mutable.EdgeOps$$anonfun$addAndGetEdge$1",
         "scalax.collection.mutable.EdgeOps$$anonfun$addAndGetEdge$2",
         "scalax.collection.GraphTraversalImpl$InnerNodeDownUpTraverser$$anonfun$newTraverser$8",
         "scalax.collection.immutable.Graph$class",
         "scalax.collection.GraphLike$$anonfun$4$$anonfun$apply$2",
         "scalax.collection.mutable.GraphLike$$anonfun$$minus$minus$bang$eq$1",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser",
         "scalax.collection.immutable.AdjacencyListGraph$$anonfun$$minus$qmark$2$$anonfun$apply$1",
         "scalax.collection.immutable.AdjacencyListBase$EdgeSet$$anonfun$find$1",
         "scalax.collection.GraphBase$InnerNode",
         "scalax.collection.edge.WkDiHyperEdge$$anon$5",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$diPredecessors$1$$anonfun$apply$3",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$incomingFrom$1",
         "scalax.collection.mutable.EdgeOps$InnerNodeOps$class",
         "scalax.collection.GraphPredef$InParam$class",
         "scalax.collection.edge.WLHyperEdge",
         "scalax.collection.edge.LkDiHyperEdge$",
         "scalax.collection.mutable.EqHash$KeyIndexIterator",
         "scalax.collection.edge.CBase$CEdgeCompanionBase$class",
         "scalax.collection.GraphLike$$anonfun$having$default$1$1",
         "scalax.collection.GraphTraversal$DepthFirst$",
         "scalax.collection.edge.LkDiEdge$",
         "scalax.collection.GraphBase$InnerNode$$anonfun$inDegree$1",
         "scalax.collection.GraphEdge$EdgeLike",
         "scalax.collection.edge.WkLBase$WkLHyperEdgeCompanion",
         "scalax.collection.GraphTraversalImpl$AnyEdgeLazyCycle",
         "scalax.collection.TraverserImpl",
         "scalax.collection.immutable.AdjacencyListBase",
         "scalax.collection.GraphTraversal$Walk$NodeValidator",
         "scalax.collection.immutable.DefaultGraphImpl$",
         "scalax.collection.GraphTraversal$Traverser$$anonfun$toGraph$1",
         "scalax.collection.GraphEdge$EdgeException$",
         "scalax.collection.edge.WLkBase$WLkHyperEdgeCompanion",
         "scalax.collection.GraphPredef$OuterEdge$class",
         "scala.collection.Util",
         "scalax.collection.GraphLike$$anonfun$contains$1",
         "scalax.collection.GraphLike$$anonfun$contains$2",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anonfun$edges$3$$anonfun$5",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anonfun$edges$3$$anonfun$4",
         "scalax.collection.GraphBase$EdgeOrdering$$anon$2",
         "scalax.collection.mutable.SimpleArraySet$",
         "scalax.collection.GraphTraversal$ExtendedNodeVisitor$$anonfun$apply$4",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$3$$anonfun$apply$1",
         "scalax.collection.GraphTraversal$AnyConnected$",
         "scalax.collection.GraphDegree$DegreeFunction",
         "scalax.collection.GraphEdge$DiHyperEdge$",
         "scalax.collection.GraphEdge$UnDiEdge$",
         "scalax.collection.GraphTraversalImpl$WalkBuilder",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$3$$anonfun$apply$3",
         "scalax.collection.GraphBase$NodeSet$$anonfun$toOuter$1",
         "scalax.collection.State$InnerNodeState",
         "scalax.collection.GraphTraversal$$anonfun$newWalkBuilder$default$3$1",
         "scalax.collection.GraphLike",
         "scalax.collection.GraphEdge$LoopFreeEdge$",
         "scalax.collection.immutable.AdjacencyListBase$EdgeSet",
         "scalax.collection.GraphTraversal$Path$class",
         "scalax.collection.GraphBase$NodeOrdering$$anon$1",
         "scalax.collection.edge.WkLDiHyperEdge",
         "scalax.collection.mutable.GraphLike$NodeSet$class",
         "scalax.collection.edge.WkLDiHyperEdge$$anon$2",
         "scalax.collection.edge.WkLHyperEdge$",
         "scalax.collection.immutable.SortedArraySet$$anonfun$4$$anonfun$apply$3",
         "scalax.collection.mutable.AdjacencyListGraph$EdgeSet",
         "scalax.collection.immutable.SortedArraySet$$anonfun$4$$anonfun$apply$2",
         "scalax.collection.GraphEdge$DiEdge$",
         "scalax.collection.GraphEdge$EdgeCopy",
         "scalax.collection.GraphTraversalImpl$$anonfun$cycle$1$$anonfun$3",
         "scalax.collection.GraphBase$$anonfun$defaultEdgeOrdering$1$$anonfun$apply$7",
         "scalax.collection.GraphTraversalImpl$$anonfun$cycle$1$$anonfun$2",
         "scalax.collection.edge.LkBase",
         "scalax.collection.edge.WkLkBase$WkLkHyperEdgeCompanion",
         "scalax.collection.edge.LkBase$LkHyperEdgeCompanion",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anonfun$edges$3$$anonfun$6$$anonfun$apply$13",
         "scalax.collection.GraphBase$$anonfun$defaultEdgeOrdering$1$$anonfun$apply$1",
         "scalax.collection.edge.LHyperEdge$$anon$14",
         "scalax.collection.GraphTraversalImpl$OuterNodeDownUpTraverser$$anonfun$newTraverser$9",
         "scalax.collection.GraphPredef$$anonfun$nodePredicate$1",
         "scalax.collection.edge.Implicits$",
         "scalax.collection.immutable.AdjacencyListBase$EdgeSet$class",
         "scalax.collection.mutable.EdgeOps$InnerNodeOps",
         "scalax.collection.edge.WBase$WEdge$",
         "scalax.collection.GraphLike$$anonfun$1",
         "scalax.collection.GraphTraversal$$anonfun$isComplete$1",
         "scalax.collection.GraphLike$$anonfun$2",
         "scalax.collection.GraphLike$$anonfun$3",
         "scalax.collection.GraphLike$$anonfun$4",
         "scalax.collection.GraphLike$$anonfun$5",
         "scalax.collection.GraphLike$$anonfun$6",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1",
         "scalax.collection.GraphLike$$anonfun$7",
         "scalax.collection.State$InnerNodeState$$anonfun$bit$1",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$2",
         "scalax.collection.edge.WLkUnDiEdge",
         "scalax.collection.edge.Implicits",
         "scalax.collection.package$",
         "scalax.collection.generic.GroupIterator$OutermostIterator$$anonfun$hasNext$1",
         "scalax.collection.GraphEdge$EqDiHyper$$anonfun$baseHashCode$2",
         "scalax.collection.edge.Implicits$XEdgeAssoc",
         "scalax.collection.edge.WBase$WEdgeCompanion$class",
         "scalax.collection.immutable.AdjacencyListBase$$anon$1$Outer$",
         "scalax.collection.GraphTraversal$InnerElemTraverser",
         "scalax.collection.mutable.ExtHashSet$$anonfun$draw$2$$anonfun$apply$1",
         "scalax.collection.edge.WkLkDiEdge",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$6",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$5",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$8",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anonfun$last$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$7",
         "scalax.collection.mutable.BuilderImpl",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$4",
         "scalax.collection.edge.WLkDiHyperEdge",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anon$6$$anonfun$foreach$5",
         "scalax.collection.edge.WkLkDiEdge$$anon$3",
         "scalax.collection.GraphLike$$anonfun$7$$anonfun$apply$4",
         "scalax.collection.GraphTraversalImpl$OuterEdgeTraverser$",
         "scalax.collection.GraphTraversal",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$Adj$",
         "scalax.collection.edge.WkLDiHyperEdge$",
         "scalax.collection.immutable.Graph$",
         "scalax.collection.edge.Implicits$XHyperEdgeAssoc",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anonfun$1",
         "scalax.collection.mutable.AdjacencyListGraph$NodeSet$$anonfun$remove$1",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl",
         "scalax.collection.GraphBase$InnerNode$$anonfun$inDegree$1$$anonfun$apply$4",
         "scalax.collection.generic.GroupIterator",
         "scalax.collection.mutable.EdgeOps$$anonfun$addAndGetLEdge$2",
         "scalax.collection.mutable.EdgeOps$$anonfun$addAndGetLEdge$1",
         "scalax.collection.edge.Implicits$WDiEdgeAssoc",
         "scalax.collection.GraphTraversalImpl$ComponentImpl$$anonfun$edges$1$$anonfun$apply$7",
         "scalax.collection.immutable.AdjacencyListGraph$class",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$addDiSuccessors$1",
         "scalax.collection.package",
         "scalax.collection.TraverserImpl$Impl$Runner",
         "scalax.collection.interfaces.ExtSetMethods$class",
         "scalax.collection.GraphBase$EdgeT$",
         "scalax.collection.GraphTraversal$Walk",
         "scalax.collection.edge.WkLHyperEdge",
         "scalax.collection.GraphDegree$$anonfun$1",
         "scalax.collection.edge.LDiEdge",
         "scalax.collection.GraphTraversal$Path$",
         "scalax.collection.GraphPredef$EdgeAssoc",
         "scalax.collection.immutable.AdjacencyListBase$$anon$1$Inner$",
         "scalax.collection.edge.LkHyperEdge$$anon$12",
         "scalax.collection.generic.GroupIterator$OutermostIteratorDecl",
         "scala.collection.FilterableSet$$anonfun$withFilter$1",
         "scalax.collection.edge.CBase$CEdgeCompanion",
         "scalax.collection.edge.WLDiEdge",
         "scalax.collection.edge.WHyperEdge",
         "scalax.collection.mutable.SimpleArraySet$$anonfun$partition$1",
         "scalax.collection.generic.GroupIterator$class",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$nodeEqThis$1",
         "scalax.collection.GraphTraversal$InnerEdgeTraverser",
         "scalax.collection.mutable.AdjacencyListGraph$EdgeImpl",
         "scalax.collection.GraphEdge$EdgeLike$Brackets$",
         "scalax.collection.edge.WkLDiEdge$$anon$2",
         "scalax.collection.immutable.AdjacencyListGraph$NodeSet$$anonfun$$plus$eq$1",
         "scalax.collection.GraphTraversal$Cycle$class",
         "scalax.collection.GraphTraversalImpl$OuterNodeTraverser$$anonfun$newTraverser$3",
         "scalax.collection.edge.WLUnDiEdge$$anon$13",
         "scalax.collection.GraphPredef$HyperEdgeAssoc",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfsWGB$1$$anonfun$loop$3$5$$anonfun$apply$7",
         "scalax.collection.mutable.ExtBitSet$$anonfun$summary$1",
         "scalax.collection.edge.Implicits$WHyperEdgeAssoc",
         "scalax.collection.immutable.AdjacencyListGraph$EdgeSet",
         "scalax.collection.GraphTraversal$Predecessors$",
         "scalax.collection.immutable.AdjacencyListGraph$NodeSet",
         "scalax.collection.GraphTraversal$TraverserInnerNode$class",
         "scalax.collection.edge.WLkDiEdge$$anon$1",
         "scalax.collection.GraphBase$$anonfun$defaultEdgeOrdering$1$$anonfun$4",
         "scalax.collection.GraphTraversal$OuterElemTraverser",
         "scalax.collection.config.GraphConfig",
         "scalax.collection.edge.WkHyperEdge",
         "scalax.collection.mutable.ArraySet$CheckedHints$",
         "scalax.collection.immutable.AdjacencyListGraph$$anonfun$$minus$1",
         "scalax.collection.mutable.SimpleArraySet$$anonfun$setToArray$1",
         "scalax.collection.edge.WLkBase",
         "scalax.collection.GraphTraversalImpl$BfsInformer",
         "scalax.collection.GraphBase$Node",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1$$anonfun$rec$1$1$$anon$1",
         "scalax.collection.GraphEdge$DiEdgeLike$",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$findOutgoingTo$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$chooseFilter$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfsWGB$1$$anonfun$loop$3$5$$anonfun$apply$1",
         "scalax.collection.mutable.ArraySet$",
         "scalax.collection.mutable.BuilderImpl$$anonfun$$plus$plus$eq$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$chooseFilter$2",
         "scalax.collection.edge.LBase$LHyperEdgeCompanion$class",
         "scalax.collection.GraphBase$InnerEdge$$anonfun$adjacents$1",
         "scalax.collection.edge.WkLkHyperEdge",
         "scalax.collection.immutable.AdjacencyListGraph$EdgeSet$$anonfun$initialize$1",
         "scalax.collection.generic.GraphCompanion",
         "scalax.collection.mutable.SimpleArraySet$$anonfun$1",
         "scalax.collection.GraphTraversal$OuterEdgeTraverser",
         "scalax.collection.GraphTraversalImpl$InnerNodeTraverser",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$incoming$1$$anonfun$apply$6",
         "scalax.collection.immutable.AdjacencyListGraph",
         "scalax.collection.GraphTraversal$$anonfun$newPathBuilder$default$3$1",
         "scalax.collection.GraphTraversal$BreadthFirst$",
         "scalax.collection.GraphDegree$$anonfun$degreeNodesMap$1",
         "scalax.collection.edge.LBase$LEdgeCompanion$class",
         "scalax.collection.GraphTraversal$ExtendedNodeVisitor",
         "scalax.collection.GraphTraversalImpl$DownUpTraverser",
         "scalax.collection.GraphTraversal$ExtendedNodeVisitor$$anon$3",
         "scalax.collection.GraphBase",
         "scalax.collection.GraphTraversalImpl$LazyPath",
         "scalax.collection.GraphBase$Edge$",
         "scalax.collection.GraphPredef$InnerEdgeParam",
         "scalax.collection.GraphLike$$typecreator1$1",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl$$anonfun$onNonLooping$1$1",
         "scalax.collection.GraphEdge$EdgeCompanionBase",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser$$anonfun$findCycle$1",
         "scalax.collection.edge.LkDiEdge",
         "scalax.collection.edge.WkDiHyperEdge",
         "scalax.collection.GraphBase$EdgeSet$class",
         "scalax.collection.immutable.Graph",
         "scalax.collection.GraphBase$Edge",
         "scalax.collection.GraphBase$Edge$WeightOrdering$",
         "scalax.collection.edge.WBase$WHyperEdgeCompanion$class",
         "scalax.collection.State$FlagStore",
         "scalax.collection.edge.WLBase$WLEdgeCompanion$class",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable",
         "scalax.collection.GraphTraversal$TraverserInnerNode$",
         "scalax.collection.GraphDegree$IntReverseOrdering$",
         "scalax.collection.GraphTraversal$Walk$Zero$class",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anonfun$edges$3",
         "scalax.collection.edge.WkLkHyperEdge$",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anon$5$$anonfun$end$1$1",
         "scalax.collection.mutable.Graph$",
         "scalax.collection.GraphTraversalImpl$SimpleLazyPath$$anonfun$edges$2",
         "scalax.collection.TraverserImpl$Impl$$anonfun$pathUntil$1",
         "scalax.collection.mutable.GraphLike$$anonfun$remove$3",
         "scalax.collection.edge.WkDiEdge",
         "scalax.collection.edge.WBase$WEdge",
         "scalax.collection.edge.LkUnDiEdge",
         "scalax.collection.immutable.SortedArraySet$",
         "scalax.collection.GraphEdge$EqHyper$$anonfun$baseHashCode$1",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$4",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$2",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$3",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$1",
         "scalax.collection.GraphTraversalImpl",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode",
         "scalax.collection.GraphTraversalImpl$DijkstraInformer",
         "scalax.collection.GraphEdge$Keyed",
         "scalax.collection.mutable.ArraySet$Hints$",
         "scalax.collection.GraphDegree$$anon$1",
         "scalax.collection.GraphEdge$ExtendedKey$",
         "scalax.collection.mutable.ExtHashSet$$anon$1",
         "scalax.collection.mutable.EqHashMap$EntryIterator",
         "scalax.collection.edge.LkUnDiEdge$$anon$12",
         "scalax.collection.edge.LBase$LEdgeImplicits",
         "scalax.collection.edge.Implicits$LDiHyperEdgeAssoc",
         "scalax.collection.GraphTraversalImpl$OuterNodeTraverser$$anonfun$nodeVisitor$1",
         "scalax.collection.mutable.AdjacencyListGraph$NodeSet$$anonfun$upsert$1",
         "scalax.collection.GraphPredef$Param$",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser$$anonfun$components$1",
         "scalax.collection.edge.WLUnDiEdge",
         "scalax.collection.edge.LkDiEdge$$anon$5",
         "scalax.collection.GraphTraversalImpl$OuterNodeTraverser",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$from$2$$anonfun$apply$8$$anonfun$4",
         "scalax.collection.edge.CBase$Attributes",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet",
         "scalax.collection.immutable.AdjacencyListGraph$$anonfun$$minus$qmark$1",
         "scalax.collection.immutable.AdjacencyListGraph$$anonfun$$minus$qmark$2",
         "scalax.collection.edge.WLBase$WLEdge",
         "scalax.collection.edge.WLBase$",
         "scalax.collection.mutable.SimpleArraySet$$anonfun$find$1",
         "scalax.collection.GraphPredef$InnerEdgeParam$",
         "scalax.collection.generic.AnyOrdering$FloatType",
         "scalax.collection.GraphBase$InnerEdge$$anonfun$privateNodes$1",
         "scalax.collection.GraphEdge$EdgeLike$",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfs$1$$anonfun$loop$2$1$$anon$3",
         "scalax.collection.GraphBase$InnerNode$",
         "scalax.collection.mutable.AdjacencyListGraph$NodeSet$$anonfun$add$1",
         "scalax.collection.package$$anonfun$1",
         "scalax.collection.GraphEdge",
         "scalax.collection.GraphTraversal$Kind",
         "scalax.collection.State$",
         "scalax.collection.edge.WkLkBase",
         "scalax.collection.GraphTraversalImpl$DownUpTraverser$$anonfun$fUnit$1",
         "scalax.collection.GraphTraversal$Parameters$",
         "scalax.collection.GraphPredef$OuterEdge",
         "scalax.collection.immutable.SortedArraySet",
         "scalax.collection.GraphTraversalImpl$MinWeightEdgeLazyPath",
         "scalax.collection.GraphTraversalImpl$OuterNodeDownUpTraverser$",
         "scalax.collection.edge.LkUnDiEdge$",
         "scalax.collection.edge.WHyperEdge$",
         "scalax.collection.GraphTraversalImpl$OuterElemTraverser$$anonfun$nodeVisitor$3",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser$$anonfun$newTraverser$1",
         "scalax.collection.GraphEdge$EqDi",
         "scalax.collection.edge.WkLUnDiEdge",
         "scalax.collection.mutable.DefaultGraphImpl$NodeBase",
         "scalax.collection.GraphTraversalImpl$$anonfun$cycle$1",
         "scalax.collection.TraverserImpl$Impl$Runner$",
         "scalax.collection.edge.LBase",
         "scalax.collection.GraphTraversalImpl$InnerNodeDownUpTraverser$$anonfun$nodeVisitor$4",
         "scalax.collection.edge.WLkDiHyperEdge$",
         "scalax.collection.TraverserImpl$Impl",
         "scalax.collection.edge.LBase$TypedLEdgeImplicits",
         "scalax.collection.GraphBase$EdgeSet",
         "scalax.collection.edge.LkDiHyperEdge",
         "scalax.collection.GraphTraversalImpl$OuterEdgeTraverser$$anonfun$newTraverser$5",
         "scalax.collection.edge.WDiHyperEdge$",
         "scalax.collection.GraphPredef$InnerNodeParam",
         "scalax.collection.mutable.ExtHashSet",
         "scalax.collection.GraphEdge$EqUnDi",
         "scalax.collection.edge.LkBase$LkEdgeCompanion",
         "scalax.collection.GraphBase$Edge$ArityOrdering$",
         "scalax.collection.GraphPredef$OuterNode",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$from$2$$anonfun$scalax$collection$immutable$AdjacencyListBase$NodeSet$class$$anonfun$$include$1$1",
         "scalax.collection.edge.LDiEdge$$anon$9",
         "scalax.collection.GraphTraversalImpl$PathBuilder",
         "scalax.collection.immutable.AdjacencyListBase$$anon$1",
         "scalax.collection.edge.CBase$CHyperEdgeCompanion$class",
         "scalax.collection.package$AbstractIterator",
         "scalax.collection.edge.WLDiHyperEdge",
         "scalax.collection.edge.WLkHyperEdge$",
         "scalax.collection.edge.WkLHyperEdge$$anon$8",
         "scalax.collection.edge.Implicits$$percent$",
         "scalax.collection.mutable.SimpleArraySet$$anonfun$filter$1",
         "scalax.collection.GraphBase$EdgeBase",
         "scalax.collection.edge.WkLkUnDiEdge",
         "scalax.collection.mutable.EqHash$$anonfun$hashCode$1",
         "scalax.collection.mutable.ExtBitSet$$anonfun$toString$1",
         "scalax.collection.GraphTraversal$Path",
         "scalax.collection.GraphPredef$InnerNodeParam$$anonfun$toNodeT$1",
         "scalax.collection.GraphBase$$anonfun$totalWeight$1",
         "scala.collection.EqSetFacade$$anonfun$contains$2",
         "scalax.collection.GraphEdge$EqDiHyper$class",
         "scalax.collection.GraphTraversalImpl$OuterElemTraverser$$anonfun$newTraverser$7",
         "scalax.collection.GraphEdge$HyperEdge$$anonfun$1",
         "scala.collection.FilterableSet",
         "scalax.collection.edge.CBase$CEdgeCompanion$class",
         "scalax.collection.GraphBase$InnerNode$$anonfun$degree$1",
         "scalax.collection.edge.WBase$WEdgeCompanionBase$class",
         "scalax.collection.edge.WLBase$WLEdge$class",
         "scalax.collection.GraphTraversal$class",
         "scalax.collection.edge.WLkBase$WLkEdge$class",
         "scalax.collection.generic.AnyOrdering$StringType$",
         "scalax.collection.edge.WBase$WEdgeCompanion",
         "scalax.collection.edge.WUnDiEdge",
         "scalax.collection.GraphBase$NodeSet$$anonfun$adjacencyListsToString$1$$anonfun$apply$5",
         "scalax.collection.mutable.EqHash",
         "scalax.collection.edge.WkBase$WkEdgeCompanion",
         "scalax.collection.mutable.GraphLike$NodeSet$$anonfun$remove$2",
         "scalax.collection.mutable.GraphLike$NodeSet$$anonfun$remove$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1$$anonfun$rec$1$1",
         "scalax.collection.generic.AnyOrdering$RefType",
         "scalax.collection.TraverserImpl$Impl$class",
         "scalax.collection.edge.LBase$LEdge$",
         "scalax.collection.mutable.AdjacencyListGraph$NodeSet",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1$$anonfun$sortedAdjacentNodes$1$2$$anonfun$apply$3",
         "scalax.collection.generic.GroupIterator$MidIterator$$anonfun$hasNext$3",
         "scalax.collection.GraphTraversalImpl$InnerEdgeTraverser$",
         "scalax.collection.edge.WkLBase$WkLEdgeCompanion",
         "scalax.collection.GraphTraversalImpl$InnerNodeDownUpTraverser",
         "scala.collection.Abstract",
         "scalax.collection.GraphTraversal$",
         "scalax.collection.GraphPredef$OutParam$class",
         "scalax.collection.GraphPredef$EdgeParam$class",
         "scalax.collection.GraphBase$InnerNode$$anonfun$degree$1$$anonfun$apply$2",
         "scalax.collection.GraphBase$$anonfun$defaultEdgeOrdering$1",
         "scalax.collection.edge.LkBase$",
         "scalax.collection.edge.Implicits$WDiHyperEdgeAssoc",
         "scalax.collection.edge.WkLUnDiEdge$",
         "scalax.collection.GraphPredef$InnerEdgeParam$class",
         "scalax.collection.GraphPredef$OuterNode$",
         "scalax.collection.GraphTraversalImpl$DijkstraInformer$",
         "scalax.collection.mutable.EqHash$class",
         "scalax.collection.mutable.EqHashSet$$anonfun$elemHashCode$1",
         "scalax.collection.GraphDegree$$anonfun$degreeNodeSeq$1",
         "scalax.collection.GraphEdge$HyperEdgeCompanion",
         "scalax.collection.mutable.EdgeOps$$anonfun$addAndGetWLEdge$2",
         "scalax.collection.mutable.EdgeOps$$anonfun$addAndGetWLEdge$1",
         "scalax.collection.immutable.AdjacencyListBase$EdgeSet$$anonfun$contains$1",
         "scalax.collection.edge.WLDiHyperEdge$$anon$7",
         "scalax.collection.immutable.AdjacencyListBase$EdgeSet$$anonfun$contains$2",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$filtered$2",
         "scalax.collection.GraphBase$InnerEdge$",
         "scalax.collection.GraphTraversalImpl$InnerEdgeTraverser",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$filtered$1",
         "scalax.collection.edge.CBase$CHyperEdgeCompanion",
         "scalax.collection.GraphTraversalImpl$InnerElemTraverser$$anonfun$newTraverser$6",
         "scalax.collection.GraphTraversalImpl$PathBuilder$$anonfun$select$1",
         "scalax.collection.config.AdjacencyListArrayConfig",
         "scalax.collection.GraphTraversal$TraverserInnerNode",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$isIndependentOf$2$$anonfun$apply$2",
         "scalax.collection.edge.WLkBase$",
         "scalax.collection.GraphTraversalImpl$WgbInformer$",
         "scalax.collection.GraphTraversal$TraverserMethods$$anonfun$shortestPathTo$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1$$anonfun$9",
         "scalax.collection.GraphBase$InnerEdge",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$incoming$1",
         "scalax.collection.GraphPredef$Param$Partitions$$anonfun$toInParams$1",
         "scalax.collection.GraphDegree$InDegree$",
         "scalax.collection.edge.package",
         "scalax.collection.GraphBase$NodeSet$$anonfun$adjacencyListsToString$1",
         "scalax.collection.immutable.SortedArraySet$$anonfun$4",
         "scalax.collection.immutable.SortedArraySet$$anonfun$3",
         "scalax.collection.edge.WkBase$WkEdge",
         "scalax.collection.immutable.SortedArraySet$$anonfun$2",
         "scalax.collection.GraphTraversalImpl$OuterNodeDownUpTraverser",
         "scalax.collection.immutable.SortedArraySet$$anonfun$1",
         "scalax.collection.edge.LBase$LEdgeCompanion",
         "scalax.collection.GraphTraversalImpl$InnerNodeDownUpTraverser$$anonfun$foreach$1",
         "scalax.collection.GraphTraversalImpl$class",
         "scalax.collection.State$$anonfun$1",
         "scalax.collection.GraphLike$$anonfun$liftedTree4$1$1",
         "scalax.collection.State$$anonfun$3",
         "scalax.collection.GraphTraversalImpl$OuterElemTraverser",
         "scalax.collection.State$$anonfun$2",
         "scalax.collection.State$$anonfun$4",
         "scalax.collection.edge.WLDiEdge$",
         "scalax.collection.GraphBase$NodeSet$class",
         "scalax.collection.GraphBase$$anonfun$defaultNodeOrdering$1",
         "scalax.collection.GraphEdge$EdgeLike$$anonfun$isLooping$1",
         "scalax.collection.edge.WBase$WEdge$class",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfsWGB$1$$anonfun$loop$3$2$$anon$4",
         "scalax.collection.edge.WkLUnDiEdge$$anon$8",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfs$1$$anonfun$apply$6",
         "scalax.collection.GraphTraversal$Traverser",
         "scalax.collection.GraphTraversalImpl$OuterNodeDownUpTraverser$$anonfun$nodeVisitor$5",
         "scalax.collection.edge.package$",
         "scalax.collection.edge.WkLkDiHyperEdge$$anon$3",
         "scalax.collection.GraphBase$InnerNode$$anonfun$outDegree$1",
         "scalax.collection.GraphTraversal$OuterNodeTraverser",
         "scalax.collection.generic.GraphCoreCompanion",
         "scalax.collection.GraphDegree$$anonfun$totalDegree$1",
         "scalax.collection.mutable.ArraySet$Hints$Default$",
         "scalax.collection.GraphTraversalImpl$InnerNodeTraverser$",
         "scalax.collection.GraphPredef$$anon$2",
         "scalax.collection.GraphPredef$$anon$1",
         "scalax.collection.generic.GroupIterator$InnermostIterator$class",
         "scalax.collection.generic.AnyOrdering$IntegerType$",
         "scalax.collection.GraphTraversalImpl$OuterNodeDownUpTraverser$$anonfun$foreach$2",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anonfun$foreach$3",
         "scalax.collection.GraphPredef$NodeParam$class",
         "scalax.collection.generic.GroupIterator$InnermostIteratorDecl",
         "scalax.collection.GraphEdge$EdgeException",
         "scalax.collection.GraphLike$$typecreator2$1",
         "scalax.collection.GraphTraversal$Walk$$anonfun$foreach$1",
         "scalax.collection.mutable.GraphLike",
         "scalax.collection.GraphTraversal$Walk$$anonfun$foreach$2",
         "scalax.collection.edge.WBase$",
         "scalax.collection.generic.GroupIterator$LevelIterator$class",
         "scalax.collection.GraphEdge$EqHyper$class",
         "scalax.collection.immutable.DefaultGraphImpl",
         "scalax.collection.edge.WLUnDiEdge$",
         "scalax.collection.GraphLike$$anonfun$liftedTree3$1$1",
         "scalax.collection.GraphLike$EdgeSet",
         "scalax.collection.edge.LBase$LEdge",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$Adj$$anonfun$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$bfs$1$$anonfun$scalax$collection$TraverserImpl$Impl$Runner$$anonfun$$visit$1$1$$anon$2",
         "scalax.collection.mutable.SimpleArraySet$NonCheckingBuilder",
         "scalax.collection.mutable.GraphLike$NodeSet",
         "scalax.collection.edge.WDiEdge$",
         "scalax.collection.edge.WLkHyperEdge$$anon$4",
         "scala.collection.Abstract$",
         "scalax.collection.GraphLike$NodeSet$class",
         "scalax.collection.mutable.ArraySet$CheckedHints",
         "scalax.collection.GraphTraversalImpl$InnerEdgeTraverser$$anonfun$newTraverser$4",
         "scalax.collection.immutable.AdjacencyListGraph$InnerNodeImpl",
         "scalax.collection.generic.GraphCompanion$class",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfsWGB$1$$anonfun$loop$3$5",
         "scalax.collection.mutable.ExtBitSet$",
         "scalax.collection.GraphTraversal$TraverserMethods$$anonfun$isConnectedWith$1",
         "scalax.collection.edge.WLHyperEdge$$anon$13",
         "scalax.collection.edge.LkBase$LkEdge$class",
         "scalax.collection.GraphTraversal$WalkBuilder",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$diPredecessors$1",
         "scalax.collection.GraphLike$$anonfun$$minus$minus$bang$1$$anonfun$apply$5$$anonfun$apply$6",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anonfun$edges$3$$anonfun$7$$anonfun$apply$14",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$class",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfsWGB$1$$anonfun$loop$3$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfsWGB$1$$anonfun$loop$3$2",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfsWGB$1$$anonfun$loop$3$3",
         "scalax.collection.GraphTraversalImpl$SimpleLazyPath$$anon$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfsWGB$1$$anonfun$loop$3$4",
         "scalax.collection.GraphBase$ElemOrdering",
         "scalax.collection.edge.WkBase",
         "scalax.collection.GraphPredef$EdgeParam",
         "scalax.collection.GraphEdge$DiHyperEdgeLike$$anonfun$matches$1",
         "scalax.collection.generic.AnyOrdering$StringType",
         "scalax.collection.generic.AnyOrdering$Type",
         "scalax.collection.GraphLike$$anonfun$6$$anonfun$apply$3",
         "scalax.collection.GraphBase$InnerEdge$$anonfun$adjacents$1$$anonfun$apply$6",
         "scalax.collection.edge.WBase$WHyperEdgeCompanion",
         "scalax.collection.GraphDegree$$anonfun$degreeCount$1$$anonfun$apply$1",
         "scalax.collection.generic.GroupIterator$MidIterator",
         "scalax.collection.mutable.AdjacencyListGraph",
         "scalax.collection.edge.Implicits$LUnDiEdgeAssoc",
         "scalax.collection.GraphEdge$Eq$class",
         "scalax.collection.GraphTraversal$ExtendedNodeVisitor$class",
         "scalax.collection.GraphLike$$anonfun$liftedTree2$1$1",
         "scalax.collection.generic.GraphCompanion$GraphCanBuildFrom",
         "scalax.collection.TraverserImpl$Impl$$anonfun$3",
         "scalax.collection.GraphBase$class",
         "scalax.collection.TraverserImpl$Impl$$anonfun$2",
         "scalax.collection.GraphDegree$class",
         "scalax.collection.mutable.ExtHashSet$",
         "scalax.collection.TraverserImpl$Impl$$anonfun$1",
         "scalax.collection.GraphTraversal$NodeInformer",
         "scalax.collection.GraphTraversalImpl$",
         "scalax.collection.mutable.ArraySet$class",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$outgoing$1$$anonfun$apply$5",
         "scalax.collection.edge.WkLkHyperEdge$$anon$9",
         "scalax.collection.GraphBase$InnerEdge$class",
         "scalax.collection.mutable.GraphLike$EdgeSet",
         "scalax.collection.edge.WLkUnDiEdge$",
         "scalax.collection.mutable.AdjacencyListGraph$NodeSet$$anonfun$upsert$1$$anonfun$2",
         "scalax.collection.mutable.EqHashSet",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$class",
         "scalax.collection.edge.WkDiHyperEdge$",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$withEdges$1$1",
         "scalax.collection.GraphTraversal$Direction",
         "scalax.collection.GraphPredef$InnerNodeParam$",
         "scalax.collection.State$InnerNodeState$$anonfun$bit_$eq$1",
         "scalax.collection.mutable.DefaultGraphImpl$",
         "scalax.collection.edge.LkBase$LkEdge",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anon$6",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anon$5",
         "scalax.collection.GraphTraversal$Traverser$class",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anon$2",
         "scalax.collection.GraphEdge$EdgeCompanion",
         "scalax.collection.mutable.EqHashMap$",
         "scalax.collection.mutable.EdgeOps$$anonfun$addAndGetWEdge$1",
         "scalax.collection.edge.Implicits$LHyperEdgeAssoc",
         "scalax.collection.mutable.GraphLike$NodeSet$$anonfun$$minus$qmark$1",
         "scalax.collection.edge.WkUnDiEdge$$anon$11",
         "scalax.collection.mutable.EdgeOps$$anonfun$addAndGetWEdge$2",
         "scalax.collection.mutable.GraphLike$NodeSet$$anonfun$$minus$qmark$2",
         "scalax.collection.mutable.SimpleArraySet$$anon$1",
         "scalax.collection.GraphTraversalImpl$InnerNodeTraversalImpl",
         "scalax.collection.mutable.GraphLike$EdgeSet$class",
         "scalax.collection.immutable.SortedArraySet$$anonfun$keysIteratorFrom$3",
         "scalax.collection.immutable.SortedArraySet$$anonfun$keysIteratorFrom$2",
         "scalax.collection.immutable.SortedArraySet$$anonfun$keysIteratorFrom$1",
         "scalax.collection.GraphTraversalImpl$InnerEdgeTraverser$$anonfun$edgeVisitor$1",
         "scalax.collection.GraphTraversalImpl$DfsInformer",
         "scalax.collection.State$$anonfun$clearNodeStates$1",
         "scalax.collection.GraphLike$$anonfun$iterator$1",
         "scalax.collection.edge.WLkDiEdge$",
         "scalax.collection.GraphTraversal$Successors$",
         "scalax.collection.Graph$",
         "scalax.collection.edge.WLDiHyperEdge$",
         "scalax.collection.GraphTraversalImpl$InnerNodeDownUpTraverser$",
         "scalax.collection.State$Handle",
         "scalax.collection.mutable.EdgeOps$class",
         "scalax.collection.GraphPredef$Param$Partitions$$anonfun$toOuterEdges$1",
         "scalax.collection.edge.WkLkDiHyperEdge",
         "scalax.collection.edge.LHyperEdge$",
         "scalax.collection.GraphLike$$anonfun$liftedTree1$1$1",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$isIndependentOf$2",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$isIndependentOf$1",
         "scalax.collection.GraphBase$EdgeOrdering$",
         "scalax.collection.GraphTraversalImpl$InnerElemTraverser$",
         "scalax.collection.edge.WLkBase$WLkEdgeCompanion",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser$",
         "scalax.collection.edge.LUnDiEdge$$anon$14",
         "scalax.collection.edge.WLkBase$WLkEdge",
         "scalax.collection.GraphEdge$",
         "scalax.collection.GraphEdge$Eq",
         "scalax.collection.edge.Implicits$$colon$tilde$greater$",
         "scalax.collection.immutable.DefaultGraphImpl$NodeBase",
         "scala.collection.FilterableSet$class",
         "scalax.collection.GraphTraversalImpl$DownUpTraverser$class",
         "scalax.collection.mutable.ExtHashSet$$anonfun$draw$2",
         "scalax.collection.edge.WLkDiEdge",
         "scalax.collection.mutable.ExtHashSet$$anonfun$draw$1",
         "scalax.collection.GraphLike$class",
         "scalax.collection.State",
         "scalax.collection.immutable.SortedArraySet$$anonfun$3$$anonfun$apply$1",
         "scalax.collection.mutable.AdjacencyListGraph$EdgeSet$$anonfun$initialize$1",
         "scalax.collection.mutable.EqHashMap$KeyIterator",
         "scalax.collection.GraphEdge$ExtendedKey$$anonfun$hashCode$1",
         "scalax.collection.mutable.AdjacencyListGraph$NodeSet$$anonfun$remove$1$$anonfun$apply$5",
         "scalax.collection.immutable.AdjacencyListGraph$NodeSet$$anonfun$$plus$eq$1$$anonfun$1",
         "scalax.collection.GraphBase$EdgeSet$$anonfun$toOuter$2",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anonfun$scalax$collection$GraphTraversalImpl$ReverseStackTraversable$$upper$2",
         "scalax.collection.GraphTraversalImpl$ReverseStackTraversable$$anonfun$scalax$collection$GraphTraversalImpl$ReverseStackTraversable$$upper$1",
         "scalax.collection.edge.WkLkBase$WkLkEdgeCompanion",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anon$4",
         "scalax.collection.GraphEdge$EqHyper",
         "scalax.collection.GraphBase$Edge$$anonfun$mkNode$1",
         "scalax.collection.GraphBase$Edge$$anonfun$mkNode$2",
         "scalax.collection.edge.WkLkUnDiEdge$$anon$10",
         "scalax.collection.GraphPredef$$anon$2$$anon$4",
         "scalax.collection.GraphPredef",
         "scalax.collection.GraphTraversal$Walk$$anonfun$isValid$2$$anonfun$apply$1",
         "scalax.collection.GraphBase$NodeBase",
         "scalax.collection.edge.LBase$LEdge$class",
         "scalax.collection.GraphPredef$InnerEdgeParam$$anonfun$toEdgeT$1",
         "scala.collection.SeqFacade",
         "scalax.collection.immutable.AdjacencyListGraph$$anonfun$$minus$bang$hash$1",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$scalax$collection$immutable$AdjacencyListBase$InnerNode$$isIncomingFrom$3",
         "scalax.collection.generic.ImmutableGraphCompanion",
         "scalax.collection.edge.LBase$LEdgeCompanionBase$class",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$scalax$collection$immutable$AdjacencyListBase$InnerNode$$isIncomingFrom$1",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$scalax$collection$immutable$AdjacencyListBase$InnerNode$$isIncomingFrom$2",
         "scalax.collection.GraphEdge$Eq$$anonfun$nrEqualingNodes$1",
         "scalax.collection.GraphEdge$EdgeLike$Brackets",
         "scalax.collection.immutable.AdjacencyListBase$class",
         "scalax.collection.edge.WUnDiEdge$",
         "scalax.collection.edge.LBase$LHyperEdgeCompanion",
         "scalax.collection.GraphTraversalImpl$InnerNodeTraverser$$anonfun$newTraverser$2",
         "scalax.collection.GraphPredef$HyperEdgeAssoc$",
         "scalax.collection.mutable.Graph",
         "scalax.collection.GraphBase$InnerElem",
         "scalax.collection.GraphTraversalImpl$BfsInformer$",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl$$anonfun$onLooping$1$3",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl$$anonfun$onLooping$1$2",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl$$anonfun$onLooping$1$1",
         "scalax.collection.edge.WkBase$",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser$$anonfun$findCycle$1$$anonfun$apply$11",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser$$anonfun$findCycle$1$$anonfun$apply$12",
         "scalax.collection.edge.Implicits$$percent$plus$",
         "scalax.collection.State$GraphDump",
         "scalax.collection.edge.WBase",
         "scalax.collection.edge.WkLkDiEdge$",
         "scalax.collection.GraphTraversal$ComponentTraverser",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$neighbors$1",
         "scalax.collection.edge.WLBase$WLHyperEdgeCompanion",
         "scalax.collection.GraphBase$Edge$$anonfun$3",
         "scalax.collection.immutable.AdjacencyListBase$EdgeSet$$anonfun$find$1$$anonfun$apply$9",
         "scalax.collection.GraphBase$Edge$$anonfun$2",
         "scalax.collection.GraphEdge$HyperEdge",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$bfs$1$$anonfun$apply$4",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$bfs$1$$anonfun$apply$5",
         "scalax.collection.GraphTraversalImpl$OuterEdgeTraverser$$anonfun$edgeVisitor$2",
         "scalax.collection.config.CoreConfig",
         "scalax.collection.generic.AnyOrdering$IntegerType",
         "scalax.collection.GraphTraversalImpl$OuterNodeTraverser$",
         "scalax.collection.GraphEdge$UnDiEdge$$anon$1",
         "scalax.collection.edge.Implicits$$colon$tilde$",
         "scalax.collection.mutable.GraphLike$$anonfun$$plus$plus$eq$2",
         "scalax.collection.GraphDegree$OutDegree$",
         "scalax.collection.mutable.EqHashMap",
         "scalax.collection.edge.WkBase$WkHyperEdgeCompanion",
         "scalax.collection.GraphTraversal$WalkBuilder$class",
         "scalax.collection.GraphTraversal$Walk$Zero",
         "scala.collection.SetFacade",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$from$2$$anonfun$3",
         "scalax.collection.generic.GroupIterator$OutermostIterator",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$outgoingTo$1",
         "scalax.collection.GraphTraversalImpl$InnerElemTraverser$$anonfun$nodeVisitor$2",
         "scalax.collection.GraphTraversal$TraverserMethods$$anonfun$hasSuccessor$1",
         "scala.collection.Util$",
         "scalax.collection.GraphEdge$DiEdgeLike$class",
         "scalax.collection.GraphLike$NodeSet",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$from$4",
         "scalax.collection.edge.LUnDiEdge$",
         "scalax.collection.GraphPredef$$anonfun$nodePredicate$1$$anonfun$apply$1",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$from$2",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$from$3",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$from$1",
         "scalax.collection.GraphTraversalImpl$OuterElemTraverser$",
         "scalax.collection.edge.LDiHyperEdge$",
         "scalax.collection.mutable.SimpleArraySet",
         "scalax.collection.edge.WLkDiHyperEdge$$anon$1",
         "scalax.collection.edge.WkLkBase$WkLkEdge$class",
         "scalax.collection.GraphTraversal$Walk$$anonfun$weight$1",
         "scalax.collection.GraphPredef$Param$Partitions$$anonfun$toOuterNodes$1",
         "scalax.collection.edge.LBase$OuterLEdgeImplicits",
         "scalax.collection.edge.LDiHyperEdge",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl$$anonfun$onNonLooping$1$1$$anonfun$apply$1$$anonfun$apply$2",
         "scalax.collection.generic.GroupIterator$InnermostIterator$$anonfun$hasNext$2",
         "scalax.collection.GraphTraversal$PathBuilder",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$addNeighbors$1",
         "scalax.collection.GraphLike$InnerNode$class",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$findIncomingFrom$1",
         "scalax.collection.GraphEdge$EqUnDi$class",
         "scalax.collection.GraphTraversal$$anonfun$5",
         "scalax.collection.edge.LDiHyperEdge$$anon$11",
         "scalax.collection.edge.WkUnDiEdge$",
         "scalax.collection.GraphTraversalImpl$DfsInformer$",
         "scalax.collection.edge.LkHyperEdge",
         "scalax.collection.GraphPredef$$anon$1$$anon$3",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$",
         "scalax.collection.GraphTraversalImpl$OuterElemTraverser$$anonfun$edgeVisitor$4",
         "scalax.collection.GraphTraversal$Kind$class",
         "scalax.collection.mutable.ExtBitSet",
         "scalax.collection.GraphEdge$UnDiEdge",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$connectionsWith$1",
         "scalax.collection.GraphTraversal$TraverserMethods$$anonfun$hasPredecessor$1",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath",
         "scalax.collection.GraphTraversal$Walk$$anonfun$weight$2",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1$ordNodeWeight$2$",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser$$anonfun$components$1$$anonfun$apply$9$$anonfun$apply$10",
         "scala.collection.EqSetFacade",
         "scalax.collection.edge.WkLkDiHyperEdge$",
         "scalax.collection.GraphDegree$DegreeOrdering$",
         "scalax.collection.GraphBase$NodeSet",
         "scalax.collection.mutable.EdgeOps",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$scalax$collection$immutable$AdjacencyListBase$InnerNode$$isOutgoingTo$3",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$scalax$collection$immutable$AdjacencyListBase$InnerNode$$isOutgoingTo$2",
         "scalax.collection.GraphPredef$Param",
         "scalax.collection.edge.WkDiEdge$$anon$4",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$scalax$collection$immutable$AdjacencyListBase$InnerNode$$isOutgoingTo$1",
         "scalax.collection.mutable.GraphLike$class",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$lookup$1",
         "scalax.collection.GraphBase$NodeOrdering",
         "scalax.collection.GraphPredef$Param$class",
         "scalax.collection.mutable.ArraySet$Hints$class",
         "scalax.collection.GraphTraversalImpl$ComponentImpl$$anonfun$edges$1",
         "scalax.collection.Graph",
         "scalax.collection.GraphLike$$anonfun$2$$anonfun$applyOrElse$1",
         "scalax.collection.GraphDegree$Filter",
         "scala.collection.SetFacade$$anonfun$contains$1",
         "scalax.collection.edge.CBase",
         "scalax.collection.Graph$class",
         "scalax.collection.edge.WkLkUnDiEdge$",
         "scalax.collection.mutable.Graph$class",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$bfs$1$$anonfun$scalax$collection$TraverserImpl$Impl$Runner$$anonfun$$visit$1$1",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$Adj$$anonfun$1$$anonfun$apply$1",
         "scalax.collection.GraphEdge$HyperEdge$",
         "scalax.collection.edge.WkDiEdge$",
         "scalax.collection.edge.LkDiHyperEdge$$anon$6",
         "scalax.collection.mutable.EqHash$$anonfun$equals$1",
         "scalax.collection.generic.AnyOrdering$RefType$",
         "scalax.collection.mutable.EqHashSet$",
         "scalax.collection.edge.LUnDiEdge",
         "scalax.collection.edge.CBase$",
         "scalax.collection.generic.GroupIterator$InnermostIterator",
         "scalax.collection.GraphPredef$$anonfun$seqToGraphParam$1",
         "scalax.collection.GraphTraversal$Cycle$$anonfun$2",
         "scalax.collection.GraphTraversal$Walk$$anonfun$1",
         "scalax.collection.GraphTraversal$ExtendedNodeVisitor$",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyCycle",
         "scalax.collection.GraphBase$InnerNode$class",
         "scalax.collection.GraphEdge$DiHyperEdge",
         "scalax.collection.GraphTraversal$Cycle",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$initialize$1",
         "scalax.collection.mutable.ArraySet",
         "scalax.collection.GraphTraversalImpl$SimpleLazyPath",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl$$anonfun$onNonLooping$1$1$$anonfun$apply$1",
         "scalax.collection.GraphTraversal$$anonfun$4",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1$$anonfun$sortedAdjacentNodes$1$1",
         "scalax.collection.GraphTraversal$$anonfun$3",
         "scalax.collection.GraphEdge$ExtendedKey",
         "scalax.collection.GraphPredef$EdgeAssoc$",
         "scalax.collection.edge.WLDiEdge$$anon$6",
         "scalax.collection.GraphBase$Node$",
         "scalax.collection.mutable.GraphLike$NodeSet$$anonfun$removeGently$2",
         "scalax.collection.mutable.GraphLike$NodeSet$$anonfun$removeGently$1",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl$$anonfun$addDiSuccOrHook$1",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl$$anonfun$onNonLooping$1$1$$anonfun$apply$4",
         "scalax.collection.mutable.AdjacencyListGraph$InnerNodeImpl$$anonfun$onNonLooping$1$1$$anonfun$apply$3",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1$$anonfun$sortedAdjacentNodes$1$2",
         "scalax.collection.edge.Implicits$LDiEdgeAssoc",
         "scalax.collection.mutable.AdjacencyListGraph$NodeSet$$anonfun$add$1$$anonfun$1",
         "scalax.collection.mutable.EqHashMap$$anonfun$elemHashCode$1",
         "scalax.collection.GraphLike$NodeBase",
         "scalax.collection.TraverserImpl$Impl$$anonfun$pathUntil$1$$anonfun$apply$2",
         "scalax.collection.edge.Implicits$WUnDiEdgeAssoc",
         "scalax.collection.edge.LHyperEdge",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1$$anonfun$traverseMapNodes$1$1",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$shortestPathTo$1$$anonfun$traverseMapNodes$1$2",
         "scalax.collection.GraphEdge$NodeProduct$",
         "scalax.collection.immutable.SortedArraySet$$anon$1",
         "scalax.collection.GraphEdge$ExtendedKey$class",
         "scalax.collection.edge.WLkHyperEdge",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$from$2$$anonfun$apply$8",
         "scalax.collection.immutable.AdjacencyListBase$NodeSet$$anonfun$from$2$$anonfun$apply$7",
         "scalax.collection.mutable.ArraySet$Hints$HashOnly$",
         "scalax.collection.GraphDegree$DegreeOrdering",
         "scalax.collection.GraphPredef$NodeParam",
         "scala.collection.FilteredSet",
         "scalax.collection.GraphEdge$DiEdge",
         "scalax.collection.edge.WkUnDiEdge",
         "scalax.collection.GraphTraversal$TraverserMethods",
         "scalax.collection.GraphTraversal$NodeInformer$$anon$6",
         "scalax.collection.edge.WkLBase$",
         "scalax.collection.edge.WDiEdge",
         "scalax.collection.generic.GroupIterator$LevelIterator",
         "scalax.collection.GraphBase$NoOrdering",
         "scalax.collection.GraphTraversalImpl$WgbInformer",
         "scalax.collection.GraphTraversalImpl$OuterEdgeTraverser",
         "scalax.collection.edge.WBase$WEdgeCompanionBase",
         "scalax.collection.GraphDegree",
         "scalax.collection.GraphEdge$EqDiHyper",
         "scalax.collection.GraphPredef$InParam",
         "scalax.collection.GraphTraversalImpl$ComponentImpl",
         "scalax.collection.edge.WkBase$WkEdge$class",
         "scalax.collection.edge.LkHyperEdge$",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$4$$anonfun$apply$4",
         "scalax.collection.GraphLike$$anonfun$$minus$minus$bang$1$$anonfun$apply$1",
         "scalax.collection.edge.Implicits$$plus$",
         "scalax.collection.GraphTraversal$Parameters",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$4$$anonfun$apply$2",
         "scalax.collection.GraphLike$$anonfun$$minus$minus$bang$1$$anonfun$apply$5",
         "scalax.collection.GraphTraversalImpl$InnerElemTraverser",
         "scalax.collection.mutable.DefaultGraphImpl",
         "scalax.collection.immutable.EqSet",
         "scalax.collection.config.CoreConfig$",
         "scalax.collection.edge.WkHyperEdge$$anon$10",
         "scalax.collection.edge.WLBase$WLEdgeCompanion",
         "scalax.collection.generic.GraphCoreCompanion$class",
         "scalax.collection.mutable.EqHashMap$ValueIterator",
         "scalax.collection.immutable.AdjacencyListBase$$anon$1$Inner$$anonfun$onOuterChange$1",
         "scalax.collection.edge.LDiEdge$",
         "scalax.collection.GraphTraversal$Component",
         "scalax.collection.GraphLike$$anonfun$getOrElse$1",
         "scalax.collection.GraphLike$$anonfun$getOrElse$2",
         "scalax.collection.GraphTraversalImpl$PathBuilder$$anon$3",
         "scalax.collection.GraphTraversal$Walk$class",
         "scalax.collection.GraphBase$InnerEdge$$anonfun$1",
         "scalax.collection.mutable.ArraySet$Hints",
         "scalax.collection.GraphEdge$DiHyperEdgeLike",
         "scalax.collection.mutable.SimpleArraySet$CheckingBuilder",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$bfs$1",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anonfun$edges$3$$anonfun$get$1$1",
         "scalax.collection.GraphTraversalImpl$MultiEdgeLazyPath$$anonfun$edges$3$$anonfun$get$1$2",
         "scalax.collection.GraphTraversal$NodeInformer$",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$4$$anonfun$apply$6",
         "scalax.collection.TraverserImpl$Impl$Runner$$anonfun$dfsWGB$1",
         "scalax.collection.GraphTraversalImpl$WalkBuilder$$anonfun$add$4$$anonfun$apply$5",
         "scalax.collection.config.GraphConfig$",
         "scalax.collection.generic.GroupIterator$MidIterator$class",
         "scalax.collection.edge.CBase$CEdgeCompanionBase",
         "scalax.collection.GraphTraversal$OuterNodeDownUpTraverser",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$neighbors$1$$anonfun$apply$4",
         "scalax.collection.GraphEdge$HyperEdge$$anonfun$matches$2",
         "scalax.collection.GraphEdge$HyperEdge$$anonfun$matches$3",
         "scalax.collection.GraphTraversal$Walk$$anon$2",
         "scalax.collection.immutable.AdjacencyListBase$InnerNode$$anonfun$outgoing$1",
         "scalax.collection.GraphTraversal$FluentProperties",
         "scalax.collection.GraphTraversal$Walk$$anon$4",
         "scalax.collection.edge.WDiHyperEdge",
         "scalax.collection.GraphTraversal$InnerNodeTraverser",
         "scalax.collection.generic.GroupIterator$OutermostIterator$class",
         "scalax.collection.GraphBase$InnerNode$$anonfun$outDegree$1$$anonfun$apply$3",
         "scalax.collection.GraphEdge$EqDi$class",
         "scalax.collection.mutable.GraphBuilder",
         "scalax.collection.edge.WLBase$WLEdgeCompanionBase$class",
         "scalax.collection.interfaces.ExtSetMethods",
         "scalax.collection.edge.WLBase",
         "scalax.collection.GraphTraversal$Properties",
         "scalax.collection.generic.MutableGraphCompanion$class",
         "scalax.collection.GraphTraversalImpl$PathBuilder$",
         "scalax.collection.GraphPredef$Param$Partitions$$anonfun$partitioned$1",
         "scalax.collection.GraphTraversal$TraverserMethods$$anonfun$pathTo$1",
         "scalax.collection.GraphEdge$EdgeLike$class",
         "scalax.collection.GraphPredef$InnerNodeParam$class",
         "scalax.collection.generic.AnyOrdering",
         "scalax.collection.State$FlagStore$",
         "scalax.collection.GraphDegree$Degree$",
         "scalax.collection.immutable.AdjacencyListGraph$$anonfun$2",
         "scalax.collection.GraphEdge$LoopFreeEdge$class",
         "scalax.collection.immutable.AdjacencyListGraph$$anonfun$3",
         "scalax.collection.GraphTraversal$InnerNodeDownUpTraverser",
         "scalax.collection.GraphTraversalImpl$MapPathTraversable",
         "scalax.collection.mutable.EqHash$EqHashIterator",
         "scalax.collection.mutable.EqHash$",
         "scalax.collection.GraphBase$EdgeOrdering",
         "scalax.collection.edge.WkHyperEdge$",
         "scalax.collection.GraphBase$",
         "scalax.collection.GraphTraversalImpl$InnerElemTraverser$$anonfun$edgeVisitor$3",
         "scalax.collection.edge.WkLDiEdge$",
         "scalax.collection.State$class",
         "scalax.collection.edge.WkLBase",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser$$anonfun$components$1$$anonfun$apply$8",
         "scalax.collection.GraphTraversalImpl$ComponentTraverser$$anonfun$components$1$$anonfun$apply$9",
         "scalax.collection.edge.WkLDiEdge"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     },
     {
      "id": "org.scalatest:scalatest_2.11:jar:2.2.4:test",
      "coordinates": "org.scalatest:scalatest_2.11:2.2.4",
      "groupId": "org.scalatest",
      "artifactId": "scalatest_2.11",
      "version": "2.2.4",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 7185789,
      "type": "transitive",
      "status": "bloated",
      "parent": "de.schauderhaft.degraph:degraph-check:jar:0.1.4:test",
      "allTypes": [
       "org.scalatest.prop.TableFor7$$anon$7",
       "org.scalatest.matchers.MatcherFactory1$AndBeWord",
       "org.scalatest.Matchers$AtLeastCollected",
       "org.scalatest.tools.Framework$SbtReporter",
       "org.scalatest.ConcurrentDocumenter",
       "org.scalatest.mock.MockitoSugar",
       "org.scalatest.fixture.NoArg$class",
       "org.scalatest.tools.FilterAlertProvided",
       "org.scalatest.tools.SuiteElement",
       "org.scalactic.Chain$$anonfun$transpose$1",
       "org.scalatest.tools.Durations$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2",
       "org.scalatest.tools.PresentInfoProvided",
       "org.scalatest.fixture.ConfigMapFixture",
       "org.scalatest.selenium.WebBrowser$FrameWebElementTarget",
       "org.scalatest.prop.TableFor21$$anonfun$apply$102$$anonfun$apply$103",
       "org.scalatest.tools.PresentAlertProvided",
       "org.scalatest.CompileMacro$$treecreator7$1",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$12",
       "org.scalatest.selenium.Safari",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$11",
       "org.scalatest.MustMatchers$ResultOfStartWithWordForString",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$14",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$13",
       "org.scalatest.time.Millisecond$",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$15",
       "org.scalactic.Accumulation$$anon$4$$anonfun$combined$3",
       "org.scalatest.selenium.WebBrowser$SearchField",
       "org.scalatest.tools.Runner$$anonfun$1",
       "org.scalatest.tools.Runner$$anonfun$3",
       "org.scalatest.tools.Runner$$anonfun$2",
       "org.scalatest.fixture.WordSpecLike$WordSpecStringWrapper$$anonfun$is$2",
       "org.scalatest.matchers.MatcherFactory8$OrNotWord$$anon$8",
       "org.scalatest.words.ResultOfAWordToSymbolApplication",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$69$$anonfun$apply$20",
       "org.scalatest.FunSpecLike$class",
       "org.scalatest.MustMatchers$AtMostCollected$",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$10",
       "org.scalatest.tools.DashboardReporter",
       "org.scalatest.tools.Runner$$anonfun$9",
       "org.scalatest.tools.Runner$$anonfun$8",
       "org.scalatest.tools.Runner$$anonfun$5",
       "org.scalatest.MustMatchers$ResultOfFullyMatchWordForCollectedString",
       "org.scalatest.tools.Runner$$anonfun$4",
       "org.scalatest.tools.Runner$$anonfun$7",
       "org.scalatest.tools.Runner$$anonfun$6",
       "org.scalatest.tools.GraphicReporterConfiguration",
       "org.scalatest.Doc$IncludedSuite$",
       "org.scalatest.PropSpecLike$$anonfun$runTests$1",
       "org.scalatest.tools.Framework$$anon$2",
       "org.scalatest.matchers.Matcher$AndStartWithWord",
       "org.scalatest.tools.Framework$$anon$1",
       "org.scalatest.selenium.WebBrowser$LinkTextQuery$",
       "org.scalatest.FailureMessages",
       "org.scalatest.events.TestStarting",
       "org.scalatest.PathMessageRecordingAlerter$$anonfun$recordedEvents$4",
       "org.scalatest.matchers.MatcherFactory5$OrBeWord",
       "org.scalatest.words.BeWord$$anon$30$$anon$25",
       "org.scalatest.Inside$class",
       "org.scalatest.fixture.Spec$",
       "org.scalatest.DiagrammedExpr$$anonfun$eliminateDuplicates$2",
       "org.scalatest.DiagrammedExpr$$anonfun$eliminateDuplicates$1",
       "org.scalatest.enablers.Collecting",
       "org.scalactic.TimesOnInt$Repeater$$anonfun$1",
       "org.scalatest.enablers.Sequencing$$anon$9",
       "org.scalatest.concurrent.JavaFutures$$anon$2$$anon$1$$anonfun$$lessinit$greater$1",
       "org.scalatest.enablers.Sequencing$$anon$8",
       "org.scalactic.Requirements$RequirementsHelper",
       "org.scalatest.words.ResultOfInOrderApplication$$anonfun$toString$1",
       "org.scalatest.fixture.TestDataFixture$class",
       "org.scalatest.matchers.MatcherFactory2$OrIncludeWord",
       "org.scalatest.prop.Checkers$$anonfun$org$scalatest$prop$Checkers$$getLabelDisplay$1",
       "org.scalatest.enablers.Sequencing$$anon$3",
       "org.scalatest.enablers.Sequencing$$anon$2",
       "org.scalatest.matchers.LazyArg$",
       "org.scalatest.enablers.Sequencing$$anon$1",
       "org.scalatest.enablers.Sequencing$$anon$7",
       "org.scalatest.prop.TableFor1$$anon$1",
       "org.scalatest.enablers.Sequencing$$anon$6",
       "org.scalatest.enablers.Sequencing$$anon$5",
       "org.scalatest.prop.TableFor18$$anon$18",
       "org.scalatest.enablers.Sequencing$$anon$4",
       "org.scalatest.matchers.MatcherFactory6$AndEndWithWord",
       "org.scalatest.tools.Durations$$anonfun$addTests$1",
       "org.scalatest.tools.Memento",
       "org.scalatest.enablers.Sortable$",
       "org.scalatest.prop.TableFor22$$anonfun$newBuilder$22",
       "org.scalatest.words.EndWithWord$$anon$2",
       "org.scalatest.words.EndWithWord$$anon$3",
       "org.scalatest.matchers.MatcherFactory8$OrContainWord",
       "org.scalactic.MacroOwnerRepair$Utils$$anonfun$repairOwners$1",
       "org.scalatest.selenium.WebBrowser$MultiSel$$anonfun$24",
       "org.scalatest.concurrent.Conductors$class",
       "org.scalatest.selenium.WebBrowser$MultiSel$$anonfun$25",
       "org.scalatest.matchers.Matcher$AndHaveWord",
       "org.scalatest.CompositeStatus$$anonfun$waitUntilCompleted$1",
       "org.scalatest.junit.JUnitRunner$$anonfun$1",
       "org.scalatest.fixture.Suite$OneArgTest",
       "org.scalatest.selenium.WebBrowser$NameQuery",
       "org.scalatest.selenium.WebBrowser$MultiSel$$anonfun$values_$eq$2",
       "org.scalatest.PathMessageRecordingInformer$",
       "org.scalatest.selenium.WebBrowser$MultiSel$$anonfun$values_$eq$1",
       "org.scalatest.fixture.FixtureNodeFamily$FixtureTestLeaf",
       "org.scalatest.events.LineInFile",
       "org.scalactic.Every$$anonfun$grouped$1",
       "org.scalatest.words.NotWord$$anon$50$$anon$3",
       "org.scalatest.fixture.WordSpecLike$WordSpecStringWrapper",
       "org.scalactic.PrettyMethods$PrettifierConfig",
       "org.scalatest.matchers.MatcherFactory4$OrIncludeWord",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addChosenStyles$1",
       "org.scalatest.CompileMacro$$typecreator16$1",
       "org.scalatest.StreamlinedXmlEquality$",
       "org.scalatest.fixture.Transformer",
       "org.scalatest.matchers.MatcherFactory5$$anon$16$$anon$2",
       "org.scalatest.tools.Framework$ScalaTestRunner$$anonfun$filterMembersOnly$1",
       "org.scalatest.matchers.MatcherFactory6$OrContainWord",
       "org.scalatest.junit.MustMatchersForJUnit",
       "org.scalatest.selenium.WebBrowser$MonthField$$anonfun$9",
       "org.scalatest.tools.PresentReminderWithoutCanceledTests$",
       "org.scalatest.exceptions.StackDepthExceptionHelper$$anonfun$getStackDepthFun$1",
       "org.scalatest.matchers.MatcherFactory7$$anon$15$$anon$5",
       "org.scalatest.prop.TableFor3$$anonfun$apply$12",
       "org.scalatest.prop.TableFor3$$anonfun$apply$11",
       "org.scalactic.TypeCheckedTripleEquals",
       "org.scalatest.JSuite$class",
       "org.scalatest.concurrent.JavaFutures$class",
       "org.scalatest.tools.Runner",
       "org.scalatest.selenium.WebBrowser$ValueElement$$anonfun$checkCorrectType$1",
       "org.scalatest.words.EndWithWord$$anon$1",
       "org.scalatest.MustMatchers$ResultOfBeWordForCollectedAny$$anonfun$definedAt$1",
       "org.scalatest.SpecLike$$anon$1",
       "org.scalatest.matchers.MatcherFactory5$AndContainWord",
       "org.scalatest.matchers.MatcherFactory1$$anon$32$$anon$10",
       "org.scalatest.enablers.Sortable$$anon$1$$anonfun$isSorted$1",
       "org.scalatest.matchers.MatcherFactory5$AndIncludeWord",
       "org.scalatest.Inside$$anonfun$1",
       "org.scalatest.selenium.WebBrowser$FrameNameOrIdTarget",
       "org.scalatest.AssertionsMacro",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$1",
       "org.scalatest.MustMatchers$ResultOfProduceInvocation",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$2",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$3",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$4",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$5",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$6",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$7",
       "org.scalatest.events.ExceptionalEvent",
       "org.scalatest.matchers.MatcherFactory4$OrContainWord",
       "org.scalatest.prop.TableFor18$$anonfun$apply$87",
       "org.scalatest.tools.RunnerJFrame$$anonfun$org$scalatest$tools$RunnerJFrame$$selectFirstErrorInLastRerunIfThisIsThatError$1",
       "org.scalatest.prop.TableFor18$$anonfun$apply$86",
       "org.scalatest.prop.TableFor20$$anon$20$$anonfun$apply$99",
       "org.scalatest.matchers.MatcherFactory2$$anon$38$$anon$18",
       "org.scalatest.matchers.MatcherFactory4$OrNotWord$$anon$16",
       "org.scalatest.DocSpecLike$Snippet",
       "org.scalatest.exceptions.PropertyCheckFailedException$$anonfun$argNames$1",
       "org.scalatest.words.NotWord$$anon$64$$anon$46",
       "org.scalatest.tools.FilterTestStarting",
       "org.scalatest.events.TestCanceled$",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$8",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForDoubleLength$9",
       "org.scalatest.words.ResultOfContainWord$$anonfun$atMostOneOf$1",
       "org.scalatest.DocSpecLike",
       "org.scalatest.matchers.MatcherFactory1$$anon$41$$anon$19",
       "org.scalatest.StepwiseNestedSuiteExecution$class",
       "org.scalatest.Doc$Markup$",
       "org.scalatest.fixture.UnitFixture",
       "org.scalatest.MustMatchers$HavePropertyMatcherGenerator$$anon$1",
       "org.scalatest.tools.SuiteRunner",
       "org.scalactic.Accumulation$TravValidatable",
       "org.scalactic.Resources",
       "org.scalatest.fixture.WordSpecLike",
       "org.scalatest.Matchers$AllCollected$",
       "org.scalactic.RequirementsMacro",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$noneOf$1$$anonfun$apply$11",
       "org.scalatest.tools.StandardOutReporterConfiguration",
       "org.scalatest.concurrent.Conductors$Conductor$ClockThread$",
       "org.scalatest.tools.XmlReporter",
       "org.scalactic.TypeCheckedLegacyTripleEquals$class",
       "org.scalatest.PathMessageRecordingInformer$$anonfun$recordedEvents$2",
       "org.scalatest.DiagrammedAssertions$class",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$8",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$9",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$6",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$7",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$4",
       "org.scalatest.AppendedClues",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$5",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$2",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$3",
       "org.scalatest.MustMatchers$AllCollected$",
       "org.scalatest.selenium.WebBrowser$RadioButton",
       "org.scalatest.path.FunSpecLike",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$1",
       "org.scalactic.Many",
       "org.scalatest.words.ContainWord$$anon$21$$anon$8",
       "org.scalatest.fixture.FixtureNodeFamily$",
       "org.scalatest.TryValues$",
       "org.scalatest.tools.ScalaTestFramework$RunConfig$$anonfun$getConfigurations$1",
       "org.scalatest.concurrent.Conductor",
       "org.scalactic.MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser",
       "org.scalactic.ConversionCheckedLegacyTripleEquals$class",
       "org.scalatest.matchers.MatcherFactory2$AndNotWord$$anon$19",
       "org.scalatest.path.FreeSpecLike$$anonfun$run$1",
       "org.scalactic.Chain$$anonfun$1",
       "org.scalatest.Matchers$ResultOfIncludeWordForString",
       "org.scalatest.Alerter",
       "org.scalatest.concurrent.PatienceConfiguration$",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$inOrderOnly$1",
       "org.scalatest.fixture.FlatSpecLike$InAndIgnoreMethodsAfterTaggedAs",
       "org.scalatest.enablers.Aggregating$$anon$4$$anonfun$containsAtLeastOneOf$4",
       "org.scalatest.words.ResultOfAnWordToSymbolApplication",
       "org.scalatest.selenium.WebBrowser$FrameNameOrIdTarget$$anonfun$switch$2",
       "org.scalatest.DiagrammedExprMacro$$anonfun$org$scalatest$DiagrammedExprMacro$$isByName$1",
       "org.scalatest.DiagrammedExprMacro$$anonfun$org$scalatest$DiagrammedExprMacro$$isByName$2",
       "org.scalatest.Canceled$",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$inOrderOnly$1$$anonfun$apply$13",
       "org.scalatest.tools.PackageElement",
       "org.scalatest.tools.DashboardReporter$$anonfun$toXml$1$1",
       "org.scalatest.PartialFunctionValues$Valuable$$anonfun$valueAt$1",
       "org.scalatest.concurrent.Futures$FutureConcept$$anonfun$tryTryAgain$1$3",
       "org.scalatest.concurrent.Futures$FutureConcept$$anonfun$tryTryAgain$1$2",
       "org.scalatest.concurrent.Futures$FutureConcept$$anonfun$tryTryAgain$1$4",
       "org.scalatest.events.NameInfo$",
       "org.scalatest.prop.TableFor11$$anon$11$$anonfun$apply$54",
       "org.scalatest.MustMatchers$TheSameInstanceAsPhrase",
       "org.scalatest.prop.TableFor11$$anon$11$$anonfun$apply$55",
       "org.scalatest.PrivateMethodTester$PrivateMethod",
       "org.scalatest.AppendedClues$Clueful",
       "org.scalatest.words.NotWord$$anon$55$$anon$37$$anonfun$apply$3",
       "org.scalatest.matchers.MatcherFactory4$AndNotWord",
       "org.scalatest.concurrent.Futures$FutureConcept$$anonfun$tryTryAgain$1$1",
       "org.scalatest.matchers.MatcherFactory7$AndNotWord$$anon$9",
       "org.scalatest.concurrent.AsyncAssertions$Dismissals",
       "org.scalatest.concurrent.IntegrationPatience",
       "org.scalatest.PrivateMethodTester",
       "org.scalatest.tools.SuiteDiscoveryHelper$",
       "org.scalatest.FlatSpec",
       "org.scalatest.matchers.MatcherFactory4$$anon$20$$anon$4",
       "org.scalatest.tagobjects.FirefoxBrowser$",
       "org.scalatest.fixture.Transformer$$anonfun$apply$1",
       "org.scalatest.selenium.Firefox",
       "org.scalatest.fixture.SpecLike$$anonfun$register$1$1$$anonfun$apply$1",
       "org.scalatest.fixture.SpecLike$$anonfun$register$1$1$$anonfun$apply$3",
       "org.scalatest.fixture.SpecLike$$anonfun$register$1$1$$anonfun$apply$2",
       "org.scalatest.matchers.MatcherFactory8$AndFullyMatchWord",
       "org.scalatest.tools.HtmlReporter$$anonfun$org$scalatest$tools$HtmlReporter$$test$1",
       "org.scalatest.tools.PresentReminderWithShortStackTraces$",
       "org.scalatest.concurrent.AbstractPatienceConfiguration$PatienceConfig",
       "org.scalatest.concurrent.SocketInterruptor",
       "org.scalatest.tools.JUnitXmlReporter$$anonfun$idxAdjustmentForRecordedEvents$1",
       "org.scalactic.Every$$anonfun$flatMap$1",
       "org.scalatest.Suite$$anon$2",
       "org.scalatest.Suite$$anon$3",
       "org.scalatest.BeforeAndAfterEachTestData",
       "org.scalatest.matchers.MatcherFactory3$$anon$26$$anon$8",
       "org.scalatest.enablers.Aggregating$$anon$2$$anonfun$containsAtLeastOneOf$2$$anonfun$apply$4",
       "org.scalatest.words.NotWord$$anon$55$$anon$37",
       "org.scalatest.RandomTestOrder$$anonfun$runTest$1",
       "org.scalatest.RandomTestOrder$$anonfun$runTest$2",
       "org.scalatest.FixtureEngine",
       "org.scalatest.Doc$$anonfun$nestedSuites$1",
       "org.scalatest.Doc$$anonfun$nestedSuites$2",
       "org.scalatest.fixture.FunSpecLike$TheyWord",
       "org.scalatest.tools.DashboardReporter$$anonfun$4",
       "org.scalatest.tools.DashboardReporter$$anonfun$3",
       "org.scalatest.mock.MockitoSugar$",
       "org.scalactic.LowPriorityConversionCheckedConstraint$class",
       "org.scalatest.Spec$$anonfun$1",
       "org.scalatest.PathEngine$",
       "org.scalatest.junit.JUnitSuiteLike",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$30",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$31",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$34",
       "org.scalatest.exceptions.NotAllowedException$$anonfun$$lessinit$greater$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$35",
       "org.scalatest.FunSuiteLike$$anonfun$run$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$32",
       "org.scalatest.time.Units",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$33",
       "org.scalatest.tools.SuiteDiscoveryHelper$EnumerationWrapper$1",
       "org.scalatest.EitherValues$RightValuable",
       "org.scalatest.PathEngine",
       "org.scalatest.AnchorValue",
       "org.scalatest.Filter$$anonfun$mergeTestTags$1",
       "org.scalatest.matchers.LazyMessage",
       "org.scalatest.selenium.Chrome",
       "org.scalatest.tools.HtmlReporterConfiguration",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$28",
       "org.scalatest.matchers.MatcherFactory1$$anon$42$$anon$20",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$29",
       "org.scalatest.SuiteRerunner",
       "org.scalatest.matchers.MatcherProducers$Composifier$$anonfun$composeTwice$1",
       "org.scalatest.MustMatchers$ResultOfEndWithWordForCollectedString$$anonfun$checkRegex$3",
       "org.scalatest.matchers.MatcherFactory3$$anon$34$$anon$16",
       "org.scalatest.prop.TableFor20$$anon$20$$anonfun$apply$100",
       "org.scalatest.concurrent.DoNotInterrupt$",
       "org.scalatest.enablers.KeyMapping$$anon$1$$anonfun$containsKey$1",
       "org.scalatest.enablers.KeyMapping$$anon$1$$anonfun$containsKey$2",
       "org.scalactic.Explicitly$DecidedWord",
       "org.scalatest.CompositeStatus$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2",
       "org.scalatest.words.ContainWord$$anon$25$$anon$12",
       "org.scalatest.tools.RunnerJFrame$$anon$6",
       "org.scalatest.tools.RunnerJFrame$$anon$7",
       "org.scalatest.words.ResultOfOfTypeInvocation",
       "org.scalatest.tools.RunnerJFrame$$anon$8",
       "org.scalatest.tools.RunnerJFrame$$anon$9",
       "org.scalatest.tools.RunnerJFrame$$anon$2",
       "org.scalatest.tools.RunnerJFrame$$anon$3",
       "org.scalatest.tools.RunnerJFrame$$anon$4",
       "org.scalatest.tools.ReporterConfigParam",
       "org.scalatest.tools.RunnerJFrame$$anon$5",
       "org.scalatest.tools.DashboardReporter$$anonfun$2",
       "org.scalatest.Checkpoints$",
       "org.scalatest.tools.DashboardReporter$$anonfun$1",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$have$2",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$have$3",
       "org.scalactic.SeqEqualityConstraints",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$have$1",
       "org.scalatest.matchers.MatcherFactory2$OrNotWord$$anon$20",
       "org.scalatest.tools.PresentReminderWithoutStackTraces$",
       "org.scalatest.matchers.MatcherFactory1$$anon$31$$anon$9",
       "org.scalatest.testng.TestNGWrapperSuite$$anonfun$addXmlSuitesToTestNG$1",
       "org.scalatest.CompileMacro$$treecreator16$1",
       "org.scalatest.run$",
       "org.scalatest.enablers.Aggregating$$anon$6$$anonfun$containsAtLeastOneOf$6",
       "org.scalatest.fixture.FlatSpecLike$IgnoreVerbString$$anonfun$is$6",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$63",
       "org.scalatest.matchers.TypeMatcherHelper$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$64",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$61",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$62",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$67",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$68",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$65",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$66",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$60",
       "org.scalatest.tools.Framework$ScalaTestRunner$Skeleton$1",
       "org.scalatest.FlatSpecLike$ItWord",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$org$scalatest$tools$SuiteDiscoveryHelper$$getFileNamesIteratorFromJar$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$58",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$59",
       "org.scalatest.fixture.FlatSpecLike$$anonfun$1$$anon$1",
       "org.scalatest.Retries",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$74",
       "org.scalatest.fixture.Suite$$anonfun$6",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$75",
       "org.scalatest.fixture.Suite$$anonfun$5",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$72",
       "org.scalatest.fixture.Suite$$anonfun$4",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$73",
       "org.scalatest.SuperEngine$$anonfun$8",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$78",
       "org.scalatest.SuperEngine$$anonfun$9",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$79",
       "org.scalatest.SuperEngine$$anonfun$6",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$76",
       "org.scalatest.SuperEngine$$anonfun$7",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$77",
       "org.scalatest.SuperEngine$$anonfun$4",
       "org.scalatest.Tag",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$21$$anonfun$apply$6",
       "org.scalatest.DiagrammedApplyExpr$$anonfun$anchorValues$1",
       "org.scalatest.SuperEngine$$anonfun$5",
       "org.scalatest.words.ResultOfInOrderOnlyApplication$$anonfun$toString$1",
       "org.scalatest.SuperEngine$$anonfun$2",
       "org.scalatest.SuperEngine$$anonfun$3",
       "org.scalatest.enablers.Aggregating$$anonfun$5$$anonfun$apply$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$70",
       "org.scalatest.SuperEngine$$anonfun$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$71",
       "org.scalatest.tools.Durations$Suite$$anonfun$toXml$2",
       "org.scalatest.ScalaTestStatefulStatus$$anonfun$setCompleted$1",
       "org.scalatest.mock.EasyMockSugar$",
       "org.scalatest.prop.TableFor14$$anon$14$$anonfun$apply$70",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$69",
       "org.scalatest.fixture.Suite$$anonfun$3",
       "org.scalatest.fixture.Suite$$anonfun$2",
       "org.scalatest.fixture.Suite$$anonfun$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$41",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$42",
       "org.scalatest.selenium.Driver",
       "org.scalactic.Pass",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$40",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$45",
       "org.scalatest.tags.InternetExplorerBrowser",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$46",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$43",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$44",
       "org.scalatest.tools.FriendlyParamsTranslator",
       "org.scalatest.time.Nanosecond$",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$2$$anonfun$apply$1",
       "org.scalatest.concurrent.PatienceConfiguration$class",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$38",
       "org.scalatest.tools.PrintReporter",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$39",
       "org.scalatest.fixture.FunSpec",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$36",
       "org.scalatest.prop.TableFor14$$anon$14$$anonfun$apply$69",
       "org.scalatest.DispatchReporter$Propagator$Counter$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$37",
       "org.scalactic.Chain",
       "org.scalatest.FreeSpec",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$52",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$53",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$50",
       "org.scalatest.GivenWhenThen$class",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$51",
       "org.scalatest.matchers.MatcherFactory2$AndBeWord",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$56",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$57",
       "org.scalatest.DistributedTestSorter",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$54",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$55",
       "org.scalatest.exceptions.ModifiablePayload",
       "org.scalatest.junit.JUnitSuiteLike$$anon$1",
       "org.scalatest.concurrent.Conductor$TestThread$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$102$$anonfun$apply$26",
       "org.scalactic.TripleEqualsSupport$BToAEquivalenceConstraint",
       "org.scalatest.fixture.FunSpecLike$class",
       "org.scalatest.tools.DiscoverySuite$$anonfun$2",
       "org.scalatest.tools.DiscoverySuite$$anonfun$1",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$oneOf$1$$anonfun$apply$9",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$49",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$47",
       "org.scalatest.tools.Framework$ScalaTestRunner$$anonfun$filterMembersOnly$1$$anonfun$apply$16",
       "org.scalatest.matchers.Matcher$$anon$11$$anon$3",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$48",
       "org.scalatest.tools.FilterScopeClosed",
       "org.scalatest.matchers.MatcherFactory5$AndNotWord",
       "org.scalatest.tools.EventHolderListCellRenderer$class",
       "org.scalatest.tools.FilterAlertProvided$",
       "org.scalatest.prop.TableFor6$$anonfun$apply$27",
       "org.scalatest.fixture.FunSpecLike$$anonfun$run$1",
       "org.scalatest.matchers.MatcherFactory4$OrNotWord",
       "org.scalatest.prop.TableFor6$$anonfun$apply$26",
       "org.scalactic.Bad$",
       "org.scalatest.concurrent.ConductorFixture$$anonfun$withFixture$1",
       "org.scalatest.prop.TableFor9$",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$have$3",
       "org.scalatest.DynaTags$",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$have$1",
       "org.scalatest.words.MustVerb",
       "org.scalatest.words.ResultOfAtLeastOneOfApplication",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$have$2",
       "org.scalatest.fixture.FlatSpecLike$$anonfun$runTest$1",
       "org.scalatest.selenium.WebBrowser$PartialLinkTextQuery",
       "org.scalatest.matchers.NegatedFailureMessage$",
       "org.scalatest.time.Nanoseconds",
       "org.scalatest.words.RegexWithGroups$$anonfun$toString$1",
       "org.scalatest.matchers.MatcherFactory3$OrNotWord",
       "org.scalactic.Good$",
       "org.scalatest.enablers.Aggregating$$anonfun$5$$anonfun$apply$1$$anonfun$6",
       "org.scalatest.events.MotionToSuppress$",
       "org.scalatest.LoneElement$LoneElementStringWrapper",
       "org.scalatest.prop.Tables$Table$",
       "org.scalatest.words.ContainWord$$anon$18$$anon$3",
       "org.scalatest.events.SuiteAborted$",
       "org.scalatest.tools.DashboardReporter$$anonfun$genRecentlySlower$1$1",
       "org.scalatest.DiagrammedExprMacro",
       "org.scalatest.selenium.WebBrowser$$anonfun$urlField$1",
       "org.scalatest.tools.DashboardReporter$$anonfun$genRecentlySlower$1$2",
       "org.scalatest.Matchers$Collected",
       "org.scalatest.matchers.MatcherFactory7$AndEndWithWord",
       "org.scalatest.PathEngine$$anonfun$allZeros$1$1",
       "org.scalatest.DiagrammedAssertions$DiagrammedAssertionsHelper$$anonfun$org$scalatest$DiagrammedAssertions$DiagrammedAssertionsHelper$$placeString$1",
       "org.scalatest.ScalaTestVersions",
       "org.scalatest.matchers.MatcherFactory2$OrNotWord",
       "org.scalactic.TimesOnInt$Repeater",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$atMostOneOf$1",
       "org.scalatest.Stopper",
       "org.scalatest.package$",
       "org.scalatest.matchers.MatcherProducers$Composifier$$anonfun$mapResult$1",
       "org.scalatest.matchers.MatchPatternHelper$$anon$1",
       "org.scalatest.events.TopOfClass$",
       "org.scalatest.matchers.MatcherFactory5$$anon$20$$anon$6",
       "org.scalatest.prop.TableFor7$",
       "org.scalatest.tools.DiscoverySuite$",
       "org.scalatest.tools.StandardOutReporterConfiguration$",
       "org.scalatest.Matchers$ResultOfFullyMatchWordForCollectedString$$anonfun$checkRegex$4",
       "org.scalatest.matchers.MatcherFactory2$OrEndWithWord",
       "org.scalatest.DiagrammedApplyExpr",
       "org.scalatest.concurrent.ScalaFutures$",
       "org.scalatest.matchers.MatcherFactory5$OrNotWord",
       "org.scalatest.tools.Runner$$anonfun$deglobSuiteParams$1",
       "org.scalatest.prop.TableFor15$$anonfun$apply$71",
       "org.scalatest.selenium.WebBrowser$TextField$$anonfun$1",
       "org.scalatest.selenium.WebBrowser$XPathQuery$",
       "org.scalatest.LoneElement",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$13$$anonfun$apply$mcV$sp$2",
       "org.scalatest.prop.TableFor15$$anonfun$apply$72",
       "org.scalatest.matchers.TypeMatcherMacro$$anonfun$checkTypeParameter$1",
       "org.scalatest.tools.SocketReporterConfiguration",
       "org.scalatest.events.SuiteStarting",
       "org.scalatest.prop.TableFor8$",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$theSameElementsAs$1",
       "org.scalactic.TolerantNumerics$class",
       "org.scalatest.selenium.WebBrowser$$anonfun$timeField$1",
       "org.scalactic.TripleEqualsSupport$Spread$",
       "org.scalatest.Matchers$ResultOfStartWithWordForCollectedString$$anonfun$checkRegex$1",
       "org.scalatest.MustMatchers$ResultOfFullyMatchWordForString",
       "org.scalatest.prop.TableFor3$$anon$3$$anonfun$apply$15",
       "org.scalatest.prop.TableFor3$$anon$3$$anonfun$apply$14",
       "org.scalatest.tools.Framework$SbtLogInfoReporter$$anonfun$apply$14",
       "org.scalactic.TypeCheckedTripleEquals$class",
       "org.scalatest.events.ScopeOpened",
       "org.scalatest.enablers.Aggregating$$anon$5$$anonfun$containsAtLeastOneOf$5",
       "org.scalatest.exceptions.TestFailedDueToTimeoutException$$anonfun$1",
       "org.scalatest.CompileMacro$$typecreator34$1",
       "org.scalatest.tagobjects.HtmlUnitBrowser",
       "org.scalatest.prop.TableFor17$$anon$17$$anonfun$apply$84",
       "org.scalatest.Assertions$$anonfun$withClue$3",
       "org.scalatest.prop.TableFor17$$anon$17$$anonfun$apply$85",
       "org.scalatest.prop.TableFor6$$anonfun$apply$27$$anonfun$apply$28",
       "org.scalatest.Assertions$$anonfun$withClue$2",
       "org.scalatest.Assertions$$anonfun$withClue$1",
       "org.scalatest.DiagrammedAssertions$DiagrammedAssertionsHelper$$anonfun$2",
       "org.scalatest.DiagrammedAssertions$DiagrammedAssertionsHelper$$anonfun$1",
       "org.scalatest.events.Event$EventXmlHelper$$anonfun$stringOption$1",
       "org.scalatest.fixture.FlatSpecLike$IgnoreVerbStringTaggedAs$$anonfun$is$5",
       "org.scalatest.fixture.FlatSpecLike$ItVerbStringTaggedAs$$anonfun$is$1",
       "org.scalatest.fixture.FunSuiteLike$$anonfun$run$1",
       "org.scalatest.LoneElement$LoneElementCollectionWrapper",
       "org.scalatest.tools.ConcurrentConfig$",
       "org.scalatest.tools.NarrowJOptionPane",
       "org.scalatest.DiagrammedAssertions$DiagrammedAssertionsHelper$$anonfun$renderDiagram$1",
       "org.scalatest.matchers.MatcherFactory2$OrStartWithWord",
       "org.scalatest.tools.RunnerJFrame$$anonfun$done$1",
       "org.scalatest.matchers.MatchPatternHelper$$anon$2",
       "org.scalatest.BeforeAndAfterEach",
       "org.scalatest.Entry$",
       "org.scalatest.matchers.MatcherFactory7$AndHaveWord",
       "org.scalatest.concurrent.PatienceConfiguration$Timeout",
       "org.scalatest.exceptions.StackDepthExceptionHelper$$anonfun$2",
       "org.scalatest.fixture.FlatSpecLike$ItWord",
       "org.scalatest.exceptions.StackDepthExceptionHelper$$anonfun$1",
       "org.scalatest.exceptions.StackDepthExceptionHelper$$anonfun$4",
       "org.scalatest.tools.SuiteResultHolder$$anonfun$summary$1",
       "org.scalactic.Snapshot$",
       "org.scalatest.Matchers$AtLeastCollected$",
       "org.scalatest.exceptions.StackDepthExceptionHelper$$anonfun$3",
       "org.scalatest.exceptions.StackDepthExceptionHelper$$anonfun$6",
       "org.scalatest.tools.PresentFullStackTraces",
       "org.scalactic.Every$",
       "org.scalatest.exceptions.StackDepthExceptionHelper$$anonfun$5",
       "org.scalatest.prop.Configuration$MinSuccessful",
       "org.scalatest.exceptions.StackDepthExceptionHelper$$anonfun$8",
       "org.scalatest.exceptions.StackDepthExceptionHelper$$anonfun$7",
       "org.scalatest.ConcurrentAlerter",
       "org.scalatest.tools.StringReporter$$anonfun$alertProvidedFragments$1",
       "org.scalatest.SpecLike$$anonfun$getMethodTags$1$3",
       "org.scalatest.DocSpec",
       "org.scalatest.SpecLike$$anonfun$getMethodTags$1$2",
       "org.scalatest.matchers.MatcherFactory2$$anon$21$$anon$1",
       "org.scalatest.MustMatchers$MustMethodHelper$",
       "org.scalatest.SpecLike$$anonfun$getMethodTags$1$1",
       "org.scalactic.Snapshots",
       "org.scalatest.tools.SuiteParam$",
       "org.scalatest.tools.ReporterFactory$$anonfun$createStandardErrReporter$1",
       "org.scalatest.tools.ScalaTestFramework$SbtLogInfoReporter",
       "org.scalatest.fixture.WordSpec",
       "org.scalatest.FailureOf$",
       "org.scalatest.tools.MemoryReporter",
       "org.scalatest.tools.ReporterFactory$$anonfun$createStandardErrReporter$2",
       "org.scalatest.CatchReporter$class",
       "org.scalatest.path.FunSpecLike$TheyWord",
       "org.scalatest.matchers.MatcherFactory1$$anon$28$$anon$6",
       "org.scalatest.CancelAfterFailure$class",
       "org.scalatest.time.Milliseconds",
       "org.scalatest.words.ResultOfDefinedAt",
       "org.scalatest.selenium.WebBrowser$DateTimeLocalField$$anonfun$8",
       "org.scalatest.enablers.Aggregating",
       "org.scalatest.OptionValues$",
       "org.scalactic.IsInstanceOfMacroBool",
       "org.scalatest.tools.SocketReporter",
       "org.scalatest.Doc",
       "org.scalatest.words.ContainWord$$anon$27$$anon$14",
       "org.scalactic.TypeCheckedTripleEquals$",
       "org.scalatest.selenium.WebBrowser$$anon$1",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$18",
       "org.scalatest.words.ResultOfSizeWordApplication",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$17",
       "org.scalatest.concurrent.ScaledTimeSpans$class",
       "org.scalatest.FeatureSpecLike$$anon$1",
       "org.scalatest.concurrent.DoNotInterrupt",
       "org.scalatest.selenium.Chrome$",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$19",
       "org.scalatest.exceptions.DiscardedEvaluationException",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$14",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$13",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$16",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$15",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$10",
       "org.scalatest.events.RunCompleted$",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$12",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$11",
       "org.scalatest.enablers.Collecting$$anon$1",
       "org.scalatest.matchers.LazyArg",
       "org.scalatest.time.Millisecond",
       "org.scalactic.TripleEquals$class",
       "org.scalatest.tools.XmlSocketReporter",
       "org.scalatest.enablers.Collecting$$anon$4",
       "org.scalatest.enablers.Collecting$$anon$5",
       "org.scalatest.enablers.Collecting$$anon$2",
       "org.scalatest.MustMatchers$ResultOfBeWordForCollectedArray$$anon$4",
       "org.scalatest.enablers.Collecting$$anon$3",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addPropertyArgs$1",
       "org.scalatest.FreeSpecLike$$anonfun$run$1",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$noneOf$1$$anonfun$apply$11",
       "org.scalatest.tools.ReporterFactory$",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$21",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$20",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$22",
       "org.scalatest.mock.EasyMockSugar$class",
       "org.scalatest.time.Milliseconds$",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny",
       "org.scalatest.prop.TableDrivenPropertyChecks$",
       "org.scalatest.tools.ParsedArgs",
       "org.scalatest.junit.JUnitSuite",
       "org.scalatest.exceptions.TestFailedException",
       "org.scalatest.tools.PresentInfoProvided$",
       "org.scalatest.Matchers$ResultOfBeWordForAny",
       "org.scalatest.ConcurrentInformer$",
       "org.scalatest.words.NotWord$$anon$53$$anon$35",
       "org.scalatest.prop.TableFor14$$anonfun$newBuilder$14",
       "org.scalactic.Accumulation$Combinable",
       "org.scalatest.enablers.Existence$",
       "org.scalatest.selenium.WebBrowser$Point",
       "org.scalatest.tools.PresentTestStarting$",
       "org.scalatest.StreamlinedXml$$anon$1$$anonfun$normalized$1",
       "org.scalatest.concurrent.PimpedThreadGroup$$anonfun$areAnyThreadsInTimedWaiting$1",
       "org.scalatest.matchers.MatcherFactory7$$anon$17",
       "org.scalatest.matchers.MatcherFactory7$$anon$18",
       "org.scalatest.exceptions.StackDepth$$anonfun$failedCodeFileNameAndLineNumberString$1",
       "org.scalatest.matchers.MatcherFactory3$$anon$21$$anon$3",
       "org.scalatest.concurrent.JavaFutures$$anon$2$$anon$1",
       "org.scalatest.matchers.MatcherFactory7$$anon$13",
       "org.scalatest.matchers.MatcherFactory7$$anon$14",
       "org.scalatest.matchers.MatcherFactory7$$anon$15",
       "org.scalatest.matchers.MatcherFactory7$$anon$16",
       "org.scalatest.matchers.MatcherFactory7$$anon$11",
       "org.scalatest.tools.Runner$$anonfun$parsePropertiesArgsIntoMap$2",
       "org.scalatest.FunSuiteLike$$anon$1",
       "org.scalatest.matchers.MatcherFactory7$$anon$12",
       "org.scalatest.tools.Runner$$anonfun$parsePropertiesArgsIntoMap$1",
       "org.scalatest.tools.Runner$$anonfun$parsePropertiesArgsIntoMap$4",
       "org.scalatest.tools.Runner$$anonfun$parsePropertiesArgsIntoMap$3",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$value$1",
       "org.scalatest.tools.Runner$$anonfun$parsePropertiesArgsIntoMap$5",
       "org.scalatest.concurrent.PimpedThreadGroup$$anonfun$areAnyThreadsRunning$1",
       "org.scalatest.fixture.Suite$OneArgTest$$anon$1",
       "org.scalatest.prop.PropertyChecks",
       "org.scalatest.fixture.Suite$OneArgTest$$anon$2",
       "org.scalactic.MacroOwnerRepair$$typecreator1$1",
       "org.scalatest.fixture.PropSpec",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$64$$anonfun$apply$19",
       "org.scalatest.prop.Configuration$PropertyCheckConfig$",
       "org.scalatest.Suite$NoArgTest$$anon$1",
       "org.scalatest.MustMatchers$ResultOfBeWordForCollectedAny$$anonfun$an$1",
       "org.scalatest.MustMatchers$ResultOfBeWordForCollectedAny$$anonfun$an$2",
       "org.scalatest.MustMatchers$ResultOfIncludeWordForCollectedString",
       "org.scalatest.words.ResultOfKeyWordApplication",
       "org.scalatest.fixture.FunSuiteLike$$anonfun$convertPendingToFixtureFunction$1",
       "org.scalatest.tools.Runner$$anonfun$parseReporterArgsIntoConfigurations$2",
       "org.scalatest.tools.Runner$$anonfun$parseReporterArgsIntoConfigurations$1",
       "org.scalatest.exceptions.StackDepthExceptionHelper$",
       "org.scalatest.words.ContainWord$$anon$27$$anon$14$$anonfun$apply$7",
       "org.scalatest.words.ShouldVerb",
       "org.scalatest.words.BeWord",
       "org.scalatest.prop.TableFor11$$anonfun$newBuilder$11",
       "org.scalatest.tools.Durations$Test$$anonfun$toXml$3",
       "org.scalatest.words.ContainWord$$anon$22$$anon$9",
       "org.scalatest.tools.Framework$SbtLogInfoReporter$$anonfun$printPossiblyInColor$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck",
       "org.scalatest.tools.IconEmbellishedListCellRenderer$Icons$",
       "org.scalatest.words.FullyMatchWord$$anon$3",
       "org.scalatest.words.FullyMatchWord$$anon$2",
       "org.scalatest.words.FullyMatchWord$$anon$1",
       "org.scalatest.tagobjects.Disk$",
       "org.scalatest.concurrent.Conductor$Setup$",
       "org.scalatest.Inspectors$",
       "org.scalatest.matchers.BeMatcher$",
       "org.scalatest.selenium.WebBrowser$$anonfun$textField$1",
       "org.scalatest.FailedStatus$",
       "org.scalatest.DiagrammedExpr$",
       "org.scalatest.tools.HtmlReporter$$anonfun$getSuiteHtml$1$$anonfun$apply$1",
       "org.scalatest.tools.HtmlReporter$$anonfun$getSuiteHtml$1$$anonfun$apply$2",
       "org.scalatest.tools.HtmlReporter$$anonfun$getSuiteHtml$1$$anonfun$apply$3",
       "org.scalatest.tools.HtmlReporter$$anonfun$getSuiteHtml$1$$anonfun$apply$4",
       "org.scalatest.matchers.MatcherFactory3$AndNotWord",
       "org.scalactic.Accumulation$$anon$3$$anonfun$3",
       "org.scalatest.prop.Configuration$PropertyCheckConfigParam",
       "org.scalatest.Matchers$TheSameInstanceAsPhrase",
       "org.scalatest.Outcome$$anon$2",
       "org.scalatest.FlatSpecLike$IgnoreVerbStringTaggedAs$$anonfun$is$3",
       "org.scalatest.Outcome$$anon$1",
       "org.scalatest.MustMatchers$ResultOfCollectedAny",
       "org.scalatest.selenium.WebBrowser$DateField$$anonfun$6",
       "org.scalatest.words.EmptyWord",
       "org.scalatest.words.BeWord$$anon$31$$anon$26",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$only$1",
       "org.scalatest.SuperEngine$$anonfun$checkRegisterTestParamsForNull$1",
       "org.scalatest.tools.JUnitXmlReporter$Testsuite",
       "org.scalatest.matchers.MatcherFactory5$$anon$17$$anon$3",
       "org.scalatest.tools.FileReporterConfiguration",
       "org.scalatest.prop.Whenever",
       "org.scalatest.StopOnFailure$class",
       "org.scalatest.matchers.MatcherFactory4$AndStartWithWord",
       "org.scalatest.OptionValues$Valuable$$anonfun$value$1",
       "org.scalatest.prop.TableFor9$$anon$9$$anonfun$apply$45",
       "org.scalatest.matchers.AMatcher$",
       "org.scalatest.prop.TableFor9$$anon$9$$anonfun$apply$44",
       "org.scalatest.WordSpecLike$WordSpecStringWrapper",
       "org.scalatest.prop.TableFor17$$anon$17",
       "org.scalatest.fixture.FlatSpecLike$IgnoreVerbString",
       "org.scalactic.Validation",
       "org.scalatest.enablers.Aggregating$$anon$2$$anonfun$containsAtLeastOneOf$2",
       "org.scalatest.events.IndentedText",
       "org.scalatest.selenium.WebBrowser$NumberField",
       "org.scalatest.tools.FriendlyParamsTranslator$",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$32$$anonfun$apply$mcV$sp$5",
       "org.scalatest.FunSuiteLike$$anonfun$runTests$1",
       "org.scalatest.enablers.Containing$",
       "org.scalatest.tools.StringReporter$$anonfun$fragmentsForEvent$1",
       "org.scalatest.MustMatchers$ResultOfBeWordForCollectedAny",
       "org.scalatest.words.NotWord$$anon$56$$anon$38",
       "org.scalatest.tools.StringReporter$$anonfun$fragmentsForEvent$2",
       "org.scalatest.tools.StringReporter$$anonfun$fragmentsForEvent$3",
       "org.scalatest.enablers.ValueMapping$$anon$2",
       "org.scalatest.enablers.ValueMapping$$anon$1",
       "org.scalatest.matchers.MatcherFactory6$$anon$15$$anon$3",
       "org.scalatest.fixture.FixtureNodeFamily$DescriptionBranch",
       "org.scalatest.matchers.MatcherFactory4$OrBeWord",
       "org.scalatest.tools.FilterScopeClosed$",
       "org.scalatest.InspectorsHelper$",
       "org.scalatest.Matchers$ResultOfBeWordForCollectedArray",
       "org.scalatest.tools.RunnerJFrame$$anonfun$org$scalatest$tools$RunnerJFrame$$refreshEventsJList$1",
       "org.scalatest.tools.RunnerJFrame$$anonfun$org$scalatest$tools$RunnerJFrame$$refreshEventsJList$2",
       "org.scalatest.tools.Framework$SummaryCounter",
       "org.scalatest.selenium.WebBrowser$RangeField$$anonfun$11",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$85",
       "org.scalactic.Prettifier",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$86",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$83",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$84",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$89",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$87",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$88",
       "org.scalatest.BeforeAndAfter$class",
       "org.scalatest.Matchers$ResultOfProduceInvocation",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$81",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$82",
       "org.scalatest.prop.TableFor1$$anonfun$apply$2$$anonfun$apply$3",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$80",
       "org.scalatest.events.ScopeClosed$",
       "org.scalatest.tools.JUnitXmlReporter$Testsuite$",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$oneOf$1",
       "org.scalatest.tools.DashboardReporter$SlowRecord$4$",
       "org.scalatest.enablers.Definition",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$96",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$97",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$94",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$95",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$98",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$99",
       "org.scalatest.matchers.MatcherFactory2Macro",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$92",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$93",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$90",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$91",
       "org.scalatest.enablers.Containing$$anon$6$$anonfun$contains$6",
       "org.scalatest.DiagrammedAssertions$DiagrammedAssertionsHelper$$anonfun$org$scalatest$DiagrammedAssertions$DiagrammedAssertionsHelper$$placeValue$1",
       "org.scalatest.matchers.MatcherFactory4$AndContainWord",
       "org.scalatest.prop.TableFor2$$anonfun$newBuilder$2",
       "org.scalatest.events.TestIgnored$",
       "org.scalactic.Accumulation$$anon$6$$anonfun$validatedBy$1",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$2",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$1",
       "org.scalatest.matchers.MatcherFactory4$$anon$30$$anon$14",
       "org.scalatest.Matchers$ResultOfStartWithWordForCollectedString",
       "org.scalatest.Checkpoints$Checkpoint$$anonfun$1",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$4",
       "org.scalatest.CompileMacro$$typecreator2$1",
       "org.scalatest.Matchers$AtMostCollected$",
       "org.scalatest.MessageRecorder",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$3",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$2",
       "org.scalatest.tools.ReporterConfiguration",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$1",
       "org.scalatest.matchers.MatcherProducers",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$8",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$7",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$9",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$9",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$4",
       "org.scalatest.Stopper$DefaultStopper",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$8",
       "org.scalatest.words.NotWord$$anon$60$$anon$42$$anonfun$apply$6",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$3",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$7",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$6",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$6",
       "org.scalatest.tools.Runner$",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$5",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$5",
       "org.scalactic.NormalizingEquality",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$52$$anonfun$apply$16",
       "org.scalatest.tools.PresentRunStopped",
       "org.scalactic.ConversionCheckedLegacyTripleEquals$",
       "org.scalatest.events.SuiteStarting$",
       "org.scalatest.tools.ParsedArgs$",
       "org.scalatest.enablers.Aggregating$$anonfun$countElements$1$3",
       "org.scalatest.words.EndWithWord",
       "org.scalatest.SuperEngine$TestLeaf",
       "org.scalatest.enablers.Aggregating$$anonfun$countElements$1$2",
       "org.scalactic.OptionSugar$class",
       "org.scalatest.enablers.Aggregating$$anonfun$countElements$1$1",
       "org.scalatest.Doc$$anonfun$6",
       "org.scalatest.Doc$$anonfun$5",
       "org.scalatest.PrivateMethodTester$class",
       "org.scalatest.Doc$$anonfun$7",
       "org.scalatest.Doc$$anonfun$2",
       "org.scalatest.Doc$$anonfun$1",
       "org.scalatest.Doc$$anonfun$4",
       "org.scalatest.Doc$$anonfun$3",
       "org.scalactic.NormMethods$Normalizer",
       "org.scalatest.tools.RunnerJFrame",
       "org.scalactic.SeqEqualityConstraints$class",
       "org.scalatest.matchers.ShouldMatchers",
       "org.scalatest.PathMessageRecordingNotifier$$anon$2",
       "org.scalatest.Matchers$$anon$3",
       "org.scalatest.Matchers$ExactlyCollected$",
       "org.scalatest.enablers.Collecting$$anon$6",
       "org.scalatest.events.TestSucceeded$",
       "org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$2",
       "org.scalatest.Matchers$$anon$2",
       "org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$3",
       "org.scalatest.tools.Runner$$anonfun$doRunRunRunDaDoRunRun$1",
       "org.scalatest.tools.StatusJPanel",
       "org.scalatest.words.ContainWord$$anon$21$$anonfun$toString$6",
       "org.scalatest.fixture.FunSpecLike$$anonfun$convertPendingToFixtureFunction$1",
       "org.scalatest.exceptions.TestCanceledException",
       "org.scalatest.ParallelTestExecution",
       "org.scalatest.CompileMacro$$treecreator8$1",
       "org.scalatest.prop.Tables",
       "org.scalactic.NormalizingEquality$$anon$1",
       "org.scalatest.Notifier$class",
       "org.scalatest.words.ContainWord$$anon$28$$anon$15$$anonfun$toString$15",
       "org.scalatest.Matchers$AtMostCollected",
       "org.scalatest.Retries$class",
       "org.scalatest.matchers.MatcherFactory6$AndNotWord$$anon$11",
       "org.scalatest.matchers.FailureMessage$",
       "org.scalatest.words.NotWord$$anon$24",
       "org.scalatest.words.NotWord$$anon$25",
       "org.scalatest.fixture.FunSpecLike$ItWord",
       "org.scalatest.words.NotWord$$anon$22",
       "org.scalatest.words.NotWord$$anon$23",
       "org.scalatest.concurrent.ScalaFutures",
       "org.scalatest.words.NotWord$$anon$28",
       "org.scalatest.words.NotWord$$anon$29",
       "org.scalactic.TripleEqualsSupport$TripleEqualsInvocation",
       "org.scalatest.words.NotWord$$anon$26",
       "org.scalatest.words.NotWord$$anon$27",
       "org.scalatest.words.NotWord$$anon$31",
       "org.scalatest.tools.PresentUnformatted$",
       "org.scalatest.words.NotWord$$anon$32",
       "org.scalatest.exceptions.DuplicateTestNameException$$anonfun$$lessinit$greater$1",
       "org.scalatest.words.NotWord$$anon$30",
       "org.scalatest.junit.JUnitSuiteLike$$anonfun$3",
       "org.scalatest.junit.JUnitSuiteLike$$anonfun$2",
       "org.scalatest.FlatSpecLike$TheyVerbStringTaggedAs",
       "org.scalatest.junit.JUnitSuiteLike$$anonfun$5",
       "org.scalatest.junit.JUnitSuiteLike$$anonfun$4",
       "org.scalatest.concurrent.Conductor$TestThread",
       "org.scalatest.junit.JUnitSuiteLike$$anonfun$7",
       "org.scalatest.junit.JUnitSuiteLike$$anonfun$6",
       "org.scalatest.words.NotWord$$anon$19",
       "org.scalatest.prop.TableFor5$$anonfun$apply$22$$anonfun$apply$23",
       "org.scalatest.matchers.MatcherFactory2$OrContainWord",
       "org.scalatest.matchers.MatcherFactory7$$anon$14$$anon$4",
       "org.scalactic.TripleEqualsSupport$TripleEqualsInvocation$",
       "org.scalatest.junit.JUnitSuiteLike$$anonfun$1",
       "org.scalatest.words.NotWord$$anon$13",
       "org.scalatest.words.NotWord$$anon$14",
       "org.scalatest.words.NotWord$$anon$11",
       "org.scalatest.words.NotWord$$anon$12",
       "org.scalatest.FlatSpecLike$$anonfun$1",
       "org.scalatest.words.NotWord$$anon$17",
       "org.scalatest.words.NotWord$$anon$18",
       "org.scalatest.tools.StringReporter$",
       "org.scalatest.words.NotWord$$anon$15",
       "org.scalatest.FlatSpecLike$$anonfun$2",
       "org.scalatest.words.NotWord$$anon$16",
       "org.scalatest.tools.AnsiRed$",
       "org.scalatest.tools.PresentRunAborted$",
       "org.scalatest.tools.Framework$ScalaTestSbtEvent$",
       "org.scalatest.words.NotWord$$anon$20",
       "org.scalatest.words.NotWord$$anon$21",
       "org.scalatest.selenium.HtmlUnit$class",
       "org.scalatest.events.SuiteCompleted$",
       "org.scalatest.PathMessageRecordingDocumenter$$anon$4",
       "org.scalatest.fixture.SpecLike$$anonfun$register$1$1$$anonfun$3",
       "org.scalatest.words.ResultOfContainWord$$anonfun$inOrderOnly$1",
       "org.scalatest.Reporter$",
       "org.scalatest.concurrent.PimpedThreadGroup$$anonfun$exists$1",
       "org.scalatest.concurrent.Timeouts$",
       "org.scalatest.matchers.MatcherFactory2$$anon$30$$anon$10",
       "org.scalatest.tools.Memento$$anonfun$readFromFile$1",
       "org.scalatest.fixture.SpecLike$$anonfun$runTest$1",
       "org.scalatest.words.NotWord$$anon$47",
       "org.scalatest.words.NotWord$$anon$48",
       "org.scalatest.words.NotWord$$anon$49",
       "org.scalatest.words.NotWord$$anon$50",
       "org.scalatest.MustMatchers$$anonfun$thrownBy$1",
       "org.scalatest.tools.Fragment$",
       "org.scalatest.words.NotWord$$anon$53",
       "org.scalatest.Matchers$ResultOfHaveWordForCollectedExtent$$anonfun$length$1",
       "org.scalatest.words.NotWord$$anon$54",
       "org.scalatest.words.NotWord$$anon$51",
       "org.scalatest.words.NotWord$$anon$52",
       "org.scalatest.PathMessageRecordingNotifier",
       "org.scalatest.tools.Runner$$anonfun$getRunpathClassLoader$1",
       "org.scalatest.MustMatchers$AWord",
       "org.scalatest.Matchers$ResultOfHaveWordForCollectedExtent",
       "org.scalatest.tools.FilterMarkupProvided$",
       "org.scalatest.CompileMacro$$typecreator22$1",
       "org.scalatest.words.NotWord$$anon$33",
       "org.scalatest.matchers.MatcherFactory6$$anon$16$$anon$4",
       "org.scalatest.matchers.MatcherFactory6$$anon$22$$anon$10",
       "org.scalatest.tags.ChromeBrowser",
       "org.scalatest.words.ContainWord$$anon$19$$anon$6",
       "org.scalactic.Explicitly$DeterminedWord",
       "org.scalatest.words.ContainWord$$anon$24$$anon$11$$anonfun$apply$4",
       "org.scalatest.concurrent.Conductor$Clock",
       "org.scalatest.Matchers$HavePropertyMatcherGenerator$$anon$1",
       "org.scalatest.matchers.MatcherFactory6$AndFullyMatchWord",
       "org.scalatest.selenium.WebBrowser$$anonfun$submit$2",
       "org.scalatest.selenium.WebBrowser$$anonfun$submit$1",
       "org.scalatest.matchers.MatcherFactory2$$anon$22$$anon$2",
       "org.scalatest.Matchers$ValueWord",
       "org.scalatest.matchers.ShouldMatchers$",
       "org.scalatest.SuperEngine$InfoLeaf",
       "org.scalatest.selenium.WebBrowser$PasswordField",
       "org.scalatest.SuperEngine$Trunk$",
       "org.scalatest.enablers.Containing$$anon$7$$anonfun$contains$8",
       "org.scalatest.enablers.Containing$$anon$7$$anonfun$contains$7",
       "org.scalatest.selenium.WebBrowser$FrameElementTarget$$anonfun$switch$4",
       "org.scalatest.tools.PresentTestCanceled",
       "org.scalactic.TraversableEqualityConstraints$",
       "org.scalatest.words.NotWord$$anon$57",
       "org.scalatest.words.NotWord$$anon$58",
       "org.scalatest.words.NotWord$$anon$55",
       "org.scalatest.words.ReadableWord",
       "org.scalatest.words.NotWord$$anon$56",
       "org.scalatest.words.StartWithWord",
       "org.scalatest.EncodedOrdering$",
       "org.scalatest.tools.PresentNoteProvided",
       "org.scalactic.LengthSizeMacroBool",
       "org.scalatest.words.NotWord$$anon$59",
       "org.scalatest.Stopper$class",
       "org.scalatest.enablers.Writability$$anon$3",
       "org.scalatest.matchers.MatcherFactory3$$anon$20$$anon$2",
       "org.scalatest.words.NotWord$$anon$60",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$atLeastOneOf$1",
       "org.scalatest.enablers.Writability$$anon$2",
       "org.scalatest.words.NotWord$$anon$61",
       "org.scalatest.words.ContainWord$$anon$25$$anon$12$$anonfun$apply$5",
       "org.scalatest.words.NotWord$$anon$64",
       "org.scalatest.enablers.Writability$$anon$1",
       "org.scalatest.matchers.MatcherFactory6$AndHaveWord",
       "org.scalatest.words.NotWord$$anon$62",
       "org.scalatest.tools.DashboardReporterConfiguration$",
       "org.scalatest.words.NotWord$$anon$63",
       "org.scalatest.fixture.SpecLike$$anonfun$2",
       "org.scalatest.tools.PresentScopeOpened$",
       "org.scalatest.fixture.SpecLike$$anonfun$1",
       "org.scalatest.concurrent.Conductors$Conductor$Clock$$anonfun$currentBeat$1",
       "org.scalatest.MustMatchers$AtLeastCollected",
       "org.scalatest.prop.TableFor6$$anon$6",
       "org.scalatest.words.ResultOfMessageWordApplication$$anon$1",
       "org.scalatest.matchers.MatcherFactory3$AndFullyMatchWord",
       "org.scalatest.matchers.MatcherFactory8$OrIncludeWord",
       "org.scalatest.prop.TableFor6$$anon$6$$anonfun$apply$30",
       "org.scalatest.DiagrammedAssertionsMacro",
       "org.scalatest.junit.MyTestListener",
       "org.scalactic.FailureMessages$",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$allOf$1$$anonfun$apply$14",
       "org.scalatest.SpecLike",
       "org.scalactic.SetEqualityConstraints$class",
       "org.scalatest.prop.TableFor6$$anon$6$$anonfun$apply$29",
       "org.scalatest.words.MustVerb$StringMustWrapperForVerb$class",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$apply$12$$anonfun$apply$13",
       "org.scalatest.words.CanVerb",
       "org.scalatest.tools.Durations$$anonfun$1$$anonfun$apply$1",
       "org.scalactic.SimpleBool",
       "org.scalatest.fixture.FreeSpecLike$ResultOfTaggedAsInvocationOnString",
       "org.scalatest.selenium.WebBrowser$MultiSel$$anonfun$values$1",
       "org.scalatest.words.ResultOfOnlyApplication",
       "org.scalatest.tools.RunnerJFrame$$anon$4$$anonfun$1",
       "org.scalatest.tools.RunnerJFrame$$anon$4$$anonfun$2",
       "org.scalactic.Every",
       "org.scalatest.OutcomeOf",
       "org.scalactic.TripleEqualsSupport$Spread$$anonfun$1",
       "org.scalatest.exceptions.PropertyCheckFailedException$$anonfun$$lessinit$greater$1",
       "org.scalactic.Equality$",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$atLeastOneOf$1$$anonfun$apply$10",
       "org.scalatest.events.TopOfMethod",
       "org.scalatest.prop.TableFor6$$anonfun$newBuilder$6",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$30$$anonfun$apply$8",
       "org.scalatest.matchers.MatcherFactory3$$anon$33$$anon$15",
       "org.scalatest.SeveredStackTraces$class",
       "org.scalatest.matchers.MatcherFactory3$$anon$25$$anon$7",
       "org.scalatest.MessageRecordingDocumenter",
       "org.scalatest.matchers.MatcherFactory2$$anon$27$$anon$7",
       "org.scalatest.fixture.FunSuiteLike",
       "org.scalatest.events.SuiteAborted",
       "org.scalatest.matchers.MatcherFactory1$$anon$33$$anon$11",
       "org.scalactic.SnapshotSeq",
       "org.scalatest.MustMatchers$$anonfun$doCollected$6",
       "org.scalatest.tools.ReporterConfigurations$",
       "org.scalatest.MustMatchers$$anonfun$doCollected$5",
       "org.scalatest.MustMatchers$$anonfun$doCollected$7",
       "org.scalatest.MustMatchers$$anonfun$doCollected$2",
       "org.scalatest.tools.Memento$$anonfun$writeToFile$1",
       "org.scalatest.MustMatchers$$anonfun$doCollected$1",
       "org.scalatest.MustMatchers$AtMostCollected",
       "org.scalatest.words.ContainWord$$anon$21$$anon$8$$anonfun$apply$3",
       "org.scalatest.MustMatchers$$anonfun$doCollected$4",
       "org.scalatest.concurrent.Conductors$Conductor$ClockThread$$anonfun$run$1",
       "org.scalatest.MustMatchers$$anonfun$doCollected$3",
       "org.scalatest.Suite$NoArgTest$",
       "org.scalatest.tools.DiscoverySuite$$anonfun$wildcardList$1",
       "org.scalatest.tools.RunnerJFrame$$anonfun$org$scalatest$tools$RunnerJFrame$$updateViewOptionsAndEventsList$1",
       "org.scalatest.tools.SuiteSortingReporter$Slot",
       "org.scalatest.tools.Durations$Test$$anonfun$computeNewAvg$1",
       "org.scalatest.selenium.WebBrowser$ActiveElementTarget",
       "org.scalatest.SuiteHelpers$",
       "org.scalatest.matchers.MatcherFactory3$AndHaveWord",
       "org.scalatest.words.ContainWord$$anon$27$$anon$14$$anonfun$toString$13",
       "org.scalatest.tools.PresentRunCompleted",
       "org.scalatest.matchers.MatcherFactory6$AndContainWord",
       "org.scalactic.ExistsMacroBool",
       "org.scalactic.ScalacticVersions",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$1",
       "org.scalactic.Tolerance",
       "org.scalatest.events.DiscoveryStarting",
       "org.scalatest.matchers.MidSentenceFailureMessage",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$8",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$9",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$9",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$8",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$6",
       "org.scalatest.SucceededStatus$",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$7",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$7",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$6",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$4",
       "org.scalatest.prop.Checkers$$anonfun$doCheck$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$5",
       "org.scalatest.prop.Checkers$$anonfun$doCheck$2",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$4",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$2",
       "org.scalatest.matchers.MatchSucceeded",
       "org.scalatest.prop.Checkers$$anonfun$doCheck$3",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$3",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$3",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$2",
       "org.scalactic.TimesOnInt$",
       "org.scalatest.matchers.MatcherFactory5$AndFullyMatchWord",
       "org.scalactic.End",
       "org.scalactic.TripleEqualsSupport",
       "org.scalactic.Chain$$anonfun$grouped$1",
       "org.scalatest.enablers.Readability$$anon$2",
       "org.scalatest.enablers.Readability$$anon$3",
       "org.scalatest.matchers.Matcher",
       "org.scalatest.CompileMacro$$treecreator15$1",
       "org.scalatest.enablers.Readability$$anon$1",
       "org.scalatest.fixture.SpecLike$$anonfun$register$1$1",
       "org.scalatest.events.Ordinal",
       "org.scalatest.concurrent.Interruptor",
       "org.scalatest.fixture.WordSpecLike$ResultOfTaggedAsInvocationOnString",
       "org.scalatest.matchers.MatcherFactory2$$anon$36$$anon$16",
       "org.scalatest.selenium.WebBrowser$IdQuery$",
       "org.scalatest.words.NotWord$$anon$10",
       "org.scalatest.tagobjects.SafariBrowser$",
       "org.scalatest.tools.Runner$$anonfun$mergeMap$1",
       "org.scalatest.selenium.WebBrowser$TextArea",
       "org.scalatest.tools.Runner$$anonfun$mergeMap$2",
       "org.scalatest.tools.PresentScopeOpened",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addSuiteArgs$1",
       "org.scalatest.matchers.MatcherFactory2$AndStartWithWord",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addSuiteArgs$2",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addSuiteArgs$3",
       "org.scalatest.tools.ReadyState",
       "org.scalatest.words.NotWord$$anon$8",
       "org.scalatest.words.NotWord$$anon$9",
       "org.scalatest.matchers.MatcherFactory8$OrHaveWord",
       "org.scalatest.words.NotWord$$anon$6",
       "org.scalatest.words.NotWord$$anon$7",
       "org.scalatest.words.NotWord$$anon$4",
       "org.scalactic.Catcher$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$15$$anonfun$apply$5",
       "org.scalatest.words.NotWord$$anon$1",
       "org.scalatest.matchers.AnMatcher",
       "org.scalatest.SuperEngine$RegistrationNotifier",
       "org.scalatest.tools.RunnerJFrame$$anonfun$initializeOptionsMap$1$$anon$1",
       "org.scalatest.Sequential$",
       "org.scalatest.DispatchReporter",
       "org.scalatest.MustMatchers$ResultOfBeWordForAny",
       "org.scalatest.selenium.WebBrowser$SingleSel$$anonfun$value$2",
       "org.scalatest.matchers.MatcherFactory3$$anon$32$$anon$14",
       "org.scalactic.Explicitly$DeterminedByEquivalence",
       "org.scalatest.selenium.WebBrowser$MultiSelOptionSeq",
       "org.scalatest.tools.DashboardReporter$$anonfun$genRegressions$1$1",
       "org.scalatest.matchers.AnMatcher$",
       "org.scalactic.TypeCheckedLegacyTripleEquals$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$115$$anonfun$apply$28",
       "org.scalatest.Filter$$anonfun$9",
       "org.scalatest.tools.FilterTestSucceeded",
       "org.scalatest.FlatSpecLike$IgnoreVerbString$$anonfun$is$4",
       "org.scalatest.Filter$$anonfun$3",
       "org.scalatest.Filter$$anonfun$4",
       "org.scalatest.Filter$$anonfun$1",
       "org.scalatest.Filter$$anonfun$2",
       "org.scalatest.tools.RunpathUrl",
       "org.scalatest.Filter$$anonfun$7",
       "org.scalatest.Filter$$anonfun$8",
       "org.scalatest.Filter$$anonfun$5",
       "org.scalatest.Filter$$anonfun$6",
       "org.scalatest.prop.TableFor7$$anonfun$newBuilder$7",
       "org.scalatest.fixture.FreeSpecLike$FreeSpecStringWrapper$$anonfun$is$2",
       "org.scalatest.CompileMacro$$typecreator18$1",
       "org.scalatest.tools.Durations$$anonfun$toXml$1",
       "org.scalatest.Filter",
       "org.scalatest.RunningTest$",
       "org.scalatest.FailureMessages$$anonfun$apply$1",
       "org.scalatest.concurrent.Eventually$",
       "org.scalatest.matchers.MustMatchers$",
       "org.scalatest.concurrent.Timeouts$$anonfun$failAfter$1$$anonfun$apply$1",
       "org.scalatest.events.MarkupProvided$",
       "org.scalatest.exceptions.TestPendingException",
       "org.scalatest.tools.DiscoverySuite$$anonfun$narrowList$1",
       "org.scalatest.selenium.WebBrowser$WeekField$$anonfun$16",
       "org.scalatest.tools.DiscoverySuite$$anonfun$narrowList$2",
       "org.scalatest.TryValues$SuccessOrFailure$$anonfun$success$1",
       "org.scalatest.fixture.SpecLike$$anonfun$runTests$1",
       "org.scalatest.MustMatchers$ExactlyCollected$",
       "org.scalatest.InspectorsHelper",
       "org.scalatest.TagAnnotation",
       "org.scalatest.tools.RunnerJFrame$$anon$4$$anonfun$getHTMLForCause$1$1",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$allOf$1",
       "org.scalatest.matchers.TypeMatcherHelper$$anon$4",
       "org.scalatest.matchers.MatcherFactory4$AndEndWithWord",
       "org.scalatest.matchers.TypeMatcherHelper$$anon$3",
       "org.scalatest.matchers.MatcherFactory1$$anon$40",
       "org.scalatest.matchers.TypeMatcherHelper$$anon$2",
       "org.scalatest.matchers.MatcherFactory1$$anon$41",
       "org.scalatest.matchers.TypeMatcherHelper$$anon$1",
       "org.scalatest.PathMessageRecordingNotifier$$anonfun$recordedEvents$3",
       "org.scalatest.enablers.Existence",
       "org.scalatest.matchers.MatcherFactory1$$anon$42",
       "org.scalatest.enablers.Size$$anon$1",
       "org.scalatest.junit.JUnitTestFailedError",
       "org.scalatest.enablers.Size$$anon$2",
       "org.scalatest.enablers.Size$$anon$3",
       "org.scalatest.enablers.Size$$anon$4",
       "org.scalatest.enablers.Size$$anon$9",
       "org.scalatest.EitherValues$class",
       "org.scalatest.FlatSpecLike$IgnoreWord",
       "org.scalatest.enablers.Size$$anon$5",
       "org.scalatest.enablers.Size$$anon$6",
       "org.scalatest.enablers.Size$$anon$7",
       "org.scalatest.enablers.Size$$anon$8",
       "org.scalatest.enablers.ValueMapping$$anon$2$$anonfun$containsValue$3",
       "org.scalatest.tools.StringReporter$$anonfun$markupProvidedOptionalFragment$1",
       "org.scalatest.tools.Framework$ScalaTestRunner$$anonfun$done$2",
       "org.scalatest.matchers.MatcherProducers$Composifier$$anonfun$mapArgs$1",
       "org.scalatest.prop.TableFor1$$anonfun$apply$1",
       "org.scalatest.DocSpec$$anonfun$3",
       "org.scalatest.matchers.MatcherFactory1$$anon$33",
       "org.scalatest.DocSpec$$anonfun$2",
       "org.scalatest.matchers.MatcherFactory1$$anon$34",
       "org.scalatest.DocSpec$$anonfun$1",
       "org.scalatest.matchers.MatcherFactory1$$anon$35",
       "org.scalatest.matchers.MatcherFactory1$$anon$36",
       "org.scalatest.concurrent.Timeouts$$anonfun$failAfter$1",
       "org.scalatest.matchers.MatcherFactory1$$anon$30",
       "org.scalatest.matchers.MatcherFactory1$$anon$31",
       "org.scalatest.matchers.MatcherFactory1$$anon$32",
       "org.scalatest.prop.Checkers$class",
       "org.scalatest.exceptions.NotAllowedException",
       "org.scalatest.time.Microsecond",
       "org.scalatest.words.BeWord$$anon$28$$anon$23",
       "org.scalatest.matchers.MatcherFactory1$$anon$37",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$36$$anonfun$apply$11",
       "org.scalatest.matchers.MatcherFactory1$$anon$38",
       "org.scalatest.DocSpec$$anonfun$5",
       "org.scalatest.matchers.MatcherFactory1$$anon$39",
       "org.scalatest.DocSpec$$anonfun$4",
       "org.scalatest.events.IndentedText$$anonfun$1",
       "org.scalatest.events.InfoProvided",
       "org.scalatest.ParallelTestExecution$TestSpecificReporter$1",
       "org.scalatest.tools.Framework$ScalaTestRunner$$anonfun$done$1",
       "org.scalatest.Stepwise$",
       "org.scalatest.words.ContainWord",
       "org.scalatest.exceptions.TestFailedDueToTimeoutException",
       "org.scalatest.enablers.Sequencing$",
       "org.scalactic.Or",
       "org.scalatest.time.Minute",
       "org.scalatest.StreamlinedXml$$anon$1$$anonfun$1",
       "org.scalatest.tools.DashboardReporter$SuiteRecord$$anonfun$toXml$1",
       "org.scalatest.matchers.MatcherFactory1$$anon$23",
       "org.scalatest.matchers.MatcherFactory1$$anon$24",
       "org.scalatest.matchers.MatcherFactory1$$anon$25",
       "org.scalactic.Fail$",
       "org.scalatest.tools.StringReporter$$anonfun$recordedEventFragments$1",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$35$$anonfun$apply$mcV$sp$8",
       "org.scalatest.matchers.Matcher$AndEndWithWord",
       "org.scalatest.matchers.MatcherFactory1$$anon$26",
       "org.scalatest.words.NotWord$$anon$57$$anon$39",
       "org.scalatest.Matchers$ShouldMethodHelper$",
       "org.scalatest.matchers.MatcherFactory1$$anon$27",
       "org.scalatest.selenium.WebBrowser$XPathQuery",
       "org.scalatest.matchers.MatcherFactory1$$anon$28",
       "org.scalatest.matchers.MatcherFactory1$$anon$29",
       "org.scalatest.matchers.MatcherFactory6$$anon$17$$anon$5",
       "org.scalatest.tagobjects.FirefoxBrowser",
       "org.scalatest.PropSpecLike$$anon$1",
       "org.scalatest.matchers.TypeMatcherMacro$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$129$$anonfun$apply$30",
       "org.scalatest.prop.Tables$",
       "org.scalatest.tools.PresentUnformatted",
       "org.scalatest.SuperEngine$Bundle$",
       "org.scalatest.matchers.MatcherFactory8$$anon$13$$anon$5",
       "org.scalatest.Outcome$",
       "org.scalatest.tagobjects.ChromeBrowser$",
       "org.scalactic.Chain$",
       "org.scalatest.concurrent.ConductorMethods$class",
       "org.scalatest.WordSpecLike$class",
       "org.scalatest.tools.PresentDiscoveryCompleted$",
       "org.scalatest.OutcomeOf$",
       "org.scalatest.MustMatchers",
       "org.scalatest.prop.TableFor1$$anonfun$apply$2",
       "org.scalatest.concurrent.Conductors$Conductor$ClockThread",
       "org.scalatest.ConfigMapWrapperSuite",
       "org.scalatest.Filter$$anonfun$includedTestNames$2",
       "org.scalatest.Filter$$anonfun$includedTestNames$1",
       "org.scalatest.Sequential$$anonfun$1",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$getSpacedOutPathStr$1",
       "org.scalactic.UnaryMacroBool",
       "org.scalatest.tools.HtmlReporter$$anonfun$1",
       "org.scalatest.tools.HtmlReporter$$anonfun$3",
       "org.scalatest.tools.HtmlReporter$$anonfun$2",
       "org.scalactic.PrettyMethods",
       "org.scalactic.SimpleMacroBool",
       "org.scalactic.Snapshots$",
       "org.scalatest.time.Minutes$",
       "org.scalatest.CompositeStatus$$anonfun$1$$anonfun$apply$1",
       "org.scalatest.selenium.WebBrowser$Element$class",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$oneOf$1$$anonfun$apply$9",
       "org.scalatest.enablers.Size$",
       "org.scalatest.tools.PresentSuiteCompleted$",
       "org.scalatest.MustMatchers$KeyWord",
       "org.scalatest.selenium.WebBrowser$Query$$anonfun$webElement$1",
       "org.scalatest.tools.DashboardReporter$$anonfun$purgeDir$2",
       "org.scalatest.UnquotedString$",
       "org.scalatest.tools.DashboardReporter$$anonfun$purgeDir$1",
       "org.scalatest.concurrent.Conductors$Conductor$TestThread",
       "org.scalatest.words.CanVerb$class",
       "org.scalatest.words.MatcherWords$",
       "org.scalatest.Suite",
       "org.scalatest.Filter$$anonfun$includedTestNames$4",
       "org.scalatest.matchers.MatcherFactory3$$anon$22$$anon$4",
       "org.scalatest.Filter$$anonfun$includedTestNames$3",
       "org.scalatest.tools.SbtDispatchReporter",
       "org.scalatest.Checkpoints",
       "org.scalactic.SeqEqualityConstraints$",
       "org.scalatest.tools.StringReporter$$anonfun$fragmentsOnError$1",
       "org.scalatest.Matchers$ExactlyCollected",
       "org.scalatest.SuperEngine$Node",
       "org.scalatest.matchers.MatcherFactory3$$anon$28$$anon$10",
       "org.scalatest.matchers.MatcherFactory1$$anon$26$$anon$4",
       "org.scalatest.FlatSpecLike$ItVerbString$$anonfun$is$2",
       "org.scalatest.matchers.MatcherFactory2$AndFullyMatchWord",
       "org.scalatest.tools.PresentTestStarting",
       "org.scalatest.words.NotWord$$anon$61$$anon$43",
       "org.scalatest.tools.AnsiReset",
       "org.scalatest.FunSuiteLike$$anonfun$runTest$1",
       "org.scalatest.prop.TableFor10$$anon$10$$anonfun$apply$50",
       "org.scalatest.selenium.WebBrowser$FrameIndexTarget$$anonfun$switch$1",
       "org.scalatest.matchers.MatcherFactory7$OrBeWord",
       "org.scalatest.tools.ColorBar",
       "org.scalatest.words.ResultOfAnWordToAnMatcherApplication",
       "org.scalatest.words.ResultOfBeWordForNoException",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$atMostOneOf$1",
       "org.scalatest.fixture.Suite$FixturelessTestFunAndConfigMap",
       "org.scalatest.words.ResultOfContainWord$$anonfun$noneOf$1",
       "org.scalatest.Suite$$anonfun$org$scalatest$Suite$$getTags$3",
       "org.scalatest.TestRegistration",
       "org.scalatest.Suite$$anonfun$org$scalatest$Suite$$getTags$2",
       "org.scalatest.prop.TableFor9$$anonfun$apply$41",
       "org.scalatest.Suite$$anonfun$org$scalatest$Suite$$getTags$1",
       "org.scalatest.enablers.Aggregating$$anonfun$2",
       "org.scalatest.enablers.Aggregating$$anonfun$1",
       "org.scalatest.FunSuite$",
       "org.scalatest.prop.TableFor10$$anon$10$$anonfun$apply$49",
       "org.scalatest.prop.TableFor18$$anonfun$apply$87$$anonfun$apply$88",
       "org.scalatest.words.ContainWord$$anon$20$$anon$7$$anonfun$toString$3",
       "org.scalatest.prop.TableFor9$$anonfun$apply$42",
       "org.scalactic.Every$$anonfun$permutations$1",
       "org.scalatest.exceptions.PropertyCheckFailedException",
       "org.scalatest.InspectorsHelper$$anonfun$doForAtMost$1",
       "org.scalatest.StatefulStatus",
       "org.scalatest.enablers.Aggregating$$anonfun$4",
       "org.scalatest.enablers.Aggregating$$anonfun$3",
       "org.scalatest.enablers.Aggregating$$anonfun$5",
       "org.scalatest.tools.SuiteSortingReporter$$anonfun$1",
       "org.scalatest.selenium.WebBrowser$CookiesNoun",
       "org.scalactic.MapEqualityConstraints",
       "org.scalatest.CompileMacro$$treecreator9$1",
       "org.scalatest.tools.Framework$ScalaTestNestedTask",
       "org.scalatest.LoneElement$LoneElementJavaMapWrapper",
       "org.scalatest.Reporter",
       "org.scalatest.path.FunSpecLike$$anonfun$runTest$1",
       "org.scalatest.WordSpecLike$$anonfun$2$$anonfun$1",
       "org.scalatest.time.Days",
       "org.scalatest.matchers.MatcherFactory7$AndIncludeWord",
       "org.scalatest.selenium.WebBrowser$Query",
       "org.scalatest.prop.Configuration$MaxDiscarded",
       "org.scalatest.matchers.MatchPatternMacro",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$28$$anonfun$apply$7",
       "org.scalatest.words.ResultOfNoneOfApplication$$anonfun$toString$1",
       "org.scalatest.prop.TableFor8$$anonfun$newBuilder$8",
       "org.scalatest.Failed$$anonfun$2",
       "org.scalatest.PrivateMethodTester$",
       "org.scalatest.Failed$$anonfun$1",
       "org.scalatest.selenium.InternetExplorer",
       "org.scalatest.events.TestSucceeded",
       "org.scalatest.enablers.Aggregating$",
       "org.scalatest.matchers.MatcherFactory3$AndContainWord",
       "org.scalatest.testng.TestNGSuiteLike$class",
       "org.scalatest.time.Now$",
       "org.scalatest.prop.TableFor12$$anonfun$apply$56",
       "org.scalatest.time.Day$",
       "org.scalatest.fixture.FixtureNodeFamily$InfoLeaf$",
       "org.scalatest.matchers.MatcherFactory2$OrFullyMatchWord",
       "org.scalatest.prop.TableFor12$$anonfun$apply$57",
       "org.scalactic.Accumulation$$anon$2$$anonfun$2",
       "org.scalatest.words.ExistWord",
       "org.scalatest.exceptions.TestCanceledException$$anonfun$$lessinit$greater$1",
       "org.scalatest.tools.PresentReminderWithFullStackTraces$",
       "org.scalatest.Sequential",
       "org.scalatest.tools.EventHolderDefaultListModel",
       "org.scalatest.concurrent.Futures$FutureConcept$$anon$1$$anonfun$$lessinit$greater$1",
       "org.scalatest.words.ExistWord$$anon$2",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addSuiteArgs$1$$anonfun$apply$2$$anonfun$apply$3",
       "org.scalatest.fixture.FunSuiteLike$class",
       "org.scalatest.tools.ReStoppingState$",
       "org.scalatest.FunSpecLike$$anon$1",
       "org.scalatest.concurrent.ConductorFixture",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$32$$anonfun$apply$9",
       "org.scalatest.words.ResultOfInOrderApplication",
       "org.scalatest.StreamlinedXml$$anonfun$trimTextZappingEmpty$1$1",
       "org.scalatest.DiagrammedExprMacro$$anonfun$1",
       "org.scalatest.DiagrammedExprMacro$$anonfun$2",
       "org.scalatest.DiagrammedExprMacro$$anonfun$3",
       "org.scalatest.DiagrammedExprMacro$$anonfun$4",
       "org.scalatest.junit.ShouldMatchersForJUnit",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$42$$anonfun$apply$13",
       "org.scalatest.PropSpec",
       "org.scalatest.Stepwise$$anonfun$1",
       "org.scalatest.selenium.WebBrowser$$anonfun$searchField$1",
       "org.scalatest.tools.FilterTestPending$",
       "org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$1",
       "org.scalatest.FunSpecLike$$anonfun$runTest$1",
       "org.scalatest.DoNotDiscover",
       "org.scalactic.Snapshots$class",
       "org.scalatest.CompileMacro$$typecreator10$1",
       "org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2",
       "org.scalatest.tools.ScalaTestFramework",
       "org.scalatest.words.ContainWord$$anon$25$$anonfun$toString$10",
       "org.scalatest.matchers.MatcherFactory2$AndContainWord",
       "org.scalatest.SuperEngine$$anonfun$checkTestOrIgnoreParamsForNull$1",
       "org.scalatest.enablers.Collecting$",
       "org.scalatest.OneInstancePerTest$class",
       "org.scalatest.matchers.MatcherFactory7$AndNotWord",
       "org.scalatest.words.JavaCollectionWrapper",
       "org.scalatest.tools.RunnerJFrame$$anonfun$org$scalatest$tools$RunnerJFrame$$reorderCollectedEvents$1",
       "org.scalactic.Uniformity",
       "org.scalatest.matchers.MatcherFactory7$$anon$17$$anon$7",
       "org.scalatest.fixture.PropSpecLike$$anonfun$run$1",
       "org.scalatest.prop.Configuration",
       "org.scalatest.tools.PresentReminderWithoutStackTraces",
       "org.scalatest.tools.PresentShortStackTraces$",
       "org.scalatest.MustMatchers$ResultOfFullyMatchWordForCollectedString$$anonfun$checkRegex$4",
       "org.scalatest.concurrent.SelectorInterruptor",
       "org.scalatest.selenium.WebBrowser$switch$",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$inOrder$1",
       "org.scalatest.words.ContainWord$$anon$28$$anon$15$$anonfun$apply$8",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$atMostOneOf$1$$anonfun$apply$16",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldNot$2",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldNot$1",
       "org.scalactic.Good$GoodType",
       "org.scalatest.time.Days$",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldNot$3",
       "org.scalatest.tools.Runner$$anonfun$deglobSuiteParams$1$$anonfun$apply$4",
       "org.scalatest.tools.Runner$$anonfun$deglobSuiteParams$1$$anonfun$apply$3",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$12$$anonfun$apply$mcV$sp$1",
       "org.scalatest.FlatSpecLike$$anonfun$1$$anon$2$$anonfun$is$7",
       "org.scalatest.mock.EasyMockSugar$$anonfun$whenExecuting$2",
       "org.scalatest.mock.EasyMockSugar$$anonfun$whenExecuting$1",
       "org.scalatest.prop.TableFor9$$anon$9",
       "org.scalatest.enablers.Slicing",
       "org.scalatest.matchers.MatcherFactory4$AndHaveWord",
       "org.scalatest.matchers.MatcherFactory2$$anon$35$$anon$15",
       "org.scalatest.tagobjects.Network",
       "org.scalatest.matchers.MatcherFactory1$OrNotWord",
       "org.scalatest.mock.EasyMockSugar$$anonfun$whenExecuting$3",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$oneOf$1",
       "org.scalatest.words.ResultOfAnTypeInvocation",
       "org.scalatest.matchers.Matcher$OrFullyMatchWord",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$11$$anonfun$apply$8",
       "org.scalactic.Equality$$anon$1",
       "org.scalactic.StringNormalizations",
       "org.scalatest.tools.PresentScopePending$",
       "org.scalatest.fixture.FeatureSpecLike$class",
       "org.scalatest.matchers.Matcher$OrNotWord",
       "org.scalatest.MessageRecorder$$anonfun$recordedEvents$1",
       "org.scalatest.tools.ReporterFactory$$anonfun$createReportersFromConfigurations$1",
       "org.scalactic.MacroOwnerRepair$Utils",
       "org.scalatest.concurrent.Conductor$$anonfun$waitForThreads$1",
       "org.scalatest.selenium.WebBrowser$$anonfun$checkbox$1",
       "org.scalatest.time.Microsecond$",
       "org.scalatest.enablers.Readability",
       "org.scalactic.TripleEqualsSupport$AToBEquivalenceConstraint",
       "org.scalatest.DiagrammedAssertions$DiagrammedAssertionsHelper$$anonfun$org$scalatest$DiagrammedAssertions$DiagrammedAssertionsHelper$$fits$1",
       "org.scalatest.matchers.MatcherFactory6$OrNotWord",
       "org.scalatest.selenium.WebBrowser$EmailField$$anonfun$4",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$33$$anonfun$apply$mcV$sp$6",
       "org.scalactic.Normalization$class",
       "org.scalactic.ComposedNormalizingEquivalence$",
       "org.scalatest.fixture.FeatureSpecLike$$anonfun$run$1",
       "org.scalatest.events.NameInfo",
       "org.scalatest.enablers.Containing$$anonfun$checkOneOf$3",
       "org.scalatest.enablers.Containing$$anonfun$checkOneOf$2",
       "org.scalatest.concurrent.PatienceConfiguration$Interval$",
       "org.scalatest.fixture.FunSuiteLike$$anonfun$runTest$1",
       "org.scalatest.matchers.MatcherFactory7$OrHaveWord",
       "org.scalatest.enablers.Containing$$anonfun$checkOneOf$1",
       "org.scalatest.fixture.NoArgTestWrapper",
       "org.scalatest.tools.ReporterElement",
       "org.scalactic.Every$$anonfun$groupBy$1",
       "org.scalatest.CompileMacro$$treecreator18$1",
       "org.scalatest.selenium.WebBrowser$RadioButtonGroup$$anonfun$value_$eq$1",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addSuiteArgs$1$$anonfun$apply$2",
       "org.scalatest.tools.ScalaTestFramework$RunConfig$",
       "org.scalatest.words.HaveWord$$anon$6$$anon$2",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addSuiteArgs$1$$anonfun$apply$1",
       "org.scalatest.fixture.FlatSpecLike$$anonfun$1$$anon$1$$anon$2",
       "org.scalactic.Requirements$class",
       "org.scalatest.time.Microseconds",
       "org.scalatest.CompileMacro$$typecreator36$1",
       "org.scalatest.tools.XmlReporter$Testsuite$",
       "org.scalatest.tools.HtmlReporter$$anonfun$displayErrorMessage$1$1",
       "org.scalatest.StreamlinedXml",
       "org.scalatest.InspectorsHelper$$anonfun$doForAtLeast$1",
       "org.scalatest.fixture.FeatureSpecLike",
       "org.scalatest.tools.StoppingState$",
       "org.scalatest.matchers.MatcherFactory5$AndNotWord$$anon$13",
       "org.scalatest.SuperEngine",
       "org.scalatest.words.ResultOfAtMostOneOfApplication",
       "org.scalatest.junit.AssertionsForJUnit$",
       "org.scalatest.words.ResultOfLengthWordApplication$$anon$1",
       "org.scalatest.matchers.MatcherFactory8$AndEndWithWord",
       "org.scalatest.WrapperCatchReporter",
       "org.scalatest.tools.Runner$$anon$1",
       "org.scalatest.SuperEngine$InfoLeaf$",
       "org.scalatest.tools.Runner$$anon$3",
       "org.scalatest.Suite$$anonfun$indentLines$1$$anonfun$apply$2",
       "org.scalatest.events.TopOfClass",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$discoverTests$2",
       "org.scalatest.StreamlinedXmlEquality$class",
       "org.scalatest.enablers.Aggregating$$anon$1$$anonfun$containsAtLeastOneOf$1",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$discoverTests$1",
       "org.scalatest.concurrent.Conductor$Clock$$anonfun$advance$1",
       "org.scalatest.tools.FilterNoteProvided$",
       "org.scalatest.events.RunAborted$",
       "org.scalatest.MessageRecordingInformer",
       "org.scalatest.prop.Configuration$MinSize",
       "org.scalatest.matchers.MatcherFactory4$AndIncludeWord",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter",
       "org.scalatest.matchers.MatcherFactory3$$anon$31$$anon$13",
       "org.scalatest.DocSpecLike$MarkupSnippet",
       "org.scalatest.words.ContainWord$$anon$16$$anon$1",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$10",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$12",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$3$$anonfun$apply$2",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$11",
       "org.scalatest.tools.FileReporterConfiguration$",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$14",
       "org.scalatest.MatchersHelper$$anonfun$transformOperatorChars$1",
       "org.scalatest.MustMatchers$ResultOfHaveWordForCollectedExtent",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$13",
       "org.scalactic.Resources$",
       "org.scalatest.tools.PresentScopeClosed",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$15",
       "org.scalatest.events.TestCanceled$$anonfun$toXml$4",
       "org.scalatest.Inside",
       "org.scalatest.Inspectors",
       "org.scalatest.time.Nanoseconds$",
       "org.scalatest.matchers.MatcherFactory4$$anon$22$$anon$6",
       "org.scalatest.matchers.MatcherFactory6$AndBeWord",
       "org.scalactic.Accumulation$$anon$5",
       "org.scalactic.Accumulation$$anon$4",
       "org.scalactic.Accumulation$$anon$7",
       "org.scalatest.events.RunStarting",
       "org.scalactic.Accumulation$$anon$6",
       "org.scalactic.Accumulation$$anon$8",
       "org.scalactic.SnapshotsMacro",
       "org.scalactic.NormalizingEquality$class",
       "org.scalatest.enablers.Aggregating$$anonfun$checkEqual$1$2",
       "org.scalatest.tools.SbtCommandParser",
       "org.scalatest.enablers.Aggregating$$anonfun$checkEqual$1$1",
       "org.scalatest.prop.TableFor19$$anon$19$$anonfun$apply$95",
       "org.scalatest.prop.TableFor19$$anon$19$$anonfun$apply$94",
       "org.scalactic.Accumulation$$anon$1",
       "org.scalatest.selenium.WebBrowser$FrameElementTarget",
       "org.scalactic.Accumulation$$anon$3",
       "org.scalactic.Accumulation$$anon$2",
       "org.scalatest.enablers.Messaging$$anon$5",
       "org.scalatest.enablers.Messaging$$anon$4",
       "org.scalatest.enablers.Messaging$$anon$3",
       "org.scalatest.enablers.Messaging$$anon$2",
       "org.scalatest.tools.FilterNoteProvided",
       "org.scalatest.enablers.Messaging$$anon$1",
       "org.scalatest.words.NotWord$$anon$52$$anon$34",
       "org.scalatest.matchers.MatcherFactory5$AndBeWord",
       "org.scalatest.concurrent.PimpedThreadGroup",
       "org.scalatest.AnchorValue$",
       "org.scalatest.Finders",
       "org.scalatest.enablers.Messaging",
       "org.scalatest.matchers.MatcherFactory8$OrEndWithWord",
       "org.scalatest.prop.TableFor8$$anon$8$$anonfun$apply$40",
       "org.scalatest.Suite$$anonfun$autoTagClassAnnotations$1",
       "org.scalatest.selenium.WebBrowser$RadioButtonGroup$$anonfun$groupElements$1",
       "org.scalatest.ScreenshotCapturer",
       "org.scalatest.matchers.MatcherFactory2$$anon$26$$anon$6",
       "org.scalatest.Doc$$anonfun$runNestedSuites$1",
       "org.scalatest.SpecLike$MethodNameEncodedOrdering$2$",
       "org.scalatest.selenium.WebBrowser$class",
       "org.scalatest.tools.Runner$PassFailReporter",
       "org.scalatest.events.SuiteCompleted",
       "org.scalatest.matchers.Matcher$$anon$4",
       "org.scalatest.tools.RerunningState",
       "org.scalatest.matchers.Matcher$$anon$9",
       "org.scalatest.matchers.Matcher$OrNotWord$$anon$7",
       "org.scalatest.matchers.Matcher$$anon$8",
       "org.scalatest.SuperEngine$$anonfun$10",
       "org.scalatest.prop.Configuration$PropertyCheckConfig",
       "org.scalatest.ResourcefulReporter",
       "org.scalatest.DiagrammedExpr$class",
       "org.scalatest.SuperEngine$$anonfun$12",
       "org.scalatest.concurrent.Interruptor$$anon$1",
       "org.scalatest.SuperEngine$$anonfun$11",
       "org.scalatest.tools.StyleElement",
       "org.scalatest.matchers.Matcher$$anon$1",
       "org.scalatest.matchers.Matcher$$anon$2",
       "org.scalatest.matchers.MatcherFactory1$AndNotWord$$anon$21",
       "org.scalatest.MustMatchers$HavePropertyMatcherGenerator",
       "org.scalatest.tools.FilterTestCanceled",
       "org.scalactic.AbstractStringUniformity$class",
       "org.scalactic.TrySugar$class",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$inOrderOnly$1",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$11$$anonfun$apply$8",
       "org.scalatest.SuperEngine$$anonfun$14",
       "org.scalatest.SuperEngine$$anonfun$13",
       "org.scalatest.SuperEngine$$anonfun$16",
       "org.scalactic.TripleEqualsSupport$CheckingEqualizer",
       "org.scalatest.SuperEngine$$anonfun$15",
       "org.scalatest.fixture.FixtureNodeFamily$FixtureTestLeaf$",
       "org.scalactic.Accumulation$Validatable",
       "org.scalatest.tools.PresentAllDurations",
       "org.scalatest.enablers.Sortable$$anon$4$$anonfun$isSorted$4",
       "org.scalatest.PartialFunctionValues",
       "org.scalatest.exceptions.StackDepthException$$anonfun$$lessinit$greater$2",
       "org.scalatest.exceptions.StackDepthException$$anonfun$$lessinit$greater$3",
       "org.scalatest.path.FreeSpecLike$FreeSpecStringWrapper$$anonfun$is$2",
       "org.scalatest.Matchers$HavePropertyMatcherGenerator",
       "org.scalatest.exceptions.StackDepthException$$anonfun$$lessinit$greater$1",
       "org.scalatest.FreeSpecLike$$anonfun$runTests$1",
       "org.scalatest.FlatSpecLike$TheyVerbString$$anonfun$is$6",
       "org.scalatest.fixture.PropSpecLike$class",
       "org.scalatest.FlatSpecLike$BehaviorWord",
       "org.scalatest.prop.TableFor16$$anonfun$apply$76",
       "org.scalatest.prop.TableFor16$$anonfun$apply$77",
       "org.scalatest.words.ContainWord$$anon$20$$anonfun$toString$4",
       "org.scalatest.junit.JUnitSuiteLike$class",
       "org.scalatest.prop.TableFor8$$anon$8$$anonfun$apply$39",
       "org.scalatest.time.Minutes",
       "org.scalatest.selenium.WebBrowser$$anonfun$withScreenshot$1",
       "org.scalatest.matchers.MatcherFactory2$AndNotWord",
       "org.scalatest.matchers.MatcherFactory6$OrEndWithWord",
       "org.scalatest.tools.FilterScopeOpened$",
       "org.scalatest.tools.Memento$$anonfun$1",
       "org.scalatest.events.RunAborted",
       "org.scalatest.prop.TableFor5$$anonfun$apply$21",
       "org.scalatest.tools.Memento$$anonfun$2",
       "org.scalatest.matchers.MatcherFactory3$AndIncludeWord",
       "org.scalatest.prop.TableFor5$$anonfun$apply$22",
       "org.scalatest.MustMatchers$ExactlyCollected",
       "org.scalatest.tools.Memento$$anonfun$3",
       "org.scalatest.matchers.AnMatcher$$anon$1",
       "org.scalatest.matchers.MatcherFactory3$$anon$29$$anon$11",
       "org.scalatest.matchers.MatcherFactory5$$anon$24$$anon$10",
       "org.scalatest.concurrent.Conductors$Conductor$ConductorState",
       "org.scalatest.tools.AboutJDialog",
       "org.scalatest.words.ContainWord$$anon$17$$anon$2",
       "org.scalatest.SucceededStatus",
       "org.scalatest.matchers.MatcherFactory1$$anon$40$$anon$18",
       "org.scalatest.prop.TableFor2$$anon$2$$anonfun$apply$10",
       "org.scalatest.prop.TableFor21$$anon$21",
       "org.scalatest.prop.TableFor1$",
       "org.scalatest.fixture.Suite$FixturelessTestFunAndConfigMap$$anonfun$apply$2",
       "org.scalatest.prop.TableFor11",
       "org.scalactic.SetEqualityConstraints$",
       "org.scalatest.prop.TableFor12",
       "org.scalatest.prop.TableFor10",
       "org.scalatest.ShellImpl$",
       "org.scalatest.SuperEngine$MarkupLeaf$",
       "org.scalatest.prop.TableFor19",
       "org.scalatest.matchers.Matcher$AndBeWord",
       "org.scalatest.matchers.MatcherProducers$Composifier",
       "org.scalatest.path.FreeSpecLike$class",
       "org.scalatest.prop.TableFor17",
       "org.scalatest.prop.TableFor18",
       "org.scalatest.prop.TableFor15",
       "org.scalatest.words.ResultOfOneOfApplication",
       "org.scalatest.prop.TableFor16",
       "org.scalatest.prop.TableFor13",
       "org.scalatest.prop.TableFor14",
       "org.scalatest.tools.PresentDiscoveryCompleted",
       "org.scalactic.TimesOnInt",
       "org.scalatest.tags.Retryable",
       "org.scalactic.Equality",
       "org.scalatest.time.Minute$",
       "org.scalatest.concurrent.ThreadInterruptor",
       "org.scalactic.AndBool",
       "org.scalatest.prop.TableFor2$",
       "org.scalatest.matchers.MatcherFactory2$$anon$24",
       "org.scalatest.matchers.MatcherFactory2$$anon$23",
       "org.scalatest.matchers.MatcherFactory2$$anon$26",
       "org.scalatest.matchers.MatcherFactory2$$anon$25",
       "org.scalactic.NormalizingEquivalence$class",
       "org.scalatest.ScreenshotOnFailure",
       "org.scalatest.matchers.MatcherFactory2$$anon$22",
       "org.scalatest.matchers.MatcherFactory2$$anon$21",
       "org.scalatest.concurrent.TimeLimitedTests$class",
       "org.scalatest.MatchersHelper$",
       "org.scalatest.Args",
       "org.scalatest.matchers.Matcher$AndContainWord",
       "org.scalatest.fixture.FreeSpecLike",
       "org.scalatest.MustMatchers$ResultOfBeWordForCollectedArray",
       "org.scalatest.matchers.MatcherFactory2$$anon$28",
       "org.scalatest.matchers.MatcherFactory1$OrFullyMatchWord",
       "org.scalatest.matchers.MatcherFactory2$$anon$27",
       "org.scalatest.matchers.MatcherFactory2$$anon$29",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$3$$anonfun$apply$2",
       "org.scalatest.tools.ScalaTestFramework$SbtLogInfoReporter$$anonfun$printPossiblyInColor$1",
       "org.scalatest.enablers.Length$",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$setTestNGSuites$1",
       "org.scalactic.Chain$$anonfun$flatMap$1",
       "org.scalatest.prop.TableFor21$$anon$21$$anonfun$apply$104",
       "org.scalatest.Matchers$BetweenCollected",
       "org.scalatest.prop.TableFor21$$anon$21$$anonfun$apply$105",
       "org.scalatest.tools.RunnerGUI",
       "org.scalatest.tools.TestSortingReporter$TimeoutTask",
       "org.scalatest.fixture.Suite$OneArgTest$class",
       "org.scalatest.fixture.SpecLike$$anonfun$run$1",
       "org.scalatest.SlowpokeDetector$",
       "org.scalatest.tools.SuiteSortingReporter$TimeoutTask",
       "org.scalatest.prop.TableFor5$",
       "org.scalatest.matchers.BeMatcher$class",
       "org.scalatest.matchers.BePropertyMatchResult",
       "org.scalatest.fixture.FreeSpec",
       "org.scalatest.matchers.MatcherFactory2$$anon$35",
       "org.scalatest.matchers.MatcherFactory2$$anon$34",
       "org.scalatest.matchers.MatcherFactory2$$anon$37",
       "org.scalatest.matchers.MatcherFactory2$$anon$36",
       "org.scalatest.matchers.MatcherFactory2$$anon$31",
       "org.scalatest.matchers.MatcherFactory2$$anon$30",
       "org.scalatest.fixture.FlatSpecLike$$anonfun$2",
       "org.scalatest.matchers.MatcherFactory2$$anon$33",
       "org.scalatest.fixture.FlatSpecLike$$anonfun$1",
       "org.scalatest.matchers.MatcherFactory2$$anon$32",
       "org.scalatest.PrivateMethodTester$Invocation",
       "org.scalatest.tools.SuiteDiscoveryHelper",
       "org.scalatest.words.ResultOfAWordToAMatcherApplication",
       "org.scalatest.time.Span$$anonfun$scaledBy$1",
       "org.scalatest.enablers.Length$$anon$10",
       "org.scalatest.prop.TableFor6$",
       "org.scalatest.tools.Runner$$anonfun$parseSuiteArgs$1",
       "org.scalatest.FunSpecLike$$anonfun$run$1",
       "org.scalatest.words.ResultOfAtLeastOneOfApplication$$anonfun$toString$1",
       "org.scalatest.matchers.MatcherFactory2$$anon$38",
       "org.scalatest.enablers.Length$$anon$12",
       "org.scalatest.selenium.WebBrowser$AlertTarget",
       "org.scalatest.enablers.Length$$anon$11",
       "org.scalatest.matchers.MatcherFactory5$OrHaveWord",
       "org.scalatest.prop.TableFor22",
       "org.scalatest.prop.TableFor20",
       "org.scalatest.prop.TableFor21",
       "org.scalatest.prop.TableFor19$$anon$19",
       "org.scalatest.tools.ReporterConfigurations",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$2$$anonfun$apply$1",
       "org.scalatest.words.NotWord$$anon$54$$anon$36$$anonfun$apply$2",
       "org.scalatest.prop.TableFor3$",
       "org.scalatest.words.NotWord$$anon$60$$anon$42",
       "org.scalatest.mock.EasyMockSugar$MockObjects$$anonfun$1",
       "org.scalatest.events.ScopePending$",
       "org.scalatest.events.LineInFile$",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$isRunnable$1",
       "org.scalatest.prop.TableFor12$$anonfun$apply$57$$anonfun$apply$58",
       "org.scalatest.LoneElement$",
       "org.scalatest.prop.TableFor4$",
       "org.scalatest.events.TestSucceeded$$anonfun$toXml$1",
       "org.scalatest.matchers.MatcherFactory8$$anon$9",
       "org.scalatest.selenium.WebBrowser$NameQuery$",
       "org.scalatest.words.MustVerb$class",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$value$1",
       "org.scalatest.matchers.MatcherFactory3$AndEndWithWord",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$1$$anonfun$apply$1",
       "org.scalatest.fixture.WordSpecLike$$anonfun$2",
       "org.scalatest.tools.TextElement",
       "org.scalatest.matchers.Matcher$OrStartWithWord",
       "org.scalatest.Matchers$ResultOfBeWordForCollectedAny$$anonfun$theSameInstanceAs$1",
       "org.scalatest.Matchers$ResultOfFullyMatchWordForString",
       "org.scalatest.FreeSpecLike",
       "org.scalatest.tools.PresentReminderWithFullStackTraces",
       "org.scalatest.FeatureSpecLike$$anonfun$runTests$1",
       "org.scalatest.matchers.MatcherFactory7$OrStartWithWord",
       "org.scalatest.enablers.Length",
       "org.scalatest.tagobjects.ChromeBrowser",
       "org.scalactic.End$",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$have$3$$anonfun$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$have$3$$anonfun$2",
       "org.scalatest.InspectorsHelper$$anonfun$doForExactly$1",
       "org.scalatest.TestData",
       "org.scalatest.tools.Framework$ScalaTestRunner",
       "org.scalatest.tools.JUnitXmlReporter$$anonfun$3",
       "org.scalatest.tools.JUnitXmlReporter$$anonfun$2",
       "org.scalatest.DiagrammedAssertions$DiagrammedAssertionsHelper$$anonfun$filterAndSortByAnchor$1",
       "org.scalatest.DiagrammedAssertionsMacro$",
       "org.scalatest.prop.TableFor20$$anonfun$apply$97",
       "org.scalatest.tools.JUnitXmlReporter$$anonfun$1",
       "org.scalatest.prop.TableFor20$$anonfun$apply$96",
       "org.scalatest.InspectorsHelper$$anonfun$doForEvery$1",
       "org.scalatest.SuperEngine$TestLeaf$",
       "org.scalatest.matchers.MatcherFactory6$AndIncludeWord",
       "org.scalatest.tools.TestSortingReporter",
       "org.scalatest.words.FullyMatchWord",
       "org.scalatest.tools.PresentSuiteAborted",
       "org.scalatest.verb.package",
       "org.scalactic.Chain$$anonfun$groupBy$1",
       "org.scalatest.StreamlinedXmlEquality$$anon$1",
       "org.scalatest.concurrent.AsyncAssertions",
       "org.scalatest.InspectorsHelper$ForResult$",
       "org.scalatest.concurrent.Eventually$$anonfun$tryTryAgain$1$1",
       "org.scalatest.Matchers",
       "org.scalatest.matchers.MatcherFactory1$AndHaveWord",
       "org.scalatest.MustMatchers$NoCollected$",
       "org.scalatest.enablers.ValueMapping",
       "org.scalactic.AbstractStringUniformity",
       "org.scalatest.fixture.FlatSpecLike$ItVerbString$$anonfun$is$2",
       "org.scalatest.concurrent.Conductors$Conductor$Clock$$anonfun$advance$1",
       "org.scalatest.tools.AnsiGreen$",
       "org.scalatest.tools.Durations$Duration",
       "org.scalatest.Inspectors$$anonfun$createElementsMessage$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$7$$anonfun$apply$4",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$include$1",
       "org.scalatest.tools.PresentMarkupProvided$",
       "org.scalatest.selenium.Chrome$class",
       "org.scalatest.tagobjects.CPU$",
       "org.scalatest.Specs",
       "org.scalatest.Stopper$",
       "org.scalatest.prop.TableFor19$$anonfun$newBuilder$19",
       "org.scalatest.prop.TableFor15$$anonfun$apply$72$$anonfun$apply$73",
       "org.scalatest.BeforeAndAfterEach$class",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$include$2",
       "org.scalatest.tools.AnsiRed",
       "org.scalatest.events.Summary$",
       "org.scalatest.time.Span$",
       "org.scalatest.words.BeWord$$anon$27$$anon$20",
       "org.scalatest.tools.FriendlyParamsTranslator$$anonfun$parseCompoundParams$1",
       "org.scalatest.tools.JUnitXmlReporter$$anonfun$genPropertiesXml$1",
       "org.scalactic.ConversionCheckedTripleEquals$",
       "org.scalatest.MustMatchers$AnyMustWrapper",
       "org.scalatest.tools.SuiteResultHolder$$anonfun$totalDuration$1",
       "org.scalatest.tools.SbtDispatchReporter$$anonfun$apply$1",
       "org.scalatest.tools.JunitXmlReporterConfiguration$",
       "org.scalatest.tools.JvmArg",
       "org.scalatest.PartialFunctionValues$",
       "org.scalatest.SuperEngine$Bundle",
       "org.scalatest.fixture.WordSpecLike$ResultOfTaggedAsInvocationOnString$$anonfun$is$1",
       "org.scalatest.words.ResultOfOnlyApplication$$anonfun$toString$1",
       "org.scalatest.selenium.WebBrowser$WeekField",
       "org.scalatest.matchers.MatcherFactory5$AndEndWithWord",
       "org.scalatest.PropSpecLike",
       "org.scalatest.tools.Durations$Suite",
       "org.scalatest.fixture.FlatSpecLike$BehaviorWord",
       "org.scalatest.time.SpanSugar$FloatingGrainOfTime",
       "org.scalatest.exceptions.GeneratorDrivenPropertyCheckFailedException",
       "org.scalatest.tools.PresentAlertProvided$",
       "org.scalatest.Spec$",
       "org.scalatest.selenium.WebBrowser$$anonfun$dateTimeField$1",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$3",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$2",
       "org.scalatest.Matchers$AnWord",
       "org.scalatest.prop.TableFor16$$anonfun$newBuilder$16",
       "org.scalatest.WordSpecLike$$anonfun$runTests$1",
       "org.scalatest.tools.SlowpokeConfig",
       "org.scalatest.matchers.MatcherProducers$",
       "org.scalatest.OutcomeOf$class",
       "org.scalactic.TrySugar$",
       "org.scalatest.exceptions.TableDrivenPropertyCheckFailedException$$anonfun$1$$anonfun$apply$1",
       "org.scalatest.exceptions.TestRegistrationClosedException$$anonfun$$lessinit$greater$1",
       "org.scalatest.matchers.MatcherFactory8$AndIncludeWord",
       "org.scalatest.prop.TableFor2$$anonfun$apply$6",
       "org.scalatest.matchers.MatcherFactory4$$anon$21$$anon$5",
       "org.scalatest.prop.TableFor2$$anonfun$apply$7",
       "org.scalatest.selenium.WebBrowser",
       "org.scalactic.LegacyTripleEquals",
       "org.scalatest.PendingNothing",
       "org.scalatest.FreeSpecLike$FreeSpecStringWrapper$$anonfun$is$2",
       "org.scalatest.CompileMacro$$treecreator17$1",
       "org.scalatest.ConcurrentInformer",
       "org.scalatest.events.RecordableEvent",
       "org.scalatest.path.FreeSpecLike$ResultOfTaggedAsInvocationOnString",
       "org.scalatest.tools.PresentDiscoveryStarting",
       "org.scalatest.selenium.WebBrowser$Dimension",
       "org.scalatest.matchers.Matcher$$anon$10",
       "org.scalatest.matchers.Matcher$$anon$11",
       "org.scalatest.DiagrammedExprMacro$$anonfun$2$$anonfun$apply$2",
       "org.scalatest.matchers.Matcher$$anon$12",
       "org.scalatest.tools.FriendlyParamsTranslator$$anonfun$translateKeyValue$2",
       "org.scalatest.tools.FriendlyParamsTranslator$$anonfun$translateKeyValue$1",
       "org.scalatest.ScreenshotOnFailure$class",
       "org.scalatest.tools.XmlSocketReporterConfiguration",
       "org.scalatest.prop.TableFor9$$anonfun$newBuilder$9",
       "org.scalatest.words.NotWord$$anon$59$$anon$41$$anonfun$apply$5",
       "org.scalatest.tools.PresentAllDurations$",
       "org.scalatest.Transformer",
       "org.scalatest.concurrent.AbstractPatienceConfiguration$PatienceConfig$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$101",
       "org.scalatest.tools.ConcurrentDistributor",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$100",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$103",
       "org.scalatest.tools.FriendlyParamsTranslator$$anonfun$translateKeyValue$4",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$102",
       "org.scalatest.tools.FriendlyParamsTranslator$$anonfun$translateKeyValue$3",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$105",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$104",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$107",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$106",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$109",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$108",
       "org.scalactic.MapEqualityConstraints$",
       "org.scalatest.matchers.MatcherFactory6$OrIncludeWord",
       "org.scalatest.EitherValues",
       "org.scalatest.words.ContainWord$$anon$28$$anonfun$toString$16",
       "org.scalatest.MustMatchers$class",
       "org.scalatest.tools.Fragment$$anonfun$countTrailingEOLs$1",
       "org.scalatest.matchers.HavePropertyMatcher$class",
       "org.scalatest.tools.Durations$$anonfun$addTests$1$$anonfun$apply$3",
       "org.scalatest.selenium.WebBrowser$DateField",
       "org.scalatest.Suite$$anonfun$indentLines$1",
       "org.scalatest.events.RunStopped",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$endWith$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$110",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$112",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$111",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$114",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$113",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$116",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$115",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$118",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$117",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$endWith$2",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$119",
       "org.scalatest.exceptions.TestFailedException$$anonfun$$lessinit$greater$1",
       "org.scalatest.matchers.MatcherFactory1$$anon$27$$anon$5",
       "org.scalatest.enablers.Aggregating$ElementCount$3",
       "org.scalatest.enablers.ValueMapping$",
       "org.scalatest.words.ShouldVerb$$anon$1",
       "org.scalatest.tools.StringReporter",
       "org.scalatest.tools.FilterScopePending$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$121",
       "org.scalatest.exceptions.StackDepthExceptionHelper",
       "org.scalatest.fixture.FlatSpecLike$class",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$120",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$123",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$122",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$125",
       "org.scalatest.PathMessageRecordingDocumenter$$anonfun$recordedEvents$5",
       "org.scalatest.matchers.MatcherFactory3$AndStartWithWord",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$124",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$127",
       "org.scalatest.fixture.FeatureSpecLike$$anonfun$runTest$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$126",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$129",
       "org.scalatest.Matchers$KeyWord",
       "org.scalatest.matchers.MatcherFactory4$$anon$26$$anon$10",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$128",
       "org.scalatest.words.ContainWord$$anon$26$$anonfun$toString$12",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$inOrderOnly$1$$anonfun$apply$13",
       "org.scalatest.tools.Framework$ScalaTestRunner$$anonfun$filterWildcard$1",
       "org.scalatest.words.SizeWord",
       "org.scalatest.FlatSpecLike$$anonfun$runTest$1",
       "org.scalatest.selenium.WebBrowser$DateTimeField",
       "org.scalatest.words.ResultOfGreaterThanOrEqualToComparison",
       "org.scalatest.DiagrammedAssertions$DiagrammedAssertionsHelper",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$130",
       "org.scalatest.AssertionsMacro$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$132",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$131",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$134",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$133",
       "org.scalatest.tools.XmlReporter$Testsuite",
       "org.scalatest.matchers.MatcherFactory3Macro",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$135",
       "org.scalatest.tools.FilterScopeOpened",
       "org.scalatest.Resources",
       "org.scalatest.RunningTest",
       "org.scalatest.matchers.MatcherFactory2$$anon$25$$anon$5",
       "org.scalatest.prop.Checkers",
       "org.scalatest.selenium.WebBrowser$FrameIndexTarget",
       "org.scalatest.matchers.Matcher$AndNotWord$$anon$6",
       "org.scalatest.matchers.MatcherFactory8$$anon$12",
       "org.scalatest.prop.TableFor10$$anonfun$apply$46",
       "org.scalatest.matchers.MatcherFactory8$$anon$13",
       "org.scalatest.prop.TableFor10$$anonfun$apply$47",
       "org.scalactic.TripleEqualsSupport$",
       "org.scalatest.fixture.FeatureSpecLike$$anonfun$runTests$1",
       "org.scalatest.matchers.MatcherFactory8$$anon$10",
       "org.scalatest.matchers.MatcherFactory8$$anon$11",
       "org.scalatest.concurrent.Conductors$Conductor$TestFinished$",
       "org.scalatest.SeveredStackTraces",
       "org.scalatest.ShellImpl",
       "org.scalatest.matchers.MatcherFactory8$$anon$14",
       "org.scalatest.PathMessageRecordingInformer",
       "org.scalatest.tools.EventHolderJList",
       "org.scalatest.matchers.MatcherFactory3$$anon$23$$anon$5",
       "org.scalatest.testng.TestNGSuiteLike",
       "org.scalatest.matchers.MatcherFactory1$AndEndWithWord",
       "org.scalactic.Chain$$anonfun$sliding$2",
       "org.scalatest.prop.Checkers$$anonfun$org$scalatest$prop$Checkers$$getArgsWithSpecifiedNames$1",
       "org.scalactic.Chain$$anonfun$sliding$1",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$run$1",
       "org.scalatest.selenium.WebBrowser$RadioButtonGroup$$anonfun$20",
       "org.scalactic.NormMethods$class",
       "org.scalatest.enablers.Aggregating$$anonfun$checkTheSameElementsAs$1",
       "org.scalatest.Doc$class",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$inOrder$1$$anonfun$apply$15",
       "org.scalatest.words.ExistWord$$anon$2$$anon$1",
       "org.scalatest.words.HaveWord$$anon$7$$anon$3",
       "org.scalatest.matchers.MatcherFactory8$AndStartWithWord",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$run$2",
       "org.scalatest.matchers.MatcherFactory9$$anon$8",
       "org.scalatest.matchers.MatcherFactory9$$anon$5",
       "org.scalatest.DiagrammedExpr",
       "org.scalatest.matchers.MatcherFactory9$$anon$7",
       "org.scalatest.matchers.MatcherFactory9$$anon$6",
       "org.scalatest.time.SpanSugar",
       "org.scalatest.prop.TableFor9$$anonfun$apply$42$$anonfun$apply$43",
       "org.scalatest.words.BeWord$$anon$9",
       "org.scalatest.words.BeWord$$anon$8",
       "org.scalatest.concurrent.ScalaFutures$$anon$1$$anonfun$eitherValue$1",
       "org.scalatest.words.BeWord$$anon$7",
       "org.scalatest.words.BeWord$$anon$6",
       "org.scalatest.prop.TableFor8$$anon$8",
       "org.scalatest.tools.AnsiCyan",
       "org.scalatest.MustMatchers$$anon$2",
       "org.scalatest.DispatchReporter$Propagator",
       "org.scalatest.MustMatchers$$anon$3",
       "org.scalatest.mock.EasyMockSugar",
       "org.scalatest.Retries$",
       "org.scalatest.tools.Durations",
       "org.scalactic.Explicitly$TheAfterWord",
       "org.scalatest.words.BeWord$$anon$1",
       "org.scalatest.MustMatchers$Collected",
       "org.scalatest.words.BeWord$$anon$5",
       "org.scalatest.words.BeWord$$anon$4",
       "org.scalatest.SlowpokeDetector$$anonfun$detectSlowpokes$2",
       "org.scalatest.fixture.FlatSpecLike$$anonfun$runTests$1",
       "org.scalatest.words.BeWord$$anon$3",
       "org.scalatest.SlowpokeDetector$$anonfun$detectSlowpokes$1",
       "org.scalatest.tools.HtmlReporter$$anonfun$tagMapScript$1",
       "org.scalatest.words.BeWord$$anon$2",
       "org.scalatest.SequentialNestedSuiteExecution$class",
       "org.scalatest.matchers.BePropertyMatcher",
       "org.scalatest.CompositeStatus$$anonfun$1",
       "org.scalatest.tools.FilterTestSucceeded$",
       "org.scalactic.MacroOwnerRepair$Utils$repairer$2$",
       "org.scalatest.tools.PresentNoteProvided$",
       "org.scalatest.SpecLike$$anonfun$register$1$1$$anonfun$1",
       "org.scalatest.matchers.MatcherFactory2$AndEndWithWord",
       "org.scalatest.prop.TableFor13$$anonfun$newBuilder$13",
       "org.scalatest.selenium.WebBrowser$RadioButtonGroup$$anonfun$19",
       "org.scalatest.selenium.WebBrowser$RadioButtonGroup$$anonfun$18",
       "org.scalatest.matchers.MatcherFactory6$OrBeWord",
       "org.scalatest.MustMatchers$ResultOfHaveWordForCollectedExtent$$anonfun$length$1",
       "org.scalatest.tools.ProgressBarPanel",
       "org.scalatest.Shell",
       "org.scalatest.selenium.WebBrowser$TimeField$$anonfun$14",
       "org.scalactic.NormalizingEquivalence$$anon$1",
       "org.scalatest.matchers.BePropertyMatchResult$",
       "org.scalatest.matchers.Matcher$$anon$9$$anonfun$3",
       "org.scalatest.matchers.Matcher$$anon$9$$anonfun$4",
       "org.scalatest.tools.TestSpec",
       "org.scalatest.selenium.WebBrowser$PartialLinkTextQuery$",
       "org.scalatest.matchers.MatcherFactory8$$anon$14$$anon$6",
       "org.scalatest.matchers.Matcher$$anon$9$$anonfun$1",
       "org.scalatest.matchers.Matcher$$anon$9$$anonfun$2",
       "org.scalactic.OptionSugar$Optionizer",
       "org.scalatest.tools.FilterSuiteCompleted$",
       "org.scalatest.matchers.MatcherFactory7$$anon$16$$anon$6",
       "org.scalatest.words.ResultOfSizeWordApplication$$anon$1",
       "org.scalatest.matchers.MatcherFactory5$OrStartWithWord",
       "org.scalactic.TolerantNumerics",
       "org.scalatest.fixture.FlatSpecLike$TheyVerbString",
       "org.scalatest.CompileMacro$$treecreator1$1",
       "org.scalatest.Matchers$ResultOfIncludeWordForCollectedString$$anonfun$checkRegex$2",
       "org.scalatest.enablers.KeyMapping$",
       "org.scalatest.tags.Network",
       "org.scalatest.exceptions.DuplicateTestNameException",
       "org.scalactic.TripleEqualsSupport$EqualityConstraint",
       "org.scalatest.matchers.MatcherFactory6$$anon$18$$anon$6",
       "org.scalatest.prop.TableFor10$$anonfun$newBuilder$10",
       "org.scalatest.tools.ScalaTestFramework$ScalaTestRunner$$anonfun$1",
       "org.scalatest.CompileMacro$",
       "org.scalatest.Doc$Snippet",
       "org.scalatest.tools.RunningState",
       "org.scalactic.LegacyTripleEquals$class",
       "org.scalatest.MustMatchers$ResultOfEvaluatingApplication",
       "org.scalatest.words.ResultOfLessThanOrEqualToComparison",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$equal$1",
       "org.scalatest.fixture.Spec",
       "org.scalactic.OrBool",
       "org.scalatest.ScalaTestStatefulStatus",
       "org.scalatest.CompileMacro$$typecreator24$1",
       "org.scalatest.words.ContainWord$$anon$26$$anon$13",
       "org.scalactic.MacroOwnerRepair",
       "org.scalatest.words.ContainWord$$anon$27$$anonfun$toString$14",
       "org.scalatest.matchers.MatcherFactory7$OrEndWithWord",
       "org.scalatest.matchers.MatcherFactory3$AndNotWord$$anon$17",
       "org.scalatest.Matchers$ResultOfCollectedAny",
       "org.scalatest.selenium.WebBrowser$$anonfun$numberField$1",
       "org.scalatest.fixture.WordSpecLike$TheyWord",
       "org.scalatest.Inspectors$class",
       "org.scalatest.ScalaTestVersions$",
       "org.scalatest.matchers.MatchFailed",
       "org.scalatest.concurrent.PimpedThreadGroup$$anonfun$areAnyThreadsAlive$1",
       "org.scalatest.junit.MustMatchersForJUnit$",
       "org.scalatest.enablers.Aggregating$$anon$1$$anonfun$containsAtLeastOneOf$1$$anonfun$apply$3",
       "org.scalatest.FlatSpecLike$TheyVerbStringTaggedAs$$anonfun$is$5",
       "org.scalatest.tools.PresentSuiteAborted$",
       "org.scalatest.matchers.MatcherFactory1$$anon$37$$anon$15",
       "org.scalatest.tools.HtmlReporter$$anonfun$getHTMLForStackTrace$1$1",
       "org.scalatest.tools.PresentTestFailed",
       "org.scalatest.selenium.WebBrowser$RadioButton$$anonfun$17",
       "org.scalatest.fixture.WordSpecLike$$anonfun$runTest$1",
       "org.scalactic.Requirements$",
       "org.scalatest.selenium.WebBrowser$$anonfun$rangeField$1",
       "org.scalatest.FeatureSpecLike$class",
       "org.scalatest.matchers.MatcherFactory7$OrContainWord",
       "org.scalatest.concurrent.Conductor$TestFinished$",
       "org.scalatest.enablers.Containing$$anonfun$checkNoneOf$2$$anonfun$apply$2",
       "org.scalatest.FreeSpecLike$ResultOfTaggedAsInvocationOnString",
       "org.scalatest.tools.PresentTestIgnored",
       "org.scalatest.matchers.MidSentenceNegatedFailureMessage",
       "org.scalatest.matchers.MatcherFactory3$OrHaveWord",
       "org.scalatest.fixture.FlatSpecLike$$anonfun$1$$anon$1$$anonfun$is$7",
       "org.scalatest.path.FreeSpecLike$$anonfun$runTest$1",
       "org.scalactic.StringNormalizations$",
       "org.scalatest.tools.PresentTestFailed$",
       "org.scalatest.enablers.Aggregating$$anon$6",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$18",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$19",
       "org.scalatest.words.ShouldVerb$class",
       "org.scalatest.enablers.Readability$",
       "org.scalatest.prop.TableFor4$$anon$4",
       "org.scalatest.tools.DashboardReporter$$anonfun$formatOldRuns$1$1",
       "org.scalatest.tools.PresentSuiteStarting$",
       "org.scalatest.prop.TableFor13$$anon$13",
       "org.scalatest.tools.CustomReporterConfiguration$",
       "org.scalatest.RandomTestOrder",
       "org.scalatest.matchers.MatcherFactory3$OrIncludeWord",
       "org.scalatest.selenium.WebBrowser$ColorField$$anonfun$5",
       "org.scalatest.enablers.Aggregating$$anon$1",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$16",
       "org.scalatest.concurrent.TestThreadsStartingCounter",
       "org.scalatest.selenium.WebBrowser$DateTimeLocalField",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$17",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$14",
       "org.scalatest.PartialFunctionValues$class",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$15",
       "org.scalatest.enablers.Aggregating$$anon$5",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$12",
       "org.scalatest.enablers.Aggregating$$anon$4",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$13",
       "org.scalatest.enablers.Aggregating$$anon$3",
       "org.scalatest.matchers.MatcherFactory3$OrNotWord$$anon$18",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$10",
       "org.scalatest.enablers.Aggregating$$anon$2",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$11",
       "org.scalatest.Pending$",
       "org.scalactic.TolerantNumerics$$anon$1",
       "org.scalatest.words.NotWord",
       "org.scalatest.prop.TableFor2$$anon$2$$anonfun$apply$9",
       "org.scalatest.fixture.FreeSpecLike$FreeSpecStringWrapper",
       "org.scalatest.Matchers$StringShouldWrapper",
       "org.scalatest.Doc$Bundle",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$20",
       "org.scalatest.words.ShouldVerb$StringShouldWrapperForVerb$class",
       "org.scalatest.tools.FilterTestCanceled$",
       "org.scalactic.TolerantNumerics$$anon$6",
       "org.scalactic.TolerantNumerics$$anon$7",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$96$$anonfun$apply$25",
       "org.scalatest.tools.PresentTestCanceled$",
       "org.scalactic.TolerantNumerics$$anon$2",
       "org.scalactic.TolerantNumerics$$anon$3",
       "org.scalactic.TolerantNumerics$$anon$4",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$21",
       "org.scalactic.TolerantNumerics$$anon$5",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$22",
       "org.scalatest.selenium.WebBrowser$ClassNameQuery$",
       "org.scalatest.Retries$$anonfun$isRetryable$1",
       "org.scalatest.Doc$IncludedSuite",
       "org.scalatest.tools.AnsiYellow",
       "org.scalatest.prop.TableFor3$$anonfun$apply$12$$anonfun$apply$13",
       "org.scalatest.SuperEngine$RegistrationAlerter",
       "org.scalatest.WordSpecLike$ResultOfTaggedAsInvocationOnString",
       "org.scalatest.matchers.MatcherFactory5$$anon$19$$anon$5",
       "org.scalatest.matchers.MatcherFactory7$$anon$12$$anon$2",
       "org.scalatest.LoneElement$class",
       "org.scalatest.selenium.WebBrowser$Point$",
       "org.scalatest.TryValues$SuccessOrFailure",
       "org.scalatest.run$$anonfun$main$1",
       "org.scalatest.time.Span",
       "org.scalatest.words.MatchPatternWord",
       "org.scalatest.events.AlertProvided$",
       "org.scalatest.SlowpokeDetector$$anonfun$1",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$org$scalatest$tools$SuiteDiscoveryHelper$$getFileNamesSetFromFile$1",
       "org.scalatest.NonImplicitAssertions$",
       "org.scalatest.matchers.MatcherFactory6$OrFullyMatchWord",
       "org.scalatest.tools.EventHolder",
       "org.scalatest.tools.RunDoneListener$class",
       "org.scalatest.Documenter",
       "org.scalatest.tools.DashboardReporter$TestRecord",
       "org.scalatest.words.ShouldVerb$StringShouldWrapperForVerb",
       "org.scalatest.tools.Fragment",
       "org.scalatest.tools.RunnerJFrame$RerunnerThread",
       "org.scalatest.enablers.Existence$$anon$1",
       "org.scalatest.CompileMacro$$treecreator11$1",
       "org.scalatest.Matchers$ResultOfBeWordForCollectedAny$$anonfun$an$2",
       "org.scalatest.matchers.MatchPatternMacro$",
       "org.scalatest.matchers.MatcherFactory8$$anon$9$$anon$1",
       "org.scalatest.selenium.WebBrowser$ValueElement$class",
       "org.scalatest.Matchers$ResultOfBeWordForCollectedAny$$anonfun$an$1",
       "org.scalatest.concurrent.AsyncAssertions$Waiter",
       "org.scalatest.tools.Framework$ScalaTestSbtEvent",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$11",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$must$7",
       "org.scalatest.fixture.TestDataFixture",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$12",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$must$6",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$must$5",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$10",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$must$4",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$must$3",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$must$2",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$must$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$19",
       "org.scalatest.matchers.MatchFailed$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$17",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$18",
       "org.scalatest.matchers.MatcherFactory1$AndIncludeWord",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$15",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$16",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$13",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$14",
       "org.scalatest.words.CanVerb$StringCanWrapperForVerb$class",
       "org.scalactic.Tolerance$class",
       "org.scalatest.exceptions.StackDepthException$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$22",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$8$$anonfun$apply$5",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$23",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$20",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$21",
       "org.scalatest.selenium.WebBrowser$$anonfun$pwdField$1",
       "org.scalatest.selenium.InternetExplorer$",
       "org.scalatest.matchers.MatcherFactory5$OrContainWord",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$26",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$27",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$24",
       "org.scalatest.events.TestPending",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$25",
       "org.scalactic.ConversionCheckedLegacyTripleEquals",
       "org.scalatest.EncodedOrdering",
       "org.scalatest.tools.Framework$ScalaTestTask$$anonfun$tags$5",
       "org.scalatest.words.ResultOfNoneOfApplication",
       "org.scalatest.tools.Framework$ScalaTestTask$$anonfun$tags$4",
       "org.scalatest.StopOnFailure",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$7$$anonfun$apply$4",
       "org.scalatest.fixture.FunSpecLike$$anonfun$runTest$1",
       "org.scalatest.Failed",
       "org.scalactic.BinaryMacroBool",
       "org.scalatest.matchers.MatcherFactory3$$anon$19",
       "org.scalatest.words.ResultOfBeWordForAType",
       "org.scalatest.tools.Framework$ScalaTestTask$$anonfun$tags$6",
       "org.scalatest.tools.Framework$RecordingDistributor",
       "org.scalatest.tools.TestsfileElement",
       "org.scalatest.tags.FirefoxBrowser",
       "org.scalatest.matchers.MatcherFactory8$AndBeWord",
       "org.scalatest.matchers.MatcherFactory2$$anon$24$$anon$4",
       "org.scalactic.TripleEquals",
       "org.scalatest.FlatSpecLike$$anonfun$1$$anon$2$$anon$3",
       "org.scalatest.PathMessageRecordingNotifier$",
       "org.scalatest.Suite$$anonfun$9",
       "org.scalatest.prop.TableFor22$$anon$22",
       "org.scalatest.tools.PresentWithoutColor",
       "org.scalatest.fixture.FixtureNodeFamily$VerbBranch$",
       "org.scalatest.events.TestPending$$anonfun$toXml$3",
       "org.scalatest.Matchers$AnyShouldWrapper",
       "org.scalatest.matchers.MidSentenceFailureMessage$",
       "org.scalatest.DocSpecLike$SuiteSnippet",
       "org.scalatest.Suite$$anonfun$7",
       "org.scalatest.Suite$$anonfun$8",
       "org.scalatest.Suite$$anonfun$5",
       "org.scalactic.ComposedNormalizingEquality$",
       "org.scalatest.Suite$$anonfun$6",
       "org.scalatest.tools.Memento$",
       "org.scalatest.Suite$$anonfun$3",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$79$$anonfun$apply$22",
       "org.scalatest.prop.TableFor15$$anonfun$newBuilder$15",
       "org.scalatest.Suite$$anonfun$4",
       "org.scalatest.Suite$$anonfun$1",
       "org.scalatest.matchers.MatcherFactory7$$anon$18$$anon$8",
       "org.scalatest.Suite$$anonfun$2",
       "org.scalatest.fixture.FunSuiteLike$$anonfun$runTests$1",
       "org.scalatest.words.ContainWord$$anon$19$$anonfun$toString$2",
       "org.scalatest.words.TypeCheckWord",
       "org.scalatest.Matchers$RegexWrapper",
       "org.scalatest.selenium.WebBrowser$TimeField",
       "org.scalatest.selenium.WebBrowser$$anonfun$27",
       "org.scalatest.selenium.WebBrowser$$anonfun$28",
       "org.scalatest.selenium.WebBrowser$$anonfun$29",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$10$$anonfun$apply$4",
       "org.scalactic.Accumulation",
       "org.scalactic.ConversionCheckedTripleEquals",
       "org.scalatest.tools.JunitXmlReporterConfiguration",
       "org.scalatest.exceptions.TestRegistrationClosedException",
       "org.scalatest.Filter$",
       "org.scalatest.tools.PresentShortStackTraces",
       "org.scalatest.prop.Checkers$$anonfun$3",
       "org.scalatest.prop.Checkers$$anonfun$2",
       "org.scalatest.selenium.WebBrowser$$anonfun$30",
       "org.scalatest.prop.Checkers$$anonfun$4",
       "org.scalatest.selenium.WebBrowser$$anonfun$31",
       "org.scalatest.selenium.WebBrowser$$anonfun$32",
       "org.scalatest.selenium.WebBrowser$$anonfun$33",
       "org.scalatest.selenium.WebBrowser$$anonfun$34",
       "org.scalatest.selenium.WebBrowser$$anonfun$35",
       "org.scalatest.SuperEngine$AlertLeaf",
       "org.scalatest.prop.Checkers$$anonfun$1",
       "org.scalactic.Many$",
       "org.scalactic.SetEqualityConstraints",
       "org.scalatest.PathMessageRecordingDocumenter",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$6$$anonfun$apply$3",
       "org.scalatest.Tracker",
       "org.scalatest.selenium.WebBrowser$SingleSel",
       "org.scalatest.JSuite",
       "org.scalatest.fixture.FlatSpecLike$InAndIgnoreMethods",
       "org.scalatest.DynaTags",
       "org.scalatest.tools.PresentReminderWithoutCanceledTests",
       "org.scalatest.words.NotWord$$anon$59$$anon$41",
       "org.scalatest.concurrent.ConductorMethods",
       "org.scalatest.InspectorsHelper$$anonfun$doForBetween$1",
       "org.scalatest.path.FreeSpecLike",
       "org.scalatest.fixture.WordSpecLike$AfterWord",
       "org.scalatest.selenium.WebBrowser$Checkbox$$anonfun$21",
       "org.scalatest.Suite$$anon$2$$anonfun$apply$1",
       "org.scalatest.path.FunSpecLike$ItWord",
       "org.scalatest.concurrent.Conductors$Conductor$Clock",
       "org.scalactic.Fail",
       "org.scalatest.FunSpecLike$ItWord",
       "org.scalatest.words.ContainWord$$anon$4$$anonfun$1",
       "org.scalactic.ScalacticVersions$",
       "org.scalatest.selenium.WebBrowser$CssSelectorQuery$",
       "org.scalatest.matchers.MatcherFactory4$AndNotWord$$anon$15",
       "org.scalactic.Accumulation$$anon$2$$anonfun$combined$1",
       "org.scalatest.fixture.FlatSpecLike",
       "org.scalatest.matchers.MatcherFactory3$$anon$30",
       "org.scalatest.DiagrammedExprMacro$$anonfun$1$$anonfun$apply$1",
       "org.scalatest.tools.RunnerJFrame$RunnerThread",
       "org.scalatest.matchers.MatcherFactory5$OrFullyMatchWord",
       "org.scalatest.words.ResultOfValueWordApplication",
       "org.scalatest.matchers.MatcherFactory3$$anon$34",
       "org.scalatest.CompositeStatus$$anonfun$isCompleted$1",
       "org.scalatest.matchers.MatcherFactory3$$anon$33",
       "org.scalatest.matchers.MatcherFactory3$$anon$32",
       "org.scalatest.matchers.MatcherFactory3$$anon$31",
       "org.scalatest.StopOnFailureReporter",
       "org.scalatest.exceptions.StackDepth$$anonfun$failedCodeFileNameAndLineNumberString$1$$anonfun$apply$1",
       "org.scalactic.TripleEqualsSupport$LegacyCheckingEqualizer",
       "org.scalatest.matchers.MatcherFactory3$$anon$29",
       "org.scalatest.matchers.MatcherFactory3$$anon$28",
       "org.scalatest.selenium.HtmlUnit$",
       "org.scalatest.words.ContainWord$$anon$26$$anon$13$$anonfun$apply$6",
       "org.scalatest.words.ResultOfGreaterThanComparison",
       "org.scalatest.concurrent.ConductorMultiFixture$class",
       "org.scalatest.words.ResultOfContainWord$$anonfun$allOf$1",
       "org.scalatest.enablers.Definition$",
       "org.scalactic.TripleEqualsSupport$Equalizer",
       "org.scalatest.FunSpecLike",
       "org.scalatest.matchers.MatcherFactory3$$anon$27",
       "org.scalatest.matchers.MatcherFactory3$$anon$26",
       "org.scalatest.matchers.MatcherFactory3$$anon$25",
       "org.scalatest.Suites$",
       "org.scalatest.matchers.MatcherFactory3$$anon$24",
       "org.scalatest.matchers.MatcherFactory3$$anon$23",
       "org.scalactic.package$",
       "org.scalatest.matchers.MatcherFactory3$$anon$22",
       "org.scalactic.ConversionCheckedTripleEquals$class",
       "org.scalatest.matchers.MatcherFactory3$$anon$21",
       "org.scalatest.matchers.MatcherFactory3$$anon$20",
       "org.scalatest.matchers.MatcherFactory1$AndContainWord",
       "org.scalatest.matchers.MatcherFactory4$$anon$30",
       "org.scalatest.tools.Framework$ScalaTestRunner$$anonfun$filterWildcard$1$$anonfun$apply$15",
       "org.scalatest.matchers.MatcherFactory6$$anon$19$$anon$7",
       "org.scalatest.tools.SbtCommandParser$$anonfun$cmd$1$$anonfun$apply$1",
       "org.scalatest.FailureOf$class",
       "org.scalatest.events.Event$EventXmlHelper$$anonfun$throwableOption$1",
       "org.scalatest.MustMatchers$ValueWord",
       "org.scalatest.fixture.PropSpecLike$$anonfun$runTests$1",
       "org.scalatest.words.ContainWord$$anon$5$$anonfun$2",
       "org.scalatest.concurrent.Conductor$TestStarted$",
       "org.scalatest.concurrent.ScalaFutures$class",
       "org.scalatest.CompileMacro$$typecreator8$1",
       "org.scalactic.NormMethods",
       "org.scalatest.WordSpecLike",
       "org.scalatest.Matchers$AWord",
       "org.scalactic.TrySugar",
       "org.scalatest.tools.ReStoppingState",
       "org.scalatest.mock.JMockCycle",
       "org.scalatest.Args$",
       "org.scalatest.selenium.WebBrowser$delete$",
       "org.scalatest.tagobjects.InternetExplorerBrowser",
       "org.scalatest.tools.ScalaTestFramework$ScalaTestRunner$SbtReporter$$anon$3",
       "org.scalatest.selenium.WebBrowser$click$",
       "org.scalatest.DocSpecLike$$anonfun$runNestedSuites$1",
       "org.scalatest.Filter$$anonfun$10",
       "org.scalatest.selenium.WebBrowser$CssSelectorQuery",
       "org.scalatest.selenium.Firefox$",
       "org.scalatest.AppendedClues$class",
       "org.scalatest.MustMatchers$ResultOfEndWithWordForString",
       "org.scalatest.matchers.MatcherFactory1$OrContainWord",
       "org.scalatest.prop.TableFor19$$anonfun$apply$92$$anonfun$apply$93",
       "org.scalatest.fixture.FunSpecLike",
       "org.scalatest.SpecLike$$anonfun$run$1",
       "org.scalatest.matchers.MatcherFactory4$$anon$17",
       "org.scalatest.matchers.MatcherFactory4$$anon$18",
       "org.scalatest.tools.PresentTestPending",
       "org.scalatest.matchers.MatcherFactory4$$anon$19",
       "org.scalatest.words.WritableWord",
       "org.scalatest.concurrent.Futures$FutureConcept$class",
       "org.scalatest.matchers.MatcherFactory5$OrNotWord$$anon$14",
       "org.scalatest.prop.TableFor7$$anon$7$$anonfun$apply$35",
       "org.scalatest.matchers.MatcherFactory4$$anon$20",
       "org.scalatest.prop.TableFor7$$anon$7$$anonfun$apply$34",
       "org.scalatest.MustMatchers$ResultOfBeWordForCollectedAny$$anonfun$a$2",
       "org.scalatest.matchers.MatcherFactory4$$anon$21",
       "org.scalatest.MustMatchers$ResultOfBeWordForCollectedAny$$anonfun$a$1",
       "org.scalatest.matchers.MatcherFactory4$$anon$22",
       "org.scalatest.matchers.MatcherFactory4$$anon$23",
       "org.scalatest.matchers.MatcherFactory4$$anon$24",
       "org.scalatest.matchers.MatcherFactory4$$anon$25",
       "org.scalatest.matchers.MatcherFactory4$$anon$26",
       "org.scalatest.matchers.MatcherFactory4$$anon$27",
       "org.scalatest.tools.Runner$$anonfun$46$$anonfun$apply$6",
       "org.scalatest.matchers.MatcherFactory4$$anon$28",
       "org.scalatest.tools.JUnitXmlReporter$Testcase$",
       "org.scalatest.matchers.MatcherFactory4$$anon$29",
       "org.scalatest.prop.Checkers$",
       "org.scalatest.words.HaveWord$$anon$7",
       "org.scalatest.words.HaveWord$$anon$6",
       "org.scalatest.words.HaveWord$$anon$5",
       "org.scalatest.words.HaveWord$$anon$4",
       "org.scalactic.Bad",
       "org.scalatest.prop.TableFor14$$anonfun$apply$67",
       "org.scalatest.prop.TableFor14$$anonfun$apply$66",
       "org.scalatest.Matchers$ResultOfBeWordForCollectedArray$$anon$4",
       "org.scalatest.matchers.NegatedFailureMessage",
       "org.scalatest.CompileMacro$$typecreator30$1",
       "org.scalatest.matchers.MatcherFactory4$$anon$27$$anon$11",
       "org.scalatest.mock.EasyMockSugar$MockObjects$",
       "org.scalatest.Matchers$ResultOfHaveWordForExtent",
       "org.scalatest.fixture.Suite$OneArgTest$",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$have$3$$anonfun$1",
       "org.scalatest.matchers.MatcherFactory2$$anon$34$$anon$14",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$contain$8",
       "org.scalatest.tools.FriendlyParamsTranslator$$anonfun$2",
       "org.scalatest.tools.FriendlyParamsTranslator$$anonfun$1",
       "org.scalatest.prop.Configuration$MaxDiscarded$",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$have$3$$anonfun$2",
       "org.scalatest.tools.RunnerJFrame$$anonfun$5",
       "org.scalatest.tools.RunnerJFrame$$anonfun$4",
       "org.scalatest.prop.Tables$class",
       "org.scalatest.tools.RunnerJFrame$$anonfun$3",
       "org.scalatest.words.MatcherWords",
       "org.scalatest.concurrent.PatienceConfiguration$Timeout$",
       "org.scalatest.EitherValues$",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$contain$1",
       "org.scalatest.matchers.MatcherFactory3$OrContainWord",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$contain$3",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$contain$2",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$contain$5",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$contain$4",
       "org.scalatest.Suite$$anonfun$runTests$2",
       "org.scalatest.tools.Durations$Suite$",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$contain$7",
       "org.scalatest.Suite$$anonfun$runTests$1",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$contain$6",
       "org.scalatest.matchers.MatcherFactory4Macro",
       "org.scalactic.BasicPrettifier$$anonfun$org$scalactic$BasicPrettifier$$prettifyArrays$2",
       "org.scalactic.BasicPrettifier$$anonfun$org$scalactic$BasicPrettifier$$prettifyArrays$1",
       "org.scalatest.tools.DashboardReporter$$anonfun$genRecentlySlower$1$1$$anonfun$apply$2",
       "org.scalatest.FlatSpecLike$$anonfun$runTests$1",
       "org.scalatest.events.TestFailed$",
       "org.scalatest.DispatchReporter$$anon$1$$anonfun$1",
       "org.scalatest.matchers.MatcherFactory5$$anon$22$$anon$8",
       "org.scalatest.FreeSpecLike$FreeSpecStringWrapper",
       "org.scalatest.tools.RunnerJFrame$",
       "org.scalatest.concurrent.PimpedThreadGroup$$anonfun$filter$1",
       "org.scalatest.concurrent.Timeouts",
       "org.scalactic.DefaultEquality",
       "org.scalatest.fixture.PropSpecLike",
       "org.scalatest.matchers.MatcherFactory7$OrIncludeWord",
       "org.scalatest.prop.TableFor12$$anon$12",
       "org.scalatest.tools.HtmlReporter$$anonfun$org$scalatest$tools$HtmlReporter$$testWithDetails$3",
       "org.scalatest.tools.HtmlReporter$$anonfun$org$scalatest$tools$HtmlReporter$$testWithDetails$2",
       "org.scalatest.words.StringVerbBlockRegistration",
       "org.scalatest.tools.HtmlReporter$$anonfun$org$scalatest$tools$HtmlReporter$$testWithDetails$1",
       "org.scalatest.tools.PresentTestSucceeded$",
       "org.scalatest.tools.ScalaTestAntTask",
       "org.scalatest.selenium.Page",
       "org.scalatest.prop.TableFor7$$anonfun$apply$32",
       "org.scalatest.mock.JMockExpectations",
       "org.scalatest.prop.TableFor7$$anonfun$apply$31",
       "org.scalatest.matchers.MatcherFactory3$OrStartWithWord",
       "org.scalatest.words.ContainWord$$anon$24$$anon$11$$anonfun$toString$7",
       "org.scalactic.Requirements$RequirementsHelper$$anonfun$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$11",
       "org.scalactic.Requirements$RequirementsHelper$$anonfun$2",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$10",
       "org.scalactic.MapEqualityConstraints$class",
       "org.scalatest.tools.XmlReporterConfiguration$",
       "org.scalatest.testng.TestNGSuite",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$13",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$12",
       "org.scalatest.selenium.WebBrowser$UrlField$$anonfun$15",
       "org.scalatest.tools.Durations$Test",
       "org.scalatest.Failed$",
       "org.scalatest.FlatSpecLike$class",
       "org.scalatest.matchers.MatcherFactory5$OrIncludeWord",
       "org.scalatest.tools.XmlReporter$$anonfun$2",
       "org.scalatest.tools.XmlReporter$$anonfun$3",
       "org.scalatest.tools.XmlReporter$$anonfun$1",
       "org.scalatest.concurrent.Conductors",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$9",
       "org.scalatest.matchers.MatchSucceeded$",
       "org.scalatest.Succeeded$",
       "org.scalatest.tools.StandardErrReporterConfiguration",
       "org.scalatest.concurrent.Futures$FutureConcept$$anon$1",
       "org.scalatest.tagobjects.Slow",
       "org.scalatest.tools.PresentFullStackTraces$",
       "org.scalatest.matchers.MatcherFactory7$AndBeWord",
       "org.scalatest.SuperEngine$NoteLeaf",
       "org.scalactic.OptionSugar$",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$4",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$3",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$2",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$1",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$8",
       "org.scalatest.Matchers$ResultOfEndWithWordForString",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$7",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$6",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$5",
       "org.scalatest.matchers.MatcherFactory9$$anon$5$$anon$1",
       "org.scalatest.matchers.TypeMatcherMacro",
       "org.scalatest.fixture.FeatureSpec",
       "org.scalatest.tools.PresentRunCompleted$",
       "org.scalactic.Explicitly$class",
       "org.scalatest.RandomTestOrder$$anonfun$run$1",
       "org.scalatest.Tag$",
       "org.scalatest.tools.Framework$SbtReporter$$anonfun$apply$1",
       "org.scalatest.StreamlinedXmlNormMethods$class",
       "org.scalatest.tools.Framework$SbtReporter$$anonfun$apply$3",
       "org.scalatest.tools.NameValuePair",
       "org.scalatest.SuiteHelpers",
       "org.scalatest.tools.Framework$SbtReporter$$anonfun$apply$2",
       "org.scalatest.exceptions.StackDepthException$$anonfun$toExceptionFunction$1",
       "org.scalactic.ComposedNormalizingEquality",
       "org.scalatest.matchers.MatcherFactory1$$anon$38$$anon$16",
       "org.scalactic.SnapshotSeq$",
       "org.scalatest.matchers.MatcherFactory8Macro",
       "org.scalatest.Shell$class",
       "org.scalatest.concurrent.JavaFutures$$anon$2$$anonfun$futureValue$2",
       "org.scalatest.tools.HtmlReporter$",
       "org.scalatest.concurrent.JavaFutures$$anon$2$$anonfun$futureValue$1",
       "org.scalatest.StreamlinedXml$class",
       "org.scalatest.CompileMacro$$treecreator2$1",
       "org.scalactic.Tolerance$",
       "org.scalatest.matchers.MatcherFactory1$OrNotWord$$anon$22",
       "org.scalatest.BeforeAndAfterAll",
       "org.scalatest.CompileMacro$$treecreator12$1",
       "org.scalatest.BeforeAndAfter",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$34$$anonfun$apply$10",
       "org.scalactic.Uniformity$$anon$1",
       "org.scalatest.MustMatchers$StringMustWrapper",
       "org.scalactic.Uniformity$$anon$2",
       "org.scalatest.matchers.MatcherFactory1Macro",
       "org.scalatest.matchers.MatcherFactory1$OrIncludeWord",
       "org.scalatest.exceptions.TableDrivenPropertyCheckFailedException",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$key$1",
       "org.scalatest.matchers.MatcherFactory3$$anon$24$$anon$6",
       "org.scalatest.concurrent.ThreadInterruptor$",
       "org.scalatest.fixture.WordSpecLike$$anon$1",
       "org.scalatest.tools.Framework$SbtReporter$$anonfun$apply$5",
       "org.scalatest.tools.Framework$SbtReporter$$anonfun$apply$4",
       "org.scalatest.Assertions$NormalResult",
       "org.scalatest.tools.FilterReporter",
       "org.scalatest.Matchers$$anonfun$doCollected$1",
       "org.scalatest.Matchers$$anonfun$doCollected$2",
       "org.scalatest.Matchers$$anonfun$doCollected$3",
       "org.scalatest.Matchers$$anonfun$doCollected$4",
       "org.scalatest.SuperEngine$RegistrationDocumenter",
       "org.scalatest.Matchers$$anonfun$doCollected$5",
       "org.scalactic.UnquotedString$",
       "org.scalatest.Matchers$$anonfun$doCollected$6",
       "org.scalatest.Matchers$$anonfun$doCollected$7",
       "org.scalatest.SuperEngine$NoteLeaf$",
       "org.scalatest.concurrent.PatienceConfiguration",
       "org.scalatest.matchers.MatcherFactory8$OrStartWithWord",
       "org.scalatest.prop.TableFor7$$anonfun$apply$32$$anonfun$apply$33",
       "org.scalatest.matchers.MatcherFactory4$OrHaveWord",
       "org.scalatest.fixture.NoArg",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$9$$anonfun$apply$6",
       "org.scalatest.prop.TableFor18$$anon$18$$anonfun$apply$90",
       "org.scalatest.CompileMacro$$typecreator12$1",
       "org.scalatest.events.NoteProvided$",
       "org.scalatest.words.ResultOfContainWord$$anonfun$oneOf$1",
       "org.scalatest.events.RunStarting$",
       "org.scalatest.tools.ScalaTestFramework$ScalaTestRunner$$anonfun$filterWildcard$1",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$34$$anonfun$apply$mcV$sp$7",
       "org.scalactic.LowPriorityTypeCheckedConstraint$class",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$fullyMatch$1",
       "org.scalatest.words.ContainWord$$anon$20$$anon$7$$anonfun$apply$2",
       "org.scalatest.selenium.WebBrowser$$anonfun$enter$1",
       "org.scalatest.prop.TableFor21$$anonfun$newBuilder$21",
       "org.scalatest.tools.RunnerGUIState",
       "org.scalatest.tools.SbtCommandParser$$anonfun$cmd$1",
       "org.scalatest.tags.CPU",
       "org.scalatest.concurrent.Conductors$Conductor",
       "org.scalatest.selenium.WebBrowser$MonthField",
       "org.scalatest.exceptions.TimeoutField",
       "org.scalatest.MustMatchers$ResultOfStartWithWordForCollectedString",
       "org.scalatest.fixture.SpecLike$$anon$1",
       "org.scalatest.matchers.BePropertyMatcher$$anon$1",
       "org.scalatest.matchers.BePropertyMatcher$$anon$2",
       "org.scalatest.words.StartWithWord$$anon$1",
       "org.scalatest.words.CanVerb$$anon$1",
       "org.scalatest.words.StartWithWord$$anon$2",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$2",
       "org.scalatest.words.StartWithWord$$anon$3",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$6",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$5",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$4",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$3",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$apply$12",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$9",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$apply$11",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$8",
       "org.scalatest.prop.Configuration$$anon$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$7",
       "org.scalatest.exceptions.GeneratorDrivenPropertyCheckFailedException$$anonfun$1",
       "org.scalatest.prop.TableFor15$$anon$15$$anonfun$apply$74",
       "org.scalatest.words.BeWord$$anon$10",
       "org.scalatest.prop.TableFor15$$anon$15$$anonfun$apply$75",
       "org.scalatest.time.Seconds",
       "org.scalatest.words.BeWord$$anon$12",
       "org.scalatest.words.BeWord$$anon$11",
       "org.scalatest.words.BeWord$$anon$14",
       "org.scalatest.InspectorsHelper$ForResult",
       "org.scalatest.exceptions.StackDepth$class",
       "org.scalatest.words.BeWord$$anon$13",
       "org.scalatest.words.BeWord$$anon$16",
       "org.scalatest.words.BeWord$$anon$15",
       "org.scalatest.words.BeWord$$anon$18",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$theSameElementsInOrderAs$1",
       "org.scalatest.words.BeWord$$anon$17",
       "org.scalatest.tagobjects.Slow$",
       "org.scalatest.words.BeWord$$anon$19",
       "org.scalatest.CompileMacro",
       "org.scalatest.concurrent.IntegrationPatience$class",
       "org.scalatest.tools.PresentSuiteStarting",
       "org.scalatest.fixture.FlatSpecLike$TheyWord",
       "org.scalatest.tools.DashboardReporter$TestRecord$$anonfun$formatException$1",
       "org.scalatest.prop.PropertyChecks$",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustNot$1",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustNot$2",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustNot$3",
       "org.scalatest.tools.RunningState$",
       "org.scalatest.words.ResultOfRegexWordApplication",
       "org.scalatest.selenium.WebBrowser$RangeField",
       "org.scalatest.matchers.MatcherFactory1$$anon$25$$anon$3",
       "org.scalatest.matchers.MatcherFactory8$AndContainWord",
       "org.scalatest.prop.TableFor18$$anon$18$$anonfun$apply$89",
       "org.scalatest.tools.Durations$Test$",
       "org.scalatest.tools.Runner$$anonfun$parseCompoundArgIntoList$1",
       "org.scalactic.TolerantNumerics$",
       "org.scalatest.tools.FilterSuiteStarting",
       "org.scalatest.FlatSpecLike$$anonfun$run$1",
       "org.scalatest.SuperEngine$DescriptionBranch",
       "org.scalatest.words.CanVerb$StringCanWrapperForVerb",
       "org.scalatest.tools.Runner$$anonfun$parseCompoundArgIntoList$2",
       "org.scalatest.SlowpokeDetector$$anonfun$testStarting$1",
       "org.scalactic.Chain$$anonfun$permutations$1",
       "org.scalatest.path.FunSpec",
       "org.scalatest.time.Second$",
       "org.scalatest.matchers.MatcherFactory2$$anon$23$$anon$3",
       "org.scalatest.MessageRecorder$",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$discoverTests$1$$anonfun$5$$anonfun$apply$1",
       "org.scalatest.WordSpecLike$AfterWord",
       "org.scalatest.words.BeWord$$anon$30",
       "org.scalatest.words.BeWord$$anon$31",
       "org.scalatest.fixture.ConfigMapFixture$class",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$39$$anonfun$apply$12",
       "org.scalatest.enablers.Containing$$anon$5$$anonfun$contains$5",
       "org.scalatest.junit.JUnit3Suite$$anon$1",
       "org.scalatest.WordSpecLike$$anonfun$runTest$1",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$14$$anonfun$apply$mcV$sp$3",
       "org.scalatest.words.ResultOfAtMostOneOfApplication$$anonfun$toString$1",
       "org.scalatest.matchers.MatcherFactory7$AndStartWithWord",
       "org.scalatest.selenium.HtmlUnit",
       "org.scalatest.RandomTestOrder$TestSpecificReporter$1",
       "org.scalatest.time.SpanSugar$",
       "org.scalatest.matchers.MatcherFactory2$AndIncludeWord",
       "org.scalatest.Notifier",
       "org.scalatest.events.Location",
       "org.scalatest.tools.Runner$$anonfun$parseSuiteArgsIntoNameStrings$1",
       "org.scalatest.words.BeWord$$anon$21",
       "org.scalatest.tools.RunnerJFrame$RunnerThread$$anonfun$run$1",
       "org.scalatest.Notifying",
       "org.scalatest.ConcurrentNotifier$",
       "org.scalatest.concurrent.Conductors$Conductor$TestStarted$",
       "org.scalatest.words.BeWord$$anon$22",
       "org.scalatest.words.BeWord$$anon$27",
       "org.scalatest.words.BeWord$$anon$29",
       "org.scalatest.selenium.WebBrowser$delete$$anonfun$deleteCookie$1",
       "org.scalatest.words.BeWord$$anon$28",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$noneOf$1",
       "org.scalactic.TripleEqualsSupport$TripleEqualsInvocationOnSpread",
       "org.scalatest.Resources$",
       "org.scalatest.tools.MemoryReporterConfiguration$",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$8$$anonfun$apply$5",
       "org.scalatest.path.FreeSpec",
       "org.scalatest.fixture.SpecLike$MethodNameEncodedOrdering$2$",
       "org.scalatest.words.ResultOfTheSameElementsInOrderAsApplication",
       "org.scalatest.tools.Framework$ScalaTestRunner$$anonfun$tasks$2",
       "org.scalatest.words.NotWord$$anon$58$$anon$40",
       "org.scalatest.tools.Framework$ScalaTestRunner$$anonfun$tasks$3",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$apply$9$$anonfun$apply$10",
       "org.scalatest.prop.TableFor20$",
       "org.scalatest.tools.Framework$ScalaTestRunner$$anonfun$tasks$1",
       "org.scalatest.matchers.MustMatchers",
       "org.scalatest.fixture.WordSpecLike$$anonfun$2$$anonfun$1",
       "org.scalatest.FlatSpecLike$ItVerbStringTaggedAs$$anonfun$is$1",
       "org.scalatest.selenium.WebBrowser$PasswordField$$anonfun$3",
       "org.scalatest.prop.TableFor21$",
       "org.scalatest.exceptions.ModifiableMessage",
       "org.scalatest.prop.TableFor22$",
       "org.scalatest.matchers.HavePropertyMatcher$$anon$1",
       "org.scalatest.fixture.FixtureNodeFamily$Node",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$60$$anonfun$apply$18",
       "org.scalatest.matchers.HavePropertyMatcher$$anon$2",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$10$$anonfun$apply$7",
       "org.scalatest.tools.PresentSuiteCompleted",
       "org.scalatest.prop.Configuration$class",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$atMostOneOf$1$$anonfun$apply$16",
       "org.scalatest.events.RunStopped$",
       "org.scalatest.matchers.Matcher$OrIncludeWord",
       "org.scalatest.CompileMacro$$treecreator4$1",
       "org.scalatest.CompileMacro$$treecreator10$1",
       "org.scalatest.tools.DashboardReporter$$anonfun$genRegressions$1$1$$anonfun$apply$1",
       "org.scalatest.tools.SuiteResultHolder",
       "org.scalatest.enablers.Containing",
       "org.scalatest.matchers.MatcherFactory1$OrBeWord",
       "org.scalactic.StringNormalizations$class",
       "org.scalatest.PrivateMethodTester$Invoker",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter$$anonfun$apply$15$$anonfun$apply$mcV$sp$4",
       "org.scalatest.matchers.MatchPatternMacro$$anonfun$checkCaseDefinitions$1",
       "org.scalatest.prop.package$",
       "org.scalatest.events.ScopePending",
       "org.scalatest.concurrent.AsyncAssertions$Dismissals$",
       "org.scalactic.OptionSugar",
       "org.scalactic.SnapshotSeq$$anonfun$$minus$1",
       "org.scalatest.tools.XmlReporter$$anonfun$genPropertiesXml$1",
       "org.scalatest.prop.TableFor4$$anon$4$$anonfun$apply$19",
       "org.scalatest.matchers.MatcherFactory1$OrStartWithWord",
       "org.scalactic.package",
       "org.scalatest.Slowpoke",
       "org.scalatest.StepwiseNestedSuiteExecution$$anonfun$runNestedSuites$1",
       "org.scalatest.Pending",
       "org.scalatest.prop.TableFor20$$anonfun$apply$97$$anonfun$apply$98",
       "org.scalatest.FlatSpecLike$$anon$1",
       "org.scalatest.prop.Configuration$$anonfun$getParams$1",
       "org.scalactic.Explicitly",
       "org.scalatest.FlatSpecLike$InAndIgnoreMethods",
       "org.scalatest.fixture.UnitFixture$class",
       "org.scalatest.events.TestIgnored",
       "org.scalatest.tools.RunnerJFrame$$anon$4$$anonfun$lineSpans$1$1",
       "org.scalatest.junit.AssertionsForJUnit$class",
       "org.scalatest.prop.TableFor19$$anonfun$apply$92",
       "org.scalatest.matchers.MatcherFactory8$$anon$11$$anon$3",
       "org.scalatest.prop.TableFor19$$anonfun$apply$91",
       "org.scalatest.tools.SlowpokeConfig$",
       "org.scalatest.tools.SuiteSortingReporter$Slot$",
       "org.scalactic.Catcher",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$only$1$$anonfun$apply$12",
       "org.scalatest.tags.Slow",
       "org.scalatest.enablers.Aggregating$$anonfun$countElements$1$3$$anonfun$apply$2",
       "org.scalatest.words.RegexWithGroups",
       "org.scalatest.FeatureSpecLike$$anonfun$runTest$1",
       "org.scalatest.selenium.WebBrowser$TagNameQuery",
       "org.scalatest.matchers.MatcherFactory7$$anon$13$$anon$3",
       "org.scalatest.enablers.KeyMapping$$anon$2$$anonfun$containsKey$3",
       "org.scalatest.WrapWith",
       "org.scalatest.matchers.BePropertyMatcher$class",
       "org.scalatest.tools.StringReporter$$anonfun$infoProvidedFragments$1",
       "org.scalatest.fixture.FixtureNodeFamily$InfoLeaf",
       "org.scalatest.events.SeeStackDepthException",
       "org.scalatest.tools.Durations$Duration$",
       "org.scalatest.Suites$$anonfun$1",
       "org.scalatest.time.Millis",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$extractClassNames$1",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$extractClassNames$2",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$1",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$2",
       "org.scalatest.Status",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$3",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$4",
       "org.scalatest.prop.TableFor5$$anon$5",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$5",
       "org.scalatest.Entry",
       "org.scalatest.Filter$$anonfun$mergeTestTags$1$$anonfun$apply$1",
       "org.scalatest.Filter$$anonfun$mergeTestTags$1$$anonfun$apply$2",
       "org.scalactic.TrySugar$Tryizer",
       "org.scalatest.words.ResultOfATypeInvocation",
       "org.scalatest.prop.TableFor14$$anon$14",
       "org.scalatest.MessageRecordingDocumenter$",
       "org.scalatest.Assertions$AssertionsHelper",
       "org.scalatest.ThreadAwareness",
       "org.scalatest.MatchersHelper$$anonfun$3",
       "org.scalatest.MatchersHelper$$anonfun$2",
       "org.scalatest.MatchersHelper$$anonfun$1",
       "org.scalatest.junit.JUnitWrapperSuite",
       "org.scalatest.MatchersHelper$$anonfun$5",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$only$1$$anonfun$apply$12",
       "org.scalatest.tools.Framework$ScalaTestTask",
       "org.scalatest.MatchersHelper$$anonfun$4",
       "org.scalatest.selenium.WebBrowser$LinkTextQuery",
       "org.scalatest.words.HaveWord$$anon$5$$anon$1",
       "org.scalactic.TrySugar$NothingSuccessTryizer",
       "org.scalatest.DispatchReporter$Dispose$",
       "org.scalatest.tools.AnsiCyan$",
       "org.scalatest.prop.TableFor1$$anonfun$newBuilder$1",
       "org.scalatest.tags.SafariBrowser",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$11",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$10",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$13",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$12",
       "org.scalatest.NonImplicitAssertions$class",
       "org.scalatest.matchers.MatcherFactory4$$anon$28$$anon$12",
       "org.scalatest.MessageRecordingInformer$",
       "org.scalatest.MustMatchers$ResultOfHaveWordForCollectedExtent$$anonfun$size$1",
       "org.scalatest.fixture.WordSpecLike$$anonfun$run$1",
       "org.scalatest.time.Span$$anonfun$org$scalatest$time$Span$$totalNanosForLongLength$14",
       "org.scalatest.junit.JUnit3Suite$$anonfun$1",
       "org.scalatest.enablers.Emptiness",
       "org.scalatest.concurrent.ConductorMultiFixture",
       "org.scalatest.junit.JUnit3Suite$$anonfun$2",
       "org.scalatest.UnquotedString",
       "org.scalatest.WordSpecLike$ResultOfTaggedAsInvocationOnString$$anonfun$is$1",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$45$$anonfun$apply$14",
       "org.scalatest.prop.TableFor4$$anon$4$$anonfun$apply$20",
       "org.scalactic.Bool",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$discoverTests$1$$anonfun$5",
       "org.scalatest.selenium.WebBrowser$UrlField",
       "org.scalatest.matchers.MatcherFactory4$$anon$19$$anon$3",
       "org.scalatest.concurrent.PimpedThreadGroup$$anonfun$getThreads$1$1",
       "org.scalatest.enablers.Sortable$$anon$3$$anonfun$isSorted$3",
       "org.scalatest.concurrent.PimpedThreadGroup$$anonfun$getThreads$1$2",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$6",
       "org.scalatest.exceptions.PayloadField",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$7",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$8",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustBe$9",
       "org.scalatest.matchers.MatcherFactory1$AndFullyMatchWord",
       "org.scalatest.time.Hour",
       "org.scalatest.tools.JUnitXmlReporter$Testcase",
       "org.scalatest.SuperEngine$Branch",
       "org.scalatest.matchers.MatcherFactory8$$anon$12$$anon$4",
       "org.scalatest.ConcurrentNotifier",
       "org.scalactic.Every$$anonfun$transpose$1",
       "org.scalatest.concurrent.PimpedReadWriteLock",
       "org.scalatest.matchers.MatcherFactory8$AndNotWord$$anon$7",
       "org.scalatest.words.ContainWord$$anon$26$$anon$13$$anonfun$toString$11",
       "org.scalatest.fixture.TestRegistration",
       "org.scalatest.tools.EventToPresent$",
       "org.scalatest.CompositeStatus",
       "org.scalatest.enablers.Sortable$$anon$2$$anonfun$isSorted$2",
       "org.scalatest.concurrent.Futures$class",
       "org.scalatest.selenium.WebBrowser$$anonfun$colorField$1",
       "org.scalatest.fixture.FlatSpecLike$ItVerbStringTaggedAs",
       "org.scalatest.fixture.FreeSpecLike$class",
       "org.scalatest.tools.RunnerJFrame$ResettableStopper",
       "org.scalatest.WordSpecLike$WordSpecStringWrapper$$anonfun$is$2",
       "org.scalatest.events.SeeStackDepthException$",
       "org.scalatest.tools.CustomReporterConfiguration",
       "org.scalactic.Every$$anonfun$sliding$2",
       "org.scalactic.Every$$anonfun$sliding$1",
       "org.scalatest.Rerunner",
       "org.scalatest.selenium.WebBrowser$MultiSel",
       "org.scalactic.NumericEqualityConstraints$",
       "org.scalatest.matchers.MatcherFactory5$$anon$18$$anon$4",
       "org.scalatest.ParallelTestExecution$$anonfun$runTest$1",
       "org.scalatest.matchers.FailureMessage",
       "org.scalactic.TraversableEqualityConstraints",
       "org.scalatest.ParallelTestExecution$$anonfun$runTest$2",
       "org.scalatest.concurrent.Conductor$ClockThread$$anonfun$run$1",
       "org.scalactic.Explicitly$DecidedByEquality",
       "org.scalatest.selenium.WebBrowser$$anonfun$emailField$1",
       "org.scalatest.SpecLike$$anonfun$runTests$1",
       "org.scalatest.selenium.WebBrowser$SwitchTarget",
       "org.scalatest.tools.PresentReminderWithShortStackTraces",
       "org.scalactic.Normalization",
       "org.scalatest.matchers.MatcherFactory2$OrHaveWord",
       "org.scalatest.MustMatchers$ResultOfEndWithWordForCollectedString",
       "org.scalatest.tools.SuiteConfig$",
       "org.scalatest.Doc$Bundle$",
       "org.scalatest.selenium.WebBrowser$SingleSel$$anonfun$23",
       "org.scalatest.tools.StringReporter$$anonfun$apply$1",
       "org.scalatest.selenium.WebBrowser$SingleSel$$anonfun$22",
       "org.scalatest.prop.TableFor14$$anonfun$apply$67$$anonfun$apply$68",
       "org.scalatest.matchers.MatcherFactory7$AndFullyMatchWord",
       "org.scalatest.Matchers$ResultOfEvaluatingApplication",
       "org.scalatest.FlatSpecLike$IgnoreVerbString",
       "org.scalactic.Prettifier$$anon$1$$anonfun$apply$3",
       "org.scalatest.words.NotWord$$anon$62$$anon$44$$anonfun$apply$8",
       "org.scalactic.Prettifier$$anon$1$$anonfun$apply$4",
       "org.scalatest.SpecLike$$anonfun$runTest$1",
       "org.scalactic.Prettifier$$anon$1$$anonfun$apply$1",
       "org.scalatest.prop.Configuration$PropertyCheckConfig$$anonfun$6",
       "org.scalactic.Prettifier$$anon$1$$anonfun$apply$2",
       "org.scalatest.prop.Configuration$PropertyCheckConfig$$anonfun$5",
       "org.scalatest.words.IncludeWord$$anon$1",
       "org.scalatest.WordSpecLike$$anonfun$run$1",
       "org.scalatest.words.IncludeWord$$anon$2",
       "org.scalatest.junit.ShouldMatchersForJUnit$",
       "org.scalatest.concurrent.PatienceConfiguration$Interval",
       "org.scalatest.selenium.WebBrowser$$anonfun$radioButton$1",
       "org.scalatest.words.BehaveWord",
       "org.scalatest.words.IncludeWord$$anon$3",
       "org.scalactic.Prettifier$$anon$1$$anonfun$apply$7",
       "org.scalatest.prop.Configuration$PropertyCheckConfig$$anonfun$4",
       "org.scalatest.prop.Configuration$PropertyCheckConfig$$anonfun$3",
       "org.scalactic.Prettifier$$anon$1$$anonfun$apply$5",
       "org.scalatest.prop.Configuration$PropertyCheckConfig$$anonfun$2",
       "org.scalactic.Prettifier$$anon$1$$anonfun$apply$6",
       "org.scalatest.prop.Configuration$PropertyCheckConfig$$anonfun$1",
       "org.scalatest.tools.TestSortingReporter$Slot$",
       "org.scalatest.tools.Framework$ScalaTestRunner$Skeleton$1$React",
       "org.scalatest.matchers.MatcherFactory1$$anon$24$$anon$2",
       "org.scalatest.OptionValues",
       "org.scalatest.words.ResultOfOneOfApplication$$anonfun$toString$1",
       "org.scalatest.tools.XmlReporter$Testcase",
       "org.scalatest.Payloads$$anonfun$withPayload$2",
       "org.scalatest.Payloads$$anonfun$withPayload$3",
       "org.scalatest.matchers.MatchResult$",
       "org.scalatest.FailureOf",
       "org.scalatest.Matchers$RegexWord",
       "org.scalactic.Bool$",
       "org.scalatest.FreeSpecLike$ResultOfTaggedAsInvocationOnString$$anonfun$is$1",
       "org.scalatest.words.NotWord$$anon$48$$anonfun$2",
       "org.scalatest.DiagrammedAssertions",
       "org.scalatest.time.Day",
       "org.scalatest.words.CompileWord",
       "org.scalatest.matchers.MatchPatternHelper",
       "org.scalatest.tools.PrintReporter$",
       "org.scalatest.tools.RunnerJFrame$GraphicRunReporter",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$discoverTests$1$$anonfun$apply$2",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$discoverTests$1$$anonfun$apply$3",
       "org.scalatest.MustMatchers$BetweenCollected",
       "org.scalatest.selenium.WebBrowser$$anonfun$weekField$1",
       "org.scalatest.matchers.MatcherFactory1$$anon$39$$anon$17",
       "org.scalatest.matchers.MatcherFactory3$$anon$30$$anon$12",
       "org.scalatest.prop.Configuration$MaxSize$",
       "org.scalatest.tools.StandardErrReporterConfiguration$",
       "org.scalatest.Payloads$$anonfun$withPayload$1",
       "org.scalatest.selenium.WebBrowser$WrappedCookie",
       "org.scalatest.tools.DashboardReporter$SlowRecord$3",
       "org.scalatest.mock.JMockCycleFixture$class",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$theSameElementsInOrderAs$1",
       "org.scalatest.concurrent.ScalaFutures$$anon$1",
       "org.scalatest.words.ResultOfAnWordToBePropertyMatcherApplication",
       "org.scalatest.Stepwise",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$javaTaskRunner$2",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$javaTaskRunner$1",
       "org.scalatest.StreamlinedXml$",
       "org.scalatest.fixture.FlatSpecLike$IgnoreWord",
       "org.scalatest.selenium.WebBrowser$ValueElement",
       "org.scalatest.tools.ReporterFactory",
       "org.scalactic.NumericEqualityConstraints$class",
       "org.scalatest.MustMatchers$ResultOfHaveWordForExtent",
       "org.scalactic.PrettyMethods$PrettifierConfig$",
       "org.scalatest.words.ResultOfTaggedAsInvocation",
       "org.scalatest.prop.TableFor8$$anonfun$apply$37$$anonfun$apply$38",
       "org.scalatest.tools.StoppingState",
       "org.scalatest.fixture.Suite$class",
       "org.scalatest.path.FreeSpecLike$ResultOfTaggedAsInvocationOnString$$anonfun$is$1",
       "org.scalatest.words.ResultOfNotWordForAny",
       "org.scalatest.PrivateMethodTester$Invoker$$anonfun$1",
       "org.scalatest.words.ResultOfNotExist",
       "org.scalactic.LowPriorityTypeCheckedConstraint",
       "org.scalatest.PrivateMethodTester$Invoker$$anonfun$2",
       "org.scalatest.PrivateMethodTester$Invoker$$anonfun$3",
       "org.scalatest.PrivateMethodTester$Invoker$$anonfun$4",
       "org.scalatest.enablers.Aggregating$ZipNoMatch$2$",
       "org.scalatest.PrivateMethodTester$Invoker$$anonfun$5",
       "org.scalatest.PrivateMethodTester$Invoker$$anonfun$6",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$56$$anonfun$apply$17",
       "org.scalatest.tools.HtmlReporter",
       "org.scalatest.events.DiscoveryCompleted$",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addTestsfileArgs$1",
       "org.scalatest.Matchers$ResultOfEndWithWordForCollectedString",
       "org.scalatest.matchers.MatcherFactory1$$anon$29$$anon$7",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$7",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$8",
       "org.scalatest.OptionValues$Valuable",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$9",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$3",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$4",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$5",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$6",
       "org.scalatest.Specs$",
       "org.scalatest.words.NotWord$$anon$49$$anon$2",
       "org.scalatest.CompileMacro$$treecreator3$1",
       "org.scalatest.tools.ScalaTestFramework$ScalaTestRunner$SbtReporter$$anon$3$$anonfun$error$1",
       "org.scalatest.enablers.Aggregating$$anonfun$checkEqual$2$1",
       "org.scalatest.FunSuiteLike",
       "org.scalatest.DiagrammedExprMacro$$anonfun$3$$anonfun$apply$3",
       "org.scalatest.PropSpecLike$class",
       "org.scalatest.matchers.MatcherFactory1$OrEndWithWord",
       "org.scalatest.tools.NestedSuiteParam",
       "org.scalatest.EitherValues$LeftValuable",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks",
       "org.scalatest.Matchers$NoCollected$",
       "org.scalatest.tagobjects.Network$",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$1",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$2",
       "org.scalatest.enablers.Containing$$anon$3",
       "org.scalatest.FlatSpecLike$ItVerbStringTaggedAs",
       "org.scalatest.enablers.Containing$$anon$2",
       "org.scalatest.enablers.Containing$$anon$1",
       "org.scalatest.matchers.MatcherFactory1$$anon$36$$anon$14",
       "org.scalatest.enablers.Containing$$anon$7",
       "org.scalatest.tools.ConcurrentConfig",
       "org.scalatest.enablers.Containing$$anon$6",
       "org.scalactic.PrettyMethods$class",
       "org.scalatest.enablers.Containing$$anon$5",
       "org.scalatest.enablers.Containing$$anon$4",
       "org.scalatest.mock.MockitoSugar$class",
       "org.scalatest.FeatureSpecLike$$anonfun$run$1",
       "org.scalatest.tools.MemoryReporterConfiguration",
       "org.scalactic.Requirements",
       "org.scalactic.StringNormalizations$$anon$2",
       "org.scalatest.CompileMacro$$typecreator26$1",
       "org.scalactic.StringNormalizations$$anon$3",
       "org.scalatest.selenium.WebBrowser$",
       "org.scalatest.WordSpecLike$$anon$2",
       "org.scalactic.StringNormalizations$$anon$1",
       "org.scalatest.WordSpecLike$$anon$1",
       "org.scalatest.EitherValues$RightValuable$$anonfun$value$2",
       "org.scalatest.matchers.MatchResult",
       "org.scalatest.matchers.MatcherFactory7$OrFullyMatchWord",
       "org.scalatest.MustMatchers$ResultOfStartWithWordForCollectedString$$anonfun$checkRegex$1",
       "org.scalatest.events.AlertProvided",
       "org.scalatest.matchers.HavePropertyMatcher",
       "org.scalatest.prop.TableDrivenPropertyChecks",
       "org.scalatest.tools.PresentDiscoveryStarting$",
       "org.scalatest.tools.Fragment$$anonfun$1",
       "org.scalatest.selenium.WebBrowser$Element",
       "org.scalatest.tools.SuiteSortingReporter$$anonfun$fireReadyEvents$1",
       "org.scalatest.fixture.FixtureNodeFamily$Trunk",
       "org.scalatest.run",
       "org.scalatest.matchers.MatcherFactory5$$anon$21$$anon$7",
       "org.scalatest.matchers.MatcherFactory9$$anon$6$$anon$2",
       "org.scalatest.SuperEngine$$anon$4",
       "org.scalatest.SuperEngine$$anon$3",
       "org.scalactic.Accumulation$",
       "org.scalatest.SuperEngine$$anon$5",
       "org.scalatest.tagobjects.InternetExplorerBrowser$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$48$$anonfun$apply$15",
       "org.scalatest.selenium.WebBrowser$Dimension$",
       "org.scalatest.time.SpanSugar$GrainOfTime",
       "org.scalatest.Spec",
       "org.scalatest.SuperEngine$$anon$2",
       "org.scalatest.matchers.HavePropertyMatcher$",
       "org.scalatest.SuperEngine$$anon$1",
       "org.scalatest.matchers.MatcherFactory4$AndFullyMatchWord",
       "org.scalatest.matchers.MatcherFactory4$$anon$23$$anon$7",
       "org.scalatest.fixture.WordSpecLike$ItWord",
       "org.scalatest.tools.Runner$$anonfun$48$$anonfun$apply$8",
       "org.scalatest.BeforeAndAfterAllConfigMap",
       "org.scalatest.tools.SuiteResultHolder$$anonfun$1",
       "org.scalatest.words.ResultOfStringPassedToVerb",
       "org.scalatest.tools.Runner$$anonfun$org$scalatest$tools$Runner$$getNestedSuiteSelectedTestNames$1$1$$anonfun$apply$7",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$only$1",
       "org.scalatest.tagobjects.Disk",
       "org.scalatest.tools.PresentTestPending$",
       "org.scalactic.NormalizingEquivalence",
       "org.scalatest.matchers.MatcherFactory2$$anon$33$$anon$13",
       "org.scalatest.tools.StandardErrReporter",
       "org.scalactic.TripleEqualsSupport$LegacyEqualizer",
       "org.scalatest.matchers.MatcherFactory5$OrEndWithWord",
       "org.scalatest.enablers.Aggregating$ElementCount$4$",
       "org.scalactic.TripleEquals$",
       "org.scalactic.Accumulation$$anon$3$$anonfun$combined$2",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$apply$7$$anonfun$apply$8",
       "org.scalatest.tools.ScalaTestFramework$$anon$1",
       "org.scalatest.tools.ScalaTestFramework$$anon$2",
       "org.scalatest.matchers.MatcherFactory7$AndContainWord",
       "org.scalatest.junit.JUnit3Suite",
       "org.scalatest.events.ScopeClosed",
       "org.scalatest.words.ContainWord$$anon$19$$anon$6$$anonfun$apply$1",
       "org.scalatest.tools.GraphicReporterConfiguration$",
       "org.scalatest.MustMatchers$",
       "org.scalatest.prop.TableFor20$$anon$20",
       "org.scalactic.NotBool",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$allOf$1",
       "org.scalatest.Engine",
       "org.scalatest.Payloads$class",
       "org.scalatest.enablers.Collecting$$anon$5$$anonfun$genTraversableFrom$1",
       "org.scalatest.matchers.MatcherFactory8$AndNotWord",
       "org.scalatest.ConfigMap",
       "org.scalactic.Equality$class",
       "org.scalatest.tags.HtmlUnitBrowser",
       "org.scalatest.selenium.WebBrowser$TagNameQuery$",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$29",
       "org.scalatest.enablers.Aggregating$$anon$5$$anonfun$containsAtLeastOneOf$5$$anonfun$apply$7",
       "org.scalatest.enablers.Messaging$",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$28",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$27",
       "org.scalatest.events.NameInfo$$anonfun$1",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$26",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$25",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$24",
       "org.scalatest.tools.Runner$$anonfun$parseReporterArgsIntoConfigurations$2$$anonfun$apply$1",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$23",
       "org.scalatest.AppendedClues$",
       "org.scalatest.SuperEngine$RegistrationInformer",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$ConfiguredPropertyCheck$$anonfun$3$$anonfun$apply$2",
       "org.scalatest.prop.TableFor2$$anonfun$apply$7$$anonfun$apply$8",
       "org.scalatest.tools.DashboardReporter$$anonfun$writeRunFile$1",
       "org.scalatest.prop.TableFor12$",
       "org.scalatest.Matchers$ResultOfHaveWordForCollectedExtent$$anonfun$size$1",
       "org.scalatest.InspectorsHelper$$anonfun$1",
       "org.scalatest.InspectorsHelper$$anonfun$2",
       "org.scalatest.InspectorsHelper$$anonfun$7",
       "org.scalatest.InspectorsHelper$$anonfun$5",
       "org.scalatest.selenium.WebBrowser$RadioButtonGroup",
       "org.scalactic.FailureMessages$$anonfun$apply$1",
       "org.scalatest.InspectorsHelper$$anonfun$6",
       "org.scalatest.InspectorsHelper$$anonfun$3",
       "org.scalatest.InspectorsHelper$$anonfun$4",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$39",
       "org.scalatest.words.NotWord$$anon$53$$anon$35$$anonfun$apply$1",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$38",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$37",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$36",
       "org.scalatest.FlatSpecLike$ItVerbString",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$35",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$34",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$33",
       "org.scalatest.prop.TableFor13$",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$32",
       "org.scalatest.tagobjects.CPU",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$31",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$30",
       "org.scalautils.package$",
       "org.scalatest.fixture.FunSpecLike$$anonfun$runTests$1",
       "org.scalatest.fixture.Spec$$anonfun$1",
       "org.scalatest.words.ResultOfAWordToBePropertyMatcherApplication",
       "org.scalatest.FlatSpecLike$InAndIgnoreMethodsAfterTaggedAs",
       "org.scalatest.selenium.WebBrowser$SingleSel$$anonfun$value_$eq$2",
       "org.scalactic.FailureMessages",
       "org.scalatest.fixture.FixtureNodeFamily$VerbBranch",
       "org.scalatest.selenium.WebBrowser$$anonfun$monthField$1",
       "org.scalatest.matchers.MatcherFactory4$$anon$18$$anon$2",
       "org.scalatest.prop.TableFor14$",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$equal$1",
       "org.scalatest.matchers.MatcherFactory4$$anon$29$$anon$13",
       "org.scalatest.Matchers$$anonfun$thrownBy$1",
       "org.scalatest.matchers.MatcherFactory5Macro",
       "org.scalatest.prop.TableFor15$",
       "org.scalatest.concurrent.Eventually",
       "org.scalatest.concurrent.SelectorInterruptor$",
       "org.scalatest.words.ResultOfContainWord$",
       "org.scalatest.SpecLike$class",
       "org.scalatest.Payloads",
       "org.scalactic.Bool$class",
       "org.scalatest.tags.Disk",
       "org.scalatest.fixture.FlatSpecLike$TheyVerbStringTaggedAs",
       "org.scalatest.prop.TableFor11$$anonfun$apply$52$$anonfun$apply$53",
       "org.scalatest.prop.Configuration$MaxSize",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addReporterArgs$1",
       "org.scalatest.CancelAfterFailure",
       "org.scalatest.fixture.Suite",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$atLeastOneOf$1$$anonfun$apply$10",
       "org.scalatest.tools.HtmlReporter$$anonfun$extractSuiteEvents$1",
       "org.scalatest.concurrent.TimeLimitedTests",
       "org.scalatest.SuperEngine$MarkupLeaf",
       "org.scalatest.fixture.SpecLike",
       "org.scalatest.tools.Runner$$anonfun$50",
       "org.scalatest.fixture.FreeSpecLike$$anonfun$run$1",
       "org.scalatest.CompileMacro$$treecreator5$1",
       "org.scalatest.matchers.MatcherFactory7$OrNotWord",
       "org.scalatest.matchers.MatcherFactory8$$anon$10$$anon$2",
       "org.scalatest.SpecLike$$anonfun$register$1$1$$anonfun$apply$3",
       "org.scalatest.prop.TableFor18$$anonfun$newBuilder$18",
       "org.scalatest.Payloads$",
       "org.scalatest.SpecLike$$anonfun$register$1$1$$anonfun$apply$1",
       "org.scalatest.SpecLike$$anonfun$register$1$1$$anonfun$apply$2",
       "org.scalatest.fixture.FixtureNodeFamily",
       "org.scalatest.matchers.MatcherFactory1$AndNotWord",
       "org.scalatest.tools.RunnerJFrame$$anonfun$initializeOptionsMap$1",
       "org.scalatest.concurrent.Timeouts$class",
       "org.scalatest.selenium.WebBrowser$go$",
       "org.scalatest.words.ResultOfThrownByApplication",
       "org.scalatest.words.ContainWord$$anon$28$$anon$15",
       "org.scalatest.CatchReporter",
       "org.scalatest.tools.HtmlReporter$$anonfun$setBit$1",
       "org.scalatest.exceptions.GeneratorDrivenPropertyCheckFailedException$$anonfun$1$$anonfun$apply$1",
       "org.scalatest.tools.SuiteResult$",
       "org.scalatest.events.TopOfMethod$",
       "org.scalactic.BooleanMacro",
       "org.scalatest.prop.TableFor22$$anonfun$apply$107",
       "org.scalatest.matchers.MatcherFactory9$$anon$7$$anon$3",
       "org.scalatest.prop.TableFor10$",
       "org.scalatest.prop.TableFor22$$anonfun$apply$106",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$42",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$41",
       "org.scalatest.tools.RunnerJFrame$GraphicRerunReporter$$anonfun$apply$40",
       "org.scalatest.concurrent.Futures",
       "org.scalatest.matchers.MatcherFactory6$$anon$14$$anon$2",
       "org.scalatest.fixture.Suite$TestFunAndConfigMap$$anonfun$apply$1",
       "org.scalatest.enablers.KeyMapping$$anon$2",
       "org.scalatest.enablers.KeyMapping$$anon$1",
       "org.scalatest.prop.TableFor11$",
       "org.scalatest.selenium.WebBrowser$NumberField$$anonfun$10",
       "org.scalatest.ConfigMap$",
       "org.scalatest.matchers.MatcherFactory2$$anon$31$$anon$11",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$90$$anonfun$apply$24",
       "org.scalatest.prop.TableFor22$$anonfun$apply$107$$anonfun$apply$108",
       "org.scalactic.PrettyMethods$",
       "org.scalatest.enablers.Definition$$anon$2",
       "org.scalatest.enablers.Definition$$anon$1",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny$$anonfun$atLeastOneOf$1",
       "org.scalatest.enablers.Containing$$anon$2$$anonfun$contains$1",
       "org.scalatest.enablers.Definition$$anon$3",
       "org.scalatest.events.MarkupProvided",
       "org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2$$anon$2",
       "org.scalatest.tools.FilterSuiteCompleted",
       "org.scalatest.prop.TableDrivenPropertyChecks$class",
       "org.scalatest.matchers.MatcherFactory6$OrHaveWord",
       "org.scalatest.enablers.Containing$$anon$2$$anonfun$contains$2",
       "org.scalatest.words.MustVerb$StringMustWrapperForVerb",
       "org.scalatest.tools.FilterTestIgnored$",
       "org.scalatest.words.ResultOfTheSameElementsAsApplication",
       "org.scalatest.events.NotificationEvent",
       "org.scalatest.MustMatchers$AnWord",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$84$$anonfun$apply$23",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$class",
       "org.scalatest.selenium.Firefox$class",
       "org.scalatest.tools.SuiteResult",
       "org.scalatest.matchers.MatcherFactory5$$anon$25$$anon$11",
       "org.scalatest.tools.RunnerJFrame$$anonfun$getModelAsList$1",
       "org.scalatest.words.MustVerb$$anon$1",
       "org.scalatest.words.NotWord$$anon$47$$anonfun$1",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$should$7",
       "org.scalatest.matchers.HavePropertyMatchResult$",
       "org.scalatest.matchers.Matcher$class",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$should$6",
       "org.scalatest.matchers.Matcher$OrBeWord",
       "org.scalatest.concurrent.ConductorMethods$$anonfun$thread$2",
       "org.scalatest.events.DiscoveryCompleted",
       "org.scalatest.concurrent.ConductorMethods$$anonfun$thread$1",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$should$1",
       "org.scalatest.tools.Fragment$$anonfun$toPossiblyColoredText$2",
       "org.scalatest.tools.Fragment$$anonfun$toPossiblyColoredText$1",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$should$3",
       "org.scalatest.tools.Runner$$anonfun$49$$anonfun$apply$9",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$should$2",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$should$5",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$should$4",
       "org.scalatest.time.Seconds$",
       "org.scalatest.DiagrammedSimpleExpr",
       "org.scalatest.matchers.MatcherFactory2$OrBeWord",
       "org.scalactic.One$",
       "org.scalatest.tools.TestSortingReporter$Slot",
       "org.scalatest.prop.TableFor13$$anon$13$$anonfun$apply$65",
       "org.scalatest.Informing",
       "org.scalatest.SuperEngine$DescriptionBranch$",
       "org.scalatest.prop.TableFor13$$anon$13$$anonfun$apply$64",
       "org.scalatest.words.NotWord$$anon$61$$anon$43$$anonfun$apply$7",
       "org.scalatest.matchers.MatcherFactory1$$anon$34$$anon$12",
       "org.scalatest.words.ContainWord$$anon$4",
       "org.scalatest.words.ContainWord$$anon$5",
       "org.scalatest.fixture.PropSpecLike$$anonfun$runTest$1",
       "org.scalatest.selenium.WebBrowser$$anonfun$org$scalatest$selenium$WebBrowser$$getCookie$1",
       "org.scalatest.concurrent.PatienceConfiguration$PatienceConfigParam",
       "org.scalatest.tools.TestSpec$",
       "org.scalatest.matchers.MatcherFactory8$OrNotWord",
       "org.scalatest.matchers.MatcherFactory6$$anon$15",
       "org.scalatest.prop.TableFor12$$anonfun$newBuilder$12",
       "org.scalatest.selenium.WebBrowser$click$$anonfun$26",
       "org.scalatest.enablers.Writability",
       "org.scalatest.matchers.MatcherFactory6$$anon$14",
       "org.scalatest.matchers.MatcherFactory6$$anon$13",
       "org.scalatest.tools.RunDoneListener",
       "org.scalatest.matchers.MatcherFactory6$$anon$19",
       "org.scalatest.matchers.MatcherFactory6$$anon$18",
       "org.scalatest.matchers.MatcherFactory6$$anon$17",
       "org.scalatest.matchers.MatcherFactory6$$anon$16",
       "org.scalatest.concurrent.PimpedThreadGroup$",
       "org.scalatest.tools.XmlReporter$Testcase$",
       "org.scalatest.testng.TestNGWrapperSuite",
       "org.scalatest.tools.PresentTestSucceeded",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$4$$anonfun$apply$3",
       "org.scalactic.Prettifier$$anon$1",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$9",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$fullyMatch$1",
       "org.scalatest.Documenting",
       "org.scalatest.matchers.MatcherFactory6$$anon$22",
       "org.scalatest.matchers.MatcherFactory6$$anon$21",
       "org.scalatest.matchers.MatcherFactory6$$anon$20",
       "org.scalatest.EitherValues$LeftValuable$$anonfun$value$1",
       "org.scalatest.fixture.FlatSpecLike$$anonfun$run$1",
       "org.scalactic.LegacyTripleEquals$",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$3",
       "org.scalatest.tools.TestElement",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$4",
       "org.scalatest.TryValues$class",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$2",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$7",
       "org.scalatest.enablers.Sortable",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$8",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$5",
       "org.scalatest.DispatchReporter$Propagator$$anonfun$6",
       "org.scalatest.fixture.SpecLike$class",
       "org.scalactic.Explicitly$",
       "org.scalatest.tools.Durations$",
       "org.scalatest.concurrent.Conductor$ConductorState",
       "org.scalactic.TimesOnInt$class",
       "org.scalatest.MustMatchers$RegexWord",
       "org.scalatest.Matchers$class",
       "org.scalatest.tools.PresentRunStarting$",
       "org.scalatest.Succeeded",
       "org.scalatest.events.Event",
       "org.scalatest.tools.Framework$$anonfun$1",
       "org.scalatest.DiagrammedAssertions$",
       "org.scalatest.enablers.Slicing$$anon$1",
       "org.scalatest.prop.TableFor16$$anonfun$apply$77$$anonfun$apply$78",
       "org.scalatest.tools.Framework$$anonfun$8",
       "org.scalatest.tools.Framework$$anonfun$7",
       "org.scalatest.tools.Framework$$anonfun$6",
       "org.scalatest.tools.Framework$$anonfun$4",
       "org.scalatest.concurrent.Eventually$class",
       "org.scalatest.prop.TableFor5$$anonfun$newBuilder$5",
       "org.scalatest.matchers.MatcherFactory7Macro",
       "org.scalatest.CompileMacro$$typecreator32$1",
       "org.scalatest.tools.SbtCommandParser$",
       "org.scalatest.tools.DashboardReporterConfiguration",
       "org.scalatest.Alerting",
       "org.scalatest.prop.TableFor21$$anonfun$apply$102",
       "org.scalatest.prop.TableFor21$$anonfun$apply$101",
       "org.scalatest.prop.TableFor11$$anon$11",
       "org.scalatest.DocSpecLike$SuiteSnippet$",
       "org.scalatest.enablers.Aggregating$$anon$6$$anonfun$containsAtLeastOneOf$6$$anonfun$apply$8",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$discoverSuiteNames$1",
       "org.scalatest.events.IndentedText$",
       "org.scalatest.tools.FilterSuiteStarting$",
       "org.scalatest.concurrent.ConductorFixture$class",
       "org.scalatest.concurrent.Conductor$ClockThread",
       "org.scalatest.BeforeAndAfterAll$class",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$9$$anonfun$apply$6",
       "org.scalactic.SnapshotsMacro$",
       "org.scalatest.tools.StringReporter$$anonfun$noteProvidedFragments$1",
       "org.scalatest.matchers.BeMatcher",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$4$$anonfun$apply$3",
       "org.scalatest.matchers.MatcherFactory2$$anon$28$$anon$8",
       "org.scalatest.matchers.MatcherFactory6$AndStartWithWord",
       "org.scalatest.prop.TableFor13$$anonfun$apply$62$$anonfun$apply$63",
       "org.scalatest.prop.TableFor22$$anon$22$$anonfun$apply$110",
       "org.scalactic.Accumulation$class",
       "org.scalatest.matchers.MatcherFactory6$$anon$20$$anon$8",
       "org.scalatest.WordSpecLike$$anonfun$2",
       "org.scalatest.tools.ReadyState$",
       "org.scalatest.time.Millis$",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$inOrder$1$$anonfun$apply$15",
       "org.scalatest.DocSpecLike$MarkupContext",
       "org.scalatest.mock.JMockCycleFixture",
       "org.scalatest.selenium.WebBrowser$$anonfun$org$scalatest$selenium$WebBrowser$$getStackDepthFun$1",
       "org.scalatest.path.FunSpecLike$$anonfun$run$1",
       "org.scalatest.concurrent.Conductors$Conductor$$anonfun$waitForThreads$1",
       "org.scalatest.prop.TableFor22$$anon$22$$anonfun$apply$109",
       "org.scalactic.LowPriorityConversionCheckedConstraint",
       "org.scalatest.concurrent.JavaFutures",
       "org.scalatest.prop.TableFor13$$anonfun$apply$62",
       "org.scalatest.prop.TableFor13$$anonfun$apply$61",
       "org.scalatest.StreamlinedXmlEquality",
       "org.scalatest.words.MatcherWords$class",
       "org.scalatest.words.NotWord$$anon$51$$anon$5",
       "org.scalatest.tools.EventHolder$",
       "org.scalatest.DispatchReporter$",
       "org.scalactic.Accumulation$$anon$7$$anonfun$validatedBy$2",
       "org.scalatest.tools.DiscoverySuite",
       "org.scalactic.Equivalence$",
       "org.scalatest.matchers.MatcherFactory2$AndHaveWord",
       "org.scalatest.tools.Framework$SbtLogInfoReporter",
       "org.scalatest.tools.FilterScopePending",
       "org.scalatest.words.ContainWord$$anon$24$$anon$11",
       "org.scalatest.DiagrammedExprMacro$ApplyInfo$",
       "org.scalatest.tools.Framework",
       "org.scalatest.RandomTestOrder$DeferredSuiteRun",
       "org.scalatest.StepwiseNestedSuiteExecution",
       "org.scalatest.Specs$$anonfun$1",
       "org.scalatest.tools.Framework$ScalaTestNestedTask$$anonfun$tags$3",
       "org.scalatest.tools.Framework$ScalaTestNestedTask$$anonfun$tags$2",
       "org.scalatest.tools.StringReporter$$anonfun$6",
       "org.scalatest.tools.Framework$ScalaTestNestedTask$$anonfun$tags$1",
       "org.scalatest.tools.StringReporter$$anonfun$7",
       "org.scalatest.tools.StringReporter$$anonfun$8",
       "org.scalatest.tools.DashboardReporter$SuiteRecord",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addConfiguredRunpath$1",
       "org.scalatest.CompileMacro$$typecreator6$1",
       "org.scalatest.Matchers$ResultOfBeWordForCollectedAny",
       "org.scalatest.matchers.MatcherFactory1$$anon$35$$anon$13",
       "org.scalatest.prop.TableFor15$$anon$15",
       "org.scalatest.WordSpecLike$TheyWord",
       "org.scalatest.tools.SocketReporterConfiguration$",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$74$$anonfun$apply$21",
       "org.scalatest.concurrent.Interruptor$",
       "org.scalatest.tools.StringReporter$$anonfun$2",
       "org.scalatest.tools.StringReporter$$anonfun$3",
       "org.scalatest.tools.StringReporter$$anonfun$4",
       "org.scalatest.selenium.WebBrowser$add$",
       "org.scalatest.tools.StringReporter$$anonfun$5",
       "org.scalatest.FreeSpecLike$$anonfun$runTest$1",
       "org.scalatest.tools.StringReporter$$anonfun$1",
       "org.scalatest.enablers.Size$$anon$10",
       "org.scalatest.enablers.Size$$anon$11",
       "org.scalatest.events.Ordinal$$anonfun$next$2",
       "org.scalatest.enablers.Size$$anon$12",
       "org.scalatest.events.Ordinal$$anonfun$next$1",
       "org.scalatest.enablers.Size$$anon$13",
       "org.scalatest.DispatchReporter$$anon$1",
       "org.scalactic.Pass$",
       "org.scalatest.Matchers$ResultOfEndWithWordForCollectedString$$anonfun$checkRegex$3",
       "org.scalatest.tools.SuiteSortingReporter",
       "org.scalatest.words.IncludeWord",
       "org.scalatest.matchers.Matcher$AndNotWord",
       "org.scalatest.FreeSpecLike$class",
       "org.scalatest.matchers.MatcherFactory3$OrFullyMatchWord",
       "org.scalatest.RandomTestOrder$class",
       "org.scalatest.fixture.FlatSpecLike$ItVerbString",
       "org.scalatest.tools.PresentWithoutColor$",
       "org.scalatest.selenium.WebBrowser$$anonfun$dateField$1",
       "org.scalatest.Assertions",
       "org.scalatest.tools.StandardOutReporter",
       "org.scalactic.TripleEqualsSupport$class",
       "org.scalatest.Matchers$ResultOfIncludeWordForCollectedString",
       "org.scalatest.matchers.MatcherFactory8$OrBeWord",
       "org.scalatest.selenium.WebBrowser$Query$class",
       "org.scalatest.tools.ReporterFactory$$anonfun$createFileReporter$1",
       "org.scalatest.tools.ReporterFactory$$anonfun$createFileReporter$2",
       "org.scalatest.concurrent.Conductors$Conductor$Setup$",
       "org.scalatest.package",
       "org.scalatest.Transformer$$anonfun$apply$1",
       "org.scalatest.concurrent.SocketInterruptor$",
       "org.scalactic.Normalization$$anon$1",
       "org.scalatest.Checkpoints$Checkpoint",
       "org.scalactic.Normalization$$anon$2",
       "org.scalatest.events.DiscoveryStarting$",
       "org.scalatest.matchers.MatcherFactory4$$anon$24$$anon$8",
       "org.scalatest.InspectorsHelper$$anonfun$doForNo$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$20",
       "org.scalatest.prop.Configuration$Workers",
       "org.scalatest.tools.Runner$$anonfun$21",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$21",
       "org.scalatest.tools.Runner$$anonfun$20",
       "org.scalatest.tools.Runner$$anonfun$23",
       "org.scalatest.tools.Runner$$anonfun$22",
       "org.scalatest.time.Microseconds$",
       "org.scalatest.tools.Runner$$anonfun$25",
       "org.scalatest.tools.XmlSocketReporterConfiguration$",
       "org.scalatest.tools.Runner$$anonfun$24",
       "org.scalatest.tools.EventToPresent",
       "org.scalatest.tools.Runner$$anonfun$27",
       "org.scalatest.tools.Runner$$anonfun$26",
       "org.scalactic.NumericEqualityConstraints",
       "org.scalactic.Uniformity$class",
       "org.scalatest.prop.TableFor17$$anonfun$apply$81",
       "org.scalatest.tools.Runner$$anonfun$29",
       "org.scalatest.prop.TableFor17$$anonfun$apply$82",
       "org.scalatest.tools.Runner$$anonfun$28",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$19",
       "org.scalatest.tools.ScalaTestFramework$ScalaTestRunner$$anonfun$filterMembersOnly$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$17",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$18",
       "org.scalatest.tools.AnsiGreen",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$11",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$12",
       "org.scalatest.tools.XmlReporterConfiguration",
       "org.scalatest.tools.Runner$$anonfun$10",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$10",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$15",
       "org.scalatest.mock.EasyMockSugar$MockObjects",
       "org.scalatest.tools.Runner$$anonfun$12",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$16",
       "org.scalatest.tools.Runner$$anonfun$11",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$13",
       "org.scalatest.tools.Runner$$anonfun$14",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$be$14",
       "org.scalatest.tools.Runner$$anonfun$13",
       "org.scalatest.Inside$$anonfun$inside$2",
       "org.scalatest.tools.Runner$$anonfun$16",
       "org.scalatest.Inside$$anonfun$inside$1",
       "org.scalatest.tools.Runner$$anonfun$15",
       "org.scalatest.tools.Runner$$anonfun$18",
       "org.scalatest.tools.Runner$$anonfun$17",
       "org.scalatest.verb.package$",
       "org.scalatest.tools.Runner$$anonfun$19",
       "org.scalatest.words.NoExceptionWord",
       "org.scalatest.selenium.Safari$class",
       "org.scalatest.CompileMacro$$typecreator14$1",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$theSameElementsAs$1",
       "org.scalatest.tools.SuiteSortingReporter$$anonfun$fireReadySuiteEvents$1",
       "org.scalatest.words.BeWord$$anon$29$$anon$24",
       "org.scalatest.prop.TableFor16$$anon$16$$anonfun$apply$79",
       "org.scalatest.tools.HtmlReporter$$anonfun$suiteResults$1",
       "org.scalactic.RequirementsMacro$",
       "org.scalatest.tools.Runner$$anonfun$41",
       "org.scalatest.tools.Runner$$anonfun$40",
       "org.scalatest.matchers.AMatcher",
       "org.scalatest.tools.Runner$$anonfun$43",
       "org.scalatest.tools.Runner$$anonfun$42",
       "org.scalatest.tools.Runner$$anonfun$45",
       "org.scalatest.tools.Runner$$anonfun$44",
       "org.scalatest.tools.Runner$$anonfun$47",
       "org.scalatest.tools.Runner$$anonfun$46",
       "org.scalatest.tools.Runner$$anonfun$49",
       "org.scalatest.tools.Runner$$anonfun$48",
       "org.scalatest.words.ResultOfLengthWordApplication",
       "org.scalatest.matchers.MatcherFactory1$$anon$23$$anon$1",
       "org.scalatest.concurrent.Futures$FutureConcept",
       "org.scalatest.StreamlinedXmlNormMethods$",
       "org.scalatest.matchers.BeMatcher$$anon$1",
       "org.scalatest.junit.JUnitRunner",
       "org.scalatest.matchers.BeMatcher$$anon$2",
       "org.scalatest.Failed$$anonfun$here$2",
       "org.scalatest.prop.Configuration$MinSuccessful$",
       "org.scalatest.prop.TableFor16$$anon$16$$anonfun$apply$80",
       "org.scalatest.Failed$$anonfun$here$1",
       "org.scalatest.tools.DashboardReporter$TestRecord$Duration$",
       "org.scalatest.DocSpecLike$class",
       "org.scalatest.tools.Runner$$anonfun$30",
       "org.scalatest.selenium.WebBrowser$ClassNameQuery",
       "org.scalatest.tools.Runner$$anonfun$32",
       "org.scalatest.tools.Runner$$anonfun$31",
       "org.scalatest.tools.Runner$$anonfun$34",
       "org.scalatest.tools.Runner$$anonfun$33",
       "org.scalatest.tools.Runner$$anonfun$36",
       "org.scalatest.ParallelTestExecution$class",
       "org.scalatest.tools.FilterTestStarting$",
       "org.scalatest.tools.Runner$$anonfun$35",
       "org.scalatest.enablers.ValueMapping$$anon$1$$anonfun$containsValue$2",
       "org.scalatest.prop.TableFor4$$anonfun$apply$16",
       "org.scalatest.tools.Runner$$anonfun$38",
       "org.scalatest.enablers.ValueMapping$$anon$1$$anonfun$containsValue$1",
       "org.scalatest.prop.TableFor4$$anonfun$apply$17",
       "org.scalatest.tools.Runner$$anonfun$37",
       "org.scalatest.PathMessageRecordingDocumenter$",
       "org.scalatest.StreamlinedXml$$anon$1",
       "org.scalatest.selenium.WebBrowser$TextArea$$anonfun$2",
       "org.scalatest.tools.Runner$$anonfun$39",
       "org.scalatest.concurrent.JavaFutures$$anon$2",
       "org.scalatest.selenium.WebBrowser$$anonfun$singleSel$1",
       "org.scalatest.FailureMessages$",
       "org.scalatest.words.ResultOfAllOfApplication$$anonfun$toString$1",
       "org.scalatest.Exceptional$",
       "org.scalatest.words.NotWord$$anon$62$$anon$44",
       "org.scalatest.tools.ReporterFactory$$anonfun$createStandardOutReporter$2",
       "org.scalatest.FunSuite",
       "org.scalatest.tools.ReporterFactory$$anonfun$createStandardOutReporter$1",
       "org.scalatest.SpecLike$$anonfun$register$1$1",
       "org.scalatest.tools.FilterTestPending",
       "org.scalatest.matchers.MatcherFactory5$AndStartWithWord",
       "org.scalatest.words.ResultOfTheSameInstanceAsApplication",
       "org.scalatest.PathEngine$$anonfun$17",
       "org.scalatest.words.ContainWord$$anon$28",
       "org.scalatest.MustMatchers$BetweenCollected$",
       "org.scalatest.PathEngine$$anonfun$18",
       "org.scalatest.words.ContainWord$$anon$27",
       "org.scalatest.path.FreeSpecLike$FreeSpecStringWrapper",
       "org.scalatest.words.ContainWord$$anon$24",
       "org.scalatest.words.ContainWord$$anon$23",
       "org.scalatest.words.ContainWord$$anon$26",
       "org.scalatest.words.ContainWord$$anon$25",
       "org.scalatest.tools.FilterMarkupProvided",
       "org.scalatest.events.TestStarting$",
       "org.scalatest.prop.TableFor16$",
       "org.scalatest.words.ResultOfRegexWordApplication$$anonfun$toString$1",
       "org.scalatest.words.ContainWord$$anon$19$$anon$6$$anonfun$toString$1",
       "org.scalatest.FlatSpecLike$$anonfun$1$$anon$2$$anon$3$$anonfun$is$8",
       "org.scalatest.Matchers$ResultOfBeWordForCollectedAny$$anonfun$definedAt$1",
       "org.scalatest.enablers.Sequencing",
       "org.scalatest.fixture.FlatSpec",
       "org.scalatest.words.MatcherWords$$anon$2",
       "org.scalatest.TryValues",
       "org.scalatest.words.ContainWord$$anon$24$$anonfun$toString$8",
       "org.scalatest.selenium.WebBrowser$FrameWebElementTarget$$anonfun$switch$3",
       "org.scalatest.selenium.WebBrowser$TextField",
       "org.scalatest.matchers.Matcher$AndIncludeWord",
       "org.scalatest.prop.TableFor2$$anon$2",
       "org.scalatest.matchers.MatcherFactory4$AndBeWord",
       "org.scalatest.Suite$class",
       "org.scalatest.prop.TableFor17$",
       "org.scalatest.concurrent.AbstractPatienceConfiguration",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$setRunpath$1",
       "org.scalatest.events.MotionToSuppress",
       "org.scalatest.tools.AnsiColor",
       "org.scalatest.selenium.WebBrowser$$anonfun$telField$1",
       "org.scalatest.SuperEngine$AlertLeaf$",
       "org.scalatest.prop.TableFor18$",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$1",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustEqual$1",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$2",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustEqual$2",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$3",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$4",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$5",
       "org.scalatest.fixture.WordSpecLike$$anonfun$runTests$1",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$6",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$7",
       "org.scalatest.MustMatchers$ResultOfCollectedAny$$anonfun$mustEqual$3",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$8",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$9",
       "org.scalatest.matchers.MatcherProducers$class",
       "org.scalatest.PathEngine$$anonfun$20",
       "org.scalatest.prop.TableFor17$$anonfun$newBuilder$17",
       "org.scalatest.PathEngine$$anonfun$21",
       "org.scalautils.package",
       "org.scalatest.selenium.WebBrowser$EmailField",
       "org.scalatest.words.ContainWord$$anon$17",
       "org.scalatest.words.ContainWord$$anon$16",
       "org.scalatest.words.ContainWord$$anon$19",
       "org.scalatest.words.ContainWord$$anon$18",
       "org.scalatest.PathEngine$$anonfun$24",
       "org.scalatest.PathEngine$$anonfun$25",
       "org.scalatest.PathEngine$$anonfun$22",
       "org.scalatest.PathEngine$$anonfun$23",
       "org.scalatest.SuiteMixin",
       "org.scalatest.prop.TableFor19$",
       "org.scalatest.words.ContainWord$$anon$20",
       "org.scalatest.FunSpecLike$$anonfun$runTests$1",
       "org.scalatest.words.ContainWord$$anon$22",
       "org.scalatest.words.ContainWord$$anon$21",
       "org.scalatest.PathEngine$$anonfun$19",
       "org.scalatest.matchers.Matcher$OrEndWithWord",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$contain$10$$anonfun$apply$7",
       "org.scalatest.CompileMacro$$treecreator14$1",
       "org.scalatest.FailedStatus",
       "org.scalatest.prop.TableFor12$$anon$12$$anonfun$apply$60",
       "org.scalatest.SlowpokeDetector",
       "org.scalatest.enablers.Aggregating$$anon$3$$anonfun$containsAtLeastOneOf$3$$anonfun$apply$5",
       "org.scalatest.junit.JUnitRunner$$anonfun$org$scalatest$junit$JUnitRunner$$createDescription$2",
       "org.scalatest.junit.JUnitRunner$$anonfun$org$scalatest$junit$JUnitRunner$$createDescription$1",
       "org.scalatest.MustMatchers$RegexWrapper",
       "org.scalatest.tools.FilterReporter$$anonfun$1",
       "org.scalatest.tools.FilterReporter$$anonfun$2",
       "org.scalatest.tools.FilterReporter$$anonfun$3",
       "org.scalatest.tools.FilterReporter$$anonfun$4",
       "org.scalatest.matchers.MatcherFactory2$$anon$32$$anon$12",
       "org.scalatest.tools.FilterInfoProvided$",
       "org.scalatest.Assertions$NormalResult$",
       "org.scalactic.Every$$anonfun$1",
       "org.scalatest.selenium.WebBrowser$Query$$anonfun$findAllElements$1",
       "org.scalactic.One",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$allOf$1$$anonfun$apply$14",
       "org.scalatest.prop.TableFor12$$anon$12$$anonfun$apply$59",
       "org.scalatest.prop.TableFor4$$anonfun$apply$17$$anonfun$apply$18",
       "org.scalatest.words.ResultOfTheTypeInvocation",
       "org.scalatest.tools.StringReporter$$anonfun$fragmentsWhenNoError$1",
       "org.scalatest.fixture.FeatureSpecLike$$anonfun$convertPendingToFixtureFunction$1",
       "org.scalatest.time.SpanSugar$class",
       "org.scalatest.matchers.MatcherFactory4$OrEndWithWord",
       "org.scalatest.Doc$Markup",
       "org.scalatest.tools.Runner$$anonfun$org$scalatest$tools$Runner$$getNestedSuiteSelectedTestNames$1$1",
       "org.scalatest.words.PleaseUseNoExceptionShouldSyntaxInstead",
       "org.scalatest.Outcome",
       "org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1",
       "org.scalatest.matchers.MatcherFactory3$AndBeWord",
       "org.scalatest.tools.Runner$$anonfun$mergeMap$1$$anonfun$apply$2",
       "org.scalatest.events.Summary",
       "org.scalatest.fixture.FreeSpecLike$ResultOfTaggedAsInvocationOnString$$anonfun$is$1",
       "org.scalatest.fixture.WordSpecLike$class",
       "org.scalatest.RandomTestOrder$DeferredSuiteRun$",
       "org.scalatest.matchers.MatcherFactory4$OrFullyMatchWord",
       "org.scalatest.words.JavaMapWrapper",
       "org.scalatest.Suite$$anonfun$22",
       "org.scalatest.Suite$$anonfun$21",
       "org.scalatest.concurrent.PimpedReadWriteLock$",
       "org.scalatest.fixture.Suite$TestFunAndConfigMap",
       "org.scalatest.enablers.Containing$$anonfun$checkNoneOf$1",
       "org.scalatest.FunSpecLike$TheyWord",
       "org.scalatest.Suite$$anonfun$20",
       "org.scalatest.concurrent.ConductorMultiFixture$$anonfun$withConductorFixture$1",
       "org.scalatest.enablers.Containing$$anonfun$checkNoneOf$3",
       "org.scalatest.enablers.Containing$$anonfun$checkNoneOf$2",
       "org.scalatest.tools.AnsiReset$",
       "org.scalatest.matchers.MatcherFactory2$$anon$37$$anon$17",
       "org.scalatest.CompileMacro$$treecreator6$1",
       "org.scalatest.time.Now$class",
       "org.scalactic.TripleEqualsSupport$Spread",
       "org.scalactic.BasicPrettifier",
       "org.scalactic.ComposedNormalizingEquivalence",
       "org.scalatest.words.ResultOfAfterWordApplication",
       "org.scalatest.words.LengthWord",
       "org.scalatest.MustMatchers$ResultOfBeWordForCollectedAny$$anonfun$theSameInstanceAs$1",
       "org.scalatest.AbstractSuite$class",
       "org.scalatest.concurrent.Timeouts$$anonfun$cancelAfter$1",
       "org.scalatest.matchers.MatcherFactory1$OrHaveWord",
       "org.scalatest.prop.Configuration$",
       "org.scalatest.Matchers$",
       "org.scalatest.tools.Framework$$anonfun$org$scalatest$tools$Framework$$runSuite$1",
       "org.scalatest.tools.FilterTestIgnored",
       "org.scalatest.Informer",
       "org.scalatest.Suite$$anonfun$runNestedSuites$2",
       "org.scalatest.Alerter$class",
       "org.scalatest.Suite$$anonfun$runNestedSuites$1",
       "org.scalatest.DiagrammedSelectExpr",
       "org.scalatest.tools.Runner$$anonfun$readMemoryFiles$1",
       "org.scalatest.tools.Runner$$anonfun$readMemoryFiles$2",
       "org.scalatest.tools.PresentRunAborted",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addTestArgs$1",
       "org.scalatest.matchers.MatcherFactory1$$anon$30$$anon$8",
       "org.scalatest.DiagrammedApplyExpr$$anonfun$1",
       "org.scalatest.selenium.WebBrowser$SearchField$$anonfun$12",
       "org.scalatest.PathMessageRecordingInformer$$anon$1",
       "org.scalatest.selenium.WebBrowser$ColorField",
       "org.scalatest.words.ResultOfLessThanComparison",
       "org.scalactic.PrettyMethods$Prettyizer",
       "org.scalatest.CompileMacro$$typecreator28$1",
       "org.scalatest.tools.ScalaTestFramework$ScalaTestRunner$SbtReporter",
       "org.scalatest.concurrent.AsyncAssertions$",
       "org.scalatest.prop.TableFor3$$anonfun$newBuilder$3",
       "org.scalatest.events.InfoProvided$",
       "org.scalatest.prop.Configuration$MinSize$",
       "org.scalatest.selenium.WebBrowser$capture$",
       "org.scalatest.fixture.FixtureNodeFamily$Branch",
       "org.scalatest.tools.NestedSuiteParam$",
       "org.scalatest.enablers.Emptiness$$anon$6",
       "org.scalatest.enablers.Emptiness$$anon$7",
       "org.scalatest.concurrent.TimeLimitedTests$$anonfun$withFixture$1",
       "org.scalatest.enablers.Emptiness$$anon$8",
       "org.scalatest.concurrent.TimeLimitedTests$$anonfun$withFixture$2",
       "org.scalatest.Exceptional",
       "org.scalatest.events.DiscoveryStarting$$anonfun$toXml$8",
       "org.scalatest.tools.RunnerJFrame$$anon$4$$anonfun$getHTMLForStackTrace$1$1",
       "org.scalatest.enablers.Emptiness$$anon$1",
       "org.scalatest.matchers.MatcherFactory6$$anon$21$$anon$9",
       "org.scalatest.matchers.MatcherFactory9$$anon$8$$anon$4",
       "org.scalatest.enablers.Emptiness$$anon$2",
       "org.scalatest.Matchers$BetweenCollected$",
       "org.scalatest.enablers.Emptiness$$anon$3",
       "org.scalactic.Prettifier$",
       "org.scalatest.enablers.Emptiness$$anon$4",
       "org.scalatest.tools.NestedSuiteElement",
       "org.scalatest.enablers.Emptiness$$anon$5",
       "org.scalatest.events.DiscoveryStarting$$anonfun$toXml$7",
       "org.scalatest.matchers.MatcherFactory4$OrStartWithWord",
       "org.scalatest.concurrent.Conductor$ClockThread$",
       "org.scalatest.fixture.FreeSpecLike$$anonfun$runTest$1",
       "org.scalatest.selenium.WebBrowser$TelField$$anonfun$13",
       "org.scalatest.CompileMacro$$typecreator4$1",
       "org.scalatest.fixture.FixtureNodeFamily$DescriptionBranch$",
       "org.scalatest.enablers.Containing$$anon$4$$anonfun$contains$4",
       "org.scalatest.FunSpec",
       "org.scalatest.concurrent.AsyncAssertions$class",
       "org.scalatest.matchers.Matcher$$anon$12$$anon$5",
       "org.scalatest.tools.HtmlReporterConfiguration$",
       "org.scalatest.tagobjects.SafariBrowser",
       "org.scalatest.PropSpecLike$$anonfun$runTest$1",
       "org.scalatest.tools.FileReporter",
       "org.scalatest.Checkpoints$class",
       "org.scalatest.selenium.InternetExplorer$class",
       "org.scalatest.words.ResultOfAllOfApplication",
       "org.scalatest.time.Nanosecond",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$startWith$1",
       "org.scalatest.matchers.MatcherFactory4$$anon$25$$anon$9",
       "org.scalatest.RandomTestOrder$$anonfun$run$1$$anonfun$apply$1",
       "org.scalatest.DocSpec$",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$startWith$2",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$startWith$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$startWith$2",
       "org.scalatest.Matchers$ResultOfStartWithWordForString",
       "org.scalatest.enablers.Emptiness$",
       "org.scalatest.fixture.FlatSpecLike$TheyVerbStringTaggedAs$$anonfun$is$3",
       "org.scalatest.words.DefinedWord",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$key$1",
       "org.scalatest.time.Second",
       "org.scalatest.events.RunCompleted",
       "org.scalatest.fixture.FlatSpecLike$TheyVerbString$$anonfun$is$4",
       "org.scalatest.prop.Configuration$Workers$",
       "org.scalatest.fixture.FunSuite",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$1",
       "org.scalatest.words.ResultOfNotWordForAny$$anonfun$2",
       "org.scalatest.words.HaveWord$$anon$4$$anonfun$1",
       "org.scalatest.enablers.Containing$$anonfun$checkOneOf$2$$anonfun$apply$1",
       "org.scalatest.words.HaveWord$$anon$4$$anonfun$2",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$13",
       "org.scalatest.exceptions.TableDrivenPropertyCheckFailedException$$anonfun$1",
       "org.scalatest.tools.Runner$$anonfun$40$$anonfun$apply$5",
       "org.scalatest.prop.TableFor8$$anonfun$apply$37",
       "org.scalatest.prop.TableFor8$$anonfun$apply$36",
       "org.scalatest.tools.Framework$ScalaTestTask$$anonfun$5",
       "org.scalatest.CompositeStatus$$anonfun$succeeds$1",
       "org.scalatest.Doc$",
       "org.scalatest.enablers.Size",
       "org.scalatest.matchers.MatcherFactory5$$anon$23$$anon$9",
       "org.scalatest.tools.EventHolderListCellRenderer",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$10",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$11",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$contain$12",
       "org.scalatest.concurrent.Timeouts$$anonfun$cancelAfter$1$$anonfun$apply$2",
       "org.scalatest.tools.ScalaTestFramework$ScalaTestRunner",
       "org.scalatest.time.Now",
       "org.scalatest.MustMatchers$AtLeastCollected$",
       "org.scalatest.matchers.MatcherFactory8$OrFullyMatchWord",
       "org.scalactic.Tolerance$PlusOrMinusWrapper",
       "org.scalatest.TryValues$SuccessOrFailure$$anonfun$failure$1",
       "org.scalatest.matchers.MatcherFactory5$AndHaveWord",
       "org.scalatest.BeforeAndAfterAllConfigMap$class",
       "org.scalatest.events.RunStarting$$anonfun$toXml$5",
       "org.scalatest.events.RunStarting$$anonfun$toXml$6",
       "org.scalatest.fixture.PropSpecLike$$anonfun$convertPendingToFixtureFunction$1",
       "org.scalatest.selenium.WebBrowser$WindowTarget",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$14",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$15",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$12",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$13",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$10",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$11",
       "org.scalatest.events.TestPending$",
       "org.scalatest.tools.JUnitXmlReporter",
       "org.scalatest.WordSpecLike$ItWord",
       "org.scalatest.matchers.Matcher$OrHaveWord",
       "org.scalatest.matchers.MatcherFactory6$OrNotWord$$anon$12",
       "org.scalatest.WordSpec",
       "org.scalactic.Equivalence",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$18",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$19",
       "org.scalatest.AppendedClues$Clueful$$anonfun$withClue$1",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$16",
       "org.scalatest.AppendedClues$Clueful$$anonfun$withClue$2",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$17",
       "org.scalatest.words.ContainWord$$anon$21$$anon$8$$anonfun$toString$5",
       "org.scalatest.NonImplicitAssertions",
       "org.scalatest.GivenWhenThen",
       "org.scalatest.Inside$",
       "org.scalatest.events.TestFailed$$anonfun$toXml$2",
       "org.scalatest.prop.Whenever$class",
       "org.scalatest.Suite$$anonfun$19",
       "org.scalatest.Suite$$anonfun$18",
       "org.scalatest.Suite$",
       "org.scalatest.concurrent.ConductorMethods$$anonfun$withFixture$1",
       "org.scalatest.junit.RunNotifierReporter",
       "org.scalatest.Suite$$anonfun$13",
       "org.scalatest.Suite$$anonfun$12",
       "org.scalatest.Suite$$anonfun$11",
       "org.scalatest.Suite$$anonfun$10",
       "org.scalatest.Suite$$anonfun$17",
       "org.scalatest.Suite$$anonfun$16",
       "org.scalactic.Accumulation$$anon$6$$anonfun$4",
       "org.scalatest.Suite$$anonfun$15",
       "org.scalatest.Suite$$anonfun$14",
       "org.scalatest.matchers.MatcherFactory3$$anon$27$$anon$9",
       "org.scalatest.ConcurrentDocumenter$",
       "org.scalatest.concurrent.Conductors$Conductor$TestThread$",
       "org.scalatest.Distributor",
       "org.scalatest.DiagrammedExprMacro$ApplyInfo",
       "org.scalatest.MustMatchers$ResultOfIncludeWordForString",
       "org.scalatest.BeforeAndAfterAllConfigMap$$anonfun$run$1",
       "org.scalatest.prop.TableFor17$$anonfun$apply$82$$anonfun$apply$83",
       "org.scalatest.Matchers$ResultOfContainWordForCollectedAny",
       "org.scalatest.words.ResultOfContainWord$$anonfun$atLeastOneOf$1",
       "org.scalatest.time.Hours",
       "org.scalatest.AppendedClues$Clueful$$anonfun$withClue$3",
       "org.scalactic.Or$",
       "org.scalatest.FeatureSpecLike",
       "org.scalatest.Ignore",
       "org.scalatest.matchers.MatcherFactory9",
       "org.scalatest.Tracker$",
       "org.scalatest.matchers.MatcherFactory5",
       "org.scalatest.matchers.MatcherFactory6",
       "org.scalatest.matchers.MatcherFactory7",
       "org.scalatest.matchers.MatcherFactory8",
       "org.scalatest.matchers.MatcherFactory1",
       "org.scalatest.matchers.MatcherFactory2",
       "org.scalatest.matchers.MatcherFactory3",
       "org.scalatest.enablers.Writability$",
       "org.scalatest.matchers.MatcherFactory4",
       "org.scalatest.FlatSpecLike$TheyWord",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$21",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$be$20",
       "org.scalatest.time.Hours$",
       "org.scalatest.OptionValues$class",
       "org.scalatest.matchers.MatcherFactory2$$anon$29$$anon$9",
       "org.scalatest.words.ResultOfMessageWordApplication",
       "org.scalactic.SnapshotsMacro$$anonfun$1",
       "org.scalatest.events.Ordinal$$anonfun$nextNewOldPair$2",
       "org.scalatest.events.Ordinal$$anonfun$nextNewOldPair$1",
       "org.scalatest.matchers.MatcherFactory3$OrBeWord",
       "org.scalatest.enablers.Containing$$anon$3$$anonfun$contains$3",
       "org.scalatest.path.FunSpecLike$class",
       "org.scalatest.enablers.Aggregating$$anon$4$$anonfun$containsAtLeastOneOf$4$$anonfun$apply$6",
       "org.scalatest.concurrent.ScaledTimeSpans",
       "org.scalatest.junit.AssertionsForJUnit",
       "org.scalatest.selenium.Safari$",
       "org.scalatest.Assertions$class",
       "org.scalatest.selenium.WebBrowser$RadioButtonGroup$$anonfun$value$1",
       "org.scalatest.events.TestCanceled",
       "org.scalatest.Matchers$EveryCollected$",
       "org.scalatest.time.Hour$",
       "org.scalatest.selenium.WebBrowser$IdQuery",
       "org.scalatest.exceptions.StackDepth",
       "org.scalatest.words.ResultOfBeWordForAnType",
       "org.scalatest.Matchers$ResultOfFullyMatchWordForCollectedString",
       "org.scalatest.words.SortedWord",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$16",
       "org.scalatest.words.ContainWord$$anon$20$$anon$7",
       "org.scalatest.FlatSpecLike$$anonfun$1$$anon$2",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$17",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$18",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$19",
       "org.scalatest.FreeSpecLike$$anon$1",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$12",
       "org.scalatest.tools.IconEmbellishedListCellRenderer",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$13",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$14",
       "org.scalatest.tools.PresentRunStopped$",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$15",
       "org.scalatest.prop.TableFor16$$anon$16",
       "org.scalatest.words.ResultOfContainWord$$anonfun$inOrder$1",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$10",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$11",
       "org.scalatest.matchers.MatcherFactory1$AndStartWithWord",
       "org.scalatest.matchers.MatcherFactory5$$anon$26$$anon$12",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$apply$7",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$apply$6",
       "org.scalatest.events.TestFailed",
       "org.scalatest.words.NotWord$$anon$63$$anon$45",
       "org.scalatest.tools.Framework$$anonfun$1$$anonfun$apply$9",
       "org.scalatest.tools.PresentMarkupProvided",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$108$$anonfun$apply$27",
       "org.scalatest.words.ContainWord$$anon$25$$anon$12$$anonfun$toString$9",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$20",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$21",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldBe$22",
       "org.scalatest.prop.TableFor11$$anonfun$apply$51",
       "org.scalatest.prop.TableFor11$$anonfun$apply$52",
       "org.scalatest.PropSpecLike$$anonfun$run$1",
       "org.scalatest.tools.DashboardReporter$$anonfun$org$scalatest$tools$DashboardReporter$$getOldRegression$1$1",
       "org.scalatest.PathMessageRecordingAlerter$$anon$3",
       "org.scalatest.testng.TestNGSuiteLike$MyTestListenerAdapter",
       "org.scalatest.Suites",
       "org.scalatest.matchers.MatcherFactory1$",
       "org.scalactic.Snapshot",
       "org.scalatest.enablers.Length$$anon$8",
       "org.scalatest.enablers.Length$$anon$9",
       "org.scalatest.exceptions.StackDepthException",
       "org.scalatest.PartialFunctionValues$Valuable",
       "org.scalatest.enablers.Length$$anon$2",
       "org.scalactic.NormMethods$",
       "org.scalatest.enablers.Length$$anon$3",
       "org.scalatest.matchers.MatcherFactory4$$anon$17$$anon$1",
       "org.scalatest.enablers.Length$$anon$1",
       "org.scalatest.MustMatchers$ResultOfIncludeWordForCollectedString$$anonfun$checkRegex$2",
       "org.scalatest.enablers.Length$$anon$6",
       "org.scalatest.enablers.Length$$anon$7",
       "org.scalatest.enablers.Length$$anon$4",
       "org.scalatest.matchers.Matcher$OrContainWord",
       "org.scalatest.enablers.Length$$anon$5",
       "org.scalatest.DocSpecLike$MarkupSnippet$",
       "org.scalatest.enablers.Slicing$",
       "org.scalatest.matchers.AMatcher$$anon$1",
       "org.scalatest.matchers.MatcherFactory5$$anon$17",
       "org.scalatest.matchers.MatcherFactory5$$anon$18",
       "org.scalatest.matchers.MatcherFactory5$$anon$15",
       "org.scalatest.matchers.MatcherFactory5$$anon$16",
       "org.scalatest.matchers.MatcherFactory2$",
       "org.scalatest.matchers.TypeMatcherHelper",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$inOrder$1",
       "org.scalatest.BeforeAndAfterAll$$anonfun$run$1",
       "org.scalatest.tagobjects.HtmlUnitBrowser$",
       "org.scalatest.prop.TableFor1$$anon$1$$anonfun$apply$4",
       "org.scalatest.selenium.WebBrowser$$anonfun$multiSel$1",
       "org.scalatest.prop.TableFor1$$anon$1$$anonfun$apply$5",
       "org.scalatest.words.ResultOfContainWord$$anonfun$only$1",
       "org.scalatest.FlatSpecLike$IgnoreVerbStringTaggedAs",
       "org.scalatest.matchers.MatcherFactory5$$anon$19",
       "org.scalatest.matchers.MatcherFactory3$$anon$19$$anon$1",
       "org.scalatest.testng.SingleTestAnnotationTransformer",
       "org.scalatest.matchers.MatcherFactory8$AndHaveWord",
       "org.scalatest.matchers.MatcherFactory5$$anon$24",
       "org.scalatest.matchers.MatcherFactory5$$anon$25",
       "org.scalatest.matchers.MatcherFactory6$OrStartWithWord",
       "org.scalatest.Suite$NoArgTest",
       "org.scalatest.matchers.MatcherFactory5$$anon$22",
       "org.scalatest.matchers.MatcherFactory5$$anon$23",
       "org.scalatest.prop.TableFor20$$anonfun$newBuilder$20",
       "org.scalatest.tools.RunnerJFrame$RerunnerThread$$anonfun$run$2",
       "org.scalatest.matchers.MatcherFactory5$$anon$26",
       "org.scalatest.matchers.BePropertyMatcher$",
       "org.scalatest.matchers.MatcherFactory5$$anon$20",
       "org.scalatest.tools.SuiteConfig",
       "org.scalactic.Accumulation$$anon$1$$anonfun$1",
       "org.scalatest.matchers.MatcherFactory5$$anon$21",
       "org.scalatest.tools.SuiteDiscoveryHelper$$anonfun$org$scalatest$tools$SuiteDiscoveryHelper$$listFilesInDir$1$1",
       "org.scalatest.selenium.WebBrowser$$anonfun$textArea$1",
       "org.scalatest.Transformer$",
       "org.scalatest.InspectorsHelper$$anonfun$doForAll$1",
       "org.scalatest.tools.AnsiYellow$",
       "org.scalatest.tools.FriendlyParamsTranslator$$anonfun$translateCompound$1",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$endWith$2",
       "org.scalatest.MustMatchers$ResultOfNotWordForCollectedAny$$anonfun$endWith$1",
       "org.scalactic.UnquotedString",
       "org.scalatest.FlatSpecLike",
       "org.scalatest.CompileMacro$$typecreator20$1",
       "org.scalatest.tagobjects.Retryable",
       "org.scalatest.matchers.Matcher$AndFullyMatchWord",
       "org.scalatest.events.Formatter",
       "org.scalatest.words.NotWord$$anon$54$$anon$36",
       "org.scalactic.RequirementsMacro$$anonfun$3",
       "org.scalactic.RequirementsMacro$$anonfun$4",
       "org.scalatest.prop.GeneratorDrivenPropertyChecks$$anonfun$122$$anonfun$apply$29",
       "org.scalatest.StatefulStatus$$anonfun$setCompleted$2",
       "org.scalatest.PathMessageRecordingAlerter$",
       "org.scalatest.selenium.WebBrowser$MultiSelOptionSeq$$anonfun$$minus$1",
       "org.scalatest.PrivateMethodTester$PrivateMethod$",
       "org.scalatest.StreamlinedXmlNormMethods",
       "org.scalatest.tools.PresentScopeClosed$",
       "org.scalatest.MatchersHelper",
       "org.scalatest.AbstractSuite",
       "org.scalatest.prop.TableFor3$$anon$3",
       "org.scalatest.matchers.MatcherFactory5$",
       "org.scalatest.selenium.WebBrowser$TelField",
       "org.scalatest.Failed$$anonfun$apply$1",
       "org.scalatest.Matchers$ResultOfBeWordForCollectedAny$$anonfun$a$2",
       "org.scalatest.Matchers$ResultOfBeWordForCollectedAny$$anonfun$a$1",
       "org.scalatest.Failed$$anonfun$apply$2",
       "org.scalactic.Good",
       "org.scalatest.matchers.MatcherFactory6Macro",
       "org.scalatest.matchers.MidSentenceNegatedFailureMessage$",
       "org.scalatest.concurrent.TimeoutTask",
       "org.scalatest.events.NoteProvided",
       "org.scalatest.tools.SuiteParam",
       "org.scalatest.prop.TableFor4$$anonfun$newBuilder$4",
       "org.scalatest.events.ScopeOpened$",
       "org.scalatest.ConcurrentAlerter$",
       "org.scalatest.FlatSpecLike$TheyVerbString",
       "org.scalatest.matchers.MatcherFactory6$",
       "org.scalatest.words.MatcherWords$$anon$2$$anon$1",
       "org.scalatest.prop.TableFor10$$anon$10",
       "org.scalatest.BeforeAndAfterEachTestData$class",
       "org.scalatest.selenium.WebBrowser$Checkbox",
       "org.scalatest.CompileMacro$$treecreator13$1",
       "org.scalatest.tools.RerunningState$",
       "org.scalatest.selenium.WebBrowser$$anonfun$dateTimeLocalField$1",
       "org.scalatest.enablers.Sortable$$anon$3",
       "org.scalatest.enablers.Sortable$$anon$2",
       "org.scalatest.tools.DistributedTestRunnerSuite",
       "org.scalatest.enablers.Sortable$$anon$4",
       "org.scalatest.matchers.MatcherFactory7$OrNotWord$$anon$10",
       "org.scalatest.enablers.Sortable$$anon$1",
       "org.scalatest.matchers.MatcherFactory3$",
       "org.scalatest.prop.TableFor3",
       "org.scalatest.prop.TableFor2",
       "org.scalatest.prop.TableFor5",
       "org.scalatest.prop.TableFor4",
       "org.scalatest.MustMatchers$EveryCollected$",
       "org.scalatest.prop.TableFor1",
       "org.scalatest.prop.TableFor10$$anonfun$apply$47$$anonfun$apply$48",
       "org.scalatest.selenium.WebBrowser$DefaultContentTarget",
       "org.scalatest.SpecLike$$anonfun$2",
       "org.scalatest.prop.TableFor7",
       "org.scalatest.tools.HtmlReporter$$anonfun$getSuiteHtml$1",
       "org.scalatest.prop.TableFor6",
       "org.scalatest.tools.HtmlReporter$$anonfun$getSuiteHtml$2",
       "org.scalatest.TestRerunner",
       "org.scalatest.prop.TableFor9",
       "org.scalatest.prop.TableFor8",
       "org.scalactic.TripleEqualsSupport$TripleEqualsInvocationOnSpread$",
       "org.scalactic.TypeCheckedLegacyTripleEquals",
       "org.scalatest.tools.PresentScopePending",
       "org.scalatest.words.ArrayWrapper",
       "org.scalatest.words.NotWord$$anon$58$$anon$40$$anonfun$apply$4",
       "org.scalatest.Slowpoke$",
       "org.scalatest.DistributedSuiteSorter",
       "org.scalatest.fixture.FlatSpecLike$IgnoreVerbStringTaggedAs",
       "org.scalatest.FunSuiteLike$class",
       "org.scalatest.matchers.MatcherFactory4$",
       "org.scalatest.Canceled",
       "org.scalatest.tools.PresentTestIgnored$",
       "org.scalactic.Constraint",
       "org.scalatest.tagobjects.Retryable$",
       "org.scalatest.Informer$class",
       "org.scalatest.fixture.SpecLike$$anonfun$getMethodTags$1$3",
       "org.scalatest.enablers.KeyMapping",
       "org.scalatest.selenium.WebBrowser$DateTimeField$$anonfun$7",
       "org.scalatest.fixture.SpecLike$$anonfun$getMethodTags$1$1",
       "org.scalatest.tools.Durations$$anonfun$3",
       "org.scalatest.fixture.SpecLike$$anonfun$getMethodTags$1$2",
       "org.scalatest.prop.TableFor5$$anon$5$$anonfun$apply$24",
       "org.scalatest.prop.TableFor5$$anon$5$$anonfun$apply$25",
       "org.scalatest.tools.Durations$$anonfun$1",
       "org.scalatest.tools.Durations$$anonfun$2",
       "org.scalatest.matchers.MatcherFactory3$OrEndWithWord",
       "org.scalatest.matchers.MatcherFactory5$$anon$15$$anon$1",
       "org.scalatest.tools.SuiteRunner$$anonfun$run$1",
       "org.scalatest.tools.StringReporter$$anonfun$5$$anonfun$apply$2",
       "org.scalatest.events.Event$EventXmlHelper$",
       "org.scalatest.prop.package",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$include$1",
       "org.scalatest.words.JavaMapWrapper$$anon$1",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny$$anonfun$include$2",
       "org.scalatest.OneInstancePerTest",
       "org.scalatest.selenium.WebBrowser$Query$$anonfun$element$1",
       "org.scalatest.words.ContainWord$$anon$23$$anon$10",
       "org.scalatest.fixture.FreeSpecLike$$anonfun$runTests$1",
       "org.scalatest.matchers.MatcherFactory6$AndNotWord",
       "org.scalatest.matchers.HavePropertyMatchResult",
       "org.scalatest.matchers.MatcherFactory6$$anon$13$$anon$1",
       "org.scalatest.matchers.MatcherFactory7$$anon$11$$anon$1",
       "org.scalactic.Accumulation$Accumulatable",
       "org.scalatest.junit.MyRunListener",
       "org.scalatest.concurrent.Conductor$Clock$$anonfun$currentBeat$1",
       "org.scalatest.MustMatchers$ResultOfContainWordForCollectedAny$$anonfun$noneOf$1",
       "org.scalatest.tools.ScalaTestAntTask$$anonfun$addConfiguredTestNGSuites$1",
       "org.scalatest.Assertions$",
       "org.scalatest.words.ResultOfInOrderOnlyApplication",
       "org.scalatest.concurrent.AbstractPatienceConfiguration$class",
       "org.scalatest.matchers.MatcherFactory7$",
       "org.scalatest.prop.Configuration$$anon$1$$anon$2",
       "org.scalatest.PathEngine$$anonfun$isInTargetPath$1",
       "org.scalatest.words.HaveWord",
       "org.scalatest.SequentialNestedSuiteExecution",
       "org.scalatest.fixture.Transformer$",
       "org.scalatest.words.ResultOfContainWord",
       "org.scalatest.selenium.WebBrowser$WindowTarget$$anonfun$switch$5",
       "org.scalatest.matchers.Matcher$",
       "org.scalatest.tools.PresentRunStarting",
       "org.scalatest.matchers.MatchPatternHelper$",
       "org.scalatest.Matchers$ResultOfNotWordForCollectedAny",
       "org.scalatest.matchers.MatcherFactory8$",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldEqual$2",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldEqual$3",
       "org.scalatest.tools.FilterInfoProvided",
       "org.scalatest.enablers.Aggregating$$anon$3$$anonfun$containsAtLeastOneOf$3",
       "org.scalatest.Matchers$ResultOfCollectedAny$$anonfun$shouldEqual$1",
       "org.scalatest.PathMessageRecordingAlerter",
       "org.scalatest.FeatureSpec"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "org.scala-lang:scala-reflect:jar:2.11.2:test",
        "coordinates": "org.scala-lang:scala-reflect:2.11.2",
        "groupId": "org.scala-lang",
        "artifactId": "scala-reflect",
        "version": "2.11.2",
        "scope": "test",
        "packaging": "jar",
        "omitted": false,
        "size": 4391629,
        "type": "transitive",
        "status": "bloated",
        "parent": "org.scalatest:scalatest_2.11:jar:2.2.4:test",
        "allTypes": [
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple11$1",
         "scala.reflect.api.JavaUniverse$class",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaVanillaMethodMirror",
         "scala.reflect.io.URLZipArchive$EmptyFileEntry$1",
         "scala.reflect.api.Trees$MatchExtractor",
         "scala.reflect.internal.util.FreshNameCreator$",
         "scala.reflect.api.Trees$ImportSelectorApi",
         "scala.reflect.internal.AnnotationInfos$Annotatable$class",
         "scala.reflect.api.Annotations$AnnotationApi$class",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$JavaRepeatedParamClass$1",
         "scala.reflect.internal.Types$ExistentialType$",
         "scala.reflect.internal.Trees$ThisSubstituter",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$toString$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple21$1",
         "scala.reflect.internal.transform.Erasure$JavaErasureMap",
         "scala.reflect.macros.Enclosures$EnclosureException",
         "scala.reflect.api.Liftables$Unliftable$$anon$2",
         "scala.reflect.internal.Definitions$class",
         "scala.reflect.internal.Kinds$KindErrors$$anonfun$errorMessage$1",
         "scala.reflect.internal.Kinds$KindErrors$$anonfun$errorMessage$3",
         "scala.reflect.internal.Kinds$KindErrors$$anonfun$errorMessage$2",
         "scala.reflect.io.AbstractFile$$anonfun$lookupPathUnchecked$1",
         "scala.reflect.internal.Chars$class",
         "scala.reflect.internal.Printers$FootnoteIndex$Footnotes",
         "scala.reflect.internal.Types$ClassInfoType$$anonfun$computeRefs$1",
         "scala.reflect.internal.TypeDebugging$typeDebug$str$$anonfun$tparams$1",
         "scala.reflect.api.Internals$FreeTermSymbolApi",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$typeOfMemberNamedApply$1",
         "scala.reflect.internal.TypeDebugging$noPrint$",
         "scala.reflect.internal.transform.Transforms$$anonfun$2$$anon$3",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$maxDepth$1",
         "scala.reflect.internal.Types$RefinementTypeRef",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anon$1$$anonfun$7",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$dropConcreteParents$1$1",
         "scala.reflect.internal.StdAttachments$SubpatternsAttachment",
         "scala.reflect.internal.Positions$$anonfun$validate$1$3",
         "scala.reflect.internal.Positions",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticValFrom$",
         "scala.reflect.internal.Positions$$anonfun$validate$1$2",
         "scala.reflect.internal.Positions$$anonfun$validate$1$5",
         "scala.reflect.internal.util.AbstractFileClassLoader$$anon$1$$anon$2",
         "scala.reflect.api.Symbols$TypeSymbolApi$class",
         "scala.reflect.internal.Positions$$anonfun$validate$1$4",
         "scala.reflect.internal.Types$$anonfun$isSubArgs$1",
         "scala.reflect.internal.Printers$FootnoteIndex$Footnotes$$anonfun$classFootnotes$1",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printValueParams$1$$anonfun$apply$mcV$sp$4",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$caseFieldAccessors$1$$anonfun$apply$2",
         "scala.reflect.internal.Types$$anonfun$isSubArgs$2",
         "scala.reflect.internal.Positions$$anonfun$validate$1$1",
         "scala.reflect.internal.AnnotationInfos$Annotatable$$anonfun$removeAnnotation$1",
         "scala.reflect.internal.Mode",
         "scala.reflect.internal.tpe.TypeMaps$SubstTypeMap",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printValueParams$1$$anonfun$apply$mcV$sp$1",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$wildcardArgsString$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$elimHigherOrderTypeParam$1$1",
         "scala.reflect.internal.Symbols$TypeHistory$$anonfun$toString$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$fullyInitializeType$2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaInstanceMirror",
         "scala.reflect.internal.Positions$$anonfun$validate$1$6",
         "scala.reflect.api.Exprs$Expr$",
         "scala.reflect.internal.TreeInfo$WildcardStarArg$",
         "scala.reflect.internal.HasFlags",
         "scala.reflect.internal.util.InternalPositionImpl$class",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$resolveSelect$1",
         "scala.reflect.api.Mirrors$class",
         "scala.reflect.api.Trees$TreeCopierOps",
         "scala.reflect.api.Internals$InternalApi$DecoratorApi$TreeDecoratorApi",
         "scala.reflect.api.Trees$FunctionApi",
         "scala.reflect.internal.Trees$Duplicator",
         "scala.reflect.io.Streamable$Bytes$$anonfun$bytes$1",
         "scala.reflect.internal.Mirrors$Roots",
         "scala.reflect.internal.Trees$$anonfun$newDefDef$default$5$1",
         "scala.reflect.internal.Trees$MemberDef",
         "scala.reflect.internal.TreeInfo$$anonfun$preSuperFields$1",
         "scala.reflect.api.Annotations$NestedArgumentExtractor",
         "scala.reflect.internal.Kinds$Kind$",
         "scala.reflect.api.Trees$SelectExtractor",
         "scala.reflect.internal.SymbolTable$$anonfun$1",
         "scala.reflect.internal.Types$TypeVar",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$isSerializable$1",
         "scala.reflect.internal.util.Statistics$StackableTimer",
         "scala.reflect.internal.util.Statistics$SubTimer",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_undoLog$1",
         "scala.reflect.api.TypeTags$WeakTypeTagImpl",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$forAll$1",
         "scala.reflect.io.Streamable",
         "scala.reflect.internal.TreesStats$",
         "scala.reflect.api.TypeTags$class",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticApplied$",
         "scala.reflect.internal.Symbols$$anonfun$deriveSymbols2$1",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$class",
         "scala.reflect.internal.transform.Transforms$$anonfun$1",
         "scala.reflect.internal.tpe.TypeConstraints$UndoLog$$anonfun$clear$1",
         "scala.reflect.internal.Trees$NameTree$class",
         "scala.reflect.internal.Types$AppliedTypeVar$$anonfun$params$2",
         "scala.reflect.api.Trees$TypeDefApi",
         "scala.reflect.api.Internals$ReificationSupportApi$UnliftListOfListsElementwise",
         "scala.reflect.internal.TypesStats$",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$UnqualifiedOwners$1",
         "scala.reflect.internal.Symbols$RefinementClassSymbol$$anonfun$hasTransOwner$1",
         "scala.reflect.internal.Types$AntiPolyType$",
         "scala.reflect.internal.util.RangePosition",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$disambiguate$1$1",
         "scala.reflect.internal.ExistentialsAndSkolems$$anonfun$existentialTransform$1$$anonfun$apply$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaVanillaMethodMirror4",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaVanillaMethodMirror3",
         "scala.reflect.internal.Symbols$AliasTypeSymbol",
         "scala.reflect.internal.Types$RecoverableCyclicReference",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaVanillaMethodMirror2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaVanillaMethodMirror1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaVanillaMethodMirror0",
         "scala.reflect.internal.BaseTypeSeqsStats$",
         "scala.reflect.internal.Trees$FilterTreeTraverser",
         "scala.reflect.internal.Names$TypeName",
         "scala.reflect.api.Internals$InternalApi$DecoratorApi$class",
         "scala.reflect.internal.Types$RewrappingTypeProxy$class",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple20$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$ByNameParamClass$1",
         "scala.reflect.internal.Symbols$RefinementClassSymbol",
         "scala.reflect.api.Types$CompoundTypeApi",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$modsAccepted$1$1",
         "scala.reflect.internal.AnnotationInfos$Annotatable$$anonfun$throwsAnnotations$1",
         "scala.reflect.internal.util.HasClassPath",
         "scala.reflect.internal.Definitions$DefinitionsClass$RunDefinitions",
         "scala.reflect.internal.SymbolPairs$Cursor",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap$annotationArgRewriter$",
         "scala.reflect.runtime.package",
         "scala.reflect.api.StandardNames$TypeNamesApi",
         "scala.reflect.api.Constants",
         "scala.reflect.internal.Symbols$StubSymbol$class",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$scala$reflect$internal$Types$ExistentialType$$isQuantified$1$2",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$scala$reflect$internal$Types$ExistentialType$$isQuantified$1$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readExtSymbol$1$1$$anonfun$apply$1$$anonfun$apply$2$$anonfun$apply$3",
         "scala.reflect.api.Internals$InternalApi$DecoratorApi$SymbolDecoratorApi",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformMemberDefs$1",
         "scala.reflect.internal.util.Statistics$SubCounter",
         "scala.reflect.internal.Types$TypeRef$$anonfun$isGround$1",
         "scala.reflect.internal.transform.Erasure$GenericArray$",
         "scala.reflect.io.Directory$$anonfun$deepList$1$$anonfun$apply$1",
         "scala.reflect.api.Trees$SelectFromTypeTreeApi",
         "scala.reflect.internal.util.Origins$$anonfun$1$$anonfun$apply$mcV$sp$1",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap$$anonfun$captureThis$1",
         "scala.reflect.internal.SymbolTable$perRunCaches$",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple4$1",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple3$1",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$scala$reflect$internal$Trees$TreeContextApiImpl$$subtrees$1$1",
         "scala.reflect.internal.Types$UniqueType",
         "scala.reflect.runtime.TwoWayCaches$class",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticBlockExtractor",
         "scala.reflect.internal.Trees$Ident",
         "scala.reflect.internal.Types$UniqueThisType",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$getterMemberTypes$1",
         "scala.reflect.internal.Types$SubType",
         "scala.reflect.internal.settings.MutableSettings$SettingValue$class",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$primitiveGetClassMethods$1",
         "scala.reflect.internal.tpe.TypeMaps$wildcardToTypeVarMap$",
         "scala.reflect.internal.Symbols$$anonfun$deriveSymbols$1",
         "scala.reflect.internal.util.WeakHashSet$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticPartialFunction$",
         "scala.reflect.internal.StdNames",
         "scala.reflect.api.TypeTags",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_skolemizationLevel$1",
         "scala.reflect.internal.AnnotationCheckers$$anonfun$adaptBoundsToAnnotations$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$NameSelector$",
         "scala.reflect.api.Mirror",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$mkPackageStat$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$unboxedValueClass$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$unboxedValueClass$2",
         "scala.reflect.api.TypeTags$TypeTag$class",
         "scala.reflect.internal.Symbols$NoSymbol$$anonfun$owner$1",
         "scala.reflect.internal.transform.Erasure$scalaErasure$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$toAnnotArg$ConstantArg$",
         "scala.reflect.api.Internals$FreeTypeSymbolApi",
         "scala.reflect.internal.TypeDebugging$typeDebug$$anonfun$ptTypeParams$1",
         "scala.reflect.internal.Trees$PackageDef$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$classToJava$1",
         "scala.reflect.io.ManifestResources$$anon$1",
         "scala.reflect.internal.Types$$anonfun$defineBaseTypeSeqOfCompoundType$3",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$TypeParamCompleter$$anonfun$complete$2",
         "scala.reflect.internal.Types$$anonfun$defineBaseTypeSeqOfCompoundType$2",
         "scala.reflect.internal.Types$$anonfun$defineBaseTypeSeqOfCompoundType$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaClassMirror",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticPackageObjectDefExtractor",
         "scala.reflect.io.Path$$anonfun$scala$reflect$io$Path$$deleteRecursively$1",
         "scala.reflect.api.Trees$ExistentialTypeTreeApi",
         "scala.reflect.internal.BaseTypeSeqs",
         "scala.reflect.internal.Symbols$CyclicReference",
         "scala.reflect.internal.ExistentialsAndSkolems$$anonfun$existentialTransform$1",
         "scala.reflect.internal.Trees$TreeStackTraverser$class",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$sealedDescendants$1",
         "scala.reflect.api.Trees$DefDefExtractor",
         "scala.reflect.internal.tpe.TypeMaps$TypeMap$$anonfun$mapOverAnnotations$1",
         "scala.reflect.internal.Types$TypeBounds",
         "scala.reflect.api.Trees$ImportSelectorExtractor",
         "scala.reflect.internal.transform.RefChecks",
         "scala.reflect.internal.Trees$ChangeOwnerTraverser",
         "scala.reflect.api.Trees$SelectApi",
         "scala.reflect.io.AbstractFile",
         "scala.reflect.api.Trees$NameTreeApi",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$changeOwner$1",
         "scala.reflect.internal.Variances$VarianceValidator$ValidateVarianceMap$$anonfun$mapOver$1",
         "scala.reflect.runtime.SynchronizedSymbols$$anonfun$connectModuleToClass$1",
         "scala.reflect.api.Printers$TreePrinter",
         "scala.reflect.internal.Kinds$KindErrors$$anonfun$scala$reflect$internal$Kinds$KindErrors$$strictnessMessage$1",
         "scala.reflect.api.Trees$TryExtractor",
         "scala.reflect.runtime.Settings$MultiStringSetting",
         "scala.reflect.internal.Types$$anonfun$symTypeDepth$1",
         "scala.reflect.internal.Types$AnnotatedType$$anonfun$27",
         "scala.reflect.api.Trees$CaseDefExtractor",
         "scala.reflect.runtime.package$",
         "scala.reflect.internal.AnnotationCheckers$$anonfun$annotationsGlb$1",
         "scala.reflect.internal.Types$CompoundType",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$constructorToScala1$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$TypeParamCompleter$$anonfun$complete$1",
         "scala.reflect.internal.Types$$anonfun$existentialAbstraction$1$$anonfun$apply$11",
         "scala.reflect.internal.Positions$ValidateException",
         "scala.reflect.internal.TreeInfo$Applied",
         "scala.reflect.runtime.ReflectSetup$class",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anonfun$typeSignature$1",
         "scala.reflect.api.StandardDefinitions$DefinitionsApi$class",
         "scala.reflect.internal.util.Origins$OriginId$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$typeParamToScala$1",
         "scala.reflect.api.Symbols$ModuleSymbolApi",
         "scala.reflect.api.Quasiquotes$class",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$mkCases$1",
         "scala.reflect.internal.tpe.CommonOwners$CommonOwnerMap",
         "scala.reflect.macros.whitebox.Context",
         "scala.reflect.internal.Printers$$anonfun$show$2",
         "scala.reflect.internal.Printers$$anonfun$show$1",
         "scala.reflect.internal.ExistentialsAndSkolems$class",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnitClassRef$",
         "scala.reflect.internal.Positions$Range$",
         "scala.reflect.macros.Typers$class",
         "scala.reflect.internal.tpe.TypeMaps",
         "scala.reflect.internal.Trees$Return$",
         "scala.reflect.runtime.ReflectionUtils$EnclosedInClass$$anonfun$$lessinit$greater$3",
         "scala.reflect.internal.Trees$DefDef",
         "scala.reflect.internal.tpe.TypeConstraints$class",
         "scala.reflect.internal.Importers$$anon$2",
         "scala.reflect.internal.Importers$$anon$3",
         "scala.reflect.api.Trees$class",
         "scala.reflect.internal.Variances",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$19",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticFunctionTypeExtractor",
         "scala.reflect.api.TreeCreator",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$printProduct$default$4$1",
         "scala.reflect.internal.Trees$Function",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$3",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$4",
         "scala.reflect.internal.Scopes$LookupSucceeded$",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$15",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$16",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$17",
         "scala.reflect.internal.Trees$Select",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$18",
         "scala.reflect.runtime.SynchronizedTypes$class",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$22",
         "scala.reflect.io.FileOperationException$",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticForExtractor",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$23",
         "scala.reflect.internal.Scopes$LookupInaccessible$",
         "scala.reflect.internal.Types$RefinedType",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$5",
         "scala.reflect.internal.Types$RecoverableCyclicReference$",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$6",
         "scala.reflect.internal.Required$class",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$LazyPolyType",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$7",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$20",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$21",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$4",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap$$anonfun$captureSkolems$1",
         "scala.reflect.internal.transform.Transforms$$anonfun$2",
         "scala.reflect.internal.transform.Transforms$$anonfun$3",
         "scala.reflect.internal.transform.Transforms$$anonfun$4",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap$$anonfun$captureSkolems$2",
         "scala.reflect.api.Trees$TreeApi$class",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftSet$1",
         "scala.reflect.internal.tpe.TypeMaps$KeepOnlyTypeConstraints$class",
         "scala.reflect.internal.Symbols$FreeSymbol",
         "scala.reflect.internal.AnnotationInfos$Annotatable",
         "scala.reflect.internal.Mirrors$Roots$EmptyPackage",
         "scala.reflect.internal.tpe.TypeMaps$TypeTraverserWithResult",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anonfun$unsafeTypeParams$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$RunDefinitions$$anonfun$unboxMethod$1",
         "scala.reflect.internal.Types$PolyType",
         "scala.reflect.api.Annotations$JavaArgumentApi",
         "scala.reflect.internal.Trees$PackageDef",
         "scala.reflect.internal.TreeGen$$anonfun$6",
         "scala.reflect.internal.TreeGen$$anonfun$5",
         "scala.reflect.internal.AnnotationInfos$LazyAnnotationInfo",
         "scala.reflect.internal.Definitions$DefinitionsClass$RunDefinitions$SubtreeType$",
         "scala.reflect.internal.TreeGen$$anonfun$3",
         "scala.reflect.internal.TreeGen$$anonfun$9",
         "scala.reflect.internal.TreeGen$$anonfun$8",
         "scala.reflect.internal.TreeGen$$anonfun$7",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$elimSub0$1$1",
         "scala.reflect.internal.ExistentialsAndSkolems$$anonfun$packSymbols$1",
         "scala.reflect.internal.Trees$New$",
         "scala.reflect.internal.Trees$TypeBoundsTree",
         "scala.reflect.internal.Symbols$ClassSymbol$$anonfun$derivedValueClassUnbox$1",
         "scala.reflect.internal.TreeGen$$anonfun$2",
         "scala.reflect.internal.TreeGen$$anonfun$1",
         "scala.reflect.internal.transform.Erasure$$anonfun$intersectionDominator$1",
         "scala.reflect.internal.transform.Erasure$$anonfun$intersectionDominator$2",
         "scala.reflect.internal.transform.Erasure$$anonfun$intersectionDominator$3",
         "scala.reflect.api.Trees$AssignExtractor",
         "scala.reflect.internal.StdCreators$FixedMirrorTypeCreator$",
         "scala.reflect.io.Path$",
         "scala.reflect.internal.Symbols$PackageClassSymbol",
         "scala.reflect.internal.Types$AbstractTypeRef$class",
         "scala.reflect.api.Symbols$ClassSymbolApi",
         "scala.reflect.internal.tpe.FindMembers$FindMembers",
         "scala.reflect.internal.Names$TermName_S",
         "scala.reflect.internal.Names$TermName_R",
         "scala.reflect.internal.Symbols$AbstractTypeSymbol",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$warnIfSourceLoader$1$1",
         "scala.reflect.io.VirtualDirectory",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTypes$1$1",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticAnnotatedTypeExtractor",
         "scala.reflect.internal.Kinds$TypeConKind$Argument$",
         "scala.reflect.internal.Types$$anonfun$elementExtract$1",
         "scala.reflect.internal.Symbols$FreeTypeSymbol",
         "scala.reflect.internal.SymbolsStats$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticMatch$",
         "scala.reflect.internal.Trees$$anonfun$itraverse$1",
         "scala.reflect.internal.transform.Erasure$ErasureMap",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftEither$1",
         "scala.reflect.internal.Trees$Star$",
         "scala.reflect.internal.Trees$CannotHaveAttrs",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticFor$",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple8$1",
         "scala.reflect.api.Trees$NewExtractor",
         "scala.reflect.internal.Scopes$ScopeEntry",
         "scala.reflect.internal.SymbolTable$SymLoader",
         "scala.reflect.internal.Variance$",
         "scala.reflect.api.Trees$CompoundTypeTreeExtractor",
         "scala.reflect.internal.TreeInfo$IsTrue$",
         "scala.reflect.internal.Types$Type$$anonfun$dummyArgs$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$23$$anonfun$apply$6",
         "scala.reflect.internal.StdCreators",
         "scala.reflect.internal.Trees$SelectFromTypeTree$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnCtor$",
         "scala.reflect.internal.Trees$TypeTree",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnFor$$anonfun$unapply$2",
         "scala.reflect.internal.StdNames$compactify$$anonfun$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$disambiguate$1$1$$anonfun$apply$1",
         "scala.reflect.internal.Types$$anonfun$8",
         "scala.reflect.internal.TreeGen$$anonfun$mkUnattributedRef$1",
         "scala.reflect.internal.Types$ClassInfoType$",
         "scala.reflect.internal.Types$$anonfun$7",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$jClassOps",
         "scala.reflect.internal.Types$TypeRef$$anonfun$baseTypeSeqImpl$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple12$1",
         "scala.reflect.internal.Types$TypeRef$$anonfun$baseTypeSeqImpl$2",
         "scala.reflect.runtime.TwoWayCaches$TwoWayCache",
         "scala.reflect.internal.Types$$anonfun$39",
         "scala.reflect.internal.transform.PostErasure$elimErasedValueType$",
         "scala.reflect.internal.Types$NoArgsTypeRef",
         "scala.reflect.internal.Types$$anonfun$31",
         "scala.reflect.internal.Types$$anonfun$32",
         "scala.reflect.internal.Positions$$anonfun$validate$1$4$$anonfun$apply$mcV$sp$2",
         "scala.reflect.internal.Trees$Throw$",
         "scala.reflect.internal.Types$$anonfun$33",
         "scala.reflect.internal.Positions$$anonfun$validate$1$4$$anonfun$apply$mcV$sp$3",
         "scala.reflect.internal.Types$$anonfun$34",
         "scala.reflect.internal.Types$$anonfun$35",
         "scala.reflect.internal.Types$$anonfun$36",
         "scala.reflect.internal.Types$$anonfun$37",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$MaybeTyped$",
         "scala.reflect.internal.Types$$anonfun$38",
         "scala.reflect.internal.tpe.TypeMaps$SubstMap$$anonfun$11",
         "scala.reflect.internal.JMethodOrConstructor",
         "scala.reflect.internal.Variances$VarianceValidator",
         "scala.reflect.io.Directory$$anonfun$list$1",
         "scala.reflect.internal.Types$$anonfun$30",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$JavaSerializableClass$1",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printValueParams$1",
         "scala.reflect.internal.TreeInfo$DynamicApplication$",
         "scala.reflect.internal.pickling.Translations",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$classToJava$1$$anonfun$apply$5",
         "scala.reflect.internal.Trees$TypeBoundsTree$",
         "scala.reflect.internal.util.Statistics",
         "scala.reflect.internal.Constants$class",
         "scala.reflect.internal.Mirrors$Roots$WellKnownSymbol$class",
         "scala.reflect.internal.util.Collections$$anonfun$mfind$1",
         "scala.reflect.internal.Types$$anonfun$42",
         "scala.reflect.internal.Trees$$anonfun$itransform$7",
         "scala.reflect.internal.Types$$anonfun$43",
         "scala.reflect.internal.Kinds$Kind$StringState",
         "scala.reflect.internal.Types$$anonfun$44",
         "scala.reflect.internal.StdNames$binarynme$$anonfun$toBinary$1",
         "scala.reflect.internal.Types$$anonfun$45",
         "scala.reflect.internal.Trees$$anonfun$itransform$4",
         "scala.reflect.internal.Types$$anonfun$46",
         "scala.reflect.internal.Trees$$anonfun$itransform$3",
         "scala.reflect.internal.Types$$anonfun$47",
         "scala.reflect.internal.Kinds$inferKind$InferKind",
         "scala.reflect.internal.Trees$$anonfun$itransform$6",
         "scala.reflect.internal.Types$$anonfun$48",
         "scala.reflect.runtime.TwoWayCache$SomeRef$",
         "scala.reflect.internal.Trees$$anonfun$itransform$5",
         "scala.reflect.internal.Types$$anonfun$49",
         "scala.reflect.internal.Types$AliasTypeRef$class",
         "scala.reflect.internal.Positions$PosAssigner",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$apply$1",
         "scala.reflect.internal.Types$FlagAgnosticCompleter",
         "scala.reflect.internal.Types$$anonfun$40",
         "scala.reflect.internal.TreeInfo$$anonfun$scala$reflect$internal$TreeInfo$$isLeadingPredefImport$1$1",
         "scala.reflect.internal.Types$$anonfun$41",
         "scala.reflect.internal.Types$AntiPolyType",
         "scala.reflect.internal.util.StripMarginInterpolator$$anonfun$2",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$adaptToNewRun$7$$anonfun$apply$8",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftArray$1",
         "scala.reflect.internal.Trees$$anonfun$NewFromConstructor$1",
         "scala.reflect.internal.tpe.TypeComparers$$anonfun$fourthTry$1$1",
         "scala.reflect.api.Annotations$NestedArgumentApi",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$getterIn$1",
         "scala.reflect.runtime.Settings",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftOption$1",
         "scala.reflect.api.Symbols$MethodSymbolApi",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$selectorsRef$1$1",
         "scala.reflect.internal.tpe.CommonOwners",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$excludeFromLub$1$1",
         "scala.reflect.internal.util.StripMarginInterpolator$$anonfun$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftMap$1",
         "scala.reflect.internal.Trees$Bind$",
         "scala.reflect.internal.Trees$SingletonTypeTree",
         "scala.reflect.internal.util.UndefinedPosition",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$printIterable$default$3$1",
         "scala.reflect.internal.TreesStats$$anonfun$5",
         "scala.reflect.internal.Types$ConstantType$",
         "scala.reflect.api.StandardDefinitions$DefinitionsApi$VarArityClassApi",
         "scala.reflect.api.Trees$ModuleDefApi",
         "scala.reflect.internal.Kinds$Kind$StringState$$anonfun$countByOrder$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$NameSelectorRepr$",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$substituteThis$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readNameRef$1",
         "scala.reflect.api.Types$ConstantTypeExtractor",
         "scala.reflect.internal.Definitions$ValueClassDefinitions$$anonfun$volatileRefClass$1",
         "scala.reflect.internal.Scopes",
         "scala.reflect.io.FileZipArchive",
         "scala.reflect.internal.Trees$TreeSubstituter",
         "scala.reflect.internal.util.DeprecatedPosition",
         "scala.reflect.macros.package",
         "scala.reflect.api.Internals$CompatApi$CompatibleSymbol",
         "scala.reflect.internal.util.ScalaClassLoader$class",
         "scala.reflect.runtime.JavaUniverse$$anon$1$$anon$2$$anonfun$2",
         "scala.reflect.internal.util.TableDef$Table$$anonfun$maxColWidth$1",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showAllSymbols$7$$anonfun$apply$1",
         "scala.reflect.internal.SymbolPairs",
         "scala.reflect.runtime.JavaUniverse$$anon$1$$anon$2$$anonfun$1",
         "scala.reflect.internal.tpe.TypeMaps$ContainsCollector$$anonfun$mapOver$2",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticTupleExtractor",
         "scala.reflect.macros.Universe$RunContextApi",
         "scala.reflect.api.Names$TermNameExtractor",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple16$1",
         "scala.reflect.internal.SymbolTable$perRunCaches$$anonfun$newGeneric$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticTypeApplied$",
         "scala.reflect.internal.AnnotationInfos$LiteralAnnotArg",
         "scala.reflect.api.TypeTags$WeakTypeTag",
         "scala.reflect.internal.Flags$",
         "scala.reflect.internal.StdCreators$FixedMirrorTypeCreator",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticFunctionExtractor",
         "scala.reflect.api.Trees$ValOrDefDefApi",
         "scala.reflect.internal.Names$class",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$11",
         "scala.reflect.internal.Variances$class",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$12",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$13",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$14",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$10",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnVisitor$",
         "scala.reflect.internal.util.StringOps$$anonfun$trimAllTrailingSpace$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticAssign$",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformValDefs$1",
         "scala.reflect.internal.Types$AliasNoArgsTypeRef",
         "scala.reflect.runtime.SymbolLoaders$TopClassCompleter",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticPatDef$",
         "scala.reflect.io.Streamable$Bytes$class",
         "scala.reflect.api.Mirrors$TemplateMirror",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$cloneInfo$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$RunDefinitions$TreeType$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$FlagsRepr$",
         "scala.reflect.internal.Required",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$print$3$$anonfun$apply$8",
         "scala.reflect.internal.Types$TypeBounds$",
         "scala.reflect.internal.util.FakePos",
         "scala.reflect.runtime.JavaUniverseForce$class",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$print$3$$anonfun$apply$9",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$isReferenceArray$1",
         "scala.reflect.api.Trees$StarApi",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$print$3$$anonfun$apply$3",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$print$3$$anonfun$apply$4",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$print$3$$anonfun$apply$5",
         "scala.reflect.internal.Scopes$$anonfun$newScopeWith$1",
         "scala.reflect.internal.StdNames$TermNames$raw$",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticEmptyTypeTreeExtractor",
         "scala.reflect.internal.Variances$$anonfun$varianceInTypes$1",
         "scala.reflect.api.Exprs$ExprImpl",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$print$3$$anonfun$apply$2",
         "scala.reflect.internal.Types$Type$$anonfun$skolemsExceptMethodTypeParams$1",
         "scala.reflect.runtime.JavaMirrors",
         "scala.reflect.api.Trees$ReturnExtractor",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$caseFieldAccessors$1",
         "scala.reflect.internal.Symbols$StubTermSymbol",
         "scala.reflect.internal.Symbols$SymbolOps",
         "scala.reflect.internal.Types$$anonfun$loop$1$2",
         "scala.reflect.internal.Types$$anonfun$loop$1$1",
         "scala.reflect.internal.util.DeprecatedPosition$class",
         "scala.reflect.internal.Printers$FootnoteIndex",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$baseTypeSeq$1",
         "scala.reflect.internal.Types$$anonfun$53",
         "scala.reflect.internal.Types$$anonfun$54",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$cookJavaRawInfo$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$cookJavaRawInfo$2",
         "scala.reflect.internal.Trees$$anonfun$itransform$2",
         "scala.reflect.internal.Trees$$anonfun$itransform$1",
         "scala.reflect.internal.SymbolPairs$Cursor$$anon$1",
         "scala.reflect.internal.SymbolPairs$Cursor$$anon$2",
         "scala.reflect.internal.Types$$anonfun$50",
         "scala.reflect.internal.Types$$anonfun$51",
         "scala.reflect.internal.Types$$anonfun$52",
         "scala.reflect.api.Symbols$TermSymbolApi",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$toList$1",
         "scala.reflect.api.Printers",
         "scala.reflect.runtime.SynchronizedSymbols$$anonfun$scala$reflect$runtime$SynchronizedSymbols$$_recursionTable$1",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticDefDefExtractor",
         "scala.reflect.api.Trees$ApplyApi",
         "scala.reflect.internal.Types$$anonfun$existentialAbstraction$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$importAttachments$1",
         "scala.reflect.internal.Types$NoType$",
         "scala.reflect.runtime.JavaUniverse$$anon$1$$anon$2",
         "scala.reflect.internal.Importers$StandardImporter$reverse$",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftSome$1",
         "scala.reflect.internal.TreeInfo$$anonfun$firstConstructor$1",
         "scala.reflect.macros.Universe$MacroInternalApi$MacroDecoratorApi$MacroTypeTreeDecoratorApi",
         "scala.reflect.internal.TypeConstants$",
         "scala.reflect.api.ImplicitTags",
         "scala.reflect.io.PlainDirectory",
         "scala.reflect.internal.Kinds$ProperTypeKind$",
         "scala.reflect.internal.Kinds$KindErrors$$anonfun$scala$reflect$internal$Kinds$KindErrors$$arityMessage$1",
         "scala.reflect.io.ZipArchive$DirEntry",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope",
         "scala.reflect.internal.util.Statistics$",
         "scala.reflect.internal.Kinds$inferKind$$anon$1$$anonfun$infer$1",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$isEmpty$1",
         "scala.reflect.internal.pickling.Translations$class",
         "scala.reflect.api.Trees$ImplDefApi",
         "scala.reflect.api.Trees$TermTreeApi",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$caseModule$1",
         "scala.reflect.io.URLZipArchive$FileEntry$2",
         "scala.reflect.internal.transform.Erasure",
         "scala.reflect.internal.transform.Erasure$$anonfun$specialConstructorErasure$1",
         "scala.reflect.internal.SymbolTable$perRunCaches$$anonfun$clearAll$3",
         "scala.reflect.internal.Scopes$Scope$$anonfun$mkString$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$weakLub$2",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftExpr$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$weakLub$1",
         "scala.reflect.api.Trees$Traverser$$anonfun$traverseStats$1$$anonfun$apply$1",
         "scala.reflect.api.Printers$class",
         "scala.reflect.internal.SymbolTable$perRunCaches$$anonfun$clearAll$1",
         "scala.reflect.internal.Symbols$StubClassSymbol",
         "scala.reflect.internal.Internals$SymbolTableInternal$$anonfun$subpatterns$1$$anonfun$apply$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$RunDefinitions$ExprClassOf$",
         "scala.reflect.internal.Types$MethodType$",
         "scala.reflect.internal.util.StringOps$$anonfun$oempty$1",
         "scala.reflect.internal.ReporterImpl",
         "scala.reflect.runtime.ThreadLocalStorage",
         "scala.reflect.internal.StdNames$JavaKeywords",
         "scala.reflect.macros.whitebox.Context$class",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticCompoundTypeExtractor",
         "scala.reflect.internal.Symbols$PackageObjectClassSymbol",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$getBounds$1$1",
         "scala.reflect.api.Liftables$Unliftable$",
         "scala.reflect.internal.tpe.TypeMaps$InstantiateDependentMap$UnstableArgTp$",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftSet$1$$anonfun$apply$5",
         "scala.reflect.internal.transform.Erasure$class",
         "scala.reflect.api.Printers$$anonfun$show$1",
         "scala.reflect.api.StandardDefinitions$class",
         "scala.reflect.internal.Mirrors$RootsBase$$anonfun$init$1$$anonfun$apply$1",
         "scala.reflect.internal.Precedence$",
         "scala.reflect.internal.tpe.TypeMaps$TypeMap$$anonfun$mapOverArgs$1",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$scala$reflect$internal$util$TraceSymbolActivity$$freq$1",
         "scala.reflect.runtime.SynchronizedOps",
         "scala.reflect.internal.Types$SuperType$",
         "scala.reflect.internal.util.ScriptSourceFile$$anonfun$headerLength$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$importModifiers$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$newSyntheticValueParams$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateOrRelink$1$1$$anonfun$apply$2",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticSingletonType$",
         "scala.reflect.internal.Flags$MapFlags",
         "scala.reflect.internal.Definitions$ValueClassDefinitions$$anonfun$symbolsMapFilt$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTypeRef$1",
         "scala.reflect.api.Scopes$ScopeApi",
         "scala.reflect.internal.Trees$CannotHaveAttrs$$anonfun$requireLegal$1",
         "scala.reflect.macros.Names",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$ifSym$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticForYield$",
         "scala.reflect.internal.AnnotationInfos$ScalaSigBytes",
         "scala.reflect.internal.Variances$$anonfun$inSyms$1$1",
         "scala.reflect.runtime.SymbolLoaders$class",
         "scala.reflect.internal.Types$Type$$anonfun$nonPrivateDecls$1",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformIdents$1",
         "scala.reflect.internal.tpe.TypeMaps$dropSingletonType$$anonfun$1",
         "scala.reflect.internal.Flags",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticCompoundType$",
         "scala.reflect.api.Trees$TypeBoundsTreeApi",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple16$1",
         "scala.reflect.internal.tpe.TypeConstraints$",
         "scala.reflect.internal.transform.Erasure$ErasureMap$$anonfun$apply$1",
         "scala.reflect.internal.SymbolTable$SimpleNameOrdering$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticExistentialType$",
         "scala.reflect.internal.Internals$SymbolTableInternal",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$12$$anonfun$apply$5",
         "scala.reflect.internal.Symbols$$anonfun$cloneSymbolsAtOwnerAndModify$1",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedTypeSymbol$class",
         "scala.reflect.internal.Depth$",
         "scala.reflect.internal.Scopes$Scope$$anonfun$isSubScope$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$scala$reflect$internal$Definitions$DefinitionsClass$$matchesParams$1$1",
         "scala.reflect.internal.SymbolPairs$RelativeTo",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple8$1",
         "scala.reflect.internal.transform.Erasure$javaErasure$",
         "scala.reflect.internal.util.BatchSourceFile$$anonfun$isAtEndOfLine$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnCheckIfRefutable$",
         "scala.reflect.internal.ReificationSupport",
         "scala.reflect.internal.Trees$Apply",
         "scala.reflect.internal.Trees$ApplyDynamic$",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$addBackquotes$1$3",
         "scala.reflect.internal.StdNames$TermNames$$anonfun$2",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$minSym$1",
         "scala.reflect.internal.Variances$VarianceValidator$ValidateVarianceMap$$anonfun$mapOver$1$$anonfun$apply$2",
         "scala.reflect.internal.TreeInfo$$anonfun$mapMethodParamsAndArgs$1",
         "scala.reflect.api.Trees$IfExtractor",
         "scala.reflect.api.Types$class",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readAnnots$1$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftNone$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$addBackquotes$1$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$addBackquotes$1$2",
         "scala.reflect.api.Trees$TemplateExtractor",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$methodToJava$1",
         "scala.reflect.internal.FlagSets$class",
         "scala.reflect.internal.Internals$SymbolTableInternal$changeOwnerAndModuleClassTraverser$2$",
         "scala.reflect.internal.Types$MissingAliasControl",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticTraitDef$",
         "scala.reflect.internal.Constants$Constant$",
         "scala.reflect.internal.Scopes$$anon$1",
         "scala.reflect.internal.tpe.TypeConstraints$UndoLog",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformTypeDefs$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$isFBounded$1",
         "scala.reflect.api.JavaUniverse$JavaMirror",
         "scala.reflect.internal.MissingRequirementError",
         "scala.reflect.internal.TreeInfo$$anonfun$filterBody$1$1",
         "scala.reflect.internal.Types$NonClassTypeRef",
         "scala.reflect.internal.TreeInfo$$anonfun$fail$1$1",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$freeTypes$2",
         "scala.reflect.internal.FreshNames$class",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$freeTypes$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$checkConstructorOf$1",
         "scala.reflect.runtime.JavaUniverse$$anon$1",
         "scala.reflect.internal.Types$RefinedType$",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printLabelParams$2",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printLabelParams$1",
         "scala.reflect.runtime.JavaUniverse$$anon$3",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$classToScala$1",
         "scala.reflect.api.Trees$AssignOrNamedArgExtractor",
         "scala.reflect.internal.Types$CompoundType$",
         "scala.reflect.runtime.JavaUniverse$$anon$4",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticNew$",
         "scala.reflect.internal.Reporting$RunReporting$class",
         "scala.reflect.internal.Trees$ValOrDefDef$",
         "scala.reflect.internal.BaseTypeSeqs$MappedBaseTypeSeq$$anonfun$exists$1",
         "scala.reflect.api.StandardNames",
         "scala.reflect.internal.Kinds$TypeConKind$$anonfun$buildState$2",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$isPossibleInRefinement$1",
         "scala.reflect.internal.Kinds$TypeConKind$$anonfun$buildState$3",
         "scala.reflect.internal.Types$AliasTypeRef$$anonfun$coevolveSym$1",
         "scala.reflect.internal.AnnotationInfos$NestedAnnotArg$",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$superSymbolIn$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$$anonfun$completeRest$1",
         "scala.reflect.internal.Printers$CodePrinter$EmptyTypeTree$",
         "scala.reflect.internal.util.ScriptSourceFile$",
         "scala.reflect.internal.Trees$$anonfun$traverseComponents$1$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$fbounds$1$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$MethodMetadata",
         "scala.reflect.internal.Types$RefinedType0",
         "scala.reflect.macros.Internals",
         "scala.reflect.api.Liftables$Unliftable",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$newT1NoParamsMethod$1",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$params$1",
         "scala.reflect.internal.tpe.TypeMaps$TypeMap$$anonfun$mapOverArgs$1$$anonfun$apply$2",
         "scala.reflect.internal.util.Statistics$QuantMap$$anonfun$toString$3",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticMatchExtractor",
         "scala.reflect.internal.util.Statistics$QuantMap$$anonfun$toString$2",
         "scala.reflect.internal.Trees$TermTree",
         "scala.reflect.internal.util.InternalPositionImpl",
         "scala.reflect.internal.tpe.TypeMaps$InstantiateDependentMap$StableArgTp$",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple2$1",
         "scala.reflect.internal.util.Collections$$anonfun$sequence$2",
         "scala.reflect.internal.util.Collections$$anonfun$sequence$1",
         "scala.reflect.internal.Types$SuperType",
         "scala.reflect.internal.transform.UnCurry$$anon$2$$anon$3",
         "scala.reflect.internal.Trees$Throw",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$skolemizeExistential$2",
         "scala.reflect.internal.Constants",
         "scala.reflect.internal.SymbolTable$perRunCaches$$anon$3",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$skolemizeExistential$1",
         "scala.reflect.internal.Types$RewrappingTypeProxy",
         "scala.reflect.runtime.JavaMirrors$JavaMirror",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftName$1",
         "scala.reflect.api.Internals$ReificationSupportApi$ScalaDotExtractor",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$paramTypes$1",
         "scala.reflect.macros.Aliases$class",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$spanningTypes$1",
         "scala.reflect.internal.Trees$TypeMapTreeSubstituter",
         "scala.reflect.api.package$",
         "scala.reflect.internal.Types$TypeRef$$anonfun$refinementDecls$1",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedMethodSymbol$class",
         "scala.reflect.internal.Symbols$ClassSymbol$$anonfun$6",
         "scala.reflect.internal.Symbols$ClassSymbol$$anonfun$7",
         "scala.reflect.api.Trees$TreeApi",
         "scala.reflect.internal.Types$NamedType$",
         "scala.reflect.internal.tpe.TypeMaps$TypeMap$$anonfun$mapOver$1",
         "scala.reflect.internal.transform.Transforms$class",
         "scala.reflect.internal.TypeDebugging$typeDebug$str$$anonfun$parents$1",
         "scala.reflect.internal.Types$NoCommonType",
         "scala.reflect.api.Types$PolyTypeApi",
         "scala.reflect.internal.Definitions$definitions$",
         "scala.reflect.internal.Types$AliasTypeRef",
         "scala.reflect.internal.Chars$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$constructorToScala$1",
         "scala.reflect.internal.settings.MutableSettings$",
         "scala.reflect.internal.Printers",
         "scala.reflect.internal.Symbols$Symbol$$anon$2",
         "scala.reflect.internal.Symbols$Symbol$$anon$1",
         "scala.reflect.internal.tpe.TypeComparers$SubTypePair",
         "scala.reflect.internal.Trees$Function$",
         "scala.reflect.internal.util.Collections$$anonfun$mmap$1",
         "scala.reflect.api.Types$SingleTypeExtractor",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$repeatedToSeq$1",
         "scala.reflect.internal.util.AbstractFileClassLoader$$anonfun$findAbstractDir$1",
         "scala.reflect.internal.Types$TypeError",
         "scala.reflect.internal.Types$ImportType",
         "scala.reflect.internal.util.TriState",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_basetypeRecursions$1",
         "scala.reflect.internal.ReporterImpl$Severity",
         "scala.reflect.internal.Names$$anonfun$body$1$1",
         "scala.reflect.internal.ModifierFlags",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$MaybeTypeTreeOriginal$",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple22$1",
         "scala.reflect.api.Trees$LabelDefApi",
         "scala.reflect.api.Trees$PackageDefApi",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$compose$1",
         "scala.reflect.internal.Types$FlagAssigningCompleter",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$class",
         "scala.reflect.internal.StdAttachments$BackquotedIdentifierAttachment$",
         "scala.reflect.internal.util.Origins$MultiLine$$anonfun$repString$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$13",
         "scala.reflect.runtime.Gil$class",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$12",
         "scala.reflect.internal.TypeDebugging$typeDebug$",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$15",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$14",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showAllSymbols$3",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showAllSymbols$2",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$11",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$10",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showAllSymbols$7",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticExistentialTypeExtractor",
         "scala.reflect.api.Types$RefinedTypeExtractor",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showAllSymbols$6",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showAllSymbols$5",
         "scala.reflect.macros.Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi",
         "scala.reflect.api.Printers$$anonfun$showRaw$1",
         "scala.reflect.api.Trees$ClassDefApi",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showAllSymbols$4",
         "scala.reflect.internal.util.Statistics$SubQuantity$class",
         "scala.reflect.internal.Trees$$anonfun$Try$1",
         "scala.reflect.internal.util.Statistics$TimerStack",
         "scala.reflect.api.Types$ExistentialTypeApi",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedMethodSymbol",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$checkMemberOf$1",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap$$anonfun$9",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap$$anonfun$8",
         "scala.reflect.macros.Attachments$$anonfun$get$1",
         "scala.reflect.internal.StdNames$binarynme$",
         "scala.reflect.internal.Importers$class",
         "scala.reflect.internal.Trees$TypeDef",
         "scala.reflect.io.Streamable$Chars",
         "scala.reflect.internal.tpe.TypeComparers$$anonfun$isPolySubType$1",
         "scala.reflect.api.StandardNames$class",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$18",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$19",
         "scala.reflect.internal.Symbols$ClassSymbol",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple5$1",
         "scala.reflect.internal.Trees$ClassDef$",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$numericLub$1",
         "scala.reflect.runtime.ReflectionUtils$EnclosedInConstructor$",
         "scala.reflect.internal.Trees$Literal$",
         "scala.reflect.internal.Types$$anonfun$isConsistent$1$2",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$12",
         "scala.reflect.internal.Types$$anonfun$isConsistent$1$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$13",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$fieldToJava$1",
         "scala.reflect.internal.Types$$anonfun$isConsistent$1$4",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$10",
         "scala.reflect.internal.Types$$anonfun$isConsistent$1$3",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$11",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$16",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$17",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$14",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$15",
         "scala.reflect.internal.SymbolsStats",
         "scala.reflect.internal.Trees$$anonfun$newDefDef$default$6$1",
         "scala.reflect.internal.Scopes$LookupInaccessible",
         "scala.reflect.internal.StdCreators$class",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$exists$1",
         "scala.reflect.api.Types$ThisTypeApi",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$toScala$1",
         "scala.reflect.internal.Types$Type$$anonfun$$eq$colon$eq$1",
         "scala.reflect.api.Liftables",
         "scala.reflect.internal.tpe.TypeMaps$AnnotationFilter",
         "scala.reflect.internal.FatalError$",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$isHotForTs$1$1",
         "scala.reflect.internal.Types$$anonfun$suspendingTypeVars$1",
         "scala.reflect.internal.Types$$anonfun$suspendingTypeVars$2",
         "scala.reflect.internal.Types$SingleType",
         "scala.reflect.api.TypeTags$WeakTypeTag$",
         "scala.reflect.internal.TreeGen$$anonfun$20",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple10$1",
         "scala.reflect.internal.Types$SimpleTypeProxy$class",
         "scala.reflect.internal.util.TableDef$Table$$anonfun$mkFormatString$1",
         "scala.reflect.api.Types$ClassInfoTypeApi",
         "scala.reflect.macros.Universe$MacroCompatApi$MacroCompatibleSymbol",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedTypeSymbol$$anonfun$tpe_$times$1",
         "scala.reflect.api.Trees$SingletonTypeTreeApi",
         "scala.reflect.internal.Symbols$TypeSymbol",
         "scala.reflect.io.ZipArchive$",
         "scala.reflect.runtime.ReflectionUtils$PrimitiveOrArray$",
         "scala.reflect.internal.util.TableDef$",
         "scala.reflect.internal.tpe.TypeMaps$TypeMap$TypeMapTransformer",
         "scala.reflect.internal.Symbols$SymbolKind",
         "scala.reflect.internal.tpe.TypeMaps$ExistentialExtrapolation$$anonfun$scala$reflect$internal$tpe$TypeMaps$ExistentialExtrapolation$$countOccs$1",
         "scala.reflect.internal.Trees$Try",
         "scala.reflect.internal.Definitions$DefinitionsClass$NullClass$",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printColumn$2",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printColumn$1",
         "scala.reflect.api.Trees$CaseDefApi",
         "scala.reflect.internal.AnnotationCheckers$$anonfun$addAnnotations$1",
         "scala.reflect.io.NoAbstractFile$",
         "scala.reflect.api.Symbols$ModuleSymbolApi$class",
         "scala.reflect.internal.Types$UntouchableTypeVar$class",
         "scala.reflect.api.Internals$CompatApi",
         "scala.reflect.api.Trees$ModuleDefExtractor",
         "scala.reflect.api.Types$AnnotatedTypeExtractor",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$mkParam$1$$anonfun$apply$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnMkTemplate$$anonfun$indexOfCtor$1$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnFlatMap$",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$2",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$7",
         "scala.reflect.internal.Importers$StandardImporter",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$8",
         "scala.reflect.api.Trees$ReturnApi",
         "scala.reflect.internal.Names$NameOps",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$logBounds$1$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticApplied$$anonfun$apply$2$$anonfun$apply$3",
         "scala.reflect.api.Symbols",
         "scala.reflect.internal.Symbols$StubSymbol$$anonfun$8",
         "scala.reflect.internal.Internals$$anon$2",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$implodePatDefs$",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftPrimitive$1",
         "scala.reflect.internal.Internals$$anon$4",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaAnnotationProxy$$anonfun$assocs$1",
         "scala.reflect.internal.FreshNames$FreshNameExtractor$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticFilter$",
         "scala.reflect.internal.Types$ClassUnwrapper",
         "scala.reflect.internal.util.WeakHashSet$$anon$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$newT1NullaryMethod$1",
         "scala.reflect.internal.TreeInfo$DynamicUpdate$$anonfun$$lessinit$greater$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$refinedToParents$1$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaAnnotationProxy$$anonfun$assocs$2",
         "scala.reflect.internal.Internals$$anon$1",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$copy$1",
         "scala.reflect.api.Internals$class",
         "scala.reflect.internal.util.Collections$$anonfun$distinctBy$1",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solveOne$1$5$$anonfun$apply$2",
         "scala.reflect.internal.Symbols$TypeHistory",
         "scala.reflect.api.TypeTags$PredefTypeCreator",
         "scala.reflect.api.Symbols$TermSymbolApi$$anonfun$isOverloadedMethod$1",
         "scala.reflect.runtime.SynchronizedSymbols",
         "scala.reflect.internal.Types$LazyPolyType",
         "scala.reflect.io.Streamable$",
         "scala.reflect.api.Trees$TypeApplyApi",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$RepeatedParamClass$1",
         "scala.reflect.internal.TreeInfo$SeeThroughBlocks",
         "scala.reflect.internal.Types$TypeVar$$anonfun$etaExpand$4",
         "scala.reflect.api.Trees$Traverser$$anonfun$traverseStats$1",
         "scala.reflect.internal.Types$TypeVar$$anonfun$etaExpand$3",
         "scala.reflect.runtime.SynchronizedTypes",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$matchingRestypes$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$scala$reflect$internal$Printers$CodePrinter$$printConstrParams$1$1$$anonfun$apply$mcV$sp$5",
         "scala.reflect.internal.Symbols$MethodSymbol",
         "scala.reflect.internal.Trees$InternalTreeCopierOps",
         "scala.reflect.internal.Types$TypeVar$$anonfun$containsSkolemAboveLevel$1",
         "scala.reflect.internal.Kinds$inferKind$",
         "scala.reflect.internal.NoPhase$",
         "scala.reflect.internal.Types$$anonfun$36$$anonfun$apply$12",
         "scala.reflect.internal.Trees$TreeSymSubstTraverser",
         "scala.reflect.macros.TypecheckException$",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$scala$reflect$internal$Printers$CodePrinter$$printConstrParams$1$1$$anonfun$apply$mcV$sp$2",
         "scala.reflect.internal.tpe.TypeMaps$ApproximateDependentMap$",
         "scala.reflect.api.Trees$DefDefApi",
         "scala.reflect.internal.TreeGen$patvarTransformer$",
         "scala.reflect.io.IOStats",
         "scala.reflect.internal.Kinds$Kind$Head",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple13$1",
         "scala.reflect.api.Types$NullaryMethodTypeApi",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftScalaSymbol$1",
         "scala.reflect.io.ZipArchive$Entry",
         "scala.reflect.api.Annotations$LiteralArgumentExtractor",
         "scala.reflect.internal.HasFlags$class",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showMapFreq$1",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedModuleSymbol",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showMapFreq$2",
         "scala.reflect.api.Annotations$class",
         "scala.reflect.internal.tpe.TypeComparers$$anonfun$thirdTry$1$3",
         "scala.reflect.internal.FlagSets$FlagOpsImpl",
         "scala.reflect.api.Trees$Traverser",
         "scala.reflect.internal.SymbolTable$$anonfun$arrayToRepeated$1",
         "scala.reflect.internal.tpe.TypeComparers$$anonfun$thirdTry$1$1",
         "scala.reflect.internal.Kinds$Kind$StringState$$anonfun$removeOnes$1$$anonfun$apply$7",
         "scala.reflect.internal.tpe.TypeComparers$$anonfun$thirdTry$1$2",
         "scala.reflect.internal.Trees$Block",
         "scala.reflect.api.Internals$ReificationSupportApi$class",
         "scala.reflect.internal.util.NoFile",
         "scala.reflect.api.Trees$AppliedTypeTreeExtractor",
         "scala.reflect.internal.Types$UniqueSingleType",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$jmethodAsScala$1",
         "scala.reflect.internal.util.StripMarginInterpolator",
         "scala.reflect.internal.StdNames$Keywords",
         "scala.reflect.internal.Symbols$Symbol",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo$$anonfun$constantAtIndex$1",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anonfun$info$1",
         "scala.reflect.internal.AnnotationInfos$ThrownException$",
         "scala.reflect.internal.util.InternalPositionImpl$$anonfun$$bar$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$jMemberOps",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$lubsym$1$2",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$lubsym$1$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaAnnotationProxy",
         "scala.reflect.api.Types",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$printProduct$2",
         "scala.reflect.internal.Trees$ApplyToImplicitArgs",
         "scala.reflect.internal.Trees$Try$",
         "scala.reflect.runtime.SynchronizedSymbols$$anon$7",
         "scala.reflect.internal.Types$Type$$anonfun$findMembers$1",
         "scala.reflect.runtime.SynchronizedSymbols$$anon$4",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$typeOfMemberNamedHead$1",
         "scala.reflect.internal.tpe.TypeMaps$dropSingletonType$",
         "scala.reflect.internal.Kinds$Kind$StringState$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticAnnotatedType$",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$hasJavaMainMethod$1",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$printProduct$1",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedMethodSymbol$$anonfun$typeAsMemberOf$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnMkTemplate$$anonfun$ctorArgsCorrespondToFields$1$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$ScalaMemberRef",
         "scala.reflect.io.ManifestResources",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaAnnotationProxy$",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedTypeSymbol",
         "scala.reflect.internal.Mode$$anonfun$toString$extension$1",
         "scala.reflect.api.Constants$ConstantApi",
         "scala.reflect.internal.util.Origins$MultiLine",
         "scala.reflect.api.Exprs$class",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple9$1",
         "scala.reflect.internal.TreeGen$$anonfun$mkMethodCall$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$17",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$16",
         "scala.reflect.internal.Trees$DefDef$",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$rawElem$1",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$map$1",
         "scala.reflect.internal.Trees$ImportSelector$",
         "scala.reflect.runtime.SymbolLoaders",
         "scala.reflect.internal.util.Position$",
         "scala.reflect.internal.pickling.UnPickler$Scan$LazyTypeRefAndAlias$$anonfun$completeInternal$2",
         "scala.reflect.internal.AnnotationCheckers$$anonfun$canAdaptAnnotations$1",
         "scala.reflect.internal.transform.Transforms",
         "scala.reflect.macros.Universe",
         "scala.reflect.api.Internals$ReferenceToBoxedApi",
         "scala.reflect.api.Types$MethodTypeExtractor",
         "scala.reflect.internal.Definitions$ValueClassDefinitions$$anonfun$ScalaValueClassesNoUnit$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$originalTypeTrees$2",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1$$anonfun$apply$2",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$originalTypeTrees$1",
         "scala.reflect.internal.Symbols$CyclicReference$",
         "scala.reflect.internal.TreeInfo$DynamicApplicationExtractor",
         "scala.reflect.internal.Trees$Typed",
         "scala.reflect.internal.Types$OverloadedType",
         "scala.reflect.internal.TypeDebugging$$anonfun$paramString$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$typeOfMemberNamedDrop$1",
         "scala.reflect.internal.Types$UnmappableTree$",
         "scala.reflect.api.Trees$SymTreeApi",
         "scala.reflect.internal.TreeInfo$$anonfun$mayBeTypePat$2",
         "scala.reflect.internal.Types$UniqueErasedValueType",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$$makeScalaPackage$1",
         "scala.reflect.internal.TreeInfo$$anonfun$mayBeTypePat$1",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo$$anonfun$isErroneous$1",
         "scala.reflect.internal.AnnotationInfos$ErroneousAnnotation$",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap$$anonfun$correspondingTypeArgument$2",
         "scala.reflect.internal.Variances$VarianceValidator$$anonfun$traverse$1",
         "scala.reflect.runtime.ReflectionUtils$$anonfun$unwrapHandler$1",
         "scala.reflect.internal.ClassfileConstants$FlagTranslation$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaFieldMirror",
         "scala.reflect.runtime.TwoWayCache",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$lookupAll$1",
         "scala.reflect.internal.Trees$ShallowDuplicator",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticTupleType$",
         "scala.reflect.api.Types$SingleTypeApi",
         "scala.reflect.api.Liftables$class",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$constructorToJava$1$$anonfun$26",
         "scala.reflect.internal.Trees$AppliedTypeTree",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo$$anonfun$defaultTargets$2",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$freeSyms$1",
         "scala.reflect.internal.Types$class",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftArray$1$$anonfun$apply$1",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo$$anonfun$defaultTargets$1",
         "scala.reflect.internal.ReificationSupport$class",
         "scala.reflect.internal.Importers$StandardImporter$Cache",
         "scala.reflect.internal.Flags$$anonfun$3",
         "scala.reflect.internal.Internals$SymbolTableInternal$$anon$3",
         "scala.reflect.internal.Flags$$anonfun$2",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftType$1",
         "scala.reflect.internal.Flags$$anonfun$7",
         "scala.reflect.internal.Flags$$anonfun$6",
         "scala.reflect.internal.Flags$$anonfun$4",
         "scala.reflect.internal.Trees$Block$",
         "scala.reflect.macros.Aliases",
         "scala.reflect.api.Quasiquotes$Quasiquote$api",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$22",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$23",
         "scala.reflect.internal.Positions$DefaultPosAssigner",
         "scala.reflect.internal.Types$$anonfun$scala$reflect$internal$Types$$embeddedSymbol$1",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$21",
         "scala.reflect.runtime.Settings$BooleanSetting",
         "scala.reflect.internal.Trees$Match$",
         "scala.reflect.internal.Trees$Star",
         "scala.reflect.internal.annotations.package",
         "scala.reflect.api.Printers$$anonfun$render$3",
         "scala.reflect.api.Printers$$anonfun$render$4",
         "scala.reflect.api.Printers$$anonfun$render$5",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$9$$anonfun$apply$4",
         "scala.reflect.api.Printers$$anonfun$render$6",
         "scala.reflect.internal.Types$$anonfun$appliedType$3",
         "scala.reflect.internal.Types$$anonfun$appliedType$2",
         "scala.reflect.internal.Trees$AppliedTypeTree$",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$4$$anonfun$apply$1",
         "scala.reflect.api.Printers$$anonfun$render$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$seqToRepeated$1",
         "scala.reflect.api.Printers$$anonfun$render$2",
         "scala.reflect.internal.util.BatchSourceFile$$anonfun$isEndOfLine$1",
         "scala.reflect.internal.util.package$$anonfun$shortClass$2",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticTry$",
         "scala.reflect.internal.util.package$$anonfun$shortClass$1",
         "scala.reflect.runtime.ReflectionUtils$EnclosedInPackage$",
         "scala.reflect.internal.util.TableDef$$anonfun$colFunctions$1",
         "scala.reflect.io.ZipArchive",
         "scala.reflect.api.Trees$UnApplyApi",
         "scala.reflect.internal.Types$MissingTypeControl",
         "scala.reflect.internal.Definitions$ValueClassDefinitions$$anonfun$symbolsMap$1",
         "scala.reflect.internal.Names$TermName",
         "scala.reflect.internal.settings.MutableSettings$SettingValue",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$UnimportSelectorRepr$",
         "scala.reflect.internal.Types$MalformedType",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticBlock$",
         "scala.reflect.internal.util.TableDef$$anonfun$colNames$1",
         "scala.reflect.macros.Universe$MacroInternalApi$MacroDecoratorApi$class",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$scala$reflect$api$StandardLiftables$StandardLiftableInstances$$selectScala$1",
         "scala.reflect.internal.util.package",
         "scala.reflect.internal.util.Origins$$anonfun$2",
         "scala.reflect.macros.Internals$class",
         "scala.reflect.internal.tpe.TypeMaps$ErroneousCollector$",
         "scala.reflect.runtime.ReflectionUtils$EnclosedInClass$",
         "scala.reflect.api.Internals$ReificationSupportApi",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$glb1$1$1",
         "scala.reflect.internal.util.Origins$$anonfun$1",
         "scala.reflect.runtime.JavaUniverse",
         "scala.reflect.internal.Trees$SymTree",
         "scala.reflect.internal.util.ThreeValues",
         "scala.reflect.api.Internals$ReificationSupportApi$FlagsReprExtractor",
         "scala.reflect.internal.Trees$CaseDef$",
         "scala.reflect.internal.util.package$StringContextStripMarginOps",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$freeTerms$1",
         "scala.reflect.api.Trees$IdentApi",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple19$1",
         "scala.reflect.internal.Trees$StrictTreeCopier",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$freeTerms$2",
         "scala.reflect.internal.Types$unwrapToClass$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$RenameSelector$",
         "scala.reflect.internal.ExistentialsAndSkolems$$anonfun$existentialBoundsExcludingHidden$1",
         "scala.reflect.api.Mirrors$ModuleMirror",
         "scala.reflect.internal.transform.RefChecks$class",
         "scala.reflect.internal.tpe.TypeMaps$SubstSymMap$mapTreeSymbols$",
         "scala.reflect.internal.SymbolTable$$anonfun$openPackageModule$1",
         "scala.reflect.internal.SymbolTable$$anonfun$openPackageModule$2",
         "scala.reflect.internal.Trees$Assign$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anon$2$$anonfun$8",
         "scala.reflect.api.Trees$IdentExtractor",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solveOne$1$1",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solveOne$1$2",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solveOne$1$3",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solveOne$1$4",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$defineParentsOfTypeRef$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$originalOwnerChain$1",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solveOne$1$5",
         "scala.reflect.api.Symbols$TermSymbolApi$class",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticFunction$$anonfun$apply$8",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solveOne$1$6",
         "scala.reflect.api.Trees$TypTreeApi",
         "scala.reflect.internal.JavaAccFlags$",
         "scala.reflect.internal.ModifierFlags$",
         "scala.reflect.internal.Types$JavaMethodType",
         "scala.reflect.io.Directory$$anonfun$walkFilter$1",
         "scala.reflect.api.Symbols$ClassSymbolApi$class",
         "scala.reflect.internal.SymbolTableStats$",
         "scala.reflect.api.Exprs$Expr",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnFilter$",
         "scala.reflect.internal.util.TableDef$Table$$anonfun$toFormattedSeq$1",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$print$3",
         "scala.reflect.api.Liftables$Liftable",
         "scala.reflect.internal.TreeInfo$DynamicUpdate$",
         "scala.reflect.internal.util.TraceSymbolActivity$class",
         "scala.reflect.internal.Types$ClassTypeRef$class",
         "scala.reflect.internal.AnnotationInfos$ScalaSigBytes$",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printFunction$2",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacitcSingletonTypeExtractor",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$importTree$2",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printFunction$1",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticImportExtractor",
         "scala.reflect.internal.Types$ErasedValueType$",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$modsAccepted$1$1$$anonfun$apply$6",
         "scala.reflect.internal.Types$TypeVar$$anon$1",
         "scala.reflect.internal.Types$TypeVar$$anon$2",
         "scala.reflect.internal.Types$TypeVar$$anon$3",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$importTree$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$ScalaMemberRef$$anonfun$result$1",
         "scala.reflect.internal.Types$TypeVar$$anon$4",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anon$2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anon$3",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anon$4",
         "scala.reflect.internal.Positions$$anonfun$findOverlapping$1$$anonfun$apply$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anon$5",
         "scala.reflect.internal.Trees$Import",
         "scala.reflect.internal.util.NoSourceFile$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anon$1",
         "scala.reflect.api.Trees$Transformer",
         "scala.reflect.internal.Types$$anonfun$isDummyAppliedType$1",
         "scala.reflect.internal.util.ScalaClassLoader$$anon$1",
         "scala.reflect.api.Names",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol",
         "scala.reflect.internal.StdCreators$FixedMirrorTreeCreator",
         "scala.reflect.internal.Types$AppliedTypeVar$$anonfun$typeArgs$2",
         "scala.reflect.internal.Types$UniqueSuperType",
         "scala.reflect.internal.AnnotationInfos$ScalaSigBytes$$anonfun$3",
         "scala.reflect.internal.Trees$Import$",
         "scala.reflect.internal.util.WeakHashSet$Diagnostics$$anonfun$collisionBucketsCount$1",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$scala$reflect$internal$Trees$TreeContextApiImpl$$equals0$1$1",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$typeArgs$1",
         "scala.reflect.api.Types$NullaryMethodTypeExtractor",
         "scala.reflect.internal.Trees$LazyTreeCopier",
         "scala.reflect.internal.Trees$NameTree",
         "scala.reflect.internal.tpe.TypeMaps$SubstTypeMap$trans$2$",
         "scala.reflect.api.Trees$FunctionExtractor",
         "scala.reflect.internal.util.ScriptSourceFile",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$rehash$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$mkEarlyDef$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$$anonfun$completeRest$1$$anonfun$13",
         "scala.reflect.internal.Trees",
         "scala.reflect.api.Names$NameApi",
         "scala.reflect.internal.Definitions$DefinitionsClass$VarArityClass$",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$isHotForTs$1$1$$anonfun$apply$4",
         "scala.reflect.internal.Types$Type$$anonfun$4",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_pendingSubTypes$1",
         "scala.reflect.internal.Types$Type$$anonfun$2",
         "scala.reflect.macros.package$",
         "scala.reflect.internal.Types$$anonfun$isSameTypes$1",
         "scala.reflect.macros.Universe$MacroInternalApi$MacroDecoratorApi",
         "scala.reflect.internal.Types$ModuleTypeRef",
         "scala.reflect.api.Types$TypeApi",
         "scala.reflect.internal.Types$LazyType",
         "scala.reflect.internal.transform.Erasure$$anonfun$unboundedGenericArrayLevel$2",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticTraitDefExtractor",
         "scala.reflect.internal.transform.Erasure$$anonfun$unboundedGenericArrayLevel$1",
         "scala.reflect.internal.Types$Type$$anonfun$6",
         "scala.reflect.internal.Scopes$Scope$$anonfun$scala$reflect$internal$Scopes$Scope$$alts_s$1$1",
         "scala.reflect.internal.Trees$$anonfun$traverseMemberDef$1$1",
         "scala.reflect.internal.Symbols$$anonfun$cloneSymbols$1",
         "scala.reflect.internal.transform.PostErasure$class",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$isArrayOfSymbol$1",
         "scala.reflect.api.Symbols$MethodSymbolApi$class",
         "scala.reflect.internal.Scopes$NameLookup$class",
         "scala.reflect.internal.Types$Type$$anonfun$findMember$1",
         "scala.reflect.api.Trees$ImportApi",
         "scala.reflect.internal.Types$unwrapWrapperTypes$",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple17$1",
         "scala.reflect.internal.Kinds$inferKind$$anon$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$WildcardSelectorRepr$",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$print$1",
         "scala.reflect.internal.tpe.GlbLubs",
         "scala.reflect.internal.Printers$FootnoteIndex$Footnotes$$anonfun$get$1$$anonfun$apply$7",
         "scala.reflect.internal.TreeInfo$$anonfun$isWarnableSymbol$1$1",
         "scala.reflect.internal.Constants$Constant",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticFunction$",
         "scala.reflect.internal.util.AbstractFileClassLoader$$anonfun$getPackage$1",
         "scala.reflect.internal.TypeDebugging$$anonfun$typeParamsString$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$matchingBounds$1",
         "scala.reflect.api.Annotations$LiteralArgumentApi",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftLeft$1",
         "scala.reflect.internal.SymbolTable$$anon$1",
         "scala.reflect.internal.Symbols$MethodSymbol$$anonfun$exceptions$1",
         "scala.reflect.internal.Symbols$class",
         "scala.reflect.internal.util.InternalPositionImpl$$anonfun$escaped$1$1",
         "scala.reflect.internal.util.InternalPositionImpl$$anonfun$escaped$1$2",
         "scala.reflect.runtime.ReflectionUtils$",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$extendedOverriddenSymbols$2",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$companionClass$1",
         "scala.reflect.internal.tpe.TypeMaps$InstantiateDependentMap$treeTrans$2$",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTypeTag$1",
         "scala.reflect.internal.Mirrors",
         "scala.reflect.internal.SymbolTable$$anon$2",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$extendedOverriddenSymbols$1",
         "scala.reflect.internal.Trees$This$",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$9",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$7",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftConstant$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$8",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$5",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$6",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticFunctionType$",
         "scala.reflect.internal.util.ScalaClassLoader",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$3",
         "scala.reflect.internal.TreeInfo$$anonfun$recoverBody$1$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$4",
         "scala.reflect.macros.NonemptyAttachments",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$1",
         "scala.reflect.internal.Types$ClassInfoType$enterRefs$$anonfun$apply$3",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$2",
         "scala.reflect.internal.Types$ClassInfoType$enterRefs$$anonfun$apply$2",
         "scala.reflect.internal.Kinds$KindErrors$",
         "scala.reflect.internal.AnnotationCheckers$AnnotationChecker$class",
         "scala.reflect.api.Trees$TemplateApi",
         "scala.reflect.internal.TreeGen$$anonfun$matchVarPattern$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$20",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$21",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$22",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$23",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$24",
         "scala.reflect.internal.Types$$anonfun$importableMembers$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$scala$reflect$internal$Printers$CodePrinter$$printConstrParams$1$1",
         "scala.reflect.api.Trees$NewApi",
         "scala.reflect.api.Types$BoundedWildcardTypeApi",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnMap$",
         "scala.reflect.runtime.TwoWayCaches$TwoWayCache$$anonfun$enter$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$Object_isInstanceOf$1",
         "scala.reflect.internal.tpe.TypeMaps$ForEachTypeTraverser",
         "scala.reflect.internal.tpe.TypeToStrings",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBounds0$1",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBounds0$2",
         "scala.reflect.internal.Mirrors$Roots$RootClass",
         "scala.reflect.macros.Reifiers$class",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformCaseDefs$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$TupleClassRef$",
         "scala.reflect.internal.tpe.TypeToStrings$class",
         "scala.reflect.internal.Types$TypeVar$$anonfun$scala$reflect$internal$Types$TypeVar$$unifyFull$1$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$12",
         "scala.reflect.io.File$$anonfun$writeAll$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$$anonfun$completeRest$1$$anonfun$apply$mcV$sp$2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$17",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$defineBaseTypeSeqOfTypeRef$1",
         "scala.reflect.internal.pickling.ByteCodecs$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$18",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$scala$reflect$internal$pickling$UnPickler$Scan$$readArrayAnnot$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$19",
         "scala.reflect.internal.util.Origins$$anonfun$total$1",
         "scala.reflect.internal.Types$Type$$anonfun$asSeenFrom$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$findRecursiveBounds$3$$anonfun$apply$2",
         "scala.reflect.api.Annotations$AnnotationExtractor",
         "scala.reflect.io.VirtualFile$$anon$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$findRecursiveBounds$3$$anonfun$apply$3",
         "scala.reflect.internal.util.HashSet",
         "scala.reflect.internal.Types$UniqueTypeBounds",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$$anonfun$completeRest$1$$anonfun$apply$mcV$sp$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$ArrayModule_apply$1",
         "scala.reflect.internal.Kinds$KindErrors$$anonfun$scala$reflect$internal$Kinds$KindErrors$$varianceMessage$1",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple15$1",
         "scala.reflect.api.Trees$ValDefExtractor",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaTransformingMethodMirror$$anonfun$apply$2",
         "scala.reflect.internal.Trees$Tree",
         "scala.reflect.internal.util.TableDef$$anonfun$sepWidths$1",
         "scala.reflect.internal.TreeGen$$anonfun$18",
         "scala.reflect.internal.TreeGen$$anonfun$19",
         "scala.reflect.internal.TreeGen$$anonfun$16",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnForeach$",
         "scala.reflect.internal.TreeGen$$anonfun$17",
         "scala.reflect.internal.Trees$Assign",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$lookup$1$$anonfun$14",
         "scala.reflect.internal.TreesStats",
         "scala.reflect.internal.tpe.CommonOwners$class",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$maybeReadSymbol$1",
         "scala.reflect.internal.util.WeakHashSet",
         "scala.reflect.internal.TreeGen$$anonfun$14",
         "scala.reflect.internal.TreeGen$$anonfun$15",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticAssignExtractor",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$MaybeUnchecked$",
         "scala.reflect.internal.TreeGen$$anonfun$12",
         "scala.reflect.internal.TreeGen$$anonfun$13",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$findRecursiveBounds$3",
         "scala.reflect.internal.ClassfileConstants$",
         "scala.reflect.internal.TreeGen$$anonfun$11",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$findRecursiveBounds$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$findRecursiveBounds$2",
         "scala.reflect.internal.tpe.TypeConstraints",
         "scala.reflect.internal.util.StripMarginInterpolator$class",
         "scala.reflect.api.Trees$SingletonTypeTreeExtractor",
         "scala.reflect.internal.util.DefinedPosition",
         "scala.reflect.internal.transform.UnCurry",
         "scala.reflect.internal.TreeInfo$Unapplied$",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readClassfileAnnotArg$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readClassfileAnnotArg$3",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$isNotOverridden$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readClassfileAnnotArg$2",
         "scala.reflect.io.ManifestResources$$anonfun$2",
         "scala.reflect.internal.util.TableDef",
         "scala.reflect.io.ManifestResources$$anonfun$3",
         "scala.reflect.api.Mirrors$RuntimeClassApi",
         "scala.reflect.io.Directory$$anonfun$deepList$2$$anonfun$apply$2",
         "scala.reflect.internal.transform.Transforms$$anonfun$1$$anon$4",
         "scala.reflect.api.Types$RefinedTypeApi",
         "scala.reflect.internal.tpe.TypeMaps$SubstMap$$anonfun$renameBoundSyms$1",
         "scala.reflect.internal.Scopes$EmptyScope$",
         "scala.reflect.io.ManifestResources$FileEntry$3",
         "scala.reflect.internal.tpe.TypeMaps$SubstMap$$anonfun$renameBoundSyms$3",
         "scala.reflect.internal.tpe.TypeMaps$SubstMap$$anonfun$renameBoundSyms$2",
         "scala.reflect.internal.Constants$Constant$$anonfun$escape$1$1",
         "scala.reflect.api.Types$PolyTypeExtractor",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$isOverridingSymbol$1",
         "scala.reflect.api.Trees$TypeApplyExtractor",
         "scala.reflect.internal.AnnotationInfos$LiteralAnnotArg$",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$classBound$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$classBound$2",
         "scala.reflect.api.Types$TypeRefExtractor",
         "scala.reflect.runtime.JavaMirrors$JavaClassCompleter",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnSyntheticParam$",
         "scala.reflect.internal.Trees$ClassDef$$anonfun$apply$3",
         "scala.reflect.internal.ExistentialsAndSkolems$Deskolemizer$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$logicallyEnclosingMember$1",
         "scala.reflect.internal.Trees$Bind",
         "scala.reflect.api.Trees$TypeDefExtractor",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$mkAnnotation$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticClassDef$",
         "scala.reflect.internal.BaseTypeSeqs$MappedBaseTypeSeq$$anonfun$maxDepthOfElems$2",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$lub0$1$3",
         "scala.reflect.internal.util.Statistics$QuantMap",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$lub0$1$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$lub0$1$2",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformStats$2",
         "scala.reflect.internal.Types$ClassInfoType$$anonfun$scala$reflect$internal$Types$ClassInfoType$$propagate$1",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1",
         "scala.reflect.internal.Types$ClassInfoType$$anonfun$scala$reflect$internal$Types$ClassInfoType$$propagate$3",
         "scala.reflect.internal.Types$ClassInfoType$$anonfun$scala$reflect$internal$Types$ClassInfoType$$propagate$2",
         "scala.reflect.internal.Types$ClassInfoType$$anonfun$scala$reflect$internal$Types$ClassInfoType$$propagate$4",
         "scala.reflect.runtime.HasJavaClass",
         "scala.reflect.internal.Trees$ArrayValue",
         "scala.reflect.internal.Printers$FootnoteIndex$$anonfun$scala$reflect$internal$Printers$FootnoteIndex$$classIndex$1",
         "scala.reflect.macros.Enclosures$EnclosureException$",
         "scala.reflect.api.Internals$InternalApi$DecoratorApi",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticPartialFunctionExtractor",
         "scala.reflect.internal.Definitions$ValueClassDefinitions",
         "scala.reflect.internal.Types$TypeVar$$anonfun$registerBound$1",
         "scala.reflect.internal.Types$TypeVar$$anonfun$registerBound$2",
         "scala.reflect.io.AbstractFile$",
         "scala.reflect.internal.Types$TypeVar$$anonfun$registerBound$3",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftVector$1$$anonfun$apply$2",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticValEq$",
         "scala.reflect.api.Trees$AnnotatedApi",
         "scala.reflect.internal.SymbolPairs$SymbolPair$",
         "scala.reflect.internal.Variances$$anonfun$inTypes$1$1",
         "scala.reflect.internal.tpe.TypeMaps$IsDependentCollector$",
         "scala.reflect.internal.util.Statistics$$anonfun$allQuantities$3$$anonfun$apply$1",
         "scala.reflect.api.TypeCreator",
         "scala.reflect.internal.util.Statistics$$anonfun$allQuantities$3$$anonfun$apply$2",
         "scala.reflect.internal.tpe.TypeMaps$TypeMap$$anonfun$applyToSymbolInfo$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$LazyTypeRef$$anonfun$6",
         "scala.reflect.internal.Printers$TreePrinter",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$2",
         "scala.reflect.internal.util.ScalaClassLoader$",
         "scala.reflect.internal.Scopes$Scope$$anonfun$lookupModule$1",
         "scala.reflect.internal.JMethodOrConstructor$",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple7$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftNil$1",
         "scala.reflect.macros.Internals$ContextInternalApi$TypingTransformApi",
         "scala.reflect.internal.tpe.TypeMaps$FindTypeCollector",
         "scala.reflect.internal.Trees$Modifiers$$anonfun$hasAnnotationNamed$1",
         "scala.reflect.internal.StdNames$TermNames",
         "scala.reflect.internal.AnnotationInfos$ArrayAnnotArg$",
         "scala.reflect.internal.pickling.UnPickler$Scan$LazyTypeRefAndAlias$$anonfun$completeInternal$2$$anonfun$apply$5",
         "scala.reflect.internal.Trees$LabelDef",
         "scala.reflect.internal.Trees$ForeachPartialTreeTraverser",
         "scala.reflect.internal.util.HashSet$$anon$1",
         "scala.reflect.internal.Importers$StandardImporter$$anon$1$$anonfun$complete$1",
         "scala.reflect.internal.SymbolTable$$anonfun$phase_$eq$1",
         "scala.reflect.api.Internals$InternalApi",
         "scala.reflect.runtime.ReflectSetup",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$5",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$6",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$recordNewSymbolOwner$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$3",
         "scala.reflect.internal.util.NoFile$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$4",
         "scala.reflect.internal.TreeInfo$$anonfun$filterBody$1$1$$anonfun$apply$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$7",
         "scala.reflect.internal.SymbolPairs$Cursor$$anonfun$init$2",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$scala$reflect$internal$Definitions$DefinitionsClass$$contributesAbstractMembers$1$1",
         "scala.reflect.api.Trees$SuperApi",
         "scala.reflect.api.Trees$ThisExtractor",
         "scala.reflect.internal.Trees$$anonfun$1",
         "scala.reflect.internal.AnnotationInfos$Annotatable$$anonfun$staticAnnotations$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$38",
         "scala.reflect.runtime.SymbolLoaders$PackageScope$$anonfun$lookupEntry$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$36",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$37",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$34",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$35",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$32",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$33",
         "scala.reflect.macros.Universe$MacroInternalApi$MacroDecoratorApi$MacroSymbolDecoratorApi",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$30",
         "scala.reflect.internal.Types$TypeBounds$$anonfun$safeToString$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$31",
         "scala.reflect.internal.Types$WildcardType$",
         "scala.reflect.api.Trees$AppliedTypeTreeApi",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo$$anonfun$symbolArg$1",
         "scala.reflect.internal.Types$$anon$6",
         "scala.reflect.api.Annotations$AnnotationApi",
         "scala.reflect.internal.StdAttachments$PlainAttachment$class",
         "scala.reflect.internal.Mirrors$Roots$EmptyPackageClass",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple22$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntheticUnit$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticSelectType$",
         "scala.reflect.internal.util.TableDef$Column$",
         "scala.reflect.api.Names$class",
         "scala.reflect.api.Universe",
         "scala.reflect.api.Types$SuperTypeExtractor",
         "scala.reflect.internal.SymbolTable$$anonfun$devWarningDumpStack$1",
         "scala.reflect.internal.FreshNames$FreshNameExtractor",
         "scala.reflect.internal.ClassfileConstants$FlagTranslation",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readModifiersRef$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$29",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$27",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$lateMap$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticValDef$",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$25",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$26",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$23",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$24",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$21",
         "scala.reflect.io.PlainFile$$anonfun$iterator$3",
         "scala.reflect.internal.Variances$VarianceValidator$ValidateVarianceMap$$anonfun$isUncheckedVariance$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$22",
         "scala.reflect.internal.Symbols$SymbolOps$",
         "scala.reflect.internal.Trees$CompoundTypeTree",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$20",
         "scala.reflect.io.PlainFile$$anonfun$iterator$4",
         "scala.reflect.internal.util.AbstractFileClassLoader$$anon$1",
         "scala.reflect.runtime.JavaUniverse$treeInfo$",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solveOne$1$3$$anonfun$apply$1",
         "scala.reflect.io.Path$$anonfun$walk$1",
         "scala.reflect.runtime.SymbolLoaders$PackageScope$$anonfun$lookupEntry$1$$anonfun$apply$1",
         "scala.reflect.internal.Types$$anonfun$typeVarsInType$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple2$1",
         "scala.reflect.io.Streamable$Bytes$$anonfun$bytesAsInts$2",
         "scala.reflect.runtime.SymbolLoaders$LazyPackageType",
         "scala.reflect.io.Streamable$Bytes$$anonfun$bytesAsInts$1",
         "scala.reflect.internal.util.StringOps$$anonfun$lcp$1$2",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$20",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$maybeInitialize$1",
         "scala.reflect.internal.util.StringOps$$anonfun$lcp$1$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$9",
         "scala.reflect.api.Trees$TypedExtractor",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$8",
         "scala.reflect.internal.FlagSets",
         "scala.reflect.internal.util.Origins$",
         "scala.reflect.internal.Types$ClassInfoType$$anonfun$scala$reflect$internal$Types$ClassInfoType$$propagate$4$$anonfun$apply$6",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaMethodMirror",
         "scala.reflect.api.Internals",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$1",
         "scala.reflect.api.Names$TypeNameApi",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$3",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$2",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$5",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$4",
         "scala.reflect.runtime.SymbolLoaders$PackageScope$$anonfun$lookupEntry$1$$anonfun$apply$2",
         "scala.reflect.api.StandardLiftables$stdnme$",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$7",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$isRecursive$1$1",
         "scala.reflect.io.ZipArchive$$anonfun$scala$reflect$io$ZipArchive$$walkIterator$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$6",
         "scala.reflect.api.Internals$Importer",
         "scala.reflect.internal.tpe.FindMembers$FindMemberBase",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printImport$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$parentSymbols$1",
         "scala.reflect.internal.Types$$anon$7",
         "scala.reflect.runtime.JavaUniverse$$anon$3$$anonfun$info0$1",
         "scala.reflect.internal.tpe.TypeComparers$class",
         "scala.reflect.internal.Positions$$anonfun$wrappingPos$2",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$12",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$toAnnotArg$AnnotationClass$",
         "scala.reflect.internal.Positions$$anonfun$wrappingPos$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$13",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$10",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$11",
         "scala.reflect.internal.Symbols$$anonfun$cloneSymbolsAndModify$1",
         "scala.reflect.internal.Symbols$StubSymbol",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticValEqExtractor",
         "scala.reflect.internal.Trees$TreeContextApiImpl",
         "scala.reflect.macros.Universe$MacroCompatApi",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$18",
         "scala.reflect.internal.Kinds$TypeConKind",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$19",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$6$$anonfun$apply$mcV$sp$3",
         "scala.reflect.api.Internals$InternalApi$DecoratorApi$TypeDecoratorApi",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$16",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$17",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$14",
         "scala.reflect.internal.Types$RefinedType$$anonfun$scala$reflect$internal$Types$RefinedType$$flatten$1$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$processTreePrinting$15",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readExtSymbol$1$1$$anonfun$apply$1",
         "scala.reflect.api.Trees$ExistentialTypeTreeExtractor",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnMkTemplate$$anonfun$unapply$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readConstantRef$1",
         "scala.reflect.io.URLZipArchive",
         "scala.reflect.internal.util.Collections",
         "scala.reflect.api.StandardDefinitions",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple10$1",
         "scala.reflect.internal.TreeInfo$StripCast$",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBoundsHK$1$2",
         "scala.reflect.internal.TypeDebugging",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBoundsHK$1$1",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$apply$9",
         "scala.reflect.internal.Types$ThisType",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformValDefss$1",
         "scala.reflect.runtime.SynchronizedSymbols$$anon$16",
         "scala.reflect.internal.Types$TypeRef$$anonfun$needsPreString$1",
         "scala.reflect.internal.tpe.TypeMaps$ContainsCollector",
         "scala.reflect.internal.util.Origins$$anonfun$lookup$1",
         "scala.reflect.internal.StdAttachments",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBoundsHK$1$4",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBoundsHK$1$3",
         "scala.reflect.api.Trees$ThrowApi",
         "scala.reflect.internal.StdAttachments$CompoundTypeTreeOriginalAttachment",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnPatSeqWithRes$",
         "scala.reflect.internal.Types$ErrorType$",
         "scala.reflect.internal.Trees$TreeReplacer",
         "scala.reflect.api.Quasiquotes$Quasiquote$fq$",
         "scala.reflect.internal.StdNames$$anon$1",
         "scala.reflect.internal.Printers$FootnoteIndex$Footnotes$$anonfun$1",
         "scala.reflect.api.Internals$ReferenceToBoxedExtractor",
         "scala.reflect.internal.Symbols$TypeHistory$",
         "scala.reflect.runtime.SymbolLoaders$PackageScope",
         "scala.reflect.internal.AnnotationInfos$class",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$removeLaterObjects$1",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$freeSyms$1$$anonfun$apply$1",
         "scala.reflect.internal.SymbolTable$$anonfun$logResult$1",
         "scala.reflect.internal.Symbols$FreeTermSymbol",
         "scala.reflect.internal.Trees$ExistentialTypeTree$",
         "scala.reflect.internal.Trees$TreeSymSubstituter",
         "scala.reflect.internal.tpe.TypeMaps$TypeTraverser",
         "scala.reflect.api.Mirrors$ReflectiveMirror",
         "scala.reflect.internal.Positions$$anonfun$findOverlapping$1",
         "scala.reflect.runtime.ReflectionUtils$EnclosedInPackage$$anonfun$$lessinit$greater$4",
         "scala.reflect.internal.util.Origins$OneLine",
         "scala.reflect.internal.Trees$Alternative$",
         "scala.reflect.api.Constants$ConstantExtractor",
         "scala.reflect.internal.FlagSets$Flag$",
         "scala.reflect.internal.Types$TypeRef$$anonfun$refinementString$1",
         "scala.reflect.internal.tpe.TypeConstraints$UndoPair$",
         "scala.reflect.internal.Symbols$$anonfun$existingSymbols$1",
         "scala.reflect.internal.Trees$ReferenceToBoxed$",
         "scala.reflect.internal.Types$SimpleTypeProxy",
         "scala.reflect.internal.Types$UntouchableTypeVar",
         "scala.reflect.internal.Positions$$anonfun$solidDescendants$1",
         "scala.reflect.io.Path",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnFor$",
         "scala.reflect.io.AbstractFile$$anonfun$lookup$2",
         "scala.reflect.api.Types$SingletonTypeApi",
         "scala.reflect.internal.Trees$Return",
         "scala.reflect.io.AbstractFile$$anonfun$lookup$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$ComparableClass$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$importAnnotArg$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$cloneSymbol$1",
         "scala.reflect.internal.SymbolTable$$anonfun$debugStack$1",
         "scala.reflect.internal.Trees$Match",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$isStraightApplication$1",
         "scala.reflect.internal.Types$AbstractTypeRef",
         "scala.reflect.internal.InfoTransformers$InfoTransformer$$anonfun$insert$2",
         "scala.reflect.internal.util.Statistics$RelCounter",
         "scala.reflect.internal.Trees$TypeApply",
         "scala.reflect.internal.settings.AbsSettings$class",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaModuleMirror",
         "scala.reflect.internal.Symbols$NoSymbol",
         "scala.reflect.internal.Definitions$DefinitionsClass",
         "scala.reflect.internal.Trees$CaseDef",
         "scala.reflect.io.NoAbstractFile",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple14$1",
         "scala.reflect.internal.Trees$Super$",
         "scala.reflect.internal.Printers$FootnoteIndex$Footnotes$$anonfun$get$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnPatSeq$$anonfun$9",
         "scala.reflect.internal.Trees$ChangeOwnerTraverser$$anonfun$traverse$2",
         "scala.reflect.io.Directory$$anonfun$deepList$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$ImplicitParams$",
         "scala.reflect.internal.Trees$ChangeOwnerTraverser$$anonfun$traverse$1",
         "scala.reflect.io.Directory$$anonfun$deepList$2",
         "scala.reflect.api.Printers$BooleanFlag",
         "scala.reflect.internal.Kinds$Kind$ScalaNotation",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$10",
         "scala.reflect.internal.tpe.TypeMaps$AnnotationFilter$class",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_intersectionWitness$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticSelectTerm$",
         "scala.reflect.internal.util.Collections$$anonfun$mforeach$1",
         "scala.reflect.internal.util.Collections$$anonfun$mforeach$2",
         "scala.reflect.api.Trees$TypeTreeExtractor",
         "scala.reflect.internal.Mirrors$Roots$RootSymbol$class",
         "scala.reflect.internal.Trees$TreeTypeSubstituter",
         "scala.reflect.api.Trees$ModifiersExtractor",
         "scala.reflect.internal.SymbolTable$$anonfun$debuglogResult$1",
         "scala.reflect.internal.Trees$GenericApply",
         "scala.reflect.internal.Trees$TypTree",
         "scala.reflect.internal.tpe.TypeMaps$ExistentialExtrapolation$$anonfun$apply$4",
         "scala.reflect.api.Trees$RefTreeExtractor",
         "scala.reflect.internal.TreeInfo$$anonfun$foreachMethodParamAndArg$1",
         "scala.reflect.internal.Chars",
         "scala.reflect.internal.tpe.TypeMaps$InstantiateDependentMap$StabilizedArgTp$",
         "scala.reflect.internal.Trees$ModuleDef",
         "scala.reflect.internal.StdAttachments$ImportableAttachment",
         "scala.reflect.internal.SymbolTable$traceSymbols$",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$12",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$13",
         "scala.reflect.internal.Types$substTypeMapCache$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$mkMethodMirror$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$mkMethodMirror$2",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticTuple$",
         "scala.reflect.internal.Trees$EmptyTree$",
         "scala.reflect.runtime.JavaMirrors$class",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticPatDefExtractor",
         "scala.reflect.internal.ClassfileConstants",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$jclassAsScala$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$toAnnotArg$",
         "scala.reflect.internal.Positions$$anonfun$isOverlapping$1$1",
         "scala.reflect.internal.Types$$anonfun$isJavaVarargsAncestor$1",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$2",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple6$1",
         "scala.reflect.api.Exprs",
         "scala.reflect.runtime.JavaMirrors$$anonfun$missingHook$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$BytecodelessMethodMirror",
         "scala.reflect.internal.InfoTransformers",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$38$$anonfun$apply$10",
         "scala.reflect.api.Position",
         "scala.reflect.internal.util.TraceSymbolActivity",
         "scala.reflect.internal.Trees$Template$",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$8",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$7",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showHeader$1",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$9",
         "scala.reflect.api.StandardLiftables",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$4",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$3",
         "scala.reflect.internal.Trees$ForeachTreeTraverser",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformModifiers$1",
         "scala.reflect.api.Trees$ValDefApi",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$6",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$5",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticAppliedType$",
         "scala.reflect.internal.tpe.TypeMaps$ExistentialExtrapolation",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anonfun$typeSymbol$1",
         "scala.reflect.runtime.ThreadLocalStorage$class",
         "scala.reflect.internal.transform.Erasure$specialScalaErasure$",
         "scala.reflect.internal.Types$ClassInfoType$$anonfun$computeRefs$1$$anonfun$apply$4",
         "scala.reflect.runtime.SymbolTable$class",
         "scala.reflect.runtime.Gil",
         "scala.reflect.internal.transform.Erasure$$anonfun$transformInfo$1",
         "scala.reflect.internal.PrivateWithin$class",
         "scala.reflect.internal.transform.Transforms$Lazy",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$TypeParamCompleter",
         "scala.reflect.macros.ReificationException",
         "scala.reflect.api.Liftables$Liftable$",
         "scala.reflect.internal.Trees$Alternative",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$9",
         "scala.reflect.api.Trees$AnnotatedExtractor",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$7",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$8",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$5",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$toAnnotArg$ArrayClass$",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$6",
         "scala.reflect.internal.Types$AnnotatedType",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$3",
         "scala.reflect.internal.Symbols$ModuleClassSymbol",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readAnnotArg$1",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$4",
         "scala.reflect.internal.Definitions$DefinitionsClass$RunDefinitions$$anonfun$boxMethod$1",
         "scala.reflect.internal.Trees$UnderConstructionTransformer",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$1",
         "scala.reflect.internal.pickling.PickleBuffer",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$2",
         "scala.reflect.internal.Scopes$LookupAmbiguous",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$unpickleClass$1",
         "scala.reflect.internal.MissingRequirementError$",
         "scala.reflect.internal.TreeInfo$$anonfun$hasUntypedPreSuperFields$1",
         "scala.reflect.internal.Printers$CodePrinter",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$defineBaseClassesOfCompoundType$1",
         "scala.reflect.api.Types$ThisTypeExtractor",
         "scala.reflect.macros.Universe$MacroInternalApi$class",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$class",
         "scala.reflect.internal.Types$RepeatedType",
         "scala.reflect.internal.Internals$SymbolTableInternal$$anonfun$subpatterns$1",
         "scala.reflect.internal.Trees$ArrayValue$",
         "scala.reflect.internal.Trees$$anonfun$New$1",
         "scala.reflect.internal.StdNames$CommonNames",
         "scala.reflect.api.Scopes",
         "scala.reflect.api.Internals$ReificationSupportApi$UnliftListElementwise",
         "scala.reflect.internal.util.Collections$$anonfun$mforall$1",
         "scala.reflect.internal.Trees$CompoundTypeTree$",
         "scala.reflect.api.Trees$TypedApi",
         "scala.reflect.internal.ExistentialsAndSkolems$$anonfun$3",
         "scala.reflect.internal.ExistentialsAndSkolems$$anonfun$4",
         "scala.reflect.runtime.JavaMirrors$$anonfun$runtimeMirror$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$constrParamAccessors$1",
         "scala.reflect.internal.annotations.package$",
         "scala.reflect.internal.util.BatchSourceFile",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticTermIdent$",
         "scala.reflect.internal.Types$ExistentialType",
         "scala.reflect.internal.StdAttachments$CompoundTypeTreeOriginalAttachment$",
         "scala.reflect.api.Trees$DefTreeApi",
         "scala.reflect.api.Types$TypeBoundsExtractor",
         "scala.reflect.internal.Mirrors$RootsBase$$anonfun$missingHook$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$18",
         "scala.reflect.internal.ExistentialsAndSkolems$$anonfun$2",
         "scala.reflect.internal.Scopes$$anon$1$$anonfun$2",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$16",
         "scala.reflect.internal.Scopes$$anon$1$$anonfun$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$17",
         "scala.reflect.api.Trees$ModifiersApi",
         "scala.reflect.internal.Importers$StandardImporter$reverse$$anonfun$2",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$14",
         "scala.reflect.internal.Importers$StandardImporter$reverse$$anonfun$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$15",
         "scala.reflect.internal.Importers$StandardImporter$reverse$$anonfun$4",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$12",
         "scala.reflect.macros.UnexpectedReificationException",
         "scala.reflect.internal.Importers$StandardImporter$reverse$$anonfun$3",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$13",
         "scala.reflect.api.Annotations",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$10",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$11",
         "scala.reflect.internal.util.WeakHashSet$Diagnostics$$anonfun$fullyValidate$3",
         "scala.reflect.internal.util.WeakHashSet$Diagnostics$$anonfun$fullyValidate$2",
         "scala.reflect.internal.util.WeakHashSet$Diagnostics$$anonfun$fullyValidate$1",
         "scala.reflect.internal.Trees$SelectFromTypeTree",
         "scala.reflect.internal.settings.AbsSettings",
         "scala.reflect.internal.Symbols$ModuleSymbol$$anonfun$companionClass$2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$unpickleClass$2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$unpickleClass$3",
         "scala.reflect.internal.util.Statistics$View",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$children$1",
         "scala.reflect.internal.Types$TypeApiImpl",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$willViolateRecursiveBounds$1$$anonfun$6",
         "scala.reflect.internal.StdNames$tpnme$",
         "scala.reflect.internal.Types$Type",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$printProduct$default$2$1",
         "scala.reflect.internal.ReporterImpl$WARNING$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticApplied$$anonfun$apply$2",
         "scala.reflect.internal.Scopes$Scope$$anonfun$lookupUnshadowedEntries$1",
         "scala.reflect.internal.util.TableDef$$anonfun$colApply$1",
         "scala.reflect.internal.transform.Erasure$boxingErasure$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$MaybeSelectApply$",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$26$$anonfun$apply$7",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$defineUnderlyingOfSingleType$1",
         "scala.reflect.internal.Reporter",
         "scala.reflect.api.Trees$StarExtractor",
         "scala.reflect.internal.Variance$$anonfun$fold$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$MethodMetadata$$anonfun$8",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$$anonfun$12",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$MethodMetadata$$anonfun$9",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$$anonfun$11",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple18$1",
         "scala.reflect.internal.util.BatchSourceFile$$anonfun$isLineBreak$1",
         "scala.reflect.io.PlainFile",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$$anonfun$completeRest$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$5",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$toList$2",
         "scala.reflect.internal.ReporterImpl$INFO$",
         "scala.reflect.internal.tpe.TypeMaps$TypeCollector",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$$anonfun$completeRest$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$3",
         "scala.reflect.internal.Types$NonClassTypeRef$class",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$$anonfun$completeRest$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$4",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$name_$eq$2",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap$$anonfun$scala$reflect$internal$tpe$TypeMaps$AsSeenFromMap$$explain$1$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftList$1$$anonfun$apply$3",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$name_$eq$1",
         "scala.reflect.internal.Trees$AssignOrNamedArg",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_lubResults$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$1",
         "scala.reflect.internal.util.Origins$$anonfun$apply$1",
         "scala.reflect.internal.settings.MutableSettings",
         "scala.reflect.internal.util.Origins$$anonfun$apply$2",
         "scala.reflect.internal.TreeInfo$DynamicApplicationNamed$",
         "scala.reflect.api.FlagSets$FlagValues",
         "scala.reflect.internal.Names$Name",
         "scala.reflect.internal.Kinds",
         "scala.reflect.internal.tpe.TypeToStrings$$anonfun$typeToString$1",
         "scala.reflect.internal.Types$$anonfun$inheritsJavaVarArgsMethod$1",
         "scala.reflect.internal.tpe.TypeMaps$SubstWildcardMap",
         "scala.reflect.internal.util.ScalaClassLoader$$anonfun$run$1",
         "scala.reflect.internal.util.SourceFile",
         "scala.reflect.macros.Universe$CompilationUnitContextApi",
         "scala.reflect.internal.SymbolTableStats",
         "scala.reflect.api.Internals$CompatApi$CompatibleTree",
         "scala.reflect.runtime.SynchronizedOps$$anon$3",
         "scala.reflect.runtime.SynchronizedOps$$anon$1",
         "scala.reflect.runtime.SymbolLoaders$TopClassCompleter$$anonfun$complete$1",
         "scala.reflect.runtime.SymbolLoaders$TopClassCompleter$$anonfun$complete$2",
         "scala.reflect.internal.Types$ImportType$",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$2",
         "scala.reflect.internal.Trees$ImplDef",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$3",
         "scala.reflect.internal.TreeInfo$$anonfun$isSyntheticCase$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$4",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$5",
         "scala.reflect.internal.Trees$class",
         "scala.reflect.api.StandardNames$TermNamesApi",
         "scala.reflect.internal.PrivateWithin",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$lubBounds$1$1",
         "scala.reflect.api.Trees$SelectFromTypeTreeExtractor",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$lubBounds$1$2",
         "scala.reflect.api.Trees$ThrowExtractor",
         "scala.reflect.internal.Types$BoundedWildcardType",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$erasesTo$1",
         "scala.reflect.internal.Trees$This",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$erasesTo$2",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$withTypeVars$1",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$withTypeVars$2",
         "scala.reflect.internal.Types$GenPolyType$",
         "scala.reflect.internal.Types$ArrayTypeRef$",
         "scala.reflect.api.Printers$BooleanFlag$",
         "scala.reflect.io.FileOperationException",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$unpickler$",
         "scala.reflect.io.Directory$",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$valueParamsString$1",
         "scala.reflect.internal.tpe.TypeMaps$TypeMap$$anonfun$5",
         "scala.reflect.internal.util.Collections$$anonfun$mapFrom$1",
         "scala.reflect.internal.tpe.TypeMaps$TypeMap$$anonfun$6",
         "scala.reflect.api.Trees$BindApi",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnMkTemplate$",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printRow$1",
         "scala.reflect.internal.Types$$anonfun$mergePrefixAndArgs$3",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printRow$2",
         "scala.reflect.internal.Types$$anonfun$mergePrefixAndArgs$2",
         "scala.reflect.internal.util.FreshNameCreator",
         "scala.reflect.internal.Types$$anonfun$mergePrefixAndArgs$1",
         "scala.reflect.internal.Variances$VarianceValidator$ValidateVarianceMap$$anonfun$checkVarianceOfSymbol$1",
         "scala.reflect.internal.AnnotationInfos$NestedAnnotArg",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$10",
         "scala.reflect.internal.SomePhase",
         "scala.reflect.internal.Trees$UnderConstructionTransformer$class",
         "scala.reflect.internal.Names$TypeName_R",
         "scala.reflect.macros.Parsers",
         "scala.reflect.internal.Names$TypeName_S",
         "scala.reflect.api.Trees$ClassDefExtractor",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnPatSeq$",
         "scala.reflect.api.Printers$$anonfun$showCode$1",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticTypeIdentExtractor",
         "scala.reflect.internal.Trees$ImportSelector",
         "scala.reflect.internal.transform.UnCurry$$anon$2",
         "scala.reflect.internal.transform.UnCurry$$anon$1",
         "scala.reflect.internal.StdAttachments$Attachable$class",
         "scala.reflect.api.Trees$BlockApi",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftString$1",
         "scala.reflect.runtime.ReflectionUtils$EnclosedInMethod$$anonfun$$lessinit$greater$1",
         "scala.reflect.internal.BaseTypeSeqs$MappedBaseTypeSeq",
         "scala.reflect.internal.Definitions$DefinitionsClass$BottomClassSymbol",
         "scala.reflect.io.Streamable$$anon$1",
         "scala.reflect.io.Streamable$$anon$2",
         "scala.reflect.macros.Attachments",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$14",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$15",
         "scala.reflect.api.Trees$LiteralExtractor",
         "scala.reflect.internal.Trees$AssignOrNamedArg$",
         "scala.reflect.api.Exprs$Expr$class",
         "scala.reflect.runtime.TwoWayCaches$TwoWayCache$SomeRef$",
         "scala.reflect.internal.AnnotationInfos$$anonfun$encodeJavaArg$1$1",
         "scala.reflect.internal.Trees$ReferenceToBoxed",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$setMethType$1",
         "scala.reflect.internal.TypeDebugging$typeDebug$str$",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$9",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$Any_asInstanceOf$1",
         "scala.reflect.internal.util.Collections$",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$7",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$8",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$5",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$3",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$BytecodelessMethodMirror$$anonfun$10",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$4",
         "scala.reflect.internal.Trees$ClassDef",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$2",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$10",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$11",
         "scala.reflect.internal.tpe.TypeMaps$InstantiateDependentMap$$anonfun$existentialsNeeded$1",
         "scala.reflect.macros.Universe$MacroInternalApi$MacroDecoratorApi$MacroScopeDecoratorApi",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$12",
         "scala.reflect.api.TypeTags$TypeTag$$anonfun$13",
         "scala.reflect.internal.StdNames$KeywordSetBuilder",
         "scala.reflect.internal.JavaAccFlags",
         "scala.reflect.io.IOStats$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticValDefBase",
         "scala.reflect.internal.Trees$RefTree",
         "scala.reflect.internal.util.Origins$$anonfun$readStack$1",
         "scala.reflect.internal.util.Origins$$anonfun$readStack$2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$$makeScalaPackage$1$$anonfun$apply$4",
         "scala.reflect.internal.Mirrors$RootSymbol",
         "scala.reflect.internal.Types$$anonfun$nonTrivialMembers$1",
         "scala.reflect.internal.util.ScalaClassLoader$$anonfun$classBytes$1",
         "scala.reflect.internal.Types$unwrapToStableClass$",
         "scala.reflect.internal.Types$$anonfun$copyRefinedType$2$$anonfun$apply$8",
         "scala.reflect.internal.util.ScalaClassLoader$$anonfun$tryClass$1",
         "scala.reflect.io.Path$$anonfun$roots$1",
         "scala.reflect.macros.Universe$MacroInternalApi",
         "scala.reflect.io.File$",
         "scala.reflect.internal.tpe.TypeMaps$ExistentialExtrapolation$$anonfun$7",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$importScope$1",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftVector$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$removeRedundantObjects$1",
         "scala.reflect.internal.Types$ClassTypeRef",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$scala$reflect$internal$util$TraceSymbolActivity$$dashes$1",
         "scala.reflect.internal.TypeDebugging$typeDebug$$anonfun$1",
         "scala.reflect.internal.Types$HasTypeMember$",
         "scala.reflect.api.Internals$InternalApi$class",
         "scala.reflect.internal.Symbols$ImplClassSymbol",
         "scala.reflect.internal.TypeDebugging$typeDebug$$anonfun$2",
         "scala.reflect.internal.Types$TypeVar$",
         "scala.reflect.internal.Flags$$anonfun$flagsToString$1",
         "scala.reflect.api.FlagSets",
         "scala.reflect.api.Mirrors$RuntimeMirror",
         "scala.reflect.internal.Definitions$DefinitionsClass$NothingClass$",
         "scala.reflect.internal.pickling.UnPickler$Scan$LazyTypeRefAndAlias$$anonfun$7",
         "scala.reflect.api.Mirrors$MethodMirror",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$8",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$7",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$9",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$6",
         "scala.reflect.internal.StdNames$fulltpnme$",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$5",
         "scala.reflect.internal.Positions$TypedLocator",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$constructorToJava$1",
         "scala.reflect.api.Types$BoundedWildcardTypeExtractor",
         "scala.reflect.internal.Trees$LabelDef$",
         "scala.reflect.internal.Definitions$DefinitionsClass$RunDefinitions$SubtreeType$$anonfun$unapply$1",
         "scala.reflect.io.File$$anonfun$printlnAll$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftRight$1",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$lookupEntry$1",
         "scala.reflect.internal.SomePhase$",
         "scala.reflect.internal.Types$$anonfun$copyRefinedType$2",
         "scala.reflect.runtime.SymbolLoaders$$anonfun$setAllInfos$1",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple18$1",
         "scala.reflect.internal.Types$$anonfun$copyRefinedType$1",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$enter$1",
         "scala.reflect.internal.Symbols$$anonfun$11",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$loadAnnotation$1$1$$anonfun$11",
         "scala.reflect.macros.Enclosures$class",
         "scala.reflect.internal.ExistentialsAndSkolems$Deskolemizer$1$$anonfun$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$info$4",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBoundsHK$1$4$$anonfun$apply$1",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBoundsHK$1$4$$anonfun$apply$3",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$info$3",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$$anonfun$load$1",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBoundsHK$1$4$$anonfun$apply$2",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$isDeclaredByOwner$1",
         "scala.reflect.internal.Symbols$TypeSkolem",
         "scala.reflect.internal.Trees$ExistentialTypeTree",
         "scala.reflect.internal.util.Statistics$$anonfun$allQuantities$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$FromJavaClassCompleter$$anonfun$load$3",
         "scala.reflect.internal.Kinds$$anonfun$checkKindBoundsHK$1$4$$anonfun$apply$4",
         "scala.reflect.internal.StdAttachments$PlainAttachment",
         "scala.reflect.internal.tpe.TypeMaps$dropIllegalStarTypes$",
         "scala.reflect.internal.Kinds$Kind$StringState$$anonfun$1",
         "scala.reflect.api.Trees$IfApi",
         "scala.reflect.internal.util.Statistics$$anonfun$allQuantities$3",
         "scala.reflect.internal.util.Statistics$$anonfun$allQuantities$2",
         "scala.reflect.macros.Internals$ContextInternalApi$TransformApi",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticTermIdentExtractor",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple6$1",
         "scala.reflect.macros.ParseException",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticValFromExtractor",
         "scala.reflect.api.Trees$LabelDefExtractor",
         "scala.reflect.internal.Types$ThisType$",
         "scala.reflect.api.Scopes$class",
         "scala.reflect.internal.Types$UniqueConstantType",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$WildcardSelector$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$Arrow$",
         "scala.reflect.internal.Types$$anonfun$defineUnderlyingOfSingleType$1",
         "scala.reflect.internal.Printers$class",
         "scala.reflect.internal.TreeInfo$$anonfun$isExprSafeToInline$1",
         "scala.reflect.api.Trees$CompoundTypeTreeApi",
         "scala.reflect.internal.Trees$UnApply",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$typeParamToScala1$1",
         "scala.reflect.api.Trees$PackageDefExtractor",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$Object_asInstanceOf$1",
         "scala.reflect.internal.Kinds$Kind",
         "scala.reflect.internal.Types$RefinedType$$anonfun$etaExpand$1",
         "scala.reflect.internal.Scopes$class",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$correspondsStructure$1",
         "scala.reflect.internal.util.Origins$OriginId",
         "scala.reflect.internal.util.ScalaClassLoader$URLClassLoader",
         "scala.reflect.internal.AnnotationInfos$Annotatable$$anonfun$1",
         "scala.reflect.internal.TypesStats",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readSymbols$1$1",
         "scala.reflect.internal.util.Statistics$Counter",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$bytecodefulObjectMethods$1",
         "scala.reflect.internal.util.Statistics$Timer",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_pendingBaseTypes$1",
         "scala.reflect.macros.Attachments$$anonfun$contains$1",
         "scala.reflect.internal.Reporting",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_toStringRecursions$1",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$class",
         "scala.reflect.internal.pickling.PickleFormat",
         "scala.reflect.internal.Types$$anonfun$typeParamsToExistentials$1",
         "scala.reflect.internal.Names$$anonfun$lookupTypeName$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticVarDef$",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTypesInfo$1",
         "scala.reflect.internal.tpe.TypeComparers$$anonfun$isSub$1$1",
         "scala.reflect.internal.tpe.TypeComparers$$anonfun$isSub$1$2",
         "scala.reflect.internal.Types$PackageTypeRef",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$12$$anonfun$apply$7",
         "scala.reflect.io.Directory",
         "scala.reflect.io.File",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticSelectTypeExtractor",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$metaAnnotations$1",
         "scala.reflect.internal.AnnotationInfos$$anonfun$6",
         "scala.reflect.internal.Internals$SymbolTableInternal$class",
         "scala.reflect.internal.AnnotationInfos$$anonfun$5",
         "scala.reflect.api.Trees$MemberDefApi",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$typeOfMemberNamedGet$1",
         "scala.reflect.internal.pickling.ByteCodecs",
         "scala.reflect.internal.Trees$ThisSubstituter$$anonfun$transform$1",
         "scala.reflect.api.FlagSets$class",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftName$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$fixApply$1$1",
         "scala.reflect.internal.ExistentialsAndSkolems",
         "scala.reflect.runtime.Macros$",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq$$anon$2",
         "scala.reflect.internal.tpe.TypeMaps$SubstSymMap$$anonfun$$lessinit$greater$2",
         "scala.reflect.runtime.TwoWayCaches$TwoWayCache$$anonfun$toJavaOption$1",
         "scala.reflect.runtime.ReflectionUtils",
         "scala.reflect.internal.TreeInfo$$anonfun$isSequenceValued$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$9",
         "scala.reflect.macros.Universe$TreeGen",
         "scala.reflect.internal.tpe.TypeMaps$InstantiateDependentMap",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$existsParam$1$1",
         "scala.reflect.internal.Types$$anonfun$existentialsInType$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$4",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$3",
         "scala.reflect.api.Trees$TypeTreeApi",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$2",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$8",
         "scala.reflect.internal.AnnotationInfos$CompleteAnnotationInfo",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$7",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$lookup$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$6",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTree$1$5",
         "scala.reflect.internal.AnnotationInfos",
         "scala.reflect.macros.ReificationException$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$jconstrAsScala$1",
         "scala.reflect.internal.TypeConstants",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$refines$1$1",
         "scala.reflect.api.Internals$ReificationSupportApi$ImplicitParamsExtractor",
         "scala.reflect.internal.TreeInfo$$anonfun$isConstructorWithDefault$1",
         "scala.reflect.internal.util.Statistics$Quantity$class",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_indent$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$TupleCompanionRef$$anonfun$$lessinit$greater$1",
         "scala.reflect.internal.Printers$ConsoleWriter$",
         "scala.reflect.macros.TypecheckException",
         "scala.reflect.internal.TreeInfo$$anonfun$repeatedParams$1",
         "scala.reflect.internal.StdAttachments$ForAttachment$",
         "scala.reflect.internal.Trees$RefTree$",
         "scala.reflect.internal.tpe.TypeMaps$SubstSymMap$$anonfun$$lessinit$greater$1",
         "scala.reflect.internal.StdNames$TypeNames",
         "scala.reflect.internal.Symbols$SymbolKind$",
         "scala.reflect.internal.Types$ArgsTypeRef$$anonfun$transform$1",
         "scala.reflect.internal.Trees$TreeSymSubstituter$$anonfun$transform$2",
         "scala.reflect.api.TypeTags$TypeTag$",
         "scala.reflect.runtime.ReflectionUtils$EnclosedInMethod$",
         "scala.reflect.internal.tpe.TypeMaps$abstractTypesToBounds$",
         "scala.reflect.api.Trees$AlternativeExtractor",
         "scala.reflect.macros.blackbox.Context",
         "scala.reflect.api.Internals$CompatApi$CompatibleBuildApi",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances",
         "scala.reflect.api.Trees$ApplyExtractor",
         "scala.reflect.internal.NoPhase",
         "scala.reflect.internal.Reporting$class",
         "scala.reflect.internal.Types$RepeatedType$",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple14$1",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$defineBaseTypeSeqOfCompoundType$1",
         "scala.reflect.internal.util.FakePos$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$DerivedValueClassMetadata$$anonfun$1",
         "scala.reflect.api.StandardDefinitions$StandardTypes",
         "scala.reflect.internal.pickling.UnPickler$Scan$LazyTypeRef$$anonfun$completeInternal$1",
         "scala.reflect.internal.Trees$SingletonTypeTree$",
         "scala.reflect.api.StandardLiftables$class",
         "scala.reflect.internal.Types$$anonfun$appliedType$1$$anonfun$29",
         "scala.reflect.internal.tpe.TypeComparers$$anonfun$equalTypeParamsAndResult$1",
         "scala.reflect.internal.Trees$Select$",
         "scala.reflect.internal.Types$$anonfun$appliedType$1$$anonfun$28",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$methodToScala$1",
         "scala.reflect.api.Annotations$ArrayArgumentExtractor",
         "scala.reflect.internal.util.AbstractFileClassLoader$$anonfun$findAbstractFile$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftMap$1$$anonfun$apply$4",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$1",
         "scala.reflect.internal.Types$TypeUnwrapper",
         "scala.reflect.api.Trees$AlternativeApi",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$3",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple3$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$2",
         "scala.reflect.io.Streamable$Bytes",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$5",
         "scala.reflect.internal.TreeInfo$$anonfun$detectTypecheckedTree$1",
         "scala.reflect.api.Trees$MatchApi",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$4",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$7",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anonfun$typeSignatureIn$1",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$6",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$9",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateTree$8",
         "scala.reflect.internal.Types$Type$$anonfun$matchesPattern$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$UniverseDependentTypes",
         "scala.reflect.internal.Phase$$anonfun$iterator$1",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$class",
         "scala.reflect.internal.Types$AbstractNoArgsTypeRef",
         "scala.reflect.macros.Reifiers",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftType$1",
         "scala.reflect.api.Trees$RefTreeApi",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnForCombination",
         "scala.reflect.internal.Symbols$TypeSymbol$$anonfun$updateTypeCache$1",
         "scala.reflect.internal.Mode$$anonfun$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$Object_synchronized$1",
         "scala.reflect.internal.Symbols$$anonfun$2",
         "scala.reflect.internal.Types$AbstractArgsTypeRef",
         "scala.reflect.internal.Symbols$$anonfun$1",
         "scala.reflect.internal.TreeGen$ValEq$",
         "scala.reflect.internal.Variances$VarianceValidator$ValidateVarianceMap$",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticFilterExtractor",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$3",
         "scala.reflect.internal.Scopes$$anon$1$$anonfun$sorted$1",
         "scala.reflect.internal.Symbols",
         "scala.reflect.io.File$$anonfun$appendAll$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$loadAnnotation$1$1$$anonfun$apply$3",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$print$3$$anonfun$apply$10",
         "scala.reflect.api.Types$SuperTypeApi",
         "scala.reflect.internal.Phase$$anonfun$iterator$2",
         "scala.reflect.internal.Trees$Typed$",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple12$1",
         "scala.reflect.io.URLZipArchive$$anonfun$1",
         "scala.reflect.internal.util.NoPosition",
         "scala.reflect.io.VirtualFile",
         "scala.reflect.internal.Trees$ApplyDynamic",
         "scala.reflect.api.Trees$SuperExtractor",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$jfieldAsScala$1",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap",
         "scala.reflect.internal.TreeInfo$$anonfun$stripNamedApplyBlock$1",
         "scala.reflect.api.Internals$CompatToken",
         "scala.reflect.internal.Symbols$ClassSymbol$$anonfun$companionModule0$1",
         "scala.reflect.internal.util.Statistics$SubQuantity",
         "scala.reflect.internal.Trees$$anonfun$Template$1",
         "scala.reflect.internal.Definitions$ValueClassDefinitions$$anonfun$boxedModule$1",
         "scala.reflect.internal.Names$TypeName$",
         "scala.reflect.internal.SymbolTable",
         "scala.reflect.macros.Universe$MacroCompatApi$MacroCompatibleTree",
         "scala.reflect.runtime.Settings$Setting",
         "scala.reflect.macros.Typers",
         "scala.reflect.api.Mirrors$InstanceMirror",
         "scala.reflect.api.JavaUniverse$JavaMirror$class",
         "scala.reflect.internal.Scopes$Scope$$anon$3",
         "scala.reflect.io.VirtualDirectory$$anonfun$lookupName$1",
         "scala.reflect.internal.util.WeakHashSet$Diagnostics",
         "scala.reflect.internal.Scopes$Scope$$anon$2",
         "scala.reflect.internal.StdAttachments$SyntheticUnitAttachment$",
         "scala.reflect.internal.util.TableDef$$anonfun$$tilde$1",
         "scala.reflect.internal.Kinds$ProperTypeKind$$anonfun$scalaNotation$1",
         "scala.reflect.internal.Scopes$LookupSucceeded",
         "scala.reflect.internal.Types$TypeVar$$anonfun$scala$reflect$internal$Types$TypeVar$$tparamsOfSym$1",
         "scala.reflect.internal.Trees$TypeApply$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$targsToScala$1",
         "scala.reflect.runtime.TwoWayCaches$TwoWayCache$$anonfun$toJavaOption$1$$anonfun$apply$1",
         "scala.reflect.internal.Trees$DefTree",
         "scala.reflect.internal.Types$ClassInfoType",
         "scala.reflect.internal.Variance",
         "scala.reflect.internal.tpe.TypeComparers",
         "scala.reflect.internal.tpe.TypeMaps$SubstThisMap",
         "scala.reflect.internal.settings.AbsSettings$AbsSettingValue",
         "scala.reflect.api.SerializedExpr",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$setterIn$1",
         "scala.reflect.io.FileZipArchive$FileEntry$1",
         "scala.reflect.internal.StdNames$compactify$",
         "scala.reflect.internal.util.HashSet$",
         "scala.reflect.internal.Symbols$SymbolContextApiImpl",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedClassSymbol",
         "scala.reflect.internal.Trees$ModuleDef$",
         "scala.reflect.internal.Mirrors$class",
         "scala.reflect.internal.Scopes$Scope",
         "scala.reflect.internal.util.NoPosition$",
         "scala.reflect.macros.Attachments$$anonfun$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readTreeRef$1",
         "scala.reflect.api.Trees",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple4$1",
         "scala.reflect.internal.Trees$CannotHaveAttrs$class",
         "scala.reflect.internal.SymbolTable$$anonfun$findSymbol$1",
         "scala.reflect.internal.Symbols$ModuleSymbol",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anonfun$typeParams$1",
         "scala.reflect.internal.tpe.TypeMaps$TypeMap",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnClosure$",
         "scala.reflect.internal.Types$baseClassesCycleMonitor$",
         "scala.reflect.internal.transform.Erasure$verifiedJavaErasure$$anonfun$apply$2",
         "scala.reflect.runtime.SymbolLoaders$PackageScope$$anonfun$lookupEntry$1$$anonfun$1",
         "scala.reflect.internal.Trees$TypeTree$",
         "scala.reflect.api.Trees$TypeBoundsTreeExtractor",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$implodePatDefs$$anonfun$transform$1",
         "scala.reflect.internal.Types$$anonfun$defineParentsOfTypeRef$1",
         "scala.reflect.internal.AnnotationCheckers$class",
         "scala.reflect.internal.Names$TermName$",
         "scala.reflect.internal.SymbolTable$$anonfun$devWarningResult$1",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticClassDefExtractor",
         "scala.reflect.api.Names$TypeNameExtractor",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnMkTemplate$$anonfun$3",
         "scala.reflect.internal.tpe.FindMembers$class",
         "scala.reflect.internal.tpe.FindMembers",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnMkTemplate$$anonfun$2",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnMkTemplate$$anonfun$5",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnMkTemplate$$anonfun$4",
         "scala.reflect.internal.SymbolTable$$anonfun$logResultIf$1",
         "scala.reflect.internal.Trees$Super",
         "scala.reflect.internal.util.NoSourceFile",
         "scala.reflect.internal.Types$TypeRef$$anonfun$etaExpand$2",
         "scala.reflect.api.Positions",
         "scala.reflect.internal.Positions$$anonfun$validate$1$1$$anonfun$apply$mcV$sp$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$removeDefaultClassesFromList$1",
         "scala.reflect.internal.util.WeakHashSet$Entry",
         "scala.reflect.internal.AnnotationCheckers$$anonfun$annotationsLub$1",
         "scala.reflect.internal.util.Position",
         "scala.reflect.internal.Types$ClassInfoType$$anonfun$scala$reflect$internal$Types$ClassInfoType$$propagate$2$$anonfun$apply$5",
         "scala.reflect.internal.TreeInfo$DynamicApplication$$anonfun$$lessinit$greater$2",
         "scala.reflect.api.Symbols$SymbolApi",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo$$anonfun$hasArgWhich$1",
         "scala.reflect.internal.Kinds$TypeConKind$$anonfun$hasBounds$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple20$1",
         "scala.reflect.api.StandardNames$NamesApi",
         "scala.reflect.internal.Kinds$ProperTypeKind",
         "scala.reflect.internal.AnnotationCheckers$AnnotationChecker",
         "scala.reflect.internal.util.Origins",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple21$1",
         "scala.reflect.internal.Types$$anonfun$instantiatedBounds$1",
         "scala.reflect.internal.Mirrors$Roots$WellKnownSymbol",
         "scala.reflect.internal.BaseTypeSeqs$MappedBaseTypeSeq$$anonfun$lateMap$1",
         "scala.reflect.internal.util.Statistics$Quantity",
         "scala.reflect.internal.Trees$If",
         "scala.reflect.internal.tpe.TypeConstraints$TypeConstraint$$anonfun$isWithinBounds$1",
         "scala.reflect.internal.tpe.TypeConstraints$TypeConstraint$$anonfun$isWithinBounds$2",
         "scala.reflect.api.Internals$CompatApi$class",
         "scala.reflect.internal.TreeInfo$$anonfun$1",
         "scala.reflect.internal.Types$GenPolyType$$anonfun$apply$10",
         "scala.reflect.internal.pickling.UnPickler",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$mkParam$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$matchingInstTypes$1",
         "scala.reflect.api.Names$TermNameApi",
         "scala.reflect.internal.StdNames$nme$",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$lookupNextEntry$1",
         "scala.reflect.internal.CapturedVariables",
         "scala.reflect.api.TypeTags$TypeTag",
         "scala.reflect.internal.Trees$New",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$briefParentsString$1",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_glbResults$1",
         "scala.reflect.internal.Definitions$ValueClassDefinitions$$anonfun$boxedClass$1",
         "scala.reflect.api.FlagSets$FlagOps",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$Any_isInstanceOf$1",
         "scala.reflect.internal.util.AbstractFileClassLoader$$anonfun$getPackages$1",
         "scala.reflect.macros.FrontEnds",
         "scala.reflect.internal.util.AbstractFileClassLoader$$anonfun$getPackages$2",
         "scala.reflect.runtime.SynchronizedSymbols$class",
         "scala.reflect.internal.Trees$UnApply$",
         "scala.reflect.api.Quasiquotes$Quasiquote$tq$",
         "scala.reflect.internal.CapturedVariables$class",
         "scala.reflect.internal.Definitions$DefinitionsClass$VarArityClass",
         "scala.reflect.internal.Mirrors$Roots$RootPackage",
         "scala.reflect.internal.TreeInfo$MacroImplReference$",
         "scala.reflect.internal.transform.Erasure$ScalaErasureMap",
         "scala.reflect.internal.Trees$Literal",
         "scala.reflect.internal.tpe.TypeMaps$$anon$1$$anonfun$apply$3",
         "scala.reflect.internal.BaseTypeSeqs$class",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple7$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$LazyTypeRefAndAlias",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$toAnnotArg$EnumClass$",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances",
         "scala.reflect.internal.util.TransparentPosition",
         "scala.reflect.internal.AnnotationInfos$ScalaSigBytes$$anonfun$toString$1",
         "scala.reflect.api.Trees$ImportExtractor",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$UnimportSelector$",
         "scala.reflect.internal.Kinds$TypeConKind$Argument",
         "scala.reflect.internal.tpe.TypeMaps$SubstSymMap",
         "scala.reflect.runtime.ReflectError",
         "scala.reflect.internal.Scopes$Scope$",
         "scala.reflect.internal.Scopes$Scope$$anonfun$lookup$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readExtSymbol$1$1",
         "scala.reflect.internal.TreeInfo$DynamicApplicationNamed$$anonfun$$lessinit$greater$3",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$FilterCall$",
         "scala.reflect.internal.Positions$$anonfun$2",
         "scala.reflect.internal.BaseTypeSeqs$BaseTypeSeq",
         "scala.reflect.internal.Positions$$anonfun$1",
         "scala.reflect.internal.Printers$RawTreePrinter$$anonfun$printProduct$default$3$1",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$symScope$1",
         "scala.reflect.runtime.TwoWayCaches$TwoWayCache$$anonfun$toScala$1",
         "scala.reflect.internal.Types$MethodType",
         "scala.reflect.runtime.ThreadLocalStorage$MyThreadLocalStorage",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showAllSymbols$6$$anonfun$3",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple15$1",
         "scala.reflect.internal.tpe.TypeMaps$KeepOnlyTypeConstraints",
         "scala.reflect.internal.util.Set",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readSymbolAnnotation$1",
         "scala.reflect.internal.Types$AliasArgsTypeRef",
         "scala.reflect.internal.tpe.TypeMaps$FilterTypeCollector",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$normalizedParents$2",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$normalizedParents$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$methodToJava$1$$anonfun$25",
         "scala.reflect.api.Mirrors",
         "scala.reflect.internal.Types$AppliedTypeVar",
         "scala.reflect.api.Quasiquotes$Quasiquote$cq$",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printPosition$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$32$$anonfun$apply$9",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$matchingSymbolInternal$1",
         "scala.reflect.internal.Types$Type$$anonfun$$less$colon$less$1",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo$$anonfun$refsSymbol$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticExistentialType$$anonfun$apply$11",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$RichClass",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo$$anonfun$isTrivial$1",
         "scala.reflect.internal.Types$ErasedValueType",
         "scala.reflect.internal.AnnotationCheckers$$anonfun$adaptTypeOfReturn$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$32$$anonfun$apply$8",
         "scala.reflect.internal.util.StringOps",
         "scala.reflect.runtime.ReflectionUtils$EnclosedInConstructor$$anonfun$$lessinit$greater$2",
         "scala.reflect.api.Quasiquotes$Quasiquote$api$class",
         "scala.reflect.api.Annotations$ArrayArgumentApi",
         "scala.reflect.internal.Types$$anonfun$specializesSym$2",
         "scala.reflect.internal.Types$$anonfun$specializesSym$1",
         "scala.reflect.api.Quasiquotes",
         "scala.reflect.internal.Types$TypeVar$$anonfun$originLocation$1",
         "scala.reflect.internal.Definitions$ValueClassDefinitions$class",
         "scala.reflect.internal.Internals$class",
         "scala.reflect.internal.Types$TypeVar$$anonfun$originLocation$2",
         "scala.reflect.internal.util.TableDef$Column$$anonfun$maxWidth$1",
         "scala.reflect.internal.Internals",
         "scala.reflect.internal.Types$StaticallyAnnotatedType$",
         "scala.reflect.internal.Scopes$ErrorScope",
         "scala.reflect.internal.Types$$anonfun$specializesSym$3",
         "scala.reflect.internal.util.WeakHashSet$Diagnostics$$anonfun$fullBucketsCount$1",
         "scala.reflect.internal.BaseTypeSeqsStats",
         "scala.reflect.internal.AnnotationInfos$ClassfileAnnotArg",
         "scala.reflect.internal.Types$PolyType$",
         "scala.reflect.internal.TreeGen$GetVarTraverser$$anonfun$seenName$1$1",
         "scala.reflect.internal.Kinds$Kind$Text$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$toAnnotArg$$anonfun$apply$1",
         "scala.reflect.internal.util.StringOps$",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anonfun$rawInfo$1",
         "scala.reflect.api.Printers$TreePrinter$class",
         "scala.reflect.internal.Trees$CollectTreeTraverser",
         "scala.reflect.internal.util.Collections$$anonfun$flatCollect$1",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedModuleClassSymbol",
         "scala.reflect.internal.util.Collections$$anonfun$flatCollect$2",
         "scala.reflect.internal.Variances$$anonfun$inType$1$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$TupleCompanionRef$",
         "scala.reflect.internal.TreeGen$ValFrom$",
         "scala.reflect.internal.util.ThreeValues$",
         "scala.reflect.internal.Trees$Template",
         "scala.reflect.internal.ExistentialsAndSkolems$$anonfun$3$$anonfun$rawOwner0$1$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$VarArityClass$$anonfun$1",
         "scala.reflect.io.Directory$$anonfun$dirs$1",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$jmethodAsScala1$1",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticTryExtractor",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anonfun$validTo$1",
         "scala.reflect.internal.transform.Transforms$$anonfun$4$$anon$1",
         "scala.reflect.internal.Trees$Apply$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$ScalaDot$",
         "scala.reflect.internal.Symbols$TermSymbol",
         "scala.reflect.internal.TreeInfo$$anonfun$recoverBody$1$1$$anonfun$apply$3",
         "scala.reflect.internal.AnnotationCheckers",
         "scala.reflect.internal.TreeInfo$$anonfun$recoverBody$1$1$$anonfun$apply$2",
         "scala.reflect.internal.TreeInfo$IsFalse$",
         "scala.reflect.internal.Names",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticObjectDefExtractor",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticClassDef$$anonfun$6",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$size$1",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticSelectTermExtractor",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple11$1",
         "scala.reflect.api.Symbols$SymbolApi$class",
         "scala.reflect.internal.util.ScalaClassLoader$$anonfun$1",
         "scala.reflect.runtime.SymbolLoaders$$anonfun$initAndEnterClassAndModule$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$ArrayModule_genericApply$1",
         "scala.reflect.runtime.Settings$IntSetting",
         "scala.reflect.internal.TreeGen",
         "scala.reflect.internal.util.package$$anonfun$isAnon$1$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$glbsym$1$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$",
         "scala.reflect.internal.Reporting$RunReporting",
         "scala.reflect.internal.util.ScalaClassLoader$$anonfun$2",
         "scala.reflect.io.Path$$anonfun$onlyDirs$2",
         "scala.reflect.io.Path$$anonfun$onlyDirs$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$elimSuper$1",
         "scala.reflect.io.Path$$anonfun$onlyDirs$4",
         "scala.reflect.io.Path$$anonfun$onlyDirs$3",
         "scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap$$anonfun$captureSkolems$2$$anonfun$apply$5",
         "scala.reflect.internal.Types$$anonfun$explainTypes$1",
         "scala.reflect.internal.Types$$anonfun$explainTypes$2",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$glbsym$1$2",
         "scala.reflect.internal.Variance$SbtCompat",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticTermIdentExtractor$class",
         "scala.reflect.api.Trees$BlockExtractor",
         "scala.reflect.internal.tpe.TypeComparers$SubTypePair$",
         "scala.reflect.internal.Kinds$Kind$StringState$$anonfun$removeOnes$1",
         "scala.reflect.io.Path$$anonfun$onlyFiles$2",
         "scala.reflect.io.Path$$anonfun$hasExtension$1",
         "scala.reflect.io.Path$$anonfun$onlyFiles$1",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftConstant$1",
         "scala.reflect.internal.AnnotationInfos$Annotation$",
         "scala.reflect.internal.Types$Type$FilterMapForeach",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$mkRefineStat$3",
         "scala.reflect.macros.Universe$MacroCompatApi$class",
         "scala.reflect.internal.PrivateWithin$$anonfun$propagatePackageBoundary$1",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_subsametypeRecursions$1",
         "scala.reflect.internal.TreeGen$GetVarTraverser",
         "scala.reflect.internal.Kinds$ProperTypeKind$$anonfun$buildState$1",
         "scala.reflect.runtime.JavaUniverseForce",
         "scala.reflect.internal.Trees$ApplyImplicitView",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$adaptToNewRun$2",
         "scala.reflect.internal.TreeGen$$anonfun$mkNullaryCall$1",
         "scala.reflect.internal.tpe.TypeConstraints$TypeConstraint$",
         "scala.reflect.internal.Trees$$anonfun$scala$reflect$internal$Trees$$substituterString$1",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$adaptToNewRun$2$$anonfun$apply$6",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$adaptToNewRun$5",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$adaptToNewRun$6",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$adaptToNewRun$3",
         "scala.reflect.api.Trees$TryApi",
         "scala.reflect.api.Types$AnnotatedTypeApi",
         "scala.reflect.internal.Types$$anonfun$defineBaseTypeSeqOfCompoundType$1$$anonfun$apply$1",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$scala$reflect$internal$Types$ExistentialType$$quantifierOwner$1",
         "scala.reflect.macros.whitebox.Context$ImplicitCandidate",
         "scala.reflect.api.package",
         "scala.reflect.internal.Symbols$$anonfun$relevantSymbols$1",
         "scala.reflect.internal.Types$SingleType$",
         "scala.reflect.api.Mirrors$FieldMirror",
         "scala.reflect.api.Trees$ThisApi",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaTemplateMirror",
         "scala.reflect.internal.util.BatchSourceFile$$anonfun$identifier$1",
         "scala.reflect.api.Quasiquotes$Quasiquote$pq$",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$isVolatileRefinedType$1$3",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$isVolatileRefinedType$1$2",
         "scala.reflect.internal.util.TableDef$Table$$anonfun$specs$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$$anonfun$isVolatileRefinedType$1$1",
         "scala.reflect.runtime.JavaUniverse$PerRunReporting",
         "scala.reflect.api.StandardDefinitions$DefinitionsApi",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$selectTerm$1",
         "scala.reflect.internal.Trees$noSelfType$",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$5",
         "scala.reflect.internal.AnnotationInfos$UnmappableAnnotation$",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$4",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticAppliedExtractor",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$packageToScala$1",
         "scala.reflect.runtime.SynchronizedTypes$$anonfun$scala$reflect$runtime$SynchronizedTypes$$_toStringSubjects$1",
         "scala.reflect.internal.AnnotationInfos$ArrayAnnotArg",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$insertBraces$1$1",
         "scala.reflect.runtime.ReflectionUtils$EnclosedIn",
         "scala.reflect.internal.StdAttachments$SubpatternsAttachment$",
         "scala.reflect.internal.Trees$TreeStackTraverser",
         "scala.reflect.internal.Kinds$TypeConKind$$anonfun$starNotation$2",
         "scala.reflect.internal.Kinds$TypeConKind$$anonfun$starNotation$3",
         "scala.reflect.internal.transform.Erasure$verifiedJavaErasure$",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTypeParams$1",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTypeParams$2",
         "scala.reflect.internal.StdNames$SymbolNames",
         "scala.reflect.internal.Types$$anonfun$defineBaseClassesOfCompoundType$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$FunctionClassRef$",
         "scala.reflect.internal.Types$$anonfun$defineBaseClassesOfCompoundType$2",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$8",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$9",
         "scala.reflect.internal.util.TableDef$Table",
         "scala.reflect.internal.Kinds$Kind$StringState$$anonfun$removeAlias$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTuple19$1",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$unlink$2",
         "scala.reflect.internal.annotations.uncheckedBounds",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedScope$$anonfun$unlink$1",
         "scala.reflect.internal.Importers$StandardImporter$$anon$1",
         "scala.reflect.internal.InfoTransformers$InfoTransformer",
         "scala.reflect.internal.Positions$Range",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$1",
         "scala.reflect.internal.Definitions$DefinitionsClass$MacroContextType$",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$2",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$3",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$willViolateRecursiveBounds$1",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$5",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$6",
         "scala.reflect.internal.Scopes$LookupNotFound$",
         "scala.reflect.internal.Types$RefinedType$$anonfun$typeConstructor$1",
         "scala.reflect.api.Mirrors$ClassMirror",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple9$1",
         "scala.reflect.internal.Depth",
         "scala.reflect.runtime.SynchronizedOps$class",
         "scala.reflect.runtime.SynchronizedOps$$anonfun$newBaseTypeSeq$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anon$1",
         "scala.reflect.io.Streamable$$anonfun$slurp$1",
         "scala.reflect.internal.Positions$class",
         "scala.reflect.internal.Precedence",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anon$2",
         "scala.reflect.internal.Types$BoundedWildcardType$",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticTypeProjectionExtractor",
         "scala.reflect.internal.pickling.UnPickler$Scan$LazyTypeRef",
         "scala.reflect.internal.AnnotationInfos$UnmappableAnnotArg$",
         "scala.reflect.internal.Kinds$Kind$Head$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$mkImplicitParam$1",
         "scala.reflect.internal.Trees$Modifiers",
         "scala.reflect.internal.Trees$Annotated",
         "scala.reflect.internal.util.Collections$class",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$DerivedValueClassMetadata",
         "scala.reflect.runtime.Macros",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticNewExtractor",
         "scala.reflect.internal.tpe.TypeMaps$normalizeAliases$$anonfun$apply$1",
         "scala.reflect.api.PredefTypeCreator",
         "scala.reflect.internal.Importers",
         "scala.reflect.macros.Enclosures",
         "scala.reflect.macros.Internals$ContextInternalApi$class",
         "scala.reflect.api.Types$TypeBoundsApi",
         "scala.reflect.internal.pickling.UnPickler$Scan",
         "scala.reflect.internal.Trees$Modifiers$",
         "scala.reflect.internal.Trees$ValDef",
         "scala.reflect.api.TypeTags$WeakTypeTag$class",
         "scala.reflect.io.Streamable$Chars$class",
         "scala.reflect.macros.Internals$ContextInternalApi",
         "scala.reflect.internal.TypeDebugging$typeDebug$$anonfun$ptLine$3",
         "scala.reflect.internal.TypeDebugging$typeDebug$$anonfun$ptLine$2",
         "scala.reflect.internal.Types$NullaryMethodType",
         "scala.reflect.internal.Types",
         "scala.reflect.macros.ExprUtils",
         "scala.reflect.internal.transform.PostErasure",
         "scala.reflect.internal.Types$OverloadedType$$anonfun$safeToString$2",
         "scala.reflect.internal.Types$AnnotatedType$",
         "scala.reflect.internal.Types$ClassNoArgsTypeRef",
         "scala.reflect.internal.TypeDebugging$typeDebug$$anonfun$ptLine$1",
         "scala.reflect.internal.StdCreators$FixedMirrorTreeCreator$",
         "scala.reflect.internal.Types$TypeApiImpl$$anonfun$erasure$1",
         "scala.reflect.internal.Symbols$$anonfun$deriveTypeWithWildcards$1",
         "scala.reflect.internal.TreeInfo",
         "scala.reflect.internal.Scopes$LookupAmbiguous$",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$caseFieldAccessorsUnsorted$1",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftScalaSymbol$1",
         "scala.reflect.internal.AnnotationInfos$AnnotationInfo$",
         "scala.reflect.internal.AnnotationCheckers$$anonfun$adaptAnnotations$1",
         "scala.reflect.internal.Types$TypeRef$",
         "scala.reflect.macros.Universe$MacroCompatApi$CompatibleTypeTree",
         "scala.reflect.api.Trees$BindExtractor",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$classBound$2$$anonfun$apply$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$UnFor$$anonfun$unapply$2$$anonfun$10",
         "scala.reflect.internal.pickling.PickleFormat$",
         "scala.reflect.api.Constants$class",
         "scala.reflect.internal.Trees$FindTreeTraverser",
         "scala.reflect.api.TypeTags$PredefTypeTag",
         "scala.reflect.internal.Mode$",
         "scala.reflect.api.Quasiquotes$Quasiquote$q$",
         "scala.reflect.api.Symbols$class",
         "scala.reflect.io.PlainDirectory$$anonfun$iterator$2",
         "scala.reflect.io.PlainDirectory$$anonfun$iterator$1",
         "scala.reflect.internal.Kinds$TypeConKind$$anonfun$2",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$glb0$1$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$glb0$1$2",
         "scala.reflect.internal.tpe.TypeMaps$CollectTypeCollector",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple17$1",
         "scala.reflect.internal.Types$$anonfun$matchesType$1",
         "scala.reflect.api.SerializedTypeTag",
         "scala.reflect.internal.Kinds$TypeConKind$",
         "scala.reflect.internal.Types$NullaryMethodType$",
         "scala.reflect.internal.tpe.TypeConstraints$TypeConstraint",
         "scala.reflect.internal.tpe.TypeMaps$typeVarToOriginMap$",
         "scala.reflect.internal.Types$TypeRef",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$",
         "scala.reflect.internal.transform.Erasure$$anonfun$isUnshadowed$1$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftTree$1",
         "scala.reflect.internal.Kinds$Kind$Text",
         "scala.reflect.internal.TreeGen$$anonfun$mkAttributedTypeApply$1",
         "scala.reflect.internal.Types$ClassArgsTypeRef",
         "scala.reflect.internal.tpe.TypeMaps$SubstMap",
         "scala.reflect.internal.util.OffsetPosition",
         "scala.reflect.api.Internals$ReificationSupportApi$SyntacticValDefExtractor",
         "scala.reflect.internal.util.package$",
         "scala.reflect.api.Quasiquotes$Quasiquote",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anon$2$$anonfun$8$$anonfun$apply$9",
         "scala.reflect.internal.Symbols$$anonfun$cloneSymbolsAtOwner$1",
         "scala.reflect.internal.Trees$ValOrDefDef",
         "scala.reflect.api.Trees$GenericApplyApi",
         "scala.reflect.internal.TreeInfo$Applied$",
         "scala.reflect.internal.Types$$anonfun$nestedMemberType$1",
         "scala.reflect.api.Types$TypeRefApi",
         "scala.reflect.internal.Types$OverloadedType$",
         "scala.reflect.internal.transform.Transforms$$anonfun$3$$anon$2",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readAnnotationRef$1",
         "scala.reflect.internal.util.TriState$",
         "scala.reflect.internal.Positions$Locator",
         "scala.reflect.internal.tpe.GlbLubs$class",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$15",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$12",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$11",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$14",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedSymbol$$anon$13",
         "scala.reflect.internal.Printers$FootnoteIndex$$anonfun$scala$reflect$internal$Printers$FootnoteIndex$$nextCounter$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$loop$1$1",
         "scala.reflect.internal.tpe.TypeMaps$$anon$1",
         "scala.reflect.internal.Definitions",
         "scala.reflect.internal.Types$Type$$anon$5",
         "scala.reflect.macros.Infrastructure",
         "scala.reflect.internal.InfoTransformers$class",
         "scala.reflect.internal.Types$AppliedTypeVar$$anonfun$safeToString$3",
         "scala.reflect.internal.tpe.TypeConstraints$UndoPair",
         "scala.reflect.internal.util.StringOps$class",
         "scala.reflect.runtime.TwoWayCaches$TwoWayCache$$anonfun$toJava$1",
         "scala.reflect.api.TypeTags$TypeTagImpl",
         "scala.reflect.internal.Trees$ValDef$",
         "scala.reflect.internal.Types$ClassInfoType$enterRefs$",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$JavaTransformingMethodMirror",
         "scala.reflect.internal.Types$ConstantType",
         "scala.reflect.internal.Types$SingletonType",
         "scala.reflect.internal.StdAttachments$class",
         "scala.reflect.internal.Trees$pendingSuperCall$",
         "scala.reflect.io.Directory$$anonfun$files$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$sameWeakLubAsLub$1",
         "scala.reflect.internal.Flags$MapFlags$$anonfun$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticImport$RenameSelectorRepr$",
         "scala.reflect.internal.Symbols$ImplClassSymbol$class",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$11",
         "scala.reflect.runtime.SynchronizedOps$SynchronizedBaseTypeSeq",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$scala$reflect$runtime$JavaMirrors$JavaMirror$$methodToScala1$1",
         "scala.reflect.runtime.ThreadLocalStorage$ThreadLocalStorage",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticEmptyTypeTree$",
         "scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$10",
         "scala.reflect.internal.Types$NamedType",
         "scala.reflect.internal.transform.UnCurry$class",
         "scala.reflect.internal.util.TraceSymbolActivity$$anonfun$showAllSymbols$7$$anonfun$5",
         "scala.reflect.api.Liftables$Liftable$$anon$1",
         "scala.reflect.macros.UnexpectedReificationException$",
         "scala.reflect.internal.Types$AnnotatedType$$anonfun$isTrivial$1",
         "scala.reflect.internal.tpe.GlbLubs$$anonfun$lub$1",
         "scala.reflect.runtime.SymbolTable",
         "scala.reflect.internal.Trees$TypeDef$",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$isRepresentableWithWildcards$2",
         "scala.reflect.macros.ParseException$",
         "scala.reflect.internal.Printers$RawTreePrinter",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticTypeProjection$",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$isRepresentableWithWildcards$1",
         "scala.reflect.internal.FreshNames",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$11",
         "scala.reflect.internal.Printers$TreePrinter$$anonfun$printTree$10",
         "scala.reflect.internal.util.Collections$$anonfun$mexists$1",
         "scala.reflect.internal.Types$HKTypeVar",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$freshNamer$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticDefDef$",
         "scala.reflect.internal.util.Origins$$anonfun$show$1",
         "scala.reflect.internal.Definitions$ValueClassDefinitions$$anonfun$refClass$1",
         "scala.reflect.internal.tpe.TypeComparers$$anonfun$isDifferentType$1",
         "scala.reflect.api.Trees$AssignApi",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple5$1",
         "scala.reflect.macros.whitebox.Context$ImplicitCandidate$",
         "scala.reflect.internal.Kinds$class",
         "scala.reflect.internal.Symbols$$anonfun$markAllCompleted$1",
         "scala.reflect.internal.Mirrors$Roots$RootSymbol",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$substInfo$1",
         "scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftAsLiteral$1",
         "scala.reflect.api.Types$ConstantTypeApi",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticTypeIdent$",
         "scala.reflect.internal.TreeGen$Yield$",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticObjectDef$",
         "scala.reflect.api.Trees$UnApplyExtractor",
         "scala.reflect.runtime.SynchronizedSymbols$SynchronizedTermSymbol",
         "scala.reflect.internal.Trees$Ident$",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$newSyntheticTypeParams$1",
         "scala.reflect.internal.Types$ArgsTypeRef",
         "scala.reflect.internal.TreeGen$Filter$",
         "scala.reflect.internal.Trees$$anonfun$newTypeDef$default$5$1",
         "scala.reflect.api.StandardLiftables$StandardUnliftableInstances$$anonfun$unliftTuple13$1",
         "scala.reflect.internal.tpe.FindMembers$FindMember",
         "scala.reflect.api.Trees$LiteralApi",
         "scala.reflect.internal.SymbolTable$$anonfun$atPhaseStackMessage$1",
         "scala.reflect.internal.Symbols$Symbol$$anonfun$overriddenSymbol$1",
         "scala.reflect.internal.Trees$TreeContextApiImpl$$anonfun$equalsStructure$1",
         "scala.reflect.internal.Scopes$Scope$$anonfun$lookupClass$1",
         "scala.reflect.internal.SymbolPairs$Cursor$$anonfun$init$2$$anonfun$apply$1",
         "scala.reflect.internal.SymbolPairs$Cursor$$anonfun$init$2$$anonfun$apply$2",
         "scala.reflect.api.Types$ExistentialTypeExtractor",
         "scala.reflect.internal.transform.Erasure$$anonfun$1",
         "scala.reflect.internal.Scopes$NameLookup",
         "scala.reflect.internal.transform.Erasure$$anonfun$2",
         "scala.reflect.internal.Types$PackageClassInfoType",
         "scala.reflect.internal.Reporting$PerRunReportingBase",
         "scala.reflect.internal.pickling.UnPickler$Scan$$anonfun$readExtSymbol$1$1$$anonfun$apply$1$$anonfun$apply$2",
         "scala.reflect.internal.AnnotationCheckers$$anonfun$adaptTypeOfReturn$1$$anonfun$apply$1",
         "scala.reflect.internal.Mirrors$RootsBase$$anonfun$getModuleOrClass$1",
         "scala.reflect.internal.AnnotationCheckers$$anonfun$annotationsConform$1",
         "scala.reflect.internal.Mirrors$RootsBase$$anonfun$getModuleOrClass$2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$toAnnotArg$PrimitiveClass$",
         "scala.reflect.internal.Trees$Annotated$",
         "scala.reflect.internal.SymbolPairs$SymbolPair",
         "scala.reflect.internal.tpe.TypeMaps$SubstSymMap$mapTreeSymbols$$anonfun$transform$1",
         "scala.reflect.internal.tpe.TypeMaps$SubstSymMap$mapTreeSymbols$$anonfun$transform$2",
         "scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$loadAnnotation$1$1",
         "scala.reflect.internal.util.TableDef$Table$$anonfun$2",
         "scala.reflect.runtime.ReflectionUtils$$anonfun$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$SyntacticPackageObjectDef$",
         "scala.reflect.internal.util.TableDef$Table$$anonfun$3",
         "scala.reflect.internal.Types$$anonfun$check$1$1",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solve$2",
         "scala.reflect.internal.util.TableDef$Table$$anonfun$4",
         "scala.reflect.internal.Mirrors$RootsBase$$anonfun$1",
         "scala.reflect.internal.Types$TypeRef$$anonfun$customToString$1",
         "scala.reflect.internal.tpe.TypeConstraints$$anonfun$solve$1",
         "scala.reflect.internal.util.TableDef$Table$$anonfun$5",
         "scala.reflect.runtime.ReflectionUtils$$anonfun$2",
         "scala.reflect.internal.util.HashSet$$anonfun$addEntries$1",
         "scala.reflect.internal.Mirrors$RootsBase",
         "scala.reflect.internal.util.TableDef$Table$$anonfun$1",
         "scala.reflect.internal.Trees$LabelDef$$anonfun$apply$4",
         "scala.reflect.runtime.TwoWayCaches",
         "scala.reflect.api.Types$ClassInfoTypeExtractor",
         "scala.reflect.internal.Kinds$KindErrors",
         "scala.reflect.internal.Types$ExistentialType$$anonfun$parents$1",
         "scala.reflect.api.JavaUniverse",
         "scala.reflect.internal.FatalError",
         "scala.reflect.internal.Kinds$ProperTypeKind$$anonfun$starNotation$1",
         "scala.reflect.internal.Phase",
         "scala.reflect.internal.SymbolTable$$anonfun$debuglogResultIf$1",
         "scala.reflect.internal.Trees$If$",
         "scala.reflect.internal.tpe.TypeMaps$class",
         "scala.reflect.api.Trees$AssignOrNamedArgApi",
         "scala.reflect.api.Scopes$MemberScopeApi",
         "scala.reflect.api.Types$MethodTypeApi",
         "scala.reflect.macros.Evals",
         "scala.reflect.api.Symbols$TypeSymbolApi",
         "scala.reflect.internal.StdNames$class",
         "scala.reflect.internal.Variances$$anonfun$inArgs$1$1",
         "scala.reflect.internal.Printers$CodePrinter$$anonfun$printColumn$3",
         "scala.reflect.internal.util.AbstractFileClassLoader",
         "scala.reflect.internal.ReporterImpl$ERROR$",
         "scala.reflect.internal.TypeDebugging$class",
         "scala.reflect.internal.Types$TypeVar$$anonfun$setInst$1",
         "scala.reflect.internal.Symbols$$anonfun$markFlagsCompleted$1",
         "scala.reflect.internal.Types$$anonfun$rebind$1",
         "scala.reflect.internal.ReificationSupport$ReificationSupportImpl$$anonfun$mkTparams$1",
         "scala.reflect.io.Path$$anonfun$segments$1",
         "scala.reflect.api.StandardLiftables$StandardLiftableInstances$$anonfun$liftList$1",
         "scala.reflect.internal.Types$NoPrefix$",
         "scala.reflect.internal.StdAttachments$Attachable",
         "scala.reflect.internal.Types$$anonfun$rebind$2",
         "scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$$anonfun$adaptToNewRun$7",
         "scala.reflect.internal.tpe.TypeMaps$normalizeAliases$",
         "scala.reflect.internal.Types$$anonfun$specializedBy$1$1",
         "scala.reflect.internal.util.TableDef$Column"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     },
     {
      "id": "org.hamcrest:hamcrest-all:jar:1.3:test",
      "coordinates": "org.hamcrest:hamcrest-all:1.3",
      "groupId": "org.hamcrest",
      "artifactId": "hamcrest-all",
      "version": "1.3",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 306578,
      "type": "transitive",
      "status": "bloated",
      "parent": "de.schauderhaft.degraph:degraph-check:jar:0.1.4:test",
      "allTypes": [
       "org.hamcrest.generator.qdox.model.annotation.AnnotationVisitor",
       "org.hamcrest.generator.QDoxFactoryReader",
       "org.hamcrest.generator.qdox.JavaDocBuilder$ErrorHandler",
       "org.hamcrest.generator.qdox.model.ModelBuilder",
       "org.hamcrest.collection.IsArrayContainingInOrder",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationCast",
       "org.hamcrest.collection.IsArrayWithSize",
       "org.hamcrest.JavaLangMatcherAssert",
       "org.hamcrest.generator.qdox.model.JavaPackage",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationMinusSign",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationShiftLeft",
       "org.hamcrest.generator.qdox.parser.impl.Parser$1",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationQuery",
       "org.hamcrest.DiagnosingMatcher",
       "org.hamcrest.BaseDescription",
       "org.hamcrest.generator.qdox.parser.impl.JFlexLexer$ZzFlexStreamInfo",
       "org.hamcrest.core.IsNot",
       "org.hamcrest.core.AllOf",
       "org.hamcrest.core.Every",
       "org.hamcrest.collection.IsIterableContainingInAnyOrder$Matching",
       "org.hamcrest.beans.SamePropertyValuesAs",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationParenExpression",
       "org.hamcrest.core.IsEqual",
       "org.hamcrest.generator.qdox.JavaDocBuilder",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationLogicalOr",
       "org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries",
       "org.hamcrest.object.IsCompatibleType",
       "org.hamcrest.generator.qdox.DefaultJavaClassCache",
       "org.hamcrest.text.IsEmptyString",
       "org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher",
       "org.hamcrest.generator.qdox.model.annotation.EvaluatingVisitor",
       "org.hamcrest.generator.qdox.model.JavaField",
       "org.hamcrest.collection.IsIterableWithSize",
       "org.hamcrest.integration.JMock1Adapter",
       "org.hamcrest.Matcher",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationLogicalAnd",
       "org.hamcrest.generator.QDoxFactoryReader$1",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationShiftRight",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationDivide",
       "org.hamcrest.collection.IsEmptyIterable",
       "org.hamcrest.generator.qdox.model.TypeVariable",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationExclusiveOr",
       "org.hamcrest.generator.qdox.parser.ParseException",
       "org.hamcrest.generator.qdox.parser.structs.TagDef",
       "org.hamcrest.collection.IsArrayContainingInAnyOrder",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationLogicalNot",
       "org.hamcrest.collection.IsEmptyCollection",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationEquals",
       "org.hamcrest.generator.qdox.model.AbstractBaseJavaEntity",
       "org.hamcrest.generator.qdox.tools.QDoxTester$ConsoleReporter",
       "org.hamcrest.core.StringContains",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationFieldRef",
       "org.hamcrest.generator.qdox.parser.impl.JFlexLexer",
       "org.hamcrest.generator.qdox.model.JavaClassParent",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationValue",
       "org.hamcrest.generator.qdox.parser.Lexer",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationLessEquals",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationNotEquals",
       "org.hamcrest.generator.qdox.directorywalker.DirectoryScanner$1",
       "org.hamcrest.TypeSafeMatcher",
       "org.hamcrest.generator.qdox.model.DefaultDocletTagFactory",
       "org.hamcrest.text.IsEqualIgnoringCase",
       "org.hamcrest.generator.QuickReferenceWriter",
       "org.hamcrest.generator.QDox",
       "org.hamcrest.Condition$NotMatched",
       "org.hamcrest.Description$NullDescription",
       "org.hamcrest.SelfDescribing",
       "org.hamcrest.generator.qdox.parser.structs.PackageDef",
       "org.hamcrest.generator.qdox.model.DefaultDocletTag",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationAdd",
       "org.hamcrest.generator.qdox.model.util.OrderedMap$Entry",
       "org.hamcrest.generator.qdox.parser.impl.Parser$Value",
       "org.hamcrest.internal.SelfDescribingValue",
       "org.hamcrest.EasyMock2Matchers",
       "org.hamcrest.internal.ReflectiveTypeFinder",
       "org.hamcrest.core.CombinableMatcher",
       "org.hamcrest.generator.qdox.JavaDocBuilder$DefaultErrorHandler",
       "org.hamcrest.generator.qdox.parser.structs.TypeVariableDef",
       "org.hamcrest.generator.qdox.tools.QDoxTester",
       "org.hamcrest.text.StringContainsInOrder",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationLessThan",
       "org.hamcrest.core.IsCollectionContaining",
       "org.hamcrest.generator.qdox.model.JavaSource",
       "org.hamcrest.internal.ArrayIterator",
       "org.hamcrest.collection.IsMapContaining",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationNot",
       "org.hamcrest.generator.FactoryWriter",
       "org.hamcrest.generator.qdox.model.JavaMethod",
       "org.hamcrest.collection.IsIterableContainingInAnyOrder",
       "org.hamcrest.generator.qdox.parser.impl.Parser",
       "org.hamcrest.StringDescription",
       "org.hamcrest.generator.qdox.model.DocletTagFactory",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationMultiply",
       "org.hamcrest.generator.qdox.parser.structs.AnnoDef",
       "org.hamcrest.generator.SugarGenerator",
       "org.hamcrest.core.Is",
       "org.hamcrest.collection.IsIn",
       "org.hamcrest.generator.qdox.model.DocletTag",
       "org.hamcrest.generator.qdox.model.JavaClass",
       "org.hamcrest.generator.qdox.model.annotation.RecursiveAnnotationVisitor",
       "org.hamcrest.generator.qdox.model.AbstractInheritableJavaEntity",
       "org.hamcrest.core.SubstringMatcher",
       "org.hamcrest.number.IsCloseTo",
       "org.hamcrest.xml.HasXPath$1",
       "org.hamcrest.Condition",
       "org.hamcrest.CustomMatcher",
       "org.hamcrest.generator.qdox.directorywalker.SuffixFilter",
       "org.hamcrest.core.DescribedAs",
       "org.hamcrest.generator.qdox.junit.APITestCase$1",
       "org.hamcrest.generator.config.XmlConfigurator",
       "org.hamcrest.generator.qdox.directorywalker.DirectoryScanner",
       "org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher",
       "org.hamcrest.generator.qdox.model.util.TagParser",
       "org.hamcrest.beans.HasPropertyWithValue$1",
       "org.hamcrest.generator.qdox.parser.structs.TypeDef",
       "org.hamcrest.integration.EasyMock2Adapter",
       "org.hamcrest.beans.HasPropertyWithValue$2",
       "org.hamcrest.number.OrderingComparison",
       "org.hamcrest.generator.qdox.model.IndentBuffer",
       "org.hamcrest.generator.qdox.tools.QDoxTester$Reporter",
       "org.hamcrest.JMock1Matchers",
       "org.hamcrest.generator.qdox.model.JavaClassCache",
       "org.hamcrest.generator.qdox.Searcher",
       "org.hamcrest.generator.qdox.model.ClassLibrary",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationBinaryOperator",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationGreaterEquals",
       "org.hamcrest.CustomTypeSafeMatcher",
       "org.hamcrest.generator.ReflectiveFactoryReader$1",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationTypeRef",
       "org.hamcrest.TypeSafeDiagnosingMatcher",
       "org.hamcrest.BaseMatcher",
       "org.hamcrest.generator.HamcrestFactoryWriter",
       "org.hamcrest.beans.PropertyUtil",
       "org.hamcrest.generator.qdox.model.BeanProperty",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationConstant",
       "org.hamcrest.internal.SelfDescribingValueIterator",
       "org.hamcrest.generator.qdox.model.JavaMethodDelegate",
       "org.hamcrest.generator.qdox.model.Annotation",
       "org.hamcrest.collection.IsCollectionWithSize",
       "org.hamcrest.generator.qdox.model.WildcardType",
       "org.hamcrest.core.IsSame",
       "org.hamcrest.Condition$Matched",
       "org.hamcrest.beans.HasProperty",
       "org.hamcrest.object.HasToString",
       "org.hamcrest.object.IsEventFrom",
       "org.hamcrest.generator.qdox.model.util.OrderedMap",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationUnaryOperator",
       "org.hamcrest.generator.qdox.junit.APITestCase",
       "org.hamcrest.generator.qdox.directorywalker.Filter",
       "org.hamcrest.generator.qdox.parser.structs.FieldDef",
       "org.hamcrest.core.IsNull",
       "org.hamcrest.CoreMatchers",
       "org.hamcrest.collection.IsIterableContainingInOrder",
       "org.hamcrest.generator.FactoryMethod$Parameter",
       "org.hamcrest.generator.qdox.parser.Builder",
       "org.hamcrest.collection.IsArray",
       "org.hamcrest.Condition$Step",
       "org.hamcrest.generator.qdox.model.ModelBuilder$1",
       "org.hamcrest.generator.qdox.tools.QDoxTester$1",
       "org.hamcrest.core.CombinableMatcher$CombinableBothMatcher",
       "org.hamcrest.core.StringEndsWith",
       "org.hamcrest.generator.FactoryMethod",
       "org.hamcrest.core.StringStartsWith",
       "org.hamcrest.generator.qdox.parser.structs.WildcardTypeDef",
       "org.hamcrest.text.IsEqualIgnoringWhiteSpace",
       "org.hamcrest.xml.HasXPath",
       "org.hamcrest.generator.qdox.JavaClassContext",
       "org.hamcrest.generator.qdox.model.util.OrderedMap$OrderedSet",
       "org.hamcrest.beans.HasPropertyWithValue",
       "org.hamcrest.generator.SugarConfiguration",
       "org.hamcrest.generator.EasyMock2FactoryWriter",
       "org.hamcrest.generator.qdox.JavaDocBuilder$2",
       "org.hamcrest.MatcherAssert",
       "org.hamcrest.generator.qdox.JavaDocBuilder$1",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationPlusSign",
       "org.hamcrest.generator.qdox.ant.AbstractQdoxTask",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationGreaterThan",
       "org.hamcrest.generator.qdox.model.AbstractJavaEntity",
       "org.hamcrest.Condition$1",
       "org.hamcrest.collection.IsArrayContaining",
       "org.hamcrest.generator.qdox.parser.structs.ClassDef",
       "org.hamcrest.generator.qdox.parser.structs.MethodDef",
       "org.hamcrest.generator.config.XmlConfigurator$1",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationSubtract",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationValueList",
       "org.hamcrest.core.AnyOf",
       "org.hamcrest.generator.qdox.model.Member",
       "org.hamcrest.core.IsAnything",
       "org.hamcrest.core.ShortcutCombination",
       "org.hamcrest.Factory",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationOr",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationRemainder",
       "org.hamcrest.core.IsInstanceOf",
       "org.hamcrest.Description",
       "org.hamcrest.number.BigDecimalCloseTo",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationUnsignedShiftRight",
       "org.hamcrest.generator.qdox.parser.structs.LocatedDef",
       "org.hamcrest.Matchers",
       "org.hamcrest.generator.qdox.model.Type",
       "org.hamcrest.FeatureMatcher",
       "org.hamcrest.generator.qdox.model.JavaParameter",
       "org.hamcrest.generator.qdox.model.annotation.AnnotationAnd",
       "org.hamcrest.generator.qdox.directorywalker.FileVisitor",
       "org.hamcrest.generator.ReflectiveFactoryReader"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "org.hamcrest:hamcrest-library:jar:1.3:test",
    "coordinates": "org.hamcrest:hamcrest-library:1.3",
    "groupId": "org.hamcrest",
    "artifactId": "hamcrest-library",
    "version": "1.3",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 53070,
    "type": "inherited",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.hamcrest.collection.IsArrayContaining",
     "org.hamcrest.collection.IsIterableContainingInOrder",
     "org.hamcrest.collection.IsArray",
     "org.hamcrest.collection.IsArrayContainingInAnyOrder",
     "org.hamcrest.collection.IsEmptyCollection",
     "org.hamcrest.collection.IsIn",
     "org.hamcrest.collection.IsIterableContainingInAnyOrder$Matching",
     "org.hamcrest.beans.SamePropertyValuesAs",
     "org.hamcrest.beans.PropertyUtil",
     "org.hamcrest.collection.IsCollectionWithSize",
     "org.hamcrest.number.BigDecimalCloseTo",
     "org.hamcrest.number.IsCloseTo",
     "org.hamcrest.xml.HasXPath$1",
     "org.hamcrest.beans.HasProperty",
     "org.hamcrest.text.IsEqualIgnoringWhiteSpace",
     "org.hamcrest.collection.IsArrayContainingInOrder",
     "org.hamcrest.object.HasToString",
     "org.hamcrest.object.IsEventFrom",
     "org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries",
     "org.hamcrest.object.IsCompatibleType",
     "org.hamcrest.text.StringContainsInOrder",
     "org.hamcrest.Matchers",
     "org.hamcrest.xml.HasXPath",
     "org.hamcrest.collection.IsArrayWithSize",
     "org.hamcrest.beans.HasPropertyWithValue",
     "org.hamcrest.text.IsEmptyString",
     "org.hamcrest.collection.IsMapContaining",
     "org.hamcrest.text.IsEqualIgnoringCase",
     "org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher",
     "org.hamcrest.collection.IsIterableWithSize",
     "org.hamcrest.beans.HasPropertyWithValue$1",
     "org.hamcrest.beans.HasPropertyWithValue$2",
     "org.hamcrest.number.OrderingComparison",
     "org.hamcrest.collection.IsEmptyIterable",
     "org.hamcrest.collection.IsIterableContainingInAnyOrder"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "org.hamcrest:hamcrest-core:jar:1.3:test",
    "coordinates": "org.hamcrest:hamcrest-core:1.3",
    "groupId": "org.hamcrest",
    "artifactId": "hamcrest-core",
    "version": "1.3",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 45024,
    "type": "inherited",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.hamcrest.Condition$1",
     "org.hamcrest.core.IsNull",
     "org.hamcrest.BaseDescription",
     "org.hamcrest.CoreMatchers",
     "org.hamcrest.core.IsNot",
     "org.hamcrest.StringDescription",
     "org.hamcrest.internal.SelfDescribingValue",
     "org.hamcrest.internal.ReflectiveTypeFinder",
     "org.hamcrest.Condition$Step",
     "org.hamcrest.CustomTypeSafeMatcher",
     "org.hamcrest.core.CombinableMatcher",
     "org.hamcrest.core.AllOf",
     "org.hamcrest.core.Every",
     "org.hamcrest.core.Is",
     "org.hamcrest.TypeSafeDiagnosingMatcher",
     "org.hamcrest.BaseMatcher",
     "org.hamcrest.core.AnyOf",
     "org.hamcrest.core.StringContains",
     "org.hamcrest.core.CombinableMatcher$CombinableBothMatcher",
     "org.hamcrest.core.IsAnything",
     "org.hamcrest.core.IsEqual",
     "org.hamcrest.core.ShortcutCombination",
     "org.hamcrest.internal.SelfDescribingValueIterator",
     "org.hamcrest.Factory",
     "org.hamcrest.core.StringEndsWith",
     "org.hamcrest.core.IsInstanceOf",
     "org.hamcrest.core.IsSame",
     "org.hamcrest.Condition$Matched",
     "org.hamcrest.core.StringStartsWith",
     "org.hamcrest.Description",
     "org.hamcrest.core.SubstringMatcher",
     "org.hamcrest.Condition",
     "org.hamcrest.CustomMatcher",
     "org.hamcrest.TypeSafeMatcher",
     "org.hamcrest.core.DescribedAs",
     "org.hamcrest.core.IsCollectionContaining",
     "org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher",
     "org.hamcrest.internal.ArrayIterator",
     "org.hamcrest.FeatureMatcher",
     "org.hamcrest.MatcherAssert",
     "org.hamcrest.Matcher",
     "org.hamcrest.Condition$NotMatched",
     "org.hamcrest.Description$NullDescription",
     "org.hamcrest.SelfDescribing",
     "org.hamcrest.DiagnosingMatcher"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "junit:junit:jar:4.12:test",
    "coordinates": "junit:junit:4.12",
    "groupId": "junit",
    "artifactId": "junit",
    "version": "4.12",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 314932,
    "type": "inherited",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.junit.runner.Request",
     "org.junit.experimental.categories.IncludeCategories",
     "org.junit.validator.AnnotationsValidator$AnnotatableValidator",
     "org.junit.rules.Stopwatch$1",
     "org.junit.rules.ExpectedException$ExpectedExceptionStatement",
     "org.junit.experimental.theories.ParameterSignature",
     "org.junit.internal.builders.NullBuilder",
     "junit.framework.TestSuite",
     "org.junit.validator.AnnotationsValidator$FieldValidator",
     "org.junit.runner.Result$1",
     "org.junit.ComparisonFailure$ComparisonCompactor",
     "org.junit.experimental.categories.Categories$IncludeCategory",
     "org.junit.rules.ExpectedExceptionMatcherBuilder",
     "org.junit.runners.model.FrameworkMethod$1",
     "junit.framework.JUnit4TestAdapterCache$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic",
     "org.junit.AfterClass",
     "org.junit.internal.requests.SortingRequest",
     "junit.extensions.TestSetup",
     "org.junit.internal.ArrayComparisonFailure",
     "org.junit.runner.Request$1",
     "org.junit.experimental.theories.internal.AllMembersSupplier$1",
     "org.junit.runner.Computer$1",
     "org.junit.rules.ErrorCollector",
     "org.junit.internal.runners.InitializationError",
     "org.junit.rules.Verifier",
     "org.junit.rules.ExternalResource",
     "org.junit.experimental.results.FailureList",
     "org.junit.experimental.theories.PotentialAssignment$1",
     "junit.textui.ResultPrinter",
     "org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor",
     "org.junit.internal.runners.rules.ValidationError",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic",
     "org.junit.internal.runners.SuiteMethod",
     "junit.extensions.ActiveTestSuite$1",
     "org.junit.runner.RunWith",
     "org.junit.experimental.results.PrintableResult",
     "org.junit.rules.TestWatchman$1",
     "org.junit.internal.runners.statements.InvokeMethod",
     "org.junit.experimental.theories.Theories",
     "junit.extensions.ActiveTestSuite",
     "org.junit.internal.ComparisonCriteria",
     "org.junit.rules.Timeout",
     "org.junit.internal.requests.ClassRequest",
     "junit.framework.TestCase",
     "org.junit.Before",
     "org.junit.AssumptionViolatedException",
     "org.junit.Test$None",
     "org.junit.experimental.categories.IncludeCategories$IncludesAny",
     "org.junit.runner.manipulation.Filter",
     "org.junit.internal.runners.statements.FailOnTimeout$CallableStatement",
     "org.junit.runner.notification.RunNotifier$SafeNotifier",
     "org.junit.runner.notification.RunListener$ThreadSafe",
     "org.junit.Test",
     "junit.framework.JUnit4TestCaseFacade",
     "org.junit.runners.Parameterized$Parameter",
     "org.junit.internal.requests.FilterRequest",
     "org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue",
     "org.junit.experimental.categories.CategoryValidator",
     "org.junit.experimental.categories.Categories$ExcludeCategory",
     "org.junit.runners.model.TestClass$1",
     "org.junit.ComparisonFailure",
     "org.junit.runners.MethodSorters",
     "org.junit.internal.runners.MethodRoadie$1$1",
     "org.junit.runners.model.RunnerBuilder",
     "org.junit.runner.manipulation.Filterable",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1$1",
     "org.junit.validator.AnnotationsValidator$MethodValidator",
     "org.junit.experimental.max.MaxHistory$1",
     "org.junit.rules.RunRules",
     "org.junit.internal.MethodSorter",
     "org.junit.internal.Throwables",
     "org.junit.runner.notification.RunNotifier$1",
     "org.junit.internal.runners.model.EachTestNotifier",
     "org.junit.runner.notification.RunListener",
     "junit.framework.TestFailure",
     "org.junit.runner.Description",
     "org.junit.validator.AnnotationValidator",
     "org.junit.experimental.max.MaxCore$1$1",
     "org.junit.runner.notification.Failure",
     "org.junit.runner.Result$SerializedForm",
     "org.junit.validator.ValidateWith",
     "org.junit.internal.runners.statements.FailOnTimeout",
     "org.junit.internal.builders.AllDefaultPossibilitiesBuilder",
     "org.junit.runner.notification.RunNotifier$6",
     "org.junit.runner.notification.RunNotifier$7",
     "org.junit.rules.DisableOnDebug",
     "org.junit.runner.notification.RunNotifier$2",
     "org.junit.runner.notification.RunNotifier$3",
     "org.junit.runner.notification.RunNotifier$4",
     "org.junit.runners.model.NoGenericTypeParametersValidator",
     "org.junit.runner.notification.RunNotifier$5",
     "org.junit.rules.Verifier$1",
     "org.junit.runners.model.Statement",
     "junit.framework.Test",
     "org.junit.matchers.JUnitMatchers",
     "org.junit.rules.ErrorCollector$1",
     "junit.framework.JUnit4TestAdapter",
     "org.junit.experimental.categories.Categories$CategoryFilter",
     "org.junit.internal.runners.TestClass",
     "org.junit.experimental.ParallelComputer",
     "org.junit.internal.matchers.StacktracePrintingMatcher",
     "org.junit.rules.ExternalResource$1",
     "org.junit.runner.JUnitCommandLineParseResult$CommandLineParserError",
     "org.junit.internal.runners.statements.FailOnTimeout$Builder",
     "org.junit.internal.runners.MethodValidator",
     "org.junit.experimental.categories.ExcludeCategories",
     "org.junit.runner.Result$Listener",
     "org.junit.experimental.theories.Theories$TheoryAnchor$1",
     "org.junit.validator.AnnotationsValidator",
     "org.junit.internal.ExactComparisonCriteria",
     "org.junit.Assume",
     "org.junit.experimental.theories.Theories$TheoryAnchor$2",
     "org.junit.internal.JUnitSystem",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParametersFactory",
     "org.junit.rules.Stopwatch$Clock",
     "org.junit.internal.runners.ClassRoadie",
     "org.junit.internal.builders.JUnit3Builder",
     "org.junit.runners.model.FrameworkMethod",
     "org.junit.internal.builders.IgnoredBuilder",
     "org.junit.runners.model.TestTimedOutException",
     "org.junit.internal.runners.statements.FailOnTimeout$1",
     "org.junit.experimental.theories.internal.SpecificDataPointsSupplier",
     "org.junit.runners.JUnit4",
     "org.junit.internal.runners.JUnit4ClassRunner$1",
     "org.junit.internal.runners.JUnit4ClassRunner$2",
     "org.junit.runner.JUnitCommandLineParseResult",
     "org.junit.Ignore",
     "junit.framework.Assert",
     "org.junit.runners.parameterized.ParametersRunnerFactory",
     "org.junit.experimental.theories.ParametersSuppliedBy",
     "junit.extensions.TestDecorator",
     "org.junit.validator.TestClassValidator",
     "org.junit.internal.runners.rules.RuleMemberValidator$1",
     "org.junit.runner.Result",
     "org.junit.runner.JUnitCore",
     "org.junit.experimental.theories.Theories$TheoryAnchor",
     "junit.extensions.TestSetup$1",
     "org.junit.internal.InexactComparisonCriteria",
     "junit.textui.TestRunner",
     "org.junit.runners.model.RunnerScheduler",
     "org.junit.internal.AssumptionViolatedException",
     "org.junit.runner.FilterFactories",
     "org.junit.internal.matchers.ThrowableMessageMatcher",
     "org.junit.experimental.theories.ParameterSupplier",
     "org.junit.experimental.max.MaxCore",
     "org.junit.runners.BlockJUnit4ClassRunner",
     "org.junit.runner.FilterFactory$FilterNotCreatedException",
     "junit.framework.ComparisonFailure",
     "org.junit.ClassRule",
     "org.junit.runners.model.FrameworkMember",
     "org.junit.internal.runners.JUnit38ClassRunner$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule",
     "org.junit.experimental.results.ResultMatchers$1",
     "org.junit.experimental.theories.Theory",
     "org.junit.internal.MethodSorter$2",
     "org.junit.internal.builders.JUnit4Builder",
     "org.junit.experimental.results.ResultMatchers$2",
     "org.junit.runners.BlockJUnit4ClassRunner$1",
     "org.junit.internal.MethodSorter$1",
     "org.junit.internal.builders.SuiteMethodBuilder",
     "org.junit.experimental.results.ResultMatchers$3",
     "org.junit.runners.parameterized.TestWithParameters",
     "org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener",
     "org.junit.experimental.ParallelComputer$1",
     "org.junit.internal.runners.MethodRoadie$1",
     "org.junit.internal.runners.MethodRoadie$2",
     "org.junit.runners.ParentRunner$3",
     "org.junit.runners.Parameterized$UseParametersRunnerFactory",
     "org.junit.runners.ParentRunner$4",
     "org.junit.runners.ParentRunner$1",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic",
     "org.junit.runners.ParentRunner$2",
     "org.junit.experimental.categories.Category",
     "org.junit.rules.TestWatcher",
     "org.junit.internal.runners.MethodRoadie",
     "org.junit.runners.Suite",
     "org.junit.runner.manipulation.Sorter$1",
     "org.junit.internal.builders.IgnoredClassRunner",
     "org.junit.experimental.theories.internal.Assignments",
     "org.junit.internal.matchers.TypeSafeMatcher",
     "org.junit.experimental.theories.suppliers.TestedOnSupplier",
     "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule",
     "org.junit.FixMethodOrder",
     "org.junit.internal.runners.FailedBefore",
     "org.junit.internal.RealSystem",
     "org.junit.runners.model.FrameworkField",
     "org.junit.rules.Stopwatch",
     "org.junit.internal.runners.statements.RunAfters",
     "org.junit.experimental.max.MaxHistory$RememberingListener",
     "org.junit.runners.model.MultipleFailureException",
     "org.junit.runners.model.Annotatable",
     "org.junit.experimental.theories.internal.ParameterizedAssertionError",
     "org.junit.rules.TestWatchman",
     "org.junit.runner.Describable",
     "org.junit.runner.Runner",
     "org.junit.rules.TestName",
     "org.junit.experimental.theories.internal.BooleanSupplier",
     "org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule",
     "org.junit.runners.model.InitializationError",
     "org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator",
     "org.junit.internal.TextListener",
     "org.junit.experimental.categories.CategoryFilterFactory",
     "org.junit.internal.runners.TestMethod",
     "org.junit.runners.Parameterized$Parameters",
     "junit.framework.AssertionFailedError",
     "org.junit.validator.PublicClassValidator",
     "org.junit.experimental.categories.ExcludeCategories$ExcludesAny",
     "junit.framework.JUnit4TestAdapterCache",
     "org.junit.experimental.theories.internal.EnumSupplier",
     "junit.framework.TestSuite$1",
     "junit.framework.TestListener",
     "org.junit.runners.ParentRunner",
     "org.junit.experimental.runners.Enclosed",
     "org.junit.Assert",
     "org.junit.experimental.max.MaxCore$1",
     "junit.framework.Protectable",
     "org.junit.internal.runners.JUnit4ClassRunner",
     "org.junit.rules.Timeout$Builder",
     "org.junit.runner.FilterFactory",
     "org.junit.rules.MethodRule",
     "org.junit.rules.Stopwatch$InternalWatcher",
     "junit.framework.ComparisonCompactor",
     "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException",
     "org.junit.runner.FilterFactoryParams",
     "junit.framework.TestResult$1",
     "org.junit.runners.model.TestClass",
     "org.junit.runner.manipulation.Sortable",
     "org.junit.internal.Classes",
     "org.junit.experimental.theories.DataPoint",
     "org.junit.runners.model.TestClass$FieldComparator",
     "org.junit.runner.Computer",
     "org.junit.After",
     "junit.framework.TestResult",
     "junit.runner.BaseTestRunner",
     "org.junit.runner.notification.SynchronizedRunListener",
     "org.junit.internal.builders.AnnotatedBuilder",
     "org.junit.runners.Parameterized",
     "org.junit.validator.AnnotationsValidator$ClassValidator",
     "org.junit.internal.runners.statements.Fail",
     "org.junit.runner.manipulation.Sorter",
     "org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters",
     "org.junit.internal.runners.ErrorReportingRunner",
     "org.junit.experimental.results.ResultMatchers",
     "org.junit.runners.AllTests",
     "org.junit.runners.Suite$SuiteClasses",
     "org.junit.runner.manipulation.NoTestsRemainException",
     "org.junit.experimental.theories.internal.AllMembersSupplier",
     "org.junit.experimental.theories.FromDataPoints",
     "org.junit.runner.notification.StoppedByUserException",
     "org.junit.experimental.theories.suppliers.TestedOn",
     "org.junit.internal.runners.rules.RuleMemberValidator",
     "org.junit.experimental.theories.DataPoints",
     "org.junit.experimental.categories.Categories",
     "junit.runner.TestRunListener",
     "org.junit.experimental.max.MaxHistory",
     "org.junit.BeforeClass",
     "org.junit.rules.TestRule",
     "org.junit.internal.runners.statements.RunBefores",
     "org.junit.internal.runners.JUnit38ClassRunner",
     "org.junit.rules.Timeout$1",
     "org.junit.runner.manipulation.Filter$1",
     "org.junit.ComparisonFailure$1",
     "org.junit.runner.manipulation.Filter$2",
     "org.junit.runner.manipulation.Filter$3",
     "org.junit.validator.AnnotationValidatorFactory",
     "org.junit.experimental.theories.PotentialAssignment",
     "junit.extensions.RepeatedTest",
     "org.junit.rules.TestWatcher$1",
     "org.junit.rules.ExpectedException",
     "org.junit.internal.runners.model.MultipleFailureException",
     "junit.runner.Version",
     "org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule",
     "org.junit.experimental.max.MaxHistory$TestComparator",
     "org.junit.internal.runners.rules.RuleMemberValidator$Builder",
     "org.junit.runners.model.TestClass$MethodComparator",
     "org.junit.internal.runners.statements.ExpectException",
     "org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule",
     "org.junit.internal.runners.model.ReflectiveCallable",
     "org.junit.rules.RuleChain",
     "org.junit.experimental.max.CouldNotReadCoreException",
     "org.junit.Rule",
     "org.junit.internal.matchers.ThrowableCauseMatcher",
     "org.junit.runner.notification.RunNotifier",
     "org.junit.validator.AnnotationsValidator$1",
     "org.junit.rules.TemporaryFolder"
    ],
    "usedTypes": [
     "org.junit.AfterClass",
     "org.junit.BeforeClass",
     "org.junit.runners.Suite$SuiteClasses",
     "org.junit.runners.Parameterized$Parameters",
     "org.junit.runner.RunWith",
     "org.junit.Test",
     "org.junit.runners.Parameterized$Parameter",
     "org.junit.runners.Suite",
     "org.junit.After",
     "org.junit.Assume",
     "org.junit.experimental.runners.Enclosed",
     "org.junit.Assert",
     "org.junit.runners.Parameterized",
     "org.junit.Before"
    ],
    "usageRatio": 0.04895104895104895,
    "children": []
   },
   {
    "id": "org.mockito:mockito-core:jar:3.0.0:test",
    "coordinates": "org.mockito:mockito-core:3.0.0",
    "groupId": "org.mockito",
    "artifactId": "mockito-core",
    "version": "3.0.0",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 591095,
    "type": "inherited",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.mockito.internal.configuration.plugins.PluginInitializer",
     "org.mockito.internal.debugging.InvocationsPrinter$1",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls",
     "org.mockito.internal.hamcrest.MatcherGenericTypeExtractor",
     "org.mockito.internal.util.ObjectMethodsGuru",
     "org.mockito.internal.invocation.RealMethod$FromCallable$1",
     "org.mockito.internal.verification.AtLeast",
     "org.mockito.internal.creation.bytebuddy.MockAccess",
     "org.mockito.internal.handler.MockHandlerFactory",
     "org.mockito.internal.invocation.TypeSafeMatching",
     "org.mockito.internal.matchers.InstanceOf",
     "org.mockito.internal.configuration.injection.filter.OngoingInjector",
     "org.mockito.internal.debugging.VerboseMockInvocationLogger",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction",
     "org.mockito.internal.configuration.plugins.PluginLoader$1",
     "org.mockito.internal.exceptions.stacktrace.StackTraceFilter",
     "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool",
     "org.mockito.internal.invocation.finder.AllInvocationsFinder",
     "org.mockito.internal.runners.util.FailureDetector",
     "org.mockito.exceptions.misusing.FriendlyReminderException",
     "org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf",
     "org.mockito.internal.progress.SequenceNumber",
     "org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings",
     "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator",
     "org.mockito.internal.invocation.RealMethod$FromBehavior",
     "org.mockito.exceptions.verification.SmartNullPointerException",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$8",
     "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder",
     "org.mockito.internal.junit.VerificationCollectorImpl$1",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$7",
     "org.mockito.internal.util.ConsoleMockitoLogger",
     "org.mockito.internal.junit.VerificationCollectorImpl$2",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$9",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$3",
     "org.mockito.internal.matchers.LessOrEqual",
     "org.mockito.internal.invocation.UnusedStubsFinder",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$6",
     "org.mockito.internal.debugging.InvocationsPrinter",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$5",
     "org.mockito.internal.verification.VerificationOverTimeImpl",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$2",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$1",
     "org.mockito.internal.util.reflection.AccessibilityChanger",
     "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1",
     "org.mockito.internal.verification.VerificationModeFactory",
     "org.mockito.listeners.MockCreationListener",
     "org.mockito.internal.creation.bytebuddy.ModuleHandler",
     "org.mockito.internal.junit.StubbingArgMismatches",
     "org.mockito.internal.exceptions.Reporter",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$RealMethodCall",
     "org.mockito.internal.configuration.IndependentAnnotationEngine",
     "org.mockito.internal.verification.api.VerificationDataInOrder",
     "org.mockito.invocation.MatchableInvocation",
     "org.mockito.internal.creation.SuspendMethod",
     "org.mockito.verification.VerificationEvent",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey",
     "org.mockito.exceptions.verification.opentest4j.ArgumentsAreDifferent",
     "org.mockito.internal.progress.ArgumentMatcherStorageImpl",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$1",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SerializableRealMethodCall",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor",
     "org.mockito.internal.junit.UniversalTestListener",
     "org.mockito.internal.verification.NoMoreInteractions",
     "org.mockito.internal.configuration.injection.MockInjectionStrategy",
     "org.mockito.internal.matchers.CompareEqual",
     "org.mockito.internal.creation.bytebuddy.SubclassInjectionLoader",
     "org.mockito.internal.creation.instance.InstantiatorProviderAdapter$1",
     "org.mockito.internal.invocation.RealMethod",
     "org.mockito.internal.invocation.mockref.MockStrongReference",
     "org.mockito.exceptions.base.MockitoSerializationIssue",
     "org.mockito.NotExtensible",
     "org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator",
     "org.mockito.internal.runners.util.RunnerProvider",
     "org.mockito.MockSettings",
     "org.mockito.listeners.VerificationListener",
     "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner",
     "org.mockito.internal.debugging.LocationImpl",
     "org.mockito.internal.invocation.InvocationsFinder$1",
     "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner",
     "org.mockito.exceptions.verification.NeverWantedButInvoked",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$1",
     "org.mockito.junit.MockitoRule",
     "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler",
     "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching",
     "org.mockito.plugins.MockMaker$TypeMockability",
     "org.mockito.listeners.MethodInvocationReport",
     "org.mockito.verification.Timeout",
     "org.mockito.internal.creation.instance.InstantiationException",
     "org.mockito.internal.util.reflection.InstanceField",
     "org.mockito.internal.stubbing.answers.DoesNothing",
     "org.mockito.Spy",
     "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
     "org.mockito.internal.junit.MockitoTestListener",
     "org.mockito.internal.verification.RegisteredInvocations",
     "org.mockito.exceptions.base.MockitoInitializationException",
     "org.mockito.internal.runners.DefaultInternalRunner",
     "org.mockito.session.MockitoSessionBuilder",
     "org.mockito.BDDMockito$BDDMyOngoingStubbing",
     "org.mockito.exceptions.verification.ArgumentsAreDifferent",
     "org.mockito.internal.stubbing.answers.Returns",
     "org.mockito.internal.matchers.text.MatchersPrinter",
     "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper",
     "org.mockito.exceptions.verification.TooFewActualInvocations",
     "org.mockito.runners.MockitoJUnitRunner$Strict",
     "org.mockito.internal.debugging.WarningsFinder",
     "org.mockito.internal.creation.settings.CreationSettings",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator",
     "org.mockito.AdditionalMatchers",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport",
     "org.mockito.internal.invocation.DefaultInvocationFactory",
     "org.mockito.internal.util.reflection.BeanPropertySetter",
     "org.mockito.Captor",
     "org.mockito.invocation.DescribedInvocation",
     "org.mockito.internal.stubbing.StubberImpl",
     "org.mockito.internal.session.MockitoSessionLoggerAdapter",
     "org.mockito.ArgumentCaptor",
     "org.mockito.internal.util.collections.IdentitySet",
     "org.mockito.internal.InternalMockHandler",
     "org.mockito.internal.configuration.MockAnnotationProcessor",
     "org.mockito.junit.MockitoJUnit",
     "org.mockito.internal.junit.StrictStubsRunnerTestListener",
     "org.mockito.stubbing.Answer1",
     "org.mockito.stubbing.Answer3",
     "org.mockito.stubbing.Answer2",
     "org.mockito.internal.stubbing.answers.ReturnsElementsOf",
     "org.mockito.stubbing.Answer5",
     "org.mockito.stubbing.Answer4",
     "org.mockito.listeners.StubbingLookupListener",
     "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet",
     "org.mockito.BDDMockito$BDDOngoingStubbingImpl",
     "org.mockito.internal.creation.instance.DefaultInstantiatorProvider",
     "org.mockito.stubbing.Answer6",
     "org.mockito.internal.invocation.InterceptedInvocation",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace",
     "org.mockito.internal.invocation.InterceptedInvocation$1",
     "org.mockito.internal.listeners.AutoCleanableListener",
     "org.mockito.internal.stubbing.DoAnswerStyleStubbing",
     "org.mockito.internal.reporting.Discrepancy",
     "org.mockito.internal.util.reflection.GenericMaster",
     "org.mockito.internal.verification.Calls",
     "org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner",
     "org.mockito.ArgumentMatchers",
     "org.mockito.mock.MockCreationSettings",
     "org.mockito.internal.configuration.plugins.PluginFileReader",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal$1",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal$2",
     "org.mockito.internal.stubbing.InvocationContainerImpl",
     "org.mockito.internal.util.StringUtil",
     "org.mockito.internal.creation.bytebuddy.ModuleHandler$ModuleSystemFound",
     "org.mockito.internal.InOrderImpl",
     "org.mockito.exceptions.misusing.MissingMethodInvocationException",
     "org.mockito.exceptions.verification.TooLittleActualInvocations",
     "org.mockito.internal.stubbing.answers.InvocationInfo",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback",
     "org.mockito.MockitoFramework",
     "org.mockito.internal.configuration.InjectingAnnotationEngine",
     "org.mockito.exceptions.verification.TooManyActualInvocations",
     "org.mockito.quality.MockitoHint",
     "org.mockito.internal.matchers.ArrayEquals",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals",
     "org.mockito.internal.junit.UnusedStubbings",
     "org.mockito.internal.util.reflection.Fields",
     "org.mockito.listeners.StubbingLookupEvent",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod",
     "org.mockito.internal.matchers.Not",
     "org.mockito.exceptions.misusing.RedundantListenerException",
     "org.mockito.internal.configuration.injection.ConstructorInjection",
     "org.mockito.internal.invocation.MockitoMethod",
     "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter",
     "org.mockito.internal.invocation.mockref.MockWeakReference",
     "org.mockito.internal.util.Supplier",
     "org.mockito.internal.debugging.Localized",
     "org.mockito.internal.util.collections.ListUtil$Converter",
     "org.mockito.internal.util.reflection.SuperTypesLastSorter",
     "org.mockito.internal.junit.UniversalTestListener$1",
     "org.mockito.plugins.PluginSwitch",
     "org.mockito.internal.verification.checkers.AtLeastDiscrepancy",
     "org.mockito.internal.verification.Times",
     "org.mockito.invocation.InvocationOnMock",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry",
     "org.mockito.internal.util.collections.Iterables",
     "org.mockito.invocation.InvocationContainer",
     "org.mockito.internal.listeners.StubbingLookupNotifier$Event",
     "org.mockito.internal.stubbing.StrictnessSelector",
     "org.mockito.internal.creation.util.MockitoMethodProxy",
     "org.mockito.internal.verification.InOrderWrapper",
     "org.mockito.BDDMockito$BDDStubber",
     "org.mockito.internal.configuration.injection.scanner.MockScanner",
     "org.mockito.creation.instance.Instantiator",
     "org.mockito.internal.listeners.VerificationStartedNotifier$Event",
     "org.mockito.configuration.IMockitoConfiguration",
     "org.mockito.internal.matchers.text.ValuePrinter$1",
     "org.mockito.stubbing.OngoingStubbing",
     "org.mockito.MockitoDebugger",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal$3",
     "org.mockito.internal.matchers.LocalizedMatcher",
     "org.mockito.internal.util.reflection.Fields$3",
     "org.mockito.exceptions.misusing.InjectMocksException",
     "org.mockito.exceptions.misusing.PotentialStubbingProblem",
     "org.mockito.internal.util.reflection.LenientCopyTool",
     "org.mockito.internal.util.reflection.Fields$1",
     "org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock",
     "org.mockito.internal.util.reflection.Fields$2",
     "org.mockito.internal.junit.StubbingHint",
     "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport",
     "org.mockito.invocation.InvocationFactory$RealMethodBehavior",
     "org.mockito.internal.invocation.MatchersBinder",
     "org.mockito.internal.listeners.VerificationStartedNotifier",
     "org.mockito.verification.VerificationStrategy",
     "org.mockito.internal.creation.DelegatingMethod",
     "org.mockito.BDDMockito$Then",
     "org.mockito.exceptions.verification.VerificationInOrderFailure",
     "org.mockito.internal.debugging.WarningsPrinterImpl",
     "org.mockito.exceptions.misusing.NullInsteadOfMockException",
     "org.mockito.internal.handler.NotifiedMethodInvocationReport",
     "org.mockito.internal.matchers.Matches",
     "org.mockito.internal.invocation.MatcherApplicationStrategy",
     "org.mockito.internal.util.DefaultMockingDetails",
     "org.mockito.exceptions.misusing.UnnecessaryStubbingException",
     "org.mockito.internal.stubbing.answers.ReturnsArgumentAt",
     "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner",
     "org.mockito.internal.creation.bytebuddy.SubclassInjectionLoader$WithLookup",
     "org.mockito.listeners.MockitoListener",
     "org.mockito.internal.verification.api.VerificationDataInOrderImpl",
     "org.mockito.AdditionalAnswers",
     "org.mockito.internal.runners.util.TestMethodsFinder",
     "org.mockito.verification.After",
     "org.mockito.internal.invocation.AbstractAwareMethod",
     "org.mockito.internal.invocation.InvocationComparator",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForHashCode",
     "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter$1",
     "org.mockito.internal.verification.VerificationWrapperInOrderWrapper",
     "org.mockito.internal.stubbing.answers.AnswersWithDelay",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$LatentKey",
     "org.mockito.plugins.AnnotationEngine",
     "org.mockito.internal.util.concurrent.WeakConcurrentSet$1",
     "org.mockito.exceptions.misusing.UnfinishedMockingSessionException",
     "org.mockito.internal.util.reflection.GenericTypeExtractor",
     "org.mockito.Matchers",
     "org.mockito.internal.junit.util.JUnitFailureHacker",
     "org.mockito.internal.junit.UnusedStubbingsFinder",
     "org.mockito.exceptions.verification.NoInteractionsWanted",
     "org.mockito.mock.MockName",
     "org.mockito.internal.matchers.Same",
     "org.mockito.internal.junit.ExceptionFactory$ExceptionFactoryImpl",
     "org.mockito.internal.verification.api.InOrderContext",
     "org.mockito.internal.creation.bytebuddy.SubclassInjectionLoader$1",
     "org.mockito.internal.verification.api.VerificationData",
     "org.mockito.internal.util.collections.Sets",
     "org.mockito.internal.util.Primitives",
     "org.mockito.exceptions.verification.WantedButNotInvoked",
     "org.mockito.invocation.InvocationFactory",
     "org.mockito.internal.util.reflection.Fields$InstanceFields",
     "org.mockito.internal.verification.DefaultRegisteredInvocations",
     "org.mockito.Answers",
     "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker",
     "org.mockito.internal.verification.checkers.MissingInvocationChecker$1",
     "org.mockito.internal.verification.VerificationEventImpl",
     "org.mockito.codegen.InjectionBase",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice",
     "org.mockito.internal.util.MockUtil",
     "org.mockito.internal.configuration.plugins.PluginFinder",
     "org.mockito.internal.util.Timer",
     "org.mockito.internal.stubbing.answers.DefaultAnswerValidator",
     "org.mockito.internal.invocation.RealMethod$IsIllegal",
     "org.mockito.internal.verification.api.VerificationInOrderMode",
     "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator",
     "org.mockito.internal.reporting.PrintSettings",
     "org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers",
     "org.mockito.internal.junit.JUnitRule",
     "org.mockito.internal.util.reflection.FieldInitializationReport",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForEquals",
     "org.mockito.internal.matchers.Or",
     "org.mockito.mock.SerializableMode",
     "org.mockito.internal.invocation.InvocationMatcher",
     "org.mockito.internal.runners.StrictRunner",
     "org.mockito.internal.reporting.SmartPrinter",
     "org.mockito.internal.junit.ExceptionFactory",
     "org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers$AnswerCallback",
     "org.mockito.internal.matchers.Equality",
     "org.mockito.internal.debugging.MockitoDebuggerImpl",
     "org.mockito.internal.matchers.CompareTo",
     "org.mockito.internal.junit.NoOpTestListener",
     "org.mockito.internal.handler.MockHandlerImpl",
     "org.mockito.internal.matchers.Find",
     "org.mockito.internal.matchers.LessThan",
     "org.mockito.internal.stubbing.OngoingStubbingImpl",
     "org.mockito.exceptions.misusing.NotAMockException",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$ParameterAddingClassVisitor",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues",
     "org.mockito.internal.invocation.mockref.MockReference",
     "org.mockito.internal.stubbing.StubbingComparator",
     "org.mockito.internal.util.JavaEightUtil",
     "org.mockito.internal.progress.MockingProgressImpl",
     "org.mockito.internal.framework.DefaultMockitoFramework",
     "org.mockito.plugins.MockitoPlugins",
     "org.mockito.internal.matchers.StartsWith",
     "org.mockito.internal.configuration.GlobalConfiguration",
     "org.mockito.verification.VerificationMode",
     "org.mockito.plugins.MockMaker",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces",
     "org.mockito.internal.configuration.DefaultInjectionEngine",
     "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker",
     "org.mockito.internal.junit.ArgMismatchFinder",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType",
     "org.mockito.exceptions.misusing.MockitoConfigurationException",
     "org.mockito.runners.package-info",
     "org.mockito.junit.MockitoJUnitRunner",
     "org.mockito.internal.matchers.And",
     "org.mockito.internal.util.collections.ListUtil",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$BoundedType",
     "org.mockito.internal.util.io.IOUtil",
     "org.mockito.internal.MockitoCore",
     "org.mockito.listeners.InvocationListener",
     "org.mockito.listeners.VerificationStartedListener",
     "org.mockito.internal.debugging.FindingsListener",
     "org.mockito.internal.runners.DefaultInternalRunner$1$2",
     "org.mockito.internal.runners.DefaultInternalRunner$1$1",
     "org.mockito.stubbing.Stubber",
     "org.mockito.stubbing.Answer",
     "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker",
     "org.mockito.internal.matchers.Any",
     "org.mockito.stubbing.Stubbing",
     "org.mockito.Incubating",
     "org.mockito.stubbing.ValidableAnswer",
     "org.mockito.internal.creation.instance.InstantiatorProvider2Adapter$1",
     "org.mockito.exceptions.misusing.WrongTypeOfReturnValue",
     "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter",
     "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner",
     "org.mockito.exceptions.base.MockitoAssertionError",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializableMock",
     "org.mockito.internal.invocation.InvocationMarker",
     "org.mockito.internal.matchers.text.ValuePrinter",
     "org.mockito.internal.framework.DefaultMockitoSession$1",
     "org.mockito.runners.MockitoJUnitRunner",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$LazyHolder",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$1",
     "org.mockito.internal.verification.SingleRegisteredInvocation",
     "org.mockito.internal.stubbing.answers.ThrowsException",
     "org.mockito.internal.creation.instance.Instantiator",
     "org.mockito.internal.debugging.WarningsCollector",
     "org.mockito.ArgumentMatcher",
     "org.mockito.internal.matchers.ContainsExtraTypeInfo",
     "org.mockito.junit.MockitoJUnitRunner$Silent",
     "org.mockito.internal.creation.bytebuddy.ModuleHandler$NoModuleSystemFound",
     "org.mockito.internal.creation.bytebuddy.SubclassInjectionLoader$WithReflection",
     "org.mockito.internal.verification.checkers.MissingInvocationChecker",
     "org.mockito.internal.util.Checks",
     "org.mockito.verification.VerificationWithTimeout",
     "org.mockito.invocation.StubInfo",
     "org.mockito.internal.util.MockCreationValidator",
     "org.mockito.internal.creation.bytebuddy.BytecodeGenerator",
     "org.mockito.internal.verification.AtMost",
     "org.mockito.internal.creation.bytebuddy.MockFeatures",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType",
     "org.mockito.internal.configuration.IndependentAnnotationEngine$1",
     "org.mockito.MockitoSession",
     "org.mockito.internal.hamcrest.HamcrestArgumentMatcher",
     "org.mockito.plugins.InstantiatorProvider2",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$Identifier",
     "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$MockitoMockKey",
     "org.mockito.exceptions.misusing.InvalidUseOfMatchersException",
     "org.mockito.internal.util.concurrent.WeakConcurrentSet",
     "org.mockito.internal.matchers.EqualsWithDelta",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks$1",
     "org.mockito.internal.creation.instance.InstantiatorProvider2Adapter",
     "org.mockito.junit.MockitoJUnitRunner$StrictStubs",
     "org.mockito.internal.matchers.GreaterThan",
     "org.mockito.internal.configuration.SpyAnnotationEngine",
     "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1",
     "org.mockito.internal.configuration.ClassPathLoader",
     "org.mockito.exceptions.base.MockitoException",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectOutputStream",
     "org.mockito.internal.framework.DefaultMockitoSession",
     "org.mockito.internal.stubbing.answers.ClonesArguments",
     "org.mockito.internal.verification.Only",
     "org.mockito.internal.stubbing.ConsecutiveStubbing",
     "org.mockito.internal.stubbing.BaseStubbing",
     "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
     "org.mockito.internal.junit.DefaultStubbingLookupListener",
     "org.mockito.plugins.MockitoLogger",
     "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter",
     "org.mockito.internal.util.reflection.FieldReader",
     "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver",
     "org.mockito.internal.junit.UnusedStubbingsFinder$1",
     "org.mockito.internal.matchers.Null",
     "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker",
     "org.mockito.internal.util.concurrent.DetachedThreadLocal",
     "org.mockito.internal.junit.VerificationCollectorImpl$VerificationWrapper",
     "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$1",
     "org.mockito.internal.matchers.apachecommons.ReflectionEquals",
     "org.mockito.internal.session.MockitoLoggerAdapter",
     "org.mockito.internal.verification.VerificationWrapper",
     "org.mockito.internal.verification.DefaultRegisteredInvocations$1",
     "org.mockito.internal.matchers.VarargMatcher",
     "org.mockito.junit.VerificationCollector",
     "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins",
     "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer",
     "org.mockito.exceptions.misusing.UnfinishedVerificationException",
     "org.mockito.internal.junit.TestFinishedEvent",
     "org.mockito.exceptions.verification.MoreThanAllowedActualInvocations",
     "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator",
     "org.mockito.invocation.Location",
     "org.mockito.internal.util.Platform",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker",
     "org.mockito.internal.creation.MockSettingsImpl",
     "org.mockito.internal.debugging.LoggingListener",
     "org.mockito.MockitoAnnotations",
     "org.mockito.stubbing.VoidAnswer1",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject",
     "org.mockito.stubbing.VoidAnswer3",
     "org.mockito.stubbing.VoidAnswer2",
     "org.mockito.internal.progress.MockingProgressImpl$1",
     "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType",
     "org.mockito.stubbing.BaseStubber",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializationProxy",
     "org.mockito.internal.stubbing.DefaultLenientStubber",
     "org.mockito.internal.verification.MockAwareVerificationMode",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ReturnValueWrapper",
     "org.mockito.internal.progress.MockingProgress",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType",
     "org.mockito.internal.stubbing.answers.CallsRealMethods",
     "org.mockito.internal.invocation.ArgumentsProcessor",
     "org.mockito.internal.verification.Description",
     "org.mockito.internal.handler.InvocationNotifierHandler",
     "org.mockito.plugins.InlineMockMaker",
     "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1",
     "org.mockito.internal.junit.VerificationCollectorImpl",
     "org.mockito.internal.util.collections.ListUtil$Filter",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
     "org.mockito.internal.util.reflection.GenericMetadataSupport",
     "org.mockito.internal.stubbing.UnusedStubbingReporting",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper",
     "org.mockito.internal.creation.instance.ObjenesisInstantiator",
     "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString",
     "org.mockito.internal.runners.RunnerFactory",
     "org.mockito.Mock",
     "org.mockito.internal.util.reflection.FieldInitializer",
     "org.mockito.internal.invocation.SerializableMethod",
     "org.mockito.BDDMockito$BDDStubberImpl",
     "org.mockito.internal.matchers.GreaterOrEqual",
     "org.mockito.internal.matchers.text.MatcherToString",
     "org.mockito.stubbing.LenientStubber",
     "org.mockito.internal.listeners.StubbingLookupNotifier",
     "org.mockito.internal.configuration.injection.filter.OngoingInjector$1",
     "org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
     "org.mockito.internal.invocation.ArgumentMatcherAction",
     "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SelfCallInfo",
     "org.mockito.internal.matchers.InstanceOf$VarArgAware",
     "org.mockito.invocation.MockHandler",
     "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker$1",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectInputStream",
     "org.mockito.InjectMocks",
     "org.mockito.plugins.InstantiatorProvider",
     "org.mockito.internal.runners.RunnerFactory$1",
     "org.mockito.internal.runners.RunnerFactory$2",
     "org.mockito.internal.runners.RunnerFactory$3",
     "org.mockito.stubbing.VoidAnswer5",
     "org.mockito.stubbing.VoidAnswer4",
     "org.mockito.internal.progress.ArgumentMatcherStorage",
     "org.mockito.stubbing.VoidAnswer6",
     "org.mockito.internal.junit.DefaultTestFinishedEvent",
     "org.mockito.internal.util.MockNameImpl",
     "org.mockito.internal.runners.InternalRunner",
     "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$1",
     "org.mockito.BDDMockito",
     "org.mockito.internal.matchers.Equals",
     "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification",
     "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport",
     "org.mockito.creation.instance.InstantiationException",
     "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1",
     "org.mockito.internal.junit.MismatchReportingTestListener",
     "org.mockito.runners.VerboseMockitoJUnitRunner$1",
     "org.mockito.CheckReturnValue",
     "org.mockito.internal.creation.instance.InstantiatorProviderAdapter",
     "org.mockito.internal.util.reflection.FieldSetter",
     "org.mockito.internal.creation.bytebuddy.ClassCreatingMockMaker",
     "org.mockito.internal.configuration.plugins.PluginRegistry",
     "org.mockito.internal.configuration.CaptorAnnotationProcessor",
     "org.mockito.configuration.AnnotationEngine",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$12",
     "org.mockito.hamcrest.MockitoHamcrest",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$11",
     "org.mockito.invocation.Invocation",
     "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$10",
     "org.mockito.internal.stubbing.StubbedInvocationMatcher",
     "org.mockito.configuration.DefaultMockitoConfiguration",
     "org.mockito.internal.exceptions.VerificationAwareInvocation",
     "org.mockito.verification.VerificationAfterDelay",
     "org.mockito.internal.session.DefaultMockitoSessionBuilder",
     "org.mockito.runners.MockitoJUnitRunner$Silent",
     "org.mockito.internal.creation.instance.ConstructorInstantiator",
     "org.mockito.internal.configuration.plugins.PluginLoader",
     "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter",
     "org.mockito.internal.configuration.injection.MockInjectionStrategy$1",
     "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations",
     "org.mockito.internal.handler.NullResultGuardian",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer",
     "org.mockito.internal.invocation.RealMethod$FromCallable",
     "org.mockito.internal.creation.bytebuddy.ModuleHandler$1",
     "org.mockito.internal.junit.ExceptionFactory$2",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer",
     "org.mockito.internal.junit.ExceptionFactory$3",
     "org.mockito.session.MockitoSessionLogger",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator",
     "org.mockito.internal.junit.ExceptionFactory$1",
     "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$MethodParameterStrippingMethodVisitor",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport",
     "org.mockito.internal.creation.bytebuddy.SubclassLoader",
     "org.mockito.internal.matchers.NotNull",
     "org.mockito.internal.configuration.plugins.Plugins",
     "org.mockito.internal.matchers.text.FormattedText",
     "org.mockito.internal.configuration.injection.filter.MockCandidateFilter",
     "org.mockito.internal.configuration.injection.MockInjection$1",
     "org.mockito.runners.VerboseMockitoJUnitRunner",
     "org.mockito.internal.matchers.Contains",
     "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
     "org.mockito.plugins.StackTraceCleanerProvider",
     "org.mockito.internal.matchers.CapturingMatcher",
     "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode",
     "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType",
     "org.mockito.listeners.VerificationStartedEvent",
     "org.mockito.internal.junit.JUnitRule$1",
     "org.mockito.internal.matchers.EndsWith",
     "org.mockito.quality.Strictness",
     "org.mockito.exceptions.misusing.UnfinishedStubbingException",
     "org.mockito.internal.util.reflection.SuperTypesLastSorter$1",
     "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
     "org.mockito.internal.invocation.StubInfoImpl",
     "org.mockito.internal.invocation.InvocationMatcher$1",
     "org.mockito.internal.matchers.CapturesArguments",
     "org.mockito.internal.verification.VerificationDataImpl",
     "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver",
     "org.mockito.internal.util.reflection.FieldCopier",
     "org.mockito.internal.configuration.injection.PropertyAndSetterInjection",
     "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1",
     "org.mockito.internal.progress.ThreadSafeMockingProgress",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap$1",
     "org.mockito.MockingDetails",
     "org.mockito.internal.util.concurrent.WeakConcurrentMap",
     "org.mockito.internal.exceptions.util.ScenarioPrinter",
     "org.mockito.internal.invocation.InvocationsFinder",
     "org.mockito.internal.verification.InOrderContextImpl",
     "org.mockito.InOrder",
     "org.mockito.junit.MockitoJUnitRunner$Strict",
     "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
     "org.mockito.internal.junit.UnnecessaryStubbingsReporter",
     "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder",
     "org.mockito.internal.reporting.Pluralizer",
     "org.mockito.exceptions.stacktrace.StackTraceCleaner",
     "org.mockito.Mockito",
     "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue",
     "org.mockito.internal.runners.DefaultInternalRunner$1",
     "org.mockito.internal.configuration.injection.MockInjection",
     "org.mockito.BDDMockito$ThenImpl",
     "org.mockito.internal.progress.ThreadSafeMockingProgress$1",
     "org.mockito.internal.configuration.FieldAnnotationProcessor"
    ],
    "usedTypes": [
     "org.mockito.internal.util.Supplier",
     "org.mockito.Mockito",
     "org.mockito.invocation.InvocationOnMock",
     "org.mockito.ArgumentCaptor",
     "org.mockito.ArgumentMatchers",
     "org.mockito.Answers",
     "org.mockito.Mock",
     "org.mockito.stubbing.OngoingStubbing",
     "org.mockito.junit.MockitoJUnitRunner$Silent",
     "org.mockito.junit.MockitoJUnitRunner",
     "org.mockito.stubbing.Stubber",
     "org.mockito.AdditionalAnswers"
    ],
    "usageRatio": 0.021352313167259787,
    "children": [
     {
      "id": "net.bytebuddy:byte-buddy:jar:1.9.10:test",
      "coordinates": "net.bytebuddy:byte-buddy:1.9.10",
      "groupId": "net.bytebuddy",
      "artifactId": "byte-buddy",
      "version": "1.9.10",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 3272730,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.mockito:mockito-core:jar:3.0.0:test",
      "allTypes": [
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor",
       "net.bytebuddy.description.annotation.AnnotationDescription$AnnotationInvocationHandler",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ClassDumpAction",
       "net.bytebuddy.implementation.bind.ParameterLengthResolver",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$NameProvider$ForInterceptedMethod",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList$ForWildcardBound",
       "net.bytebuddy.implementation.bytecode.member.MethodInvocation$HandleType",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$CodePreservingMethodVisitor",
       "net.bytebuddy.implementation.MethodCall$TerminationHandler$Factory",
       "net.bytebuddy.description.annotation.AnnotationSource$Explicit",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$AnnotationOrderComparator",
       "net.bytebuddy.implementation.Implementation$Context$Default$AccessorMethodDelegation",
       "net.bytebuddy.agent.builder.AgentBuilder$Listener$Adapter",
       "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$CreationAction",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy",
       "net.bytebuddy.implementation.attribute.AnnotationAppender$ForTypeAnnotations",
       "net.bytebuddy.description.type.TypeDescription$ArrayProjection",
       "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$WrappingDispatcher",
       "net.bytebuddy.implementation.bytecode.member.MethodReturn",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple",
       "net.bytebuddy.implementation.EqualsMethod$SuperClassCheck$1",
       "net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic",
       "net.bytebuddy.implementation.HashCodeMethod$NullValueGuard$NoOp",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$NameProvider",
       "net.bytebuddy.implementation.EqualsMethod$SuperClassCheck$2",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant",
       "net.bytebuddy.description.ModifierReviewable$ForFieldDescription",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeRegistrant$RejectingSignatureVisitor",
       "net.bytebuddy.description.annotation.AnnotationList$Empty",
       "net.bytebuddy.dynamic.TargetType",
       "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$ResubmissionListener$ConcurrentHashSet",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reducing",
       "net.bytebuddy.implementation.FieldAccessor$FieldLocation$Absolute",
       "net.bytebuddy.description.field.FieldDescription",
       "net.bytebuddy.description.field.FieldDescription$ForLoadedField",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Dispatcher",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$ForLoadedType$TypeVariableBoundList",
       "net.bytebuddy.implementation.MethodCall$1",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForEnterValue$Factory",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedReturnType",
       "net.bytebuddy.matcher.VisibilityMatcher",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$Factory",
       "net.bytebuddy.matcher.MethodParametersMatcher",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForReifiedType",
       "net.bytebuddy.dynamic.scaffold.FieldRegistry",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher$ForLegacyVm",
       "net.bytebuddy.jar.asm.TypePath",
       "net.bytebuddy.asm.MemberSubstitution$TypePoolResolver$ForClassFileLocator",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable",
       "net.bytebuddy.dynamic.TypeResolutionStrategy$Lazy",
       "net.bytebuddy.dynamic.ClassFileLocator$Simple",
       "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$Resolution$Simple",
       "net.bytebuddy.description.type.TypeDescription$Generic$Builder$OfParameterizedType",
       "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate",
       "net.bytebuddy.asm.Advice$OnDefaultValue",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing",
       "net.bytebuddy.description.field.FieldList$AbstractBase",
       "net.bytebuddy.jar.asm.MethodTooLargeException",
       "net.bytebuddy.asm.Advice$ArgumentHandler$ForInstrumentedMethod$Default$Simple",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Disabled",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$Factory",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment$WithinType",
       "net.bytebuddy.description.type.TypeList",
       "net.bytebuddy.implementation.auxiliary.AuxiliaryType$SignatureRelevant",
       "net.bytebuddy.description.annotation.AnnotationValue$1",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Failing$3",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Failing$2",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Failing$1",
       "net.bytebuddy.agent.builder.AgentBuilder$FallbackStrategy$ByThrowableType",
       "net.bytebuddy.description.annotation.AnnotationValue$Loaded",
       "net.bytebuddy.description.modifier.ModifierContributor",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$PrependableIterator",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$ClassRedefinitionTransformer",
       "net.bytebuddy.implementation.FieldAccessor$FieldLocation",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$AccessBridgeWrapper$BridgeTarget",
       "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveBoxingDelegate$BoxingStackManipulation",
       "net.bytebuddy.dynamic.loading.InjectionClassLoader",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionListenable",
       "net.bytebuddy.implementation.bind.annotation.Origin",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$AccessorProxy",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazyInterfaceType",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Simple$Resolution$BootstrapClassLoaderCapableInjectorFactory",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForDirectBound",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForDefaultValue$ReadWrite",
       "net.bytebuddy.build.Plugin$Engine$Listener$NoOp",
       "net.bytebuddy.asm.ModifierAdjustment",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod$Token",
       "net.bytebuddy.description.modifier.ModifierContributor$ForMethod",
       "net.bytebuddy.implementation.Implementation$Context$Default$AccessorMethod",
       "net.bytebuddy.implementation.Implementation$Context",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher$ForLegacyVm",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$AbstractMethodErrorThrow",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Split$Dispatcher",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$WithoutBody",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForReturnTypeName",
       "net.bytebuddy.dynamic.DynamicType$Default$Dispatcher$ForLegacyVm",
       "net.bytebuddy.dynamic.NexusAccessor$InitializationAppender",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$WithMethodAttributeAppenderFactory",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution$Sort",
       "net.bytebuddy.implementation.FixedValue$AssignerConfigurable",
       "net.bytebuddy.build.EntryPoint$1",
       "net.bytebuddy.dynamic.loading.ClassLoadingStrategy",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodCall$Factory",
       "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$CreationAction",
       "net.bytebuddy.description.type.TypeDescription$Latent",
       "net.bytebuddy.matcher.ElementMatcher",
       "net.bytebuddy.description.NamedElement$WithGenericName",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Ambiguous$Node",
       "net.bytebuddy.utility.StreamDrainer",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray$ReadWrite",
       "net.bytebuddy.implementation.bytecode.member.MethodInvocation$WithImplicitInvocationTargetType",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit$Target",
       "net.bytebuddy.pool.TypePool$CacheProvider$Simple",
       "net.bytebuddy.description.method.ParameterDescription$Latent",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$2",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$1",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$4",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$3",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory",
       "net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$IncompatibleRuntimeType",
       "net.bytebuddy.description.type.TypeList$Explicit",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Empty",
       "net.bytebuddy.asm.Advice$Argument",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForUnusedValue$Factory",
       "net.bytebuddy.implementation.bind.annotation.StubValue",
       "net.bytebuddy.asm.MemberSubstitution$SubstitutingMethodVisitor",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ReturnTypeTypeRegistrant",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard$LazyUpperBoundWildcard",
       "net.bytebuddy.pool.TypePool$AbstractBase$RawEnumerationValue",
       "net.bytebuddy.dynamic.ClassFileLocator$Resolution$Explicit",
       "net.bytebuddy.implementation.FieldAccessor$FieldLocation$Relative$Prepared",
       "net.bytebuddy.agent.builder.AgentBuilder$CircularityLock$Global",
       "net.bytebuddy.implementation.bind.annotation.Super",
       "net.bytebuddy.asm.ModifierAdjustment$ModifierAdjustingClassVisitor",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased",
       "net.bytebuddy.dynamic.ClassFileLocator$PackageDiscriminating",
       "net.bytebuddy.matcher.LatentMatcher$Disjunction",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType",
       "net.bytebuddy.asm.MemberSubstitution$Substitution",
       "net.bytebuddy.implementation.MethodCall$MethodLocator$Factory",
       "net.bytebuddy.build.Plugin$Engine$Source$Origin$ForJarFile",
       "net.bytebuddy.matcher.ClassLoaderParentMatcher",
       "net.bytebuddy.asm.Advice$MethodSizeHandler$ForInstrumentedMethod",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfType$SuperClassRegistrant",
       "net.bytebuddy.implementation.EqualsMethod$ConditionalReturn",
       "net.bytebuddy.agent.builder.AgentBuilder$Listener",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$Dispatcher$CreationAction",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter$ForMethodEnter",
       "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection",
       "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$Valuable$AbstractBase$Adapter",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution$Simple",
       "net.bytebuddy.ByteBuddy$EnumerationImplementation$ValuesMethodAppender",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection",
       "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$Compound",
       "net.bytebuddy.dynamic.ClassFileLocator$NoOp",
       "net.bytebuddy.asm.Advice$Origin",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$InstanceFieldConstructor$Appender",
       "net.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnType",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray$ForLoadedType",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$NoOp",
       "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$WithTypePoolCache$Simple",
       "net.bytebuddy.agent.builder.AgentBuilder$Default",
       "net.bytebuddy.implementation.bytecode.collection.ArrayAccess",
       "net.bytebuddy.implementation.bytecode.constant.MethodConstant$CanCache",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory",
       "net.bytebuddy.implementation.Implementation$Context$Default$FieldSetterDelegation",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForField$WithInstance",
       "net.bytebuddy.matcher.LatentMatcher$ForMethodToken$ResolvedMatcher",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$OfVisibilityBridge",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$6",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForField$Location$ForExplicitField",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$5",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$8",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$7",
       "net.bytebuddy.implementation.MethodAccessorFactory$AccessType",
       "net.bytebuddy.asm.Advice$AdviceVisitor$WithoutExitAdvice",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$9",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForThrowable",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$WithNonNullableFields",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$ForRawType",
       "net.bytebuddy.matcher.FilterableList",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Harmonized",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$Priority",
       "net.bytebuddy.implementation.MethodCall$MethodLocator$ForElementMatcher",
       "net.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Dispatcher",
       "net.bytebuddy.implementation.MethodDelegation",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation",
       "net.bytebuddy.dynamic.scaffold.FieldRegistry$Compiled$NoOp",
       "net.bytebuddy.asm.Advice$FieldValue",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$CodeTranslationVisitor$ForMethodEnter",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$ForLoadedType",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target$Resolved$Simple",
       "net.bytebuddy.jar.asm.FieldWriter",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Default$Target",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit$Target$OnMethodParameter",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$SinglePass",
       "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$WithTypePoolCache",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding$Illegal",
       "net.bytebuddy.description.type.TypeList$Generic$OfMethodExceptionTypes$TypeProjection",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$Relocation$ForLabel",
       "net.bytebuddy.dynamic.ClassFileLocator$ForModule",
       "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForMethodParameter",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$Compound",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Installation",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$ForClassHierarchy$Factory",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$BootstrapInjection",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionListenable$WithImplicitDiscoveryStrategy",
       "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForBuildPlugin",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForLowerBound",
       "net.bytebuddy.implementation.bytecode.StackManipulation$Trivial",
       "net.bytebuddy.build.Plugin$Engine$TypeStrategy$ForEntryPoint",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$MethodCall$Appender$AccessorMethodInvocation",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$1",
       "net.bytebuddy.description.method.MethodList$ForLoadedMethods",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$3",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$2",
       "net.bytebuddy.implementation.bytecode.constant.NullConstant",
       "net.bytebuddy.implementation.FixedValue$ForOriginType",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved",
       "net.bytebuddy.build.Plugin$Engine$Target$ForFolder$Dispatcher$ForLegacyVm",
       "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$UsingLookup",
       "net.bytebuddy.matcher.MethodParameterTypeMatcher",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForCharacterConstant",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe",
       "net.bytebuddy.build.CachedReturnPlugin$long",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase$Adapter",
       "net.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod$TransformedParameterList",
       "net.bytebuddy.matcher.NullMatcher",
       "net.bytebuddy.description.type.TypeDefinition$Sort",
       "net.bytebuddy.implementation.bytecode.assign.Assigner$EqualTypesOnly$2",
       "net.bytebuddy.implementation.bytecode.assign.Assigner$EqualTypesOnly$1",
       "net.bytebuddy.agent.builder.AgentBuilder$ClassFileBufferStrategy$Default$2",
       "net.bytebuddy.agent.builder.AgentBuilder$ClassFileBufferStrategy$Default$1",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$Factory",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$BridgeMethodImplementation$Appender",
       "net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodInstanceAndParameters",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$StorageKey",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForField",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase",
       "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$Default",
       "net.bytebuddy.jar.asm.ConstantDynamic",
       "net.bytebuddy.description.type.PackageDescription$AbstractBase",
       "net.bytebuddy.dynamic.TypeResolutionStrategy$Disabled",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$Factory",
       "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods",
       "net.bytebuddy.agent.builder.LambdaFactory",
       "net.bytebuddy.description.type.TypeDescription$Generic$Builder$OfGenericArrayType",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial",
       "net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$Trivial",
       "net.bytebuddy.dynamic.DynamicType$Unloaded",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForSelfOrStaticInvocation$Resolved",
       "net.bytebuddy.asm.Advice$Thrown",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType$OfFormalTypeVariable",
       "net.bytebuddy.asm.Advice$MethodSizeHandler$Default$WithCopiedArguments",
       "net.bytebuddy.build.Plugin$Engine$Source$ForFolder",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForByteConstant",
       "net.bytebuddy.build.Plugin$Compound",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$Instantiator$Resolved",
       "net.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher$2",
       "net.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher$1",
       "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher",
       "net.bytebuddy.dynamic.loading.ClassInjector$1",
       "net.bytebuddy.description.method.ParameterDescription$TypeSubstituting",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader",
       "net.bytebuddy.dynamic.scaffold.TypeInitializer",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFixedValue",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$ForGetter",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition$AbstractBase",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$MethodToken",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameter",
       "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice$Entry",
       "net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation$OfAnnotationProperty",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForSelfOrStaticInvocation$Factory",
       "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Valuable",
       "net.bytebuddy.utility.JavaConstant$MethodHandle$HandleType",
       "net.bytebuddy.description.method.MethodDescription$ForLoadedConstructor",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$1",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$3",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$2",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Dispatcher$ForLegacyVm",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForFixedSize",
       "net.bytebuddy.asm.MemberSubstitution$TypePoolResolver$ForExplicitPool",
       "net.bytebuddy.dynamic.TypeResolutionStrategy$Active$Resolved",
       "net.bytebuddy.pool.TypePool$Default$WithLazyResolution",
       "net.bytebuddy.build.Plugin$Engine$Listener$WithTransformationsOnly",
       "net.bytebuddy.build.Plugin$Engine$Source$Element$ForFile",
       "net.bytebuddy.matcher.CollectionErasureMatcher",
       "net.bytebuddy.matcher.LatentMatcher$Resolved",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Compound",
       "net.bytebuddy.jar.asm.AnnotationVisitor",
       "net.bytebuddy.description.method.MethodDescription$InDefinedShape",
       "net.bytebuddy.matcher.HasSuperTypeMatcher",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Initializable$Unavailable",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForThisReference$Factory",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForVirtualInvocation$Factory",
       "net.bytebuddy.implementation.attribute.FieldAttributeAppender$ForInstrumentedField",
       "net.bytebuddy.implementation.Implementation$Context$Factory",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$NoOp",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForPackageType",
       "net.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod$AttachmentVisitor",
       "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingDelegate$Simple",
       "net.bytebuddy.implementation.bind.annotation.Pipe$Binder",
       "net.bytebuddy.implementation.Implementation$SpecialMethodInvocation$Simple",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazyInterfaceList",
       "net.bytebuddy.implementation.FieldAccessor$PropertyConfigurable",
       "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$OffsetIncrementing",
       "net.bytebuddy.matcher.CollectionItemMatcher",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForTypeVariable",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$ForSignatureVisitor",
       "net.bytebuddy.implementation.EqualsMethod$NullValueGuard$UsingJump$AfterInstruction",
       "net.bytebuddy.matcher.BooleanMatcher",
       "net.bytebuddy.dynamic.ClassFileLocator$ForClassLoader$BootLoaderProxyCreationAction",
       "net.bytebuddy.dynamic.loading.MultipleParentClassLoader$Builder",
       "net.bytebuddy.implementation.ToStringMethod$PrefixResolver$Default",
       "net.bytebuddy.implementation.Implementation$Composable",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Ambiguous",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod$1",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForExplicitType",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod$2",
       "net.bytebuddy.implementation.bind.annotation.Origin$Binder",
       "net.bytebuddy.description.method.ParameterList$Explicit",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry",
       "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction",
       "net.bytebuddy.dynamic.scaffold.ClassWriterStrategy$Default$2",
       "net.bytebuddy.dynamic.scaffold.ClassWriterStrategy$Default$1",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$BootstrapInjection$Disabled",
       "net.bytebuddy.implementation.ExceptionMethod$ConstructionDelegate$ForStringConstructor",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClassFileVersion",
       "net.bytebuddy.build.Plugin$Engine$Target$InMemory",
       "net.bytebuddy.implementation.bind.annotation.SuperMethod",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer",
       "net.bytebuddy.description.method.MethodDescription$TypeToken",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$Resolution",
       "net.bytebuddy.utility.JavaModule$Dispatcher$CreationAction",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$LegacyVmDispatcher",
       "net.bytebuddy.TypeCache$LookupKey",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameter$OfInstrumentedMethod",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$OfGivenField",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForByteCodeElement",
       "net.bytebuddy.jar.asm.ModuleVisitor",
       "net.bytebuddy.implementation.Implementation$Context$Default$Factory",
       "net.bytebuddy.implementation.InvokeDynamic$WithImplicitType$OfInstance",
       "net.bytebuddy.description.annotation.AnnotationDescription$AnnotationInvocationHandler$MissingValue",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArrayElement",
       "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$Valuable",
       "net.bytebuddy.jar.asm.ClassReader",
       "net.bytebuddy.implementation.Implementation$Context$Default$FieldCacheEntry",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$ForDefaultConstructor",
       "net.bytebuddy.description.modifier.MethodArguments",
       "net.bytebuddy.agent.builder.AgentBuilder$Transformer$Compound",
       "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$ErrorSuppressing",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType$Prepareable",
       "net.bytebuddy.implementation.FixedValue$ForValue",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation",
       "net.bytebuddy.description.method.ParameterDescription$Token",
       "net.bytebuddy.asm.Advice$ExceptionHandler$Simple",
       "net.bytebuddy.description.type.TypeList$AbstractBase",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Ignoring",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target",
       "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingTypeProjection",
       "META-INF.versions.9.module-info",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$ForReifiedErasure",
       "net.bytebuddy.dynamic.scaffold.TypeWriter",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled",
       "net.bytebuddy.build.Plugin$Engine$TypeStrategy",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding$Builder",
       "net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder",
       "net.bytebuddy.description.field.FieldList$ForTokens",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForVariable$ReadOnly",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction",
       "net.bytebuddy.implementation.attribute.FieldAttributeAppender$Factory$Compound",
       "net.bytebuddy.matcher.DeclaringFieldMatcher",
       "net.bytebuddy.description.modifier.MethodStrictness",
       "net.bytebuddy.matcher.CachingMatcher$WithInlineEviction",
       "net.bytebuddy.implementation.MethodCall$TargetHandler",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution",
       "net.bytebuddy.implementation.auxiliary.MethodCallProxy$ConstructorCall$Appender",
       "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields$Entry",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable$AbstractBase$Adapter",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder",
       "net.bytebuddy.description.field.FieldDescription$InGenericShape",
       "net.bytebuddy.implementation.EqualsMethod$TypeCompatibilityCheck",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver$Simple",
       "net.bytebuddy.implementation.ExceptionMethod",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers",
       "net.bytebuddy.build.Plugin$Engine$Target$ForFolder$Dispatcher",
       "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading$TypeCastingHandler$ForBridgeTarget",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Malformed",
       "net.bytebuddy.build.BuildLogger$StreamWriting",
       "net.bytebuddy.dynamic.DynamicType$Builder",
       "net.bytebuddy.matcher.FilterableList$Empty",
       "net.bytebuddy.description.annotation.AnnotationDescription$Builder",
       "net.bytebuddy.implementation.Implementation$Target",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter$OfConstantValue",
       "net.bytebuddy.implementation.bind.annotation.Default$Binder$TypeLocator$ForType",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfLegacyVmConstructor",
       "net.bytebuddy.implementation.attribute.FieldAttributeAppender$Compound",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Redefining",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$CodeTranslationVisitor",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Linked$Delegation",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$MethodCall$Appender",
       "net.bytebuddy.ClassFileVersion$VersionLocator$CreationAction",
       "net.bytebuddy.build.Plugin$Engine$Source$Element$ForJarEntry",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForEnumerationValue",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy",
       "net.bytebuddy.description.modifier.ModifierContributor$ForType",
       "net.bytebuddy.implementation.MethodCall$TerminationHandler$Simple$1",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard",
       "net.bytebuddy.implementation.MethodCall$TerminationHandler$Simple$2",
       "net.bytebuddy.implementation.MethodCall$TerminationHandler$Simple$3",
       "net.bytebuddy.utility.privilege.SetAccessibleAction",
       "net.bytebuddy.asm.MemberSubstitution$Replacement",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$BatchReallocator",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler",
       "net.bytebuddy.implementation.bind.annotation.RuntimeType",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodCall",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithDrain$WithoutActiveRecord",
       "net.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver$ForFixedValue",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable$AbstractBase",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate",
       "net.bytebuddy.build.Plugin",
       "net.bytebuddy.description.type.TypeList$Generic$Empty",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Direct$ForJava7CapableVm",
       "net.bytebuddy.build.Plugin$Engine$Source$Origin$ForJarFile$JarFileIterator",
       "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$ClassLoading",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Factory",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType$Frozen",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter",
       "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$AbstractBase",
       "net.bytebuddy.implementation.bytecode.member.MethodInvocation$OfGenericMethod",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForDefaultValue$ReadOnly",
       "net.bytebuddy.agent.builder.AgentBuilder$Matchable$AbstractBase",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Dispatcher",
       "net.bytebuddy.matcher.InstanceTypeMatcher",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader",
       "net.bytebuddy.implementation.MethodAccessorFactory$Illegal",
       "net.bytebuddy.implementation.bytecode.member.MethodInvocation$DynamicInvocation",
       "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher$ForLegacyVm",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForMatchedGrouping",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodParameters",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SingletonEnumeration",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Initializable",
       "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading$TypeCastingHandler",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Dispatcher$CreationAction",
       "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit$Target$OnMethod",
       "net.bytebuddy.agent.builder.ResettableClassFileTransformer$AbstractBase",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$ForErasure",
       "net.bytebuddy.implementation.bytecode.constant.MethodConstant$PrivilegedLookup",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$StaticFieldConstructor",
       "net.bytebuddy.implementation.bind.annotation.Pipe",
       "net.bytebuddy.implementation.auxiliary.MethodCallProxy$ConstructorCall",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodEnter$WithDiscardedEnterType",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$Compound",
       "net.bytebuddy.implementation.attribute.TypeAttributeAppender$ForInstrumentedType$Differentiating",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForSerializedValue",
       "net.bytebuddy.build.CachedReturnPlugin$short",
       "net.bytebuddy.implementation.FixedValue$ForThisValue$Appender",
       "net.bytebuddy.build.Plugin$Engine$PoolStrategy",
       "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields$DispatchingVisitor",
       "net.bytebuddy.description.ModifierReviewable$ForParameterDescription",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithDrain",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized",
       "net.bytebuddy.build.EntryPoint",
       "net.bytebuddy.implementation.Implementation$SpecialMethodInvocation$AbstractBase",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$InnerTypeDefinitionForTypeAdapter",
       "net.bytebuddy.description.type.TypeList$1",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Graph",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Merger$Directional",
       "net.bytebuddy.implementation.Implementation$Context$ExtractableView$AbstractBase",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reifying",
       "net.bytebuddy.utility.CompoundList",
       "net.bytebuddy.implementation.bind.annotation.Empty$Binder",
       "net.bytebuddy.implementation.Implementation$Target$AbstractBase$DefaultMethodInvocation$1",
       "net.bytebuddy.jar.asm.commons.MethodRemapper",
       "net.bytebuddy.implementation.Implementation$Target$AbstractBase$DefaultMethodInvocation$2",
       "net.bytebuddy.matcher.LatentMatcher$ForSelfDeclaredMethod",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodEnter",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForInstance",
       "net.bytebuddy.description.method.ParameterDescription$InDefinedShape$AbstractBase",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstrumentedType",
       "net.bytebuddy.implementation.bytecode.constant.MethodConstant$CachedMethod",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter$OfReferenceValue",
       "net.bytebuddy.asm.MemberRemoval$MemberRemovingClassVisitor",
       "net.bytebuddy.description.NamedElement$WithRuntimeName",
       "net.bytebuddy.implementation.bind.annotation.Pipe$1",
       "net.bytebuddy.ClassFileVersion$VersionLocator",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType",
       "net.bytebuddy.description.field.FieldDescription$TypeSubstituting",
       "net.bytebuddy.utility.JavaConstant",
       "net.bytebuddy.description.annotation.AnnotationList$AbstractBase",
       "net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase$ForPrepared",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForField$Location",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForByteCodeElement$WithIndex",
       "net.bytebuddy.agent.builder.AgentBuilder$Listener$WithTransformationsOnly",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$Initializable",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$ForLoadedType",
       "net.bytebuddy.ClassFileVersion$VersionLocator$ForJava9CapableVm",
       "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForLoadState",
       "net.bytebuddy.implementation.attribute.FieldAttributeAppender$Factory",
       "net.bytebuddy.implementation.FixedValue$ForPoolValue",
       "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers",
       "net.bytebuddy.dynamic.scaffold.TypeInitializer$Drain",
       "net.bytebuddy.implementation.bind.annotation.Morph",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter",
       "net.bytebuddy.dynamic.DynamicType$Default$Unloaded",
       "net.bytebuddy.implementation.bytecode.Multiplication",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$NoOp",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable$LazyBoundTokenList",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Dispatcher$ForJava6CapableVm",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Detached",
       "net.bytebuddy.implementation.bytecode.member.FieldAccess$OfGenericField",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForField",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry",
       "net.bytebuddy.pool.TypePool$AbstractBase$RawAnnotationValue",
       "net.bytebuddy.implementation.bytecode.Duplication$1",
       "net.bytebuddy.implementation.bytecode.Duplication$2",
       "net.bytebuddy.implementation.bytecode.Duplication$3",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default$3",
       "net.bytebuddy.dynamic.TypeResolutionStrategy$Passive",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default$1",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default$2",
       "net.bytebuddy.description.annotation.AnnotationList",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$EmptyEnumeration",
       "net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription",
       "net.bytebuddy.build.Plugin$Engine$Source",
       "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler",
       "net.bytebuddy.utility.visitor.MetadataAwareClassVisitor",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$Expanding",
       "net.bytebuddy.agent.builder.AgentBuilder$CircularityLock$Default",
       "net.bytebuddy.agent.builder.AgentBuilder$Listener$ModuleReadEdgeCompleting",
       "net.bytebuddy.asm.TypeReferenceAdjustment",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForNullConstant",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForMethodReturn",
       "net.bytebuddy.asm.Advice$MethodSizeHandler$Default",
       "net.bytebuddy.implementation.bytecode.Duplication$4",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$OfAnnotatedElement",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition",
       "net.bytebuddy.implementation.MethodCall$MethodLocator",
       "net.bytebuddy.description.modifier.ModifierContributor$ForField",
       "net.bytebuddy.description.method.MethodDescription$SignatureToken",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy",
       "net.bytebuddy.implementation.HashCodeMethod$Appender",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler",
       "net.bytebuddy.dynamic.DynamicType$Builder$TypeVariableDefinition",
       "net.bytebuddy.implementation.auxiliary.MethodCallProxy$AssignableSignatureCall",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForLegacyVm",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$UsingUnsafeOverride",
       "net.bytebuddy.description.ModifierReviewable",
       "net.bytebuddy.agent.builder.AgentBuilder$FallbackStrategy",
       "net.bytebuddy.implementation.bytecode.Addition",
       "net.bytebuddy.matcher.DescriptorMatcher",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode$2",
       "net.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator$ForParameterType",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode$3",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Factory$Simplex",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler",
       "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher$ForJava8CapableVm",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode$1",
       "net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget$RebasedMethodInvocation",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$UsingUnsafeOverride$ForJava7CapableVm",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$WrappingArgumentProvider",
       "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry",
       "net.bytebuddy.jar.asm.MethodWriter",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator$NonSealing",
       "net.bytebuddy.implementation.LoadedTypeInitializer",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex$DoubleIndexed",
       "net.bytebuddy.implementation.bytecode.collection.ArrayFactory",
       "net.bytebuddy.jar.asm.Context",
       "net.bytebuddy.asm.Advice$MethodSizeHandler$ForAdvice",
       "net.bytebuddy.dynamic.Transformer$ForMethod$MethodModifierTransformer",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode",
       "net.bytebuddy.implementation.attribute.TypeAttributeAppender$Compound",
       "net.bytebuddy.implementation.bind.annotation.Default$Binder",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$Active",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy",
       "net.bytebuddy.implementation.ToStringMethod",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Resolved",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$AbstractBase",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender",
       "net.bytebuddy.implementation.bind.annotation.AllArguments",
       "net.bytebuddy.implementation.auxiliary.MethodCallProxy$PrecomputedMethodGraph",
       "net.bytebuddy.build.Plugin$Engine$Source$InMemory$MapEntryIterator",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodEnter$WithRetainedEnterType",
       "net.bytebuddy.implementation.FixedValue$ForOriginType$Appender",
       "net.bytebuddy.build.Plugin$Engine$Target$ForJarFile",
       "net.bytebuddy.utility.JavaConstant$MethodType$Dispatcher",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$Resolution$Resolved",
       "net.bytebuddy.asm.TypeReferenceAdjustment$TypeReferenceClassVisitor",
       "net.bytebuddy.implementation.attribute.FieldAttributeAppender",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Resolved$Factory",
       "net.bytebuddy.build.CachedReturnPlugin$char",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithDecorationOnly",
       "net.bytebuddy.implementation.bind.annotation.AllArguments$Binder",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$ForTopLevelType",
       "net.bytebuddy.description.field.FieldList$Explicit",
       "net.bytebuddy.implementation.MethodAccessorFactory",
       "net.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes$OfTypeVariables",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound",
       "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$OriginTypeResolver$1",
       "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$OriginTypeResolver$2",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$Processor",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm",
       "net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray",
       "net.bytebuddy.implementation.bytecode.ByteCodeAppender",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Prepared",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedTypeVariableType",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy",
       "net.bytebuddy.implementation.attribute.FieldAttributeAppender$Explicit",
       "net.bytebuddy.description.field.FieldDescription$SignatureToken",
       "net.bytebuddy.description.type.TypeDefinition$SuperClassIterator",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$ForDeclaredMethods",
       "net.bytebuddy.agent.builder.AgentBuilder$FallbackStrategy$Simple",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy",
       "net.bytebuddy.matcher.TypeSortMatcher",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForThisReference$Factory",
       "net.bytebuddy.TypeCache$StorageKey",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForLoadedType",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithResolvedErasure",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Record",
       "net.bytebuddy.implementation.bytecode.Removal$2",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Merger",
       "net.bytebuddy.jar.asm.ModuleWriter",
       "net.bytebuddy.implementation.bytecode.Removal$1",
       "net.bytebuddy.implementation.auxiliary.AuxiliaryType",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Simple",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$Resolution$Illegal",
       "net.bytebuddy.description.modifier.TypeManifestation",
       "net.bytebuddy.dynamic.Transformer$Compound",
       "net.bytebuddy.description.method.ParameterList$ForTokens",
       "net.bytebuddy.matcher.DeclaringAnnotationMatcher",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner",
       "net.bytebuddy.implementation.InvocationHandlerAdapter$ForField$Appender",
       "net.bytebuddy.implementation.FieldAccessor$OwnerTypeLocatable",
       "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$MethodVisitorWrapper",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray$Latent",
       "net.bytebuddy.implementation.InvocationHandlerAdapter$WithoutPrivilegeConfiguration",
       "net.bytebuddy.pool.TypePool$AbstractBase$RawTypeValue$Loaded",
       "net.bytebuddy.pool.TypePool$LazyFacade$LazyTypeDescription",
       "net.bytebuddy.implementation.ToStringMethod$Appender",
       "net.bytebuddy.implementation.bind.annotation.Argument",
       "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$Adapter",
       "net.bytebuddy.dynamic.DynamicType$Builder$InnerTypeDefinition$ForType",
       "net.bytebuddy.build.Plugin$Engine$Target$ForFolder$Dispatcher$CreationAction",
       "net.bytebuddy.dynamic.DynamicType$Default$Loaded",
       "net.bytebuddy.implementation.bind.annotation.IgnoreForBinding$Verifier",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForLoadedType$ParameterArgumentTypeList",
       "net.bytebuddy.description.type.TypeVariableToken",
       "net.bytebuddy.dynamic.scaffold.FieldRegistry$Default$Compiled",
       "net.bytebuddy.implementation.MethodDelegation$WithCustomProperties",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription",
       "net.bytebuddy.implementation.DefaultMethodCall",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$ForType",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Dispatcher",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved",
       "net.bytebuddy.jar.asm.commons.SignatureRemapper",
       "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForAbstractMethod",
       "net.bytebuddy.asm.Advice$ExceptionHandler$Default",
       "net.bytebuddy.implementation.auxiliary.MethodCallProxy$MethodCall$Appender",
       "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedConstructor$RebasedConstructor",
       "net.bytebuddy.matcher.MethodReturnTypeMatcher",
       "net.bytebuddy.build.CachedReturnPlugin$Enhance",
       "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$1",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForType$Bound",
       "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$2",
       "net.bytebuddy.pool.TypePool$AbstractBase$Hierarchical",
       "net.bytebuddy.implementation.bytecode.constant.TextConstant",
       "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$3",
       "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$4",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$FieldResolver$Simple",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldGetter$Appender",
       "net.bytebuddy.description.field.FieldDescription$InDefinedShape$AbstractBase",
       "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$DelegationMethod",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$UnresolvedTypeVariable",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Dispatcher$ForLegacyVm",
       "net.bytebuddy.NamingStrategy",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper",
       "net.bytebuddy.implementation.MethodCall$WithoutSpecifiedTarget",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$SimpleParameterAnnotationAdapter",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstance$Factory",
       "net.bytebuddy.description.method.MethodList$TypeSubstituting",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForVirtualInvocation",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$LookupKey",
       "net.bytebuddy.implementation.HashCodeMethod$NullValueGuard$UsingJump$BeforeInstruction",
       "net.bytebuddy.pool.TypePool$CacheProvider$NoOp",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithDiscardedEnterType",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForSuperMethodInvocation",
       "net.bytebuddy.description.type.TypeList$Generic$OfConstructorExceptionTypes$TypeProjection",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution$Decoratable",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Default",
       "net.bytebuddy.build.Plugin$Engine$PoolStrategy$Default",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForThisReference",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial$AbstractBase",
       "net.bytebuddy.agent.builder.AgentBuilder$ClassFileBufferStrategy$Default",
       "net.bytebuddy.matcher.SignatureTokenMatcher",
       "net.bytebuddy.asm.Advice$Appender",
       "net.bytebuddy.description.type.TypeList$Generic$OfConstructorExceptionTypes",
       "net.bytebuddy.implementation.bytecode.constant.IntegerConstant$SingleBytePush",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$Directional",
       "net.bytebuddy.matcher.CollectionOneToOneMatcher",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$WithAnnotationDefaultValue",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher$ForJava9CapableVm",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation",
       "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Disabled",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$CreationAction",
       "net.bytebuddy.build.Plugin$Engine$Target",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForField$Factory",
       "net.bytebuddy.asm.Advice$MethodSizeHandler",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Dispatcher$ForJava6CapableVm",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$NoOp",
       "net.bytebuddy.asm.Advice$ArgumentHandler$ForInstrumentedMethod",
       "net.bytebuddy.implementation.bytecode.constant.IntegerConstant$ConstantPool",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$SilentConstruction$Appender",
       "net.bytebuddy.description.type.TypeDescription$AbstractBase",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Compiled",
       "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$AbstractBase",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment$SelfContained",
       "net.bytebuddy.jar.asm.commons.Remapper",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Factory$Duplex",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$Factory",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$ForExactType$Factory",
       "net.bytebuddy.implementation.bind.annotation.Super$Instantiation",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForStringRepresentation",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution$Illegal",
       "net.bytebuddy.agent.builder.AgentBuilder$Matchable",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver$StreamWriting",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedExceptionType",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Resolved",
       "net.bytebuddy.asm.Advice$Unused",
       "net.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder$RebaseableMatcher",
       "net.bytebuddy.build.ToStringPlugin$Enhance$Prefix",
       "net.bytebuddy.implementation.auxiliary.TrivialType",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction",
       "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$AbstractBase",
       "net.bytebuddy.description.type.TypeDescription$Generic",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex",
       "net.bytebuddy.jar.asm.Handler",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Prepared$Entry",
       "net.bytebuddy.implementation.MethodCall$TerminationHandler$FieldSetting",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$ParameterAnnotationSource",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Unresolved",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition$Trivial",
       "net.bytebuddy.build.Plugin$Engine$Target$Sink$ForJarOutputStream",
       "net.bytebuddy.implementation.auxiliary.MethodCallProxy",
       "net.bytebuddy.jar.asm.Frame",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$FieldToken",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForAttachment",
       "net.bytebuddy.implementation.DefaultMethodCall$Appender",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reifying$1",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reifying$2",
       "net.bytebuddy.dynamic.loading.MultipleParentClassLoader",
       "net.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy",
       "net.bytebuddy.dynamic.scaffold.FieldRegistry$Default$Entry",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$Default",
       "net.bytebuddy.implementation.InvocationHandlerAdapter",
       "net.bytebuddy.matcher.MethodParameterTypesMatcher",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$Bound",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForDefaultValue",
       "net.bytebuddy.asm.Advice$ArgumentHandler$ForAdvice$Default",
       "net.bytebuddy.implementation.MethodCall$TerminationHandler$Simple",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$OpenedClassRemapper",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$NativeMethodStrategy$ForPrefix",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$ParameterAnnotationSource$ForLoadedMethod",
       "net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer$Prefixing",
       "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForLocalValue$Factory",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction$ByteArrayUrlStreamHandler$ByteArrayUrlConnection",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$RenderingDelegate",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ExceptionTypeRegistrant",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$RenderingDelegate$1",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$RenderingDelegate$2",
       "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice$Entry$ForSplitAdvice",
       "net.bytebuddy.utility.JavaModule$Dispatcher$Disabled",
       "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Configurable",
       "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading$TypeCastingHandler$NoOp",
       "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget",
       "net.bytebuddy.implementation.bytecode.collection.ArrayAccess$Loader",
       "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$ForBuildEntryPoint",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$NoOp",
       "net.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$ContravariantBinding",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForField",
       "net.bytebuddy.build.Plugin$Engine$Listener$WithErrorsOnly",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$ForGetterSetterPair",
       "net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription$IncompatibleRuntimeType",
       "net.bytebuddy.dynamic.loading.ClassInjector$AbstractBase",
       "net.bytebuddy.implementation.bind.annotation.SuperMethod$Binder$DelegationMethod",
       "net.bytebuddy.dynamic.ClassFileLocator$Resolution$Illegal",
       "net.bytebuddy.jar.asm.signature.SignatureVisitor",
       "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfConstructor",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForMethodParameter$WithExplicitType",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$5",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$4",
       "net.bytebuddy.implementation.bytecode.Duplication",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$1",
       "net.bytebuddy.utility.visitor.LineNumberPrependingMethodVisitor",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$3",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$2",
       "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver",
       "net.bytebuddy.description.TypeVariableSource$AbstractBase",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder",
       "net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor",
       "net.bytebuddy.TypeCache$WithInlineExpunction",
       "net.bytebuddy.asm.Advice$ArgumentHandler$ForAdvice$Default$ForMethodExit",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForShortConstant",
       "net.bytebuddy.jar.asm.AnnotationWriter",
       "net.bytebuddy.dynamic.scaffold.FieldRegistry$Default$Compiled$Entry",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForVirtualInvocation$WithImplicitType",
       "net.bytebuddy.dynamic.ClassFileLocator$ForClassLoader$WeaklyReferenced",
       "net.bytebuddy.build.Plugin$Engine$Default",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$OfGivenMethod",
       "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$ForJava7CapableVm",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedSuperClass",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding",
       "net.bytebuddy.implementation.bytecode.Throw",
       "net.bytebuddy.build.CachedReturnPlugin$float",
       "net.bytebuddy.implementation.Implementation$Context$Default$AbstractPropertyAccessorMethod",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Dispatcher$CreationAction",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$Binding",
       "net.bytebuddy.asm.Advice$OffsetMapping",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$Initializable",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$FieldTokenList",
       "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$ForArrayType",
       "net.bytebuddy.implementation.InvokeDynamic$1",
       "net.bytebuddy.implementation.bind.annotation.FieldValue$Binder",
       "net.bytebuddy.implementation.FieldAccessor$FieldNameExtractor$ForFixedValue",
       "net.bytebuddy.build.Plugin$ForElementMatcher",
       "net.bytebuddy.utility.RandomString",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy$CreationAction",
       "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$Suppressing$Bound",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForReceiverType",
       "net.bytebuddy.matcher.StringMatcher$Mode$1",
       "net.bytebuddy.matcher.StringMatcher$Mode$2",
       "net.bytebuddy.matcher.StringMatcher$Mode$3",
       "net.bytebuddy.matcher.StringMatcher$Mode$4",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken",
       "net.bytebuddy.matcher.StringMatcher$Mode$5",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfType",
       "net.bytebuddy.matcher.StringMatcher$Mode$6",
       "net.bytebuddy.matcher.StringMatcher$Mode$7",
       "net.bytebuddy.matcher.StringMatcher$Mode$8",
       "net.bytebuddy.matcher.StringMatcher$Mode$9",
       "net.bytebuddy.implementation.bytecode.constant.LongConstant",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$NoOp",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFixedValue$OfConstant",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Node$Simple",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForUpperBound",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder$DefaultMethodLocator",
       "net.bytebuddy.description.method.MethodList$Empty",
       "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher$ForLegacyVm",
       "net.bytebuddy.implementation.bytecode.member.MethodInvocation$Invocation",
       "net.bytebuddy.implementation.bind.annotation.StubValue$Binder",
       "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate$ExplicitlyTypedUnboxingResponsible",
       "net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget$Factory",
       "net.bytebuddy.jar.asm.Handle",
       "net.bytebuddy.build.CachedReturnPlugin$byte",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardUpperBoundType",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodParameter",
       "net.bytebuddy.implementation.MethodCall$TerminationHandler$FieldSetting$Implicit",
       "net.bytebuddy.implementation.bind.ArgumentTypeResolver$ParameterIndexToken",
       "net.bytebuddy.asm.Advice$Dispatcher",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedType",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$Latent",
       "net.bytebuddy.dynamic.ClassFileLocator$ForModuleFile",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$MetaFactoryRedirection",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution$Unresolved",
       "net.bytebuddy.build.Plugin$1",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForTypeName",
       "net.bytebuddy.TypeCache$SimpleKey",
       "net.bytebuddy.implementation.bind.annotation.DefaultCall",
       "net.bytebuddy.implementation.HashCodeMethod$1",
       "net.bytebuddy.implementation.SuperMethodCall$Appender$TerminationHandler",
       "net.bytebuddy.jar.asm.ClassTooLargeException",
       "net.bytebuddy.implementation.HashCodeMethod$NullValueGuard",
       "net.bytebuddy.description.ModifierReviewable$AbstractBase",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable",
       "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForResolvableTypes",
       "net.bytebuddy.agent.builder.AgentBuilder$Listener$StreamWriting",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodInvoker$Virtual",
       "net.bytebuddy.implementation.bytecode.assign.Assigner",
       "net.bytebuddy.implementation.bytecode.StackSize",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFieldBinding",
       "net.bytebuddy.dynamic.Transformer$ForField",
       "net.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayCreator$ForReferenceType",
       "net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget",
       "net.bytebuddy.description.ModifierReviewable$OfByteCodeElement",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForThisReference",
       "net.bytebuddy.implementation.SuperMethodCall$1",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedFieldType",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$ForExactType",
       "net.bytebuddy.implementation.LoadedTypeInitializer$ForStaticField",
       "net.bytebuddy.description.modifier.ParameterManifestation",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter$ForMethodExit",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Resolved$Node",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$MethodCall",
       "net.bytebuddy.matcher.LatentMatcher",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForVariable$ReadWrite",
       "net.bytebuddy.implementation.Implementation$Context$Disabled$Factory",
       "net.bytebuddy.implementation.bytecode.constant.SerializedConstant",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter",
       "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveWideningDelegate",
       "net.bytebuddy.implementation.bytecode.Duplication$WithFlip",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForDefaultMethodInvocation",
       "net.bytebuddy.implementation.bind.DeclaringTypeResolver",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder$DefaultMethodLocator$Explicit",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$ClassResettingTransformer",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Failing",
       "net.bytebuddy.implementation.bind.annotation.Super$1",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$Dispatcher$InjectorFactory",
       "net.bytebuddy.ByteBuddy$EnumerationImplementation$InitializationAppender",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating$2",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter$OfParameterValue",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating$1",
       "net.bytebuddy.implementation.Implementation$Target$AbstractBase",
       "net.bytebuddy.build.Plugin$Engine$Listener",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForContextualInvocation$Factory",
       "net.bytebuddy.asm.Advice$1",
       "net.bytebuddy.matcher.ErasureMatcher",
       "net.bytebuddy.dynamic.scaffold.TypeInitializer$Drain$Default",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForValue$Factory",
       "net.bytebuddy.asm.Advice$OffsetMapping$Factory",
       "net.bytebuddy.implementation.bind.annotation.Default",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard$LazyUnboundWildcard",
       "net.bytebuddy.agent.builder.AgentBuilder$Transformer$NoOp",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation$Appender",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing$SlicingIterable",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal",
       "net.bytebuddy.jar.asm.ClassVisitor",
       "net.bytebuddy.utility.OpenedClassReader",
       "net.bytebuddy.description.method.MethodDescription$TypeSubstituting",
       "net.bytebuddy.dynamic.DynamicType$Builder$InnerTypeDefinition",
       "net.bytebuddy.implementation.bind.annotation.This$Binder",
       "net.bytebuddy.implementation.ToStringMethod$PrefixResolver$ForFixedValue",
       "net.bytebuddy.matcher.ElementMatcher$Junction$Disjunction",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy$ForLegacyVm",
       "net.bytebuddy.ClassFileVersion$VersionLocator$ForLegacyVm",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForExitValue$Factory",
       "net.bytebuddy.implementation.bytecode.constant.FieldConstant",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForDoubleConstant",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForIntegerConstant",
       "net.bytebuddy.description.annotation.AnnotationValue",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator",
       "net.bytebuddy.description.type.TypeDescription$Generic$Builder",
       "net.bytebuddy.asm.MemberSubstitution$TypePoolResolver$OfImplicitPool",
       "net.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher$Creator",
       "net.bytebuddy.description.method.MethodDescription$Token",
       "net.bytebuddy.implementation.bytecode.constant.IntegerConstant",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithoutDrain$WithActiveRecord",
       "net.bytebuddy.description.field.FieldDescription$Token",
       "net.bytebuddy.utility.JavaConstant$MethodType$Dispatcher$ForLegacyVm",
       "net.bytebuddy.pool.TypePool$AbstractBase$RawEnumerationValue$LazyEnumerationDescription",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodExit$WithExceptionHandler",
       "net.bytebuddy.implementation.InvokeDynamic$Appender",
       "net.bytebuddy.implementation.bytecode.member.FieldAccess$1",
       "net.bytebuddy.dynamic.NexusAccessor$Dispatcher$Available",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$ForSetter",
       "net.bytebuddy.implementation.EqualsMethod$NullValueGuard",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator",
       "net.bytebuddy.implementation.InvokeDynamic$TerminationHandler",
       "net.bytebuddy.implementation.HashCodeMethod$NullValueGuard$UsingJump",
       "net.bytebuddy.dynamic.VisibilityBridgeStrategy$Default$1",
       "net.bytebuddy.description.modifier.ModifierContributor$Resolver",
       "net.bytebuddy.dynamic.VisibilityBridgeStrategy$Default$2",
       "net.bytebuddy.dynamic.VisibilityBridgeStrategy$Default$3",
       "net.bytebuddy.asm.MemberSubstitution$1",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher$CreationAction",
       "net.bytebuddy.dynamic.Transformer",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray",
       "net.bytebuddy.dynamic.scaffold.inline.DecoratingDynamicTypeBuilder",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Lazy",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Dispatcher$CreationAction",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$NoOp",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$1",
       "net.bytebuddy.build.ToStringPlugin",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$StaticFieldConstructor",
       "net.bytebuddy.matcher.NegatingMatcher",
       "net.bytebuddy.build.CachedReturnPlugin$CacheField",
       "net.bytebuddy.implementation.bytecode.constant.DoubleConstant",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$UsingUnsafeOverride$ForLegacyVm",
       "net.bytebuddy.implementation.Implementation$Context$Default$DelegationRecord",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$ResubmissionInstallationListener",
       "net.bytebuddy.jar.asm.commons.FieldRemapper",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory$ForLegacyVm",
       "net.bytebuddy.asm.Advice$WithCustomMapping",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$InstanceFieldConstructor",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$MethodCall",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForConstruction",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$1",
       "net.bytebuddy.matcher.MethodExceptionTypeMatcher",
       "net.bytebuddy.matcher.PrimitiveTypeMatcher",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$ForJava8CapableVm",
       "net.bytebuddy.build.CachedReturnPlugin$boolean",
       "net.bytebuddy.implementation.attribute.AnnotationAppender",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArrayElement$OfParameter",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition",
       "net.bytebuddy.implementation.bytecode.member.MethodInvocation$HandleInvocation",
       "net.bytebuddy.asm.Advice$MethodSizeHandler$NoOp",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ExceptionDefinition",
       "net.bytebuddy.implementation.Implementation$Context$Default$CacheValueField",
       "net.bytebuddy.asm.Advice$Return",
       "net.bytebuddy.pool.TypePool$Default$TypeExtractor$AnnotationExtractor$AnnotationLookup",
       "net.bytebuddy.implementation.bytecode.constant.ClassConstant",
       "net.bytebuddy.implementation.bind.annotation.Empty",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$Resolution",
       "net.bytebuddy.utility.visitor.StackAwareMethodVisitor",
       "net.bytebuddy.pool.TypePool$CacheProvider",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodCall",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithEagerNavigation$OfAnnotatedElement",
       "net.bytebuddy.implementation.bytecode.TypeCreation",
       "net.bytebuddy.implementation.HashCodeMethod$OffsetProvider",
       "net.bytebuddy.matcher.CollectionElementMatcher",
       "net.bytebuddy.implementation.bind.annotation.IgnoreForBinding",
       "net.bytebuddy.description.TypeVariableSource",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor",
       "net.bytebuddy.matcher.LatentMatcher$ForFieldToken",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound$DefaultArgument",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable",
       "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default",
       "net.bytebuddy.asm.Advice$ArgumentHandler$Factory",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForField$Factory",
       "net.bytebuddy.dynamic.ClassFileLocator$ForUrl$ClassLoaderCreationAction",
       "net.bytebuddy.build.Plugin$Engine$Target$Discarding",
       "net.bytebuddy.description.type.TypeDefinition",
       "net.bytebuddy.build.BuildLogger$NoOp",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$AccessBridgeWrapper",
       "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$Simple",
       "net.bytebuddy.description.ByteCodeElement$Token",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$Resolution$Unresolved",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$OfFormalTypeVariable",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$ForFuture",
       "net.bytebuddy.asm.Advice$Dispatcher$Resolved",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator$ForTypeResourceUrl",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod",
       "net.bytebuddy.build.Plugin$Engine$Source$InMemory",
       "net.bytebuddy.asm.Advice$Enter",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray$LazyGenericArray",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForSerializedValue$Factory",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ExtractionClassFileTransformer",
       "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
       "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$ForLegacyVm",
       "net.bytebuddy.implementation.bind.annotation.FieldValue$Binder$Delegate",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$CovariantBinding",
       "net.bytebuddy.implementation.Implementation$SpecialMethodInvocation",
       "net.bytebuddy.description.method.ParameterList$Empty",
       "net.bytebuddy.implementation.EqualsMethod$TypePropertyComparator$1",
       "net.bytebuddy.dynamic.Transformer$ForField$FieldModifierTransformer",
       "net.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayCreator$ForPrimitiveType",
       "net.bytebuddy.implementation.EqualsMethod$TypePropertyComparator$4",
       "net.bytebuddy.implementation.EqualsMethod$TypePropertyComparator$3",
       "net.bytebuddy.implementation.EqualsMethod$TypePropertyComparator$2",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher",
       "net.bytebuddy.matcher.ArrayTypeMatcher",
       "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution",
       "net.bytebuddy.implementation.bytecode.assign.primitive.VoidAwareAssigner",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$ForTypeAnnotations",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForType",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForBooleanConstant",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$TypeVariableAnnotationAdapter",
       "net.bytebuddy.description.type.TypeDescription$Generic$AbstractBase",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType$1",
       "net.bytebuddy.jar.asm.signature.SignatureReader",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable",
       "net.bytebuddy.matcher.SubTypeMatcher",
       "net.bytebuddy.implementation.ExceptionMethod$ConstructionDelegate$ForDefaultConstructor",
       "net.bytebuddy.matcher.FilterableList$AbstractBase",
       "net.bytebuddy.description.field.FieldList$ForLoadedFields",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType$Factory",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithDrain$WithActiveRecord",
       "net.bytebuddy.implementation.bind.annotation.DefaultCall$Binder$DefaultMethodLocator",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver$Unique",
       "net.bytebuddy.matcher.FailSafeMatcher",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ExceptionDefinition$AbstractBase",
       "net.bytebuddy.matcher.AccessibilityMatcher",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Compound",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionListenable$WithoutBatchStrategy",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldSetter$Appender",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$StreamWriting",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Entry",
       "net.bytebuddy.asm.Advice$OffsetMapping$Sort",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$ForTopLevelType$Factory",
       "net.bytebuddy.description.field.FieldList$TypeSubstituting",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$SilentConstruction",
       "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingDelegate",
       "net.bytebuddy.asm.Advice$OnMethodExit",
       "net.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForStackManipulation",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating",
       "net.bytebuddy.description.method.MethodList",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy$Unsafe",
       "net.bytebuddy.matcher.ModifierMatcher",
       "net.bytebuddy.build.BuildLogger",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$NameProvider$ForExplicitName",
       "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$NoOp",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$CreationAction",
       "net.bytebuddy.implementation.FieldAccessor$ForImplicitProperty$Appender",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForValue",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$8",
       "net.bytebuddy.implementation.attribute.TypeAttributeAppender$Explicit",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$7",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$9",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$4",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$3",
       "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Disjunction",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$6",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$5",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$2",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$1",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForField",
       "net.bytebuddy.dynamic.ClassFileLocator$Compound",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved$Factory",
       "net.bytebuddy.implementation.HashCodeMethod$NullValueGuard$UsingJump$AfterInstruction",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$Loaded",
       "net.bytebuddy.implementation.SuperMethodCall$WithoutReturn",
       "net.bytebuddy.pool.TypePool$Default$ParameterBag",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$Dispatcher$ForJava6CapableVm",
       "net.bytebuddy.implementation.Implementation$Context$ExtractableView",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved",
       "net.bytebuddy.asm.TypeConstantAdjustment",
       "net.bytebuddy.utility.JavaModule$Dispatcher",
       "net.bytebuddy.implementation.bytecode.assign.InstanceCheck",
       "net.bytebuddy.implementation.bytecode.constant.MethodConstant",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForVisibilityBridge$Compiled",
       "net.bytebuddy.description.modifier.FieldPersistence",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodInvoker$Simple",
       "net.bytebuddy.implementation.bytecode.assign.Assigner$EqualTypesOnly",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardLowerBoundType",
       "net.bytebuddy.implementation.bytecode.constant.JavaConstantValue",
       "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForConstructingInvocation",
       "net.bytebuddy.implementation.FieldAccessor$1",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Resolved$Factory",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForField",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$FieldMatchAdapter",
       "net.bytebuddy.implementation.Implementation$1",
       "net.bytebuddy.description.method.ParameterDescription$Token$TypeList",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForField",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithEagerNavigation",
       "net.bytebuddy.implementation.FixedValue$ForArgument",
       "net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyResolution",
       "net.bytebuddy.TypeCache",
       "net.bytebuddy.pool.TypePool$AbstractBase$RawTypeValue",
       "net.bytebuddy.matcher.ModifierMatcher$Mode",
       "net.bytebuddy.description.modifier.Ownership",
       "net.bytebuddy.asm.AsmVisitorWrapper$Compound",
       "net.bytebuddy.implementation.bind.annotation.DefaultCall$Binder",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$19",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$18",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstrumentedType$Factory",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$AbstractReadOnlyAdapter",
       "net.bytebuddy.build.Plugin$Engine",
       "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$Factory",
       "net.bytebuddy.build.Plugin$Engine$PoolStrategy$Eager",
       "net.bytebuddy.matcher.InheritedAnnotationMatcher",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection",
       "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$Illegal",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool",
       "net.bytebuddy.description.method.MethodDescription",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Direct$ForLegacyVm",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForLongConstant",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$ForLoadedType$WildcardUpperBoundTypeList",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument",
       "net.bytebuddy.asm.Advice$OffsetMapping$Factory$Illegal",
       "net.bytebuddy.matcher.LatentMatcher$Conjunction",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$OfMatchedField",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType",
       "net.bytebuddy.description.type.TypeList$Generic$OfMethodExceptionTypes",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding$Illegal",
       "net.bytebuddy.description.ModifierReviewable$ForTypeDefinition",
       "net.bytebuddy.implementation.MethodCall$TerminationHandler$FieldSetting$Explicit",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$1",
       "net.bytebuddy.pool.TypePool$AbstractBase$RawDescriptionArray",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$11",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$10",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$13",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$12",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$15",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$14",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$17",
       "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveTypeAwareAssigner",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$16",
       "net.bytebuddy.dynamic.scaffold.ClassWriterStrategy$FrameComputingClassWriter",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$OfVisibilityBridge$VisibilityBridge",
       "net.bytebuddy.description.type.TypeList$Generic$OfLoadedInterfaceTypes$TypeProjection",
       "net.bytebuddy.asm.Advice$ArgumentHandler$ForInstrumentedMethod$Default$Copying",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation",
       "net.bytebuddy.implementation.bind.annotation.DefaultCall$Binder$DefaultMethodLocator$Explicit",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$NativeMethodStrategy$Disabled",
       "net.bytebuddy.implementation.bytecode.constant.MethodConstant$CachedConstructor",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForField$Location$ForImplicitField",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForExitValue",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor",
       "net.bytebuddy.asm.MemberSubstitution$WithoutSpecification$ForMatchedField",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$ForRedefinition",
       "net.bytebuddy.jar.asm.commons.ClassRemapper",
       "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Trivial",
       "net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray$Loaded",
       "net.bytebuddy.implementation.FieldAccessor$AssignerConfigurable",
       "net.bytebuddy.implementation.bytecode.constant.ClassConstant$ForReferenceType",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$Simple",
       "net.bytebuddy.implementation.InvokeDynamic$WithImplicitType$OfArgument",
       "net.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnMethodParameter",
       "net.bytebuddy.dynamic.scaffold.FieldRegistry$Default",
       "net.bytebuddy.dynamic.scaffold.TypeInitializer$None",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter",
       "net.bytebuddy.implementation.MethodCall$Appender",
       "net.bytebuddy.implementation.auxiliary.AuxiliaryType$NamingStrategy",
       "net.bytebuddy.implementation.bytecode.member.FieldAccess",
       "net.bytebuddy.description.field.FieldDescription$Latent",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing$4",
       "net.bytebuddy.pool.TypePool$Default$TypeExtractor$AnnotationExtractor$ArrayLookup",
       "net.bytebuddy.implementation.bind.annotation.SuperCall$Binder",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing$3",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing$2",
       "net.bytebuddy.jar.asm.SymbolTable",
       "net.bytebuddy.asm.Advice$Dispatcher$Unresolved",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing$1",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyTypeList",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition$Undefined",
       "net.bytebuddy.description.modifier.SyntheticState",
       "net.bytebuddy.pool.TypePool$AbstractBase$RawDescriptionArray$ComponentTypeReference",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Dispatcher$ForLegacyVm",
       "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder$DefaultMethodLocator$Implicit",
       "net.bytebuddy.description.method.ParameterList$AbstractBase",
       "net.bytebuddy.build.Plugin$Engine$AbstractBase",
       "net.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayStackManipulation",
       "net.bytebuddy.implementation.Implementation$SpecialMethodInvocation$Illegal",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForDefaultMethodInvocation$Factory",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$Disabled",
       "net.bytebuddy.description.annotation.AnnotationDescription$ForLoadedAnnotation",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction$ByteArrayUrlStreamHandler",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForDescriptor",
       "net.bytebuddy.description.method.MethodDescription$Latent$TypeInitializer",
       "net.bytebuddy.matcher.StringMatcher$Mode",
       "net.bytebuddy.jar.asm.ByteVector",
       "net.bytebuddy.implementation.EqualsMethod$CompoundComparator",
       "net.bytebuddy.description.modifier.Visibility",
       "net.bytebuddy.build.CachedReturnPlugin$CacheFieldOffsetMapping",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy$Disabled",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit",
       "net.bytebuddy.implementation.attribute.AnnotationRetention",
       "net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithExceptionHandler",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Compound",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$ForLoadedFieldType",
       "net.bytebuddy.build.Plugin$Engine$Target$Sink",
       "net.bytebuddy.asm.MemberSubstitution$TypePoolResolver",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation",
       "net.bytebuddy.description.modifier.SynchronizationState",
       "net.bytebuddy.implementation.EqualsMethod$NullValueGuard$UsingJump$BeforeInstruction",
       "net.bytebuddy.build.Plugin$Engine$Listener$Compound",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter$OfFieldValue",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Adapter",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyFieldDescription",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$AbstractBase",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClass",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Compound",
       "net.bytebuddy.pool.TypePool$1",
       "net.bytebuddy.jar.asm.Attribute",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation",
       "net.bytebuddy.implementation.MethodCall$FieldSetting",
       "net.bytebuddy.implementation.bytecode.StackManipulation$Size",
       "net.bytebuddy.pool.TypePool$Default$TypeExtractor$FieldExtractor",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$Dispatcher$ForLegacyVm",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Dispatcher$CreationAction",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$1",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$Resolution",
       "net.bytebuddy.description.method.ParameterDescription$InDefinedShape",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableSubstitutor",
       "net.bytebuddy.implementation.bind.annotation.DefaultMethod",
       "net.bytebuddy.matcher.AnnotationTypeMatcher",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$Chained",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType$Default",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition$AbstractBase",
       "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveBoxingDelegate",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$ForLoadedType$WildcardLowerBoundTypeList",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory$ForJava9CapableVm",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Target",
       "net.bytebuddy.matcher.LatentMatcher$ForFieldToken$ResolvedMatcher",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor",
       "net.bytebuddy.implementation.InvocationHandlerAdapter$ForInstance",
       "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate$UnboxingResponsible",
       "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfMethod",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$ForClassHierarchy",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator$ForFixedValue",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy$ForJava9CapableVm",
       "net.bytebuddy.dynamic.DynamicType$Default$Dispatcher",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$1",
       "net.bytebuddy.implementation.bind.annotation.Super$Instantiation$2",
       "net.bytebuddy.implementation.bind.annotation.Super$Instantiation$1",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Simple",
       "net.bytebuddy.description.type.PackageDescription$Simple",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForContextualInvocation",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Trivial",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$8",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$9",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$6",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Compound$CompoundIterable",
       "net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder$InstrumentableMatcher",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$7",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$4",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$5",
       "net.bytebuddy.dynamic.scaffold.FieldRegistry$Compiled",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$2",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$AnnotationStripper",
       "net.bytebuddy.jar.asm.Attribute$Set",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$3",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForConstantValue",
       "net.bytebuddy.dynamic.DynamicType$Default",
       "net.bytebuddy.asm.Advice$MethodSizeHandler$Default$WithRetainedArguments",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForNonImplementedMethod",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$NoOp",
       "net.bytebuddy.jar.asm.Constants",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$MethodTokenList",
       "net.bytebuddy.implementation.LoadedTypeInitializer$NoOp",
       "net.bytebuddy.agent.builder.AgentBuilder$ClassFileBufferStrategy",
       "net.bytebuddy.implementation.bytecode.constant.MethodConstant$ForMethod",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ParameterTypeRegistrant",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForLocalValue",
       "net.bytebuddy.dynamic.DynamicType$Loaded",
       "net.bytebuddy.description.annotation.AnnotationValue$Loaded$State",
       "net.bytebuddy.implementation.bind.ArgumentTypeResolver",
       "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$ConstructorCall$Appender",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForField$ArgumentProvider",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant",
       "net.bytebuddy.implementation.auxiliary.TypeProxy",
       "net.bytebuddy.agent.builder.AgentBuilder",
       "net.bytebuddy.description.ByteCodeElement",
       "net.bytebuddy.asm.Advice$Dispatcher$Bound",
       "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$1",
       "net.bytebuddy.implementation.EqualsMethod$NaturalOrderComparator",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$ForFirstBinding",
       "net.bytebuddy.implementation.Implementation$Target$AbstractBase$DefaultMethodInvocation",
       "net.bytebuddy.pool.TypePool$Empty",
       "net.bytebuddy.implementation.FixedValue$1",
       "net.bytebuddy.description.type.TypeList$ForLoadedTypes",
       "net.bytebuddy.implementation.Implementation$Target$Factory",
       "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$ForAnnotationProperty",
       "net.bytebuddy.implementation.bytecode.constant.IntegerConstant$TwoBytePush",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor",
       "net.bytebuddy.description.type.TypeDescription$ForLoadedType",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$10",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$11",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$12",
       "net.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice",
       "net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer$Suffixing",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer$13",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler$Default",
       "net.bytebuddy.matcher.ElementMatchers",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Record$ForImplicitField",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Split",
       "net.bytebuddy.description.NamedElement",
       "net.bytebuddy.utility.JavaModule$Dispatcher$Enabled",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$AccessBridgeWrapper$AccessorBridge",
       "net.bytebuddy.dynamic.scaffold.ClassWriterStrategy$1",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$Relocation",
       "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$NoOp",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$RetainedMethodTypeVariable",
       "net.bytebuddy.asm.Advice$OnNonDefaultValue",
       "net.bytebuddy.jar.asm.commons.ModuleHashesAttribute",
       "net.bytebuddy.description.type.TypeList$Generic",
       "net.bytebuddy.dynamic.VisibilityBridgeStrategy$1",
       "net.bytebuddy.implementation.FixedValue",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterable",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Resolved",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$Instantiator",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$NoOp",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$WithPreservedArguments$RequiringConsistentShape",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher",
       "net.bytebuddy.pool.TypePool$LazyFacade",
       "net.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator$ForType",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$1",
       "net.bytebuddy.build.BuildLogger$Adapter",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment$WithinMethod",
       "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy",
       "net.bytebuddy.asm.Advice$ExceptionHandler$Default$2",
       "net.bytebuddy.utility.JavaConstant$MethodType",
       "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedMethod$RebasedMethod",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType$Factory$Default$1",
       "net.bytebuddy.asm.Advice$ExceptionHandler$Default$1",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType$Factory$Default$2",
       "net.bytebuddy.implementation.MethodCall$MethodLocator$ForInstrumentedMethod",
       "net.bytebuddy.implementation.FixedValue$ForValue$StaticFieldByteCodeAppender",
       "net.bytebuddy.description.modifier.MethodManifestation",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForField$WithExplicitType",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Lazy$Dispatcher",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription",
       "net.bytebuddy.asm.Advice$ArgumentHandler$ForAdvice",
       "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$MethodLocator",
       "net.bytebuddy.build.Plugin$Engine$TypeStrategy$Default$3",
       "net.bytebuddy.dynamic.Nexus",
       "net.bytebuddy.build.Plugin$Engine$TypeStrategy$Default$2",
       "net.bytebuddy.build.Plugin$Engine$TypeStrategy$Default$1",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForVisibilityBridge",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Initializable",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForStubValue",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider",
       "net.bytebuddy.implementation.bind.annotation.FieldValue",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArray",
       "net.bytebuddy.build.CachedReturnPlugin$int",
       "net.bytebuddy.asm.TypeConstantAdjustment$TypeConstantDissolvingClassVisitor$TypeConstantDissolvingMethodVisitor",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved",
       "net.bytebuddy.utility.JavaType",
       "net.bytebuddy.description.field.FieldList$Empty",
       "net.bytebuddy.description.enumeration.EnumerationDescription$Latent",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType",
       "net.bytebuddy.description.enumeration.EnumerationDescription",
       "net.bytebuddy.jar.asm.commons.ModuleRemapper",
       "net.bytebuddy.description.annotation.AnnotationSource",
       "net.bytebuddy.asm.Advice$ArgumentHandler$Factory$2",
       "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$MethodLocator$ForImplicitType",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy$Enabled",
       "net.bytebuddy.asm.Advice$ArgumentHandler$Factory$1",
       "net.bytebuddy.agent.builder.AgentBuilder$Listener$WithErrorsOnly",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$AlternativeMetaFactoryRedirection",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$ForIndex",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transforming",
       "net.bytebuddy.implementation.bytecode.constant.DefaultValue",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$ContextRegistry",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodExit$WithoutExceptionHandler",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodInvoker",
       "net.bytebuddy.dynamic.Transformer$NoOp",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Compiled$Entry",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$AbstractBase",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$Bound",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType",
       "net.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable",
       "net.bytebuddy.description.annotation.AnnotationValue$Loaded$AbstractBase",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodCall$Factory",
       "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$MethodCall$Appender",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$2",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForReturnValue",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$1",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithDecorationOnly$LazyFieldList",
       "net.bytebuddy.implementation.bytecode.Removal",
       "net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature",
       "net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription$Loaded",
       "net.bytebuddy.asm.Advice$ExceptionHandler",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForField$WithLookup",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForAllArguments$Factory",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForConstruction",
       "net.bytebuddy.implementation.bytecode.constant.FieldConstant$Cached",
       "net.bytebuddy.asm.TypeReferenceAdjustment$TypeReferenceClassVisitor$TypeReferenceFieldVisitor",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$ClassDefinitionAction",
       "net.bytebuddy.implementation.InvokeDynamic",
       "net.bytebuddy.description.enumeration.EnumerationDescription$ForLoadedEnumeration",
       "net.bytebuddy.dynamic.scaffold.ClassWriterStrategy$Default",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForNullValue",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Eager",
       "net.bytebuddy.implementation.attribute.AnnotationValueFilter$Default$1",
       "net.bytebuddy.dynamic.DynamicType$Builder$TypeVariableDefinition$AbstractBase",
       "net.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher$FieldGetInstruction",
       "net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation",
       "net.bytebuddy.matcher.MethodOverrideMatcher",
       "net.bytebuddy.jar.asm.TypeReference",
       "net.bytebuddy.description.method.ParameterDescription",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfConstructor",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Unavailable",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation$Factory",
       "net.bytebuddy.implementation.attribute.AnnotationValueFilter$Factory",
       "net.bytebuddy.implementation.attribute.AnnotationValueFilter$Default$2",
       "net.bytebuddy.description.type.TypeDescription",
       "net.bytebuddy.TypeCache$Sort$2",
       "net.bytebuddy.TypeCache$Sort$1",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithoutDrain",
       "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher$CreationAction",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$ForAdvice",
       "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveWideningDelegate$WideningStackManipulation",
       "net.bytebuddy.asm.Advice$Dispatcher$Resolved$AbstractBase",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable$AbstractBase",
       "net.bytebuddy.agent.builder.ResettableClassFileTransformer",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForGenerifiedErasure",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForReturnValue$Factory",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Target$1",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Target$2",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding$Unique",
       "net.bytebuddy.implementation.InvokeDynamic$WithImplicitType$OfField",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory",
       "net.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator$ForInstrumentedType",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfMethod",
       "net.bytebuddy.agent.builder.AgentBuilder$Listener$Compound",
       "net.bytebuddy.implementation.bytecode.member.FieldAccess$Defined",
       "net.bytebuddy.implementation.FieldAccessor$FieldLocation$Prepared",
       "net.bytebuddy.dynamic.TypeResolutionStrategy$Resolved",
       "net.bytebuddy.implementation.MethodCall$MethodLocator$ForExplicitMethod",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray$ReadOnly",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable$AbstractBase$Adapter",
       "net.bytebuddy.agent.builder.AgentBuilder$TransformerDecorator$NoOp",
       "net.bytebuddy.implementation.HashCodeMethod",
       "net.bytebuddy.asm.Advice$Appender$EmulatingMethodVisitor",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver$Default",
       "net.bytebuddy.utility.JavaConstant$MethodHandle",
       "net.bytebuddy.implementation.auxiliary.MethodCallProxy$1",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$ChildFirst$PrependingEnumeration",
       "net.bytebuddy.jar.asm.signature.SignatureWriter",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyNestMemberList",
       "net.bytebuddy.description.type.TypeList$Generic$AbstractBase",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$ForInstrumentedMethod",
       "net.bytebuddy.implementation.InvokeDynamic$TerminationHandler$1",
       "net.bytebuddy.implementation.InvokeDynamic$TerminationHandler$2",
       "net.bytebuddy.matcher.CollectionSizeMatcher",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper$3",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper$2",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$ForLoadedReturnType",
       "net.bytebuddy.agent.builder.AgentBuilder$Ignored",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper$4",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$9",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper$1",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfLegacyVmMethod",
       "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields",
       "net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$Loaded",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Simple$Resolution",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$ResubmissionListener",
       "net.bytebuddy.dynamic.ClassFileLocator$Resolution",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$ValueHandling$Sort",
       "net.bytebuddy.pool.TypePool$Default$ReaderMode",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$AbstractBase",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$UnresolvedType",
       "net.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher$FieldPutInstruction",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$10",
       "net.bytebuddy.matcher.MethodSortMatcher",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$12",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$11",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForDetachment",
       "net.bytebuddy.description.field.FieldDescription$InDefinedShape",
       "net.bytebuddy.implementation.FieldAccessor$FieldLocation$Relative",
       "net.bytebuddy.implementation.FieldAccessor",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$13",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$NoOp",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$7",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$ValueHandling",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$8",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$5",
       "net.bytebuddy.agent.builder.AgentBuilder$Identified$Narrowable",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$6",
       "net.bytebuddy.jar.asm.MethodVisitor",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForField",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$3",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$4",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$1",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer$2",
       "net.bytebuddy.build.Plugin$Engine$Listener$StreamWriting",
       "net.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod$TransformedParameter",
       "net.bytebuddy.pool.TypePool$Default$TypeExtractor",
       "net.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForMethodName",
       "net.bytebuddy.implementation.auxiliary.AuxiliaryType$NamingStrategy$SuffixingRandom",
       "net.bytebuddy.build.Plugin$NoOp",
       "net.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes$OfTypeVariables$AttachedTypeVariable",
       "net.bytebuddy.dynamic.scaffold.InstrumentedType$Factory$Default",
       "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$Compound",
       "net.bytebuddy.agent.builder.AgentBuilder$Listener$Filtering",
       "net.bytebuddy.build.Plugin$Engine$Target$ForFolder",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ReturnTypeProvider",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$WithAnnotationOverlay",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForOwnerType",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray",
       "net.bytebuddy.implementation.bytecode.assign.Assigner$Typing",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter$TerminationHandler$2",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter$TerminationHandler$1",
       "net.bytebuddy.agent.builder.AgentBuilder$CircularityLock",
       "net.bytebuddy.description.type.PackageDescription",
       "net.bytebuddy.asm.Advice$AdviceVisitor",
       "net.bytebuddy.asm.Advice$ArgumentHandler$ForInstrumentedMethod$Default",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$FieldResolver$ForElementMatcher",
       "net.bytebuddy.implementation.bytecode.constant.FloatConstant",
       "net.bytebuddy.build.Plugin$Engine$TypeStrategy$Default",
       "net.bytebuddy.implementation.attribute.TypeAttributeAppender$NoOp",
       "net.bytebuddy.implementation.Implementation$Compound$Composable",
       "net.bytebuddy.jar.asm.Opcodes",
       "net.bytebuddy.agent.builder.AgentBuilder$Identified$Extendable",
       "net.bytebuddy.dynamic.ClassFileLocator$ForClassLoader",
       "net.bytebuddy.build.Plugin$Factory",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$AbstractBase",
       "net.bytebuddy.dynamic.DynamicType$Default$Dispatcher$ForJava7CapableVm",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$Binding$Unresolved",
       "net.bytebuddy.matcher.ClassLoaderHierarchyMatcher",
       "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfLegacyVmConstructor",
       "net.bytebuddy.dynamic.VisibilityBridgeStrategy$Default",
       "net.bytebuddy.implementation.attribute.AnnotationValueFilter$1",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$2",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$1",
       "net.bytebuddy.implementation.SuperMethodCall$Appender$TerminationHandler$1",
       "net.bytebuddy.description.ByteCodeElement$TypeDependant",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning",
       "net.bytebuddy.description.TypeVariableSource$Visitor$NoOp",
       "net.bytebuddy.implementation.SuperMethodCall$Appender$TerminationHandler$2",
       "net.bytebuddy.jar.asm.commons.AnnotationRemapper",
       "net.bytebuddy.asm.Advice$ArgumentHandler",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$ForTopLevelType",
       "net.bytebuddy.NamingStrategy$SuffixingRandom",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$AttributeObtainingMethodVisitor",
       "net.bytebuddy.description.method.MethodList$ForTokens",
       "net.bytebuddy.utility.privilege.GetSystemPropertyAction",
       "net.bytebuddy.implementation.bytecode.collection.ArrayAccess$Putter",
       "net.bytebuddy.build.Plugin$Engine$Source$Element",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Direct",
       "net.bytebuddy.implementation.bind.ArgumentTypeResolver$PrimitiveTypePrecedence",
       "net.bytebuddy.matcher.NameMatcher",
       "net.bytebuddy.implementation.bytecode.assign.reference.ReferenceTypeAwareAssigner",
       "net.bytebuddy.implementation.bind.annotation.Argument$Binder",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard$LazyLowerBoundWildcard",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$AttributeObtainingFieldVisitor",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$Latent",
       "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$ParameterAnnotationSource$ForLoadedConstructor",
       "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$1",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldGetter",
       "net.bytebuddy.build.Plugin$Engine$Source$Empty",
       "net.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex$DoubleIndexed",
       "net.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher",
       "net.bytebuddy.description.method.MethodDescription$ForLoadedMethod",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterList",
       "net.bytebuddy.asm.Advice$This",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$MethodCall$Appender",
       "net.bytebuddy.description.method.ParameterDescription$AbstractBase",
       "net.bytebuddy.asm.Advice$OnMethodEnter",
       "net.bytebuddy.implementation.ToStringMethod$PrefixResolver",
       "net.bytebuddy.description.DeclaredByType",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$Binding$Resolved",
       "net.bytebuddy.implementation.EqualsMethod",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$OfInstrumentedMethod",
       "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$OffsetWriting",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher",
       "net.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayCreator",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType",
       "net.bytebuddy.asm.AsmVisitorWrapper",
       "net.bytebuddy.matcher.DeclaringMethodMatcher",
       "net.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver$ForGivenType",
       "net.bytebuddy.description.annotation.AnnotationDescription$Latent",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForEnterValue",
       "net.bytebuddy.implementation.bind.annotation.Argument$1",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory",
       "net.bytebuddy.asm.TypeReferenceAdjustment$TypeReferenceClassVisitor$TypeReferenceAnnotationVisitor",
       "net.bytebuddy.jar.asm.Symbol",
       "net.bytebuddy.implementation.LoadedTypeInitializer$Compound",
       "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition$Simple",
       "net.bytebuddy.description.annotation.AnnotationList$Explicit",
       "net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Inversion",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory$Default",
       "net.bytebuddy.jar.asm.CurrentFrame",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Node",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding$Builder$Build",
       "net.bytebuddy.matcher.SuperTypeMatcher",
       "net.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder",
       "net.bytebuddy.build.Plugin$Engine$Listener$ForErrorHandler",
       "net.bytebuddy.dynamic.DynamicType",
       "net.bytebuddy.asm.Advice$AllArguments",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameter$Factory",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$AtFixedRate",
       "net.bytebuddy.description.field.FieldDescription$AbstractBase",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$Record",
       "net.bytebuddy.matcher.IsNamedMatcher",
       "net.bytebuddy.description.method.MethodDescription$Latent",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Eager$Dispatcher",
       "net.bytebuddy.ClassFileVersion$VersionExtractor",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstance",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$OfConstructorParameter",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArrayElement$OfInvokedMethod",
       "net.bytebuddy.dynamic.ClassFileLocator$ForUrl",
       "net.bytebuddy.implementation.HashCodeMethod$OffsetProvider$ForSuperMethodCall",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver",
       "net.bytebuddy.utility.JavaConstant$MethodType$Dispatcher$ForJava7CapableVm",
       "net.bytebuddy.implementation.auxiliary.PrivilegedMemberLookupAction",
       "net.bytebuddy.implementation.ToStringMethod$PrefixResolver$Default$1",
       "net.bytebuddy.implementation.ToStringMethod$PrefixResolver$Default$2",
       "net.bytebuddy.asm.TypeReferenceAdjustment$TypeReferenceClassVisitor$TypeReferenceMethodVisitor",
       "net.bytebuddy.utility.JavaConstant$Dynamic",
       "net.bytebuddy.description.method.ParameterDescription$InGenericShape",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$NoOp",
       "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher$CreationAction",
       "net.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$MethodLocator$ForExplicitType",
       "net.bytebuddy.asm.ModifierAdjustment$Adjustment",
       "net.bytebuddy.dynamic.NexusAccessor$Dispatcher",
       "net.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing",
       "net.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$Valuable$AbstractBase",
       "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher$ForJava11CapableVm",
       "net.bytebuddy.implementation.InvokeDynamic$WithImplicitArguments",
       "net.bytebuddy.implementation.MethodCall$TerminationHandler",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record",
       "net.bytebuddy.implementation.Implementation$Context$Default$FieldSetter",
       "net.bytebuddy.implementation.SuperMethodCall$Appender",
       "net.bytebuddy.pool.TypePool$Default$TypeExtractor$AnnotationExtractor",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue",
       "net.bytebuddy.jar.asm.Type",
       "net.bytebuddy.implementation.attribute.FieldAttributeAppender$NoOp",
       "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$NativeMethodStrategy",
       "net.bytebuddy.description.type.PackageDescription$ForLoadedPackage",
       "net.bytebuddy.asm.Advice$ArgumentHandler$ForAdvice$Default$ForMethodEnter",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$ForAdvice",
       "net.bytebuddy.implementation.bytecode.constant.DoubleConstant$ConstantPool",
       "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher$ForJava8CapableVm",
       "net.bytebuddy.asm.Advice$OffsetMapping$Factory$AdviceType",
       "net.bytebuddy.implementation.InvocationHandlerAdapter$ForInstance$Appender",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod$1",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod$2",
       "net.bytebuddy.pool.TypePool$ClassLoading",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod$3",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedInterfaceType",
       "net.bytebuddy.pool.TypePool$Resolution$Illegal",
       "net.bytebuddy.implementation.bind.annotation.Super$Binder",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$AbstractBase",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$FieldResolver",
       "net.bytebuddy.implementation.bind.annotation.SuperCall",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$MethodToken$ParameterToken",
       "net.bytebuddy.build.Plugin$Factory$Simple",
       "net.bytebuddy.asm.MemberSubstitution$WithoutSpecification$ForMatchedByteCodeElement",
       "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$NoOp",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForNonGenericType",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Linked",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForStaticCall",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate$NotifyingClassLoadingAction",
       "net.bytebuddy.implementation.bytecode.ByteCodeAppender$Simple",
       "net.bytebuddy.implementation.EqualsMethod$NullValueGuard$NoOp",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$Enabled",
       "net.bytebuddy.implementation.InvokeDynamic$WithImplicitTarget",
       "net.bytebuddy.ByteBuddy",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Yielding",
       "net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$UnknownRuntimeEnumeration",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForField$Tokenized",
       "net.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver",
       "net.bytebuddy.pool.TypePool",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Dispatcher$InjectingInitializer",
       "net.bytebuddy.TypeCache$1",
       "net.bytebuddy.dynamic.DynamicType$Default$Dispatcher$CreationAction",
       "net.bytebuddy.implementation.attribute.TypeAttributeAppender",
       "net.bytebuddy.matcher.LatentMatcher$ForMethodToken",
       "net.bytebuddy.implementation.bytecode.constant.FloatConstant$ConstantPool",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyNonGenericReceiverType",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$AnnotatedTypeVariable",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation$Appender",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory$Default$2",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithoutExceptionHandler",
       "net.bytebuddy.TypeCache$Sort",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory$Default$1",
       "net.bytebuddy.build.Plugin$Engine$Listener$Adapter",
       "net.bytebuddy.description.annotation.AnnotationDescription$Loadable",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record",
       "net.bytebuddy.description.modifier.FieldManifestation",
       "net.bytebuddy.description.annotation.AnnotationSource$Empty",
       "net.bytebuddy.implementation.InvokeDynamic$AbstractDelegator",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForAnnotationValue",
       "net.bytebuddy.matcher.ElementMatcher$Junction",
       "net.bytebuddy.asm.Advice$MethodSizeHandler$Default$ForAdvice",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$Symbolic",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodEnter",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForInterface",
       "net.bytebuddy.build.CachedReturnPlugin",
       "net.bytebuddy.implementation.bytecode.StackManipulation$Illegal",
       "net.bytebuddy.asm.MemberSubstitution$WithoutSpecification",
       "net.bytebuddy.implementation.bind.annotation.RuntimeType$Verifier",
       "net.bytebuddy.dynamic.scaffold.TypeValidation",
       "net.bytebuddy.matcher.StringMatcher",
       "net.bytebuddy.asm.AsmVisitorWrapper$NoOp",
       "net.bytebuddy.implementation.attribute.AnnotationAppender$Target",
       "net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$OriginTypeResolver",
       "net.bytebuddy.dynamic.VisibilityBridgeStrategy",
       "net.bytebuddy.implementation.EqualsMethod$Appender",
       "net.bytebuddy.implementation.bytecode.member.HandleInvocation",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$InvocationType",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForStackManipulation",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$Inverted",
       "net.bytebuddy.implementation.InvocationHandlerAdapter$ForField",
       "net.bytebuddy.asm.MemberSubstitution",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Ignored",
       "net.bytebuddy.build.Plugin$Engine$Source$ForJarFile",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$AbstractBase$Adapter",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate$SimpleClassLoadingAction",
       "net.bytebuddy.asm.AsmVisitorWrapper$AbstractBase",
       "net.bytebuddy.implementation.EqualsMethod$TypeCompatibilityCheck$2",
       "net.bytebuddy.implementation.EqualsMethod$TypeCompatibilityCheck$1",
       "net.bytebuddy.implementation.ToStringMethod$1",
       "net.bytebuddy.description.modifier.ModifierContributor$ForParameter",
       "net.bytebuddy.build.Plugin$Engine$Source$Origin",
       "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$ForClassLoader$1",
       "net.bytebuddy.description.annotation.AnnotationList$ForLoadedAnnotations",
       "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$ForClassLoader$2",
       "net.bytebuddy.dynamic.TypeResolutionStrategy",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$ForLegacyVm",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$ParameterAnnotationAdapter",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForUnusedValue",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$ForIndex$WithDynamicType",
       "net.bytebuddy.implementation.MethodCall$FieldSetting$Appender",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForStringConstant",
       "net.bytebuddy.implementation.bytecode.member.MethodInvocation",
       "net.bytebuddy.description.annotation.AnnotationDescription$Latent$Loadable",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter$Appender",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter$TerminationHandler",
       "net.bytebuddy.pool.TypePool$Resolution",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForGenericArray",
       "net.bytebuddy.agent.builder.AgentBuilder$Transformer",
       "net.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher$AbstractFieldInstruction",
       "net.bytebuddy.implementation.attribute.AnnotationAppender$1",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$Explicit",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Prepared",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor",
       "net.bytebuddy.build.ToStringPlugin$Exclude",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$ForSignatureVisitor$OfTypeArgument",
       "net.bytebuddy.implementation.MethodCall$MethodLocator$ForElementMatcher$Factory",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$WithPreservedArguments$UsingArgumentCopy",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Initial",
       "net.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$Eager",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Compound$CompoundIterable$CompoundIterator",
       "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$MethodCall",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$InstanceFieldConstructor$Appender",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Unresolved",
       "net.bytebuddy.dynamic.loading.NoOpClassFileTransformer",
       "net.bytebuddy.jar.asm.SymbolTable$Entry",
       "net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription$Loaded",
       "net.bytebuddy.implementation.ToStringMethod$ValueConsumer",
       "net.bytebuddy.asm.MemberRemoval",
       "net.bytebuddy.implementation.InvocationHandlerAdapter$AssignerConfigurable",
       "net.bytebuddy.dynamic.ClassFileLocator",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved$Factory",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType",
       "net.bytebuddy.implementation.bind.annotation.BindingPriority$Resolver",
       "net.bytebuddy.pool.TypePool$AbstractBase$ArrayTypeResolution",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining",
       "net.bytebuddy.build.BuildLogger$Compound",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForAnnotation",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForThrowable$Factory",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$Dispatcher",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler",
       "net.bytebuddy.dynamic.TypeResolutionStrategy$Active",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ArgumentProvider",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation$Appender",
       "net.bytebuddy.build.EntryPoint$Default",
       "net.bytebuddy.description.type.TypeDescription$Generic$Builder$OfTypeVariable",
       "net.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver$ForUnnamedType",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType",
       "net.bytebuddy.asm.Advice$NoExceptionHandler",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForClassConstant",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedParameterizedType",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForCreation",
       "net.bytebuddy.dynamic.scaffold.FieldLocator$Factory",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Node$Unresolved",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$CreationAction",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested$LazyParameterizedType",
       "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$Unavailable",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$7",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$6",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$TypeErasing",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$5",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$4",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod$Token",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$ForDefaultMethod",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$5",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$8",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$3",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$2",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$1",
       "net.bytebuddy.asm.Advice$StubValue",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler$Default$2",
       "net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForFloatConstant",
       "net.bytebuddy.implementation.FixedValue$ForNullValue",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$InstanceFieldConstructor",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler$Default$1",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodCall$ArgumentProvider",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForMethodReturn",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$AnnotationStripper$NonAnnotatedTypeVariable",
       "net.bytebuddy.utility.JavaConstant$MethodType$Dispatcher$CreationAction",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken",
       "net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic$1",
       "net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic$2",
       "net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase",
       "net.bytebuddy.implementation.bytecode.ByteCodeAppender$Compound",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy",
       "net.bytebuddy.asm.Advice$Dispatcher$Inactive",
       "net.bytebuddy.implementation.Implementation$Simple",
       "net.bytebuddy.description.modifier.ProvisioningState",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArray$ForInstrumentedMethod",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy",
       "net.bytebuddy.dynamic.NexusAccessor",
       "net.bytebuddy.description.method.ParameterList$Explicit$ForTypes",
       "net.bytebuddy.description.ModifierReviewable$OfAbstraction",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazySuperClass",
       "net.bytebuddy.implementation.EqualsMethod$SuperClassCheck",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$OfMethodParameter",
       "net.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingTypeList",
       "net.bytebuddy.asm.Advice",
       "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$3",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$4",
       "net.bytebuddy.dynamic.Transformer$ForMethod",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$1",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$2",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList",
       "net.bytebuddy.implementation.EqualsMethod$1",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$BootstrapInjection$Enabled",
       "net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields$FieldVisitorWrapper",
       "net.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator",
       "net.bytebuddy.implementation.bind.annotation.SuperMethod$Binder",
       "net.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForBootstrapInjection",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Pausing",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$Instantiator$Unresolved",
       "net.bytebuddy.build.EntryPoint$Default$1",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$Compiled",
       "net.bytebuddy.build.EntryPoint$Default$2",
       "net.bytebuddy.build.EntryPoint$Default$3",
       "net.bytebuddy.build.EntryPoint$Default$4",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter$AnnotationAdapter",
       "net.bytebuddy.agent.builder.AgentBuilder$InstallationListener$StreamWriting",
       "net.bytebuddy.build.Plugin$Engine$Source$Element$ForByteArray",
       "net.bytebuddy.implementation.EqualsMethod$NullValueGuard$UsingJump",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$ForSuperMethodByConstructor",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableCollector",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForThisInstance",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved",
       "net.bytebuddy.description.type.TypeList$Generic$Explicit",
       "net.bytebuddy.description.NamedElement$WithOptionalName",
       "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory$Compound",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$1",
       "net.bytebuddy.agent.builder.AgentBuilder$TypeStrategy",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy",
       "net.bytebuddy.agent.builder.AgentBuilder$TransformerDecorator",
       "net.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodParameter$Resolved",
       "net.bytebuddy.implementation.Implementation",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Explicit",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler$Default$WithPreservedArguments",
       "net.bytebuddy.implementation.ToStringMethod$PrefixResolver$Default$3",
       "net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$ForLoadedSuperClass",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver",
       "net.bytebuddy.jar.asm.ClassWriter",
       "net.bytebuddy.matcher.StringMatcher$1",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target$Resolved",
       "net.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate$ImplicitlyTypedUnboxingResponsible",
       "net.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnMethod",
       "net.bytebuddy.implementation.Implementation$Compound",
       "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$Suppressing",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$InnerTypeDefinitionForMethodAdapter",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$ForJava7CapableVm",
       "net.bytebuddy.pool.TypePool$Resolution$Simple",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodCall$Resolved",
       "net.bytebuddy.implementation.bytecode.StackSize$1",
       "net.bytebuddy.implementation.Implementation$Context$Disabled",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithoutDrain$WithoutActiveRecord",
       "net.bytebuddy.dynamic.scaffold.MethodGraph",
       "net.bytebuddy.implementation.auxiliary.MethodCallProxy$MethodCall",
       "net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer",
       "net.bytebuddy.dynamic.NexusAccessor$Dispatcher$CreationAction",
       "net.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes$WithResolvedErasure",
       "net.bytebuddy.asm.Advice$Dispatcher$RelocationHandler",
       "net.bytebuddy.implementation.Implementation$Context$Default",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding",
       "net.bytebuddy.matcher.DefinedShapeMatcher",
       "net.bytebuddy.matcher.EqualityMatcher",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForVariable",
       "net.bytebuddy.asm.MemberSubstitution$WithoutSpecification$ForMatchedMethod",
       "net.bytebuddy.implementation.bind.annotation.BindingPriority",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterator",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Record$ForExplicitField",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$Record$Illegal",
       "net.bytebuddy.pool.TypePool$AbstractBase$RawDescriptionArray$Loaded",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter",
       "net.bytebuddy.implementation.bytecode.collection.CollectionFactory",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForInterceptedMethod",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$FieldDefinitionAdapter",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler",
       "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForArgument",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending",
       "net.bytebuddy.asm.Advice$Exit",
       "net.bytebuddy.agent.builder.AgentBuilder$Listener$NoOp",
       "net.bytebuddy.matcher.CachingMatcher",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType",
       "net.bytebuddy.build.Plugin$Engine$Summary",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$Dispatcher",
       "net.bytebuddy.implementation.FixedValue$ForThisValue",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForAllArguments",
       "net.bytebuddy.dynamic.NexusAccessor$Dispatcher$Unavailable",
       "net.bytebuddy.implementation.FieldAccessor$FieldNameExtractor$ForBeanProperty",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$2",
       "net.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodExit",
       "net.bytebuddy.implementation.bind.annotation.DefaultCall$Binder$DefaultMethodLocator$Implicit",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$Stubbing",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$1",
       "net.bytebuddy.matcher.ElementMatcher$Junction$AbstractBase",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder",
       "net.bytebuddy.asm.Advice$OffsetMapping$Sort$2",
       "net.bytebuddy.asm.Advice$OffsetMapping$Sort$1",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$NoOp",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance",
       "net.bytebuddy.description.method.ParameterList",
       "net.bytebuddy.matcher.MethodSortMatcher$1",
       "net.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading",
       "net.bytebuddy.implementation.HashCodeMethod$ValueTransformer",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfField",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForStaticMethod",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForSelfOrStaticInvocation",
       "net.bytebuddy.utility.visitor.StackAwareMethodVisitor$1",
       "net.bytebuddy.implementation.attribute.TypeAttributeAppender$ForInstrumentedType",
       "net.bytebuddy.implementation.HashCodeMethod$OffsetProvider$ForFixedValue",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$ForLoadedType",
       "net.bytebuddy.description.type.TypeDescription$ForPackageDescription",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer",
       "net.bytebuddy.matcher.DeclaringTypeMatcher",
       "net.bytebuddy.jar.asm.commons.SimpleRemapper",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$InvariantBinding",
       "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedMethod",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$CodeTranslationVisitor$ForMethodExit",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$Malformed",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver",
       "net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$Latent",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$OfMatchedMethod",
       "net.bytebuddy.description.ByteCodeElement$Token$TokenList",
       "net.bytebuddy.description.method.MethodList$Explicit",
       "net.bytebuddy.implementation.bind.annotation.This",
       "net.bytebuddy.description.type.TypeList$Generic$OfLoadedInterfaceTypes",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$Minimal",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved$Simple",
       "net.bytebuddy.description.type.TypeList$Generic$ForLoadedTypes$OfTypeVariables",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTokenNormalization",
       "net.bytebuddy.description.ModifierReviewable$OfEnumeration",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForJavaConstant",
       "net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher",
       "net.bytebuddy.pool.TypePool$Default$TypeExtractor$MethodExtractor",
       "net.bytebuddy.implementation.attribute.AnnotationValueFilter",
       "net.bytebuddy.implementation.EqualsMethod$TypePropertyComparator",
       "net.bytebuddy.description.annotation.AnnotationValue$AbstractBase",
       "net.bytebuddy.implementation.attribute.AnnotationValueFilter$Default",
       "net.bytebuddy.description.type.TypeList$Generic$ForLoadedTypes",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$NoOp",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw",
       "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Default",
       "net.bytebuddy.build.ToStringPlugin$Enhance",
       "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$Preserved",
       "net.bytebuddy.description.type.TypeDescription$Generic$Builder$OfNonGenericType",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Resolved",
       "net.bytebuddy.dynamic.ClassFileLocator$ForModule$WeaklyReferenced",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous",
       "net.bytebuddy.implementation.FieldAccessor$ForSetter$OfDefaultValue",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$ValueMatcher",
       "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$ForJava8CapableVm",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation$Compiled",
       "net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription",
       "net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription",
       "net.bytebuddy.asm.TypeConstantAdjustment$TypeConstantDissolvingClassVisitor",
       "net.bytebuddy.implementation.bytecode.constant.LongConstant$ConstantPool",
       "net.bytebuddy.pool.TypePool$Explicit",
       "net.bytebuddy.jar.asm.Edge",
       "net.bytebuddy.implementation.bind.annotation.AllArguments$Assignment",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation$OfDefaultValue",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForField$ReadWrite",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate",
       "net.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnField",
       "net.bytebuddy.build.CachedReturnPlugin$Object",
       "net.bytebuddy.description.method.MethodDescription$InGenericShape",
       "net.bytebuddy.implementation.bind.MethodNameEqualityResolver",
       "net.bytebuddy.ByteBuddy$EnumerationImplementation",
       "net.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver",
       "net.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$Bound",
       "net.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$ForAnnotationProperty$Bound",
       "net.bytebuddy.implementation.FieldAccessor$FieldNameExtractor",
       "net.bytebuddy.agent.builder.AgentBuilder$Identified",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher",
       "net.bytebuddy.implementation.bytecode.member.MethodVariableAccess$OffsetLoading",
       "net.bytebuddy.asm.Advice$Local",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$3",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$2",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$5",
       "net.bytebuddy.dynamic.scaffold.TypeInitializer$Simple",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$4",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved$WithImplicitType",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$1",
       "net.bytebuddy.NamingStrategy$AbstractBase",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$ValidatingFieldVisitor",
       "net.bytebuddy.implementation.bytecode.assign.Assigner$1",
       "net.bytebuddy.implementation.StubMethod",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader",
       "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher",
       "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfLegacyVmMethod",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$Sort",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$ForConstructingInvocation$Factory",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$SerializationImplementation",
       "net.bytebuddy.dynamic.scaffold.ClassWriterStrategy",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$7",
       "net.bytebuddy.description.ModifierReviewable$ForMethodDescription",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$6",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$9",
       "net.bytebuddy.implementation.bytecode.constant.MethodConstant$ForConstructor",
       "net.bytebuddy.implementation.EqualsMethod$ValueComparator$8",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Dispatcher$ForLegacyVm",
       "net.bytebuddy.implementation.auxiliary.TypeProxy$ForSuperMethodByReflectionFactory",
       "net.bytebuddy.description.modifier.EnumerationState",
       "net.bytebuddy.implementation.SuperMethodCall",
       "net.bytebuddy.implementation.MethodCall$MethodInvoker$ForSuperMethodInvocation$Factory",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForJavaSignature",
       "net.bytebuddy.description.field.FieldList",
       "net.bytebuddy.agent.builder.AgentBuilder$1",
       "net.bytebuddy.implementation.MethodDelegation$Appender",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key",
       "net.bytebuddy.implementation.MethodCall$TargetHandler$Resolved",
       "net.bytebuddy.build.HashCodeAndEqualsPlugin$Sorted",
       "net.bytebuddy.implementation.Implementation$Context$Default$FieldGetterDelegation",
       "net.bytebuddy.description.method.MethodDescription$AbstractBase",
       "net.bytebuddy.implementation.bytecode.assign.TypeCasting",
       "net.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$BridgeMethodImplementation",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition",
       "net.bytebuddy.dynamic.loading.ClassInjector",
       "net.bytebuddy.implementation.bind.annotation.Morph$Binder",
       "net.bytebuddy.utility.JavaModule",
       "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedConstructor",
       "net.bytebuddy.description.type.TypeDescription$1",
       "net.bytebuddy.implementation.bytecode.assign.Assigner$Refusing",
       "net.bytebuddy.dynamic.loading.MultipleParentClassLoader$CompoundEnumeration",
       "net.bytebuddy.NamingStrategy$PrefixingRandom",
       "net.bytebuddy.implementation.Implementation$Context$Default$FieldGetter",
       "net.bytebuddy.implementation.bytecode.StackManipulation",
       "net.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved$WithExplicitType",
       "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$ConstructorCall",
       "net.bytebuddy.pool.TypePool$Default",
       "net.bytebuddy.implementation.FieldAccessor$ForImplicitProperty",
       "net.bytebuddy.description.annotation.AnnotationDescription",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation",
       "net.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding$Anonymous",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForTotal",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating",
       "net.bytebuddy.description.TypeVariableSource$Visitor",
       "net.bytebuddy.description.method.ParameterList$TypeSubstituting",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing$SlicingIterable$SlicingIterator",
       "net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing",
       "net.bytebuddy.pool.TypePool$AbstractBase",
       "net.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice$WithoutExceptionHandling",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$WithFixedDelay",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition",
       "net.bytebuddy.description.method.MethodList$AbstractBase",
       "net.bytebuddy.jar.asm.Label",
       "net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableExtractor",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$AnnotationAdapter",
       "net.bytebuddy.implementation.MethodCall",
       "net.bytebuddy.implementation.bind.annotation.Default$Binder$TypeLocator",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Factory",
       "net.bytebuddy.matcher.MethodSortMatcher$Sort",
       "net.bytebuddy.asm.Advice$OffsetMapping$Factory$Simple",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType$LazyPrimitiveType",
       "net.bytebuddy.implementation.MethodCall$ArgumentLoader$ForField",
       "net.bytebuddy.build.Plugin$Engine$Source$ForFolder$FolderIterator",
       "net.bytebuddy.asm.Advice$StackMapFrameHandler",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithDecorationOnly$DecorationClassVisitor",
       "net.bytebuddy.dynamic.scaffold.FieldLocator",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationDescription",
       "net.bytebuddy.description.modifier.Visibility$1",
       "net.bytebuddy.dynamic.Transformer$ForField$TransformedField",
       "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$Resolved",
       "net.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection",
       "net.bytebuddy.build.Plugin$Engine$Target$ForFolder$Dispatcher$ForJava7CapableVm",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Creating",
       "net.bytebuddy.agent.builder.AgentBuilder$CircularityLock$Inactive",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyPackageDescription",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable",
       "net.bytebuddy.matcher.MethodSortMatcher$Sort$5",
       "net.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver$Matching",
       "net.bytebuddy.matcher.MethodSortMatcher$Sort$4",
       "net.bytebuddy.matcher.MethodSortMatcher$Sort$3",
       "net.bytebuddy.matcher.MethodSortMatcher$Sort$2",
       "net.bytebuddy.matcher.MethodSortMatcher$Sort$1",
       "net.bytebuddy.dynamic.ClassFileLocator$ForFolder",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$Node$Sort",
       "net.bytebuddy.dynamic.loading.ByteArrayClassLoader$ChildFirst",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeRegistrant",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$ForInnerClass",
       "net.bytebuddy.matcher.FieldTypeMatcher",
       "net.bytebuddy.implementation.ExceptionMethod$ConstructionDelegate",
       "net.bytebuddy.implementation.bytecode.StackManipulation$Compound",
       "net.bytebuddy.agent.builder.AgentBuilder$Default$Dispatcher",
       "net.bytebuddy.implementation.bytecode.constant.MethodConstant$CanCacheIllegal",
       "net.bytebuddy.implementation.MethodDelegation$ImplementationDelegate",
       "net.bytebuddy.ClassFileVersion",
       "net.bytebuddy.description.type.TypeList$Empty",
       "net.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$CreationAction",
       "net.bytebuddy.implementation.attribute.AnnotationAppender$Default",
       "net.bytebuddy.description.enumeration.EnumerationDescription$AbstractBase",
       "net.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition",
       "net.bytebuddy.dynamic.loading.ClassReloadingStrategy$Dispatcher$ForJava6CapableVm",
       "net.bytebuddy.dynamic.scaffold.MethodGraph$NodeList",
       "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Compiled",
       "net.bytebuddy.pool.TypePool$LazyFacade$LazyResolution",
       "net.bytebuddy.jar.asm.FieldVisitor",
       "net.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldSetter",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$Malformed$TokenList",
       "net.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodExit",
       "net.bytebuddy.implementation.bind.annotation.Default$Binder$TypeLocator$ForParameterType",
       "net.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$ForClassLoader",
       "net.bytebuddy.build.CachedReturnPlugin$double",
       "net.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder",
       "net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$NoOp",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$TypeVariableDefinitionAdapter",
       "net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction",
       "net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod$Tokenized",
       "net.bytebuddy.implementation.InvokeDynamic$InvocationProvider",
       "net.bytebuddy.implementation.InvokeDynamic$WithImplicitType",
       "net.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$Initializable",
       "net.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfType$InterfaceTypeRegistrant",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$OptionalMethodMatchAdapter",
       "net.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$UnlockingClassLoadingDelegate",
       "net.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Disabled",
       "net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener",
       "net.bytebuddy.asm.Advice$OffsetMapping$Target$ForField$ReadOnly",
       "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder",
       "net.bytebuddy.implementation.bytecode.member.MethodInvocation$IllegalInvocation",
       "net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Delegator",
       "net.bytebuddy.dynamic.ClassFileLocator$ForJarFile"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "net.bytebuddy:byte-buddy-agent:jar:1.9.10:test",
      "coordinates": "net.bytebuddy:byte-buddy-agent:1.9.10",
      "groupId": "net.bytebuddy",
      "artifactId": "byte-buddy-agent",
      "version": "1.9.10",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 43420,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.mockito:mockito-core:jar:3.0.0:test",
      "allTypes": [
       "net.bytebuddy.agent.ByteBuddyAgent",
       "net.bytebuddy.agent.ByteBuddyAgent$ProcessProvider$ForCurrentVm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Compound",
       "net.bytebuddy.agent.VirtualMachine",
       "net.bytebuddy.agent.VirtualMachine$ForHotSpot$OnUnix",
       "net.bytebuddy.agent.ByteBuddyAgent$AgentProvider",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$Unavailable",
       "net.bytebuddy.agent.ByteBuddyAgent$ProcessProvider",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentTypeEvaluator",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$ExternalAttachment",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$Simple$WithExternalAttachment",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentTypeEvaluator$Disabled",
       "net.bytebuddy.agent.ByteBuddyAgent$AgentProvider$ForByteBuddyAgent",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$ForStandardToolsJarVm",
       "META-INF.versions.9.module-info",
       "net.bytebuddy.agent.VirtualMachine$ForHotSpot",
       "net.bytebuddy.agent.Attacher",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$ForUnixHotSpotVm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$Simple",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$ForModularizedVm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$ForJ9Vm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentTypeEvaluator$InstallationAction",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentTypeEvaluator$ForJava9CapableVm",
       "net.bytebuddy.agent.ByteBuddyAgent$ProcessProvider$ForCurrentVm$ForJava9CapableVm",
       "net.bytebuddy.agent.ByteBuddyAgent$ProcessProvider$ForCurrentVm$ForLegacyVm",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$Accessor$Simple$WithoutExternalAttachment",
       "net.bytebuddy.agent.ByteBuddyAgent$AgentProvider$ForExistingAgent",
       "net.bytebuddy.agent.Installer",
       "net.bytebuddy.agent.ByteBuddyAgent$AttachmentProvider$ForUserDefinedToolsJar"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.objenesis:objenesis:jar:2.6:test",
      "coordinates": "org.objenesis:objenesis:2.6",
      "groupId": "org.objenesis",
      "artifactId": "objenesis",
      "version": "2.6",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 55684,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.mockito:mockito-core:jar:3.0.0:test",
      "allTypes": [
       "org.objenesis.instantiator.basic.ConstructorInstantiator",
       "org.objenesis.instantiator.gcj.GCJInstantiatorBase",
       "org.objenesis.ObjenesisException",
       "org.objenesis.instantiator.android.Android17Instantiator",
       "org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator",
       "org.objenesis.instantiator.basic.ObjectStreamClassInstantiator",
       "org.objenesis.strategy.PlatformDescription",
       "org.objenesis.instantiator.android.Android10Instantiator",
       "org.objenesis.strategy.SerializingInstantiatorStrategy",
       "org.objenesis.instantiator.annotations.Typology",
       "org.objenesis.instantiator.android.Android18Instantiator",
       "org.objenesis.instantiator.perc.PercSerializationInstantiator",
       "org.objenesis.instantiator.basic.NullInstantiator",
       "org.objenesis.instantiator.ObjectInstantiator",
       "org.objenesis.instantiator.basic.FailingInstantiator",
       "org.objenesis.strategy.StdInstantiatorStrategy",
       "org.objenesis.instantiator.SerializationInstantiatorHelper",
       "org.objenesis.instantiator.sun.MagicInstantiator",
       "org.objenesis.instantiator.annotations.Instantiator",
       "org.objenesis.instantiator.sun.UnsafeFactoryInstantiator",
       "org.objenesis.strategy.SingleInstantiatorStrategy",
       "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator$MockStream",
       "org.objenesis.instantiator.basic.ProxyingInstantiator",
       "org.objenesis.ObjenesisStd",
       "org.objenesis.instantiator.util.ClassDefinitionUtils$1",
       "org.objenesis.instantiator.basic.AccessibleInstantiator",
       "org.objenesis.instantiator.android.AndroidSerializationInstantiator",
       "org.objenesis.instantiator.sun.SunReflectionFactorySerializationInstantiator",
       "org.objenesis.instantiator.util.UnsafeUtils",
       "org.objenesis.instantiator.gcj.GCJInstantiator",
       "org.objenesis.instantiator.gcj.GCJSerializationInstantiator",
       "org.objenesis.instantiator.gcj.GCJInstantiatorBase$DummyStream",
       "org.objenesis.Objenesis",
       "org.objenesis.ObjenesisHelper",
       "org.objenesis.instantiator.perc.PercInstantiator",
       "org.objenesis.ObjenesisBase",
       "org.objenesis.strategy.InstantiatorStrategy",
       "org.objenesis.instantiator.util.ClassDefinitionUtils",
       "org.objenesis.instantiator.basic.ObjectInputStreamInstantiator",
       "org.objenesis.ObjenesisSerializer",
       "org.objenesis.instantiator.sun.SunReflectionFactoryHelper",
       "org.objenesis.instantiator.basic.NewInstanceInstantiator",
       "org.objenesis.strategy.BaseInstantiatorStrategy"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "org.assertj:assertj-core:jar:3.13.2:test",
    "coordinates": "org.assertj:assertj-core:3.13.2",
    "groupId": "org.assertj",
    "artifactId": "assertj-core",
    "version": "3.13.2",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 4478210,
    "type": "inherited",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.assertj.core.api.filter.FilterOperator",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$PropertyConfigurable",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$2",
     "org.assertj.core.internal.bytebuddy.matcher.ElementMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForVariable",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit",
     "org.assertj.core.internal.bytebuddy.asm.ModifierAdjustment",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForJarFile",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.FloatConstant",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher$ForJava11CapableVm",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$PrefixResolver$ForFixedValue",
     "org.assertj.core.internal.TypeComparators$1",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$CircularityLock$Default",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable",
     "org.assertj.core.error.ShouldHaveContent",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldRegistry$Default$Entry",
     "org.assertj.core.api.AbstractShortAssert",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Appender$EmulatingMethodVisitor",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator",
     "org.assertj.core.error.ShouldHaveDigest",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForLoadState",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation$IllegalInvocation",
     "org.assertj.core.error.ErrorMessageFactory",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForSerializedValue$Factory",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$TypeVariableDefinition",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$PrefixResolver",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Unloaded",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForDirectBound",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic",
     "org.assertj.core.internal.bytebuddy.description.modifier.FieldManifestation",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Loaded",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForUpperBound",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$3",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType",
     "org.assertj.core.error.ShouldHaveRootCause",
     "org.assertj.core.util.introspection.PropertyOrFieldSupport",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Compound$CompoundIterable",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Builder$OfGenericArrayType",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDefinition$SuperClassIterator",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$ValueHandling$Sort",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$NoOp",
     "org.assertj.core.internal.bytebuddy.description.field.FieldList$Explicit",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation",
     "org.assertj.core.error.ShouldHaveLineCount",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer$Suffixing",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeInitializer",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit$Target$OnMethod",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken",
     "org.assertj.core.error.ElementsShouldHaveAtLeast",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Simple",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$CacheFieldOffsetMapping",
     "org.assertj.core.internal.bytebuddy.description.modifier.Visibility",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$ValidatingFieldVisitor",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$NullValueGuard$UsingJump",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodEnter",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$Stubbing",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution",
     "org.assertj.core.error.ShouldBeEmpty",
     "org.assertj.core.error.ShouldNotContainCharSequence",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Listener$Compound",
     "org.assertj.core.internal.bytebuddy.matcher.ElementMatcher$Junction$Conjunction",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Resolved",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForTypeName",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$TypeVariableAnnotationAdapter",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameter$OfInstrumentedMethod",
     "org.assertj.core.error.ShouldBeInSameYear",
     "org.assertj.core.configuration.ConfigurationProvider",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$NoOp",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$SuperClassCheck$1",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$SuperClassCheck$2",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Split",
     "org.assertj.core.internal.bytebuddy.description.ModifierReviewable$OfAbstraction",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$Sink$ForJarOutputStream",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForField",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget$RebasedMethodInvocation",
     "org.assertj.core.util.introspection.FieldSupport",
     "org.assertj.core.internal.bytebuddy.description.modifier.MethodManifestation",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver",
     "org.assertj.core.internal.bytebuddy.matcher.InstanceTypeMatcher",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForDescriptor",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$AnnotationInvocationHandler",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazyInterfaceList",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$float",
     "org.assertj.core.internal.bytebuddy.jar.asm.Symbol",
     "org.assertj.core.internal.bytebuddy.matcher.CollectionErasureMatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ExceptionDefinition$AbstractBase",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$2",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$1",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$Valuable$AbstractBase",
     "org.assertj.core.internal.bytebuddy.jar.asm.Opcodes",
     "org.assertj.core.util.diff.ChangeDelta",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForField$ReadOnly",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForFolder",
     "org.assertj.core.error.ShouldHaveTime",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition",
     "org.assertj.core.api.AbstractPredicateAssert",
     "org.assertj.core.api.IntegerAssert",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationList$Explicit",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.NullConstant",
     "org.assertj.core.api.FloatAssert",
     "org.assertj.core.error.AnyElementShouldMatch",
     "org.assertj.core.internal.bytebuddy.implementation.StubMethod",
     "org.assertj.core.api.ClassBasedNavigableIterableAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.TargetType",
     "org.assertj.core.error.ShouldBeBeforeYear",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription",
     "org.assertj.core.internal.bytebuddy.jar.asm.commons.ModuleHashesAttribute",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClassFileVersion",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$InGenericShape",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$OptionalMethodMatchAdapter",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForMethodReturn",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveBoxingDelegate$BoxingStackManipulation",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Default$Binder$TypeLocator$ForType",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$ForValue$StaticFieldByteCodeAppender",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.FieldConstant$Cached",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Handler",
     "org.assertj.core.api.ProxyableClassAssert",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$AbstractBase",
     "org.assertj.core.internal.bytebuddy.build.BuildLogger$Adapter",
     "org.assertj.core.internal.bytebuddy.description.method.MethodList$Empty",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.AuxiliaryType$NamingStrategy",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$10",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$11",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$ExtractableView",
     "org.assertj.core.util.introspection.FieldUtils",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForByteConstant",
     "org.assertj.core.api.AbstractObjectArrayAssert",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$12",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$13",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$WithImplicitType$OfField",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator",
     "org.assertj.core.api.ObjectAssert",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Listener",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Node",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant$ForMethod",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation",
     "org.assertj.core.error.ElementsShouldHaveExactly",
     "org.assertj.core.error.ShouldContainAtIndex",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$Resolved",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit$Target",
     "org.assertj.core.internal.bytebuddy.matcher.ElementMatchers",
     "org.assertj.core.api.AbstractOptionalLongAssert",
     "org.assertj.core.api.IntPredicateAssert",
     "org.assertj.core.error.ShouldBeBeforeOrEqualTo",
     "org.assertj.core.error.ShouldContainOnlyNulls$1",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$PrefixResolver$Default$2",
     "org.assertj.core.api.HamcrestCondition",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$PrefixResolver$Default$3",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Explicit",
     "org.assertj.core.internal.bytebuddy.jar.asm.FieldVisitor",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$PrefixResolver$Default$1",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForValue",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Prepared$Entry",
     "org.assertj.core.api.AbstractFutureAssert",
     "org.assertj.core.api.AbstractPathAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$1",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$2",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder$RebaseableMatcher",
     "org.assertj.core.internal.bytebuddy.matcher.ModifierMatcher",
     "org.assertj.core.internal.Arrays",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$3",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfType$InterfaceTypeRegistrant",
     "org.assertj.core.internal.IterableElementComparisonStrategy",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved$WithImplicitType",
     "org.assertj.core.api.exception.PathsException",
     "org.assertj.core.error.ShouldBeSorted",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfLegacyVmConstructor",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$NameProvider$ForInterceptedMethod",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$ForArrayType",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition$Undefined",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$1",
     "org.assertj.core.api.recursive.comparison.ComparisonDifference",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation$DynamicInvocation",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$ForLoadedType",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$Latent",
     "org.assertj.core.api.recursive.comparison.FieldLocation",
     "org.assertj.core.groups.Tuple",
     "org.assertj.core.internal.bytebuddy.implementation.ExceptionMethod$ConstructionDelegate",
     "org.assertj.core.error.ShouldHaveReference",
     "org.assertj.core.internal.bytebuddy.matcher.FilterableList",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner$IsAssignableToVisitor$OfWildcard",
     "org.assertj.core.internal.bytebuddy.matcher.FilterableList$AbstractBase",
     "org.assertj.core.internal.bytebuddy.jar.asm.commons.FieldRemapper",
     "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher$ForFieldToken$ResolvedMatcher",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Listener$StreamWriting",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$double",
     "org.assertj.core.error.ShouldContainSequenceOfCharSequence",
     "org.assertj.core.api.ComparatorFactory$2",
     "org.assertj.core.internal.bytebuddy.dynamic.Nexus",
     "org.assertj.core.api.ComparatorFactory$1",
     "org.assertj.core.data.TemporalUnitWithinOffset",
     "org.assertj.core.error.ElementsShouldMatch",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$Sink",
     "org.assertj.core.api.UriAssert",
     "org.assertj.core.internal.bytebuddy.description.ModifierReviewable$ForMethodDescription",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Installation",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$MethodTokenList",
     "org.assertj.core.internal.bytebuddy.dynamic.TypeResolutionStrategy$Resolved",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$Trivial",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InstallationListener$Adapter",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForModuleFile",
     "org.assertj.core.api.InstanceOfAssertFactories",
     "org.assertj.core.internal.bytebuddy.description.field.FieldList$Empty",
     "org.assertj.core.error.ShouldBeEmptyDirectory",
     "org.assertj.core.internal.bytebuddy.implementation.DefaultMethodCall",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Harmonized",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$InnerTypeDefinition$ForType",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy$Unsafe",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Resolved$Node",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy$1",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$ForInstrumentedMethod$Default$Simple",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$CreationAction",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$OfVisibilityBridge$VisibilityBridge",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$SilentConstruction",
     "org.assertj.core.internal.bytebuddy.implementation.LoadedTypeInitializer$NoOp",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$ForJarFile",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget$Factory",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StubValue",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableSubstitutor",
     "org.assertj.core.groups.FieldsOrPropertiesExtractor",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$InGenericShape",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Factory",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$WithMethodAttributeAppenderFactory",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodExit$WithExceptionHandler",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$ContravariantBinding",
     "org.assertj.core.error.ShouldNotHaveSameClass",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodHandle",
     "org.assertj.core.annotations.NonNullFields",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$ValueHandling",
     "org.assertj.core.error.ShouldContainsOnlyOnce",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.This",
     "org.assertj.core.error.ShouldMatch",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor",
     "org.assertj.core.error.ShouldHaveRootCauseExactlyInstance",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$OfGivenField",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner",
     "org.assertj.core.error.ShouldContainExactlyInAnyOrder$ErrorType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldRegistry$Default$Compiled",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$Suppressing",
     "org.assertj.core.error.ShouldContainCharSequence",
     "org.assertj.core.internal.bytebuddy.description.enumeration.EnumerationDescription$Latent",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Unavailable",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OnMethodExit",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayAccess$Putter",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$Loaded$WithIncompatibleRuntimeType",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$short",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant$ForConstructor",
     "org.assertj.core.api.junit.jupiter.SoftAssertionsExtension",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler$Default",
     "org.assertj.core.api.LocalTimeAssert",
     "org.assertj.core.api.InstanceOfAssertFactory",
     "org.assertj.core.api.filter.Filters",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$UnresolvedType",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Listener$Adapter",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$InvocationType",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$ForFolder$Dispatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Merger$Directional",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$ForTopLevelType$Factory",
     "org.assertj.core.internal.bytebuddy.description.field.FieldList$ForLoadedFields",
     "org.assertj.core.util.FailureMessages",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation$Factory",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$InDefinedShape$AbstractBase",
     "org.assertj.core.util.Streams",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodType",
     "org.assertj.core.internal.Strings",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LocationStrategy",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$Loaded",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationDescription",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList",
     "org.assertj.core.internal.bytebuddy.dynamic.TypeResolutionStrategy$Passive",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForShortConstant",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin",
     "org.assertj.core.internal.bytebuddy.build.ToStringPlugin$Exclude",
     "org.assertj.core.api.Java6JUnitSoftAssertions",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$Loaded",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader",
     "org.assertj.core.api.DoubleArrayAssert",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$TypeStrategy",
     "org.assertj.core.api.AbstractEnumerableAssert",
     "org.assertj.core.api.AssertionInfo",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$Chain$Factory",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$ForDefaultConstructor",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation$WithImplicitInvocationTargetType",
     "org.assertj.core.error.ShouldBeLessOrEqual",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$2",
     "org.assertj.core.api.AssertFactory",
     "org.assertj.core.internal.LongArrays",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable",
     "org.assertj.core.internal.bytebuddy.build.EntryPoint",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Resolution",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForStackManipulation",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.FieldAttributeAppender$NoOp",
     "org.assertj.core.internal.bytebuddy.description.TypeVariableSource$Visitor$NoOp",
     "org.assertj.core.api.Assertions",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstance$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnMethodParameter",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter",
     "org.assertj.core.internal.bytebuddy.jar.asm.MethodVisitor",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$ForReifiedErasure",
     "org.assertj.core.error.ShouldHaveBinaryContent",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForCreation",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$WrappingDispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodCall",
     "org.assertj.core.internal.bytebuddy.asm.TypeReferenceAdjustment$TypeReferenceClassVisitor$TypeReferenceAnnotationVisitor",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$ForValue",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForVisibilityBridge$Compiled",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection",
     "org.assertj.core.util.TextFileWriter",
     "org.assertj.core.util.diff.Delta",
     "org.assertj.core.internal.bytebuddy.matcher.EqualityMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$18",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$17",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$Priority",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction$ByteArrayUrlStreamHandler",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForMissingValue$Loaded",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$19",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$14",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$13",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$16",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields$Entry",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$15",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Empty",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$10",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$1",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$12",
     "org.assertj.core.internal.bytebuddy.description.modifier.SynchronizationState",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$11",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$AbstractBase$Hierarchical",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationValueFilter",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod$TransformedParameterList",
     "org.assertj.core.error.ShouldBeEqualWithinPercentage",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$ForClassLoader",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard$LazyUpperBoundWildcard",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$InMemory$MapEntryIterator",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$AccessBridgeWrapper$BridgeTarget",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$1",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender$Target",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Removal$1",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Removal$2",
     "org.assertj.core.condition.Negative",
     "org.assertj.core.internal.bytebuddy.matcher.CollectionItemMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate$NotifyingClassLoadingAction",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForAnnotation",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForDetachment",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant$PrivilegedLookup",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$ForLoadedType$TypeVariableBoundList",
     "org.assertj.core.api.ProxyablePredicateAssert",
     "org.assertj.core.internal.bytebuddy.implementation.LoadedTypeInitializer",
     "org.assertj.core.api.LocalDateAssert",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$Token",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForField",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Removal",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.TypeAttributeAppender$ForInstrumentedType",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationValueFilter$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$WithCustomProperties",
     "org.assertj.core.api.SoftAssertionError",
     "org.assertj.core.error.ShouldBeAssignableFrom",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.StackManipulation$Trivial",
     "org.assertj.core.internal.Bytes",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.FieldAttributeAppender$Factory$Compound",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Factory$Illegal",
     "org.assertj.core.internal.bytebuddy.matcher.MethodParameterTypeMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess$OffsetIncrementing",
     "org.assertj.core.internal.DeepDifference$1",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$LegacyVmDispatcher",
     "org.assertj.core.internal.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice",
     "org.assertj.core.api.AtomicIntegerAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$ClassFileBufferStrategy$Default",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$State",
     "org.assertj.core.util.diff.DiffAlgorithm",
     "org.assertj.core.api.AbstractArrayAssert",
     "org.assertj.core.api.ThrowableAssert",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$Appender",
     "org.assertj.core.error.ShouldContain",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$CompoundComparator",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForAbstractMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.StackManipulation$Size",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Initializable",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$ForThisValue$Appender",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList$ForWildcardBound",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$SubstitutingMethodVisitor$LocalVariableTracingMethodVisitor",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$AbstractPropertyAccessorMethod",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodLocator$ForInstrumentedMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.Assigner$Typing",
     "org.assertj.core.api.InputStreamAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding$Illegal",
     "org.assertj.core.util.Lists",
     "org.assertj.core.error.ShouldBeEqual",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForThisReference",
     "org.assertj.core.api.ListAssert",
     "org.assertj.core.data.TemporalUnitOffset",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$CodeTranslationVisitor$ForMethodExit",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase",
     "org.assertj.core.error.ShouldBeExecutable",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$OfInstrumentedMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$ForGetter",
     "org.assertj.core.error.MultipleAssertionsError",
     "org.assertj.core.error.ShouldBeExhausted",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$WithoutSpecification",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$NodeList",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$InstanceFieldConstructor",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution$Sort",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForStringRepresentation",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$NullValueGuard$NoOp",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionListenable",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$Loaded$AbstractBase$ForUnresolvedProperty",
     "org.assertj.core.error.ShouldBeEqualIgnoringNewLines",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$ForFolder$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher$FieldGetInstruction",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription",
     "org.assertj.core.error.ShouldBeEqualIgnoringTimezone",
     "org.assertj.core.error.ShouldBeRelativePath",
     "org.assertj.core.api.AbstractDateAssert",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForMethodName",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition$AbstractBase",
     "org.assertj.core.util.diff.DiffUtils",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultCall$Binder$DefaultMethodLocator$Implicit",
     "org.assertj.core.api.AtomicIntegerArrayAssert",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes$WithResolvedErasure",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation$Appender",
     "org.assertj.core.internal.bytebuddy.utility.JavaModule$Dispatcher$Enabled",
     "org.assertj.core.util.Strings$StringsToJoin",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$ForInstrumentedMethod",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode",
     "org.assertj.core.internal.bytebuddy.matcher.NameMatcher",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$Resolved",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$TypeSubstituting",
     "org.assertj.core.extractor.ResultOfExtractor",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.ByteCodeAppender$Size",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment$WithinMethod",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationValueFilter$Default$2",
     "org.assertj.core.internal.bytebuddy.description.modifier.MethodArguments",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationValueFilter$Default$1",
     "org.assertj.core.internal.bytebuddy.description.ModifierReviewable$ForParameterDescription",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForByteCodeElement$WithIndex",
     "org.assertj.core.api.IndexedObjectEnumerableAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$NoOp",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForInstance",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArrayElement$OfInvokedMethod",
     "org.assertj.core.internal.Iterables",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$Record",
     "org.assertj.core.internal.bytebuddy.description.ByteCodeElement$Token",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$Initializable",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Ambiguous",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$Dispatcher$InjectorFactory",
     "org.assertj.core.internal.bytebuddy.jar.asm.ClassVisitor",
     "org.assertj.core.util.diff.Patch",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingTypeProjection",
     "org.assertj.core.util.Throwables",
     "org.assertj.core.internal.bytebuddy.implementation.InvocationHandlerAdapter$ForField",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ExtractionClassFileTransformer",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Target$Factory",
     "org.assertj.core.internal.DeepDifference$DualKey",
     "org.assertj.core.api.MapAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$AccessorMethod",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$NullValueGuard$NoOp",
     "org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.InvocationHandlerAdapter$WithoutPrivilegeConfiguration",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner$IsAssignableToVisitor",
     "org.assertj.core.error.ShouldNotContainSequence",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex$DoubleIndexed",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$Resolution",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$OfAnnotatedElement",
     "org.assertj.core.error.ShouldContainNull",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate$SimpleClassLoadingAction",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$CacheField",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForStaticMethod",
     "org.assertj.core.internal.bytebuddy.build.Plugin",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArrayElement",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForModule",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$AbstractBase",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Argument$Binder",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.description.modifier.EnumerationState",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields$FieldVisitorWrapper",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OnMethodEnter",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithoutDrain$WithActiveRecord",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder",
     "org.assertj.core.internal.bytebuddy.matcher.FailSafeMatcher",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodEnter",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Origin",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$ForClassLoader$2",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldRegistry$Default$Compiled$Entry",
     "org.assertj.core.internal.bytebuddy.jar.asm.Attribute$Set",
     "org.assertj.core.api.iterable.ThrowingExtractor",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$ForLoadedTypes",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardUpperBoundType",
     "org.assertj.core.presentation.Representation",
     "org.assertj.core.internal.Paths",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingLookup",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForMismatchedType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$Factory$Default",
     "org.assertj.core.internal.bytebuddy.implementation.ExceptionMethod$ConstructionDelegate$ForStringConstructor",
     "META-INF.versions.9.module-info",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$AnnotationAdapter",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$InMemory",
     "org.assertj.core.api.FloatingPointNumberAssert",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$ForFolder",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.ClassWriterStrategy$FrameComputingClassWriter",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$Element$ForByteArray",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazyInterfaceType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForAnnotationValue",
     "org.assertj.core.error.ShouldBeExactlyInstanceOf",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition",
     "org.assertj.core.internal.bytebuddy.agent.builder.LambdaFactory",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArrayElement$OfParameter",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$ForClassLoader$1",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.InstanceCheck",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$ForMethod$MethodModifierTransformer",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ConditionalReturn",
     "org.assertj.core.internal.bytebuddy.matcher.BooleanMatcher",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Failing",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForDefaultValue",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode",
     "org.assertj.core.error.ShouldMatchPattern",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.This$Binder",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForClassLoader$WeaklyReferenced",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$EmptyEnumeration",
     "org.assertj.core.api.ByteAssert",
     "org.assertj.core.error.uri.ShouldHaveScheme",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForByteCodeElement",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$1",
     "org.assertj.core.internal.bytebuddy.description.ModifierReviewable$ForTypeDefinition",
     "org.assertj.core.api.OptionalIntAssert",
     "org.assertj.core.internal.bytebuddy.description.modifier.ProvisioningState",
     "org.assertj.core.api.AbstractIterableSizeAssert",
     "org.assertj.core.error.ShouldBeWritable",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$1",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Explicit",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$OffsetProvider",
     "org.assertj.core.internal.bytebuddy.description.enumeration.EnumerationDescription",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable$AbstractBase$Adapter",
     "org.assertj.core.util.diff.myers.PathNode",
     "org.assertj.core.description.TextDescription",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved$Factory",
     "org.assertj.core.error.BasicErrorMessageFactory",
     "org.assertj.core.api.AbstractThrowableAssert",
     "org.assertj.core.internal.DeepDifference",
     "org.assertj.core.internal.bytebuddy.description.modifier.TypeManifestation",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod$1",
     "org.assertj.core.internal.bytebuddy.ClassFileVersion$VersionLocator$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod$2",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$AnnotatedTypeVariable",
     "org.assertj.core.internal.bytebuddy.dynamic.NexusAccessor",
     "org.assertj.core.internal.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$InnerTypeDefinitionForMethodAdapter",
     "org.assertj.core.error.ShouldBeAfter",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedInterfaceType",
     "org.assertj.core.error.ElementsShouldBeAtLeast",
     "org.assertj.core.error.ShouldBeInSameMinuteWindow",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Pausing",
     "org.assertj.core.internal.bytebuddy.dynamic.TypeResolutionStrategy$Active",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$6",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$5",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$4",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$3",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$SuperTypeLoading",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$2",
     "org.assertj.core.error.ShouldNotBeExactlyInstanceOf",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$1",
     "org.assertj.core.internal.Classes",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$NoOp",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Empty",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding$Builder",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForBooleanConstant",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$Malformed$TokenList",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$Suppressing$Bound",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode$3",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher",
     "org.assertj.core.api.ComparatorFactory",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Transformer",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Factory$Duplex",
     "org.assertj.core.api.recursive.comparison.DualValue",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForTokens",
     "org.assertj.core.error.ShouldNotBeBetween",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$SpecialMethodInvocation$Illegal",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$ForFuture",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Initial",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForAllArguments$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForNullValue",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Factory$Simple",
     "org.assertj.core.configuration.Services",
     "org.assertj.core.api.AbstractBooleanAssert",
     "org.assertj.core.internal.ComparisonStrategy",
     "org.assertj.core.api.ErrorCollector$1",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithDiscardedEnterType",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForExitValue",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$Origin$ForJarFile$JarFileIterator",
     "org.assertj.core.api.recursive.comparison.RecursiveComparisonDifferenceCalculator",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Duplication$WithFlip",
     "org.assertj.core.error.ShouldBeEqualIgnoringHours",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForNonPrimitiveArray",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$TranslationMode$2",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$CacheProvider$NoOp",
     "org.assertj.core.internal.bytebuddy.build.EntryPoint$1",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForSelfOrStaticInvocation$Factory",
     "org.assertj.core.error.ShouldContainKey",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$Unavailable",
     "org.assertj.core.data.Offset",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstrumentedType$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultCall",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$OwnerTypeLocatable",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.SuperCall",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$FallbackStrategy$ByThrowableType",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$WithLazyResolution",
     "org.assertj.core.internal.bytebuddy.matcher.DefinedShapeMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Listener$WithErrorsOnly",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$1",
     "org.assertj.core.extractor.ByNameMultipleExtractor",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$Prepareable",
     "org.assertj.core.internal.Predicates",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayFactory",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForField$Location$ForExplicitField",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$ForIndex",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodLocator$Factory",
     "org.assertj.core.internal.bytebuddy.asm.MemberRemoval",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$Token",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$AbstractBase",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForUnusedValue$Factory",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$SignatureToken",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldSetter$Appender",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution",
     "org.assertj.core.internal.bytebuddy.description.field.FieldList",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$FieldLocation$Prepared",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$Bound",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$Resolution$Simple",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Default$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial$AbstractBase",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Split$Dispatcher",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfLegacyVmMethod",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Listener$ModuleReadEdgeCompleting",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$1",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$FieldSetterDelegation",
     "org.assertj.core.api.SoftAssertionsStatement$1",
     "org.assertj.core.error.ShouldBeInSameHour",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$SinglePass",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$WithoutSpecifiedTarget",
     "org.assertj.core.internal.bytebuddy.description.DeclaredByType",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$6",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$7",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$8",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$9",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$2",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$3",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$ForJava7CapableVm",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$4",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$5",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyFieldDescription",
     "org.assertj.core.internal.OnFieldsComparator",
     "org.assertj.core.internal.bytebuddy.implementation.SuperMethodCall$Appender$TerminationHandler$2",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$TypeExtractor$AnnotationExtractor",
     "org.assertj.core.internal.bytebuddy.implementation.SuperMethodCall$Appender$TerminationHandler$1",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding$Anonymous",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$FallbackStrategy",
     "org.assertj.core.api.AtomicReferenceFieldUpdaterAssert",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$Inverted",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$CovariantBinding",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.TypeAttributeAppender$NoOp",
     "org.assertj.core.error.ShouldHaveNoCause",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$8",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Target",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$7",
     "org.assertj.core.presentation.UnicodeRepresentation",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Simple$Resolution$BootstrapClassLoaderCapableInjectorFactory",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.SuperMethodCall$1",
     "org.assertj.core.internal.bytebuddy.matcher.PrimitiveTypeMatcher",
     "org.assertj.core.error.ShouldHaveNoParent",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Default",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstrumentedType",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.StackManipulation",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Listener$Compound",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter$TerminationHandler",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodLocator$ForExplicitMethod",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.TypeAttributeAppender$Compound",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.ByteCodeAppender$Compound",
     "org.assertj.core.error.ShouldBeInstance",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher$2",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher$3",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.HandleInvocation",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$WithoutBody",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyResolution",
     "org.assertj.core.internal.bytebuddy.description.field.FieldList$TypeSubstituting",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory$Default",
     "org.assertj.core.error.future.ShouldNotBeCancelled",
     "org.assertj.core.api.JUnitBDDSoftAssertions",
     "org.assertj.core.internal.Dates$1",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$ForFolder$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$ForLoadedTypes",
     "org.assertj.core.internal.BooleanArrays",
     "org.assertj.core.util.Strings",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$ForFolder",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription",
     "org.assertj.core.condition.AllOf",
     "org.assertj.core.error.ShouldNotBeNull",
     "org.assertj.core.api.SoftProxies",
     "org.assertj.core.error.ConditionAndGroupGenericParameterTypeShouldBeTheSame",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodParameter$Resolved",
     "org.assertj.core.error.ShouldOnlyHaveFields$ErrorType",
     "org.assertj.core.error.ElementsShouldSatisfy",
     "org.assertj.core.api.ClassBasedNavigableListAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$NoOp",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Dispatcher",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$Compiled",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$long",
     "org.assertj.core.internal.bytebuddy.description.TypeVariableSource$AbstractBase",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.IgnoreForBinding$Verifier",
     "org.assertj.core.error.ShouldBeFile",
     "org.assertj.core.internal.DigestDiff",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy",
     "org.assertj.core.error.ShouldNotContainOnlyWhitespaces",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$Binding",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForImplicitProperty",
     "org.assertj.core.groups.Properties",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Latent",
     "org.assertj.core.internal.bytebuddy.jar.asm.TypePath",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$RenderingDelegate",
     "org.assertj.core.error.ShouldBeCanonicalPath",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldRegistry$Default",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$1",
     "org.assertj.core.internal.bytebuddy.asm.Advice$FieldValue",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldRegistry$Compiled$NoOp",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Identified$Narrowable",
     "org.assertj.core.internal.Objects",
     "org.assertj.core.internal.Digests",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Empty",
     "org.assertj.core.internal.bytebuddy.build.BuildLogger$Compound",
     "org.assertj.core.api.ClassLoadingStrategyFactory",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Compiled",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.InjectionClassLoader",
     "org.assertj.core.internal.bytebuddy.build.ToStringPlugin",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver",
     "org.assertj.core.error.OptionalShouldContainInstanceOf",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$ForGetterSetterPair",
     "org.assertj.core.error.uri.ShouldHaveAnchor",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$AbstractBase",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodExit",
     "org.assertj.core.internal.bytebuddy.build.Plugin$ForElementMatcher",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$Token$TypeList",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$Discarding",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$NameProvider$ForExplicitName",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodType$Dispatcher$ForLegacyVm",
     "org.assertj.core.error.ShouldNotEndWith",
     "org.assertj.core.internal.ByteArrays",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForReturnTypeName",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForThisReference",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator$ForParameterType",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod$3",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction$ByteArrayUrlStreamHandler$ByteArrayUrlConnection",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe",
     "org.assertj.core.error.ShouldContainExactly",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForType$Bound",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod$2",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod$1",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$TransformerDecorator$NoOp",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Disabled",
     "org.assertj.core.error.ShouldBeAnArray",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$FieldMatchAdapter",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$AbstractBase",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler",
     "org.assertj.core.internal.bytebuddy.asm.ModifierAdjustment$ModifierAdjustingClassVisitor",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForMissingType",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$ForField$TransformedField",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$SpecialMethodInvocation$Simple",
     "org.assertj.core.internal.bytebuddy.description.ModifierReviewable$ForFieldDescription",
     "org.assertj.core.internal.bytebuddy.description.method.MethodList",
     "org.assertj.core.error.ShouldBeAtIndex",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Sort",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.StackManipulation$Compound",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$FieldResolver",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Ambiguous$Node",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$AbstractBase$ComponentTypeReference",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterator",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$ForLoadedMethod",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationSource$Empty",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender",
     "org.assertj.core.data.MapEntry",
     "org.assertj.core.error.ElementsShouldSatisfy$UnsatisfiedRequirement",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable$AbstractBase",
     "org.assertj.core.error.ShouldContainOnlyNulls",
     "org.assertj.core.error.ShouldBe",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target$Resolved$Simple",
     "org.assertj.core.internal.DoubleArrays",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$Loadable",
     "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher$Disjunction",
     "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingDelegate",
     "org.assertj.core.internal.ShortArrays",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$Directional",
     "org.assertj.core.internal.bytebuddy.asm.TypeReferenceAdjustment$TypeReferenceClassVisitor",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Target$AbstractBase$DefaultMethodInvocation$1",
     "org.assertj.core.util.introspection.IntrospectionError",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Target$AbstractBase$DefaultMethodInvocation$2",
     "org.assertj.core.internal.BigDecimals",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TerminationHandler$FieldSetting",
     "org.assertj.core.api.ObjectArrayAssert",
     "org.assertj.core.api.PredicateAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable$AbstractBase$Adapter",
     "org.assertj.core.util.diff.Delta$TYPE",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$Instantiator",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForField",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$ForJava8CapableVm",
     "org.assertj.core.error.uri.ShouldHavePort",
     "org.assertj.core.api.ObjectAssertFactory",
     "org.assertj.core.error.ShouldHaveAtLeastOneElementOfType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$AccessBridgeWrapper$AccessorBridge",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$ResubmissionInstallationListener",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$OfFormalTypeVariable",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$CodePreservingMethodVisitor",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory",
     "org.assertj.core.internal.bytebuddy.build.EntryPoint$Default$3",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate",
     "org.assertj.core.internal.bytebuddy.build.EntryPoint$Default$4",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfField",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$WithImplicitType",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$TypeExtractor",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Ignoring",
     "org.assertj.core.error.ShouldHaveSameHourAs",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.StubValue",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$boolean",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod$Token",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$MethodLocator",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForType",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType",
     "org.assertj.core.api.OptionalAssert",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$WithoutSpecification$ForMatchedField",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$FieldSetter",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Default$Dispatcher$ForJava7CapableVm",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$Binding$Resolved",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor",
     "org.assertj.core.error.ShouldBeMarked",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$StreamWriting",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$Default",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForThrowable$Factory",
     "org.assertj.core.internal.bytebuddy.build.EntryPoint$Default$1",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveWideningDelegate$WideningStackManipulation",
     "org.assertj.core.internal.bytebuddy.build.EntryPoint$Default$2",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType$OfFormalTypeVariable",
     "org.assertj.core.internal.bytebuddy.jar.asm.ClassTooLargeException",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$NaturalOrderComparator",
     "org.assertj.core.internal.bytebuddy.matcher.IsNamedMatcher",
     "org.assertj.core.internal.bytebuddy.TypeCache$LookupKey",
     "org.assertj.core.internal.bytebuddy.description.ModifierReviewable$AbstractBase",
     "org.assertj.core.error.OptionalDoubleShouldHaveValueCloseToOffset",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$NoOp",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution$Decoratable",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$TypePoolResolver$ForExplicitPool",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Dispatcher",
     "org.assertj.core.internal.Doubles",
     "org.assertj.core.error.ShouldHaveOnlyElementsOfType",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$ForRawType",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.TypeAttributeAppender$ForInstrumentedType$Differentiating",
     "org.assertj.core.internal.bytebuddy.implementation.InvocationHandlerAdapter$ForInstance",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForMissingType$Loaded",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$Enhance",
     "org.assertj.core.error.AbstractShouldHaveTextContent",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$Default",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$3",
     "org.assertj.core.error.ShouldNotContainSubsequence",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$2",
     "org.assertj.core.error.future.ShouldNotBeCompleted",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$5",
     "org.assertj.core.internal.bytebuddy.implementation.MethodAccessorFactory$Illegal",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$4",
     "org.assertj.core.api.Java6BDDSoftAssertions",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$Symbolic",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$1",
     "org.assertj.core.api.CompletableFutureAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$Sort",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$7",
     "org.assertj.core.internal.bytebuddy.utility.JavaModule$Dispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$6",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$9",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer$8",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Prepared",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$FieldGetterDelegation",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForMethodParameter",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$MethodToken",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$Compound",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$ForTopLevelType",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$NoOp",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$TypeCompatibilityCheck",
     "org.assertj.core.internal.bytebuddy.jar.asm.Label",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$AttributeObtainingFieldVisitor",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$ClassFileBufferStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$FieldLocation$Relative",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver$StreamWriting",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ReturnTypeTypeRegistrant",
     "org.assertj.core.util.Maps",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$Dispatcher$ForJava6CapableVm",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForConstruction",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithoutDrain",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedConstructor",
     "org.assertj.core.internal.RealNumbers",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$AnnotationStripper$NonAnnotatedTypeVariable",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading$TypeCastingHandler$ForBridgeTarget",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithDecorationOnly$LazyFieldList",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe$1",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$InMemory",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper",
     "org.assertj.core.internal.bytebuddy.matcher.AnnotationTypeMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess$OfGenericField",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForField",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$WithAnnotationOverlay",
     "org.assertj.core.error.ShouldBeInSameMinute",
     "org.assertj.core.internal.bytebuddy.dynamic.NexusAccessor$Dispatcher$Available",
     "org.assertj.core.internal.bytebuddy.utility.CompoundList",
     "org.assertj.core.internal.bytebuddy.implementation.bind.ArgumentTypeResolver$PrimitiveTypePrecedence",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper",
     "org.assertj.core.api.BDDSoftAssertions",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$MethodCall$Appender$AccessorMethodInvocation",
     "org.assertj.core.internal.ExtendedByTypesComparator",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy$PrecomputedMethodGraph",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TerminationHandler$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$MethodLocator$ForImplicitType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Factory$Simplex",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess$OffsetWriting",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder$InstrumentableMatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory$Default$1",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$InvocationFactory$Default$2",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Record$ForImplicitField",
     "org.assertj.core.internal.Futures",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer",
     "org.assertj.core.internal.bytebuddy.TypeCache$Sort",
     "org.assertj.core.internal.bytebuddy.dynamic.VisibilityBridgeStrategy$Default$1",
     "org.assertj.core.internal.bytebuddy.dynamic.VisibilityBridgeStrategy$Default$2",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$FieldResolver$Simple",
     "org.assertj.core.internal.bytebuddy.dynamic.VisibilityBridgeStrategy$Default$3",
     "org.assertj.core.internal.bytebuddy.implementation.MethodAccessorFactory$AccessType",
     "org.assertj.core.api.SoftAssertions",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType",
     "org.assertj.core.internal.bytebuddy.matcher.ClassLoaderParentMatcher",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfLegacyVmMethod",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Malformed",
     "org.assertj.core.internal.bytebuddy.ClassFileVersion$VersionLocator$ForJava9CapableVm",
     "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher$ForSelfDeclaredMethod",
     "org.assertj.core.internal.bytebuddy.description.field.FieldList$ForTokens",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfConstructor",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Default",
     "org.assertj.core.api.ExtensionPoints",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ExceptionHandler$Default",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing$4",
     "org.assertj.core.api.Java6BDDAssertions",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing$2",
     "org.assertj.core.api.ProxifyMethodChangingTheObjectUnderTest",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing$3",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForUrl$ClassLoaderCreationAction",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$Latent",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$InnerTypeDefinition",
     "org.assertj.core.api.IterableAssert",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue",
     "org.assertj.core.util.diff.myers.Snake",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody",
     "org.assertj.core.error.ShouldHaveAtIndex",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithoutDrain$WithoutActiveRecord",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodCall$Factory",
     "org.assertj.core.error.ShouldBeGreaterOrEqual",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$AssignerConfigurable",
     "org.assertj.core.internal.bytebuddy.ClassFileVersion",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.IntegerConstant$SingleBytePush",
     "org.assertj.core.error.ShouldContainAnyOf",
     "org.assertj.core.internal.bytebuddy.build.ToStringPlugin$Enhance",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$MethodLocator$ForExplicitType",
     "org.assertj.core.internal.bytebuddy.implementation.bind.ArgumentTypeResolver$ParameterIndexToken",
     "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher$Resolved",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$OfLoadedInterfaceTypes",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$OfGivenMethod",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription$Token",
     "org.assertj.core.api.AbstractAssert",
     "org.assertj.core.api.ThrowableAssertAlternative",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$TerminationHandler$2",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$TerminationHandler$1",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading$TypeCastingHandler",
     "org.assertj.core.error.ShouldContainValues",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment$SelfContained",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$BridgeMethodImplementation",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDefinition$Sort",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested$LazyParameterizedType",
     "org.assertj.core.error.ShouldHaveMessage",
     "org.assertj.core.extractor.Extractors",
     "org.assertj.core.error.ShouldBeInstanceOfAny",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForClassConstant",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$ClassRedefinitionTransformer",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$ForRedefinition",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType$LazyPrimitiveType",
     "org.assertj.core.util.introspection.ClassUtils",
     "org.assertj.core.api.AbstractLongArrayAssert",
     "org.assertj.core.api.AutoCloseableSoftAssertions",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$Chain$Step",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy$ConstructorCall",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$Binding$Unresolved",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForOwnerType",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForReifiedType",
     "org.assertj.core.error.ShouldContainEntry",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver$Unique",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition$Trivial",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$ForPoolValue",
     "org.assertj.core.error.ShouldHaveCauseReference",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$NoOp",
     "org.assertj.core.internal.bytebuddy.jar.asm.SymbolTable$Entry",
     "org.assertj.core.api.InstantAssert",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Summary",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin",
     "org.assertj.core.internal.bytebuddy.matcher.CollectionSizeMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$Eager",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$Appender",
     "org.assertj.core.api.FutureAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$2",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$TypePoolResolver",
     "org.assertj.core.error.ShouldHaveSize",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$1",
     "org.assertj.core.data.Index",
     "org.assertj.core.error.ShouldContainOnly$ErrorType",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForEnterValue",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Eager$Dispatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$BootstrapInjection$Disabled",
     "org.assertj.core.error.ShouldHaveSizeBetween",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$WithFixedDelay",
     "org.assertj.core.internal.Comparables",
     "org.assertj.core.internal.bytebuddy.jar.asm.ClassWriter",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForStubValue",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$ForDefaultMethodInvocation",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe$Binder",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodEnter$WithRetainedEnterType",
     "org.assertj.core.util.Closeables",
     "org.assertj.core.error.ElementsShouldBe",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$ForOriginType",
     "org.assertj.core.api.Java6SoftAssertions",
     "org.assertj.core.internal.FieldByFieldComparator",
     "org.assertj.core.error.ShouldBeLowerCase",
     "org.assertj.core.api.AtomicIntegerFieldUpdaterAssert",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription$ForLoadedField",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$MethodInvoker",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading$TypeCastingHandler$NoOp",
     "org.assertj.core.extractor.ToStringExtractor",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForField$WithExplicitType",
     "org.assertj.core.internal.bytebuddy.asm.Advice$AllArguments",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$Empty",
     "org.assertj.core.error.ShouldBeEqualWithTimePrecision",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Simple$Resolution",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Listener$NoOp",
     "org.assertj.core.api.iterable.Extractor",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled$ForStaticCall",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$AccessBridgeWrapper",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardLowerBoundType",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.SuperMethodCall$WithoutReturn",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$TypeStrategy$Default$2",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeValidation",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$TypeStrategy$Default$1",
     "org.assertj.core.internal.bytebuddy.jar.asm.TypeReference",
     "org.assertj.core.error.ElementsShouldBeExactly",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw",
     "org.assertj.core.api.AbstractObjectAssert",
     "org.assertj.core.internal.bytebuddy.matcher.MethodOverrideMatcher",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Thrown",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultCall$Binder$DefaultMethodLocator$Explicit",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature",
     "org.assertj.core.error.ShouldBeEqualIgnoringNanos",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForField",
     "org.assertj.core.api.AssertionsForInterfaceTypes",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$TypeSubstituting",
     "org.assertj.core.api.AbstractSoftAssertions",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedSuperClass",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$TypeStrategy$Default$3",
     "org.assertj.core.error.ShouldHaveFields",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeInitializer$Drain$Default",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForAnnotationValue",
     "org.assertj.core.internal.bytebuddy.dynamic.NexusAccessor$Dispatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForFixedSize",
     "org.assertj.core.internal.bytebuddy.matcher.ClassLoaderHierarchyMatcher",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher",
     "org.assertj.core.api.AbstractInputStreamAssert",
     "org.assertj.core.error.ShouldBeAnnotation",
     "org.assertj.core.error.ShouldNotContainPattern",
     "org.assertj.core.error.ElementsShouldBeAtMost",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$Resolution",
     "org.assertj.core.internal.bytebuddy.pool.TypePool",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$CodeTranslationVisitor",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.TypeCreation",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$ForArgument",
     "org.assertj.core.internal.InputStreams",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$NativeMethodStrategy$ForPrefix",
     "org.assertj.core.internal.bytebuddy.utility.StreamDrainer",
     "org.assertj.core.internal.bytebuddy.matcher.AccessibilityMatcher",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationValue",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Compiled",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation$OfGenericMethod",
     "org.assertj.core.error.future.ShouldNotBeDone",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$AccessorProxy",
     "org.assertj.core.internal.bytebuddy.description.modifier.FieldPersistence",
     "org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Target$1",
     "org.assertj.core.internal.bytebuddy.dynamic.VisibilityBridgeStrategy$Default",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Target$2",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TrivialType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Compiled$Entry",
     "org.assertj.core.internal.bytebuddy.asm.MemberAttributeExtension$ForMethod$AttributeAppendingMethodVisitor",
     "org.assertj.core.api.StringAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.MultipleParentClassLoader",
     "org.assertj.core.api.AbstractIteratorAssert",
     "org.assertj.core.error.ShouldHaveCauseInstance",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingTypeList",
     "org.assertj.core.internal.bytebuddy.asm.Advice$This",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.TypeAttributeAppender$Explicit",
     "org.assertj.core.api.BigDecimalAssert",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$NoOp",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$FieldNameExtractor$ForFixedValue",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForConstructingInvocation$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$1",
     "org.assertj.core.internal.BinaryDiff",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Initializable$Unavailable",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Factory",
     "org.assertj.core.internal.TypeComparators",
     "org.assertj.core.error.ElementsShouldHaveAtMost",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$1",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$Factory",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForNonImplementedMethod",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$ForLoadedType",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$Compound",
     "org.assertj.core.util.AbstractComparableNumberComparator",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.ClassConstant",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super$1",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForThisInstance",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Addition",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TerminationHandler$FieldSetting$Implicit",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Unresolved",
     "org.assertj.core.error.ShouldNotBeEqualWithinOffset",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationSource",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder$DelegationMethod",
     "org.assertj.core.api.AbstractAtomicFieldUpdaterAssert",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$ForJava8CapableVm",
     "org.assertj.core.api.WithAssumptions",
     "org.assertj.core.api.AbstractLongAssert",
     "org.assertj.core.internal.bytebuddy.description.method.MethodList$TypeSubstituting",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Entry$Resolved",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithDrain$WithoutActiveRecord",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$InstanceFieldConstructor$Appender",
     "org.assertj.core.error.ShouldBeSymbolicLink",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription$Latent",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$Factory",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription$Loaded",
     "org.assertj.core.error.ShouldNotBe",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$WithTypePoolCache$Simple",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForLocalValue$Factory",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$PoolStrategy",
     "org.assertj.core.error.future.ShouldBeCompletedExceptionally",
     "org.assertj.core.util.xml.XmlStringPrettyFormatter",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.ClassWriterStrategy$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForField$Tokenized",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RawMatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher$Creator",
     "org.assertj.core.internal.bytebuddy.matcher.ArrayTypeMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Duplication$4",
     "org.assertj.core.internal.bytebuddy.description.NamedElement",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Duplication$3",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationList",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Duplication$2",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Duplication$1",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$TerminationHandler",
     "org.assertj.core.error.ShouldHaveSizeLessThanOrEqualTo",
     "org.assertj.core.error.future.ShouldBeDone",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled",
     "org.assertj.core.internal.bytebuddy.ByteBuddy",
     "org.assertj.core.internal.bytebuddy.asm.TypeReferenceAdjustment$TypeReferenceClassVisitor$TypeReferenceMethodVisitor",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Listener$ForErrorHandler",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$UsingUnsafeOverride$ForJava7CapableVm",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$Resolution",
     "org.assertj.core.internal.bytebuddy.implementation.SuperMethodCall$Appender$TerminationHandler",
     "org.assertj.core.error.ShouldHaveNoFields",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Direct$ForJava7CapableVm",
     "org.assertj.core.internal.bytebuddy.implementation.ExceptionMethod",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex",
     "org.assertj.core.data.TemporalUnitLessThanOffset",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldRegistry",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PersistenceHandler",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Resolution$Unresolved",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodLocator$ForElementMatcher",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription",
     "org.assertj.core.error.ShouldHaveNoSuppressedExceptions",
     "org.assertj.core.error.ShouldNotBeBlank",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForAttachment",
     "org.assertj.core.util.DoubleComparator",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForGenericArray",
     "org.assertj.core.internal.ErrorMessages",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Listener$WithTransformationsOnly",
     "org.assertj.core.util.introspection.MethodSupport",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForMatchedGrouping",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Default$Dispatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForVisibilityBridge",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Resolution$Illegal",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodEnter$WithDiscardedEnterType",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$NativeMethodStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultMethod",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant",
     "org.assertj.core.presentation.BinaryRepresentation",
     "org.assertj.core.error.ShouldNotBeSame",
     "org.assertj.core.api.AbstractPredicateLikeAssert",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$SpecialMethodInvocation$AbstractBase",
     "org.assertj.core.internal.bytebuddy.ByteBuddy$EnumerationImplementation$InitializationAppender",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldValue$Binder$Delegate",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$MethodCall",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.ReferenceTypeAwareAssigner",
     "org.assertj.core.internal.bytebuddy.utility.visitor.MetadataAwareClassVisitor",
     "org.assertj.core.internal.Integers",
     "org.assertj.core.error.ShouldBeUpperCase",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForThrowable",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$ClassLoading",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$ForLoadedTypes$OfTypeVariables",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$Compound",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Prepared",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.IgnoreForBinding",
     "org.assertj.core.error.ShouldNotContainAtIndex",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$Resolution$Unresolved",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$Dynamic",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$AbstractBase",
     "org.assertj.core.internal.bytebuddy.asm.TypeConstantAdjustment",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$Expanding",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForCharacterConstant",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Trivial",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForConstruction",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$ChildFirst$PrependingEnumeration",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$1",
     "org.assertj.core.api.AbstractLocalDateTimeAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Valuable",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$1",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Sort$2",
     "org.assertj.core.configuration.Configuration",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$ForAdvice$Default$ForMethodExit",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$TypeSubstituting",
     "org.assertj.core.error.ShouldBeDirectory",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Sort$1",
     "org.assertj.core.error.ShouldBeInThePast",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodParameter",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$TypeExtractor$AnnotationExtractor$AnnotationLookup",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$CacheProvider$Simple",
     "org.assertj.core.api.BooleanAssert",
     "org.assertj.core.error.future.ShouldNotBeCompletedExceptionally",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher$AbstractFieldInstruction",
     "org.assertj.core.error.ShouldContainSubsequenceOfCharSequence",
     "org.assertj.core.internal.BigIntegers",
     "org.assertj.core.internal.FloatArrays",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$ForLoadedFieldType",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$AbstractBase",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyNonGenericReceiverType",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.BindingPriority$Resolver",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved$Simple",
     "org.assertj.core.internal.bytebuddy.utility.privilege.GetSystemPropertyAction",
     "org.assertj.core.error.ShouldHavePropertyOrFieldWithValue",
     "org.assertj.core.internal.bytebuddy.description.modifier.ModifierContributor$ForParameter",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation$Invocation",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$9",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$8",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$7",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Resolved$AbstractBase",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$ArrayProjection",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$2",
     "org.assertj.core.internal.bytebuddy.matcher.ElementMatcher$Junction",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedReturnType",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$ForMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$ForSetter",
     "org.assertj.core.error.NoElementsShouldMatch",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$6",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard$LazyLowerBoundWildcard",
     "org.assertj.core.error.ShouldContainSequence",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$5",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$CacheValueField",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$StaticFieldConstructor",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$4",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType$3",
     "org.assertj.core.annotations.Nullable",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$1",
     "org.assertj.core.api.AbstractByteArrayAssert",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender$1",
     "org.assertj.core.internal.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver$ForUnnamedType",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$InnerTypeDefinitionForTypeAdapter",
     "org.assertj.core.internal.bytebuddy.matcher.FilterableList$Empty",
     "org.assertj.core.internal.bytebuddy.utility.JavaModule$Dispatcher$Disabled",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionListenable$WithImplicitDiscoveryStrategy",
     "org.assertj.core.internal.bytebuddy.matcher.HasSuperTypeMatcher",
     "org.assertj.core.error.ShouldBeInTheFuture",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$OfMethodParameter",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$Resolution$Illegal",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher$ForJava8CapableVm",
     "org.assertj.core.api.ObjectEnumerableAssert",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$Empty",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Empty",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$ReaderMode",
     "org.assertj.core.error.ShouldNotContainNull",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Transformer$ForBuildPlugin",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$PoolStrategy$Eager",
     "org.assertj.core.internal.bytebuddy.implementation.LoadedTypeInitializer$ForStaticField",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.DoubleConstant",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForLowerBound",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.StackManipulation$Illegal",
     "org.assertj.core.internal.bytebuddy.description.modifier.MethodStrictness",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Node$Simple",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Record",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Dispatcher",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$WithPreservedArguments$UsingArgumentCopy",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$ForContextualInvocation$Factory",
     "org.assertj.core.error.ShouldBeInSameDay",
     "org.assertj.core.api.AbstractDateAssert$1",
     "org.assertj.core.error.ShouldExist",
     "org.assertj.core.error.BasicErrorMessageFactory$UnquotedString",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate",
     "org.assertj.core.error.ShouldContainCharSequenceOnlyOnce",
     "org.assertj.core.api.IntArrayAssert",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods",
     "org.assertj.core.api.Descriptable",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Multiplication",
     "org.assertj.core.api.LongArrayAssert",
     "org.assertj.core.internal.ObjectArrays",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TerminationHandler$FieldSetting$Explicit",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$TypePoolResolver$OfImplicitPool",
     "org.assertj.core.util.diff.DeleteDelta",
     "org.assertj.core.error.ShouldBeEqualIgnoringWhitespace",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.StubValue$Binder",
     "org.assertj.core.error.ShouldHaveAnnotations",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionListenable$WithoutBatchStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.SuperMethod",
     "org.assertj.core.internal.bytebuddy.agent.builder.ResettableClassFileTransformer",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$ForSuperMethodByConstructor",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFixedValue$OfConstant",
     "org.assertj.core.internal.Throwables",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$FieldResolver$ForElementMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ExceptionHandler$Default$1",
     "org.assertj.core.internal.bytebuddy.TypeCache$StorageKey",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ExceptionHandler$Default$2",
     "org.assertj.core.error.ShouldBeEqualWithinOffset",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$Explicit$ForTypes",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$ForLoadedAnnotation",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$Builder",
     "org.assertj.core.error.ShouldHaveSizeLessThan",
     "org.assertj.core.api.AtomicReferenceArrayAssert",
     "org.assertj.core.internal.bytebuddy.implementation.MethodAccessorFactory",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.AuxiliaryType$NamingStrategy$SuffixingRandom",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining",
     "org.assertj.core.error.ElementsShouldNotBe",
     "org.assertj.core.internal.bytebuddy.implementation.bind.ArgumentTypeResolver",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Origin$Binder",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.ClassWriterStrategy$Default",
     "org.assertj.core.internal.bytebuddy.matcher.HasSuperClassMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Disabled",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.FieldConstant",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Eager",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$AlternativeMetaFactoryRedirection",
     "org.assertj.core.internal.bytebuddy.TypeCache$WithInlineExpunction",
     "org.assertj.core.api.recursive.comparison.FieldComparators",
     "org.assertj.core.internal.bytebuddy.description.modifier.ModifierContributor$ForMethod",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameter$Factory",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ParameterTypeRegistrant",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$ClassLoading",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$Chain$Step$Simple",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodCall$Resolved",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForField$ReadWrite",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.InvocationHandlerAdapter$ForField$Appender",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter$TerminationHandler$2",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter$TerminationHandler$1",
     "org.assertj.core.error.ShouldBeEqualIgnoringNewLineDifferences",
     "org.assertj.core.api.ThrowableTypeAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForJavaConstant",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$StaticFieldConstructor",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldValue",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Simple",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForField$Location$ForImplicitField",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$OriginTypeResolver$1",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$OriginTypeResolver$2",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyTypeList",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall",
     "org.assertj.core.error.ShouldStartWithPath",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter$ForMethodExit",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InstallationListener$Compound",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedMethod$RebasedMethod",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod",
     "org.assertj.core.internal.bytebuddy.ByteBuddy$EnumerationImplementation$ValuesMethodAppender",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$WithPreservedArguments",
     "org.assertj.core.error.ShouldSatisfy",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Simple",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$NoOp",
     "org.assertj.core.api.AbstractOffsetTimeAssert",
     "org.assertj.core.api.DoubleAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation$Appender",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$Explicit",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$Frozen",
     "org.assertj.core.error.OptionalDoubleShouldHaveValueCloseToPercentage",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$Object",
     "org.assertj.core.error.ShouldBeGreater",
     "org.assertj.core.internal.bytebuddy.description.TypeVariableSource",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$ParameterBag",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithResolvedErasure",
     "org.assertj.core.error.ShouldHaveSameSizeAs",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$1",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$2",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$3",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.Assigner$Refusing",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$4",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$Default$5",
     "org.assertj.core.internal.bytebuddy.jar.asm.ModuleVisitor",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$CacheProvider",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$NullValueGuard",
     "org.assertj.core.internal.bytebuddy.build.EntryPoint$Default",
     "org.assertj.core.internal.bytebuddy.jar.asm.commons.SignatureRemapper",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OnNonDefaultValue",
     "org.assertj.core.error.ShouldBeNormalized",
     "org.assertj.core.internal.Files",
     "org.assertj.core.error.future.Warning",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForPackageType",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Dispatcher$ForJava6CapableVm",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.Assigner$EqualTypesOnly$2",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.Assigner$EqualTypesOnly$1",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading$UnlockingClassLoadingDelegate",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation$HandleInvocation",
     "org.assertj.core.internal.bytebuddy.asm.Advice$MethodSizeHandler$Default",
     "org.assertj.core.internal.bytebuddy.description.ModifierReviewable$OfEnumeration",
     "org.assertj.core.internal.bytebuddy.implementation.LoadedTypeInitializer$Compound",
     "org.assertj.core.internal.bytebuddy.implementation.DefaultMethodCall$Appender",
     "org.assertj.core.internal.bytebuddy.jar.asm.ModuleWriter",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$MethodVisitorWrapper",
     "org.assertj.core.internal.bytebuddy.asm.TypeConstantAdjustment$TypeConstantDissolvingClassVisitor$TypeConstantDissolvingMethodVisitor",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Dispatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$ForExactType",
     "org.assertj.core.error.ShouldBeLess",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Listener$StreamWriting",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Direct",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$Dispatcher$ForJava6CapableVm",
     "org.assertj.core.error.ShouldBeAbstract",
     "org.assertj.core.internal.RecursiveFieldByFieldComparator",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$NullValueGuard$UsingJump$AfterInstruction",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Identified",
     "org.assertj.core.internal.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice$WithoutExceptionHandling",
     "org.assertj.core.internal.bytebuddy.asm.MemberAttributeExtension$1",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$TypePropertyComparator$1",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$TypePropertyComparator$2",
     "org.assertj.core.error.uri.ShouldHavePath",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$TypePropertyComparator$3",
     "org.assertj.core.internal.bytebuddy.jar.asm.commons.AnnotationRemapper",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$TypePropertyComparator$4",
     "org.assertj.core.internal.Failures",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnType",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution$Illegal",
     "org.assertj.core.error.ShouldNotMatch",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$WithImplicitArguments",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodHandle$HandleType",
     "org.assertj.core.internal.bytebuddy.dynamic.NexusAccessor$Dispatcher$Unavailable",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$PoolStrategy$Default",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transforming",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$ExtractableView$AbstractBase",
     "org.assertj.core.error.ShouldNotContain",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$OfLoadedInterfaceTypes$TypeProjection",
     "org.assertj.core.api.ByteArrayAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy",
     "org.assertj.core.util.BigDecimalComparator",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription",
     "org.assertj.core.error.ShouldHaveDateField",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.AuxiliaryType",
     "org.assertj.core.internal.bytebuddy.jar.asm.MethodWriter",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterable",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$AbstractBase",
     "org.assertj.core.internal.bytebuddy.description.modifier.ParameterManifestation",
     "org.assertj.core.error.MessageFormatter",
     "org.assertj.core.api.JUnitSoftAssertions",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes$OfTypeVariables$AttachedTypeVariable",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter$OfParameterValue",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Target$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TerminationHandler$Simple",
     "org.assertj.core.api.AbstractMapAssert",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$Appender",
     "org.assertj.core.api.Fail",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$WithPreservedArguments$RequiringConsistentShape",
     "org.assertj.core.error.OptionalShouldBeEmpty",
     "org.assertj.core.internal.Conditions",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default",
     "org.assertj.core.internal.bytebuddy.utility.JavaModule$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Compound",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Listener$WithErrorsOnly",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved",
     "org.assertj.core.internal.bytebuddy.asm.MemberRemoval$MemberRemovingClassVisitor",
     "org.assertj.core.error.ShouldContainOnly",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Argument",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.Assigner$1",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Delegator",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForInterceptedMethod",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeRegistrant$RejectingSignatureVisitor",
     "org.assertj.core.api.GenericComparableAssert",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$ForExactType$Factory",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForField$Resolved",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$ForErasure",
     "org.assertj.core.internal.InputStreamsException",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFieldBinding",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$InstanceFieldConstructor",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InstallationListener$NoOp",
     "org.assertj.core.error.ShouldBeInSameMonth",
     "org.assertj.core.api.AbstractIntArrayAssert",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Default",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$WrappingArgumentProvider",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$BootstrapInjection",
     "org.assertj.core.error.ShouldNotBeEqual",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.FloatConstant$ConstantPool",
     "org.assertj.core.error.ShouldBeOfClassIn",
     "org.assertj.core.error.ShouldHaveNext",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$RenderingDispatcher$1",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$FieldGetter",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationList$ForLoadedAnnotations",
     "org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher$1",
     "org.assertj.core.api.OptionalDoubleAssert",
     "org.assertj.core.internal.bytebuddy.matcher.InheritedAnnotationMatcher",
     "org.assertj.core.api.FactoryBasedNavigableIterableAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$ConstructorCall",
     "org.assertj.core.internal.bytebuddy.build.BuildLogger$StreamWriting",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$ForAdvice$Default",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$CodeTranslationVisitor$ForMethodEnter",
     "org.assertj.core.internal.bytebuddy.jar.asm.ConstantDynamic",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable$AbstractBase",
     "org.assertj.core.internal.bytebuddy.utility.privilege.SetAccessibleAction",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$ForField",
     "org.assertj.core.error.future.ShouldBeCancelled",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper",
     "org.assertj.core.api.AbstractIntegerAssert",
     "org.assertj.core.error.ShouldContainSubsequence",
     "org.assertj.core.error.ShouldNotAccept",
     "org.assertj.core.error.DescriptionFormatter",
     "org.assertj.core.error.ShouldHaveName",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$AmbiguityResolver$Compound",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.BindingPriority",
     "org.assertj.core.description.Description",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Compound",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultMethod$Binder",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$OfConstructorExceptionTypes",
     "org.assertj.core.api.ArraySortedAssert",
     "org.assertj.core.error.uri.ShouldHaveProtocol",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$InstanceFieldConstructor$Appender",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForUnusedValue",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFixedValue",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$1",
     "org.assertj.core.internal.bytebuddy.asm.Advice$NoExceptionHandler",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForDoubleConstant",
     "org.assertj.core.internal.bytebuddy.jar.asm.AnnotationVisitor",
     "org.assertj.core.internal.bytebuddy.utility.visitor.LocalVariableAwareMethodVisitor",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store$Graph",
     "org.assertj.core.internal.bytebuddy.asm.Advice$WithCustomMapping",
     "org.assertj.core.error.ShouldBeRegularFile",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForLoadedType$ParameterArgumentTypeList",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter$AnnotationAdapter",
     "org.assertj.core.util.NullSafeComparator",
     "org.assertj.core.error.uri.ShouldHaveParameter",
     "org.assertj.core.internal.bytebuddy.description.ModifierReviewable$OfByteCodeElement",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterList",
     "org.assertj.core.internal.ExtendedByTypesComparator$1",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$WithUnknownConstant",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForEnumerationValue",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Default",
     "org.assertj.core.internal.bytebuddy.asm.Advice$MethodSizeHandler$NoOp",
     "org.assertj.core.error.ClassModifierShouldBe",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.StackSize$1",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Node$Unresolved",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Transformer$NoOp",
     "org.assertj.core.internal.bytebuddy.build.ToStringPlugin$Enhance$Prefix",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveWideningDelegate",
     "org.assertj.core.error.ShouldBeReadable",
     "org.assertj.core.api.AbstractZonedDateTimeAssert",
     "org.assertj.core.error.ShouldHaveSameHashCode",
     "org.assertj.core.internal.IgnoringFieldsComparator",
     "org.assertj.core.internal.bytebuddy.matcher.NullMatcher",
     "org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher$Sort",
     "org.assertj.core.util.diff.DeltaComparator",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$char",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Detached",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForGenerifiedErasure",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$NoOp",
     "org.assertj.core.error.ShouldHaveMethods",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$ForContextualInvocation",
     "org.assertj.core.annotations.NonNull",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.IntegerConstant$TwoBytePush",
     "org.assertj.core.internal.bytebuddy.jar.asm.signature.SignatureReader",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InstallationListener$StreamWriting",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Return",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess$OffsetLoading",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForReturnValue$Factory",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForField",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.FieldAttributeAppender$ForInstrumentedField",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Composable",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod$Token",
     "org.assertj.core.internal.bytebuddy.ClassFileVersion$VersionExtractor",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$ForInstrumentedMethod$Default$Copying",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$ForVirtualInvocation",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$TypeVariableDefinition$AbstractBase",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$ForSignatureVisitor",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$Resolution",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod",
     "org.assertj.core.api.DateAssert",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$Instantiator$Resolved",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$ForVirtualInvocation$Factory",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$ForLoadedConstructor",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList",
     "org.assertj.core.internal.bytebuddy.NamingStrategy$SuffixingRandom",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationSource$Explicit",
     "org.assertj.core.internal.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription$SignatureToken",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedConstructor$RebasedConstructor",
     "org.assertj.core.error.ZippedElementsShouldSatisfy$ZipSatisfyError",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver$Simple",
     "org.assertj.core.internal.Diff",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$Resolution$Explicit",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate$UnboxingResponsible",
     "org.assertj.core.internal.bytebuddy.NamingStrategy$PrefixingRandom",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$1",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$2",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$7",
     "org.assertj.core.internal.bytebuddy.agent.builder.ResettableClassFileTransformer$WithDelegation",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$8",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$9",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$3",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$4",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$5",
     "org.assertj.core.error.BasicErrorMessageFactory$1",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$ValueComparator$6",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForConstantValue",
     "org.assertj.core.api.WritableAssertionInfo",
     "org.assertj.core.condition.AnyOf",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Matchable",
     "org.assertj.core.error.ShouldBeEqualNormalizingWhitespace",
     "org.assertj.core.error.ShouldHaveMessageMatchingRegex",
     "org.assertj.core.internal.bytebuddy.jar.asm.commons.ModuleRemapper",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$Appender",
     "org.assertj.core.api.AbstractListAssert",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodType$Dispatcher",
     "org.assertj.core.internal.bytebuddy.matcher.MethodParametersMatcher",
     "org.assertj.core.error.uri.ShouldHaveQuery",
     "org.assertj.core.api.ProxyableObjectAssert",
     "org.assertj.core.error.ShouldBeSame",
     "org.assertj.core.internal.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$Appender",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment$WithinType",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$LazyFacade$LazyTypeDescription",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter$OfDefaultValue",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy",
     "org.assertj.core.internal.bytebuddy.utility.RandomString",
     "org.assertj.core.api.AtomicLongAssert",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$TypeCompatibilityCheck$1",
     "org.assertj.core.internal.bytebuddy.implementation.SuperMethodCall",
     "org.assertj.core.internal.bytebuddy.dynamic.TypeResolutionStrategy$Active$Resolved",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$TypeCompatibilityCheck$2",
     "org.assertj.core.api.ErrorCollector$LastResult",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForResolvableTypes",
     "org.assertj.core.error.ShouldHaveRootCauseInstance",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForLongConstant",
     "org.assertj.core.error.ShouldBeEqualByComparingFieldByFieldRecursively",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing",
     "org.assertj.core.internal.Longs",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$Latent",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.FieldAttributeAppender$Factory",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Builder$OfTypeVariable",
     "org.assertj.core.api.BDDAssertions",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate$ImplicitlyTypedUnboxingResponsible",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter$OfConstantValue",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForEnterValue$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.AuxiliaryType$SignatureRelevant",
     "org.assertj.core.internal.bytebuddy.jar.asm.AnnotationWriter",
     "org.assertj.core.internal.bytebuddy.description.NamedElement$WithRuntimeName",
     "org.assertj.core.internal.bytebuddy.matcher.DeclaringMethodMatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph",
     "org.assertj.core.internal.bytebuddy.NamingStrategy$AbstractBase",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedFieldType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$WithAnnotationDefaultValue",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler",
     "org.assertj.core.api.ErrorCollector",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$ValueMatcher",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes$OfTypeVariables",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription$InDefinedShape",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding$Builder$Build",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$LazyFacade",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForDefaultValue$ReadOnly",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$NullValueGuard$UsingJump",
     "org.assertj.core.internal.bytebuddy.asm.Advice$MethodSizeHandler$ForAdvice",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForField$Factory",
     "org.assertj.core.error.ShouldBeToday",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator$ForInstrumentedType",
     "org.assertj.core.api.RecursiveComparisonAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Listener$NoOp",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.StackSize",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$TypePropertyComparator",
     "org.assertj.core.api.AbstractTemporalAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.SerializedConstant",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$ForTopLevelType",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithEagerNavigation$OfAnnotatedElement",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reifying$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reifying$2",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodLocator",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing$SlicingIterable$SlicingIterator",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$FieldNameExtractor$ForBeanProperty",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$FallbackStrategy$Simple",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target$Resolved",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$SuperTypeLoading$ClassLoadingDelegate$Simple",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$Chain$Step$Resolution",
     "org.assertj.core.error.ShouldNotBeEqualIgnoringWhitespace",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate$ExplicitlyTypedUnboxingResponsible",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator",
     "org.assertj.core.error.ShouldBeInSameSecond",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$Element$ForFile",
     "org.assertj.core.internal.bytebuddy.build.Plugin$NoOp",
     "org.assertj.core.internal.bytebuddy.description.modifier.ModifierContributor$ForField",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$FieldCacheEntry",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$TypeExtractor$AnnotationExtractor$ArrayLookup",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeRegistrant",
     "org.assertj.core.error.ShouldHavePropertyOrField",
     "org.assertj.core.error.uri.ShouldHaveHost",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$ForAdvice$Default$ForMethodEnter",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Unresolved",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$ForType",
     "org.assertj.core.api.AutoCloseableBDDSoftAssertions",
     "org.assertj.core.internal.bytebuddy.asm.Advice$1",
     "org.assertj.core.api.AbstractBooleanArrayAssert",
     "org.assertj.core.internal.bytebuddy.implementation.InvocationHandlerAdapter$AssignerConfigurable",
     "org.assertj.core.error.ShouldBeInSameHourWindow",
     "org.assertj.core.internal.bytebuddy.description.modifier.ModifierContributor$Resolver",
     "org.assertj.core.internal.bytebuddy.implementation.InvocationHandlerAdapter",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$TypeStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Disabled$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForConstructingInvocation",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$MethodCall$Appender",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$Processor",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Factory$AdviceType",
     "org.assertj.core.internal.bytebuddy.ByteBuddy$EnumerationImplementation",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Trivial",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ClassDumpAction$Dispatcher$Enabled",
     "org.assertj.core.internal.bytebuddy.asm.MemberAttributeExtension$ForMethod",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Lazy",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Argument",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodCall",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.RuntimeType",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.VoidAwareAssigner",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Compound$Composable",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForField$WithLookup",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.FieldAttributeAppender$Compound",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$ForSuperMethodByReflectionFactory",
     "org.assertj.core.internal.bytebuddy.jar.asm.commons.MethodRemapper",
     "org.assertj.core.internal.bytebuddy.matcher.ElementMatcher$Junction$Disjunction",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$NoOp",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$PrependableIterator",
     "org.assertj.core.internal.bytebuddy.description.enumeration.EnumerationDescription$ForLoadedEnumeration",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$ForSignatureVisitor$OfTypeArgument",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$RenderingDispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess$AccessDispatcher$FieldPutInstruction",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveTypeAwareAssigner",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyPackageDescription",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$Resolution$Resolved",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$1",
     "org.assertj.core.api.AbstractShortArrayAssert",
     "org.assertj.core.internal.DeepDifference$Difference",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool",
     "org.assertj.core.internal.bytebuddy.matcher.ElementMatcher$Junction$AbstractBase",
     "org.assertj.core.api.AbstractBigDecimalAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating$2",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Creating",
     "org.assertj.core.internal.bytebuddy.jar.asm.FieldWriter",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$Latent$Loadable",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForClassLoader$BootLoaderProxyCreationAction",
     "org.assertj.core.util.Objects",
     "org.assertj.core.internal.bytebuddy.ClassFileVersion$VersionLocator$CreationAction",
     "org.assertj.core.internal.bytebuddy.asm.TypeReferenceAdjustment$TypeReferenceClassVisitor$TypeReferenceFieldVisitor",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection",
     "org.assertj.core.internal.Objects$ByFieldsComparison",
     "org.assertj.core.internal.bytebuddy.matcher.NegatingMatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy",
     "org.assertj.core.error.ShouldNotHave",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$Relocation",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved",
     "org.assertj.core.internal.bytebuddy.implementation.InvocationHandlerAdapter$ForInstance$Appender",
     "org.assertj.core.internal.bytebuddy.description.modifier.ModifierContributor",
     "org.assertj.core.internal.bytebuddy.jar.asm.Constants",
     "org.assertj.core.util.FloatComparator",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Unused",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Target",
     "org.assertj.core.api.ProxyableListAssert",
     "org.assertj.core.internal.bytebuddy.asm.Advice$AdviceVisitor",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTokenNormalization",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod$Tokenized",
     "org.assertj.core.error.ShouldBeEqualIgnoringSeconds",
     "org.assertj.core.error.ShouldHaveCauseExactlyInstance",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TerminationHandler$Simple$2",
     "org.assertj.core.api.AbstractOptionalDoubleAssert",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TerminationHandler$Simple$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader",
     "org.assertj.core.internal.bytebuddy.TypeCache$Sort$1",
     "org.assertj.core.internal.bytebuddy.TypeCache$Sort$2",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.DefaultValue",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Linked$Delegation",
     "org.assertj.core.util.diff.myers.MyersDiff",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodReturn",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Builder",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner$IsAssignableToVisitor$OfParameterizedType",
     "org.assertj.core.internal.bytebuddy.jar.asm.commons.Remapper",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher",
     "org.assertj.core.internal.bytebuddy.asm.Advice$MethodSizeHandler$Default$ForAdvice",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$LookupKey",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$ForBuildEntryPoint",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TerminationHandler",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$ForAdvice",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory$ForJava9CapableVm",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$Chain$Step$Factory",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher$ForJava8CapableVm",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClass",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TerminationHandler$Simple$3",
     "org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher$Sort$5",
     "org.assertj.core.util.diff.myers.DiffNode",
     "org.assertj.core.api.ComparableAssert",
     "org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher$Sort$3",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForSelfOrStaticInvocation$Resolved",
     "org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher$Sort$4",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Local",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy$MethodCall",
     "org.assertj.core.api.IteratorAssert",
     "org.assertj.core.api.AbstractCharSequenceAssert",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationList$Empty",
     "org.assertj.core.error.uri.ShouldHaveUserInfo",
     "org.assertj.core.internal.NioFilesWrapper",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$Latent",
     "org.assertj.core.internal.bytebuddy.dynamic.VisibilityBridgeStrategy$1",
     "org.assertj.core.internal.bytebuddy.matcher.SuperTypeMatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer$Prefixing",
     "org.assertj.core.api.CharSequenceAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Merger",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.FieldAttributeAppender",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reifying",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$FieldLocation",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.FieldAttributeAppender$Explicit",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodType$Dispatcher$CreationAction",
     "org.assertj.core.api.AbstractLocalTimeAssert",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray$Loaded",
     "org.assertj.core.internal.bytebuddy.jar.asm.Context",
     "org.assertj.core.api.AtomicReferenceAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$ForClassHierarchy",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$Factory",
     "org.assertj.core.api.AbstractFileAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget$OriginTypeResolver",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Resolved$ForMethodExit",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner$IsAssignableToVisitor$OfNonGenericType",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$Valuable",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$ForThisValue",
     "org.assertj.core.error.ShouldNotBeEqualWithinPercentage",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForThisReference$Factory",
     "org.assertj.core.api.Condition",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$Simple",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant$CachedConstructor",
     "org.assertj.core.error.ShouldAccept",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForField",
     "org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher$Sort$1",
     "org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher$Sort$2",
     "org.assertj.core.internal.bytebuddy.matcher.CollectionOneToOneMatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy$CreationAction",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy$MethodCall$Appender",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Explicit",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$Element",
     "org.assertj.core.internal.bytebuddy.matcher.CollectionElementMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$TransformerDecorator",
     "org.assertj.core.error.ShouldBeNullOrEmpty",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationList$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForField$ArgumentProvider",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$SingletonEnumeration",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$Loaded$AbstractBase",
     "org.assertj.core.api.IterableSizeAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Listener$Filtering",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList",
     "org.assertj.core.internal.bytebuddy.agent.builder.ResettableClassFileTransformer$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner$IsAssignableToVisitor$OfManifestType",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$ForLoadedSuperClass",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Default$Unloaded",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher",
     "org.assertj.core.error.ShouldNotBeEmpty",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfConstructor",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$ForAnnotationProperty$Bound",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$Appender",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Compound",
     "org.assertj.core.error.ShouldNotBeIn",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$1",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$2",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$3",
     "org.assertj.core.condition.Join",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$4",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$5",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$6",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$7",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$8",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant$PropertyDelegate$ForArrayType$9",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy",
     "org.assertj.core.internal.bytebuddy.jar.asm.ByteVector",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForMethodReturn",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Resolution$Simple",
     "org.assertj.core.internal.bytebuddy.utility.JavaModule",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$TypeStrategy$ForEntryPoint",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$Element$ForJarEntry",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender$Target$OnField",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder$RedirectionProxy$MethodCall$Appender",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$NullValueGuard$UsingJump$BeforeInstruction",
     "org.assertj.core.util.Files",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.CollectionFactory",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithExceptionHandler",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$ForJava7CapableVm",
     "org.assertj.core.internal.bytebuddy.ClassFileVersion$VersionLocator",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget",
     "org.assertj.core.api.CharacterAssert",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$ForLoadedType",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArray",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$ForAdvice",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.IntegerConstant$ConstantPool",
     "org.assertj.core.internal.bytebuddy.description.method.MethodList$Explicit",
     "org.assertj.core.internal.bytebuddy.matcher.MethodParameterTypesMatcher",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable",
     "org.assertj.core.internal.bytebuddy.description.ByteCodeElement",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$ForDefaultMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.Assigner",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodEnter",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$4",
     "org.assertj.core.annotations.NonNullApi",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$5",
     "org.assertj.core.api.ShortAssert",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$1",
     "org.assertj.core.error.ShouldContainKeys",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$2",
     "org.assertj.core.internal.bytebuddy.matcher.ModifierMatcher$Mode",
     "org.assertj.core.error.ShouldOnlyHaveElementsOfTypes",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$ForValue$3",
     "org.assertj.core.internal.bytebuddy.utility.JavaType",
     "org.assertj.core.error.ShouldBeSubsetOf",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldResolver$Unresolved",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Yielding",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super$Instantiation",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.ClassConstant$ForReferenceType",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Matchable$AbstractBase",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$ResubmissionListener$ConcurrentHashSet",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForVariable$ReadWrite",
     "org.assertj.core.internal.bytebuddy.description.type.PackageDescription$ForLoadedPackage",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Listener$Adapter",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForMissingValue",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription$Loaded",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$WithImplicitType$OfInstance",
     "org.assertj.core.api.AbstractCharArrayAssert",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Disabled",
     "org.assertj.core.api.ListAssert$ListFromStream",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultCall$Binder",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray$ForLoadedType",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase",
     "org.assertj.core.matcher.AssertionMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation$HandleType",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inactive",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Default",
     "org.assertj.core.api.BigIntegerAssert",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$FieldSetting$Appender",
     "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher$ForFieldToken",
     "org.assertj.core.error.ShouldNotBeEqualNormalizingWhitespace",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.ByteCodeAppender",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$Configurable",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$Loaded",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.SuperMethod$Binder$DelegationMethod",
     "org.assertj.core.internal.bytebuddy.dynamic.VisibilityBridgeStrategy",
     "org.assertj.core.internal.Floats",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex",
     "org.assertj.core.error.ShouldHaveSizeGreaterThan",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Default$Loaded",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$OffsetProvider$ForFixedValue",
     "org.assertj.core.internal.BinaryDiffResult",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Inversion",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.SuperMethod$Binder",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$OfConstructorParameter",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForInstance",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$ValueConsumer",
     "org.assertj.core.internal.bytebuddy.description.enumeration.EnumerationDescription$AbstractBase",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$Chained",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$AbstractBase",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray$ReadWrite",
     "org.assertj.core.internal.bytebuddy.description.modifier.Ownership",
     "org.assertj.core.internal.bytebuddy.jar.asm.ClassReader",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$1",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.Assigner$EqualTypesOnly",
     "org.assertj.core.error.ElementsShouldNotHave",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$AbstractBase",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice$Entry",
     "org.assertj.core.api.Assert",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForUrl",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$MetaFactoryRedirection",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$ParameterAnnotationSource$ForLoadedMethod",
     "org.assertj.core.error.ShouldHaveParent",
     "org.assertj.core.error.ShouldNotExist",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$ForLoadedReturnType",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForValue$Factory",
     "org.assertj.core.internal.Shorts",
     "org.assertj.core.util.introspection.PropertySupport",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess$Defined",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$UnresolvedTypeVariable",
     "org.assertj.core.util.diff.Chunk",
     "org.assertj.core.error.ShouldHave",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Compound$CompoundIterable$CompoundIterator",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$NullValueGuard",
     "org.assertj.core.util.URLs",
     "org.assertj.core.error.NoElementsShouldSatisfy",
     "org.assertj.core.error.ShouldContainOneOrMoreWhitespaces",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$ForJarFile",
     "org.assertj.core.api.MapSizeAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding$Illegal",
     "org.assertj.core.api.AtomicBooleanAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$Active",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ClassDumpAction$Dispatcher",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.matcher.DeclaringFieldMatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Initializable",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveBoxingDelegate",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.TextConstant",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$13",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$12",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$11",
     "org.assertj.core.internal.AtomicReferenceArrayElementComparisonStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer$10",
     "org.assertj.core.error.ShouldNotHaveAnyElementsOfTypes",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$PoolStrategy$WithTypePoolCache",
     "org.assertj.core.internal.bytebuddy.jar.asm.Handler",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$NoOp",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodLocator$ForElementMatcher$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.bind.DeclaringTypeResolver",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$Factory",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription$InGenericShape",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$ForLoadedType",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$Explicit",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray$ReadOnly",
     "org.assertj.core.internal.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver$ForFixedValue",
     "org.assertj.core.error.uri.ShouldHaveAuthority",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Default",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Duplication",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation$Compiled",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForField$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.AllArguments",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$Default$Target",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess$1",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithDecorationOnly$DecorationClassVisitor",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$SubstitutingMethodVisitor",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$SimpleParameterAnnotationAdapter",
     "org.assertj.core.internal.bytebuddy.description.ModifierReviewable",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldGetter",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator$ForFixedValue",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableExtractor",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForIncompatibleType$Loaded",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod",
     "org.assertj.core.util.diff.myers.Equalizer",
     "org.assertj.core.internal.bytebuddy.matcher.CachingMatcher",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$Adapter",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldValue$Binder",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Listener",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Disjunction",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$Simple",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Compound",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList",
     "org.assertj.core.error.ShouldBeIn",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedMethod",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$NoOp",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Failing$2",
     "org.assertj.core.error.ElementsShouldHave",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Failing$1",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForInstrumentedType",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver",
     "org.assertj.core.error.ShouldContainPattern",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithDecorationOnly",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant$CanCacheIllegal",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$ForAnnotationProperty",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper$2",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper$1",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Ignored",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$WithImplicitTarget",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Failing$3",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$PackageDiscriminating",
     "org.assertj.core.api.Java6Assertions",
     "org.assertj.core.error.ShouldBeAfterYear",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.ClassWriterStrategy$Default$2",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Dispatcher$InjectingInitializer",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.ClassWriterStrategy$Default$1",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$LazyFacade$LazyResolution",
     "org.assertj.core.error.future.ShouldBeCompleted",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithoutExceptionHandler",
     "org.assertj.core.api.ProxyableMapAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.DecoratingDynamicTypeBuilder",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForLocalValue",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$WithUnknownConstant$Loaded",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$NullValueGuard$UsingJump$BeforeInstruction",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant$CachedMethod",
     "org.assertj.core.api.AbstractDoubleAssert",
     "org.assertj.core.api.AbstractLocalDateAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$AbstractBase",
     "org.assertj.core.internal.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver$ForGivenType",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry$Default$Entry",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$Constraint$ForInterface",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$AssignerConfigurable",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$Factory$2",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.utility.visitor.StackAwareMethodVisitor",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$Factory$1",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper$4",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayCreator",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper$3",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OnDefaultValue",
     "org.assertj.core.api.ZonedDateTimeAssert",
     "org.assertj.core.data.TemporalOffset",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Delegator",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayStackManipulation",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ExceptionHandler",
     "org.assertj.core.internal.bytebuddy.description.ByteCodeElement$Token$TokenList",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$1",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForStringConstant",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound$DefaultArgument",
     "org.assertj.core.api.AtomicMarkableReferenceAssert",
     "org.assertj.core.api.FloatArrayAssert",
     "org.assertj.core.internal.Dates",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.MultipleParentClassLoader$Builder",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$SpecialMethodInvocation",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForMethodCall$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForIntegerConstant",
     "org.assertj.core.error.ShouldNotStartWith",
     "org.assertj.core.api.PathAssert",
     "org.assertj.core.description.EmptyTextDescription",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$Latent",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic$2",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic$1",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultCall$Binder$DefaultMethodLocator",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodInstanceAndParameters",
     "org.assertj.core.api.AbstractBigIntegerAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.IntegerConstant",
     "org.assertj.core.error.uri.ShouldHaveFragment",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameterArray$ForInstrumentedMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Resolved",
     "org.assertj.core.util.IterableUtil",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$SuperTypeLoading",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$ForAdvice",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AbstractBase",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeInitializer$Drain",
     "org.assertj.core.error.ShouldBeSubstring",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForIncompatibleType",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod$AttachmentVisitor",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForSelfOrStaticInvocation",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForField$Resolved$Factory",
     "org.assertj.core.internal.bytebuddy.build.BuildLogger$NoOp",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$int",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Empty$Binder",
     "org.assertj.core.annotations.Beta",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$ForOriginType$Appender",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForConstant",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName",
     "org.assertj.core.internal.bytebuddy.jar.asm.commons.SimpleRemapper",
     "org.assertj.core.error.ShouldHaveAllNullFields",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$ForLoadedType$WildcardLowerBoundTypeList",
     "org.assertj.core.error.ShouldContainOnlyNulls$ErrorType",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$TypeStrategy$Default",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase$Adapter",
     "org.assertj.core.internal.bytebuddy.TypeCache$SimpleKey",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$Factory$Default$1",
     "org.assertj.core.internal.bytebuddy.description.type.PackageDescription$Simple",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy$ConstructorCall$Appender",
     "org.assertj.core.error.ShouldNotContainAnyWhitespaces",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$InvariantBinding",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$AccessorMethodDelegation",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForStackManipulation",
     "org.assertj.core.internal.bytebuddy.matcher.DeclaringAnnotationMatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$Factory$Default$2",
     "org.assertj.core.internal.Urls",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$1",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$Dispatcher$CreationAction",
     "org.assertj.core.api.Java6AbstractStandardSoftAssertions",
     "org.assertj.core.internal.bytebuddy.asm.MemberAttributeExtension$ForField",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$OpenedClassRemapper",
     "org.assertj.core.api.Assumptions",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfType",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TypeContainment",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazySuperClass",
     "org.assertj.core.internal.bytebuddy.jar.asm.commons.ClassRemapper",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType$ForLoadedType",
     "org.assertj.core.internal.bytebuddy.matcher.FieldTypeMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$Dispatcher",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$ContextRegistry",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$AbstractMethodErrorThrow",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$AbstractBase",
     "org.assertj.core.internal.bytebuddy.matcher.SubTypeMatcher",
     "org.assertj.core.error.ShouldBeBlank",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription$AbstractBase",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription$TypeSubstituting",
     "org.assertj.core.internal.bytebuddy.description.modifier.SyntheticState",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForNonGenericType",
     "org.assertj.core.internal.bytebuddy.matcher.MethodReturnTypeMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.JavaConstantValue",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$Bound",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForModule$WeaklyReferenced",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$OfLegacyVmConstructor",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$NoOp",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Target$AbstractBase$DefaultMethodInvocation",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$ForClassLoader",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$ClassDefinitionAction",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant",
     "org.assertj.core.internal.bytebuddy.asm.Advice$MethodSizeHandler$Default$WithRetainedArguments",
     "org.assertj.core.internal.StandardComparisonStrategy",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeInitializer$Simple",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$CircularityLock$Global",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray",
     "org.assertj.core.util.VisibleForTesting",
     "org.assertj.core.util.CanIgnoreReturnValue",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$RetainedMethodTypeVariable",
     "org.assertj.core.error.ConstructorInvoker",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer",
     "org.assertj.core.error.ShouldNotHaveDuplicates",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldGetter$Appender",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Default$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.matcher.DeclaringTypeMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$ComponentTypeLocator$Illegal",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ArgumentProvider",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.asm.Advice$MethodSizeHandler",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Exit",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$AbstractBase$ArrayTypeResolution",
     "org.assertj.core.error.ShouldContainOnlyWhitespaces",
     "org.assertj.core.internal.bytebuddy.asm.Advice",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForTypeVariable",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Resolved$Factory",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Bound",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Factory",
     "org.assertj.core.error.AssertionErrorFactory",
     "org.assertj.core.error.ShouldHaveStamp",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyNestMemberList",
     "org.assertj.core.presentation.PredicateDescription",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForField",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$Resolution$Illegal",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$ForField$Location",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$ParameterAnnotationAdapter",
     "org.assertj.core.error.ShouldHaveSuppressedException",
     "org.assertj.core.api.AbstractOptionalAssert",
     "org.assertj.core.api.AbstractIterableAssert",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$WithoutSpecification$ForMatchedByteCodeElement",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$MethodInvoker$Virtual",
     "org.assertj.core.api.OptionalLongAssert",
     "org.assertj.core.api.AbstractStandardSoftAssertions",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$Empty",
     "org.assertj.core.api.DoublePredicateAssert",
     "org.assertj.core.internal.bytebuddy.utility.visitor.StackAwareMethodVisitor$1",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Ignored",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation",
     "org.assertj.core.util.BigIntegerComparator",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$ParameterAnnotationSource$ForLoadedConstructor",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$RenderingDelegate$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType$RenderingDelegate$2",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodCall$ArgumentProvider",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$InDefinedShape",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy$Disabled",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$Simple",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.LongConstant$ConstantPool",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$TypePoolResolver$ForClassFileLocator",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder$DefaultMethodLocator$Implicit",
     "org.assertj.core.internal.bytebuddy.description.NamedElement$WithGenericName",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler$Default$1",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter$ForMethodEnter",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$TerminationHandler$Default$2",
     "org.assertj.core.api.LongPredicateAssert",
     "org.assertj.core.error.ShouldNotMatchPattern",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory",
     "org.assertj.core.internal.bytebuddy.asm.Advice$MethodSizeHandler$ForInstrumentedMethod",
     "org.assertj.core.internal.ObjectArrayElementComparisonStrategy",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType$ForLoadedType$WildcardUpperBoundTypeList",
     "org.assertj.core.api.filter.NotInFilter",
     "org.assertj.core.internal.bytebuddy.implementation.ExceptionMethod$ConstructionDelegate$ForDefaultConstructor",
     "org.assertj.core.api.WithAssertions",
     "org.assertj.core.presentation.NumberGrouping",
     "org.assertj.core.internal.bytebuddy.asm.Advice$AdviceVisitor$WithoutExitAdvice",
     "org.assertj.core.api.AbstractOptionalIntAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$ConstructorCall$Appender",
     "org.assertj.core.api.AbstractInstantAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.NexusAccessor$InitializationAppender",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.TypeCasting",
     "org.assertj.core.util.CheckReturnValue",
     "org.assertj.core.api.AbstractStringAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithDrain$WithActiveRecord",
     "org.assertj.core.extractor.ByNameSingleExtractor",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$ValueTransformer",
     "org.assertj.core.util.Preconditions",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ExceptionDefinition",
     "org.assertj.core.internal.bytebuddy.description.TypeVariableSource$Visitor",
     "org.assertj.core.api.Assumptions$AssumptionMethodInterceptor",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable$OfMethod",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$ForReceiverType",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver$Matching",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy$AssignableSignatureCall",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$Record$Illegal",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForTypeValue",
     "org.assertj.core.internal.CommonErrors",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$Compound",
     "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
     "org.assertj.core.error.future.ShouldHaveFailed",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$InDefinedShape",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$TypeExtractor$FieldExtractor",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$ResubmissionListener",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForVariable$ReadOnly",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder$DefaultMethodLocator",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$TypeErasing",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$PoolStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForFloatConstant",
     "org.assertj.core.condition.DoesNotHave",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$AtFixedRate",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess",
     "org.assertj.core.error.AssertJMultipleFailuresError",
     "org.assertj.core.api.SoftAssertionsStatement",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Origin",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$Direct$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$Factory",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Redefining",
     "org.assertj.core.internal.bytebuddy.description.field.FieldList$AbstractBase",
     "org.assertj.core.util.DateUtil",
     "org.assertj.core.internal.IterableDiff",
     "org.assertj.core.api.UrlAssert",
     "org.assertj.core.util.Arrays",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound",
     "org.assertj.core.error.ShouldStartWith",
     "org.assertj.core.api.NumberAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Transformer$ForAdvice$Entry$ForSplitAdvice",
     "org.assertj.core.util.introspection.MemberUtils",
     "org.assertj.core.error.ShouldNotContainKey",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$1",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess",
     "org.assertj.core.error.ShouldHaveCause",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredFields$DispatchingVisitor",
     "org.assertj.core.error.ShouldHaveSameContent",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Node$Sort",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldRegistry$Compiled",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.PrivilegedMemberLookupAction",
     "org.assertj.core.error.ShouldBeInterface",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$Initialization",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ClassDumpAction$Dispatcher$Disabled",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$1",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.SuperCall$Binder",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Identified$Extendable",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableCollector",
     "org.assertj.core.internal.bytebuddy.matcher.TypeSortMatcher",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$FieldToken",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$Minimal",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodHandle$Dispatcher$Initializable",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$BatchReallocator",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$ClassFileBufferStrategy$Default$2",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$ClassFileBufferStrategy$Default$1",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing$SlicingIterable",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$BridgeMethodImplementation$Appender",
     "org.assertj.core.api.AbstractComparableAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$FieldLocation$Relative$Prepared",
     "org.assertj.core.internal.AbstractComparisonStrategy",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$Origin$ForJarFile",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Default$Binder",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable$LazyBoundTokenList",
     "org.assertj.core.internal.bytebuddy.description.modifier.Visibility$1",
     "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod$PrefixResolver$Default",
     "org.assertj.core.error.ShouldBeEqualToIgnoringFields",
     "org.assertj.core.error.ShouldBeEqualIgnoringMinutes",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithEagerNavigation",
     "org.assertj.core.error.ShouldContainExactlyInAnyOrder",
     "org.assertj.core.api.AbstractAtomicReferenceAssert",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$RenderingDispatcher",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$Instantiator$Unresolved",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.TypeAttributeAppender",
     "org.assertj.core.error.ShouldHaveSizeGreaterThanOrEqualTo",
     "org.assertj.core.internal.bytebuddy.description.method.MethodList$AbstractBase",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable",
     "org.assertj.core.error.ShouldOnlyHaveFields",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.RuntimeType$Verifier",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ExceptionHandler$Simple",
     "org.assertj.core.internal.bytebuddy.description.modifier.ModifierContributor$ForType",
     "org.assertj.core.api.exception.package-info",
     "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher$Conjunction",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$ForField$FieldModifierTransformer",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory$UsingReflection$ArgumentResolver$ForIndex$WithDynamicType",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode$3",
     "org.assertj.core.api.OffsetDateTimeAssert",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode$2",
     "org.assertj.core.api.ProxyableListAssert$ListFromStream",
     "org.assertj.core.internal.Uris",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.jar.asm.Handle",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode$7",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode$6",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode$5",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode$4",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard$LazyUnboundWildcard",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode$9",
     "org.assertj.core.internal.bytebuddy.matcher.StringMatcher$Mode$8",
     "org.assertj.core.error.ShouldBeCloseTo",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$NoOp",
     "org.assertj.core.error.ShouldBeAfterOrEqualTo",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$ParameterBinding$Unique",
     "org.assertj.core.error.future.ShouldNotHaveFailed",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$WithoutSpecification$ForMatchedMethod",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$TypeToken",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForEnumerationValue",
     "org.assertj.core.api.LocalDateTimeAssert",
     "org.assertj.core.api.LongAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType",
     "org.assertj.core.error.ShouldHaveToString",
     "org.assertj.core.internal.bytebuddy.jar.asm.Edge",
     "org.assertj.core.internal.CharArrays",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedExceptionType",
     "org.assertj.core.internal.bytebuddy.build.Plugin$1",
     "org.assertj.core.internal.Characters",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$CircularityLock",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForThisReference$Factory",
     "org.assertj.core.error.ShouldNotBeInstance",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$Relocation$ForLabel",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter$OfFieldValue",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Transformer$Compound",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$MethodCall$Appender",
     "org.assertj.core.error.ShouldBeBefore",
     "org.assertj.core.internal.bytebuddy.dynamic.TypeResolutionStrategy$Disabled",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Target$ForFolder$Dispatcher$ForJava7CapableVm",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayCreator$ForReferenceType",
     "org.assertj.core.error.OptionalShouldContain",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayAccess",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Linked",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$MethodBinding",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$UsingUnsafeOverride$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.asm.TypeConstantAdjustment$TypeConstantDissolvingClassVisitor",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$AnnotationOrderComparator",
     "org.assertj.core.error.ShouldEndWith",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationValueFilter$Default",
     "org.assertj.core.internal.bytebuddy.implementation.bind.ParameterLengthResolver",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.DoubleConstant$ConstantPool",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$Latent",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$FieldDefinitionAdapter",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayFactory$ArrayCreator$ForPrimitiveType",
     "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher$ForMethodToken$ResolvedMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForExplicitType",
     "org.assertj.core.internal.Iterators",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.LongConstant",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$SerializationImplementation",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForReturnValue",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant$CanCache",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation$OfAnnotationProperty",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForMethodParameter",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$NameProvider",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph$Binder$DefaultMethodLocator$Explicit",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$ForVirtualInvocation$WithImplicitType",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$MethodInvoker$Simple",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType",
     "org.assertj.core.api.recursive.comparison.RecursiveComparisonDifferenceCalculator$ComparisonState",
     "org.assertj.core.error.ShouldBeBetween",
     "org.assertj.core.internal.bytebuddy.utility.JavaConstant$MethodType$Dispatcher$ForJava7CapableVm",
     "org.assertj.core.api.JUnitJupiterSoftAssertions",
     "org.assertj.core.error.ShouldEndWithPath",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ClassDumpAction",
     "org.assertj.core.internal.bytebuddy.description.ByteCodeElement$TypeDependant",
     "org.assertj.core.api.AbstractByteAssert",
     "org.assertj.core.util.Strings$StringToAppend",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForArgument",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$AbstractBase$Adapter",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$MethodPool$Record$ForDefinedMethod$OfVisibilityBridge",
     "org.assertj.core.internal.bytebuddy.description.method.MethodList$ForLoadedMethods",
     "org.assertj.core.internal.bytebuddy.description.method.MethodList$ForTokens",
     "org.assertj.core.api.ShortArrayAssert",
     "org.assertj.core.internal.bytebuddy.description.NamedElement$WithOptionalName",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$ErrorHandler$Enforcing",
     "org.assertj.core.error.ShouldBeEqualIgnoringCase",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender$ForTypeAnnotations",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher$ForJava9CapableVm",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Delegating$Resolved$ForMethodExit$WithoutExceptionHandler",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray$LazyGenericArray",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.ByteCodeAppender$Simple",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.Throw",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationValueFilter$1",
     "org.assertj.core.error.AssertionErrorMessagesAggregrator",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Default$Binder$TypeLocator",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodParameters",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Factory",
     "org.assertj.core.util.ArrayWrapperList",
     "org.assertj.core.internal.bytebuddy.TypeCache",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter$OfReferenceValue",
     "org.assertj.core.error.ShouldHaveNoNullFields",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InstallationListener",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$FieldDefinition$Optional$Valuable$AbstractBase$Adapter",
     "org.assertj.core.api.AbstractClassAssert",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$OfMethodExceptionTypes",
     "org.assertj.core.api.AbstractUriAssert",
     "org.assertj.core.api.filter.NotFilter",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingInstrumentation$Target",
     "org.assertj.core.internal.bytebuddy.dynamic.Transformer$ForMethod$TransformedMethod$TransformedParameter",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeInitializer$None",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfType$SuperClassRegistrant",
     "org.assertj.core.api.AssertProvider",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess$OfMatchedField",
     "org.assertj.core.internal.bytebuddy.asm.MemberAttributeExtension$ForField$FieldAttributeVisitor",
     "org.assertj.core.internal.bytebuddy.utility.OpenedClassReader",
     "org.assertj.core.internal.bytebuddy.matcher.ErasureMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Argument$1",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Enter",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription$AbstractBase",
     "org.assertj.core.internal.bytebuddy.TypeCache$1",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$AbstractReadOnlyAdapter",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$BootstrapInjectionStrategy$Enabled",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Default$Binder$TypeLocator$ForParameterType",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$AbstractBase",
     "org.assertj.core.api.AssertionsForClassTypes",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Builder$OfParameterizedType",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$TokenizedGenericType$Malformed",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForField$Unresolved$WithExplicitType",
     "org.assertj.core.api.AbstractSoftAssertions$ThrowingRunnable",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$ForDetachedTypes",
     "org.assertj.core.error.ShouldHaveSameClass",
     "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper$Compound",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory",
     "org.assertj.core.api.AbstractUrlAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.TypeResolutionStrategy$Lazy",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForSerializedValue",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$Sorted",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$ForRebasedMethod",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context$Default$DelegationRecord",
     "org.assertj.core.internal.bytebuddy.asm.TypeReferenceAdjustment",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator$ForClassHierarchy$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$FieldSetting",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator$NonSealing",
     "org.assertj.core.internal.bytebuddy.build.BuildLogger",
     "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$WithNonNullableFields",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Validator$ForTypeAnnotations",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$Chain",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$NativeMethodStrategy$Disabled",
     "org.assertj.core.error.ShouldContainOnlyDigits",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$Explicit",
     "org.assertj.core.api.AtomicStampedReferenceAssert",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker",
     "org.assertj.core.error.ShouldBeInSameSecondWindow",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Appender",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$OfMethodExceptionTypes$TypeProjection",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super$Instantiation$1",
     "org.assertj.core.internal.Numbers",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super$Instantiation$2",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy",
     "org.assertj.core.api.AbstractOffsetDateTimeAssert",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$AbstractBase",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$Factory",
     "org.assertj.core.internal.bytebuddy.asm.MemberAttributeExtension",
     "org.assertj.core.api.Java6AbstractBDDSoftAssertions",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationRetention",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$FieldTokenList",
     "org.assertj.core.util.Sets",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$RelocationHandler$Disabled",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$Enabled",
     "org.assertj.core.internal.bytebuddy.matcher.DescriptorMatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InstallationListener$ErrorSuppressing",
     "org.assertj.core.api.AbstractFloatAssert",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$ForDefaultMethodInvocation$Factory",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$NoOp",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Record$ForExplicitField",
     "org.assertj.core.internal.bytebuddy.dynamic.NexusAccessor$Dispatcher$CreationAction",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$SynchronizationStrategy",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$ForFirstBinding",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingUnsafe$Dispatcher$Initializable",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$Initialization$2",
     "org.assertj.core.internal.bytebuddy.jar.asm.Attribute",
     "org.assertj.core.internal.Booleans",
     "org.assertj.core.internal.bytebuddy.asm.Advice$StackMapFrameHandler$Default$Initialization$1",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex$DoubleIndexed",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$ForDeclaredMethods",
     "org.assertj.core.error.ShouldHaveSameTime",
     "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin$byte",
     "org.assertj.core.internal.bytebuddy.matcher.MethodExceptionTypeMatcher",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader$ForNullConstant",
     "org.assertj.core.internal.bytebuddy.jar.asm.CurrentFrame",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedTypeVariableType",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$ForInstrumentedMethod$Default",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Resolved",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray$Latent",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation$Appender",
     "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod$OffsetProvider$ForSuperMethodCall",
     "org.assertj.core.internal.bytebuddy.asm.ModifierAdjustment$Adjustment",
     "org.assertj.core.internal.bytebuddy.matcher.VisibilityMatcher",
     "org.assertj.core.internal.ComparatorBasedComparisonStrategy",
     "org.assertj.core.api.filter.InFilter",
     "org.assertj.core.api.AbstractCharacterAssert",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Dispatcher$ForJava6CapableVm",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$Compiled",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForMethodInvocation$OfMatchedMethod",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic$OfConstructorExceptionTypes$TypeProjection",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$FieldPool$Disabled",
     "org.assertj.core.api.CharArrayAssert",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$LazyProjection$WithLazyNavigation",
     "org.assertj.core.internal.bytebuddy.description.method.MethodDescription$Latent$TypeInitializer",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$ChildFirst",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForStackManipulation$OfDefaultValue",
     "org.assertj.core.error.ShouldContainOnlyKeys",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution$Simple",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDefinition",
     "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation$ImplementationDelegate$ForField$WithInstance",
     "org.assertj.core.error.ShouldNotBeOfClassIn",
     "org.assertj.core.data.Percentage",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$FieldNameExtractor",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor",
     "org.assertj.core.error.ShouldBeEqualByComparingOnlyGivenFields",
     "org.assertj.core.api.recursive.comparison.DualValueDeque",
     "org.assertj.core.error.ShouldHaveExtension",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher",
     "org.assertj.core.api.ProxyableIterableAssert",
     "org.assertj.core.internal.bytebuddy.asm.Advice$MethodSizeHandler$Default$WithCopiedArguments",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$TypeVariableDefinitionAdapter",
     "org.assertj.core.util.introspection.Introspection",
     "org.assertj.core.internal.bytebuddy.dynamic.TypeResolutionStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForImplicitProperty$Appender",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ReturnTypeProvider",
     "org.assertj.core.api.Java6JUnitBDDSoftAssertions",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$Explicit$Target$OnMethodParameter",
     "org.assertj.core.internal.bytebuddy.jar.asm.Frame",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$Reducing",
     "org.assertj.core.api.AbstractCompletableFutureAssert",
     "org.assertj.core.api.ClassAssert",
     "org.assertj.core.internal.bytebuddy.description.field.FieldDescription$InDefinedShape$AbstractBase",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$Dispatcher",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default$2",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$Factory",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default$3",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$ForMismatchedType$Loaded",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$DescriptionStrategy$Default$1",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner$IsAssignableToVisitor$OfSimpleType",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$BootstrapInjection$Enabled",
     "org.assertj.core.api.JUnitJupiterBDDSoftAssertions",
     "org.assertj.core.internal.bytebuddy.description.type.TypeVariableToken",
     "org.assertj.core.api.ProxyableObjectArrayAssert",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory$Compound",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe$Binder$Redirection$MethodCall",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForOrigin$Renderer$ForJavaSignature",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$MethodToken$ParameterToken",
     "org.assertj.core.api.AbstractBDDSoftAssertions",
     "org.assertj.core.error.ShouldHaveMessageFindingMatchRegex",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$IncompleteToken$ForInnerClass",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$NoOp",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType",
     "org.assertj.core.internal.IntArrays",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$CircularityLock$Inactive",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender$1",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Visitor$AnnotationStripper",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget",
     "org.assertj.core.api.AbstractFloatArrayAssert",
     "org.assertj.core.internal.CommonValidations",
     "org.assertj.core.error.ShouldBeAbsolutePath",
     "org.assertj.core.internal.bytebuddy.jar.asm.SymbolTable",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$Strategy$ClassResettingTransformer",
     "org.assertj.core.api.FactoryBasedNavigableListAssert",
     "org.assertj.core.error.ShouldHaveValue",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default",
     "org.assertj.core.internal.bytebuddy.matcher.CachingMatcher$WithInlineEviction",
     "org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic",
     "org.assertj.core.api.AssertDelegateTarget",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$Resolution$Preserved",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$WithImplicitType$OfArgument",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory",
     "org.assertj.core.util.Hexadecimals",
     "org.assertj.core.internal.bytebuddy.implementation.Implementation$Context",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$ArgumentLoader",
     "org.assertj.core.internal.bytebuddy.description.type.PackageDescription",
     "org.assertj.core.error.ShouldNotBeEqualIgnoringCase",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Lazy$Dispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.AllArguments$Binder",
     "org.assertj.core.error.ShouldNotBeInstanceOfAny",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$Builder$OfNonGenericType",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$Definition$Simple",
     "org.assertj.core.internal.bytebuddy.jar.asm.signature.SignatureVisitor",
     "org.assertj.core.internal.Lists",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$Inlining",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Listener$WithTransformationsOnly",
     "org.assertj.core.error.ShouldNotHaveThrown",
     "org.assertj.core.internal.bytebuddy.jar.asm.Type",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$Compound",
     "org.assertj.core.api.AbstractDoubleArrayAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.ClassWriterStrategy",
     "org.assertj.core.internal.bytebuddy.implementation.SuperMethodCall$Appender",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$ForSuperMethodInvocation",
     "org.assertj.core.error.AssertionErrorCreator",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$1",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$MethodCall",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Substitution$ForFieldAccess",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$4",
     "org.assertj.core.api.AtomicLongArrayAssert",
     "org.assertj.core.api.AssertJProxySetup",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$2",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$TypeStrategy$Default$3",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$UsingLookup",
     "org.assertj.core.internal.bytebuddy.jar.asm.signature.SignatureWriter",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$ComponentTypeLocator",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy$Binder$FieldSetter",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$InvocationProvider$ArgumentProvider$ForMethodParameter$WithExplicitType",
     "org.assertj.core.api.AtomicLongFieldUpdaterAssert",
     "org.assertj.core.presentation.StandardRepresentation",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Dispatcher$ForJava8CapableVm$AnnotatedParameterizedType",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$Origin",
     "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender$Default",
     "org.assertj.core.internal.bytebuddy.build.Plugin$Engine$Source$ForFolder$FolderIterator",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.MultipleParentClassLoader$CompoundEnumeration",
     "org.assertj.core.internal.bytebuddy.NamingStrategy",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$FieldLocation$Absolute",
     "org.assertj.core.api.AbstractMapSizeAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super$Binder$TypeLocator$ForType",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayAccess$Loader",
     "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy$SilentConstruction$Appender",
     "org.assertj.core.internal.bytebuddy.jar.asm.MethodTooLargeException",
     "org.assertj.core.util.diff.InsertDelta",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithDrain",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy$Dispatcher",
     "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic$AbstractDelegator",
     "org.assertj.core.internal.bytebuddy.utility.visitor.LineNumberPrependingMethodVisitor",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForAllArguments",
     "org.assertj.core.presentation.HexadecimalRepresentation",
     "org.assertj.core.internal.Maps",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$SuperClassCheck",
     "org.assertj.core.api.EnumerableAssert",
     "org.assertj.core.api.FileAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner$IsAssignableToVisitor$OfGenericArray",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$ForExitValue$Factory",
     "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue$AbstractBase",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$TypeExtractor$MethodExtractor",
     "org.assertj.core.error.ShouldContainValue",
     "org.assertj.core.internal.bytebuddy.description.type.TypeDescription$ForPackageDescription",
     "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess$MethodLoading",
     "org.assertj.core.api.OffsetTimeAssert",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder$BindingResolver$Default",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$TargetHandler$Simple",
     "org.assertj.core.api.BooleanArrayAssert",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.AllArguments$Assignment",
     "org.assertj.core.internal.bytebuddy.matcher.SignatureTokenMatcher",
     "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound",
     "org.assertj.core.error.ShouldNotContainValue",
     "org.assertj.core.internal.bytebuddy.implementation.FixedValue$ForNullValue",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.NoOpClassFileTransformer",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$Factory",
     "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor$ForSetter$Appender",
     "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator$AgentBased$ClassLoadingDelegate$Default",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$Dispatcher",
     "org.assertj.core.error.OptionalShouldBePresent",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$LocationStrategy$Compound",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor",
     "org.assertj.core.error.ShouldNotContainKeys",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Dispatcher$ForLegacyVm",
     "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter",
     "org.assertj.core.internal.bytebuddy.implementation.bind.MethodNameEqualityResolver",
     "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher$ForMethodToken",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForBootstrapInjection",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader$PackageLookupStrategy$ForJava9CapableVm",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy$ManifestReading$SealBaseLocator$ForTypeResourceUrl",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target",
     "org.assertj.core.internal.bytebuddy.description.type.PackageDescription$AbstractBase",
     "org.assertj.core.internal.bytebuddy.asm.Advice$OffsetMapping$Target$ForDefaultValue$ReadWrite",
     "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod$NullValueGuard$UsingJump$AfterInstruction",
     "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$ParameterAnnotationSource",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod",
     "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super$Binder",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Listener$NoOp",
     "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$AttributeObtainingMethodVisitor",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$Default",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$StorageKey",
     "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForTotal",
     "org.assertj.core.internal.bytebuddy.asm.Advice$Dispatcher$SuppressionHandler$Bound",
     "org.assertj.core.error.ZippedElementsShouldSatisfy",
     "org.assertj.core.condition.Not",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader",
     "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$UsingUnsafeOverride",
     "org.assertj.core.internal.bytebuddy.asm.Advice$ArgumentHandler$ForInstrumentedMethod",
     "org.assertj.core.internal.bytebuddy.implementation.MethodCall$MethodInvoker$ForSuperMethodInvocation$Factory",
     "org.assertj.core.internal.bytebuddy.pool.TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ExceptionTypeRegistrant"
    ],
    "usedTypes": [
     "org.assertj.core.data.Offset",
     "org.assertj.core.api.SoftAssertions",
     "org.assertj.core.api.ThrowableAssertAlternative",
     "org.assertj.core.api.AssertionsForClassTypes",
     "org.assertj.core.api.AbstractIntegerAssert",
     "org.assertj.core.api.AbstractLocalDateTimeAssert",
     "org.assertj.core.api.ObjectArrayAssert",
     "org.assertj.core.api.ProxyableIterableAssert",
     "org.assertj.core.api.AbstractFloatAssert",
     "org.assertj.core.api.AbstractByteArrayAssert",
     "org.assertj.core.api.AbstractInstantAssert",
     "org.assertj.core.api.ProxyableListAssert",
     "org.assertj.core.api.AbstractDateAssert",
     "org.assertj.core.api.AbstractLocalTimeAssert",
     "org.assertj.core.api.AbstractOptionalAssert",
     "org.assertj.core.api.AbstractComparableAssert",
     "org.assertj.core.api.Assertions",
     "org.assertj.core.api.AbstractStringAssert",
     "org.assertj.core.api.AbstractShortAssert",
     "org.assertj.core.api.MapAssert",
     "org.assertj.core.api.LongAssert",
     "org.assertj.core.api.ThrowableAssert",
     "org.assertj.core.api.ProxyableMapAssert",
     "org.assertj.core.api.IterableAssert",
     "org.assertj.core.groups.Tuple",
     "org.assertj.core.api.AbstractThrowableAssert",
     "org.assertj.core.api.AbstractBooleanAssert",
     "org.assertj.core.api.InstantAssert",
     "org.assertj.core.api.CompletableFutureAssert",
     "org.assertj.core.api.AbstractListAssert",
     "org.assertj.core.api.AbstractDoubleAssert",
     "org.assertj.core.api.ThrowableTypeAssert",
     "org.assertj.core.api.AbstractLocalDateAssert",
     "org.assertj.core.api.ClassAssert",
     "org.assertj.core.api.StringAssert",
     "org.assertj.core.api.AbstractLongAssert",
     "org.assertj.core.api.AbstractCharacterAssert",
     "org.assertj.core.api.OptionalAssert",
     "org.assertj.core.api.AbstractByteAssert",
     "org.assertj.core.api.ObjectAssert",
     "org.assertj.core.api.ThrowableAssert$ThrowingCallable",
     "org.assertj.core.api.ListAssert",
     "org.assertj.core.api.Condition"
    ],
    "usageRatio": 0.014247846255798542,
    "children": []
   },
   {
    "id": "org.springframework:spring-test:jar:5.2.0.RC2:test",
    "coordinates": "org.springframework:spring-test:5.2.0.RC2",
    "groupId": "org.springframework",
    "artifactId": "spring-test",
    "version": "5.2.0.RC2",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 679026,
    "type": "inherited",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder$1",
     "org.springframework.test.web.reactive.server.XpathAssertions",
     "org.springframework.test.web.client.ResponseCreator",
     "org.springframework.test.context.jdbc.package-info",
     "org.springframework.test.context.event.EventPublishingTestExecutionListener",
     "org.springframework.test.context.cache.DefaultContextCache$LruCache",
     "org.springframework.mock.jndi.SimpleNamingContext",
     "org.springframework.test.context.transaction.TransactionContext",
     "org.springframework.test.web.servlet.result.MockMvcResultHandlers",
     "org.springframework.test.context.support.AbstractDelegatingSmartContextLoader",
     "org.springframework.test.context.testng.AbstractTestNGSpringContextTests",
     "org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1",
     "org.springframework.mock.web.MockRequestDispatcher",
     "org.springframework.test.context.event.annotation.BeforeTestClass",
     "org.springframework.test.context.testng.package-info",
     "org.springframework.test.web.client.match.ContentRequestMatchers$1",
     "org.springframework.test.web.client.match.ContentRequestMatchers$2",
     "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$body$1",
     "org.springframework.test.web.client.match.ContentRequestMatchers$3",
     "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder$StandaloneConfiguration",
     "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$body$2",
     "org.springframework.test.web.client.match.ContentRequestMatchers$4",
     "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$body$3",
     "org.springframework.mock.web.MockMultipartFile",
     "org.springframework.test.context.web.GenericGroovyXmlWebContextLoader",
     "org.springframework.test.web.reactive.server.WebTestClient$MockServerSpec",
     "org.springframework.test.context.util.package-info",
     "org.springframework.test.web.servlet.setup.MockMvcConfigurerAdapter",
     "org.springframework.mock.http.client.reactive.MockClientHttpRequest",
     "org.springframework.test.web.reactive.server.XpathAssertions$CheckedExceptionTask",
     "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodySpec",
     "org.springframework.test.web.servlet.setup.StubWebApplicationContext",
     "org.springframework.mock.http.server.reactive.package-info",
     "org.springframework.test.context.junit.jupiter.DisabledIf",
     "org.springframework.test.annotation.Commit",
     "org.springframework.mock.web.MockHttpServletResponse",
     "org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersSpec",
     "org.springframework.test.context.transaction.TestContextTransactionUtils",
     "org.springframework.test.context.junit4.rules.SpringClassRule",
     "org.springframework.mock.http.MockHttpInputMessage",
     "org.springframework.mock.env.package-info",
     "org.springframework.test.context.junit4.statements.package-info",
     "org.springframework.test.context.junit4.statements.ProfileValueChecker",
     "org.springframework.test.context.event.BeforeTestExecutionEvent",
     "org.springframework.test.web.servlet.setup.ConfigurableMockMvcBuilder",
     "org.springframework.test.context.junit.jupiter.SpringExtension",
     "org.springframework.mock.web.PassThroughFilterChain",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$AbstractJsonPathRequestMatcher",
     "org.springframework.test.web.reactive.server.WebTestClient$ListBodySpec",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$put$2",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$put$1",
     "org.springframework.test.context.web.AbstractGenericWebContextLoader",
     "org.springframework.test.context.ContextConfiguration",
     "org.springframework.mock.web.MockFilterChain$ServletFilterProxy",
     "org.springframework.test.context.support.GenericGroovyXmlContextLoader",
     "org.springframework.test.web.servlet.htmlunit.webdriver.package-info",
     "org.springframework.test.annotation.DirtiesContext",
     "org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection$DelegateWebConnection",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$get$1",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$get$2",
     "org.springframework.mock.web.reactive.function.server.MockServerRequest$BuilderImpl",
     "org.springframework.test.context.junit.jupiter.SpringJUnitConfig",
     "org.springframework.test.context.support.AbstractGenericContextLoader",
     "org.springframework.test.context.web.WebTestContextBootstrapper",
     "org.springframework.test.web.client.RequestExpectation",
     "org.springframework.test.web.client.AbstractRequestExpectationManager$RequestExpectationGroup",
     "org.springframework.test.context.support.package-info",
     "org.springframework.test.annotation.ProfileValueSourceConfiguration",
     "org.springframework.test.jdbc.package-info",
     "org.springframework.test.context.support.GenericPropertiesContextLoader",
     "org.springframework.test.context.web.WebAppConfiguration",
     "org.springframework.test.web.client.RequestMatcher",
     "org.springframework.mock.http.client.reactive.MockClientHttpResponse",
     "org.springframework.test.context.junit.jupiter.package-info",
     "org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener",
     "org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection",
     "org.springframework.mock.env.MockPropertySource",
     "org.springframework.test.context.TestConstructor",
     "org.springframework.test.context.ContextCustomizerFactory",
     "org.springframework.test.web.reactive.server.WebTestClient$Builder",
     "org.springframework.test.web.reactive.server.EntityExchangeResult",
     "org.springframework.test.web.client.match.ContentRequestMatchers",
     "org.springframework.test.web.reactive.server.WebTestClient$UriSpec",
     "org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$request$1",
     "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$request$2",
     "org.springframework.test.util.MetaAnnotationUtils$AnnotationDescriptor",
     "org.springframework.test.web.client.SimpleRequestExpectationManager",
     "org.springframework.test.context.support.AnnotationConfigContextLoader",
     "org.springframework.mock.web.MockHttpServletResponse$ResponsePrintWriter",
     "org.springframework.mock.jndi.ExpectedLookupTemplate",
     "org.springframework.test.web.servlet.result.MockMvcResultHandlers$PrintWriterPrintingResultHandler$1",
     "org.springframework.mock.web.reactive.function.server.MockServerRequest$Builder",
     "org.springframework.test.web.servlet.request.package-info",
     "org.springframework.test.context.BootstrapContext",
     "org.springframework.test.web.servlet.result.HeaderResultMatchers",
     "org.springframework.test.context.support.DefaultActiveProfilesResolver",
     "org.springframework.mock.web.MockServletContext",
     "org.springframework.test.context.BootstrapWith",
     "org.springframework.test.web.client.match.XpathRequestMatchers",
     "org.springframework.test.web.servlet.setup.StubWebApplicationContext$1",
     "org.springframework.test.context.TestContextManager",
     "org.springframework.test.context.transaction.AfterTransaction",
     "org.springframework.test.context.web.socket.MockServerContainerContextCustomizer",
     "org.springframework.mock.web.DelegatingServletInputStream",
     "org.springframework.test.annotation.Repeat",
     "org.springframework.test.web.servlet.request.RequestPostProcessor",
     "org.springframework.test.context.event.annotation.AfterTestMethod",
     "org.springframework.test.web.servlet.result.ContentResultMatchers",
     "org.springframework.test.web.servlet.htmlunit.webdriver.MockMvcHtmlUnitDriverBuilder",
     "org.springframework.test.annotation.Rollback",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers",
     "org.springframework.test.web.reactive.server.WebTestClient$BodySpec",
     "org.springframework.test.web.reactive.server.WebTestClient$BodyContentSpec",
     "org.springframework.mock.web.MockMultipartHttpServletRequest",
     "org.springframework.test.web.servlet.package-info",
     "org.springframework.mock.web.package-info",
     "org.springframework.test.context.testng.AbstractTransactionalTestNGSpringContextTests",
     "org.springframework.test.web.servlet.ResultActions",
     "org.springframework.test.web.reactive.server.WebTestClient$RequestHeadersUriSpec",
     "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt",
     "org.springframework.test.context.MergedContextConfiguration",
     "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate",
     "org.springframework.test.web.servlet.RequestBuilder",
     "org.springframework.mock.web.DelegatingServletOutputStream",
     "org.springframework.test.context.support.DefaultBootstrapContext",
     "org.springframework.test.web.reactive.server.DefaultControllerSpec$TestWebFluxConfigurer",
     "org.springframework.test.web.client.MockMvcClientHttpRequestFactory",
     "org.springframework.test.context.transaction.TransactionalTestExecutionListener",
     "org.springframework.mock.http.server.reactive.MockServerHttpRequest$BodyBuilder",
     "org.springframework.test.annotation.Timed",
     "org.springframework.test.web.servlet.result.MockMvcResultHandlers$PrintWriterPrintingResultHandler",
     "org.springframework.test.web.servlet.result.MockMvcResultHandlers$LoggingResultHandler",
     "org.springframework.test.web.reactive.server.ApplicationContextSpec",
     "org.springframework.test.context.ContextConfigurationAttributes",
     "org.springframework.test.context.event.annotation.AfterTestClass",
     "org.springframework.test.context.support.AbstractTestContextBootstrapper",
     "org.springframework.test.web.client.MockRestServiceServer$MockClientHttpRequestFactory",
     "org.springframework.test.context.junit.jupiter.web.package-info",
     "org.springframework.test.web.servlet.MockMvcBuilderSupport",
     "org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor",
     "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks",
     "org.springframework.test.web.servlet.setup.StubWebApplicationContext$StubBeanFactory",
     "org.springframework.test.web.client.match.package-info",
     "org.springframework.test.web.servlet.result.StatusResultMatchers",
     "org.springframework.mock.http.client.MockClientHttpResponse",
     "org.springframework.test.context.support.DefaultTestContextBootstrapper",
     "org.springframework.test.web.servlet.DefaultMvcResult",
     "org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests",
     "org.springframework.test.context.web.WebDelegatingSmartContextLoader",
     "org.springframework.test.web.reactive.server.WebTestClientConfigurer",
     "org.springframework.test.context.jdbc.Sql$ExecutionPhase",
     "org.springframework.test.context.event.AfterTestMethodEvent",
     "org.springframework.mock.web.server.MockServerWebExchange$Builder",
     "org.springframework.mock.http.server.reactive.MockServerHttpRequest",
     "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1",
     "org.springframework.test.web.servlet.MockMvcBuilderSupport$MockMvcBuildException",
     "org.springframework.test.web.servlet.result.ModelResultMatchers",
     "org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder",
     "org.springframework.test.context.web.AnnotationConfigWebContextLoader",
     "org.springframework.test.web.reactive.server.FluxExchangeResult",
     "org.springframework.test.context.cache.ContextCacheUtils",
     "org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests",
     "org.springframework.test.annotation.IfProfileValue",
     "org.springframework.mock.web.MockServletConfig",
     "org.springframework.mock.web.MockSessionCookieConfig",
     "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$expectBodyList$1",
     "org.springframework.test.context.ContextLoader",
     "org.springframework.test.context.junit.jupiter.EnabledIfCondition",
     "org.springframework.mock.env.MockEnvironment",
     "org.springframework.test.context.event.AfterTestClassEvent",
     "org.springframework.test.web.reactive.server.HeaderAssertions",
     "org.springframework.test.web.servlet.htmlunit.HostRequestMatcher",
     "org.springframework.test.context.web.ServletTestExecutionListener",
     "org.springframework.test.context.event.BeforeTestMethodEvent",
     "org.springframework.test.context.ActiveProfiles",
     "org.springframework.test.annotation.ProfileValueSource",
     "org.springframework.mock.jndi.SimpleNamingContext$NameClassPairEnumeration",
     "org.springframework.test.context.TestExecutionListeners",
     "org.springframework.test.web.servlet.result.PrintingResultHandler$ResultValuePrinter",
     "org.springframework.test.context.junit4.rules.SpringMethodRule",
     "org.springframework.test.context.TestPropertySources",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$14",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$13",
     "org.springframework.test.web.reactive.server.KotlinBodySpec",
     "org.springframework.test.web.reactive.server.HttpHandlerConnector",
     "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder$HtmlUnitMockHttpSession",
     "org.springframework.test.annotation.SystemProfileValueSource",
     "org.springframework.test.web.client.MockMvcClientHttpRequestFactory$1",
     "org.springframework.test.context.support.ContextLoaderUtils",
     "org.springframework.mock.web.MockExpressionEvaluator$1",
     "org.springframework.test.context.event.AfterTestExecutionEvent",
     "org.springframework.test.web.reactive.server.StatusAssertions",
     "org.springframework.mock.http.package-info",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$12",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$11",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$10",
     "org.springframework.test.context.junit4.package-info",
     "org.springframework.test.web.reactive.server.DefaultControllerSpec",
     "org.springframework.test.web.client.MockMvcClientHttpRequestFactory$2",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$post$1",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$post$2",
     "org.springframework.test.web.servlet.MockMvcBuilder",
     "org.springframework.test.context.support.TestPropertySourceUtils",
     "org.springframework.test.web.servlet.htmlunit.webdriver.WebConnectionHtmlUnitDriver",
     "org.springframework.test.web.servlet.result.StatusResultMatchersExtensionsKt",
     "org.springframework.mock.web.server.MockServerWebExchange",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$patch$2",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$patch$1",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$delete$2",
     "org.springframework.test.context.TestContextBootstrapper",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$delete$1",
     "org.springframework.test.context.junit.jupiter.web.SpringJUnitWebConfig",
     "org.springframework.test.web.client.MockRestServiceServer",
     "org.springframework.test.web.reactive.server.WebTestClient",
     "org.springframework.mock.web.reactive.function.server.MockServerRequest$MockHeaders",
     "org.springframework.test.web.servlet.result.JsonPathResultMatchers",
     "org.springframework.mock.web.MockJspWriter",
     "org.springframework.test.web.client.DefaultRequestExpectation",
     "org.springframework.test.web.reactive.server.DefaultMockServerSpec",
     "org.springframework.test.web.servlet.result.HandlerResultMatchers",
     "org.springframework.mock.web.reactive.function.server.package-info",
     "org.springframework.test.web.servlet.setup.MockMvcBuilders",
     "org.springframework.test.context.support.MergedTestPropertySources",
     "org.springframework.test.web.client.MockRestServiceServer$1",
     "org.springframework.test.web.client.DefaultRequestExpectation$RequestCount",
     "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder$1",
     "org.springframework.test.web.reactive.server.DefaultWebTestClient",
     "org.springframework.mock.web.MockExpressionEvaluator",
     "org.springframework.test.context.web.package-info",
     "org.springframework.test.context.jdbc.SqlConfig",
     "org.springframework.test.web.servlet.result.XpathResultMatchers",
     "org.springframework.test.context.support.AbstractTestExecutionListener",
     "org.springframework.test.util.ReflectionTestUtils",
     "org.springframework.mock.jndi.SimpleNamingContext$AbstractNamingEnumeration",
     "org.springframework.test.context.web.WebMergedContextConfiguration",
     "org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener",
     "org.springframework.test.web.servlet.request.MockMvcRequestBuilders",
     "org.springframework.test.web.reactive.server.AbstractMockServerSpec",
     "org.springframework.test.context.transaction.TestTransaction",
     "org.springframework.test.context.ContextHierarchy",
     "org.springframework.test.context.transaction.package-info",
     "org.springframework.test.web.servlet.result.MockMvcResultHandlers$1",
     "org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder",
     "org.springframework.test.context.junit.jupiter.AbstractExpressionEvaluatingCondition",
     "org.springframework.mock.http.client.MockAsyncClientHttpRequest",
     "org.springframework.test.context.event.PrepareTestInstanceEvent",
     "org.springframework.mock.web.reactive.function.server.MockServerRequest$1",
     "org.springframework.test.web.client.package-info",
     "org.springframework.test.context.support.GenericXmlContextLoader",
     "org.springframework.test.context.cache.DefaultContextCache",
     "org.springframework.test.context.transaction.TestContextTransactionUtils$TestContextTransactionAttribute",
     "org.springframework.test.util.JsonExpectationsHelper",
     "org.springframework.mock.http.client.reactive.package-info",
     "org.springframework.test.annotation.ProfileValueUtils",
     "org.springframework.test.web.reactive.server.WebTestClient$RequestBodySpec",
     "org.springframework.test.web.client.match.XpathRequestMatchers$AbstractXpathRequestMatcher",
     "org.springframework.test.context.junit.jupiter.DisabledIfCondition",
     "org.springframework.test.web.servlet.MockMvcResultMatchersDsl",
     "org.springframework.test.context.util.TestContextResourceUtils",
     "org.springframework.test.annotation.DirtiesContext$MethodMode",
     "org.springframework.test.web.servlet.setup.package-info",
     "org.springframework.mock.web.MockHttpSession",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$head$1",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$head$2",
     "org.springframework.mock.web.reactive.function.server.MockServerRequest",
     "org.springframework.test.context.event.annotation.BeforeTestExecution",
     "org.springframework.test.web.servlet.htmlunit.ForwardRequestPostProcessor",
     "org.springframework.mock.http.MockHttpOutputMessage",
     "org.springframework.test.web.servlet.MockHttpServletRequestDsl",
     "org.springframework.test.context.event.annotation.BeforeTestMethod",
     "org.springframework.test.context.jdbc.SqlMergeMode$MergeMode",
     "org.springframework.test.web.servlet.ResultMatcher",
     "org.springframework.test.util.XmlExpectationsHelper",
     "org.springframework.test.context.support.ApplicationContextInitializerUtils",
     "org.springframework.test.context.event.annotation.AfterTestExecution",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$1",
     "org.springframework.test.context.TestExecutionListener",
     "org.springframework.test.annotation.TestAnnotationUtils",
     "org.springframework.test.context.event.TestContextEvent",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$4",
     "org.springframework.test.context.cache.package-info",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$5",
     "org.springframework.test.web.reactive.server.WiretapConnector",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$2",
     "org.springframework.test.context.support.AbstractContextLoader",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$3",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$8",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$9",
     "org.springframework.mock.web.server.MockServerWebExchange$1",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$6",
     "org.springframework.test.web.client.match.JsonPathRequestMatchers$7",
     "org.springframework.test.context.support.DependencyInjectionTestExecutionListener",
     "org.springframework.test.context.support.TestPropertySourceAttributes",
     "org.springframework.test.web.servlet.MockMultipartHttpServletRequestDsl",
     "org.springframework.mock.http.server.reactive.MockServerHttpRequest$1",
     "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1$2",
     "org.springframework.test.web.servlet.SmartRequestBuilder",
     "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodyContentSpec",
     "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1$1",
     "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks",
     "org.springframework.test.context.support.AnnotationConfigContextLoaderUtils",
     "org.springframework.test.web.servlet.result.RequestResultMatchers",
     "org.springframework.test.context.support.DefaultTestContext",
     "org.springframework.test.context.junit.jupiter.EnabledIf",
     "org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder",
     "org.springframework.test.web.servlet.htmlunit.MockMvcWebClientBuilder",
     "org.springframework.test.web.reactive.server.WiretapConnector$WiretapClientHttpResponse",
     "org.springframework.test.web.reactive.server.ExchangeResult",
     "org.springframework.test.web.reactive.server.DefaultWebTestClientBuilder",
     "org.springframework.test.context.junit4.statements.SpringRepeat",
     "org.springframework.mock.jndi.package-info",
     "org.springframework.test.web.client.response.DefaultResponseCreator",
     "org.springframework.mock.http.server.reactive.MockServerHttpRequest$BaseBuilder",
     "org.springframework.test.web.reactive.server.WiretapConnector$WiretapClientHttpRequest",
     "org.springframework.test.context.support.DelegatingSmartContextLoader",
     "org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory",
     "org.springframework.mock.web.HeaderValueHolder",
     "org.springframework.mock.web.MockFilterConfig",
     "org.springframework.test.web.servlet.htmlunit.UrlRegexRequestMatcher",
     "org.springframework.test.util.AssertionErrors",
     "org.springframework.test.context.event.annotation.PrepareTestInstance",
     "org.springframework.test.web.reactive.server.WiretapConnector$Info",
     "org.springframework.test.web.client.MockRestServiceServer$DefaultBuilder",
     "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks",
     "org.springframework.mock.http.client.MockClientHttpRequest",
     "org.springframework.test.web.client.match.XpathRequestMatchers$10",
     "org.springframework.test.context.jdbc.SqlConfig$ErrorMode",
     "org.springframework.test.web.client.match.ContentRequestMatchers$AbstractXmlRequestMatcher",
     "org.springframework.mock.http.client.package-info",
     "org.springframework.mock.web.MockAsyncContext",
     "org.springframework.test.web.servlet.result.PrintingResultHandler",
     "org.springframework.test.web.reactive.server.WebTestClient$RequestBodyUriSpec",
     "org.springframework.test.annotation.DirtiesContext$ClassMode",
     "org.springframework.test.annotation.package-info",
     "org.springframework.mock.http.server.reactive.MockServerHttpResponse",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$multipart$1",
     "org.springframework.test.web.servlet.TestDispatcherServlet",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$multipart$2",
     "org.springframework.test.web.ModelAndViewAssert",
     "org.springframework.test.context.junit4.rules.package-info",
     "org.springframework.test.web.reactive.server.WebTestClient$ResponseSpec",
     "org.springframework.test.web.servlet.result.CookieResultMatchers",
     "org.springframework.test.web.servlet.htmlunit.MockMvcWebConnectionBuilderSupport",
     "org.springframework.test.util.MetaAnnotationUtils$UntypedAnnotationDescriptor",
     "org.springframework.test.context.junit4.SpringJUnit4ClassRunner",
     "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder$HtmlUnitMockHttpServletRequest",
     "org.springframework.test.context.SmartContextLoader",
     "org.springframework.test.context.transaction.BeforeTransaction",
     "org.springframework.test.context.TestContext",
     "org.springframework.test.util.MetaAnnotationUtils",
     "org.springframework.test.web.servlet.request.ConfigurableSmartRequestBuilder",
     "org.springframework.test.web.reactive.server.WebTestClient$ControllerSpec",
     "org.springframework.test.context.web.GenericXmlWebContextLoader",
     "org.springframework.test.web.reactive.server.WebTestClient$RouterFunctionSpec",
     "org.springframework.test.context.TestPropertySource",
     "org.springframework.test.web.reactive.server.WiretapConnector$WiretapRecorder",
     "org.springframework.mock.web.MockHttpServletResponse$ResponseServletOutputStream",
     "org.springframework.mock.web.MockHttpServletRequest",
     "org.springframework.test.context.jdbc.Sql",
     "org.springframework.test.context.TestExecutionListeners$MergeMode",
     "org.springframework.test.context.jdbc.SqlConfig$TransactionMode",
     "org.springframework.test.context.TestContextManager$1",
     "org.springframework.test.web.client.RequestExpectationManager",
     "org.springframework.test.context.TestConstructor$AutowireMode",
     "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultResponseSpec",
     "org.springframework.test.context.web.socket.MockServerContainer",
     "org.springframework.test.web.client.MockRestServiceServer$MockRestServiceServerBuilder",
     "org.springframework.test.context.transaction.TransactionContextHolder",
     "org.springframework.mock.http.server.reactive.MockServerHttpRequest$DefaultBodyBuilder",
     "org.springframework.test.web.servlet.MockMvc",
     "org.springframework.test.context.package-info",
     "org.springframework.test.util.package-info",
     "org.springframework.test.web.servlet.htmlunit.package-info",
     "org.springframework.mock.jndi.SimpleNamingContextBuilder",
     "org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener",
     "org.springframework.test.web.reactive.server.DefaultRouterFunctionSpec",
     "org.springframework.test.web.servlet.MvcResult",
     "org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks",
     "org.springframework.test.context.ActiveProfilesResolver",
     "org.springframework.test.web.servlet.result.ViewResultMatchers",
     "org.springframework.test.context.CacheAwareContextLoaderDelegate",
     "org.springframework.mock.web.server.MockWebSession",
     "org.springframework.test.web.servlet.htmlunit.MockMvcWebConnection",
     "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultRequestBodyUriSpec",
     "org.springframework.test.web.client.MockRestServiceServer$MockClientHttpRequestFactory$1",
     "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder$StaticStringValueResolver",
     "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks",
     "org.springframework.test.web.servlet.setup.PatternMappingFilterProxy",
     "org.springframework.mock.web.MockBodyContent",
     "org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultListBodySpec",
     "org.springframework.test.web.servlet.MockMvc$1",
     "org.springframework.test.context.support.ActiveProfilesUtils",
     "org.springframework.test.web.reactive.server.JsonPathAssertions",
     "org.springframework.test.web.servlet.TestDispatcherServlet$2",
     "org.springframework.test.util.JsonPathExpectationsHelper",
     "org.springframework.test.web.servlet.TestDispatcherServlet$1",
     "org.springframework.mock.jndi.SimpleNamingContext$BindingEnumeration",
     "org.springframework.test.jdbc.JdbcTestUtils",
     "org.springframework.test.web.reactive.server.MockServerConfigurer",
     "org.springframework.mock.web.MockPart",
     "org.springframework.test.context.junit4.statements.SpringFailOnTimeout",
     "org.springframework.test.util.XmlExpectationsHelper$XmlUnitDiff",
     "org.springframework.test.context.junit4.SpringRunner",
     "org.springframework.test.web.servlet.setup.MockMvcConfigurer",
     "org.springframework.test.context.jdbc.SqlMergeMode",
     "org.springframework.test.web.servlet.MockMvcResultHandlersDsl",
     "org.springframework.mock.web.server.package-info",
     "org.springframework.mock.jndi.SimpleNamingContext$1",
     "org.springframework.test.web.client.ResponseActions",
     "org.springframework.test.web.servlet.ResultActionsDsl",
     "org.springframework.test.context.web.socket.package-info",
     "org.springframework.mock.web.MockPageContext",
     "org.springframework.test.context.support.DirtiesContextTestExecutionListener",
     "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks",
     "org.springframework.test.web.servlet.result.MockMvcResultMatchers",
     "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder$StaticViewResolver",
     "org.springframework.test.context.BootstrapUtils",
     "org.springframework.test.web.reactive.server.package-info",
     "org.springframework.test.web.servlet.result.package-info",
     "org.springframework.mock.web.MockCookie",
     "org.springframework.test.web.client.ExpectedCount",
     "org.springframework.test.web.servlet.htmlunit.MockWebResponseBuilder",
     "org.springframework.test.web.servlet.ResultHandler",
     "org.springframework.test.context.event.BeforeTestClassEvent",
     "org.springframework.test.context.jdbc.SqlGroup",
     "org.springframework.test.web.client.match.MockRestRequestMatchers",
     "org.springframework.test.web.client.response.package-info",
     "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder$1",
     "org.springframework.test.context.cache.ContextCache",
     "org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder",
     "org.springframework.mock.web.MockFilterChain",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$options$1",
     "org.springframework.test.web.servlet.MockMvcExtensionsKt$options$2",
     "org.springframework.test.web.servlet.htmlunit.WebRequestMatcher",
     "org.springframework.test.util.AopTestUtils",
     "org.springframework.test.web.client.response.MockRestResponseCreators",
     "org.springframework.test.web.servlet.result.FlashAttributeResultMatchers",
     "org.springframework.test.web.servlet.setup.SharedHttpSessionConfigurer",
     "org.springframework.test.web.client.match.XpathRequestMatchers$1",
     "org.springframework.test.web.client.match.XpathRequestMatchers$3",
     "org.springframework.test.web.client.match.XpathRequestMatchers$2",
     "org.springframework.mock.web.MockFilterChain$1",
     "org.springframework.test.web.reactive.server.DefaultControllerSpec$1",
     "org.springframework.test.annotation.DirtiesContext$HierarchyMode",
     "org.springframework.test.context.ContextCustomizer",
     "org.springframework.test.web.client.match.XpathRequestMatchers$5",
     "org.springframework.test.web.client.match.XpathRequestMatchers$4",
     "org.springframework.test.web.client.match.XpathRequestMatchers$7",
     "org.springframework.test.web.client.match.XpathRequestMatchers$6",
     "org.springframework.test.web.client.match.XpathRequestMatchers$9",
     "org.springframework.test.web.reactive.server.WebTestClientExtensionsKt$returnResult$1",
     "org.springframework.test.web.client.match.XpathRequestMatchers$8",
     "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks",
     "org.springframework.test.context.jdbc.MergedSqlConfig",
     "org.springframework.test.util.XpathExpectationsHelper",
     "org.springframework.test.context.support.TestConstructorUtils",
     "org.springframework.test.web.servlet.DispatcherServletCustomizer",
     "org.springframework.test.web.client.UnorderedRequestExpectationManager",
     "org.springframework.test.web.client.AbstractRequestExpectationManager"
    ],
    "usedTypes": [
     "org.springframework.test.util.ReflectionTestUtils",
     "org.springframework.test.web.servlet.result.StatusResultMatchers",
     "org.springframework.mock.web.MockHttpServletRequest",
     "org.springframework.test.web.servlet.result.MockMvcResultMatchers",
     "org.springframework.test.web.servlet.request.MockMvcRequestBuilders",
     "org.springframework.test.web.servlet.ResultActions",
     "org.springframework.test.web.servlet.MockMvc",
     "org.springframework.test.context.junit4.SpringJUnit4ClassRunner",
     "org.springframework.test.web.servlet.setup.MockMvcBuilders",
     "org.springframework.test.context.ContextConfiguration",
     "org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder",
     "org.springframework.mock.web.MockServletContext",
     "org.springframework.mock.env.MockEnvironment"
    ],
    "usageRatio": 0.02813852813852814,
    "children": []
   },
   {
    "id": "org.slf4j:slf4j-api:jar:1.7.26:compile",
    "coordinates": "org.slf4j:slf4j-api:1.7.26",
    "groupId": "org.slf4j",
    "artifactId": "slf4j-api",
    "version": "1.7.26",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 41139,
    "type": "inherited",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "org.slf4j.LoggerFactory",
     "org.slf4j.helpers.SubstituteLogger",
     "org.slf4j.MarkerFactory",
     "org.slf4j.event.EventConstants",
     "org.slf4j.spi.MarkerFactoryBinder",
     "org.slf4j.spi.MDCAdapter",
     "org.slf4j.spi.LocationAwareLogger",
     "org.slf4j.MDC$MDCCloseable",
     "org.slf4j.helpers.Util",
     "org.slf4j.helpers.BasicMarkerFactory",
     "org.slf4j.event.Level",
     "org.slf4j.helpers.Util$1",
     "org.slf4j.helpers.NOPLoggerFactory",
     "org.slf4j.event.LoggingEvent",
     "org.slf4j.IMarkerFactory",
     "org.slf4j.helpers.MessageFormatter",
     "org.slf4j.event.EventRecodingLogger",
     "org.slf4j.helpers.BasicMDCAdapter",
     "org.slf4j.Logger",
     "org.slf4j.spi.LoggerFactoryBinder",
     "org.slf4j.helpers.FormattingTuple",
     "org.slf4j.helpers.BasicMDCAdapter$1",
     "org.slf4j.helpers.SubstituteLoggerFactory",
     "org.slf4j.helpers.NOPMDCAdapter",
     "org.slf4j.event.SubstituteLoggingEvent",
     "org.slf4j.helpers.NOPLogger",
     "org.slf4j.Marker",
     "org.slf4j.MDC",
     "org.slf4j.MDC$1",
     "org.slf4j.helpers.MarkerIgnoringBase",
     "org.slf4j.helpers.BasicMarker",
     "org.slf4j.helpers.NamedLoggerBase",
     "org.slf4j.helpers.Util$ClassContextSecurityManager",
     "org.slf4j.ILoggerFactory"
    ],
    "usedTypes": [
     "org.slf4j.Logger",
     "org.slf4j.LoggerFactory"
    ],
    "usageRatio": 0.058823529411764705,
    "children": []
   },
   {
    "id": "ch.qos.logback:logback-classic:jar:1.2.3:test",
    "coordinates": "ch.qos.logback:logback-classic:1.2.3",
    "groupId": "ch.qos.logback",
    "artifactId": "logback-classic",
    "version": "1.2.3",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 290339,
    "type": "inherited",
    "status": "bloated",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "ch.qos.logback.classic.turbo.MatchingFilter",
     "ch.qos.logback.classic.spi.ILoggingEvent",
     "ch.qos.logback.classic.filter.ThresholdFilter",
     "ch.qos.logback.classic.layout.TTLLLayout",
     "ch.qos.logback.classic.net.SocketReceiver",
     "ch.qos.logback.classic.spi.STEUtil",
     "ch.qos.logback.classic.db.names.ColumnName",
     "ch.qos.logback.classic.pattern.FileOfCallerConverter",
     "ch.qos.logback.classic.pattern.LevelConverter",
     "ch.qos.logback.classic.pattern.LineSeparatorConverter",
     "ch.qos.logback.classic.gaffer.ComponentDelegate",
     "ch.qos.logback.classic.selector.ContextJNDISelector",
     "ch.qos.logback.classic.gaffer.GafferUtil",
     "ch.qos.logback.classic.ClassicConstants",
     "ch.qos.logback.classic.pattern.PropertyConverter",
     "ch.qos.logback.classic.db.DBHelper",
     "ch.qos.logback.classic.helpers.MDCInsertingServletFilter",
     "ch.qos.logback.classic.gaffer.PropertyUtil$_upperCaseFirstLetter_closure1",
     "ch.qos.logback.classic.filter.LevelFilter",
     "ch.qos.logback.classic.html.DefaultCssBuilder",
     "ch.qos.logback.classic.joran.action.LoggerAction",
     "ch.qos.logback.classic.spi.IThrowableProxy",
     "ch.qos.logback.classic.gaffer.ConfigurationDelegate",
     "ch.qos.logback.classic.joran.action.LoggerContextListenerAction",
     "ch.qos.logback.classic.net.SSLSocketAppender",
     "ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter",
     "ch.qos.logback.classic.gaffer.AppenderDelegate$_closure1",
     "ch.qos.logback.classic.pattern.NamedConverter",
     "ch.qos.logback.classic.util.ContextInitializer",
     "ch.qos.logback.classic.spi.LoggerRemoteView",
     "ch.qos.logback.classic.spi.PlatformInfo",
     "ch.qos.logback.classic.turbo.DynamicThresholdFilter",
     "ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter",
     "ch.qos.logback.classic.html.DefaultThrowableRenderer",
     "ch.qos.logback.classic.gaffer.ConfigurationDelegate$_copyContributions_closure2",
     "ch.qos.logback.classic.util.LevelToSyslogSeverity",
     "ch.qos.logback.classic.net.SimpleSocketServer",
     "ch.qos.logback.classic.Logger",
     "ch.qos.logback.classic.pattern.DateConverter",
     "ch.qos.logback.classic.selector.servlet.LoggerContextFilter",
     "ch.qos.logback.classic.pattern.LoggerConverter",
     "ch.qos.logback.classic.net.server.RemoteAppenderServerRunner",
     "ch.qos.logback.classic.pattern.ThrowableHandlingConverter",
     "ch.qos.logback.classic.db.DBAppender",
     "ch.qos.logback.classic.util.EnvUtil",
     "ch.qos.logback.classic.pattern.ContextNameConverter",
     "ch.qos.logback.classic.turbo.MDCFilter",
     "ch.qos.logback.classic.db.names.TableName",
     "ch.qos.logback.classic.net.server.RemoteAppenderServerListener",
     "ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator",
     "ch.qos.logback.classic.LoggerContext",
     "ch.qos.logback.classic.spi.Configurator",
     "ch.qos.logback.classic.spi.LoggerContextVO",
     "ch.qos.logback.classic.turbo.LRUMessageCache",
     "ch.qos.logback.classic.pattern.ClassicConverter",
     "ch.qos.logback.classic.pattern.LocalSequenceNumberConverter",
     "ch.qos.logback.classic.joran.ReconfigureOnChangeTaskListener",
     "ch.qos.logback.classic.pattern.EnsureExceptionHandling",
     "ch.qos.logback.classic.util.ContextSelectorStaticBinder",
     "ch.qos.logback.classic.gaffer.GafferConfigurator",
     "ch.qos.logback.classic.joran.action.ConfigurationAction",
     "ch.qos.logback.classic.spi.StackTraceElementProxy",
     "ch.qos.logback.classic.net.server.ServerSocketReceiver",
     "ch.qos.logback.classic.net.server.RemoteAppenderStreamClient",
     "ch.qos.logback.classic.net.server.SSLServerSocketAppender",
     "ch.qos.logback.classic.pattern.MarkerConverter",
     "ch.qos.logback.classic.util.LogbackMDCAdapter",
     "ch.qos.logback.classic.servlet.LogbackServletContainerInitializer",
     "ch.qos.logback.classic.util.DefaultNestedComponentRules",
     "ch.qos.logback.classic.boolex.GEventEvaluator",
     "ch.qos.logback.classic.joran.action.RootLoggerAction",
     "ch.qos.logback.classic.sift.ContextBasedDiscriminator",
     "ch.qos.logback.classic.pattern.MethodOfCallerConverter",
     "ch.qos.logback.classic.net.SocketNode",
     "ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter",
     "ch.qos.logback.classic.pattern.ThrowableProxyConverter",
     "ch.qos.logback.classic.boolex.IEvaluator",
     "ch.qos.logback.classic.boolex.EvaluatorTemplate",
     "ch.qos.logback.classic.db.names.SimpleDBNameResolver",
     "ch.qos.logback.classic.gaffer.PropertyUtil",
     "ch.qos.logback.classic.db.names.DBNameResolver",
     "ch.qos.logback.classic.jmx.MBeanUtil",
     "ch.qos.logback.classic.joran.ReconfigureOnChangeTask",
     "ch.qos.logback.classic.gaffer.ConfigurationContributor",
     "ch.qos.logback.classic.spi.CallerData",
     "org.slf4j.impl.StaticMarkerBinder",
     "ch.qos.logback.classic.spi.LoggerContextAwareBase",
     "ch.qos.logback.classic.pattern.Abbreviator",
     "ch.qos.logback.classic.pattern.Util",
     "ch.qos.logback.classic.net.server.HardenedLoggingEventInputStream",
     "ch.qos.logback.classic.joran.action.ContextNameAction",
     "ch.qos.logback.classic.spi.LoggerContextListener",
     "ch.qos.logback.classic.turbo.TurboFilter",
     "ch.qos.logback.classic.joran.JoranConfigurator",
     "ch.qos.logback.classic.joran.action.JMXConfiguratorAction",
     "ch.qos.logback.classic.net.SMTPAppender",
     "ch.qos.logback.classic.boolex.JaninoEventEvaluator",
     "ch.qos.logback.classic.joran.action.EvaluatorAction",
     "ch.qos.logback.classic.db.SQLBuilder",
     "ch.qos.logback.classic.pattern.ThreadConverter",
     "ch.qos.logback.classic.jmx.JMXConfiguratorMBean",
     "ch.qos.logback.classic.selector.ContextSelector",
     "ch.qos.logback.classic.spi.ThrowableProxyUtil",
     "ch.qos.logback.classic.net.SimpleSSLSocketServer",
     "ch.qos.logback.classic.spi.ClassPackagingData",
     "ch.qos.logback.classic.spi.LoggingEvent",
     "ch.qos.logback.classic.net.SyslogAppender",
     "ch.qos.logback.classic.gaffer.NestingType",
     "ch.qos.logback.classic.AsyncAppender",
     "ch.qos.logback.classic.spi.ThrowableProxyVO",
     "ch.qos.logback.classic.turbo.MarkerFilter",
     "ch.qos.logback.classic.util.JNDIUtil",
     "ch.qos.logback.classic.pattern.NopThrowableInformationConverter",
     "ch.qos.logback.classic.util.StatusViaSLF4JLoggerFactory",
     "ch.qos.logback.classic.spi.LoggerComparator",
     "ch.qos.logback.classic.pattern.RelativeTimeConverter",
     "ch.qos.logback.classic.selector.DefaultContextSelector",
     "ch.qos.logback.classic.net.LoggingEventPreSerializationTransformer",
     "ch.qos.logback.classic.joran.action.ConsolePluginAction",
     "ch.qos.logback.classic.net.SSLSocketReceiver",
     "ch.qos.logback.classic.gaffer.GafferConfigurator$_run_closure1",
     "ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
     "ch.qos.logback.classic.html.UrlCssBuilder",
     "ch.qos.logback.classic.net.SocketAcceptor",
     "ch.qos.logback.classic.db.names.DefaultDBNameResolver",
     "ch.qos.logback.classic.jul.LevelChangePropagator",
     "ch.qos.logback.classic.pattern.LineOfCallerConverter",
     "ch.qos.logback.classic.sift.AppenderFactoryUsingJoran",
     "ch.qos.logback.classic.sift.SiftingAppender",
     "ch.qos.logback.classic.pattern.CallerDataConverter",
     "ch.qos.logback.classic.sift.JNDIBasedContextDiscriminator",
     "ch.qos.logback.classic.pattern.MDCConverter",
     "ch.qos.logback.classic.html.HTMLLayout",
     "ch.qos.logback.classic.pattern.ClassNameOnlyAbbreviator",
     "ch.qos.logback.classic.util.LoggerNameUtil",
     "ch.qos.logback.classic.joran.action.ReceiverAction",
     "ch.qos.logback.classic.net.server.RemoteAppenderClient",
     "ch.qos.logback.classic.gaffer.ConfigurationDelegate$_logger_closure1",
     "ch.qos.logback.classic.PatternLayout",
     "ch.qos.logback.classic.sift.SiftingJoranConfigurator",
     "ch.qos.logback.classic.jul.JULHelper",
     "ch.qos.logback.classic.log4j.XMLLayout",
     "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
     "ch.qos.logback.classic.util.CopyOnInheritThreadLocal",
     "ch.qos.logback.classic.pattern.MessageConverter",
     "ch.qos.logback.classic.boolex.OnMarkerEvaluator",
     "ch.qos.logback.classic.spi.ThrowableProxy",
     "ch.qos.logback.classic.boolex.OnErrorEvaluator",
     "ch.qos.logback.classic.pattern.ClassOfCallerConverter",
     "ch.qos.logback.classic.spi.TurboFilterList",
     "ch.qos.logback.classic.jmx.JMXConfigurator",
     "ch.qos.logback.classic.ViewStatusMessagesServlet",
     "ch.qos.logback.classic.spi.LoggingEventVO",
     "ch.qos.logback.classic.joran.action.InsertFromJNDIAction",
     "ch.qos.logback.classic.turbo.MDCValueLevelPair",
     "ch.qos.logback.classic.spi.LoggerContextAware",
     "ch.qos.logback.classic.joran.action.LevelAction",
     "ch.qos.logback.classic.gaffer.AppenderDelegate",
     "ch.qos.logback.classic.pattern.SyslogStartConverter",
     "org.slf4j.impl.StaticLoggerBinder",
     "ch.qos.logback.classic.servlet.LogbackServletContextListener",
     "ch.qos.logback.classic.spi.PackagingDataCalculator",
     "ch.qos.logback.classic.spi.EventArgUtil",
     "org.slf4j.impl.StaticMDCBinder",
     "ch.qos.logback.classic.net.server.ServerSocketAppender",
     "ch.qos.logback.classic.net.SocketAppender",
     "ch.qos.logback.classic.net.server.SSLServerSocketReceiver",
     "ch.qos.logback.classic.sift.MDCBasedDiscriminator",
     "ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread",
     "ch.qos.logback.classic.Level",
     "ch.qos.logback.classic.selector.servlet.ContextDetachingSCL",
     "ch.qos.logback.classic.sift.SiftAction",
     "ch.qos.logback.classic.turbo.DuplicateMessageFilter",
     "ch.qos.logback.classic.net.ReceiverBase",
     "ch.qos.logback.classic.BasicConfigurator"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "ch.qos.logback:logback-core:jar:1.2.3:test",
      "coordinates": "ch.qos.logback:logback-core:1.2.3",
      "groupId": "ch.qos.logback",
      "artifactId": "logback-core",
      "version": "1.2.3",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 471901,
      "type": "transitive",
      "status": "bloated",
      "parent": "ch.qos.logback:logback-classic:jar:1.2.3:test",
      "allTypes": [
       "ch.qos.logback.core.joran.util.beans.BeanUtil",
       "ch.qos.logback.core.db.dialect.DBUtil$1",
       "ch.qos.logback.core.net.SMTPAppenderBase",
       "ch.qos.logback.core.net.SyslogOutputStream",
       "ch.qos.logback.core.pattern.color.BlackCompositeConverter",
       "ch.qos.logback.core.util.PropertySetterException",
       "ch.qos.logback.core.joran.event.InPlayListener",
       "ch.qos.logback.core.boolex.JaninoEventEvaluatorBase",
       "ch.qos.logback.core.FileAppender",
       "ch.qos.logback.core.joran.action.ContextPropertyAction",
       "ch.qos.logback.core.net.server.ConcurrentServerRunner$1",
       "ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState",
       "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP",
       "ch.qos.logback.core.joran.spi.EventPlayer",
       "ch.qos.logback.core.joran.util.beans.BeanDescriptionFactory",
       "ch.qos.logback.core.joran.action.NOPAction",
       "ch.qos.logback.core.spi.CyclicBufferTracker",
       "ch.qos.logback.core.util.LocationUtil",
       "ch.qos.logback.core.db.dialect.SQLDialect",
       "ch.qos.logback.core.rolling.helper.MonoTypedConverter",
       "ch.qos.logback.core.joran.conditional.ThenAction",
       "ch.qos.logback.core.joran.spi.NoAutoStart",
       "ch.qos.logback.core.net.ssl.SSL",
       "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
       "ch.qos.logback.core.status.OnErrorConsoleStatusListener",
       "ch.qos.logback.core.util.EnvUtil",
       "ch.qos.logback.core.subst.Parser$1",
       "ch.qos.logback.core.util.InvocationGate",
       "ch.qos.logback.core.encoder.NonClosableInputStream",
       "ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean",
       "ch.qos.logback.core.spi.ContextAwareImpl",
       "ch.qos.logback.core.pattern.ConverterUtil",
       "ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy",
       "ch.qos.logback.core.encoder.ByteArrayUtil",
       "ch.qos.logback.core.joran.GenericConfigurator",
       "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilder",
       "ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction",
       "ch.qos.logback.core.rolling.helper.RollingCalendar",
       "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
       "ch.qos.logback.core.joran.action.ActionConst",
       "ch.qos.logback.core.net.server.RemoteReceiverClient",
       "ch.qos.logback.core.joran.event.BodyEvent",
       "ch.qos.logback.core.status.ErrorStatus",
       "ch.qos.logback.core.boolex.Matcher",
       "ch.qos.logback.core.subst.Node",
       "ch.qos.logback.core.pattern.PostCompileProcessor",
       "ch.qos.logback.core.pattern.IdentityCompositeConverter",
       "ch.qos.logback.core.joran.conditional.Condition",
       "ch.qos.logback.core.subst.Tokenizer$1",
       "ch.qos.logback.core.boolex.EvaluationException",
       "ch.qos.logback.core.hook.ShutdownHook",
       "ch.qos.logback.core.pattern.FormatInfo",
       "ch.qos.logback.core.rolling.helper.Compressor$1",
       "ch.qos.logback.core.boolex.EventEvaluatorBase",
       "ch.qos.logback.core.rolling.TriggeringPolicy",
       "ch.qos.logback.core.util.Loader",
       "ch.qos.logback.core.joran.util.StringToObjectConverter",
       "ch.qos.logback.core.rolling.RollingPolicy",
       "ch.qos.logback.core.pattern.CompositeConverter",
       "ch.qos.logback.core.util.Duration",
       "ch.qos.logback.core.util.OptionHelper",
       "ch.qos.logback.core.pattern.color.RedCompositeConverter",
       "ch.qos.logback.core.rolling.helper.Compressor",
       "ch.qos.logback.core.spi.AbstractComponentTracker",
       "ch.qos.logback.core.spi.ContextAware",
       "ch.qos.logback.core.CoreConstants",
       "ch.qos.logback.core.util.CharSequenceToRegexMapper",
       "ch.qos.logback.core.util.ContextUtil",
       "ch.qos.logback.core.filter.Filter",
       "ch.qos.logback.core.helpers.CyclicBuffer",
       "ch.qos.logback.core.pattern.LiteralConverter",
       "ch.qos.logback.core.pattern.PatternLayoutBase",
       "ch.qos.logback.core.spi.DeferredProcessingAware",
       "ch.qos.logback.core.db.JNDIConnectionSource",
       "ch.qos.logback.core.joran.spi.RuleStore",
       "ch.qos.logback.core.spi.AppenderAttachableImpl",
       "ch.qos.logback.core.net.SyslogAppenderBase",
       "ch.qos.logback.core.joran.action.ShutdownHookAction",
       "ch.qos.logback.core.pattern.util.AsIsEscapeUtil",
       "ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy",
       "ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover$ArhiveRemoverRunnable",
       "ch.qos.logback.core.joran.action.IADataForComplexProperty",
       "ch.qos.logback.core.joran.util.beans.BeanDescriptionCache",
       "ch.qos.logback.core.util.FixedDelay",
       "ch.qos.logback.core.util.Loader$1",
       "ch.qos.logback.core.util.Loader$2",
       "ch.qos.logback.core.net.server.SSLServerSocketAppenderBase",
       "ch.qos.logback.core.pattern.util.IEscapeUtil",
       "ch.qos.logback.core.pattern.ReplacingCompositeConverter",
       "ch.qos.logback.core.joran.conditional.PropertyWrapperForScripts",
       "ch.qos.logback.core.boolex.EventEvaluator",
       "ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran",
       "ch.qos.logback.core.joran.conditional.IfAction",
       "ch.qos.logback.core.AsyncAppenderBase$Worker",
       "ch.qos.logback.core.joran.util.PropertySetter$1",
       "ch.qos.logback.core.net.ssl.SSLConfiguration",
       "ch.qos.logback.core.status.Status",
       "ch.qos.logback.core.ConsoleAppender",
       "ch.qos.logback.core.Context",
       "ch.qos.logback.core.joran.action.PropertyAction",
       "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy",
       "ch.qos.logback.core.AsyncAppenderBase",
       "ch.qos.logback.core.net.ObjectWriter",
       "ch.qos.logback.core.util.AggregationType",
       "ch.qos.logback.core.db.dialect.H2Dialect",
       "ch.qos.logback.core.rolling.RollingPolicyBase",
       "ch.qos.logback.core.UnsynchronizedAppenderBase",
       "ch.qos.logback.core.joran.event.EndEvent",
       "ch.qos.logback.core.OutputStreamAppender",
       "ch.qos.logback.core.spi.FilterAttachable",
       "ch.qos.logback.core.rolling.helper.ArchiveRemover",
       "ch.qos.logback.core.status.StatusBase",
       "ch.qos.logback.core.subst.Node$Type",
       "ch.qos.logback.core.net.DefaultSocketConnector$1",
       "ch.qos.logback.core.pattern.color.ANSIConstants",
       "ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport",
       "ch.qos.logback.core.rolling.RolloverFailure",
       "ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator",
       "ch.qos.logback.core.pattern.color.BoldMagentaCompositeConverter",
       "ch.qos.logback.core.status.OnPrintStreamStatusListenerBase",
       "ch.qos.logback.core.pattern.color.BoldRedCompositeConverter",
       "ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules",
       "ch.qos.logback.core.sift.AbstractDiscriminator",
       "ch.qos.logback.core.pattern.color.CyanCompositeConverter",
       "ch.qos.logback.core.joran.util.ConfigurationWatchListUtil",
       "ch.qos.logback.core.db.BindDataSourceToJNDIAction",
       "ch.qos.logback.core.db.dialect.SybaseSqlAnywhereDialect",
       "ch.qos.logback.core.rolling.helper.CompressionMode",
       "ch.qos.logback.core.db.DataSourceConnectionSource",
       "ch.qos.logback.core.status.StatusManager",
       "ch.qos.logback.core.util.StringCollectionUtil",
       "ch.qos.logback.core.util.StatusPrinter",
       "ch.qos.logback.core.joran.node.ComponentNode",
       "ch.qos.logback.core.pattern.color.BoldYellowCompositeConverter",
       "ch.qos.logback.core.joran.spi.ActionException",
       "ch.qos.logback.core.LifeCycleManager",
       "ch.qos.logback.core.property.FileExistsPropertyDefiner",
       "ch.qos.logback.core.joran.action.IncludeAction",
       "ch.qos.logback.core.helpers.ThrowableToStringArray",
       "ch.qos.logback.core.pattern.FormattingConverter",
       "ch.qos.logback.core.sift.AppenderTracker",
       "ch.qos.logback.core.spi.FilterReply",
       "ch.qos.logback.core.util.TimeUtil",
       "ch.qos.logback.core.pattern.color.BoldCyanCompositeConverter",
       "ch.qos.logback.core.net.SocketConnector",
       "ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy",
       "ch.qos.logback.core.util.DefaultInvocationGate",
       "ch.qos.logback.core.joran.spi.NoAutoStartUtil",
       "ch.qos.logback.core.joran.conditional.ThenOrElseActionBase",
       "ch.qos.logback.core.net.AbstractSSLSocketAppender",
       "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP$Usage",
       "ch.qos.logback.core.rolling.helper.TokenConverter",
       "ch.qos.logback.core.db.dialect.SQLiteDialect",
       "ch.qos.logback.core.sift.DefaultDiscriminator",
       "ch.qos.logback.core.joran.event.StartEvent",
       "ch.qos.logback.core.db.dialect.PostgreSQLDialect",
       "ch.qos.logback.core.subst.Node$1",
       "ch.qos.logback.core.sift.AppenderFactory",
       "ch.qos.logback.core.util.ExecutorServiceUtil$1",
       "ch.qos.logback.core.Appender",
       "ch.qos.logback.core.html.CssBuilder",
       "ch.qos.logback.core.net.ssl.ConfigurableSSLSocketFactory",
       "ch.qos.logback.core.pattern.Converter",
       "ch.qos.logback.core.joran.spi.ConsoleTarget$1",
       "ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean",
       "ch.qos.logback.core.net.ssl.SSLParametersConfiguration",
       "ch.qos.logback.core.joran.spi.ConsoleTarget$2",
       "ch.qos.logback.core.pattern.parser.Node",
       "ch.qos.logback.core.util.CachingDateFormatter",
       "ch.qos.logback.core.joran.spi.ElementPath",
       "ch.qos.logback.core.joran.action.NewRuleAction",
       "ch.qos.logback.core.joran.action.NestedBasicPropertyIA$1",
       "ch.qos.logback.core.joran.action.ActionUtil$1",
       "ch.qos.logback.core.net.server.Client",
       "ch.qos.logback.core.pattern.parser.TokenStream",
       "ch.qos.logback.core.spi.AppenderAttachable",
       "ch.qos.logback.core.spi.PreSerializationTransformer",
       "ch.qos.logback.core.joran.event.stax.StartEvent",
       "ch.qos.logback.core.joran.spi.JoranException",
       "ch.qos.logback.core.pattern.parser.SimpleKeywordNode",
       "ch.qos.logback.core.subst.Token$Type",
       "ch.qos.logback.core.rolling.FixedWindowRollingPolicy",
       "ch.qos.logback.core.joran.action.StatusListenerAction",
       "ch.qos.logback.core.pattern.color.WhiteCompositeConverter",
       "ch.qos.logback.core.joran.action.ParamAction",
       "ch.qos.logback.core.net.ssl.ConfigurableSSLServerSocketFactory",
       "ch.qos.logback.core.rolling.helper.RollingCalendar$1",
       "ch.qos.logback.core.helpers.NOPAppender",
       "ch.qos.logback.core.pattern.util.RestrictedEscapeUtil",
       "ch.qos.logback.core.html.HTMLLayoutBase",
       "ch.qos.logback.core.joran.event.stax.StaxEventRecorder",
       "ch.qos.logback.core.joran.action.DefinePropertyAction",
       "ch.qos.logback.core.util.ExecutorServiceUtil",
       "ch.qos.logback.core.net.AbstractSocketAppender",
       "ch.qos.logback.core.net.server.RemoteReceiverServerListener",
       "ch.qos.logback.core.pattern.parser.OptionTokenizer",
       "ch.qos.logback.core.net.ObjectWriterFactory",
       "ch.qos.logback.core.joran.spi.ConfigurationWatchList",
       "ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover",
       "ch.qos.logback.core.util.ContentTypeUtil",
       "ch.qos.logback.core.joran.action.NestedBasicPropertyIA",
       "ch.qos.logback.core.net.server.RemoteReceiverServerRunner",
       "ch.qos.logback.core.status.WarnStatus",
       "ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase",
       "ch.qos.logback.core.LogbackException",
       "ch.qos.logback.core.spi.PropertyDefiner",
       "ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil",
       "ch.qos.logback.core.status.NopStatusListener",
       "ch.qos.logback.core.db.DBAppenderBase",
       "ch.qos.logback.core.read.ListAppender",
       "ch.qos.logback.core.subst.NodeToStringTransformer$1",
       "ch.qos.logback.core.net.server.AbstractServerSocketAppender$1",
       "ch.qos.logback.core.net.HardenedObjectInputStream",
       "ch.qos.logback.core.pattern.util.RegularEscapeUtil",
       "ch.qos.logback.core.joran.spi.Interpreter",
       "ch.qos.logback.core.net.SocketConnector$ExceptionHandler",
       "ch.qos.logback.core.status.StatusListenerAsList",
       "ch.qos.logback.core.subst.Tokenizer$TokenizerState",
       "ch.qos.logback.core.joran.conditional.IfState",
       "ch.qos.logback.core.pattern.parser.CompositeNode",
       "ch.qos.logback.core.spi.LifeCycle",
       "ch.qos.logback.core.hook.ShutdownHookBase",
       "ch.qos.logback.core.joran.spi.DefaultClass",
       "ch.qos.logback.core.net.ssl.SSLConfigurable",
       "ch.qos.logback.core.rolling.helper.DateTokenConverter",
       "ch.qos.logback.core.subst.Token",
       "ch.qos.logback.core.joran.event.SaxEventRecorder",
       "ch.qos.logback.core.net.server.ServerSocketListener",
       "ch.qos.logback.core.rolling.RollingFileAppender",
       "ch.qos.logback.core.joran.action.ActionUtil",
       "ch.qos.logback.core.util.COWArrayList",
       "ch.qos.logback.core.net.server.ServerListener",
       "ch.qos.logback.core.net.ssl.SSLComponent",
       "ch.qos.logback.core.db.dialect.DBUtil",
       "ch.qos.logback.core.joran.action.IADataForBasicProperty",
       "ch.qos.logback.core.recovery.ResilientOutputStreamBase",
       "ch.qos.logback.core.rolling.helper.FileStoreUtil",
       "ch.qos.logback.core.net.SyslogConstants",
       "ch.qos.logback.core.rolling.helper.SizeAndTimeBasedArchiveRemover",
       "ch.qos.logback.core.net.server.ClientVisitor",
       "ch.qos.logback.core.html.IThrowableRenderer",
       "ch.qos.logback.core.spi.ScanException",
       "ch.qos.logback.core.rolling.helper.PeriodicityType",
       "ch.qos.logback.core.LayoutBase",
       "ch.qos.logback.core.AppenderBase",
       "ch.qos.logback.core.pattern.color.GreenCompositeConverter",
       "ch.qos.logback.core.recovery.ResilientFileOutputStream",
       "ch.qos.logback.core.net.QueueFactory",
       "ch.qos.logback.core.net.SMTPAppenderBase$SenderRunnable",
       "ch.qos.logback.core.util.SystemInfo",
       "ch.qos.logback.core.util.IncompatibleClassException",
       "ch.qos.logback.core.hook.DelayingShutdownHook",
       "ch.qos.logback.core.sift.SiftingAppenderBase",
       "ch.qos.logback.core.net.ssl.SSLConfigurableSocket",
       "ch.qos.logback.core.joran.action.ImplicitAction",
       "ch.qos.logback.core.pattern.parser.Parser",
       "ch.qos.logback.core.PropertyDefinerBase",
       "ch.qos.logback.core.pattern.color.BlueCompositeConverter",
       "ch.qos.logback.core.net.AutoFlushingObjectWriter",
       "ch.qos.logback.core.status.ViewStatusMessagesServletBase",
       "ch.qos.logback.core.spi.LogbackLock",
       "ch.qos.logback.core.joran.action.ActionUtil$Scope",
       "ch.qos.logback.core.pattern.color.BoldGreenCompositeConverter",
       "ch.qos.logback.core.filter.AbstractMatcherFilter",
       "ch.qos.logback.core.subst.Tokenizer",
       "ch.qos.logback.core.util.CloseUtil",
       "ch.qos.logback.core.recovery.ResilientSyslogOutputStream",
       "ch.qos.logback.core.joran.event.stax.BodyEvent",
       "ch.qos.logback.core.pattern.parser.Compiler",
       "ch.qos.logback.core.spi.ContextAwareBase",
       "ch.qos.logback.core.status.OnConsoleStatusListener",
       "ch.qos.logback.core.util.DatePatternToRegexUtil",
       "ch.qos.logback.core.spi.FilterAttachableImpl",
       "ch.qos.logback.core.db.DBHelper",
       "ch.qos.logback.core.pattern.color.GrayCompositeConverter",
       "ch.qos.logback.core.joran.action.ConversionRuleAction",
       "ch.qos.logback.core.util.DelayStrategy",
       "ch.qos.logback.core.util.DynamicClassLoadingException",
       "ch.qos.logback.core.util.FileUtil",
       "ch.qos.logback.core.net.server.RemoteReceiverStreamClient",
       "ch.qos.logback.core.encoder.Encoder",
       "ch.qos.logback.core.util.InterruptUtil",
       "ch.qos.logback.core.ContextBase",
       "ch.qos.logback.core.filter.EvaluatorFilter",
       "ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper",
       "ch.qos.logback.core.subst.Parser",
       "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
       "ch.qos.logback.core.db.dialect.MySQLDialect",
       "ch.qos.logback.core.net.server.ConcurrentServerRunner",
       "ch.qos.logback.core.pattern.color.ForegroundCompositeConverterBase",
       "ch.qos.logback.core.rolling.helper.RenameUtil",
       "ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble",
       "ch.qos.logback.core.encoder.EncoderBase",
       "ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry",
       "ch.qos.logback.core.BasicStatusManager",
       "ch.qos.logback.core.db.dialect.MsSQLDialect",
       "ch.qos.logback.core.spi.AbstractComponentTracker$2",
       "ch.qos.logback.core.status.StatusUtil",
       "ch.qos.logback.core.net.DefaultSocketConnector$ConsoleExceptionHandler",
       "ch.qos.logback.core.spi.AbstractComponentTracker$1",
       "ch.qos.logback.core.joran.conditional.ThenActionState",
       "ch.qos.logback.core.net.ssl.SecureRandomFactoryBean",
       "ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
       "ch.qos.logback.core.pattern.parser.Token",
       "ch.qos.logback.core.db.ConnectionSourceBase",
       "ch.qos.logback.core.net.AbstractSocketAppender$1",
       "ch.qos.logback.core.spi.AbstractComponentTracker$3",
       "ch.qos.logback.core.pattern.color.YellowCompositeConverter",
       "ch.qos.logback.core.db.dialect.SQLDialectCode",
       "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
       "ch.qos.logback.core.db.dialect.HSQLDBDialect",
       "ch.qos.logback.core.joran.spi.SimpleRuleStore",
       "ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover$1",
       "ch.qos.logback.core.util.FileSize",
       "ch.qos.logback.core.helpers.Transform",
       "ch.qos.logback.core.joran.spi.ConsoleTarget",
       "ch.qos.logback.core.layout.EchoLayout",
       "ch.qos.logback.core.util.CharSequenceState",
       "ch.qos.logback.core.net.LoginAuthenticator",
       "ch.qos.logback.core.rolling.helper.FileFilterUtil$3",
       "ch.qos.logback.core.rolling.helper.FileFilterUtil$2",
       "ch.qos.logback.core.rolling.helper.FileFilterUtil$1",
       "ch.qos.logback.core.joran.spi.InterpretationContext",
       "ch.qos.logback.core.pattern.DynamicConverter",
       "ch.qos.logback.core.encoder.EchoEncoder",
       "ch.qos.logback.core.recovery.RecoveryCoordinator",
       "ch.qos.logback.core.html.NOPThrowableRenderer",
       "ch.qos.logback.core.joran.action.Action",
       "ch.qos.logback.core.joran.util.PropertySetter",
       "ch.qos.logback.core.spi.PropertyContainer",
       "ch.qos.logback.core.db.dialect.OracleDialect",
       "ch.qos.logback.core.net.ssl.KeyStoreFactoryBean",
       "ch.qos.logback.core.util.StatusListenerConfigHelper",
       "ch.qos.logback.core.joran.event.stax.EndEvent",
       "ch.qos.logback.core.rolling.helper.Compressor$CompressionRunnable",
       "ch.qos.logback.core.joran.action.AppenderAction",
       "ch.qos.logback.core.spi.AbstractComponentTracker$Entry",
       "ch.qos.logback.core.pattern.parser.FormattingNode",
       "ch.qos.logback.core.net.ssl.SSLContextFactoryBean",
       "ch.qos.logback.core.rolling.helper.FileFilterUtil",
       "ch.qos.logback.core.status.InfoStatus",
       "ch.qos.logback.core.net.DefaultSocketConnector",
       "ch.qos.logback.core.property.ResourceExistsPropertyDefiner",
       "ch.qos.logback.core.joran.action.NestedComplexPropertyIA$1",
       "ch.qos.logback.core.pattern.color.BoldWhiteCompositeConverter",
       "ch.qos.logback.core.sift.SiftingJoranConfiguratorBase",
       "ch.qos.logback.core.read.CyclicBufferAppender",
       "ch.qos.logback.core.sift.Discriminator",
       "ch.qos.logback.core.rolling.TriggeringPolicyBase",
       "ch.qos.logback.core.subst.NodeToStringTransformer",
       "ch.qos.logback.core.joran.action.NestedComplexPropertyIA",
       "ch.qos.logback.core.status.StatusListener",
       "ch.qos.logback.core.net.ssl.SSLConfigurableServerSocket",
       "ch.qos.logback.core.rolling.helper.FileNamePattern",
       "ch.qos.logback.core.spi.ComponentTracker",
       "ch.qos.logback.core.db.ConnectionSource",
       "ch.qos.logback.core.net.server.AbstractServerSocketAppender",
       "ch.qos.logback.core.joran.event.stax.StaxEvent",
       "ch.qos.logback.core.pattern.SpacePadder",
       "ch.qos.logback.core.rolling.FixedWindowRollingPolicy$1",
       "ch.qos.logback.core.joran.action.TimestampAction",
       "ch.qos.logback.core.joran.util.beans.BeanDescription",
       "ch.qos.logback.core.joran.JoranConfiguratorBase",
       "ch.qos.logback.core.Layout",
       "ch.qos.logback.core.joran.conditional.ElseAction",
       "ch.qos.logback.core.joran.spi.XMLUtil",
       "ch.qos.logback.core.db.DriverManagerConnectionSource",
       "ch.qos.logback.core.pattern.parser.TokenStream$1",
       "ch.qos.logback.core.joran.spi.ElementSelector",
       "ch.qos.logback.core.pattern.color.BoldBlueCompositeConverter",
       "ch.qos.logback.core.joran.action.AppenderRefAction",
       "ch.qos.logback.core.joran.event.SaxEvent",
       "ch.qos.logback.core.net.server.ServerRunner"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     }
    ]
   },
   {
    "id": "org.projectlombok:lombok:jar:1.18.8:compile",
    "coordinates": "org.projectlombok:lombok:1.18.8",
    "groupId": "org.projectlombok",
    "artifactId": "lombok",
    "version": "1.18.8",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 1730973,
    "type": "inherited",
    "status": "used",
    "parent": "org.springframework.data:spring-data-commons:jar:2.2.0.RC3",
    "allTypes": [
     "lombok.ConfigurationKeys$50",
     "lombok.experimental.Accessors",
     "lombok.Singular",
     "lombok.extern.log4j.Log4j",
     "lombok.Cleanup",
     "lombok.RequiredArgsConstructor$AnyAnnotation",
     "lombok.ConfigurationKeys$59",
     "lombok.ConfigurationKeys$56",
     "lombok.ConfigurationKeys$55",
     "lombok.ConfigurationKeys$58",
     "lombok.ConfigurationKeys$57",
     "lombok.experimental.Helper",
     "lombok.ConfigurationKeys$52",
     "lombok.ConfigurationKeys$51",
     "lombok.ConfigurationKeys$54",
     "lombok.ConfigurationKeys$53",
     "lombok.ConfigurationKeys$61",
     "lombok.ConfigurationKeys$60",
     "lombok.launch.PatchFixesHider$ValPortal",
     "lombok.experimental.ExtensionMethod",
     "lombok.NonNull",
     "lombok.launch.AnnotationProcessorHider$ClaimingProcessor",
     "lombok.AllArgsConstructor$AnyAnnotation",
     "lombok.Getter$AnyAnnotation",
     "lombok.extern.slf4j.Slf4j",
     "lombok.ConfigurationKeys$66",
     "lombok.Builder$ObtainVia",
     "lombok.ConfigurationKeys$63",
     "lombok.ConfigurationKeys$62",
     "lombok.ConfigurationKeys$65",
     "lombok.ConfigurationKeys$64",
     "lombok.experimental.Tolerate",
     "lombok.Delegate",
     "lombok.javac.apt.Processor",
     "lombok.extern.slf4j.XSlf4j",
     "lombok.package-info",
     "lombok.experimental.UtilityClass",
     "lombok.AccessLevel",
     "lombok.launch.PatchFixesHider$Util",
     "lombok.experimental.Delegate",
     "lombok.var",
     "lombok.extern.jbosslog.JBossLog",
     "lombok.delombok.ant.Tasks$Format",
     "lombok.experimental.SuperBuilder",
     "lombok.val",
     "lombok.experimental.FieldNameConstants$Exclude",
     "lombok.extern.java.Log",
     "lombok.launch.AnnotationProcessorHider$AstModificationNotifier",
     "module-info",
     "lombok.delombok.ant.Tasks$Delombok",
     "lombok.launch.Agent",
     "lombok.NoArgsConstructor",
     "lombok.ConfigurationKeys$8",
     "lombok.launch.AnnotationProcessorHider$AstModificationNotifierData",
     "lombok.ConfigurationKeys$9",
     "lombok.ConfigurationKeys$6",
     "lombok.extern.apachecommons.CommonsLog",
     "lombok.ConfigurationKeys$7",
     "lombok.EqualsAndHashCode$Exclude",
     "lombok.SneakyThrows",
     "lombok.ConfigurationKeys$4",
     "lombok.ConfigurationKeys$5",
     "lombok.RequiredArgsConstructor",
     "lombok.experimental.Wither$AnyAnnotation",
     "lombok.experimental.Wither",
     "lombok.launch.PatchFixesHider$Delegate",
     "lombok.Builder$Default",
     "lombok.launch.AnnotationProcessorHider$AnnotationProcessor",
     "lombok.ConfigurationKeys$19",
     "lombok.ConfigurationKeys$16",
     "lombok.ConfigurationKeys$15",
     "lombok.Generated",
     "lombok.ConfigurationKeys$18",
     "lombok.ConfigurationKeys$17",
     "lombok.ConfigurationKeys$12",
     "lombok.ToString",
     "lombok.ConfigurationKeys$11",
     "lombok.ConfigurationKeys$14",
     "lombok.ConfigurationKeys$13",
     "lombok.experimental.package-info",
     "lombok.ConfigurationKeys$10",
     "lombok.Synchronized",
     "lombok.EqualsAndHashCode",
     "lombok.launch.ShadowClassLoader",
     "lombok.NoArgsConstructor$AnyAnnotation",
     "lombok.Builder",
     "lombok.ConfigurationKeys$27",
     "lombok.experimental.FieldNameConstants$Include",
     "lombok.ConfigurationKeys$26",
     "lombok.launch.PatchFixesHider$Transform",
     "lombok.ConfigurationKeys$29",
     "lombok.ConfigurationKeys$28",
     "lombok.ConfigurationKeys$23",
     "lombok.ConfigurationKeys$22",
     "lombok.ConfigurationKeys$25",
     "lombok.ToString$Include",
     "lombok.ConfigurationKeys$24",
     "lombok.Lombok",
     "lombok.ConfigurationKeys",
     "lombok.delombok.ant.Tasks",
     "lombok.ConfigurationKeys$21",
     "lombok.ConfigurationKeys$20",
     "lombok.experimental.NonFinal",
     "lombok.experimental.FieldDefaults",
     "lombok.launch.PatchFixesHider$Val",
     "lombok.Setter",
     "lombok.Getter",
     "lombok.launch.PatchFixesHider$PatchFixes",
     "lombok.EqualsAndHashCode$Include",
     "lombok.Value",
     "lombok.launch.Main",
     "lombok.ConfigurationKeys$38",
     "lombok.Setter$AnyAnnotation",
     "lombok.ToString$Exclude",
     "lombok.ConfigurationKeys$37",
     "lombok.experimental.var",
     "lombok.ConfigurationKeys$39",
     "lombok.launch.AnnotationProcessorHider",
     "lombok.ConfigurationKeys$34",
     "lombok.ConfigurationKeys$33",
     "lombok.ConfigurationKeys$36",
     "lombok.launch.PatchFixesHider$ExtensionMethod",
     "lombok.ConfigurationKeys$35",
     "lombok.ConfigurationKeys$30",
     "lombok.ConfigurationKeys$32",
     "lombok.ConfigurationKeys$31",
     "lombok.EqualsAndHashCode$AnyAnnotation",
     "lombok.extern.flogger.Flogger",
     "lombok.ConfigurationKeys$49",
     "lombok.launch.PatchFixesHider",
     "lombok.ConfigurationKeys$48",
     "lombok.experimental.PackagePrivate",
     "lombok.ConfigurationKeys$2",
     "lombok.ConfigurationKeys$45",
     "lombok.Data",
     "lombok.extern.log4j.Log4j2",
     "lombok.ConfigurationKeys$3",
     "lombok.ConfigurationKeys$44",
     "lombok.ConfigurationKeys$47",
     "lombok.ConfigurationKeys$1",
     "lombok.ConfigurationKeys$46",
     "lombok.AllArgsConstructor",
     "lombok.ConfigurationKeys$41",
     "lombok.ConfigurationKeys$40",
     "lombok.experimental.FieldNameConstants",
     "lombok.ConfigurationKeys$43",
     "lombok.ConfigurationKeys$42",
     "lombok.launch.PatchFixesHider$LombokDeps"
    ],
    "usedTypes": [
     "lombok.Generated",
     "lombok.NonNull"
    ],
    "usageRatio": 0.013513513513513514,
    "children": []
   }
  ]
 }
}