{
 "usage": {},
 "dependencies": {
  "id": "org.clojure:clojure:jar:1.8.0:null",
  "coordinates": "org.clojure:clojure:1.8.0",
  "groupId": "org.clojure",
  "artifactId": "clojure",
  "version": "1.8.0",
  "packaging": "jar",
  "omitted": false,
  "type": "unknown",
  "status": "unknown",
  "parent": "unknown",
  "allTypes": [],
  "usedTypes": [],
  "usageRatio": -1.0,
  "children": [
   {
    "id": "org.codehaus.jsr166-mirror:jsr166y:jar:1.7.0:provided",
    "coordinates": "org.codehaus.jsr166-mirror:jsr166y:1.7.0",
    "groupId": "org.codehaus.jsr166-mirror",
    "artifactId": "jsr166y",
    "version": "1.7.0",
    "scope": "provided",
    "packaging": "jar",
    "omitted": false,
    "size": 59716,
    "type": "direct",
    "status": "bloated",
    "parent": "org.clojure:clojure:jar:1.8.0",
    "allTypes": [
     "jsr166y.ForkJoinPool$ForkJoinWorkerThreadFactory",
     "jsr166y.RecursiveAction",
     "jsr166y.ForkJoinTask$1",
     "jsr166y.TransferQueue",
     "jsr166y.LinkedTransferQueue$Itr",
     "jsr166y.ForkJoinWorkerThread",
     "jsr166y.ForkJoinPool",
     "jsr166y.ForkJoinTask$ExceptionNode",
     "jsr166y.ForkJoinPool$ManagedBlocker",
     "jsr166y.ForkJoinPool$InvokeAll",
     "jsr166y.ThreadLocalRandom$1",
     "jsr166y.RecursiveTask",
     "jsr166y.LinkedTransferQueue$1",
     "jsr166y.Phaser$1",
     "jsr166y.ForkJoinWorkerThread$1",
     "jsr166y.LinkedTransferQueue$Node",
     "jsr166y.LinkedTransferQueue",
     "jsr166y.ForkJoinTask",
     "jsr166y.ThreadLocalRandom",
     "jsr166y.ForkJoinTask$AdaptedCallable",
     "jsr166y.Phaser",
     "jsr166y.Phaser$QNode",
     "jsr166y.ForkJoinPool$1",
     "jsr166y.ForkJoinPool$DefaultForkJoinWorkerThreadFactory",
     "jsr166y.ForkJoinTask$AdaptedRunnable"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "org.clojure:test.generative:jar:0.5.2:test",
    "coordinates": "org.clojure:test.generative:0.5.2",
    "groupId": "org.clojure",
    "artifactId": "test.generative",
    "version": "0.5.2",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 6561,
    "type": "direct",
    "status": "bloated",
    "parent": "org.clojure:clojure:jar:1.8.0",
    "allTypes": [],
    "usedTypes": [],
    "usageRatio": NaN,
    "children": [
     {
      "id": "org.clojure:tools.namespace:jar:0.2.10:test",
      "coordinates": "org.clojure:tools.namespace:0.2.10",
      "groupId": "org.clojure",
      "artifactId": "tools.namespace",
      "version": "0.2.10",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 18337,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.clojure:test.generative:jar:0.5.2:test",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": NaN,
      "children": []
     },
     {
      "id": "org.clojure:data.generators:jar:0.1.2:test",
      "coordinates": "org.clojure:data.generators:0.1.2",
      "groupId": "org.clojure",
      "artifactId": "data.generators",
      "version": "0.1.2",
      "scope": "test",
      "packaging": "jar",
      "omitted": false,
      "size": 5192,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.clojure:test.generative:jar:0.5.2:test",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": NaN,
      "children": []
     }
    ]
   },
   {
    "id": "org.clojure:test.check:jar:0.5.9:test",
    "coordinates": "org.clojure:test.check:0.5.9",
    "groupId": "org.clojure",
    "artifactId": "test.check",
    "version": "0.5.9",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 14251,
    "type": "direct",
    "status": "bloated",
    "parent": "org.clojure:clojure:jar:1.8.0",
    "allTypes": [],
    "usedTypes": [],
    "usageRatio": NaN,
    "children": []
   }
  ]
 }
}