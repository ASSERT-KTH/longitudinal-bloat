{
 "usage": {
  "me.discord.ibo.IBAI": {
   "net.dv8tion:JDA:jar:3.3.1_301:compile": [
    "net.dv8tion.jda.core.entities.Game",
    "net.dv8tion.jda.core.JDABuilder",
    "net.dv8tion.jda.core.JDA",
    "net.dv8tion.jda.core.AccountType",
    "net.dv8tion.jda.core.OnlineStatus"
   ]
  }
 },
 "dependencies": {
  "id": "ib-ai:ib-ai:jar:0.0.1:null",
  "coordinates": "ib-ai:ib-ai:0.0.1",
  "groupId": "ib-ai",
  "artifactId": "ib-ai",
  "version": "0.0.1",
  "packaging": "jar",
  "omitted": false,
  "type": "unknown",
  "status": "unknown",
  "parent": "unknown",
  "allTypes": [],
  "usedTypes": [],
  "usageRatio": -1.0,
  "children": [
   {
    "id": "net.dv8tion:JDA:jar:3.3.1_301:compile",
    "coordinates": "net.dv8tion:JDA:3.3.1_301",
    "groupId": "net.dv8tion",
    "artifactId": "JDA",
    "version": "3.3.1_301",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 3097484,
    "type": "direct",
    "status": "used",
    "parent": "ib-ai:ib-ai:jar:0.0.1",
    "allTypes": [
     "net.dv8tion.jda.core.events.channel.priv.PrivateChannelDeleteEvent",
     "net.dv8tion.jda.core.events.channel.text.update.TextChannelUpdateNameEvent",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceMuteEvent",
     "net.dv8tion.jda.core.events.emote.EmoteAddedEvent",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceGuildDeafenEvent",
     "net.dv8tion.jda.core.handle.VoiceStateUpdateHandler",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateAfkTimeoutEvent",
     "net.dv8tion.jda.core.handle.ChannelUpdateHandler$1",
     "net.dv8tion.jda.core.events.message.guild.react.GuildMessageReactionAddEvent",
     "net.dv8tion.jda.core.entities.Webhook",
     "net.dv8tion.jda.core.events.message.react.MessageReactionRemoveEvent",
     "net.dv8tion.jda.core.handle.MessageDeleteHandler",
     "net.dv8tion.jda.core.handle.GuildRoleDeleteHandler",
     "net.dv8tion.jda.client.events.message.group.react.GroupMessageReactionRemoveEvent",
     "net.dv8tion.jda.core.managers.ChannelManager",
     "net.dv8tion.jda.client.managers.fields.EmoteField",
     "net.dv8tion.jda.bot.entities.impl.ApplicationInfoImpl",
     "net.dv8tion.jda.core.requests.RestAction$FailedRestAction",
     "net.dv8tion.jda.core.hooks.SubscribeEvent",
     "net.dv8tion.jda.core.audio.AudioWebSocket$1",
     "net.dv8tion.jda.core.entities.MessageEmbed$Field",
     "net.dv8tion.jda.client.entities.impl.CallUserImpl",
     "net.dv8tion.jda.core.audio.factory.IAudioSendSystem",
     "com.iwebpp.crypto.TweetNaclFast$Box",
     "net.dv8tion.jda.core.entities.EmbedType",
     "net.dv8tion.jda.core.events.channel.voice.GenericVoiceChannelEvent",
     "net.dv8tion.jda.core.requests.restaction.pagination.AuditLogPaginationAction",
     "net.dv8tion.jda.core.utils.WidgetUtil$1",
     "net.dv8tion.jda.core.utils.cache.impl.UnifiedCacheViewImpl$UnifiedMemberCacheViewImpl",
     "net.dv8tion.jda.core.managers.AccountManager",
     "net.dv8tion.jda.core.events.emote.EmoteRemovedEvent",
     "net.dv8tion.jda.core.handle.TypingStartHandler",
     "net.dv8tion.jda.core.OnlineStatus",
     "net.dv8tion.jda.client.events.message.group.GroupMessageDeleteEvent",
     "net.dv8tion.jda.core.utils.cache.MemberCacheView",
     "net.dv8tion.jda.core.utils.PermissionUtil$1",
     "net.dv8tion.jda.client.events.relationship.GenericRelationshipAddEvent",
     "net.dv8tion.jda.core.entities.PermissionOverride",
     "com.iwebpp.crypto.TweetNaclFast$Signature",
     "net.dv8tion.jda.core.entities.impl.TextChannelImpl$1",
     "net.dv8tion.jda.client.entities.Group",
     "net.dv8tion.jda.core.events.user.UserGameUpdateEvent",
     "net.dv8tion.jda.core.requests.RestAction$EmptyRestAction",
     "net.dv8tion.jda.core.handle.ReadyHandler",
     "net.dv8tion.jda.client.exceptions.VerificationLevelException",
     "net.dv8tion.jda.core.utils.WidgetUtil$Widget$VoiceChannel",
     "net.dv8tion.jda.client.entities.CallableChannel",
     "net.dv8tion.jda.client.entities.OutgoingFriendRequest",
     "net.dv8tion.jda.core.entities.impl.TextChannelImpl$4",
     "net.dv8tion.jda.core.entities.impl.TextChannelImpl$2",
     "net.dv8tion.jda.core.entities.impl.TextChannelImpl$3",
     "net.dv8tion.jda.client.entities.Call",
     "com.iwebpp.crypto.TweetNaclFast$Hash",
     "net.dv8tion.jda.core.entities.MessageEmbed$Provider",
     "net.dv8tion.jda.client.entities.impl.ApplicationImpl",
     "net.dv8tion.jda.core.requests.restaction.pagination.MessagePaginationAction",
     "net.dv8tion.jda.core.events.message.guild.GuildMessageUpdateEvent",
     "tomp2p.opuswrapper.Opus$OpusMSEncoder",
     "net.dv8tion.jda.core.requests.Route$Self",
     "net.dv8tion.jda.core.events.channel.text.update.TextChannelUpdatePositionEvent",
     "net.dv8tion.jda.core.exceptions.HttpException",
     "net.dv8tion.jda.core.utils.SimpleLog",
     "net.dv8tion.jda.core.managers.RoleManager",
     "net.dv8tion.jda.core.entities.MessageEmbed$1",
     "net.dv8tion.jda.core.entities.impl.RoleImpl",
     "net.dv8tion.jda.core.JDAInfo",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateVerificationLevelEvent",
     "net.dv8tion.jda.core.utils.WidgetUtil",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$11",
     "net.dv8tion.jda.core.managers.Presence",
     "net.dv8tion.jda.core.audio.factory.IAudioSendFactory",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$10",
     "net.dv8tion.jda.core.events.message.priv.react.GenericPrivateMessageReactionEvent",
     "net.dv8tion.jda.core.events.message.priv.react.PrivateMessageReactionRemoveAllEvent",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$12",
     "net.dv8tion.jda.core.events.user.GenericUserEvent",
     "net.dv8tion.jda.core.managers.impl.AudioManagerImpl",
     "net.dv8tion.jda.client.events.group.update.GroupUpdateNameEvent",
     "net.dv8tion.jda.core.handle.ChannelUpdateHandler",
     "net.dv8tion.jda.client.handle.RelationshipRemoveHandler",
     "net.dv8tion.jda.core.events.message.priv.react.PrivateMessageReactionAddEvent",
     "net.dv8tion.jda.core.requests.CloseCode",
     "net.dv8tion.jda.core.events.role.update.GenericRoleUpdateEvent",
     "net.dv8tion.jda.core.requests.restaction.RoleAction",
     "net.dv8tion.jda.core.events.guild.member.GuildMemberLeaveEvent",
     "net.dv8tion.jda.client.entities.impl.IncomingFriendRequestImpl",
     "net.dv8tion.jda.core.events.channel.text.update.TextChannelUpdateParentEvent",
     "net.dv8tion.jda.core.entities.impl.GuildVoiceStateImpl",
     "net.dv8tion.jda.core.events.guild.voice.GenericGuildVoiceEvent",
     "tomp2p.opuswrapper.Opus$OpusCustomEncoder",
     "net.dv8tion.jda.core.exceptions.HierarchyException",
     "net.dv8tion.jda.core.hooks.IEventManager",
     "net.dv8tion.jda.core.entities.Guild$NotificationLevel",
     "net.dv8tion.jda.core.handle.MessageUpdateHandler$1",
     "net.dv8tion.jda.core.audio.factory.DefaultSendSystem",
     "net.dv8tion.jda.core.audio.hooks.ConnectionListener",
     "net.dv8tion.jda.core.handle.EventCache",
     "net.dv8tion.jda.core.Permission",
     "net.dv8tion.jda.core.utils.cache.SnowflakeCacheView",
     "tomp2p.opuswrapper.Opus$OpusCustomMode",
     "net.dv8tion.jda.core.ShardedRateLimiter",
     "net.dv8tion.jda.core.entities.Guild$VerificationLevel",
     "net.dv8tion.jda.core.utils.cache.impl.MemberCacheViewImpl",
     "net.dv8tion.jda.client.events.message.group.GenericGroupMessageEvent",
     "net.dv8tion.jda.core.handle.ChannelCreateHandler$1",
     "net.dv8tion.jda.client.entities.Application$Bot",
     "net.dv8tion.jda.core.events.message.guild.GenericGuildMessageEvent",
     "net.dv8tion.jda.core.utils.WidgetUtil$BannerType",
     "net.dv8tion.jda.core.requests.restaction.InviteAction",
     "net.dv8tion.jda.core.audio.hooks.ConnectionStatus",
     "net.dv8tion.jda.core.events.channel.voice.VoiceChannelDeleteEvent",
     "net.dv8tion.jda.core.requests.restaction.WebhookAction",
     "net.dv8tion.jda.core.requests.WebSocketClient$2",
     "net.dv8tion.jda.core.requests.WebSocketClient$1",
     "net.dv8tion.jda.core.events.Event",
     "net.dv8tion.jda.core.entities.impl.JDAImpl$JDAThreadFactory",
     "net.dv8tion.jda.core.MessageBuilder$Formatting",
     "net.dv8tion.jda.core.entities.Guild$MFALevel",
     "net.dv8tion.jda.core.entities.impl.MessageEmbedImpl",
     "net.dv8tion.jda.core.requests.RateLimiter$RateLimitThreadFactory",
     "net.dv8tion.jda.core.managers.ChannelManagerUpdatable$3",
     "net.dv8tion.jda.core.entities.MessageEmbed$Footer",
     "net.dv8tion.jda.core.managers.ChannelManagerUpdatable$4",
     "net.dv8tion.jda.core.managers.ChannelManagerUpdatable$1",
     "net.dv8tion.jda.core.utils.cache.impl.SortedSnowflakeCacheView",
     "net.dv8tion.jda.core.audio.AudioConnection$PacketProvider",
     "net.dv8tion.jda.core.managers.ChannelManagerUpdatable$2",
     "net.dv8tion.jda.core.managers.ChannelManagerUpdatable$7",
     "net.dv8tion.jda.client.entities.impl.JDAClientImpl",
     "net.dv8tion.jda.core.managers.ChannelManagerUpdatable$8",
     "net.dv8tion.jda.core.managers.ChannelManagerUpdatable$5",
     "net.dv8tion.jda.core.managers.ChannelManagerUpdatable$6",
     "net.dv8tion.jda.webhook.WebhookMessage",
     "net.dv8tion.jda.core.events.guild.update.GenericGuildUpdateEvent",
     "net.dv8tion.jda.core.JDA$ShardInfo",
     "net.dv8tion.jda.core.requests.SessionReconnectQueue",
     "net.dv8tion.jda.core.entities.MessageChannel$13",
     "net.dv8tion.jda.core.entities.Guild$Timeout",
     "net.dv8tion.jda.core.entities.Invite$Guild",
     "net.dv8tion.jda.core.entities.Emote",
     "net.dv8tion.jda.client.entities.CallVoiceState",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceSuppressEvent",
     "net.dv8tion.jda.core.requests.restaction.order.RoleOrderAction",
     "net.dv8tion.jda.core.audio.AudioConnection",
     "net.dv8tion.jda.core.entities.MessageEmbed",
     "net.dv8tion.jda.core.entities.EntityBuilder$1",
     "net.dv8tion.jda.core.audio.hooks.ListenerProxy",
     "net.dv8tion.jda.core.events.self.SelfUpdateVerifiedEvent",
     "net.dv8tion.jda.core.requests.Route$Relationships",
     "net.dv8tion.jda.core.handle.MessageUpdateHandler",
     "net.dv8tion.jda.core.JDABuilder",
     "net.dv8tion.jda.client.events.group.GenericGroupEvent",
     "net.dv8tion.jda.core.entities.MessageChannel$12",
     "net.dv8tion.jda.core.managers.fields.WebhookField",
     "net.dv8tion.jda.core.AccountType",
     "net.dv8tion.jda.core.entities.MessageChannel$11",
     "net.dv8tion.jda.core.entities.MessageChannel$10",
     "net.dv8tion.jda.core.managers.GuildManager",
     "net.dv8tion.jda.core.handle.GuildEmojisUpdateHandler",
     "net.dv8tion.jda.core.utils.WidgetUtil$Widget",
     "net.dv8tion.jda.core.utils.cache.CacheView",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateSystemChannelEvent",
     "net.dv8tion.jda.client.entities.IncomingFriendRequest",
     "net.dv8tion.jda.core.audio.ConnectionRequest",
     "net.dv8tion.jda.core.events.message.react.MessageReactionRemoveAllEvent",
     "net.dv8tion.jda.core.events.user.UserTypingEvent",
     "net.dv8tion.jda.core.entities.impl.MessageImpl$FormatToken",
     "net.dv8tion.jda.core.events.message.MessageBulkDeleteEvent",
     "net.dv8tion.jda.core.entities.MessageEmbed$AuthorInfo",
     "net.dv8tion.jda.core.entities.MessageHistory$MessageRetrieveAction",
     "net.dv8tion.jda.core.MessageBuilder$MentionType",
     "net.dv8tion.jda.core.requests.Route$Applications",
     "net.dv8tion.jda.core.audio.AudioReceiveHandler",
     "net.dv8tion.jda.core.events.channel.category.CategoryCreateEvent",
     "net.dv8tion.jda.core.managers.GuildController",
     "net.dv8tion.jda.core.events.guild.GuildLeaveEvent",
     "net.dv8tion.jda.core.requests.Route$Invites",
     "net.dv8tion.jda.core.events.channel.voice.update.VoiceChannelUpdatePermissionsEvent",
     "net.dv8tion.jda.core.requests.restaction.pagination.PaginationAction$PaginationIterator",
     "net.dv8tion.jda.core.audio.AudioConnection$1",
     "net.dv8tion.jda.core.requests.Route$Guilds",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateSplashEvent",
     "net.dv8tion.jda.core.utils.Helpers",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateMFALevelEvent",
     "net.dv8tion.jda.core.entities.Role",
     "net.dv8tion.jda.core.exceptions.GuildUnavailableException",
     "net.dv8tion.jda.core.requests.restaction.AuditableRestAction",
     "net.dv8tion.jda.client.handle.CallCreateHandler",
     "net.dv8tion.jda.core.handle.GuildMembersChunkHandler",
     "net.dv8tion.jda.core.events.channel.category.CategoryDeleteEvent",
     "net.dv8tion.jda.core.utils.PermissionUtil",
     "net.dv8tion.jda.core.entities.impl.PrivateChannelImpl$1",
     "net.dv8tion.jda.core.MessageBuilder$SplitPolicy$CharSequenceSplitPolicy",
     "net.dv8tion.jda.core.events.role.update.RoleUpdatePositionEvent",
     "net.dv8tion.jda.webhook.WebhookClient",
     "net.dv8tion.jda.core.MessageBuilder$SplitPolicy",
     "net.dv8tion.jda.core.events.channel.category.update.CategoryUpdatePositionEvent",
     "net.dv8tion.jda.core.requests.ratelimit.ClientRateLimiter$Bucket",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceMoveEvent",
     "net.dv8tion.jda.core.events.ShutdownEvent",
     "net.dv8tion.jda.core.audio.factory.DefaultSendFactory",
     "net.dv8tion.jda.core.events.message.guild.GuildMessageDeleteEvent",
     "net.dv8tion.jda.webhook.WebhookMessageBuilder",
     "net.dv8tion.jda.core.events.role.update.RoleUpdateColorEvent",
     "net.dv8tion.jda.core.entities.Category",
     "net.dv8tion.jda.core.managers.fields.GuildField",
     "net.dv8tion.jda.core.audio.AudioSendHandler",
     "net.dv8tion.jda.core.entities.ISnowflake",
     "net.dv8tion.jda.core.audit.AuditLogEntry",
     "net.dv8tion.jda.core.entities.IMentionable",
     "net.dv8tion.jda.core.requests.RestFuture",
     "net.dv8tion.jda.core.handle.MessageCreateHandler$1",
     "net.dv8tion.jda.core.entities.Icon",
     "net.dv8tion.jda.core.managers.GuildController$1",
     "net.dv8tion.jda.core.requests.ErrorResponse",
     "net.dv8tion.jda.core.events.guild.member.GuildMemberRoleAddEvent",
     "net.dv8tion.jda.client.events.relationship.FriendRequestIgnoredEvent",
     "net.dv8tion.jda.core.requests.SessionReconnectQueue$ReconnectThread",
     "net.dv8tion.jda.core.utils.Checks",
     "net.dv8tion.jda.core.managers.GuildController$8",
     "net.dv8tion.jda.core.entities.PrivateChannel",
     "net.dv8tion.jda.core.managers.GuildController$9",
     "net.dv8tion.jda.core.events.emote.update.GenericEmoteUpdateEvent",
     "net.dv8tion.jda.core.managers.GuildController$6",
     "net.dv8tion.jda.core.managers.GuildController$7",
     "net.dv8tion.jda.core.managers.GuildController$4",
     "net.dv8tion.jda.core.utils.MiscUtil$1",
     "net.dv8tion.jda.bot.JDABot",
     "net.dv8tion.jda.core.managers.GuildController$5",
     "net.dv8tion.jda.core.managers.GuildController$2",
     "net.dv8tion.jda.core.EmbedBuilder",
     "net.dv8tion.jda.core.managers.GuildController$3",
     "net.dv8tion.jda.core.requests.Route$Users",
     "net.dv8tion.jda.core.audio.AudioWebSocket",
     "net.dv8tion.jda.core.requests.restaction.ChannelAction$1",
     "net.dv8tion.jda.core.requests.restaction.AuditableRestAction$EmptyRestAction",
     "net.dv8tion.jda.core.events.emote.GenericEmoteEvent",
     "net.dv8tion.jda.core.events.message.guild.react.GuildMessageReactionRemoveEvent",
     "net.dv8tion.jda.core.utils.cache.UnifiedMemberCacheView",
     "net.dv8tion.jda.bot.entities.ApplicationInfo",
     "net.dv8tion.jda.core.handle.GuildSyncHandler",
     "net.dv8tion.jda.core.requests.ratelimit.BotRateLimiter$Bucket",
     "net.dv8tion.jda.core.events.message.guild.GuildMessageEmbedEvent",
     "net.dv8tion.jda.core.JDA$Status",
     "net.dv8tion.jda.core.entities.impl.RoleImpl$1",
     "net.dv8tion.jda.core.requests.restaction.order.OrderAction",
     "net.dv8tion.jda.core.utils.tuple.ImmutablePair",
     "net.dv8tion.jda.core.requests.restaction.AuditableRestAction$FailedRestAction",
     "net.dv8tion.jda.core.hooks.ListenerAdapter",
     "net.dv8tion.jda.client.handle.CallUpdateHandler",
     "net.dv8tion.jda.core.entities.AudioChannel",
     "net.dv8tion.jda.core.entities.Message",
     "net.dv8tion.jda.core.events.channel.text.update.TextChannelUpdateNSFWEvent",
     "net.dv8tion.jda.client.managers.EmoteManagerUpdatable$2",
     "net.dv8tion.jda.client.managers.EmoteManagerUpdatable$3",
     "net.dv8tion.jda.core.events.message.guild.GuildMessageReceivedEvent",
     "net.dv8tion.jda.client.managers.EmoteManagerUpdatable$1",
     "net.dv8tion.jda.core.events.role.GenericRoleEvent",
     "net.dv8tion.jda.core.events.channel.text.update.TextChannelUpdateTopicEvent",
     "net.dv8tion.jda.core.events.ResumedEvent",
     "tomp2p.opuswrapper.Opus$OpusEncoder",
     "net.dv8tion.jda.core.JDA",
     "net.dv8tion.jda.client.events.message.group.GroupMessageReceivedEvent",
     "net.dv8tion.jda.core.events.ReadyEvent",
     "net.dv8tion.jda.client.events.call.voice.CallVoiceSelfDeafenEvent",
     "net.dv8tion.jda.client.events.relationship.FriendRequestCanceledEvent",
     "net.dv8tion.jda.core.entities.VoiceChannel",
     "net.dv8tion.jda.core.entities.impl.TextChannelImpl",
     "net.dv8tion.jda.core.entities.Channel",
     "net.dv8tion.jda.client.entities.AuthorizedApplication",
     "net.dv8tion.jda.core.exceptions.AccountTypeException",
     "net.dv8tion.jda.client.events.call.voice.CallVoiceSelfMuteEvent",
     "net.dv8tion.jda.core.events.channel.text.TextChannelDeleteEvent",
     "net.dv8tion.jda.client.entities.impl.UserSettingsImpl",
     "net.dv8tion.jda.core.entities.impl.EmoteImpl$1",
     "net.dv8tion.jda.core.managers.RoleManagerUpdatable",
     "net.dv8tion.jda.core.audio.UserAudio",
     "net.dv8tion.jda.core.handle.GuildDeleteHandler",
     "net.dv8tion.jda.core.events.channel.voice.update.VoiceChannelUpdateNameEvent",
     "net.dv8tion.jda.core.events.message.react.MessageReactionAddEvent",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateRegionEvent",
     "net.dv8tion.jda.core.events.self.SelfUpdateMFAEvent",
     "net.dv8tion.jda.core.events.message.MessageEmbedEvent",
     "net.dv8tion.jda.core.managers.fields.AccountField",
     "net.dv8tion.jda.core.managers.WebhookManager",
     "net.dv8tion.jda.core.audio.VoiceCode",
     "net.dv8tion.jda.core.entities.GuildVoiceState",
     "net.dv8tion.jda.client.handle.ChannelRecipientAddHandler",
     "net.dv8tion.jda.core.requests.Route",
     "net.dv8tion.jda.client.events.call.update.CallUpdateRegionEvent",
     "net.dv8tion.jda.core.requests.Response",
     "net.dv8tion.jda.core.entities.impl.InviteImpl$3",
     "net.dv8tion.jda.core.entities.impl.InviteImpl$1",
     "com.iwebpp.crypto.TweetNaclFast$poly1305",
     "net.dv8tion.jda.core.entities.impl.InviteImpl$2",
     "net.dv8tion.jda.core.events.self.SelfUpdateNameEvent",
     "net.dv8tion.jda.core.requests.restaction.GuildAction$RoleData",
     "net.dv8tion.jda.core.handle.UserUpdateHandler",
     "net.dv8tion.jda.core.utils.tuple.MutableTriple",
     "net.dv8tion.jda.core.entities.EntityBuilder",
     "com.iwebpp.crypto.TweetNaclFast$SecretBox",
     "net.dv8tion.jda.webhook.WebhookClientBuilder$DefaultWebhookThreadFactory",
     "net.dv8tion.jda.core.handle.ChannelCreateHandler",
     "net.dv8tion.jda.client.managers.ApplicationManager",
     "net.dv8tion.jda.core.entities.impl.WebhookImpl",
     "net.dv8tion.jda.core.utils.NativeUtil",
     "tomp2p.opuswrapper.Opus$OpusCustomDecoder",
     "net.dv8tion.jda.client.events.group.update.GroupUpdateIconEvent",
     "net.dv8tion.jda.core.requests.Route$Roles",
     "net.dv8tion.jda.core.events.message.MessageUpdateEvent",
     "net.dv8tion.jda.core.utils.tuple.Pair",
     "net.dv8tion.jda.client.handle.RelationshipRemoveHandler$1",
     "net.dv8tion.jda.core.entities.impl.GuildImpl",
     "net.dv8tion.jda.core.events.channel.voice.update.VoiceChannelUpdateParentEvent",
     "net.dv8tion.jda.core.audio.AudioWebSocket$KeepAliveThreadFactory",
     "net.dv8tion.jda.client.handle.RelationshipAddHandler",
     "net.dv8tion.jda.client.managers.ApplicationManagerUpdatable",
     "net.dv8tion.jda.core.events.message.GenericMessageEvent",
     "net.dv8tion.jda.client.entities.Relationship",
     "net.dv8tion.jda.core.entities.impl.AbstractChannelImpl",
     "net.dv8tion.jda.core.entities.impl.MessageImpl",
     "net.dv8tion.jda.core.entities.impl.UserImpl$DefaultAvatar",
     "com.iwebpp.crypto.TweetNaclFast$Box$KeyPair",
     "net.dv8tion.jda.core.events.message.priv.PrivateMessageEmbedEvent",
     "net.dv8tion.jda.client.requests.restaction.pagination.MentionPaginationAction",
     "net.dv8tion.jda.core.handle.SocketHandler",
     "net.dv8tion.jda.client.entities.impl.AuthorizedApplicationImpl",
     "net.dv8tion.jda.core.events.channel.category.GenericCategoryEvent",
     "net.dv8tion.jda.core.requests.Route$Channels",
     "net.dv8tion.jda.core.requests.restaction.GuildAction$ChannelData",
     "net.dv8tion.jda.core.events.message.priv.PrivateMessageDeleteEvent",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateIconEvent",
     "net.dv8tion.jda.core.managers.PermOverrideManager",
     "net.dv8tion.jda.core.entities.impl.InviteImpl",
     "net.dv8tion.jda.core.audio.Decoder",
     "net.dv8tion.jda.core.events.message.MessageDeleteEvent",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceSelfMuteEvent",
     "net.dv8tion.jda.core.events.self.SelfUpdateEmailEvent",
     "net.dv8tion.jda.core.requests.restaction.pagination.ReactionPaginationAction",
     "net.dv8tion.jda.core.utils.cache.impl.SnowflakeCacheViewImpl",
     "net.dv8tion.jda.client.managers.ApplicationManagerUpdatable$6",
     "net.dv8tion.jda.client.events.relationship.FriendRemovedEvent",
     "net.dv8tion.jda.client.managers.ApplicationManagerUpdatable$7",
     "net.dv8tion.jda.core.handle.MessageReactionHandler",
     "net.dv8tion.jda.client.managers.ApplicationManagerUpdatable$4",
     "net.dv8tion.jda.client.managers.ApplicationManagerUpdatable$5",
     "net.dv8tion.jda.core.entities.MessageReaction$1",
     "net.dv8tion.jda.core.events.channel.text.update.TextChannelUpdatePermissionsEvent",
     "net.dv8tion.jda.client.JDAClient",
     "net.dv8tion.jda.client.events.message.group.react.GroupMessageReactionAddEvent",
     "net.dv8tion.jda.client.managers.ApplicationManagerUpdatable$2",
     "com.iwebpp.crypto.TweetNaclFast$Signature$KeyPair",
     "net.dv8tion.jda.client.events.message.group.react.GroupMessageReactionRemoveAllEvent",
     "net.dv8tion.jda.client.managers.ApplicationManagerUpdatable$3",
     "net.dv8tion.jda.core.requests.Route$Misc",
     "net.dv8tion.jda.client.managers.ApplicationManagerUpdatable$1",
     "net.dv8tion.jda.core.entities.impl.GuildImpl$3",
     "net.dv8tion.jda.client.entities.impl.JDAClientImpl$1",
     "net.dv8tion.jda.core.entities.impl.GuildImpl$4",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateAfkChannelEvent",
     "net.dv8tion.jda.core.entities.impl.GuildImpl$1",
     "net.dv8tion.jda.client.entities.impl.CallImpl",
     "net.dv8tion.jda.core.entities.impl.GuildImpl$2",
     "net.dv8tion.jda.client.entities.impl.FriendImpl",
     "net.dv8tion.jda.core.audit.AuditLogChange",
     "net.dv8tion.jda.core.managers.AccountManagerUpdatable$4",
     "net.dv8tion.jda.core.requests.Route$RateLimit",
     "net.dv8tion.jda.core.entities.Member",
     "net.dv8tion.jda.core.events.guild.GuildAvailableEvent",
     "net.dv8tion.jda.core.managers.AccountManagerUpdatable$3",
     "net.dv8tion.jda.core.entities.TextChannel",
     "net.dv8tion.jda.core.events.guild.GenericGuildEvent",
     "net.dv8tion.jda.core.managers.AccountManagerUpdatable$5",
     "net.dv8tion.jda.core.entities.MessageHistory",
     "net.dv8tion.jda.core.managers.fields.RoleField",
     "net.dv8tion.jda.core.utils.tuple.MutablePair",
     "net.dv8tion.jda.core.events.channel.voice.update.VoiceChannelUpdateUserLimitEvent",
     "net.dv8tion.jda.client.entities.impl.JDAClientImpl$4",
     "net.dv8tion.jda.client.entities.impl.JDAClientImpl$2",
     "net.dv8tion.jda.client.entities.impl.JDAClientImpl$3",
     "net.dv8tion.jda.core.utils.cache.impl.UnifiedCacheViewImpl$UnifiedSnowflakeCacheView",
     "net.dv8tion.jda.core.events.message.priv.react.PrivateMessageReactionRemoveEvent",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceJoinEvent",
     "net.dv8tion.jda.client.events.message.group.react.GenericGroupMessageReactionEvent",
     "net.dv8tion.jda.client.events.group.GroupUserLeaveEvent",
     "net.dv8tion.jda.client.entities.Friend",
     "net.dv8tion.jda.core.utils.WidgetUtil$Widget$Member",
     "net.dv8tion.jda.client.entities.impl.ApplicationImpl$2",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateOwnerEvent",
     "net.dv8tion.jda.core.events.role.update.RoleUpdateNameEvent",
     "net.dv8tion.jda.client.entities.impl.ApplicationImpl$3",
     "net.dv8tion.jda.core.audit.TargetType",
     "net.dv8tion.jda.client.entities.impl.ApplicationImpl$1",
     "net.dv8tion.jda.client.managers.EmoteManagerUpdatable",
     "net.dv8tion.jda.core.requests.Route$Emotes",
     "com.iwebpp.crypto.TweetNaclFast$ScalarMult",
     "net.dv8tion.jda.core.events.channel.priv.PrivateChannelCreateEvent",
     "net.dv8tion.jda.core.Region",
     "net.dv8tion.jda.client.entities.impl.OutgoingFriendRequestImpl",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateNotificationLevelEvent",
     "net.dv8tion.jda.client.events.call.GenericCallEvent",
     "net.dv8tion.jda.core.requests.RateLimiter",
     "net.dv8tion.jda.bot.entities.impl.JDABotImpl",
     "net.dv8tion.jda.core.entities.Guild$ExplicitContentLevel",
     "net.dv8tion.jda.core.events.channel.text.update.GenericTextChannelUpdateEvent",
     "net.dv8tion.jda.core.events.channel.voice.VoiceChannelCreateEvent",
     "net.dv8tion.jda.core.events.emote.update.EmoteUpdateNameEvent",
     "net.dv8tion.jda.core.entities.impl.JDAImpl",
     "net.dv8tion.jda.webhook.WebhookClientBuilder",
     "net.dv8tion.jda.client.handle.RelationshipAddHandler$1",
     "net.dv8tion.jda.core.events.message.guild.react.GuildMessageReactionRemoveAllEvent",
     "net.dv8tion.jda.core.requests.restaction.order.ChannelOrderAction",
     "net.dv8tion.jda.core.entities.impl.PrivateChannelImpl",
     "net.dv8tion.jda.core.managers.AccountManagerUpdatable$2",
     "net.dv8tion.jda.core.managers.AccountManagerUpdatable$1",
     "net.dv8tion.jda.core.entities.impl.GuildImpl$7",
     "net.dv8tion.jda.core.entities.impl.GuildImpl$5",
     "net.dv8tion.jda.core.entities.impl.GuildImpl$6",
     "net.dv8tion.jda.client.events.relationship.GenericRelationshipRemoveEvent",
     "net.dv8tion.jda.core.events.guild.member.GuildMemberJoinEvent",
     "net.dv8tion.jda.client.entities.impl.CallVoiceStateImpl",
     "net.dv8tion.jda.client.requests.restaction.ApplicationAction",
     "net.dv8tion.jda.core.entities.SelfUser",
     "net.dv8tion.jda.client.events.call.CallCreateEvent",
     "net.dv8tion.jda.client.events.group.GroupUserJoinEvent",
     "net.dv8tion.jda.core.handle.MessageCreateHandler",
     "net.dv8tion.jda.client.entities.UserSettings",
     "net.dv8tion.jda.core.MessageBuilder",
     "net.dv8tion.jda.core.managers.fields.PermissionField",
     "net.dv8tion.jda.bot.entities.impl.JDABotImpl$1",
     "net.dv8tion.jda.core.utils.cache.CacheView$SimpleCacheView",
     "net.dv8tion.jda.core.events.message.react.GenericMessageReactionEvent",
     "net.dv8tion.jda.client.events.group.GroupLeaveEvent",
     "net.dv8tion.jda.core.events.channel.voice.update.GenericVoiceChannelUpdateEvent",
     "net.dv8tion.jda.core.audio.CombinedAudio",
     "net.dv8tion.jda.core.audit.ActionType",
     "net.dv8tion.jda.core.events.channel.category.update.CategoryUpdateNameEvent",
     "net.dv8tion.jda.core.hooks.AnnotatedEventManager",
     "net.dv8tion.jda.core.requests.restaction.PermissionOverrideAction",
     "net.dv8tion.jda.client.entities.impl.AuthorizedApplicationImpl$1",
     "net.dv8tion.jda.core.entities.Message$Attachment",
     "net.dv8tion.jda.core.hooks.InterfacedEventManager",
     "net.dv8tion.jda.core.entities.Game$GameType",
     "net.dv8tion.jda.core.handle.MessageReactionHandler$1",
     "net.dv8tion.jda.core.entities.impl.PermissionOverrideImpl$1",
     "net.dv8tion.jda.core.audit.AuditLogOption",
     "net.dv8tion.jda.core.events.emote.update.EmoteUpdateRolesEvent",
     "net.dv8tion.jda.core.requests.restaction.PermOverrideData",
     "net.dv8tion.jda.core.entities.MessageReaction$ReactionEmote",
     "net.dv8tion.jda.core.events.guild.member.GenericGuildMemberEvent",
     "net.dv8tion.jda.core.utils.SimpleLog$LogListener",
     "net.dv8tion.jda.core.events.http.HttpRequestEvent",
     "net.dv8tion.jda.client.events.relationship.UserUnblockedEvent",
     "net.dv8tion.jda.client.managers.EmoteManager",
     "net.dv8tion.jda.core.events.channel.text.TextChannelCreateEvent",
     "net.dv8tion.jda.core.requests.Route$Webhooks",
     "net.dv8tion.jda.core.exceptions.PermissionException",
     "net.dv8tion.jda.core.exceptions.RateLimitedException",
     "tomp2p.opuswrapper.Opus",
     "net.dv8tion.jda.core.entities.MessageChannel$7",
     "net.dv8tion.jda.core.entities.MessageChannel$6",
     "net.dv8tion.jda.core.entities.MessageChannel$9",
     "net.dv8tion.jda.core.entities.MessageChannel$8",
     "net.dv8tion.jda.core.entities.MessageChannel$3",
     "net.dv8tion.jda.client.entities.Application",
     "net.dv8tion.jda.core.entities.MessageChannel$2",
     "tomp2p.opuswrapper.Opus$OpusRepacketizer",
     "net.dv8tion.jda.core.entities.MessageChannel$5",
     "net.dv8tion.jda.core.entities.MessageChannel$4",
     "net.dv8tion.jda.core.hooks.EventListener",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceGuildMuteEvent",
     "net.dv8tion.jda.webhook.WebhookClient$Bucket",
     "net.dv8tion.jda.core.entities.MessageChannel$1",
     "net.dv8tion.jda.core.events.role.RoleCreateEvent",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateNameEvent",
     "net.dv8tion.jda.core.handle.ChannelDeleteHandler$1",
     "net.dv8tion.jda.core.events.ReconnectedEvent",
     "net.dv8tion.jda.client.events.group.update.GroupUpdateOwnerEvent",
     "net.dv8tion.jda.core.entities.Game",
     "net.dv8tion.jda.core.events.channel.voice.update.VoiceChannelUpdateBitrateEvent",
     "net.dv8tion.jda.core.utils.WidgetUtil$Widget$VoiceState",
     "net.dv8tion.jda.core.exceptions.InsufficientPermissionException",
     "net.dv8tion.jda.client.events.call.update.CallUpdateRingingUsersEvent",
     "net.dv8tion.jda.core.entities.MessageChannel",
     "net.dv8tion.jda.core.entities.MessageReaction",
     "net.dv8tion.jda.core.events.guild.GuildJoinEvent",
     "net.dv8tion.jda.core.audio.AudioPacket",
     "net.dv8tion.jda.client.managers.fields.ApplicationField",
     "net.dv8tion.jda.core.requests.ratelimit.BotRateLimiter",
     "net.dv8tion.jda.core.events.message.priv.PrivateMessageUpdateEvent",
     "net.dv8tion.jda.core.entities.User",
     "net.dv8tion.jda.core.managers.fields.ChannelField",
     "net.dv8tion.jda.core.handle.ReadyHandler$1",
     "net.dv8tion.jda.client.events.relationship.FriendRequestReceivedEvent",
     "net.dv8tion.jda.core.events.channel.category.update.GenericCategoryUpdateEvent",
     "net.dv8tion.jda.core.events.self.SelfUpdatePhoneNumberEvent",
     "net.dv8tion.jda.core.utils.Promise",
     "net.dv8tion.jda.core.entities.impl.CategoryImpl",
     "net.dv8tion.jda.client.events.message.group.GroupMessageEmbedEvent",
     "net.dv8tion.jda.core.managers.PermOverrideManagerUpdatable$1",
     "net.dv8tion.jda.core.events.self.GenericSelfUpdateEvent",
     "net.dv8tion.jda.core.audio.VoiceCode$Close",
     "net.dv8tion.jda.core.requests.Method",
     "net.dv8tion.jda.core.events.message.priv.PrivateMessageReceivedEvent",
     "net.dv8tion.jda.core.entities.MessageEmbed$VideoInfo",
     "net.dv8tion.jda.core.handle.MessageReactionBulkRemoveHandler",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$9",
     "net.dv8tion.jda.core.entities.MessageType",
     "net.dv8tion.jda.core.events.guild.UnavailableGuildJoinedEvent",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$6",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$5",
     "net.dv8tion.jda.core.managers.PermOverrideManagerUpdatable",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$8",
     "net.dv8tion.jda.client.events.call.update.GenericCallUpdateEvent",
     "net.dv8tion.jda.core.events.guild.member.GuildMemberNickChangeEvent",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$7",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$2",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$1",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$4",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable$3",
     "net.dv8tion.jda.core.requests.ratelimit.IBucket",
     "net.dv8tion.jda.core.requests.Requester",
     "net.dv8tion.jda.core.managers.GuildController$15",
     "net.dv8tion.jda.core.entities.Invite$Channel",
     "net.dv8tion.jda.core.handle.GuildBanHandler",
     "net.dv8tion.jda.core.managers.GuildController$13",
     "net.dv8tion.jda.core.managers.GuildController$14",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceLeaveEvent",
     "net.dv8tion.jda.core.managers.GuildController$11",
     "net.dv8tion.jda.core.managers.GuildController$12",
     "net.dv8tion.jda.core.utils.WidgetUtil$WidgetTheme",
     "net.dv8tion.jda.core.managers.GuildController$10",
     "net.dv8tion.jda.core.requests.GuildLock",
     "net.dv8tion.jda.core.exceptions.ErrorResponseException",
     "net.dv8tion.jda.core.events.role.update.RoleUpdateMentionableEvent",
     "net.dv8tion.jda.client.events.relationship.FriendAddedEvent",
     "net.dv8tion.jda.client.events.call.voice.GenericCallVoiceEvent",
     "net.dv8tion.jda.core.audit.AuditLogKey",
     "net.dv8tion.jda.core.events.ExceptionEvent",
     "net.dv8tion.jda.core.WebSocketCode",
     "net.dv8tion.jda.core.managers.AccountManagerUpdatable",
     "net.dv8tion.jda.client.events.relationship.FriendRequestSentEvent",
     "net.dv8tion.jda.client.entities.RelationshipType",
     "net.dv8tion.jda.client.handle.ChannelRecipientRemoveHandler",
     "net.dv8tion.jda.core.events.role.update.RoleUpdatePermissionsEvent",
     "net.dv8tion.jda.core.events.StatusChangeEvent",
     "tomp2p.opuswrapper.Opus$OpusMSDecoder",
     "net.dv8tion.jda.core.events.message.priv.GenericPrivateMessageEvent",
     "net.dv8tion.jda.core.managers.WebhookManagerUpdatable",
     "net.dv8tion.jda.core.requests.restaction.pagination.PaginationAction",
     "net.dv8tion.jda.core.entities.impl.WebhookImpl$1",
     "net.dv8tion.jda.core.events.self.SelfUpdateNitroEvent",
     "net.dv8tion.jda.core.requests.ratelimit.ClientRateLimiter",
     "net.dv8tion.jda.core.utils.SimpleLog$1",
     "net.dv8tion.jda.core.entities.IFakeable",
     "net.dv8tion.jda.core.requests.restaction.GuildAction",
     "net.dv8tion.jda.core.requests.Route$CompiledRoute",
     "net.dv8tion.jda.core.requests.Route$1",
     "net.dv8tion.jda.core.events.self.SelfUpdateAvatarEvent",
     "net.dv8tion.jda.core.entities.impl.PermissionOverrideImpl",
     "net.dv8tion.jda.client.events.message.group.GroupMessageUpdateEvent",
     "net.dv8tion.jda.core.handle.MessageReactionBulkRemoveHandler$1",
     "net.dv8tion.jda.core.entities.impl.SelfUserImpl",
     "net.dv8tion.jda.core.events.user.UserAvatarUpdateEvent",
     "net.dv8tion.jda.core.requests.RestAction",
     "net.dv8tion.jda.client.events.call.voice.CallVoiceJoinEvent",
     "net.dv8tion.jda.client.events.call.CallDeleteEvent",
     "net.dv8tion.jda.core.entities.impl.UserImpl",
     "net.dv8tion.jda.core.entities.Guild",
     "net.dv8tion.jda.client.events.group.update.GenericGroupUpdateEvent",
     "net.dv8tion.jda.core.entities.impl.InviteImpl$GuildImpl",
     "tomp2p.opuswrapper.Opus$OpusDecoder",
     "net.dv8tion.jda.core.utils.Procedure",
     "net.dv8tion.jda.core.events.guild.GuildUnbanEvent",
     "net.dv8tion.jda.client.events.relationship.GenericRelationshipEvent",
     "net.dv8tion.jda.client.handle.CallDeleteHandler",
     "net.dv8tion.jda.core.entities.impl.EmoteImpl",
     "net.dv8tion.jda.core.entities.Invite",
     "net.dv8tion.jda.core.entities.impl.AbstractChannelImpl$1",
     "net.dv8tion.jda.core.entities.impl.AbstractChannelImpl$2",
     "net.dv8tion.jda.client.entities.BlockedUser",
     "net.dv8tion.jda.core.utils.IOUtil",
     "net.dv8tion.jda.core.entities.impl.InviteImpl$ChannelImpl",
     "net.dv8tion.jda.core.events.user.UserOnlineStatusUpdateEvent",
     "net.dv8tion.jda.core.handle.GuildUpdateHandler",
     "net.dv8tion.jda.core.handle.GuildRoleCreateHandler",
     "net.dv8tion.jda.core.requests.restaction.pagination.PaginationAction$ChainedConsumer",
     "net.dv8tion.jda.core.entities.impl.MemberImpl",
     "net.dv8tion.jda.core.requests.Route$Messages",
     "net.dv8tion.jda.core.requests.RequestFuture",
     "net.dv8tion.jda.core.events.DisconnectEvent",
     "net.dv8tion.jda.core.handle.SocketHandler$NOPHandler",
     "net.dv8tion.jda.core.events.channel.text.GenericTextChannelEvent",
     "net.dv8tion.jda.core.handle.GuildMemberAddHandler",
     "net.dv8tion.jda.core.handle.PresenceUpdateHandler",
     "net.dv8tion.jda.core.requests.restaction.order.ChannelOrderAction$1",
     "net.dv8tion.jda.core.entities.MessageEmbed$ImageInfo",
     "net.dv8tion.jda.core.entities.MessageHistory$2",
     "net.dv8tion.jda.core.handle.VoiceServerUpdateHandler",
     "net.dv8tion.jda.core.entities.MessageHistory$1",
     "net.dv8tion.jda.client.entities.impl.ApplicationImpl$BotImpl",
     "net.dv8tion.jda.core.entities.VoiceState",
     "net.dv8tion.jda.core.managers.fields.Field",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceDeafenEvent",
     "net.dv8tion.jda.core.handle.GuildMemberRemoveHandler",
     "net.dv8tion.jda.core.managers.ChannelManagerUpdatable",
     "net.dv8tion.jda.core.entities.IPermissionHolder",
     "net.dv8tion.jda.core.entities.impl.UserImpl$1",
     "net.dv8tion.jda.core.managers.WebhookManagerUpdatable$1",
     "net.dv8tion.jda.core.managers.WebhookManagerUpdatable$2",
     "net.dv8tion.jda.core.managers.WebhookManagerUpdatable$3",
     "net.dv8tion.jda.core.managers.WebhookManagerUpdatable$4",
     "net.dv8tion.jda.core.requests.Request",
     "net.dv8tion.jda.core.utils.cache.impl.UnifiedCacheViewImpl",
     "net.dv8tion.jda.core.entities.ChannelType",
     "net.dv8tion.jda.core.events.channel.voice.update.VoiceChannelUpdatePositionEvent",
     "net.dv8tion.jda.core.handle.ChannelDeleteHandler",
     "net.dv8tion.jda.client.events.relationship.UserBlockedEvent",
     "net.dv8tion.jda.core.events.message.guild.react.GenericGuildMessageReactionEvent",
     "net.dv8tion.jda.client.entities.impl.GroupImpl",
     "net.dv8tion.jda.core.MessageBuilder$1",
     "net.dv8tion.jda.core.requests.restaction.ChannelAction",
     "net.dv8tion.jda.core.events.role.update.RoleUpdateHoistedEvent",
     "net.dv8tion.jda.core.events.guild.voice.GuildVoiceSelfDeafenEvent",
     "net.dv8tion.jda.core.entities.MessageEmbed$Thumbnail",
     "net.dv8tion.jda.core.entities.impl.JDAImpl$3",
     "net.dv8tion.jda.core.entities.impl.JDAImpl$1",
     "net.dv8tion.jda.core.entities.impl.JDAImpl$2",
     "net.dv8tion.jda.core.handle.GuildCreateHandler",
     "net.dv8tion.jda.client.events.group.GroupJoinEvent",
     "net.dv8tion.jda.core.events.guild.GuildUnavailableEvent",
     "net.dv8tion.jda.core.managers.GuildManagerUpdatable",
     "net.dv8tion.jda.core.audio.factory.IPacketProvider",
     "net.dv8tion.jda.core.requests.Route$Custom",
     "net.dv8tion.jda.core.events.role.RoleDeleteEvent",
     "net.dv8tion.jda.core.managers.RoleManagerUpdatable$5",
     "net.dv8tion.jda.core.managers.RoleManagerUpdatable$4",
     "net.dv8tion.jda.core.managers.RoleManagerUpdatable$3",
     "net.dv8tion.jda.client.events.call.voice.CallVoiceLeaveEvent",
     "net.dv8tion.jda.core.managers.RoleManagerUpdatable$2",
     "net.dv8tion.jda.core.managers.RoleManagerUpdatable$1",
     "net.dv8tion.jda.client.entities.CallUser",
     "net.dv8tion.jda.core.handle.EventCache$Type",
     "net.dv8tion.jda.client.entities.impl.BlockedUserImpl",
     "net.dv8tion.jda.client.entities.impl.ApplicationImpl$BotImpl$1",
     "net.dv8tion.jda.core.managers.AudioManager",
     "net.dv8tion.jda.core.managers.impl.PresenceImpl",
     "net.dv8tion.jda.webhook.WebhookCluster",
     "net.dv8tion.jda.core.utils.MiscUtil",
     "net.dv8tion.jda.core.audio.ConnectionStage",
     "net.dv8tion.jda.core.events.channel.category.update.CategoryUpdatePermissionsEvent",
     "net.dv8tion.jda.core.handle.GuildRoleUpdateHandler",
     "net.dv8tion.jda.core.events.user.UserNameUpdateEvent",
     "net.dv8tion.jda.core.events.self.SelfUpdateMobileEvent",
     "net.dv8tion.jda.core.entities.impl.VoiceChannelImpl",
     "net.dv8tion.jda.core.handle.MessageBulkDeleteHandler",
     "net.dv8tion.jda.core.events.message.MessageReceivedEvent",
     "com.iwebpp.crypto.TweetNaclFast",
     "net.dv8tion.jda.core.requests.WebSocketClient",
     "net.dv8tion.jda.core.events.guild.member.GuildMemberRoleRemoveEvent",
     "net.dv8tion.jda.core.events.guild.update.GuildUpdateExplicitContentLevelEvent",
     "net.dv8tion.jda.core.handle.GuildMemberUpdateHandler",
     "net.dv8tion.jda.core.events.guild.GuildBanEvent",
     "net.dv8tion.jda.core.utils.cache.impl.AbstractCacheView"
    ],
    "usedTypes": [
     "net.dv8tion.jda.core.entities.Game",
     "net.dv8tion.jda.core.JDABuilder",
     "net.dv8tion.jda.core.JDA",
     "net.dv8tion.jda.core.AccountType",
     "net.dv8tion.jda.core.OnlineStatus"
    ],
    "usageRatio": 0.007530120481927711,
    "children": [
     {
      "id": "com.google.code.findbugs:jsr305:jar:3.0.2:compile",
      "coordinates": "com.google.code.findbugs:jsr305:3.0.2",
      "groupId": "com.google.code.findbugs",
      "artifactId": "jsr305",
      "version": "3.0.2",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 19936,
      "type": "transitive",
      "status": "bloated",
      "parent": "net.dv8tion:JDA:jar:3.3.1_301:compile",
      "allTypes": [
       "javax.annotation.Nonnull$Checker",
       "javax.annotation.Nonnegative",
       "javax.annotation.ParametersAreNullableByDefault",
       "javax.annotation.WillClose",
       "javax.annotation.CheckForSigned",
       "javax.annotation.ParametersAreNonnullByDefault",
       "javax.annotation.MatchesPattern$Checker",
       "javax.annotation.meta.Exclusive",
       "javax.annotation.meta.TypeQualifierNickname",
       "javax.annotation.meta.TypeQualifier",
       "javax.annotation.Syntax",
       "javax.annotation.Untainted",
       "javax.annotation.WillCloseWhenClosed",
       "javax.annotation.Nonnull",
       "javax.annotation.Nullable",
       "javax.annotation.meta.TypeQualifierValidator",
       "javax.annotation.OverridingMethodsMustInvokeSuper",
       "javax.annotation.RegEx$Checker",
       "javax.annotation.WillNotClose",
       "javax.annotation.meta.Exhaustive",
       "javax.annotation.Nonnegative$Checker",
       "javax.annotation.concurrent.ThreadSafe",
       "javax.annotation.MatchesPattern",
       "javax.annotation.meta.TypeQualifierDefault",
       "javax.annotation.concurrent.GuardedBy",
       "javax.annotation.meta.When",
       "javax.annotation.Signed",
       "javax.annotation.RegEx",
       "javax.annotation.CheckReturnValue",
       "javax.annotation.Tainted",
       "javax.annotation.PropertyKey",
       "javax.annotation.Detainted",
       "javax.annotation.CheckForNull",
       "javax.annotation.concurrent.Immutable",
       "javax.annotation.concurrent.NotThreadSafe"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.slf4j:slf4j-api:jar:1.7.25:compile",
      "coordinates": "org.slf4j:slf4j-api:1.7.25",
      "groupId": "org.slf4j",
      "artifactId": "slf4j-api",
      "version": "1.7.25",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 41203,
      "type": "transitive",
      "status": "bloated",
      "parent": "net.dv8tion:JDA:jar:3.3.1_301:compile",
      "allTypes": [
       "org.slf4j.LoggerFactory",
       "org.slf4j.helpers.SubstituteLogger",
       "org.slf4j.MarkerFactory",
       "org.slf4j.event.EventConstants",
       "org.slf4j.spi.MarkerFactoryBinder",
       "org.slf4j.spi.MDCAdapter",
       "org.slf4j.spi.LocationAwareLogger",
       "org.slf4j.MDC$MDCCloseable",
       "org.slf4j.helpers.Util",
       "org.slf4j.helpers.BasicMarkerFactory",
       "org.slf4j.event.Level",
       "org.slf4j.helpers.Util$1",
       "org.slf4j.helpers.NOPLoggerFactory",
       "org.slf4j.event.LoggingEvent",
       "org.slf4j.IMarkerFactory",
       "org.slf4j.helpers.MessageFormatter",
       "org.slf4j.event.EventRecodingLogger",
       "org.slf4j.helpers.BasicMDCAdapter",
       "org.slf4j.Logger",
       "org.slf4j.spi.LoggerFactoryBinder",
       "org.slf4j.helpers.FormattingTuple",
       "org.slf4j.helpers.BasicMDCAdapter$1",
       "org.slf4j.helpers.SubstituteLoggerFactory",
       "org.slf4j.helpers.NOPMDCAdapter",
       "org.slf4j.event.SubstituteLoggingEvent",
       "org.slf4j.helpers.NOPLogger",
       "org.slf4j.Marker",
       "org.slf4j.MDC",
       "org.slf4j.MDC$1",
       "org.slf4j.helpers.MarkerIgnoringBase",
       "org.slf4j.helpers.BasicMarker",
       "org.slf4j.helpers.NamedLoggerBase",
       "org.slf4j.helpers.Util$ClassContextSecurityManager",
       "org.slf4j.ILoggerFactory"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.apache.commons:commons-collections4:jar:4.1:compile",
      "coordinates": "org.apache.commons:commons-collections4:4.1",
      "groupId": "org.apache.commons",
      "artifactId": "commons-collections4",
      "version": "4.1",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 751238,
      "type": "transitive",
      "status": "bloated",
      "parent": "net.dv8tion:JDA:jar:3.3.1_301:compile",
      "allTypes": [
       "org.apache.commons.collections4.map.AbstractLinkedMap",
       "org.apache.commons.collections4.map.Flat3Map",
       "org.apache.commons.collections4.splitmap.TransformedSplitMap",
       "org.apache.commons.collections4.bag.SynchronizedBag",
       "org.apache.commons.collections4.TrieUtils",
       "org.apache.commons.collections4.functors.NullPredicate",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer$1",
       "org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator",
       "org.apache.commons.collections4.functors.WhileClosure",
       "org.apache.commons.collections4.IterableUtils$7$1",
       "org.apache.commons.collections4.iterators.SingletonListIterator",
       "org.apache.commons.collections4.list.TransformedList",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$Node",
       "org.apache.commons.collections4.SetValuedMap",
       "org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap",
       "org.apache.commons.collections4.multiset.SynchronizedMultiSet",
       "org.apache.commons.collections4.multimap.AbstractListValuedMap",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$1",
       "org.apache.commons.collections4.map.ListOrderedMap",
       "org.apache.commons.collections4.multiset.PredicatedMultiSet",
       "org.apache.commons.collections4.map.AbstractHashedMap",
       "org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator",
       "org.apache.commons.collections4.iterators.EmptyIterator",
       "org.apache.commons.collections4.functors.PredicateTransformer",
       "org.apache.commons.collections4.IterableUtils$1",
       "org.apache.commons.collections4.multimap.TransformedMultiValuedMap",
       "org.apache.commons.collections4.IterableUtils$3",
       "org.apache.commons.collections4.IterableUtils$2",
       "org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator",
       "org.apache.commons.collections4.IterableUtils$5",
       "org.apache.commons.collections4.IterableUtils$4",
       "org.apache.commons.collections4.IterableUtils$7",
       "org.apache.commons.collections4.trie.KeyAnalyzer",
       "org.apache.commons.collections4.IterableUtils$6",
       "org.apache.commons.collections4.multiset.SynchronizedMultiSet$SynchronizedSet",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator",
       "org.apache.commons.collections4.functors.NonePredicate",
       "org.apache.commons.collections4.map.SingletonMap",
       "org.apache.commons.collections4.MultiMapUtils",
       "org.apache.commons.collections4.set.TransformedNavigableSet",
       "org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator",
       "org.apache.commons.collections4.IterableUtils$9",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry",
       "org.apache.commons.collections4.IterableUtils$8",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView",
       "org.apache.commons.collections4.CollectionUtils",
       "org.apache.commons.collections4.multiset.AbstractMultiSetDecorator",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator",
       "org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef",
       "org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy",
       "org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator",
       "org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap",
       "org.apache.commons.collections4.iterators.ArrayListIterator",
       "org.apache.commons.collections4.functors.ChainedTransformer",
       "org.apache.commons.collections4.functors.FunctorUtils",
       "org.apache.commons.collections4.functors.PrototypeFactory",
       "org.apache.commons.collections4.iterators.ReverseListIterator",
       "org.apache.commons.collections4.collection.PredicatedCollection",
       "org.apache.commons.collections4.set.AbstractSetDecorator",
       "org.apache.commons.collections4.comparators.ComparableComparator",
       "org.apache.commons.collections4.ListUtils$1",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
       "org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator",
       "org.apache.commons.collections4.list.CursorableLinkedList",
       "org.apache.commons.collections4.list.SetUniqueList",
       "org.apache.commons.collections4.iterators.EnumerationIterator",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet",
       "org.apache.commons.collections4.map.StaticBucketMap$Values",
       "org.apache.commons.collections4.trie.UnmodifiableTrie",
       "org.apache.commons.collections4.IteratorUtils",
       "org.apache.commons.collections4.functors.NullIsFalsePredicate",
       "org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator",
       "org.apache.commons.collections4.functors.IdentityPredicate",
       "org.apache.commons.collections4.bag.TransformedBag",
       "org.apache.commons.collections4.set.TransformedSet",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet",
       "org.apache.commons.collections4.keyvalue.DefaultMapEntry",
       "org.apache.commons.collections4.iterators.FilterListIterator",
       "org.apache.commons.collections4.ListUtils",
       "org.apache.commons.collections4.map.AbstractReferenceMap",
       "org.apache.commons.collections4.iterators.ArrayIterator",
       "org.apache.commons.collections4.functors.FalsePredicate",
       "org.apache.commons.collections4.map.UnmodifiableSortedMap",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View",
       "org.apache.commons.collections4.list.TreeList",
       "org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator",
       "org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator",
       "org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList",
       "org.apache.commons.collections4.iterators.CollatingIterator",
       "org.apache.commons.collections4.map.TransformedMap",
       "org.apache.commons.collections4.OrderedMapIterator",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView",
       "org.apache.commons.collections4.queue.CircularFifoQueue$1",
       "org.apache.commons.collections4.collection.SynchronizedCollection",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$View",
       "org.apache.commons.collections4.iterators.ObjectArrayIterator",
       "org.apache.commons.collections4.map.StaticBucketMap$EntryIterator",
       "org.apache.commons.collections4.set.UnmodifiableSet",
       "org.apache.commons.collections4.IterableMap",
       "org.apache.commons.collections4.map.StaticBucketMap$BaseIterator",
       "org.apache.commons.collections4.bag.TransformedSortedBag",
       "org.apache.commons.collections4.map.StaticBucketMap$KeyIterator",
       "org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet",
       "org.apache.commons.collections4.bag.CollectionSortedBag",
       "org.apache.commons.collections4.bag.AbstractSortedBagDecorator",
       "org.apache.commons.collections4.map.MultiValueMap$1$1$1",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values",
       "org.apache.commons.collections4.functors.IfClosure",
       "org.apache.commons.collections4.bag.AbstractMapBag$MutableInteger",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
       "org.apache.commons.collections4.bag.SynchronizedSortedBag",
       "org.apache.commons.collections4.map.MultiValueMap",
       "org.apache.commons.collections4.ListValuedMap",
       "org.apache.commons.collections4.set.TransformedSortedSet",
       "org.apache.commons.collections4.MultiSetUtils",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView",
       "org.apache.commons.collections4.comparators.NullComparator",
       "org.apache.commons.collections4.Unmodifiable",
       "org.apache.commons.collections4.MapUtils",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap",
       "org.apache.commons.collections4.SplitMapUtils$1",
       "org.apache.commons.collections4.set.CompositeSet$SetMutator",
       "org.apache.commons.collections4.SortedBag",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator",
       "org.apache.commons.collections4.ResettableIterator",
       "org.apache.commons.collections4.map.StaticBucketMap$EntrySet",
       "org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator",
       "org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry",
       "org.apache.commons.collections4.OrderedIterator",
       "org.apache.commons.collections4.map.StaticBucketMap$1",
       "org.apache.commons.collections4.set.AbstractNavigableSetDecorator",
       "org.apache.commons.collections4.bag.AbstractBagDecorator",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator",
       "org.apache.commons.collections4.map.MultiValueMap$Values",
       "org.apache.commons.collections4.functors.ExceptionPredicate",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapEntry",
       "org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator",
       "org.apache.commons.collections4.set.PredicatedSortedSet",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
       "org.apache.commons.collections4.iterators.IteratorIterable$1",
       "org.apache.commons.collections4.map.StaticBucketMap$KeySet",
       "org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper",
       "org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator",
       "org.apache.commons.collections4.functors.AnyPredicate",
       "org.apache.commons.collections4.functors.CloneTransformer",
       "org.apache.commons.collections4.map.Flat3Map$EntrySet",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer",
       "org.apache.commons.collections4.Transformer",
       "org.apache.commons.collections4.set.ListOrderedSet$1",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
       "org.apache.commons.collections4.iterators.ObjectArrayListIterator",
       "org.apache.commons.collections4.bag.UnmodifiableBag",
       "org.apache.commons.collections4.sequence.InsertCommand",
       "org.apache.commons.collections4.functors.NOPClosure",
       "org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
       "org.apache.commons.collections4.SplitMapUtils",
       "org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator",
       "org.apache.commons.collections4.CollectionUtils$3",
       "org.apache.commons.collections4.trie.PatriciaTrie",
       "org.apache.commons.collections4.collection.IndexedCollection",
       "org.apache.commons.collections4.CollectionUtils$2",
       "org.apache.commons.collections4.CollectionUtils$1",
       "org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator",
       "org.apache.commons.collections4.iterators.BoundedIterator",
       "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
       "org.apache.commons.collections4.collection.CompositeCollection",
       "org.apache.commons.collections4.SetUtils",
       "org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap",
       "org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator",
       "org.apache.commons.collections4.FunctorException",
       "org.apache.commons.collections4.Factory",
       "org.apache.commons.collections4.map.AbstractIterableMap",
       "org.apache.commons.collections4.iterators.ObjectGraphIterator",
       "org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator",
       "org.apache.commons.collections4.map.Flat3Map$KeySetIterator",
       "org.apache.commons.collections4.collection.UnmodifiableCollection",
       "org.apache.commons.collections4.functors.SwitchClosure",
       "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
       "org.apache.commons.collections4.functors.ConstantFactory",
       "org.apache.commons.collections4.ResettableListIterator",
       "org.apache.commons.collections4.functors.PrototypeFactory$1",
       "org.apache.commons.collections4.comparators.ReverseComparator",
       "org.apache.commons.collections4.map.StaticBucketMap$Node",
       "org.apache.commons.collections4.map.LRUMap",
       "org.apache.commons.collections4.Equator",
       "org.apache.commons.collections4.queue.TransformedQueue",
       "org.apache.commons.collections4.iterators.UnmodifiableMapIterator",
       "org.apache.commons.collections4.functors.TransformerClosure",
       "org.apache.commons.collections4.set.AbstractSerializableSetDecorator",
       "org.apache.commons.collections4.multiset.AbstractMultiSet$UniqueSet",
       "org.apache.commons.collections4.functors.InstantiateFactory",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator",
       "org.apache.commons.collections4.FactoryUtils",
       "org.apache.commons.collections4.functors.CatchAndRethrowClosure",
       "org.apache.commons.collections4.keyvalue.MultiKey",
       "org.apache.commons.collections4.iterators.LazyIteratorChain",
       "org.apache.commons.collections4.map.StaticBucketMap$ValueIterator",
       "org.apache.commons.collections4.map.ListOrderedMap$ValuesView$1",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet",
       "org.apache.commons.collections4.map.Flat3Map$KeySet",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection",
       "org.apache.commons.collections4.bag.TreeBag",
       "org.apache.commons.collections4.iterators.PeekingIterator",
       "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
       "org.apache.commons.collections4.functors.NullIsTruePredicate",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues",
       "org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator",
       "org.apache.commons.collections4.BagUtils",
       "org.apache.commons.collections4.map.AbstractHashedMap$KeySet",
       "org.apache.commons.collections4.keyvalue.AbstractKeyValue",
       "org.apache.commons.collections4.iterators.IteratorChain",
       "org.apache.commons.collections4.sequence.CommandVisitor",
       "org.apache.commons.collections4.functors.ExceptionFactory",
       "org.apache.commons.collections4.functors.UniquePredicate",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator",
       "org.apache.commons.collections4.bidimap.UnmodifiableBidiMap",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse",
       "org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator",
       "org.apache.commons.collections4.iterators.ZippingIterator",
       "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
       "org.apache.commons.collections4.map.AbstractHashedMap$EntrySet",
       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
       "org.apache.commons.collections4.collection.PredicatedCollection$Builder",
       "org.apache.commons.collections4.map.FixedSizeSortedMap",
       "org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator",
       "org.apache.commons.collections4.multimap.ArrayListValuedHashMap",
       "org.apache.commons.collections4.queue.CircularFifoQueue",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap",
       "org.apache.commons.collections4.list.SetUniqueList$SetListListIterator",
       "org.apache.commons.collections4.map.ListOrderedMap$ValuesView",
       "org.apache.commons.collections4.functors.FactoryTransformer",
       "org.apache.commons.collections4.sequence.DeleteCommand",
       "org.apache.commons.collections4.iterators.IteratorIterable",
       "org.apache.commons.collections4.functors.StringValueTransformer",
       "org.apache.commons.collections4.functors.InstantiateTransformer",
       "org.apache.commons.collections4.FluentIterable",
       "org.apache.commons.collections4.sequence.ReplacementsHandler",
       "org.apache.commons.collections4.map.PredicatedSortedMap",
       "org.apache.commons.collections4.sequence.SequencesComparator$Snake",
       "org.apache.commons.collections4.BoundedMap",
       "org.apache.commons.collections4.bag.SynchronizedBag$SynchronizedBagSet",
       "org.apache.commons.collections4.TransformerUtils",
       "org.apache.commons.collections4.queue.AbstractQueueDecorator",
       "org.apache.commons.collections4.map.Flat3Map$FlatMapEntry",
       "org.apache.commons.collections4.map.LinkedMap$LinkedMapList",
       "org.apache.commons.collections4.comparators.BooleanComparator",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator",
       "org.apache.commons.collections4.map.LazyMap",
       "org.apache.commons.collections4.collection.UnmodifiableBoundedCollection",
       "org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter",
       "org.apache.commons.collections4.KeyValue",
       "org.apache.commons.collections4.MapUtils$1",
       "org.apache.commons.collections4.MapUtils$2",
       "org.apache.commons.collections4.comparators.TransformingComparator",
       "org.apache.commons.collections4.comparators.ComparatorChain",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet",
       "org.apache.commons.collections4.SetUtils$6",
       "org.apache.commons.collections4.SetUtils$5",
       "org.apache.commons.collections4.SetUtils$4",
       "org.apache.commons.collections4.SetUtils$3",
       "org.apache.commons.collections4.SetUtils$2",
       "org.apache.commons.collections4.SetUtils$1",
       "org.apache.commons.collections4.multiset.AbstractMapMultiSet",
       "org.apache.commons.collections4.map.PassiveExpiringMap",
       "org.apache.commons.collections4.iterators.SkippingIterator",
       "org.apache.commons.collections4.functors.OnePredicate",
       "org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator",
       "org.apache.commons.collections4.map.ListOrderedMap$EntrySetView",
       "org.apache.commons.collections4.ClosureUtils",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator",
       "org.apache.commons.collections4.map.ReferenceIdentityMap",
       "org.apache.commons.collections4.IterableUtils$10",
       "org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory",
       "org.apache.commons.collections4.IterableUtils$13",
       "org.apache.commons.collections4.list.TreeList$AVLNode",
       "org.apache.commons.collections4.IterableUtils$11",
       "org.apache.commons.collections4.IterableUtils$12",
       "org.apache.commons.collections4.sequence.ReplacementsFinder",
       "org.apache.commons.collections4.set.AbstractSortedSetDecorator",
       "org.apache.commons.collections4.iterators.PushbackIterator",
       "org.apache.commons.collections4.functors.IfTransformer",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
       "org.apache.commons.collections4.set.PredicatedNavigableSet",
       "org.apache.commons.collections4.list.LazyList",
       "org.apache.commons.collections4.ListUtils$Partition",
       "org.apache.commons.collections4.list.GrowthList",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues",
       "org.apache.commons.collections4.functors.ComparatorPredicate$Criterion",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
       "org.apache.commons.collections4.QueueUtils",
       "org.apache.commons.collections4.iterators.UnmodifiableListIterator",
       "org.apache.commons.collections4.map.ReferenceMap",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
       "org.apache.commons.collections4.functors.TruePredicate",
       "org.apache.commons.collections4.Trie",
       "org.apache.commons.collections4.functors.NotNullPredicate",
       "org.apache.commons.collections4.functors.DefaultEquator",
       "org.apache.commons.collections4.bag.UnmodifiableSortedBag",
       "org.apache.commons.collections4.iterators.AbstractListIteratorDecorator",
       "org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry",
       "org.apache.commons.collections4.iterators.AbstractIteratorDecorator",
       "org.apache.commons.collections4.functors.AndPredicate",
       "org.apache.commons.collections4.map.MultiValueMap$ValuesIterator",
       "org.apache.commons.collections4.list.TransformedList$TransformedListIterator",
       "org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator",
       "org.apache.commons.collections4.queue.UnmodifiableQueue",
       "org.apache.commons.collections4.map.StaticBucketMap$Lock",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap$AsMapEntrySet",
       "org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator",
       "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator",
       "org.apache.commons.collections4.map.AbstractHashedMap$HashEntry",
       "org.apache.commons.collections4.MultiSet",
       "org.apache.commons.collections4.map.TransformedSortedMap",
       "org.apache.commons.collections4.iterators.EmptyListIterator",
       "org.apache.commons.collections4.list.CursorableLinkedList$Cursor",
       "org.apache.commons.collections4.functors.InstanceofPredicate",
       "org.apache.commons.collections4.map.AbstractMapDecorator",
       "org.apache.commons.collections4.multimap.HashSetValuedHashMap",
       "org.apache.commons.collections4.sequence.SequencesComparator",
       "org.apache.commons.collections4.list.SetUniqueList$SetListIterator",
       "org.apache.commons.collections4.map.Flat3Map$EntryIterator",
       "org.apache.commons.collections4.IterableUtils$UnmodifiableIterable",
       "org.apache.commons.collections4.OrderedMap",
       "org.apache.commons.collections4.functors.OrPredicate",
       "org.apache.commons.collections4.map.UnmodifiableEntrySet",
       "org.apache.commons.collections4.iterators.LoopingListIterator",
       "org.apache.commons.collections4.comparators.FixedOrderComparator$1",
       "org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator",
       "org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet",
       "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
       "org.apache.commons.collections4.map.CompositeMap",
       "org.apache.commons.collections4.iterators.EmptyMapIterator",
       "org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator",
       "org.apache.commons.collections4.bag.AbstractMapBag",
       "org.apache.commons.collections4.iterators.TransformIterator",
       "org.apache.commons.collections4.set.PredicatedSet",
       "org.apache.commons.collections4.bag.HashBag",
       "org.apache.commons.collections4.map.Flat3Map$EntrySetIterator",
       "org.apache.commons.collections4.IterableGet",
       "org.apache.commons.collections4.sequence.EditCommand",
       "org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator",
       "org.apache.commons.collections4.Predicate",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement",
       "org.apache.commons.collections4.set.ListOrderedSet",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
       "org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView",
       "org.apache.commons.collections4.multiset.AbstractMapMultiSet$UniqueSetIterator",
       "org.apache.commons.collections4.BidiMap",
       "org.apache.commons.collections4.keyvalue.DefaultKeyValue",
       "org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator",
       "org.apache.commons.collections4.comparators.FixedOrderComparator",
       "org.apache.commons.collections4.multiset.AbstractMapMultiSet$MultiSetEntry",
       "org.apache.commons.collections4.bidimap.TreeBidiMap",
       "org.apache.commons.collections4.list.CursorableLinkedList$SubCursor",
       "org.apache.commons.collections4.SplitMapUtils$WrappedPut",
       "org.apache.commons.collections4.map.MultiKeyMap",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
       "org.apache.commons.collections4.functors.InvokerTransformer",
       "org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap",
       "org.apache.commons.collections4.map.StaticBucketMap",
       "org.apache.commons.collections4.sequence.EditScript",
       "org.apache.commons.collections4.Bag",
       "org.apache.commons.collections4.multiset.AbstractMultiSet$MultiSetIterator",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1",
       "org.apache.commons.collections4.SortedBidiMap",
       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
       "org.apache.commons.collections4.functors.ComparatorPredicate$1",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1$1",
       "org.apache.commons.collections4.CollectionUtils$CardinalityHelper",
       "org.apache.commons.collections4.functors.ClosureTransformer",
       "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry",
       "org.apache.commons.collections4.functors.EqualPredicate",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap",
       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
       "org.apache.commons.collections4.MultiSet$Entry",
       "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
       "org.apache.commons.collections4.set.UnmodifiableNavigableSet",
       "org.apache.commons.collections4.functors.TransformerPredicate",
       "org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy",
       "org.apache.commons.collections4.bag.PredicatedBag",
       "org.apache.commons.collections4.functors.PrototypeFactory$PrototypeSerializationFactory",
       "org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator",
       "org.apache.commons.collections4.SplitMapUtils$WrappedGet",
       "org.apache.commons.collections4.OrderedBidiMap",
       "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet",
       "org.apache.commons.collections4.functors.PredicateDecorator",
       "org.apache.commons.collections4.list.NodeCachingLinkedList",
       "org.apache.commons.collections4.set.CompositeSet",
       "org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator",
       "org.apache.commons.collections4.multiset.HashMultiSet",
       "org.apache.commons.collections4.iterators.UnmodifiableIterator",
       "org.apache.commons.collections4.multiset.UnmodifiableMultiSet",
       "org.apache.commons.collections4.keyvalue.TiedMapEntry",
       "org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator",
       "org.apache.commons.collections4.map.FixedSizeMap",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$1",
       "org.apache.commons.collections4.map.ListOrderedMap$KeySetView$1",
       "org.apache.commons.collections4.iterators.SingletonIterator",
       "org.apache.commons.collections4.map.UnmodifiableMap",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator",
       "org.apache.commons.collections4.MapIterator",
       "org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry",
       "org.apache.commons.collections4.set.UnmodifiableSortedSet",
       "org.apache.commons.collections4.map.LinkedMap",
       "org.apache.commons.collections4.functors.SwitchTransformer",
       "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator",
       "org.apache.commons.collections4.functors.NOPTransformer",
       "org.apache.commons.collections4.list.UnmodifiableList",
       "org.apache.commons.collections4.iterators.PermutationIterator",
       "org.apache.commons.collections4.SetUtils$SetView",
       "org.apache.commons.collections4.Closure",
       "org.apache.commons.collections4.map.CaseInsensitiveMap",
       "org.apache.commons.collections4.ArrayStack",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
       "org.apache.commons.collections4.IterableUtils",
       "org.apache.commons.collections4.multimap.AbstractSetValuedMap",
       "org.apache.commons.collections4.IterableUtils$2$1",
       "org.apache.commons.collections4.functors.NotPredicate",
       "org.apache.commons.collections4.EnumerationUtils",
       "org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator",
       "org.apache.commons.collections4.functors.ChainedClosure",
       "org.apache.commons.collections4.map.MultiValueMap$1",
       "org.apache.commons.collections4.BoundedCollection",
       "org.apache.commons.collections4.map.HashedMap",
       "org.apache.commons.collections4.functors.TransformedPredicate",
       "org.apache.commons.collections4.map.ListOrderedMap$KeySetView",
       "org.apache.commons.collections4.functors.AllPredicate",
       "org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength",
       "org.apache.commons.collections4.queue.PredicatedQueue",
       "org.apache.commons.collections4.map.SingletonMap$SingletonValues",
       "org.apache.commons.collections4.map.AbstractHashedMap$HashIterator",
       "org.apache.commons.collections4.ComparatorUtils",
       "org.apache.commons.collections4.MultiMap",
       "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
       "org.apache.commons.collections4.iterators.NodeListIterator",
       "org.apache.commons.collections4.multiset.AbstractMultiSet",
       "org.apache.commons.collections4.functors.NullIsExceptionPredicate",
       "org.apache.commons.collections4.keyvalue.AbstractMapEntry",
       "org.apache.commons.collections4.map.AbstractReferenceMap$SoftRef",
       "org.apache.commons.collections4.bag.PredicatedSortedBag",
       "org.apache.commons.collections4.functors.MapTransformer",
       "org.apache.commons.collections4.list.AbstractSerializableListDecorator",
       "org.apache.commons.collections4.iterators.FilterIterator",
       "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap$AsMapEntrySetIterator",
       "org.apache.commons.collections4.Get",
       "org.apache.commons.collections4.ListUtils$LcsVisitor",
       "org.apache.commons.collections4.functors.ComparatorPredicate",
       "org.apache.commons.collections4.map.AbstractHashedMap$Values",
       "org.apache.commons.collections4.map.Flat3Map$ValuesIterator",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
       "org.apache.commons.collections4.IterableSortedMap",
       "org.apache.commons.collections4.bag.AbstractMapBag$BagIterator",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySetIterator",
       "org.apache.commons.collections4.set.MapBackedSet",
       "org.apache.commons.collections4.iterators.UniqueFilterIterator",
       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
       "org.apache.commons.collections4.collection.TransformedCollection",
       "org.apache.commons.collections4.map.LazySortedMap",
       "org.apache.commons.collections4.MultiValuedMap",
       "org.apache.commons.collections4.bag.CollectionBag",
       "org.apache.commons.collections4.map.Flat3Map$Values",
       "org.apache.commons.collections4.list.AbstractListDecorator",
       "org.apache.commons.collections4.bidimap.DualTreeBidiMap",
       "org.apache.commons.collections4.list.FixedSizeList",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry",
       "org.apache.commons.collections4.map.Flat3Map$FlatMapIterator",
       "org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap",
       "org.apache.commons.collections4.list.PredicatedList",
       "org.apache.commons.collections4.PredicateUtils",
       "org.apache.commons.collections4.map.DefaultedMap",
       "org.apache.commons.collections4.list.TreeList$1",
       "org.apache.commons.collections4.map.AbstractOrderedMapDecorator",
       "org.apache.commons.collections4.ListUtils$CharSequenceAsList",
       "org.apache.commons.collections4.multiset.AbstractMultiSet$1",
       "org.apache.commons.collections4.iterators.LoopingIterator",
       "org.apache.commons.collections4.iterators.EntrySetMapIterator",
       "org.apache.commons.collections4.iterators.IteratorEnumeration",
       "org.apache.commons.collections4.list.AbstractLinkedList$Node",
       "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet",
       "org.apache.commons.collections4.iterators.ListIteratorWrapper",
       "org.apache.commons.collections4.functors.AbstractQuantifierPredicate",
       "org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator",
       "org.apache.commons.collections4.functors.ExceptionClosure",
       "org.apache.commons.collections4.functors.ForClosure",
       "org.apache.commons.collections4.map.CompositeMap$MapMutator",
       "org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator",
       "org.apache.commons.collections4.list.AbstractLinkedList",
       "org.apache.commons.collections4.list.TreeList$TreeListIterator",
       "org.apache.commons.collections4.sequence.KeepCommand",
       "org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger",
       "org.apache.commons.collections4.bidimap.DualHashBidiMap",
       "org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory",
       "org.apache.commons.collections4.functors.ConstantTransformer",
       "org.apache.commons.collections4.functors.ExceptionTransformer",
       "org.apache.commons.collections4.Put",
       "org.apache.commons.collections4.map.PredicatedMap",
       "org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator",
       "org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry",
       "org.apache.commons.collections4.map.MultiValueMap$1$1",
       "org.apache.commons.collections4.map.UnmodifiableOrderedMap",
       "org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator",
       "org.apache.commons.collections4.CollectionUtils$EquatorWrapper"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "org.json:json:jar:20160810:compile",
      "coordinates": "org.json:json:20160810",
      "groupId": "org.json",
      "artifactId": "json",
      "version": "20160810",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 54495,
      "type": "transitive",
      "status": "bloated",
      "parent": "net.dv8tion:JDA:jar:3.3.1_301:compile",
      "allTypes": [
       "org.json.JSONML",
       "org.json.JSONPointer",
       "org.json.HTTPTokener",
       "org.json.CDL",
       "org.json.JSONObject$Null",
       "org.json.JSONTokener",
       "org.json.Property",
       "org.json.Cookie",
       "org.json.JSONWriter",
       "org.json.JSONString",
       "org.json.JSONException",
       "org.json.JSONObject$1",
       "org.json.JSONObject",
       "org.json.JSONPointer$Builder",
       "org.json.HTTP",
       "org.json.JSONPointerException",
       "org.json.XML",
       "org.json.JSONStringer",
       "org.json.CookieList",
       "org.json.JSONArray",
       "org.json.XMLTokener"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "net.sf.trove4j:trove4j:jar:3.0.3:compile",
      "coordinates": "net.sf.trove4j:trove4j:3.0.3",
      "groupId": "net.sf.trove4j",
      "artifactId": "trove4j",
      "version": "3.0.3",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 2523218,
      "type": "transitive",
      "status": "bloated",
      "parent": "net.dv8tion:JDA:jar:3.3.1_301:compile",
      "allTypes": [
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap",
       "gnu.trove.decorator.TLongCharMapDecorator$1",
       "gnu.trove.decorator.TIntFloatMapDecorator",
       "gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1",
       "gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1",
       "gnu.trove.decorator.TIntShortMapDecorator",
       "gnu.trove.map.hash.TDoubleCharHashMap$TKeyView$1",
       "gnu.trove.map.hash.TDoubleObjectHashMap$2",
       "gnu.trove.function.TLongFunction",
       "gnu.trove.map.hash.TDoubleObjectHashMap$1",
       "gnu.trove.map.hash.TLongDoubleHashMap$TKeyView$1",
       "gnu.trove.iterator.TShortLongIterator",
       "gnu.trove.decorator.TDoubleLongMapDecorator$1$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection",
       "gnu.trove.iterator.TFloatLongIterator",
       "gnu.trove.map.hash.TIntObjectHashMap$ValueView",
       "gnu.trove.map.hash.TObjectIntHashMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectCharMap$1",
       "gnu.trove.map.hash.TLongDoubleHashMap$TKeyView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortList",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongList",
       "gnu.trove.map.hash.TShortIntHashMap$TValueView$1",
       "gnu.trove.map.hash.TIntByteHashMap$TKeyView$1",
       "gnu.trove.iterator.TShortFloatIterator",
       "gnu.trove.procedure.TCharFloatProcedure",
       "gnu.trove.decorator.TDoubleObjectMapDecorator$1",
       "gnu.trove.map.hash.TLongFloatHashMap",
       "gnu.trove.map.hash.TFloatObjectHashMap$TFloatObjectHashIterator",
       "gnu.trove.decorator.TLongSetDecorator",
       "gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortObjectMap$1",
       "gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1",
       "gnu.trove.map.hash.TLongShortHashMap$TValueView",
       "gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator",
       "gnu.trove.list.TShortList",
       "gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink",
       "gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortValueHashIterator",
       "gnu.trove.decorator.TIntIntMapDecorator$1$1",
       "gnu.trove.list.linked.TCharLinkedList$TCharLink",
       "gnu.trove.impl.sync.TSynchronizedByteShortMap",
       "gnu.trove.list.linked.TCharLinkedList$1",
       "gnu.trove.impl.hash.TShortHash",
       "gnu.trove.procedure.TObjectCharProcedure",
       "gnu.trove.map.hash.TDoubleShortHashMap$TValueView$1",
       "gnu.trove.list.array.TFloatArrayList$1",
       "gnu.trove.map.hash.TLongLongHashMap$TLongLongKeyHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap",
       "gnu.trove.impl.sync.TSynchronizedCharCollection",
       "gnu.trove.impl.sync.TSynchronizedIntLongMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntDoubleMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap$1",
       "gnu.trove.map.hash.TIntDoubleHashMap$TKeyView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharCharMap",
       "gnu.trove.map.hash.TIntLongHashMap$1",
       "gnu.trove.map.hash.TLongIntHashMap$TLongIntHashIterator",
       "gnu.trove.map.hash.TFloatIntHashMap",
       "gnu.trove.map.hash.TObjectLongHashMap$TLongValueCollection$1",
       "gnu.trove.decorator.TDoubleByteMapDecorator$1$1$1",
       "gnu.trove.decorator.TObjectIntMapDecorator$1$1",
       "gnu.trove.map.hash.TByteShortHashMap$TByteShortKeyHashIterator",
       "gnu.trove.map.hash.TLongLongHashMap$TLongLongValueHashIterator",
       "gnu.trove.decorator.TShortFloatMapDecorator$1$1$1",
       "gnu.trove.map.hash.TByteShortHashMap$TByteShortValueHashIterator",
       "gnu.trove.map.hash.TFloatDoubleHashMap$TKeyView",
       "gnu.trove.map.hash.TFloatCharHashMap$TValueView",
       "gnu.trove.map.hash.TShortFloatHashMap$TValueView",
       "gnu.trove.decorator.TLongIntMapDecorator$1$1",
       "gnu.trove.map.hash.TIntIntHashMap",
       "gnu.trove.iterator.TCharFloatIterator",
       "gnu.trove.map.hash.TDoubleByteHashMap$TValueView",
       "gnu.trove.procedure.TCharShortProcedure",
       "gnu.trove.impl.hash.TShortFloatHash",
       "gnu.trove.iterator.TCharObjectIterator",
       "gnu.trove.iterator.TLongIterator",
       "gnu.trove.decorator.TFloatByteMapDecorator$1$1$1",
       "gnu.trove.stack.TCharStack",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap",
       "gnu.trove.procedure.TDoubleDoubleProcedure",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap$1",
       "gnu.trove.map.hash.TLongDoubleHashMap$1",
       "gnu.trove.map.hash.TObjectLongHashMap$TLongValueCollection$TObjectLongValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleObjectMap$1",
       "gnu.trove.map.TIntByteMap",
       "gnu.trove.map.TByteCharMap",
       "gnu.trove.map.hash.TByteLongHashMap$1",
       "gnu.trove.procedure.TShortProcedure",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap$1",
       "gnu.trove.map.hash.TObjectShortHashMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap$1",
       "gnu.trove.map.hash.TLongLongHashMap",
       "gnu.trove.decorator.TIntListDecorator",
       "gnu.trove.impl.sync.TSynchronizedLongList",
       "gnu.trove.map.TIntDoubleMap",
       "gnu.trove.map.TObjectShortMap",
       "gnu.trove.map.hash.TFloatIntHashMap$TFloatIntValueHashIterator",
       "gnu.trove.map.custom_hash.TObjectFloatCustomHashMap",
       "gnu.trove.map.hash.TObjectLongHashMap$1",
       "gnu.trove.map.hash.TObjectLongHashMap$2",
       "gnu.trove.map.hash.TIntFloatHashMap$TIntFloatKeyHashIterator",
       "gnu.trove.decorator.TDoubleListDecorator",
       "gnu.trove.impl.sync.TSynchronizedDoubleDoubleMap",
       "gnu.trove.map.hash.TByteCharHashMap$1",
       "gnu.trove.procedure.TFloatObjectProcedure",
       "gnu.trove.map.hash.TDoubleByteHashMap$TDoubleByteHashIterator",
       "gnu.trove.decorator.TDoubleObjectMapDecorator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap",
       "gnu.trove.decorator.TShortCharMapDecorator$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortIntMap",
       "gnu.trove.set.hash.TIntHashSet",
       "gnu.trove.impl.sync.TSynchronizedRandomAccessLongList",
       "gnu.trove.decorator.TFloatShortMapDecorator$1$1$1",
       "gnu.trove.map.hash.TFloatLongHashMap",
       "gnu.trove.iterator.TObjectFloatIterator",
       "gnu.trove.map.hash.TCharIntHashMap$TCharIntHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap$1",
       "gnu.trove.decorator.TByteShortMapDecorator$1",
       "gnu.trove.map.hash.TCharIntHashMap$1",
       "gnu.trove.decorator.TIntSetDecorator$1",
       "gnu.trove.decorator.TObjectLongMapDecorator$1",
       "gnu.trove.decorator.TShortSetDecorator",
       "gnu.trove.map.TByteObjectMap",
       "gnu.trove.map.hash.TShortByteHashMap$TShortByteKeyHashIterator",
       "gnu.trove.decorator.TByteFloatMapDecorator$1",
       "gnu.trove.list.TCharList",
       "gnu.trove.list.array.TShortArrayList",
       "gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TLongValueCollection$1",
       "gnu.trove.impl.sync.TSynchronizedFloatObjectMap",
       "gnu.trove.procedure.TFloatProcedure",
       "gnu.trove.impl.hash.TDoubleByteHash",
       "gnu.trove.list.linked.TLongLinkedList$RemoveProcedure",
       "gnu.trove.map.hash.TCharDoubleHashMap$TCharDoubleKeyHashIterator",
       "gnu.trove.decorator.TIntByteMapDecorator$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap",
       "gnu.trove.decorator.TDoubleIntMapDecorator",
       "gnu.trove.list.linked.TLongLinkedList$1",
       "gnu.trove.iterator.TIterator",
       "gnu.trove.map.hash.TIntShortHashMap$TValueView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleList",
       "gnu.trove.impl.hash.TFloatFloatHash",
       "gnu.trove.map.hash.TCharByteHashMap$TCharByteValueHashIterator",
       "gnu.trove.map.hash.TLongObjectHashMap$ValueView",
       "gnu.trove.list.linked.TShortLinkedList",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharCharMap$1",
       "gnu.trove.map.hash.TIntObjectHashMap",
       "gnu.trove.map.hash.TShortLongHashMap$TValueView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1",
       "gnu.trove.map.TCharIntMap",
       "gnu.trove.decorator.TFloatLongMapDecorator$1$1$1",
       "gnu.trove.map.hash.TIntLongHashMap$TKeyView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap",
       "gnu.trove.map.hash.TCharDoubleHashMap$TKeyView$1",
       "gnu.trove.map.hash.TByteObjectHashMap$KeyView$TByteHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongByteMap",
       "gnu.trove.impl.hash.THashIterator",
       "gnu.trove.impl.sync.TSynchronizedLongFloatMap",
       "gnu.trove.iterator.TFloatFloatIterator",
       "gnu.trove.map.hash.TIntIntHashMap$1",
       "gnu.trove.decorator.TDoubleIntMapDecorator$1$1",
       "gnu.trove.impl.hash.TShortByteHash",
       "gnu.trove.map.hash.TCharByteHashMap",
       "gnu.trove.decorator.TIntIntMapDecorator",
       "gnu.trove.decorator.TObjectDoubleMapDecorator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection",
       "gnu.trove.map.hash.TShortByteHashMap$TValueView$1",
       "gnu.trove.impl.sync.TSynchronizedByteSet",
       "gnu.trove.map.hash.TObjectDoubleHashMap$TDoubleValueCollection$TObjectDoubleValueHashIterator",
       "gnu.trove.procedure.TLongDoubleProcedure",
       "gnu.trove.map.hash.TShortObjectHashMap$ValueView",
       "gnu.trove.map.TFloatShortMap",
       "gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$KeyView",
       "gnu.trove.impl.hash.TCharByteHash",
       "gnu.trove.decorator.TFloatSetDecorator",
       "gnu.trove.impl.sync.TSynchronizedShortObjectMap",
       "gnu.trove.list.array.TFloatArrayList",
       "gnu.trove.map.hash.TShortShortHashMap$TKeyView",
       "gnu.trove.map.hash.TShortDoubleHashMap$TValueView",
       "gnu.trove.impl.hash.TDoubleShortHash",
       "gnu.trove.iterator.TLongByteIterator",
       "gnu.trove.decorator.TCharDoubleMapDecorator$1$1",
       "gnu.trove.impl.sync.TSynchronizedObjectFloatMap",
       "gnu.trove.decorator.TShortCharMapDecorator",
       "gnu.trove.decorator.TLongByteMapDecorator",
       "gnu.trove.map.hash.TFloatIntHashMap$TValueView",
       "gnu.trove.set.hash.THashSet$1",
       "gnu.trove.iterator.TCharByteIterator",
       "gnu.trove.map.hash.TCharDoubleHashMap$TCharDoubleValueHashIterator",
       "gnu.trove.decorator.TObjectShortMapDecorator",
       "gnu.trove.impl.hash.TByteHash",
       "gnu.trove.set.hash.TLongHashSet",
       "gnu.trove.map.hash.TShortFloatHashMap$TShortFloatValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortObjectMap",
       "gnu.trove.map.TByteFloatMap",
       "gnu.trove.map.hash.TCharLongHashMap$TKeyView$1",
       "gnu.trove.map.hash.TIntCharHashMap$TKeyView",
       "gnu.trove.map.hash.TShortIntHashMap",
       "gnu.trove.map.hash.TIntIntHashMap$TKeyView",
       "gnu.trove.impl.sync.TSynchronizedRandomAccessCharList",
       "gnu.trove.map.hash.TDoubleLongHashMap$TValueView$1",
       "gnu.trove.map.hash.TDoubleByteHashMap$TDoubleByteValueHashIterator",
       "gnu.trove.map.hash.TObjectByteHashMap$MapBackedView",
       "gnu.trove.map.hash.TFloatObjectHashMap$ValueView",
       "gnu.trove.decorator.TCharObjectMapDecorator$1$1$1",
       "gnu.trove.decorator.TByteCharMapDecorator$1$1",
       "gnu.trove.decorator.TFloatListDecorator",
       "gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TShortValueCollection",
       "gnu.trove.map.hash.TIntByteHashMap$1",
       "gnu.trove.map.hash.TByteObjectHashMap$TByteObjectHashIterator",
       "gnu.trove.iterator.TByteCharIterator",
       "gnu.trove.list.array.TShortArrayList$TShortArrayIterator",
       "gnu.trove.map.hash.TIntDoubleHashMap$TIntDoubleValueHashIterator",
       "gnu.trove.map.hash.TIntFloatHashMap$TIntFloatValueHashIterator",
       "gnu.trove.impl.sync.TSynchronizedCharSet",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntDoubleMap",
       "gnu.trove.iterator.TIntShortIterator",
       "gnu.trove.list.array.TCharArrayList$TCharArrayIterator",
       "gnu.trove.decorator.TFloatShortMapDecorator$1",
       "gnu.trove.impl.hash.TIntCharHash",
       "gnu.trove.map.hash.TCharCharHashMap$TKeyView",
       "gnu.trove.map.hash.TFloatFloatHashMap$TKeyView",
       "gnu.trove.decorator.TIntLongMapDecorator$1",
       "gnu.trove.map.hash.TByteObjectHashMap",
       "gnu.trove.impl.hash.TLongCharHash",
       "gnu.trove.decorator.TCharSetDecorator",
       "gnu.trove.decorator.TIntDoubleMapDecorator",
       "gnu.trove.list.linked.TFloatLinkedList$1",
       "gnu.trove.iterator.TFloatDoubleIterator",
       "gnu.trove.map.hash.TCustomHashMap$HashProcedure",
       "gnu.trove.strategy.HashingStrategy",
       "gnu.trove.map.TObjectIntMap",
       "gnu.trove.map.hash.TByteDoubleHashMap$TKeyView",
       "gnu.trove.map.hash.TByteByteHashMap$TByteByteKeyHashIterator",
       "gnu.trove.map.hash.TShortDoubleHashMap",
       "gnu.trove.map.TIntShortMap",
       "gnu.trove.list.TIntList",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection$1",
       "gnu.trove.procedure.TObjectByteProcedure",
       "gnu.trove.impl.sync.TSynchronizedFloatIntMap",
       "gnu.trove.iterator.TByteShortIterator",
       "gnu.trove.decorator.TDoubleByteMapDecorator",
       "gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$MapBackedView",
       "gnu.trove.decorator.TObjectDoubleMapDecorator$1",
       "gnu.trove.decorator.TDoubleObjectMapDecorator$1$1",
       "gnu.trove.decorator.TCharFloatMapDecorator$1$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCollection",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteLongMap",
       "gnu.trove.map.hash.TCharShortHashMap$TValueView",
       "gnu.trove.procedure.TIntFloatProcedure",
       "gnu.trove.map.hash.TIntLongHashMap$TIntLongHashIterator",
       "gnu.trove.decorator.TObjectFloatMapDecorator$1$1",
       "gnu.trove.map.hash.TObjectCharHashMap$MapBackedView",
       "gnu.trove.stack.TDoubleStack",
       "gnu.trove.map.hash.TDoubleFloatHashMap$TValueView$1",
       "gnu.trove.map.hash.TDoubleLongHashMap$1",
       "gnu.trove.map.hash.TDoubleByteHashMap$TValueView$1",
       "gnu.trove.map.hash.TShortIntHashMap$1",
       "gnu.trove.decorator.TCharByteMapDecorator$1$1",
       "gnu.trove.map.hash.TIntLongHashMap",
       "gnu.trove.map.hash.TIntObjectHashMap$KeyView$TIntHashIterator",
       "gnu.trove.map.hash.TByteIntHashMap",
       "gnu.trove.decorator.TIntLongMapDecorator",
       "gnu.trove.iterator.TFloatCharIterator",
       "gnu.trove.iterator.TPrimitiveIterator",
       "gnu.trove.impl.sync.TSynchronizedCharLongMap",
       "gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$TObjectDoubleHashIterator",
       "gnu.trove.decorator.TLongShortMapDecorator$1$1",
       "gnu.trove.map.hash.TObjectCharHashMap$TCharValueCollection",
       "gnu.trove.iterator.TCharIntIterator",
       "gnu.trove.map.hash.TLongCharHashMap$TValueView",
       "gnu.trove.function.TCharFunction",
       "gnu.trove.list.TFloatList",
       "gnu.trove.impl.hash.TShortShortHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap",
       "gnu.trove.map.hash.TByteDoubleHashMap$TKeyView$1",
       "gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleValueHashIterator",
       "gnu.trove.map.hash.TCharLongHashMap$TCharLongValueHashIterator",
       "gnu.trove.map.hash.TIntByteHashMap$TIntByteKeyHashIterator",
       "gnu.trove.decorator.TDoubleIntMapDecorator$1$1$1",
       "gnu.trove.map.hash.TLongShortHashMap$TLongShortValueHashIterator",
       "gnu.trove.decorator.TByteLongMapDecorator$1$1",
       "gnu.trove.procedure.TLongByteProcedure",
       "gnu.trove.procedure.array.ToObjectArrayProceedure",
       "gnu.trove.queue.TFloatQueue",
       "gnu.trove.map.hash.TFloatIntHashMap$TKeyView",
       "gnu.trove.procedure.TShortDoubleProcedure",
       "gnu.trove.map.hash.TObjectCharHashMap",
       "gnu.trove.map.hash.TLongShortHashMap$TLongShortHashIterator",
       "gnu.trove.impl.hash.TIntLongHash",
       "gnu.trove.map.hash.TDoubleByteHashMap",
       "gnu.trove.map.hash.THashMap$1",
       "gnu.trove.map.hash.TLongObjectHashMap$TLongObjectHashIterator",
       "gnu.trove.map.hash.TShortIntHashMap$TValueView",
       "gnu.trove.map.hash.TCharFloatHashMap",
       "gnu.trove.map.hash.TLongCharHashMap$TLongCharHashIterator",
       "gnu.trove.map.hash.TCharIntHashMap",
       "gnu.trove.procedure.TIntCharProcedure",
       "gnu.trove.decorator.TFloatCharMapDecorator$1$1",
       "gnu.trove.map.hash.TCharFloatHashMap$TKeyView",
       "gnu.trove.map.TByteDoubleMap",
       "gnu.trove.impl.sync.TSynchronizedShortFloatMap",
       "gnu.trove.map.hash.TCustomHashMap$EntryView$EntryIterator",
       "gnu.trove.map.hash.TDoubleObjectHashMap",
       "gnu.trove.map.hash.TCharFloatHashMap$TCharFloatHashIterator",
       "gnu.trove.map.hash.TLongIntHashMap$1",
       "gnu.trove.decorator.TCharObjectMapDecorator",
       "gnu.trove.map.hash.TDoubleFloatHashMap$TKeyView$1",
       "gnu.trove.decorator.TCharFloatMapDecorator$1",
       "gnu.trove.impl.hash.TFloatHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap$1",
       "gnu.trove.decorator.TLongCharMapDecorator$1$1",
       "gnu.trove.map.hash.TObjectIntHashMap$KeyView",
       "gnu.trove.map.hash.TCharFloatHashMap$1",
       "gnu.trove.impl.hash.TShortIntHash",
       "gnu.trove.map.hash.TLongFloatHashMap$TKeyView",
       "gnu.trove.decorator.TFloatLongMapDecorator$1$1",
       "gnu.trove.decorator.TShortShortMapDecorator",
       "gnu.trove.procedure.TObjectShortProcedure",
       "gnu.trove.decorator.TShortLongMapDecorator",
       "gnu.trove.map.hash.TIntIntHashMap$TValueView$1",
       "gnu.trove.decorator.TDoubleShortMapDecorator$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap",
       "gnu.trove.map.hash.TIntCharHashMap$TValueView$1",
       "gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortHashIterator",
       "gnu.trove.iterator.TShortObjectIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharList",
       "gnu.trove.map.hash.TCharCharHashMap$TCharCharHashIterator",
       "gnu.trove.map.TFloatByteMap",
       "gnu.trove.procedure.TDoubleByteProcedure",
       "gnu.trove.impl.hash.TByteFloatHash",
       "gnu.trove.map.hash.TFloatObjectHashMap$MapBackedView",
       "gnu.trove.map.hash.TLongShortHashMap",
       "gnu.trove.set.hash.TShortHashSet$TShortHashIterator",
       "gnu.trove.map.hash.TObjectLongHashMap$KeyView",
       "gnu.trove.map.TDoubleShortMap",
       "gnu.trove.map.hash.TDoubleFloatHashMap$TKeyView",
       "gnu.trove.decorator.TLongIntMapDecorator$1$1$1",
       "gnu.trove.map.hash.TLongFloatHashMap$TValueView",
       "gnu.trove.impl.sync.TSynchronizedObjectLongMap",
       "gnu.trove.list.linked.TShortLinkedList$TShortLink",
       "gnu.trove.map.hash.TIntFloatHashMap$TKeyView",
       "gnu.trove.decorator.TDoubleFloatMapDecorator",
       "gnu.trove.procedure.TCharProcedure",
       "gnu.trove.impl.hash.TIntFloatHash",
       "gnu.trove.map.hash.TIntByteHashMap$TIntByteValueHashIterator",
       "gnu.trove.decorator.TLongLongMapDecorator$1$1",
       "gnu.trove.map.hash.TByteObjectHashMap$ValueView",
       "gnu.trove.impl.sync.TSynchronizedLongLongMap",
       "gnu.trove.map.hash.TByteLongHashMap$TByteLongHashIterator",
       "gnu.trove.map.hash.TLongFloatHashMap$TLongFloatKeyHashIterator",
       "gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TObjectByteHashIterator",
       "gnu.trove.map.hash.TIntCharHashMap",
       "gnu.trove.decorator.TShortCharMapDecorator$1$1",
       "gnu.trove.impl.sync.TSynchronizedFloatByteMap",
       "gnu.trove.map.hash.THashMap$KeyView",
       "gnu.trove.map.hash.TByteShortHashMap$TKeyView",
       "gnu.trove.map.hash.TCharByteHashMap$TValueView",
       "gnu.trove.map.hash.TLongDoubleHashMap$TLongDoubleHashIterator",
       "gnu.trove.map.hash.TShortCharHashMap$1",
       "gnu.trove.map.hash.TByteDoubleHashMap$TByteDoubleHashIterator",
       "gnu.trove.impl.sync.TSynchronizedByteCharMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap$1",
       "gnu.trove.iterator.TCharDoubleIterator",
       "gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TLongValueCollection",
       "gnu.trove.map.hash.TDoubleLongHashMap$TValueView",
       "gnu.trove.map.hash.TCharShortHashMap$1",
       "gnu.trove.decorator.TObjectFloatMapDecorator$1$1$1",
       "gnu.trove.function.TObjectFunction",
       "gnu.trove.map.hash.TIntCharHashMap$TIntCharHashIterator",
       "gnu.trove.map.hash.TShortObjectHashMap$2",
       "gnu.trove.map.hash.TShortObjectHashMap$1",
       "gnu.trove.decorator.TByteObjectMapDecorator$1",
       "gnu.trove.decorator.TByteListDecorator",
       "gnu.trove.decorator.TLongSetDecorator$1",
       "gnu.trove.impl.hash.TDoubleFloatHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap$1",
       "gnu.trove.map.hash.TLongIntHashMap$TLongIntKeyHashIterator",
       "gnu.trove.decorator.TFloatIntMapDecorator$1$1",
       "gnu.trove.impl.sync.TSynchronizedDoubleFloatMap",
       "gnu.trove.decorator.TObjectDoubleMapDecorator$1$1$1",
       "gnu.trove.impl.sync.TSynchronizedLongCharMap",
       "gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TObjectCharHashIterator",
       "gnu.trove.map.hash.TDoubleFloatHashMap",
       "gnu.trove.decorator.TCharLongMapDecorator",
       "gnu.trove.iterator.TFloatIntIterator",
       "gnu.trove.decorator.TLongFloatMapDecorator$1$1$1",
       "gnu.trove.iterator.hash.TObjectHashIterator",
       "gnu.trove.impl.hash.TLongByteHash",
       "gnu.trove.map.TByteShortMap",
       "gnu.trove.map.hash.TShortByteHashMap$TKeyView",
       "gnu.trove.impl.sync.TSynchronizedFloatDoubleMap",
       "gnu.trove.set.TFloatSet",
       "gnu.trove.impl.sync.TSynchronizedFloatFloatMap",
       "gnu.trove.map.TDoubleLongMap",
       "gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator",
       "gnu.trove.decorator.TShortDoubleMapDecorator",
       "gnu.trove.list.linked.TFloatLinkedList$TFloatLink",
       "gnu.trove.impl.hash.TLongLongHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongCharMap",
       "gnu.trove.map.hash.TIntCharHashMap$TValueView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap$1",
       "gnu.trove.map.hash.TFloatByteHashMap$TFloatByteKeyHashIterator",
       "gnu.trove.map.TCharDoubleMap",
       "gnu.trove.map.hash.TDoubleByteHashMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap",
       "gnu.trove.map.hash.TIntDoubleHashMap$TIntDoubleKeyHashIterator",
       "gnu.trove.decorator.TIntObjectMapDecorator$1",
       "gnu.trove.decorator.TDoubleSetDecorator$1",
       "gnu.trove.procedure.TIntIntProcedure",
       "gnu.trove.map.TShortDoubleMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessByteList",
       "gnu.trove.decorator.TIntSetDecorator",
       "gnu.trove.decorator.TFloatDoubleMapDecorator$1$1",
       "gnu.trove.map.custom_hash.TObjectFloatCustomHashMap$TFloatValueCollection",
       "gnu.trove.impl.hash.TIntShortHash",
       "gnu.trove.map.hash.TCharCharHashMap$TValueView$1",
       "gnu.trove.map.hash.TByteLongHashMap$TKeyView",
       "gnu.trove.procedure.TByteByteProcedure",
       "gnu.trove.iterator.TByteDoubleIterator",
       "gnu.trove.procedure.TLongShortProcedure",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap$1",
       "gnu.trove.decorator.TLongListDecorator",
       "gnu.trove.list.array.TByteArrayList$1",
       "gnu.trove.decorator.TFloatSetDecorator$1",
       "gnu.trove.decorator.TLongObjectMapDecorator$1$1$1",
       "gnu.trove.map.hash.THashMap$HashProcedure",
       "gnu.trove.map.hash.TFloatShortHashMap$TFloatShortHashIterator",
       "gnu.trove.decorator.TObjectCharMapDecorator$1",
       "gnu.trove.map.hash.TShortFloatHashMap$TShortFloatKeyHashIterator",
       "gnu.trove.impl.hash.TByteShortHash",
       "gnu.trove.impl.sync.TSynchronizedDoubleObjectMap",
       "gnu.trove.map.TFloatDoubleMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortDoubleMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntList",
       "gnu.trove.map.hash.TLongIntHashMap$TKeyView$1",
       "gnu.trove.map.custom_hash.TObjectFloatCustomHashMap$TFloatValueCollection$TObjectFloatValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList",
       "gnu.trove.map.hash.TObjectByteHashMap$TByteValueCollection$TObjectByteValueHashIterator",
       "gnu.trove.map.hash.TShortShortHashMap$TValueView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntSet",
       "gnu.trove.map.hash.TCharIntHashMap$TValueView",
       "gnu.trove.map.hash.TCharCharHashMap$TKeyView$1",
       "gnu.trove.decorator.TFloatByteMapDecorator$1$1",
       "gnu.trove.map.hash.TLongObjectHashMap$KeyView",
       "gnu.trove.decorator.TShortSetDecorator$1",
       "gnu.trove.iterator.TCharCharIterator",
       "gnu.trove.map.hash.TByteObjectHashMap$ValueView$TByteObjectValueHashIterator",
       "gnu.trove.decorator.TFloatDoubleMapDecorator$1$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap",
       "gnu.trove.map.hash.TCharObjectHashMap$ValueView$TCharObjectValueHashIterator",
       "gnu.trove.impl.sync.TSynchronizedLongDoubleMap",
       "gnu.trove.procedure.TDoubleObjectProcedure",
       "gnu.trove.decorator.TObjectCharMapDecorator$1$1",
       "gnu.trove.map.hash.TIntShortHashMap$TIntShortValueHashIterator",
       "gnu.trove.impl.hash.TCharDoubleHash",
       "gnu.trove.list.linked.TLinkedList$IteratorImpl",
       "gnu.trove.map.hash.TByteDoubleHashMap$TByteDoubleKeyHashIterator",
       "gnu.trove.iterator.TAdvancingIterator",
       "gnu.trove.map.TMap",
       "gnu.trove.map.hash.TByteCharHashMap$TByteCharHashIterator",
       "gnu.trove.list.array.TDoubleArrayList$1",
       "gnu.trove.decorator.TObjectCharMapDecorator",
       "gnu.trove.map.hash.TDoubleByteHashMap$TDoubleByteKeyHashIterator",
       "gnu.trove.map.hash.TObjectIntHashMap$2",
       "gnu.trove.map.hash.TDoubleDoubleHashMap$TKeyView",
       "gnu.trove.procedure.TIntDoubleProcedure",
       "gnu.trove.map.hash.TLongLongHashMap$TValueView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection$1",
       "gnu.trove.iterator.TCharShortIterator",
       "gnu.trove.decorator.TCharLongMapDecorator$1",
       "gnu.trove.map.hash.TDoubleShortHashMap$TValueView",
       "gnu.trove.map.hash.TShortObjectHashMap",
       "gnu.trove.procedure.TDoubleProcedure",
       "gnu.trove.map.hash.TIntShortHashMap",
       "gnu.trove.iterator.TDoubleIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharShortMap",
       "gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TShortValueCollection$TObjectShortValueHashIterator",
       "gnu.trove.iterator.TDoubleLongIterator",
       "gnu.trove.map.hash.TDoubleIntHashMap$TValueView",
       "gnu.trove.map.hash.TDoubleObjectHashMap$ValueView$1",
       "gnu.trove.set.TLongSet",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap",
       "gnu.trove.map.hash.TLongByteHashMap$TKeyView$1",
       "gnu.trove.map.hash.TObjectIntHashMap$1",
       "gnu.trove.decorator.TCharByteMapDecorator$1$1$1",
       "gnu.trove.map.hash.TFloatFloatHashMap$TValueView",
       "gnu.trove.map.hash.TObjectFloatHashMap$TFloatValueCollection$TObjectFloatValueHashIterator",
       "gnu.trove.map.hash.TShortShortHashMap$TShortShortValueHashIterator",
       "gnu.trove.list.TLinkable",
       "gnu.trove.decorator.TByteDoubleMapDecorator",
       "gnu.trove.map.TLongFloatMap",
       "gnu.trove.map.hash.TFloatLongHashMap$TKeyView",
       "gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection",
       "gnu.trove.decorator.TByteObjectMapDecorator$1$1$1",
       "gnu.trove.decorator.TShortShortMapDecorator$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatList",
       "gnu.trove.map.custom_hash.TObjectFloatCustomHashMap$TObjectFloatHashIterator",
       "gnu.trove.map.TDoubleFloatMap",
       "gnu.trove.procedure.TIntProcedure",
       "gnu.trove.map.hash.TCharIntHashMap$TValueView$1",
       "gnu.trove.decorator.TLongShortMapDecorator",
       "gnu.trove.stack.array.TIntArrayStack",
       "gnu.trove.map.hash.TIntIntHashMap$TValueView",
       "gnu.trove.map.hash.TDoubleShortHashMap",
       "gnu.trove.map.hash.TIntDoubleHashMap$TValueView",
       "gnu.trove.impl.hash.TFloatByteHash",
       "gnu.trove.map.hash.TLongShortHashMap$TValueView$1",
       "gnu.trove.impl.sync.TSynchronizedFloatCollection",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteShortMap",
       "gnu.trove.map.custom_hash.TObjectFloatCustomHashMap$1",
       "gnu.trove.decorator.TLongFloatMapDecorator",
       "gnu.trove.map.hash.TCustomHashMap$ValueView",
       "gnu.trove.list.linked.TCharLinkedList$RemoveProcedure",
       "gnu.trove.map.hash.TLongShortHashMap$TLongShortKeyHashIterator",
       "gnu.trove.map.hash.TFloatByteHashMap$TValueView$1",
       "gnu.trove.map.hash.TLongCharHashMap$TValueView$1",
       "gnu.trove.decorator.TShortObjectMapDecorator$1",
       "gnu.trove.iterator.TDoubleDoubleIterator",
       "gnu.trove.map.hash.TFloatCharHashMap$TFloatCharValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap$1",
       "gnu.trove.map.custom_hash.TObjectFloatCustomHashMap$2",
       "gnu.trove.map.hash.TCharByteHashMap$TCharByteKeyHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharLongMap",
       "gnu.trove.map.hash.TFloatByteHashMap",
       "gnu.trove.decorator.TIntByteMapDecorator",
       "gnu.trove.impl.sync.TSynchronizedFloatLongMap",
       "gnu.trove.map.hash.TByteCharHashMap",
       "gnu.trove.map.hash.TCharByteHashMap$1",
       "gnu.trove.map.hash.TDoubleLongHashMap$TDoubleLongKeyHashIterator",
       "gnu.trove.map.hash.TObjectByteHashMap$TByteValueCollection",
       "gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator",
       "gnu.trove.map.hash.TFloatCharHashMap",
       "gnu.trove.map.hash.TCharShortHashMap$TCharShortKeyHashIterator",
       "gnu.trove.map.hash.TByteCharHashMap$TKeyView$1",
       "gnu.trove.set.hash.TFloatHashSet$TFloatHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectCharMap",
       "gnu.trove.stack.array.TLongArrayStack",
       "gnu.trove.map.hash.TCharShortHashMap$TKeyView",
       "gnu.trove.map.hash.TFloatFloatHashMap$TFloatFloatValueHashIterator",
       "gnu.trove.impl.sync.TSynchronizedObjectDoubleMap",
       "gnu.trove.map.hash.TShortIntHashMap$TShortIntKeyHashIterator",
       "gnu.trove.map.hash.TFloatIntHashMap$TValueView$1",
       "gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$TDoubleValueCollection",
       "gnu.trove.map.hash.TDoubleFloatHashMap$TDoubleFloatValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectDoubleMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessLongList",
       "gnu.trove.map.hash.TFloatCharHashMap$TKeyView",
       "gnu.trove.decorator.TCharDoubleMapDecorator$1",
       "gnu.trove.map.hash.TCharShortHashMap$TCharShortValueHashIterator",
       "gnu.trove.decorator.TCharDoubleMapDecorator$1$1$1",
       "gnu.trove.map.hash.TLongDoubleHashMap$TLongDoubleKeyHashIterator",
       "gnu.trove.map.hash.TObjectIntHashMap$MapBackedView",
       "gnu.trove.map.hash.TShortByteHashMap$TShortByteHashIterator",
       "gnu.trove.map.hash.TIntLongHashMap$TKeyView",
       "gnu.trove.procedure.TObjectObjectProcedure",
       "gnu.trove.map.hash.TDoubleObjectHashMap$ValueView$TDoubleObjectValueHashIterator",
       "gnu.trove.map.hash.TByteShortHashMap$1",
       "gnu.trove.map.hash.TFloatByteHashMap$1",
       "gnu.trove.map.hash.TDoubleByteHashMap$TKeyView",
       "gnu.trove.decorator.TCharShortMapDecorator",
       "gnu.trove.map.hash.TFloatDoubleHashMap$TFloatDoubleValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet",
       "gnu.trove.decorator.TIntShortMapDecorator$1$1",
       "gnu.trove.impl.hash.THash",
       "gnu.trove.map.hash.TDoubleShortHashMap$1",
       "gnu.trove.decorator.TCharLongMapDecorator$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessDoubleList",
       "gnu.trove.map.TFloatCharMap",
       "gnu.trove.map.hash.TObjectDoubleHashMap$TDoubleValueCollection$1",
       "gnu.trove.map.hash.TObjectLongHashMap$MapBackedView",
       "gnu.trove.map.TLongObjectMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap$1",
       "gnu.trove.map.TCharShortMap",
       "gnu.trove.map.hash.TByteFloatHashMap$TValueView$1",
       "gnu.trove.map.TIntObjectMap",
       "gnu.trove.impl.sync.TSynchronizedDoubleShortMap",
       "gnu.trove.map.hash.TFloatDoubleHashMap$TFloatDoubleKeyHashIterator",
       "gnu.trove.map.hash.TIntShortHashMap$TKeyView",
       "gnu.trove.procedure.TByteFloatProcedure",
       "gnu.trove.map.hash.TByteByteHashMap$1",
       "gnu.trove.map.hash.TLongShortHashMap$TKeyView$1",
       "gnu.trove.decorator.TFloatIntMapDecorator$1",
       "gnu.trove.impl.sync.TSynchronizedIntByteMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap$1",
       "gnu.trove.impl.sync.TSynchronizedShortByteMap",
       "gnu.trove.map.hash.TShortDoubleHashMap$TKeyView$1",
       "gnu.trove.decorator.TDoubleCharMapDecorator$1$1",
       "gnu.trove.map.custom_hash.TObjectIntCustomHashMap$TIntValueCollection",
       "gnu.trove.procedure.TLongCharProcedure",
       "gnu.trove.decorator.TByteLongMapDecorator$1$1$1",
       "gnu.trove.impl.sync.TSynchronizedFloatShortMap",
       "gnu.trove.set.hash.TLinkedHashSet",
       "gnu.trove.map.hash.TByteCharHashMap$TValueView$1",
       "gnu.trove.map.hash.TObjectDoubleHashMap$2",
       "gnu.trove.map.TObjectLongMap",
       "gnu.trove.list.linked.TFloatLinkedList",
       "gnu.trove.decorator.TIntShortMapDecorator$1",
       "gnu.trove.map.hash.TObjectDoubleHashMap$1",
       "gnu.trove.map.TFloatObjectMap",
       "gnu.trove.impl.hash.TLongDoubleHash",
       "gnu.trove.map.hash.TDoubleObjectHashMap$ValueView",
       "gnu.trove.procedure.TShortByteProcedure",
       "gnu.trove.procedure.TDoubleIntProcedure",
       "gnu.trove.decorator.TDoubleDoubleMapDecorator$1$1$1",
       "gnu.trove.map.hash.TIntByteHashMap",
       "gnu.trove.map.hash.TDoubleCharHashMap",
       "gnu.trove.map.hash.TObjectDoubleHashMap$TDoubleValueCollection",
       "gnu.trove.map.hash.TShortObjectHashMap$KeyView",
       "gnu.trove.map.hash.TByteLongHashMap",
       "gnu.trove.decorator.TDoubleLongMapDecorator",
       "gnu.trove.map.hash.TFloatFloatHashMap$1",
       "gnu.trove.decorator.TObjectShortMapDecorator$1",
       "gnu.trove.decorator.TByteFloatMapDecorator$1$1$1",
       "gnu.trove.decorator.TObjectIntMapDecorator",
       "gnu.trove.iterator.TLongFloatIterator",
       "gnu.trove.map.hash.TFloatShortHashMap$1",
       "gnu.trove.impl.sync.TSynchronizedDoubleLongMap",
       "gnu.trove.map.hash.TObjectByteHashMap$TByteValueCollection$1",
       "gnu.trove.decorator.TByteByteMapDecorator",
       "gnu.trove.iterator.TCharIterator",
       "gnu.trove.procedure.TObjectIntProcedure",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongByteMap$1",
       "gnu.trove.decorator.TLongDoubleMapDecorator$1$1$1",
       "gnu.trove.map.hash.TObjectDoubleHashMap$KeyView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongLongMap",
       "gnu.trove.map.hash.TShortLongHashMap$TShortLongValueHashIterator",
       "gnu.trove.map.custom_hash.TObjectFloatCustomHashMap$MapBackedView",
       "gnu.trove.list.linked.TIntLinkedList$RemoveProcedure",
       "gnu.trove.map.hash.TCustomHashMap$MapBackedView",
       "gnu.trove.impl.sync.TSynchronizedDoubleIntMap",
       "gnu.trove.map.hash.TShortCharHashMap$TShortCharHashIterator",
       "gnu.trove.map.custom_hash.TObjectLongCustomHashMap$MapBackedView",
       "gnu.trove.map.TCharObjectMap",
       "gnu.trove.decorator.TDoubleCharMapDecorator$1",
       "gnu.trove.decorator.TObjectLongMapDecorator$1$1",
       "gnu.trove.map.hash.TObjectLongHashMap$TLongValueCollection",
       "gnu.trove.procedure.TByteShortProcedure",
       "gnu.trove.decorator.TLongObjectMapDecorator",
       "gnu.trove.decorator.TFloatObjectMapDecorator",
       "gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleKeyHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection",
       "gnu.trove.decorator.TByteByteMapDecorator$1$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap",
       "gnu.trove.list.array.TLongArrayList$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatObjectMap",
       "gnu.trove.iterator.TShortDoubleIterator",
       "gnu.trove.map.hash.TByteCharHashMap$TByteCharKeyHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap",
       "gnu.trove.map.hash.TLongObjectHashMap$ValueView$1",
       "gnu.trove.map.hash.TCharByteHashMap$TKeyView$1",
       "gnu.trove.map.hash.TIntFloatHashMap$TValueView$1",
       "gnu.trove.decorator.TIntCharMapDecorator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongIntMap$1",
       "gnu.trove.map.hash.TObjectCharHashMap$1",
       "gnu.trove.decorator.TShortObjectMapDecorator$1$1",
       "gnu.trove.map.hash.TDoubleFloatHashMap$1",
       "gnu.trove.map.hash.TObjectCharHashMap$2",
       "gnu.trove.map.hash.TDoubleShortHashMap$TKeyView",
       "gnu.trove.impl.sync.TSynchronizedLongIntMap",
       "gnu.trove.decorator.TFloatObjectMapDecorator$1$1$1",
       "gnu.trove.iterator.TLongObjectIterator",
       "gnu.trove.decorator.TIntIntMapDecorator$1$1$1",
       "gnu.trove.map.hash.TDoubleDoubleHashMap$TValueView$1",
       "gnu.trove.impl.hash.TCharShortHash",
       "gnu.trove.map.hash.TCharObjectHashMap$ValueView$1",
       "gnu.trove.map.hash.TObjectFloatHashMap$TFloatValueCollection",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap",
       "gnu.trove.map.hash.TByteShortHashMap$TValueView",
       "gnu.trove.decorator.TDoubleCharMapDecorator$1$1$1",
       "gnu.trove.decorator.TIntObjectMapDecorator",
       "gnu.trove.decorator.TCharIntMapDecorator$1$1",
       "gnu.trove.map.hash.TLongObjectHashMap$MapBackedView",
       "gnu.trove.map.hash.TDoubleObjectHashMap$KeyView$TDoubleHashIterator",
       "gnu.trove.map.TLongDoubleMap",
       "gnu.trove.stack.TByteStack",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharIntMap",
       "gnu.trove.map.hash.TLongLongHashMap$TKeyView$1",
       "gnu.trove.decorator.TFloatCharMapDecorator",
       "gnu.trove.procedure.TLongIntProcedure",
       "gnu.trove.map.TShortCharMap",
       "gnu.trove.list.TByteList",
       "gnu.trove.map.custom_hash.TObjectIntCustomHashMap$TObjectIntHashIterator",
       "gnu.trove.map.hash.TByteFloatHashMap$1",
       "gnu.trove.map.hash.TCharIntHashMap$TCharIntKeyHashIterator",
       "gnu.trove.set.hash.TCharHashSet$TCharHashIterator",
       "gnu.trove.decorator.TShortCharMapDecorator$1$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongShortMap$1",
       "gnu.trove.decorator.TCharLongMapDecorator$1$1$1",
       "gnu.trove.decorator.TLongShortMapDecorator$1",
       "gnu.trove.map.hash.TShortFloatHashMap$TKeyView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap",
       "gnu.trove.set.TShortSet",
       "gnu.trove.decorator.TFloatFloatMapDecorator$1$1",
       "gnu.trove.map.hash.TDoubleIntHashMap$1",
       "gnu.trove.decorator.TDoubleFloatMapDecorator$1$1",
       "gnu.trove.map.hash.TShortByteHashMap$TValueView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortDoubleMap$1",
       "gnu.trove.list.linked.TByteLinkedList$1",
       "gnu.trove.map.custom_hash.TObjectIntCustomHashMap$TIntValueCollection$TObjectIntValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap",
       "gnu.trove.map.hash.TShortShortHashMap$TValueView",
       "gnu.trove.map.hash.TByteCharHashMap$TValueView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap",
       "gnu.trove.decorator.TByteIntMapDecorator$1$1",
       "gnu.trove.map.hash.TDoubleLongHashMap",
       "gnu.trove.procedure.TObjectLongProcedure",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleByteMap",
       "gnu.trove.iterator.TShortCharIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharSet",
       "gnu.trove.map.hash.TFloatFloatHashMap$TKeyView$1",
       "gnu.trove.map.hash.TObjectShortHashMap$MapBackedView",
       "gnu.trove.decorator.TByteSetDecorator$1",
       "gnu.trove.map.hash.TCharFloatHashMap$TCharFloatValueHashIterator",
       "gnu.trove.map.hash.TCharLongHashMap$TValueView$1",
       "gnu.trove.map.custom_hash.TObjectIntCustomHashMap$MapBackedView",
       "gnu.trove.map.hash.TIntDoubleHashMap",
       "gnu.trove.map.hash.TShortDoubleHashMap$TShortDoubleValueHashIterator",
       "gnu.trove.impl.sync.TSynchronizedIntShortMap",
       "gnu.trove.map.hash.TLongDoubleHashMap",
       "gnu.trove.map.hash.TLongByteHashMap$TKeyView",
       "gnu.trove.decorator.TByteDoubleMapDecorator$1$1$1",
       "gnu.trove.list.linked.TShortLinkedList$RemoveProcedure",
       "gnu.trove.impl.hash.TLongShortHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap",
       "gnu.trove.decorator.TDoubleLongMapDecorator$1$1",
       "gnu.trove.procedure.TLongLongProcedure",
       "gnu.trove.map.hash.TIntCharHashMap$1",
       "gnu.trove.decorator.TFloatByteMapDecorator",
       "gnu.trove.list.linked.TByteLinkedList$TByteLink",
       "gnu.trove.map.hash.TFloatCharHashMap$TFloatCharKeyHashIterator",
       "gnu.trove.map.hash.TShortObjectHashMap$ValueView$1",
       "gnu.trove.map.hash.THashMap$EqProcedure",
       "gnu.trove.TCollections",
       "gnu.trove.map.TCharByteMap",
       "gnu.trove.map.TFloatFloatMap",
       "gnu.trove.map.hash.TFloatShortHashMap$TKeyView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteShortMap$1",
       "gnu.trove.iterator.TCharLongIterator",
       "gnu.trove.map.hash.TLongByteHashMap$TValueView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap",
       "gnu.trove.impl.Constants",
       "gnu.trove.map.hash.TLongIntHashMap$TKeyView",
       "gnu.trove.TIntCollection",
       "gnu.trove.queue.TShortQueue",
       "gnu.trove.decorator.TByteObjectMapDecorator",
       "gnu.trove.decorator.TLongDoubleMapDecorator",
       "gnu.trove.map.custom_hash.TObjectShortCustomHashMap$MapBackedView",
       "gnu.trove.decorator.TObjectByteMapDecorator",
       "gnu.trove.map.hash.TByteCharHashMap$TKeyView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1",
       "gnu.trove.iterator.TFloatObjectIterator",
       "gnu.trove.map.hash.TShortIntHashMap$TKeyView$1",
       "gnu.trove.map.custom_hash.TObjectIntCustomHashMap$1",
       "gnu.trove.map.custom_hash.TObjectIntCustomHashMap$2",
       "gnu.trove.map.hash.TLongCharHashMap$TLongCharKeyHashIterator",
       "gnu.trove.decorator.TByteIntMapDecorator$1$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap",
       "gnu.trove.map.custom_hash.TObjectShortCustomHashMap",
       "gnu.trove.map.hash.TShortByteHashMap$TShortByteValueHashIterator",
       "gnu.trove.decorator.TShortFloatMapDecorator",
       "gnu.trove.map.hash.TFloatCharHashMap$TKeyView$1",
       "gnu.trove.map.hash.TObjectFloatHashMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongCollection",
       "gnu.trove.impl.sync.TSynchronizedIntIntMap",
       "gnu.trove.decorator.TDoubleIntMapDecorator$1",
       "gnu.trove.decorator.TDoubleFloatMapDecorator$1",
       "gnu.trove.decorator.TFloatDoubleMapDecorator$1",
       "gnu.trove.iterator.TByteLongIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap$1",
       "gnu.trove.impl.sync.TSynchronizedByteLongMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1",
       "gnu.trove.decorator.TByteIntMapDecorator$1",
       "gnu.trove.map.hash.TDoubleDoubleHashMap$1",
       "gnu.trove.map.hash.TIntShortHashMap$TIntShortKeyHashIterator",
       "gnu.trove.iterator.TDoubleShortIterator",
       "gnu.trove.decorator.TShortByteMapDecorator$1",
       "gnu.trove.list.TLongList",
       "gnu.trove.set.hash.TCustomHashSet",
       "gnu.trove.impl.sync.TSynchronizedIntList",
       "gnu.trove.map.custom_hash.TObjectLongCustomHashMap",
       "gnu.trove.impl.hash.TByteDoubleHash",
       "gnu.trove.map.hash.TCharObjectHashMap$ValueView",
       "gnu.trove.impl.sync.TSynchronizedByteList",
       "gnu.trove.map.hash.TShortLongHashMap$TValueView",
       "gnu.trove.stack.array.TDoubleArrayStack",
       "gnu.trove.map.hash.TObjectDoubleHashMap",
       "gnu.trove.decorator.TDoubleLongMapDecorator$1",
       "gnu.trove.map.hash.TCharCharHashMap$TValueView",
       "gnu.trove.procedure.TShortFloatProcedure",
       "gnu.trove.impl.sync.TSynchronizedCharList",
       "gnu.trove.map.hash.TShortByteHashMap$1",
       "gnu.trove.map.hash.TFloatLongHashMap$TFloatLongKeyHashIterator",
       "gnu.trove.procedure.TShortObjectProcedure",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleObjectMap",
       "gnu.trove.impl.sync.TSynchronizedByteCollection",
       "gnu.trove.TDoubleCollection",
       "gnu.trove.map.hash.TShortByteHashMap",
       "gnu.trove.map.hash.TCharDoubleHashMap$TCharDoubleHashIterator",
       "gnu.trove.decorator.TLongDoubleMapDecorator$1",
       "gnu.trove.map.hash.TObjectFloatHashMap$TObjectFloatHashIterator",
       "gnu.trove.map.hash.TLongCharHashMap",
       "gnu.trove.map.hash.TIntFloatHashMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList",
       "gnu.trove.list.array.TByteArrayList$TByteArrayIterator",
       "gnu.trove.map.hash.TShortByteHashMap$TKeyView$1",
       "gnu.trove.map.hash.TByteIntHashMap$TByteIntHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongDoubleMap",
       "gnu.trove.iterator.TByteByteIterator",
       "gnu.trove.map.hash.TLongFloatHashMap$TKeyView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortShortMap$1",
       "gnu.trove.map.hash.TDoubleFloatHashMap$TDoubleFloatHashIterator",
       "gnu.trove.impl.sync.TSynchronizedObjectShortMap",
       "gnu.trove.set.TIntSet",
       "gnu.trove.impl.hash.TDoubleHash",
       "gnu.trove.impl.hash.TPrimitiveHash",
       "gnu.trove.map.hash.TIntShortHashMap$1",
       "gnu.trove.map.hash.TShortLongHashMap$TKeyView",
       "gnu.trove.map.hash.TByteShortHashMap",
       "gnu.trove.map.hash.TDoubleIntHashMap$TDoubleIntHashIterator",
       "gnu.trove.decorator.TDoubleObjectMapDecorator$1$1$1",
       "gnu.trove.iterator.TDoubleCharIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap$1",
       "gnu.trove.map.custom_hash.TObjectByteCustomHashMap$KeyView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortShortMap",
       "gnu.trove.impl.sync.TSynchronizedLongSet",
       "gnu.trove.map.TObjectDoubleMap",
       "gnu.trove.decorator.TCharFloatMapDecorator$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongDoubleMap$1",
       "gnu.trove.set.TDoubleSet",
       "gnu.trove.list.array.TByteArrayList",
       "gnu.trove.function.TShortFunction",
       "gnu.trove.map.hash.TCharObjectHashMap$TCharObjectHashIterator",
       "gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TObjectShortHashIterator",
       "gnu.trove.map.hash.TByteLongHashMap$TValueView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap",
       "gnu.trove.decorator.TDoubleFloatMapDecorator$1$1$1",
       "gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharKeyHashIterator",
       "gnu.trove.map.hash.TShortDoubleHashMap$1",
       "gnu.trove.map.hash.THashMap$MapBackedView",
       "gnu.trove.impl.sync.TSynchronizedIntCollection",
       "gnu.trove.map.hash.TFloatObjectHashMap$ValueView$TFloatObjectValueHashIterator",
       "gnu.trove.map.hash.TLongFloatHashMap$TLongFloatHashIterator",
       "gnu.trove.impl.sync.TSynchronizedLongByteMap",
       "gnu.trove.map.hash.TShortShortHashMap$TShortShortKeyHashIterator",
       "gnu.trove.decorator.TShortByteMapDecorator$1$1",
       "gnu.trove.map.TIntFloatMap",
       "gnu.trove.procedure.TObjectProcedure",
       "gnu.trove.map.hash.TLongCharHashMap$1",
       "gnu.trove.impl.sync.TSynchronizedRandomAccessByteList",
       "gnu.trove.decorator.TShortObjectMapDecorator",
       "gnu.trove.decorator.TShortFloatMapDecorator$1$1",
       "gnu.trove.map.hash.TObjectShortHashMap$KeyView",
       "gnu.trove.impl.sync.TSynchronizedCharCharMap",
       "gnu.trove.decorator.TByteShortMapDecorator$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharLongMap$1",
       "gnu.trove.decorator.TLongByteMapDecorator$1$1",
       "gnu.trove.map.hash.TShortObjectHashMap$MapBackedView",
       "gnu.trove.map.hash.TShortObjectHashMap$TShortObjectHashIterator",
       "gnu.trove.map.hash.TShortLongHashMap$TKeyView$1",
       "gnu.trove.impl.hash.TByteIntHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharShortMap$1",
       "gnu.trove.map.hash.TByteIntHashMap$TByteIntKeyHashIterator",
       "gnu.trove.map.TShortLongMap",
       "gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$TDoubleValueCollection$TObjectDoubleValueHashIterator",
       "gnu.trove.procedure.TDoubleShortProcedure",
       "gnu.trove.map.hash.TLongDoubleHashMap$TLongDoubleValueHashIterator",
       "gnu.trove.impl.sync.TSynchronizedCharIntMap",
       "gnu.trove.decorator.TFloatIntMapDecorator",
       "gnu.trove.map.hash.TByteFloatHashMap",
       "gnu.trove.map.hash.TDoubleLongHashMap$TKeyView",
       "gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortKeyHashIterator",
       "gnu.trove.decorator.TByteCharMapDecorator",
       "gnu.trove.procedure.TShortShortProcedure",
       "gnu.trove.procedure.TFloatByteProcedure",
       "gnu.trove.procedure.TFloatShortProcedure",
       "gnu.trove.impl.sync.TSynchronizedRandomAccessShortList",
       "gnu.trove.map.TCharFloatMap",
       "gnu.trove.set.hash.TCustomHashSet$1",
       "gnu.trove.impl.sync.TSynchronizedDoubleByteMap",
       "gnu.trove.map.hash.TDoubleCharHashMap$TValueView$1",
       "gnu.trove.map.hash.TFloatDoubleHashMap$TValueView$1",
       "gnu.trove.decorator.TByteSetDecorator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectByteMap$1",
       "gnu.trove.map.TShortIntMap",
       "gnu.trove.map.hash.TDoubleIntHashMap$TDoubleIntValueHashIterator",
       "gnu.trove.map.hash.TIntFloatHashMap$1",
       "gnu.trove.map.hash.TObjectByteHashMap",
       "gnu.trove.decorator.TIntIntMapDecorator$1",
       "gnu.trove.procedure.TFloatCharProcedure",
       "gnu.trove.decorator.TIntDoubleMapDecorator$1$1",
       "gnu.trove.map.hash.TCustomHashMap$KeyView",
       "gnu.trove.decorator.TCharCharMapDecorator$1$1",
       "gnu.trove.map.hash.TCharFloatHashMap$TValueView$1",
       "gnu.trove.map.hash.TObjectIntHashMap$TIntValueCollection$TObjectIntValueHashIterator",
       "gnu.trove.map.hash.TShortIntHashMap$TShortIntValueHashIterator",
       "gnu.trove.map.hash.TCharCharHashMap",
       "gnu.trove.decorator.TByteByteMapDecorator$1$1",
       "gnu.trove.map.hash.TIntByteHashMap$TKeyView",
       "gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TShortValueCollection$1",
       "gnu.trove.map.hash.TObjectCharHashMap$KeyView",
       "gnu.trove.map.hash.TFloatObjectHashMap$KeyView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap",
       "gnu.trove.map.hash.TIntShortHashMap$TIntShortHashIterator",
       "gnu.trove.impl.sync.TSynchronizedFloatCharMap",
       "gnu.trove.map.hash.TCharLongHashMap$1",
       "gnu.trove.map.hash.TCharShortHashMap$TKeyView$1",
       "gnu.trove.map.hash.TObjectCharHashMap$TCharValueCollection$1",
       "gnu.trove.impl.hash.TDoubleLongHash",
       "gnu.trove.set.hash.TDoubleHashSet$TDoubleHashIterator",
       "gnu.trove.impl.sync.TSynchronizedLongCollection",
       "gnu.trove.map.hash.TDoubleLongHashMap$TDoubleLongHashIterator",
       "gnu.trove.map.hash.TIntFloatHashMap$TKeyView$1",
       "gnu.trove.map.hash.TFloatShortHashMap$TKeyView$1",
       "gnu.trove.iterator.TIntDoubleIterator",
       "gnu.trove.iterator.TLongLongIterator",
       "gnu.trove.decorator.TCharSetDecorator$1",
       "gnu.trove.iterator.TDoubleIntIterator",
       "gnu.trove.iterator.TLongShortIterator",
       "gnu.trove.decorator.TIntByteMapDecorator$1",
       "gnu.trove.map.hash.TShortDoubleHashMap$TShortDoubleKeyHashIterator",
       "gnu.trove.iterator.TFloatByteIterator",
       "gnu.trove.map.custom_hash.TObjectFloatCustomHashMap$TFloatValueCollection$1",
       "gnu.trove.map.hash.THashMap$ValueView$1",
       "gnu.trove.map.TCharCharMap",
       "gnu.trove.impl.hash.TObjectHash",
       "gnu.trove.map.TIntLongMap",
       "gnu.trove.map.hash.TObjectFloatHashMap$2",
       "gnu.trove.map.hash.TObjectFloatHashMap$1",
       "gnu.trove.decorator.TFloatIntMapDecorator$1$1$1",
       "gnu.trove.map.hash.TFloatLongHashMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongLongMap$1",
       "gnu.trove.iterator.TShortByteIterator",
       "gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$1",
       "gnu.trove.decorator.TIntObjectMapDecorator$1$1$1",
       "gnu.trove.decorator.TShortDoubleMapDecorator$1$1",
       "gnu.trove.impl.sync.TSynchronizedByteDoubleMap",
       "gnu.trove.map.hash.TIntObjectHashMap$ValueView$TIntObjectValueHashIterator",
       "gnu.trove.decorator.TObjectDoubleMapDecorator$1$1",
       "gnu.trove.iterator.TByteIterator",
       "gnu.trove.map.hash.TLongLongHashMap$1",
       "gnu.trove.map.hash.TLongObjectHashMap$ValueView$TLongObjectValueHashIterator",
       "gnu.trove.decorator.TLongDoubleMapDecorator$1$1",
       "gnu.trove.map.hash.TFloatShortHashMap$TFloatShortKeyHashIterator",
       "gnu.trove.map.hash.TByteByteHashMap$TByteByteValueHashIterator",
       "gnu.trove.map.hash.TCharDoubleHashMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongIntMap",
       "gnu.trove.iterator.TIntIterator",
       "gnu.trove.map.hash.TObjectCharHashMap$TObjectCharHashIterator",
       "gnu.trove.map.hash.TFloatShortHashMap$TFloatShortValueHashIterator",
       "gnu.trove.list.TLinkableAdapter",
       "gnu.trove.map.custom_hash.TObjectCharCustomHashMap$KeyView",
       "gnu.trove.map.hash.TFloatFloatHashMap$TValueView$1",
       "gnu.trove.list.array.TIntArrayList",
       "gnu.trove.impl.sync.TSynchronizedIntSet",
       "gnu.trove.map.hash.TDoubleCharHashMap$TKeyView",
       "gnu.trove.stack.array.TCharArrayStack",
       "gnu.trove.list.linked.TByteLinkedList",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap$1",
       "gnu.trove.map.hash.TByteShortHashMap$TKeyView$1",
       "gnu.trove.map.TLongByteMap",
       "gnu.trove.map.hash.TByteIntHashMap$TByteIntValueHashIterator",
       "gnu.trove.map.hash.TIntByteHashMap$TIntByteHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap$1",
       "gnu.trove.map.hash.TByteByteHashMap$TKeyView$1",
       "gnu.trove.map.hash.TFloatByteHashMap$TKeyView",
       "gnu.trove.impl.sync.TSynchronizedObjectByteMap",
       "gnu.trove.set.hash.TShortHashSet",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet",
       "gnu.trove.map.hash.TShortFloatHashMap$TValueView$1",
       "gnu.trove.decorator.TByteFloatMapDecorator$1$1",
       "gnu.trove.map.hash.TByteByteHashMap$TByteByteHashIterator",
       "gnu.trove.impl.hash.TDoubleDoubleHash",
       "gnu.trove.iterator.TIntCharIterator",
       "gnu.trove.impl.sync.SynchronizedCollection",
       "gnu.trove.map.hash.TShortFloatHashMap$TKeyView$1",
       "gnu.trove.list.linked.TLongLinkedList$TLongLink",
       "gnu.trove.iterator.TByteFloatIterator",
       "gnu.trove.map.TFloatLongMap",
       "gnu.trove.impl.sync.TSynchronizedByteFloatMap",
       "gnu.trove.map.hash.TLongDoubleHashMap$TValueView$1",
       "gnu.trove.map.hash.TObjectByteHashMap$KeyView",
       "gnu.trove.map.TObjectCharMap",
       "gnu.trove.procedure.TDoubleFloatProcedure",
       "gnu.trove.impl.sync.TSynchronizedShortIntMap",
       "gnu.trove.impl.sync.TSynchronizedIntFloatMap",
       "gnu.trove.map.hash.TIntDoubleHashMap$1",
       "gnu.trove.decorator.TFloatShortMapDecorator$1$1",
       "gnu.trove.decorator.TIntFloatMapDecorator$1$1$1",
       "gnu.trove.map.TLongIntMap",
       "gnu.trove.decorator.TObjectByteMapDecorator$1",
       "gnu.trove.map.hash.TLongShortHashMap$1",
       "gnu.trove.map.hash.TObjectIntHashMap$TIntValueCollection$1",
       "gnu.trove.impl.hash.TIntIntHash",
       "gnu.trove.map.hash.TFloatIntHashMap$TKeyView$1",
       "gnu.trove.decorator.TObjectShortMapDecorator$1$1$1",
       "gnu.trove.list.linked.TDoubleLinkedList$1",
       "gnu.trove.set.hash.THashSet",
       "gnu.trove.map.hash.TFloatFloatHashMap$TFloatFloatHashIterator",
       "gnu.trove.decorator.TIntCharMapDecorator$1$1",
       "gnu.trove.map.hash.TCharByteHashMap$TKeyView",
       "gnu.trove.impl.hash.TFloatDoubleHash",
       "gnu.trove.map.hash.TFloatObjectHashMap$2",
       "gnu.trove.map.hash.TFloatObjectHashMap$1",
       "gnu.trove.map.hash.TByteByteHashMap",
       "gnu.trove.stack.TIntStack",
       "gnu.trove.map.hash.THashMap$Entry",
       "gnu.trove.iterator.TFloatShortIterator",
       "gnu.trove.map.hash.TIntLongHashMap$TValueView$1",
       "gnu.trove.map.TIntIntMap",
       "gnu.trove.decorator.TShortIntMapDecorator$1$1$1",
       "gnu.trove.decorator.TCharCharMapDecorator$1",
       "gnu.trove.decorator.TFloatDoubleMapDecorator",
       "gnu.trove.map.custom_hash.TObjectByteCustomHashMap$2",
       "gnu.trove.map.custom_hash.TObjectByteCustomHashMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessCharList",
       "gnu.trove.decorator.TFloatLongMapDecorator$1",
       "gnu.trove.map.hash.TIntCharHashMap$TIntCharKeyHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongCollection$1",
       "gnu.trove.map.hash.TDoubleObjectHashMap$KeyView",
       "gnu.trove.decorator.TLongByteMapDecorator$1",
       "gnu.trove.iterator.TShortIntIterator",
       "gnu.trove.map.hash.TShortFloatHashMap$1",
       "gnu.trove.impl.hash.TFloatCharHash",
       "gnu.trove.impl.sync.TSynchronizedCharDoubleMap",
       "gnu.trove.map.hash.TLongByteHashMap$TLongByteHashIterator",
       "gnu.trove.list.linked.TDoubleLinkedList",
       "gnu.trove.map.hash.TLongByteHashMap$TValueView$1",
       "gnu.trove.map.hash.TCharShortHashMap$TValueView$1",
       "gnu.trove.impl.sync.TSynchronizedObjectIntMap",
       "gnu.trove.map.hash.TIntObjectHashMap$KeyView",
       "gnu.trove.decorator.TByteByteMapDecorator$1",
       "gnu.trove.map.custom_hash.TObjectShortCustomHashMap$KeyView",
       "gnu.trove.map.hash.TShortShortHashMap",
       "gnu.trove.decorator.TIntCharMapDecorator$1$1$1",
       "gnu.trove.map.hash.TDoubleIntHashMap$TDoubleIntKeyHashIterator",
       "gnu.trove.stack.array.TFloatArrayStack",
       "gnu.trove.map.hash.TShortLongHashMap$TShortLongHashIterator",
       "gnu.trove.map.hash.TIntByteHashMap$TValueView",
       "gnu.trove.map.hash.TIntCharHashMap$TKeyView$1",
       "gnu.trove.function.TDoubleFunction",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortSet",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1",
       "gnu.trove.queue.TLongQueue",
       "gnu.trove.map.hash.TShortFloatHashMap",
       "gnu.trove.map.hash.TLongByteHashMap$1",
       "gnu.trove.impl.hash.TShortLongHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatObjectMap$1",
       "gnu.trove.map.hash.TShortObjectHashMap$ValueView$TShortObjectValueHashIterator",
       "gnu.trove.set.hash.TFloatHashSet",
       "gnu.trove.map.hash.TCharDoubleHashMap$TValueView$1",
       "gnu.trove.impl.sync.TSynchronizedDoubleSet",
       "gnu.trove.iterator.TByteObjectIterator",
       "gnu.trove.procedure.TIntObjectProcedure",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharObjectMap$1",
       "gnu.trove.list.linked.TIntLinkedList",
       "gnu.trove.map.TDoubleCharMap",
       "gnu.trove.map.hash.TDoubleIntHashMap$TValueView$1",
       "gnu.trove.decorator.TByteLongMapDecorator",
       "gnu.trove.decorator.TIntObjectMapDecorator$1$1",
       "gnu.trove.map.hash.TLongFloatHashMap$1",
       "gnu.trove.map.hash.TIntLongHashMap$TValueView",
       "gnu.trove.impl.hash.TLongHash",
       "gnu.trove.impl.sync.TSynchronizedRandomAccessDoubleList",
       "gnu.trove.map.hash.TCustomHashMap$ValueView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongShortMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectDoubleMap",
       "gnu.trove.decorator.TObjectCharMapDecorator$1$1$1",
       "gnu.trove.stack.array.TByteArrayStack",
       "gnu.trove.map.hash.TLongIntHashMap",
       "gnu.trove.map.hash.TCharObjectHashMap$KeyView$TCharHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1",
       "gnu.trove.map.hash.TDoubleIntHashMap",
       "gnu.trove.impl.sync.TSynchronizedFloatList",
       "gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator",
       "gnu.trove.decorator.TLongFloatMapDecorator$1",
       "gnu.trove.decorator.TCharIntMapDecorator$1$1$1",
       "gnu.trove.map.hash.TByteObjectHashMap$ValueView$1",
       "gnu.trove.set.TCharSet",
       "gnu.trove.map.hash.TCustomHashMap$EntryView",
       "gnu.trove.decorator.TFloatFloatMapDecorator",
       "gnu.trove.map.hash.TFloatByteHashMap$TFloatByteHashIterator",
       "gnu.trove.map.hash.TByteByteHashMap$TValueView$1",
       "gnu.trove.map.hash.TByteObjectHashMap$1",
       "gnu.trove.map.hash.TByteObjectHashMap$2",
       "gnu.trove.list.array.TLongArrayList",
       "gnu.trove.map.hash.TLongObjectHashMap",
       "gnu.trove.set.hash.TCharHashSet",
       "gnu.trove.impl.hash.TCharLongHash",
       "gnu.trove.set.hash.TDoubleHashSet",
       "gnu.trove.map.hash.TShortLongHashMap",
       "gnu.trove.stack.array.TShortArrayStack",
       "gnu.trove.map.hash.TShortCharHashMap$TValueView$1",
       "gnu.trove.map.hash.TByteLongHashMap$TByteLongKeyHashIterator",
       "gnu.trove.procedure.TCharByteProcedure",
       "gnu.trove.map.custom_hash.TObjectShortCustomHashMap$2",
       "gnu.trove.map.custom_hash.TObjectShortCustomHashMap$1",
       "gnu.trove.decorator.TByteFloatMapDecorator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection",
       "gnu.trove.map.hash.TIntShortHashMap$TKeyView$1",
       "gnu.trove.map.hash.TObjectDoubleHashMap$MapBackedView",
       "gnu.trove.impl.sync.TSynchronizedIntDoubleMap",
       "gnu.trove.decorator.TByteDoubleMapDecorator$1$1",
       "gnu.trove.map.hash.TByteFloatHashMap$TByteFloatValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap$1",
       "gnu.trove.procedure.TShortCharProcedure",
       "gnu.trove.impl.HashFunctions",
       "gnu.trove.procedure.TLongProcedure",
       "gnu.trove.map.hash.TShortLongHashMap$TShortLongKeyHashIterator",
       "gnu.trove.decorator.TCharShortMapDecorator$1$1$1",
       "gnu.trove.set.hash.TByteHashSet$TByteHashIterator",
       "gnu.trove.impl.hash.TIntDoubleHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap$1",
       "gnu.trove.map.hash.TDoubleIntHashMap$TKeyView$1",
       "gnu.trove.map.hash.TFloatObjectHashMap$ValueView$1",
       "gnu.trove.list.array.TCharArrayList",
       "gnu.trove.map.hash.TObjectIntHashMap$TObjectIntHashIterator",
       "gnu.trove.function.TByteFunction",
       "gnu.trove.impl.sync.TSynchronizedRandomAccessIntList",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharIntMap$1",
       "gnu.trove.map.TObjectFloatMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1",
       "gnu.trove.impl.sync.TSynchronizedCharObjectMap",
       "gnu.trove.map.hash.TShortLongHashMap$1",
       "gnu.trove.map.hash.TShortCharHashMap$TShortCharKeyHashIterator",
       "gnu.trove.decorator.TCharShortMapDecorator$1$1",
       "gnu.trove.decorator.TShortShortMapDecorator$1$1",
       "gnu.trove.map.hash.TByteLongHashMap$TKeyView$1",
       "gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongSet",
       "gnu.trove.map.hash.TDoubleLongHashMap$TDoubleLongValueHashIterator",
       "gnu.trove.map.hash.TIntIntHashMap$TIntIntKeyHashIterator",
       "gnu.trove.impl.hash.TFloatLongHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap",
       "gnu.trove.map.hash.TIntIntHashMap$TKeyView$1",
       "gnu.trove.procedure.TIntLongProcedure",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1",
       "gnu.trove.decorator.TCharListDecorator",
       "gnu.trove.queue.TCharQueue",
       "gnu.trove.impl.hash.TIntByteHash",
       "gnu.trove.TByteCollection",
       "gnu.trove.decorator.TLongLongMapDecorator",
       "gnu.trove.map.hash.TShortDoubleHashMap$TValueView$1",
       "gnu.trove.impl.sync.TSynchronizedLongObjectMap",
       "gnu.trove.map.TShortObjectMap",
       "gnu.trove.map.hash.TCustomHashMap$Entry",
       "gnu.trove.impl.sync.TSynchronizedLongShortMap",
       "gnu.trove.decorator.TDoubleDoubleMapDecorator$1",
       "gnu.trove.decorator.TDoubleShortMapDecorator$1$1$1",
       "gnu.trove.impl.hash.TCharHash",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectByteMap",
       "gnu.trove.procedure.TFloatFloatProcedure",
       "gnu.trove.map.hash.TLongLongHashMap$TValueView$1",
       "gnu.trove.map.hash.TCharDoubleHashMap$TKeyView",
       "gnu.trove.procedure.TShortLongProcedure",
       "gnu.trove.map.hash.TDoubleDoubleHashMap$TKeyView$1",
       "gnu.trove.decorator.TDoubleCharMapDecorator",
       "gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TLongValueCollection$TObjectLongValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap",
       "gnu.trove.impl.sync.SynchronizedSet",
       "gnu.trove.procedure.TCharDoubleProcedure",
       "gnu.trove.decorator.TObjectFloatMapDecorator$1",
       "gnu.trove.decorator.TShortIntMapDecorator$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatLongMap$1",
       "gnu.trove.map.hash.TShortShortHashMap$TShortShortHashIterator",
       "gnu.trove.map.hash.TCharObjectHashMap$KeyView",
       "gnu.trove.map.TObjectByteMap",
       "gnu.trove.map.hash.TFloatByteHashMap$TKeyView$1",
       "gnu.trove.map.hash.TCharFloatHashMap$TKeyView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteList",
       "gnu.trove.decorator.TLongObjectMapDecorator$1$1",
       "gnu.trove.iterator.TObjectLongIterator",
       "gnu.trove.map.custom_hash.TObjectCharCustomHashMap$2",
       "gnu.trove.map.hash.TObjectIntHashMap$TIntValueCollection",
       "gnu.trove.iterator.TShortIterator",
       "gnu.trove.map.custom_hash.TObjectCharCustomHashMap$1",
       "gnu.trove.map.hash.TCharObjectHashMap",
       "gnu.trove.map.hash.TShortShortHashMap$TKeyView$1",
       "gnu.trove.decorator.TDoubleByteMapDecorator$1",
       "gnu.trove.map.TLongShortMap",
       "gnu.trove.map.hash.TIntLongHashMap$TIntLongKeyHashIterator",
       "gnu.trove.map.hash.TFloatObjectHashMap",
       "gnu.trove.map.hash.TObjectShortHashMap$TObjectShortHashIterator",
       "gnu.trove.strategy.IdentityHashingStrategy",
       "gnu.trove.map.hash.TCharIntHashMap$TKeyView$1",
       "gnu.trove.procedure.TByteDoubleProcedure",
       "gnu.trove.decorator.TIntFloatMapDecorator$1",
       "gnu.trove.decorator.TObjectIntMapDecorator$1",
       "gnu.trove.decorator.TDoubleShortMapDecorator$1",
       "gnu.trove.impl.sync.TSynchronizedDoubleCharMap",
       "gnu.trove.procedure.TCharCharProcedure",
       "gnu.trove.list.array.TIntArrayList$1",
       "gnu.trove.impl.PrimeFinder",
       "gnu.trove.map.hash.TObjectFloatHashMap$TFloatValueCollection$1",
       "gnu.trove.map.hash.TDoubleIntHashMap$TKeyView",
       "gnu.trove.map.hash.TDoubleObjectHashMap$TDoubleObjectHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap",
       "gnu.trove.decorator.TShortByteMapDecorator$1$1$1",
       "gnu.trove.list.linked.TLinkedList",
       "gnu.trove.impl.hash.TLongFloatHash",
       "gnu.trove.map.hash.THashMap$ValueView",
       "gnu.trove.iterator.TObjectDoubleIterator",
       "gnu.trove.Version",
       "gnu.trove.map.hash.TShortDoubleHashMap$TShortDoubleHashIterator",
       "gnu.trove.map.hash.TByteShortHashMap$TByteShortHashIterator",
       "gnu.trove.map.hash.TLongCharHashMap$TKeyView",
       "gnu.trove.iterator.TObjectCharIterator",
       "gnu.trove.impl.sync.TSynchronizedShortList",
       "gnu.trove.decorator.TLongByteMapDecorator$1$1$1",
       "gnu.trove.impl.hash.TByteCharHash",
       "gnu.trove.TFloatCollection",
       "gnu.trove.map.hash.TFloatByteHashMap$TFloatByteValueHashIterator",
       "gnu.trove.decorator.TCharByteMapDecorator$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharObjectMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortIntMap$1",
       "gnu.trove.list.array.TDoubleArrayList",
       "gnu.trove.map.hash.TCharLongHashMap$TValueView",
       "gnu.trove.impl.sync.TSynchronizedByteByteMap",
       "gnu.trove.map.hash.TObjectLongHashMap",
       "gnu.trove.map.hash.THashMap",
       "gnu.trove.impl.hash.TCustomObjectHash",
       "gnu.trove.map.hash.TShortCharHashMap$TValueView",
       "gnu.trove.TCharCollection",
       "gnu.trove.map.hash.TShortCharHashMap",
       "gnu.trove.map.hash.TIntLongHashMap$TIntLongValueHashIterator",
       "gnu.trove.decorator.TCharFloatMapDecorator",
       "gnu.trove.map.hash.TFloatObjectHashMap$KeyView$TFloatHashIterator",
       "gnu.trove.map.hash.TLongByteHashMap",
       "gnu.trove.decorator.TShortLongMapDecorator$1$1$1",
       "gnu.trove.map.hash.TFloatLongHashMap$TFloatLongHashIterator",
       "gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$TDoubleValueCollection$1",
       "gnu.trove.decorator.TByteCharMapDecorator$1$1$1",
       "gnu.trove.map.hash.TByteFloatHashMap$TValueView",
       "gnu.trove.decorator.TObjectIntMapDecorator$1$1$1",
       "gnu.trove.decorator.TShortLongMapDecorator$1",
       "gnu.trove.list.linked.TFloatLinkedList$RemoveProcedure",
       "gnu.trove.decorator.TObjectLongMapDecorator$1$1$1",
       "gnu.trove.decorator.TShortLongMapDecorator$1$1",
       "gnu.trove.decorator.TLongLongMapDecorator$1$1$1",
       "gnu.trove.map.hash.TFloatCharHashMap$TValueView$1",
       "gnu.trove.impl.sync.TSynchronizedShortLongMap",
       "gnu.trove.map.hash.TObjectShortHashMap$TShortValueCollection",
       "gnu.trove.set.hash.THashSet$HashProcedure",
       "gnu.trove.decorator.TShortByteMapDecorator",
       "gnu.trove.decorator.TLongIntMapDecorator",
       "gnu.trove.function.TFloatFunction",
       "gnu.trove.map.hash.TFloatDoubleHashMap$TFloatDoubleHashIterator",
       "gnu.trove.procedure.TShortIntProcedure",
       "gnu.trove.decorator.TShortIntMapDecorator$1$1",
       "gnu.trove.map.TLongCharMap",
       "gnu.trove.map.hash.TByteFloatHashMap$TByteFloatKeyHashIterator",
       "gnu.trove.iterator.TIntByteIterator",
       "gnu.trove.decorator.TObjectByteMapDecorator$1$1$1",
       "gnu.trove.impl.hash.TFloatShortHash",
       "gnu.trove.queue.TByteQueue",
       "gnu.trove.iterator.TObjectShortIterator",
       "gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator",
       "gnu.trove.map.hash.TCharDoubleHashMap$TValueView",
       "gnu.trove.map.hash.TObjectByteHashMap$1",
       "gnu.trove.map.hash.TObjectByteHashMap$2",
       "gnu.trove.set.hash.TCustomHashSet$HashProcedure",
       "gnu.trove.map.TByteByteMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleByteMap$1",
       "gnu.trove.iterator.TShortShortIterator",
       "gnu.trove.impl.hash.TFloatIntHash",
       "gnu.trove.map.custom_hash.TObjectByteCustomHashMap$MapBackedView",
       "gnu.trove.map.hash.TFloatLongHashMap$TKeyView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap",
       "gnu.trove.map.hash.TByteIntHashMap$1",
       "gnu.trove.map.hash.TCharFloatHashMap$TValueView",
       "gnu.trove.map.hash.TByteIntHashMap$TValueView",
       "gnu.trove.map.TShortFloatMap",
       "gnu.trove.map.hash.TIntDoubleHashMap$TKeyView",
       "gnu.trove.map.hash.TLongShortHashMap$TKeyView",
       "gnu.trove.map.hash.TByteDoubleHashMap",
       "gnu.trove.impl.sync.TSynchronizedCharFloatMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1",
       "gnu.trove.list.array.TIntArrayList$TIntArrayIterator",
       "gnu.trove.decorator.TFloatFloatMapDecorator$1$1$1",
       "gnu.trove.map.hash.TLongObjectHashMap$1",
       "gnu.trove.map.hash.TLongObjectHashMap$2",
       "gnu.trove.decorator.TCharObjectMapDecorator$1",
       "gnu.trove.impl.sync.TSynchronizedShortDoubleMap",
       "gnu.trove.iterator.TIntIntIterator",
       "gnu.trove.map.hash.TByteByteHashMap$TValueView",
       "gnu.trove.map.custom_hash.TObjectCharCustomHashMap",
       "gnu.trove.impl.sync.TSynchronizedDoubleCollection",
       "gnu.trove.map.hash.TByteObjectHashMap$MapBackedView",
       "gnu.trove.impl.hash.TShortDoubleHash",
       "gnu.trove.decorator.TIntFloatMapDecorator$1$1",
       "gnu.trove.map.hash.TByteFloatHashMap$TKeyView",
       "gnu.trove.decorator.TObjectLongMapDecorator",
       "gnu.trove.decorator.TByteShortMapDecorator$1$1$1",
       "gnu.trove.map.TByteIntMap",
       "gnu.trove.map.hash.TDoubleObjectHashMap$MapBackedView",
       "gnu.trove.map.hash.TCharByteHashMap$TValueView$1",
       "gnu.trove.procedure.TFloatIntProcedure",
       "gnu.trove.map.hash.TCharLongHashMap$TCharLongHashIterator",
       "gnu.trove.map.hash.TCharLongHashMap$TKeyView",
       "gnu.trove.map.TByteLongMap",
       "gnu.trove.map.hash.TFloatIntHashMap$TFloatIntKeyHashIterator",
       "gnu.trove.iterator.TFloatIterator",
       "gnu.trove.impl.hash.TLongIntHash",
       "gnu.trove.decorator.TIntLongMapDecorator$1$1$1",
       "gnu.trove.map.hash.TLongByteHashMap$TLongByteKeyHashIterator",
       "gnu.trove.map.hash.TCharObjectHashMap$2",
       "gnu.trove.map.hash.TCharObjectHashMap$1",
       "gnu.trove.map.hash.TShortCharHashMap$TShortCharValueHashIterator",
       "gnu.trove.decorator.TCharCharMapDecorator$1$1$1",
       "gnu.trove.map.hash.TDoubleDoubleHashMap",
       "gnu.trove.impl.hash.TIntHash",
       "gnu.trove.map.hash.TByteIntHashMap$TKeyView",
       "gnu.trove.map.hash.TByteCharHashMap$TByteCharValueHashIterator",
       "gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator",
       "gnu.trove.decorator.TFloatCharMapDecorator$1",
       "gnu.trove.decorator.TCharDoubleMapDecorator",
       "gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator",
       "gnu.trove.map.hash.TByteIntHashMap$TValueView$1",
       "gnu.trove.map.hash.TObjectShortHashMap$TShortValueCollection$TObjectShortValueHashIterator",
       "gnu.trove.procedure.TLongFloatProcedure",
       "gnu.trove.TDecorators",
       "gnu.trove.map.TIntCharMap",
       "gnu.trove.map.hash.TLongLongHashMap$TKeyView",
       "gnu.trove.TShortCollection",
       "gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteSet",
       "gnu.trove.map.hash.TIntObjectHashMap$1",
       "gnu.trove.map.hash.TIntObjectHashMap$2",
       "gnu.trove.map.hash.TLongObjectHashMap$KeyView$TLongHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap",
       "gnu.trove.map.hash.TIntByteHashMap$TValueView$1",
       "gnu.trove.map.hash.TDoubleShortHashMap$TKeyView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongCharMap$1",
       "gnu.trove.decorator.TLongObjectMapDecorator$1",
       "gnu.trove.decorator.TFloatByteMapDecorator$1",
       "gnu.trove.function.TIntFunction",
       "gnu.trove.decorator.TByteLongMapDecorator$1",
       "gnu.trove.map.hash.TFloatDoubleHashMap$TValueView",
       "gnu.trove.impl.sync.TSynchronizedFloatSet",
       "gnu.trove.map.hash.TFloatShortHashMap$TValueView$1",
       "gnu.trove.decorator.TIntLongMapDecorator$1$1",
       "gnu.trove.procedure.TLongObjectProcedure",
       "gnu.trove.map.hash.TDoubleCharHashMap$1",
       "gnu.trove.map.hash.TByteDoubleHashMap$TByteDoubleValueHashIterator",
       "gnu.trove.map.TDoubleDoubleMap",
       "gnu.trove.map.hash.TShortDoubleHashMap$TKeyView",
       "gnu.trove.impl.hash.TShortCharHash",
       "gnu.trove.map.hash.TCharShortHashMap$TCharShortHashIterator",
       "gnu.trove.iterator.TIntObjectIterator",
       "gnu.trove.iterator.TIntFloatIterator",
       "gnu.trove.impl.sync.TSynchronizedCharByteMap",
       "gnu.trove.decorator.TShortFloatMapDecorator$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap",
       "gnu.trove.map.hash.TFloatFloatHashMap",
       "gnu.trove.map.hash.TLongCharHashMap$TKeyView$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap",
       "gnu.trove.map.hash.TIntCharHashMap$TIntCharValueHashIterator",
       "gnu.trove.map.hash.TByteObjectHashMap$KeyView",
       "gnu.trove.decorator.TCharIntMapDecorator$1",
       "gnu.trove.map.hash.TByteLongHashMap$TValueView",
       "gnu.trove.iterator.TLongDoubleIterator",
       "gnu.trove.map.hash.TCharCharHashMap$TCharCharValueHashIterator",
       "gnu.trove.map.hash.TIntIntHashMap$TIntIntHashIterator",
       "gnu.trove.map.hash.TByteIntHashMap$TKeyView$1",
       "gnu.trove.stack.TFloatStack",
       "gnu.trove.map.hash.TFloatFloatHashMap$TFloatFloatKeyHashIterator",
       "gnu.trove.map.hash.TFloatLongHashMap$TValueView$1",
       "gnu.trove.map.TCharLongMap",
       "gnu.trove.decorator.TIntDoubleMapDecorator$1",
       "gnu.trove.decorator.TCharByteMapDecorator",
       "gnu.trove.map.hash.TFloatCharHashMap$1",
       "gnu.trove.decorator.TIntByteMapDecorator$1$1$1",
       "gnu.trove.decorator.TCharCharMapDecorator",
       "gnu.trove.map.hash.TObjectCharHashMap$TCharValueCollection$TObjectCharValueHashIterator",
       "gnu.trove.list.linked.TByteLinkedList$RemoveProcedure",
       "gnu.trove.map.hash.TIntObjectHashMap$ValueView$1",
       "gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap",
       "gnu.trove.map.hash.TCharCharHashMap$1",
       "gnu.trove.set.hash.TLinkedHashSet$1",
       "gnu.trove.set.hash.TLinkedHashSet$2",
       "gnu.trove.iterator.TLongIntIterator",
       "gnu.trove.procedure.TObjectDoubleProcedure",
       "gnu.trove.decorator.TLongCharMapDecorator$1$1$1",
       "gnu.trove.decorator.TShortListDecorator",
       "gnu.trove.list.TDoubleList",
       "gnu.trove.map.hash.TShortShortHashMap$1",
       "gnu.trove.impl.sync.TSynchronizedIntObjectMap",
       "gnu.trove.impl.hash.TByteLongHash",
       "gnu.trove.decorator.TLongIntMapDecorator$1",
       "gnu.trove.map.hash.TLongIntHashMap$TValueView",
       "gnu.trove.decorator.TLongCharMapDecorator",
       "gnu.trove.stack.TShortStack",
       "gnu.trove.decorator.TDoubleSetDecorator",
       "gnu.trove.map.hash.TByteDoubleHashMap$TValueView$1",
       "gnu.trove.TLongCollection",
       "gnu.trove.map.custom_hash.TObjectFloatCustomHashMap$KeyView",
       "gnu.trove.decorator.TShortObjectMapDecorator$1$1$1",
       "gnu.trove.impl.hash.TDoubleIntHash",
       "gnu.trove.procedure.TFloatDoubleProcedure",
       "gnu.trove.impl.hash.TCharCharHash",
       "gnu.trove.map.hash.TCharLongHashMap",
       "gnu.trove.stack.TLongStack",
       "gnu.trove.impl.sync.TSynchronizedShortCharMap",
       "gnu.trove.decorator.TCharIntMapDecorator",
       "gnu.trove.map.hash.TCustomHashMap",
       "gnu.trove.procedure.TObjectFloatProcedure",
       "gnu.trove.set.hash.TLongHashSet$TLongHashIterator",
       "gnu.trove.iterator.TObjectIntIterator",
       "gnu.trove.iterator.TObjectByteIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessShortList",
       "gnu.trove.set.hash.TByteHashSet",
       "gnu.trove.map.hash.TIntDoubleHashMap$TIntDoubleHashIterator",
       "gnu.trove.map.hash.TObjectDoubleHashMap$TObjectDoubleHashIterator",
       "gnu.trove.map.hash.TIntObjectHashMap$TIntObjectHashIterator",
       "gnu.trove.map.hash.TObjectShortHashMap$TShortValueCollection$1",
       "gnu.trove.procedure.TIntByteProcedure",
       "gnu.trove.decorator.TFloatObjectMapDecorator$1$1",
       "gnu.trove.map.hash.TShortIntHashMap$TShortIntHashIterator",
       "gnu.trove.impl.hash.TDoubleCharHash",
       "gnu.trove.impl.sync.TSynchronizedByteObjectMap",
       "gnu.trove.decorator.TIntShortMapDecorator$1$1$1",
       "gnu.trove.map.hash.TCharShortHashMap",
       "gnu.trove.map.hash.TLongDoubleHashMap$TValueView",
       "gnu.trove.list.array.TCharArrayList$1",
       "gnu.trove.list.linked.TLongLinkedList",
       "gnu.trove.procedure.TIntShortProcedure",
       "gnu.trove.decorator.TShortIntMapDecorator",
       "gnu.trove.map.hash.TLongIntHashMap$TLongIntValueHashIterator",
       "gnu.trove.map.custom_hash.TObjectByteCustomHashMap",
       "gnu.trove.map.TFloatIntMap",
       "gnu.trove.map.hash.TIntFloatHashMap$TIntFloatHashIterator",
       "gnu.trove.decorator.TByteIntMapDecorator",
       "gnu.trove.impl.sync.TSynchronizedByteIntMap",
       "gnu.trove.impl.sync.TSynchronizedCharShortMap",
       "gnu.trove.map.custom_hash.TObjectCharCustomHashMap$MapBackedView",
       "gnu.trove.map.hash.TFloatShortHashMap",
       "gnu.trove.decorator.TObjectFloatMapDecorator",
       "gnu.trove.impl.sync.TSynchronizedIntCharMap",
       "gnu.trove.map.hash.TByteFloatHashMap$TKeyView$1",
       "gnu.trove.map.custom_hash.TObjectLongCustomHashMap$KeyView",
       "gnu.trove.map.hash.TDoubleCharHashMap$TValueView",
       "gnu.trove.map.custom_hash.TObjectIntCustomHashMap",
       "gnu.trove.map.TDoubleObjectMap",
       "gnu.trove.procedure.TFloatLongProcedure",
       "gnu.trove.decorator.TLongShortMapDecorator$1$1$1",
       "gnu.trove.decorator.TLongFloatMapDecorator$1$1",
       "gnu.trove.list.linked.TDoubleLinkedList$RemoveProcedure",
       "gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharValueHashIterator",
       "gnu.trove.decorator.TCharObjectMapDecorator$1$1",
       "gnu.trove.list.linked.TIntLinkedList$1",
       "gnu.trove.map.hash.TCharFloatHashMap$TCharFloatKeyHashIterator",
       "gnu.trove.iterator.TDoubleByteIterator",
       "gnu.trove.map.hash.TLongFloatHashMap$TLongFloatValueHashIterator",
       "gnu.trove.list.linked.TShortLinkedList$1",
       "gnu.trove.procedure.TByteCharProcedure",
       "gnu.trove.impl.hash.THashPrimitiveIterator",
       "gnu.trove.map.hash.TDoubleDoubleHashMap$TValueView",
       "gnu.trove.map.hash.TCustomHashMap$1",
       "gnu.trove.map.hash.TDoubleFloatHashMap$TDoubleFloatKeyHashIterator",
       "gnu.trove.map.hash.TByteFloatHashMap$TByteFloatHashIterator",
       "gnu.trove.map.hash.TByteLongHashMap$TByteLongValueHashIterator",
       "gnu.trove.map.hash.TByteDoubleHashMap$1",
       "gnu.trove.list.linked.TIntLinkedList$TIntLink",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap",
       "gnu.trove.queue.TIntQueue",
       "gnu.trove.map.hash.TShortCharHashMap$TKeyView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap$1",
       "gnu.trove.list.linked.TCharLinkedList",
       "gnu.trove.map.hash.TFloatDoubleHashMap$1",
       "gnu.trove.decorator.TFloatShortMapDecorator",
       "gnu.trove.map.TShortByteMap",
       "gnu.trove.map.hash.TShortObjectHashMap$KeyView$TShortHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap$1",
       "gnu.trove.decorator.TFloatLongMapDecorator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection",
       "gnu.trove.iterator.TLongCharIterator",
       "gnu.trove.map.TDoubleByteMap",
       "gnu.trove.decorator.TFloatFloatMapDecorator$1",
       "gnu.trove.map.hash.TIntDoubleHashMap$TValueView$1",
       "gnu.trove.set.TByteSet",
       "gnu.trove.impl.sync.TSynchronizedShortShortMap",
       "gnu.trove.map.hash.TDoubleLongHashMap$TKeyView$1",
       "gnu.trove.map.hash.TLongFloatHashMap$TValueView$1",
       "gnu.trove.map.custom_hash.TObjectIntCustomHashMap$TIntValueCollection$1",
       "gnu.trove.procedure.TByteLongProcedure",
       "gnu.trove.set.hash.TIntHashSet$TIntHashIterator",
       "gnu.trove.map.hash.TObjectByteHashMap$TObjectByteHashIterator",
       "gnu.trove.decorator.TFloatObjectMapDecorator$1",
       "gnu.trove.map.hash.TCharObjectHashMap$MapBackedView",
       "gnu.trove.impl.unmodifiable.TUnmodifiableByteLongMap$1",
       "gnu.trove.map.hash.TObjectFloatHashMap$MapBackedView",
       "gnu.trove.map.hash.TCharLongHashMap$TCharLongKeyHashIterator",
       "gnu.trove.map.TShortShortMap",
       "gnu.trove.map.hash.TObjectFloatHashMap$KeyView",
       "gnu.trove.decorator.TIntCharMapDecorator$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntLongMap",
       "gnu.trove.map.hash.TCharCharHashMap$TCharCharKeyHashIterator",
       "gnu.trove.decorator.TFloatCharMapDecorator$1$1$1",
       "gnu.trove.procedure.TCharIntProcedure",
       "gnu.trove.impl.hash.TByteByteHash",
       "gnu.trove.list.array.TShortArrayList$1",
       "gnu.trove.map.hash.TFloatByteHashMap$TValueView",
       "gnu.trove.map.hash.TFloatShortHashMap$TValueView",
       "gnu.trove.map.hash.TByteDoubleHashMap$TValueView",
       "gnu.trove.decorator.TCharShortMapDecorator$1",
       "gnu.trove.map.hash.TDoubleFloatHashMap$TValueView",
       "gnu.trove.map.hash.TFloatDoubleHashMap",
       "gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap$1",
       "gnu.trove.decorator.TByteShortMapDecorator",
       "gnu.trove.procedure.TCharObjectProcedure",
       "gnu.trove.impl.sync.TSynchronizedShortSet",
       "gnu.trove.map.hash.TCustomHashMap$EqProcedure",
       "gnu.trove.map.hash.TCharIntHashMap$TCharIntValueHashIterator",
       "gnu.trove.map.hash.TFloatIntHashMap$1",
       "gnu.trove.decorator.TDoubleDoubleMapDecorator$1$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1",
       "gnu.trove.map.hash.TByteShortHashMap$TValueView$1",
       "gnu.trove.procedure.TByteObjectProcedure",
       "gnu.trove.map.hash.TFloatDoubleHashMap$TKeyView$1",
       "gnu.trove.iterator.TDoubleObjectIterator",
       "gnu.trove.map.TLongLongMap",
       "gnu.trove.map.custom_hash.TObjectIntCustomHashMap$KeyView",
       "gnu.trove.map.hash.THashMap$EntryView$EntryIterator",
       "gnu.trove.map.TDoubleIntMap",
       "gnu.trove.map.hash.TCharIntHashMap$TKeyView",
       "gnu.trove.decorator.TByteObjectMapDecorator$1$1",
       "gnu.trove.decorator.TByteDoubleMapDecorator$1",
       "gnu.trove.iterator.TDoubleFloatIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatLongMap",
       "gnu.trove.map.hash.TFloatCharHashMap$TFloatCharHashIterator",
       "gnu.trove.map.hash.TObjectShortHashMap$1",
       "gnu.trove.map.hash.TObjectShortHashMap$2",
       "gnu.trove.map.hash.TCharDoubleHashMap",
       "gnu.trove.decorator.TLongLongMapDecorator$1",
       "gnu.trove.decorator.TObjectByteMapDecorator$1$1",
       "gnu.trove.decorator.TIntDoubleMapDecorator$1$1$1",
       "gnu.trove.map.hash.TLongLongHashMap$TLongLongHashIterator",
       "gnu.trove.iterator.TIntLongIterator",
       "gnu.trove.map.hash.THashMap$EntryView",
       "gnu.trove.decorator.TDoubleByteMapDecorator$1$1",
       "gnu.trove.procedure.TCharLongProcedure",
       "gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection",
       "gnu.trove.procedure.TByteIntProcedure",
       "gnu.trove.map.hash.TFloatLongHashMap$TFloatLongValueHashIterator",
       "gnu.trove.decorator.TShortShortMapDecorator$1$1$1",
       "gnu.trove.map.hash.TFloatLongHashMap$TValueView",
       "gnu.trove.queue.TDoubleQueue",
       "gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCollection$1",
       "gnu.trove.impl.sync.TSynchronizedDoubleList",
       "gnu.trove.impl.hash.TCharFloatHash",
       "gnu.trove.list.array.TLongArrayList$TLongArrayIterator",
       "gnu.trove.procedure.TDoubleCharProcedure",
       "gnu.trove.impl.unmodifiable.TUnmodifiableIntLongMap$1",
       "gnu.trove.map.hash.TLongByteHashMap$TLongByteValueHashIterator",
       "gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$1",
       "gnu.trove.set.hash.TLinkedHashSet$WriteProcedure",
       "gnu.trove.iterator.TByteIntIterator",
       "gnu.trove.decorator.TShortDoubleMapDecorator$1$1$1",
       "gnu.trove.map.hash.TFloatIntHashMap$TFloatIntHashIterator",
       "gnu.trove.procedure.TByteProcedure",
       "gnu.trove.decorator.TShortDoubleMapDecorator$1",
       "gnu.trove.map.hash.TLongCharHashMap$TLongCharValueHashIterator",
       "gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap",
       "gnu.trove.map.hash.TIntFloatHashMap$TValueView",
       "gnu.trove.procedure.TDoubleLongProcedure",
       "gnu.trove.decorator.TDoubleDoubleMapDecorator",
       "gnu.trove.decorator.TDoubleShortMapDecorator",
       "gnu.trove.map.hash.TByteByteHashMap$TKeyView",
       "gnu.trove.decorator.TByteCharMapDecorator$1",
       "gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap",
       "gnu.trove.map.hash.TShortCharHashMap$TKeyView$1",
       "gnu.trove.map.hash.TIntShortHashMap$TValueView$1",
       "gnu.trove.set.hash.TLinkedHashSet$ForEachProcedure",
       "gnu.trove.map.hash.TObjectLongHashMap$TObjectLongHashIterator",
       "gnu.trove.map.hash.TIntIntHashMap$TIntIntValueHashIterator",
       "gnu.trove.map.hash.TDoubleByteHashMap$TKeyView$1",
       "gnu.trove.impl.sync.TSynchronizedObjectCharMap",
       "gnu.trove.map.hash.TLongIntHashMap$TValueView$1",
       "gnu.trove.decorator.TObjectShortMapDecorator$1$1",
       "gnu.trove.impl.hash.TCharIntHash",
       "gnu.trove.map.hash.TShortIntHashMap$TKeyView",
       "gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList",
       "gnu.trove.impl.sync.TSynchronizedShortCollection",
       "gnu.trove.map.hash.TIntObjectHashMap$MapBackedView"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "net.java.dev.jna:jna:jar:4.4.0:compile",
      "coordinates": "net.java.dev.jna:jna:4.4.0",
      "groupId": "net.java.dev.jna",
      "artifactId": "jna",
      "version": "4.4.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 1091208,
      "type": "transitive",
      "status": "bloated",
      "parent": "net.dv8tion:JDA:jar:3.3.1_301:compile",
      "allTypes": [
       "com.sun.jna.Structure$ByValue",
       "com.sun.jna.NativeString",
       "com.sun.jna.StructureWriteContext",
       "com.sun.jna.VarArgsChecker",
       "com.sun.jna.win32.W32APITypeMapper$1",
       "com.sun.jna.FromNativeConverter",
       "com.sun.jna.win32.W32APIOptions$1",
       "com.sun.jna.win32.W32APIOptions$2",
       "com.sun.jna.Structure$FFIType$size_t",
       "com.sun.jna.CallbackResultContext",
       "com.sun.jna.Native$7",
       "com.sun.jna.Native$6",
       "com.sun.jna.Native$5",
       "com.sun.jna.Pointer$Opaque",
       "com.sun.jna.ptr.ByReference",
       "com.sun.jna.WString",
       "com.sun.jna.LastErrorException",
       "com.sun.jna.Native$4",
       "com.sun.jna.Native$3",
       "com.sun.jna.Native$2",
       "com.sun.jna.Native$1",
       "com.sun.jna.win32.DLLCallback",
       "com.sun.jna.Union",
       "com.sun.jna.Native",
       "com.sun.jna.ptr.DoubleByReference",
       "com.sun.jna.PointerType",
       "com.sun.jna.AltCallingConvention",
       "com.sun.jna.Structure$2",
       "com.sun.jna.Structure$1",
       "com.sun.jna.Structure$3",
       "com.sun.jna.VarArgsChecker$1",
       "com.sun.jna.Library$Handler$FunctionInfo",
       "com.sun.jna.TypeConverter",
       "com.sun.jna.NativeLibrary",
       "com.sun.jna.win32.W32APIOptions",
       "com.sun.jna.CallbackReference",
       "com.sun.jna.CallbackReference$AttachOptions",
       "com.sun.jna.FunctionMapper",
       "com.sun.jna.win32.StdCallFunctionMapper",
       "com.sun.jna.FromNativeContext",
       "com.sun.jna.Pointer$1",
       "com.sun.jna.Structure$AutoAllocated",
       "com.sun.jna.Function$PostCallRead",
       "com.sun.jna.MethodParameterContext",
       "com.sun.jna.ToNativeConverter",
       "com.sun.jna.FunctionParameterContext",
       "com.sun.jna.Structure",
       "com.sun.jna.Structure$ByReference",
       "com.sun.jna.NativeLibrary$2",
       "com.sun.jna.NativeLibrary$1",
       "com.sun.jna.ptr.ShortByReference",
       "com.sun.jna.Structure$FFIType$FFITypes",
       "com.sun.jna.NativeString$StringMemory",
       "com.sun.jna.Pointer",
       "com.sun.jna.Library$Handler",
       "com.sun.jna.Memory$SharedMemory",
       "com.sun.jna.Native$AWT",
       "com.sun.jna.DefaultTypeMapper",
       "com.sun.jna.WeakMemoryHolder",
       "com.sun.jna.Native$ffi_callback",
       "com.sun.jna.StringArray",
       "com.sun.jna.win32.W32APITypeMapper$2",
       "com.sun.jna.FunctionResultContext",
       "com.sun.jna.Callback$UncaughtExceptionHandler",
       "com.sun.jna.NativeLong",
       "com.sun.jna.TypeMapper",
       "com.sun.jna.Function",
       "com.sun.jna.Function$NativeMappedArray",
       "com.sun.jna.Callback",
       "com.sun.jna.IntegerType",
       "com.sun.jna.win32.StdCallLibrary",
       "com.sun.jna.win32.W32APITypeMapper",
       "com.sun.jna.ptr.ByteByReference",
       "com.sun.jna.Library",
       "com.sun.jna.Native$Buffers",
       "com.sun.jna.win32.W32APIFunctionMapper",
       "com.sun.jna.NativeMappedConverter",
       "com.sun.jna.VarArgsChecker$RealVarArgsChecker",
       "com.sun.jna.CallbackThreadInitializer",
       "com.sun.jna.ptr.PointerByReference",
       "com.sun.jna.Memory",
       "com.sun.jna.DefaultTypeMapper$Entry",
       "com.sun.jna.MethodResultContext",
       "com.sun.jna.VarArgsChecker$NoVarArgsChecker",
       "com.sun.jna.Structure$LayoutInfo",
       "com.sun.jna.Platform",
       "com.sun.jna.ToNativeContext",
       "com.sun.jna.ptr.IntByReference",
       "com.sun.jna.win32.StdCall",
       "com.sun.jna.CallbackProxy",
       "com.sun.jna.Function$PointerArray",
       "com.sun.jna.StructureReadContext",
       "com.sun.jna.Structure$StructureSet",
       "com.sun.jna.ptr.LongByReference",
       "com.sun.jna.Structure$StructField",
       "com.sun.jna.ptr.NativeLongByReference",
       "com.sun.jna.InvocationMapper",
       "com.sun.jna.CallbackReference$DefaultCallbackProxy",
       "com.sun.jna.CallbackReference$NativeFunctionHandler",
       "com.sun.jna.CallbackParameterContext",
       "com.sun.jna.win32.StdCallLibrary$StdCallCallback",
       "com.sun.jna.NativeMapped",
       "com.sun.jna.ptr.FloatByReference",
       "com.sun.jna.ELFAnalyser",
       "com.sun.jna.Structure$FFIType",
       "com.sun.jna.Version"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "com.neovisionaries:nv-websocket-client:jar:2.2:compile",
      "coordinates": "com.neovisionaries:nv-websocket-client:2.2",
      "groupId": "com.neovisionaries",
      "artifactId": "nv-websocket-client",
      "version": "2.2",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 112255,
      "type": "transitive",
      "status": "bloated",
      "parent": "net.dv8tion:JDA:jar:3.3.1_301:compile",
      "allTypes": [
       "com.neovisionaries.ws.client.PongSender",
       "com.neovisionaries.ws.client.WebSocketCloseCode",
       "com.neovisionaries.ws.client.ListenerManager",
       "com.neovisionaries.ws.client.PayloadGenerator",
       "com.neovisionaries.ws.client.InsufficientDataException",
       "com.neovisionaries.ws.client.ReadingThread",
       "com.neovisionaries.ws.client.PingSender",
       "com.neovisionaries.ws.client.DistinguishedNameParser",
       "com.neovisionaries.ws.client.WebSocketExtension",
       "com.neovisionaries.ws.client.Misc",
       "com.neovisionaries.ws.client.PeriodicalFrameSender",
       "com.neovisionaries.ws.client.FormatException",
       "com.neovisionaries.ws.client.StatusLine",
       "com.neovisionaries.ws.client.WebSocketState",
       "com.neovisionaries.ws.client.WebSocketOpcode",
       "com.neovisionaries.ws.client.ReadingThread$1",
       "com.neovisionaries.ws.client.Address",
       "com.neovisionaries.ws.client.FixedDistanceHuffman",
       "com.neovisionaries.ws.client.ByteArray",
       "com.neovisionaries.ws.client.SocketFactorySettings",
       "com.neovisionaries.ws.client.Base64",
       "com.neovisionaries.ws.client.PeriodicalFrameSender$Task",
       "com.neovisionaries.ws.client.OkHostnameVerifier",
       "com.neovisionaries.ws.client.StateManager$CloseInitiator",
       "com.neovisionaries.ws.client.WebSocketOutputStream",
       "com.neovisionaries.ws.client.DeflateUtil",
       "com.neovisionaries.ws.client.WebSocketListener",
       "com.neovisionaries.ws.client.WebSocketException",
       "com.neovisionaries.ws.client.WebSocketFactory",
       "com.neovisionaries.ws.client.DeflateDecompressor",
       "com.neovisionaries.ws.client.FinishThread",
       "com.neovisionaries.ws.client.PerMessageCompressionExtension",
       "com.neovisionaries.ws.client.OpeningHandshakeException",
       "com.neovisionaries.ws.client.StateManager",
       "com.neovisionaries.ws.client.WebSocketError",
       "com.neovisionaries.ws.client.HostnameUnverifiedException",
       "com.neovisionaries.ws.client.PerMessageDeflateExtension",
       "com.neovisionaries.ws.client.ProxySettings",
       "com.neovisionaries.ws.client.ReadingThread$CloseTask",
       "com.neovisionaries.ws.client.ThreadType",
       "com.neovisionaries.ws.client.DeflateCompressor",
       "com.neovisionaries.ws.client.Token",
       "com.neovisionaries.ws.client.HandshakeReader",
       "com.neovisionaries.ws.client.ConnectThread",
       "com.neovisionaries.ws.client.FixedLiteralLengthHuffman",
       "com.neovisionaries.ws.client.SocketConnector",
       "com.neovisionaries.ws.client.WebSocketFrame",
       "com.neovisionaries.ws.client.WebSocket$1",
       "com.neovisionaries.ws.client.HandshakeBuilder",
       "com.neovisionaries.ws.client.PeriodicalFrameSender$1",
       "com.neovisionaries.ws.client.WebSocketInputStream",
       "com.neovisionaries.ws.client.ProxyHandshaker",
       "com.neovisionaries.ws.client.WebSocketAdapter",
       "com.neovisionaries.ws.client.CounterPayloadGenerator",
       "com.neovisionaries.ws.client.WebSocketThread",
       "com.neovisionaries.ws.client.WritingThread",
       "com.neovisionaries.ws.client.WebSocket",
       "com.neovisionaries.ws.client.Connectable",
       "com.neovisionaries.ws.client.Huffman",
       "com.neovisionaries.ws.client.NoMoreFrameException"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "com.squareup.okhttp3:okhttp:jar:3.8.1:compile",
      "coordinates": "com.squareup.okhttp3:okhttp:3.8.1",
      "groupId": "com.squareup.okhttp3",
      "artifactId": "okhttp",
      "version": "3.8.1",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 398122,
      "type": "transitive",
      "status": "bloated",
      "parent": "net.dv8tion:JDA:jar:3.3.1_301:compile",
      "allTypes": [
       "okhttp3.internal.http.HttpDate",
       "okhttp3.RequestBody$1",
       "okhttp3.Cache$1",
       "okhttp3.Cache$2",
       "okhttp3.internal.cache.FaultHidingSink",
       "okhttp3.internal.http1.Http1Codec$ChunkedSink",
       "okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner",
       "okhttp3.OkHttpClient$1",
       "okhttp3.internal.http2.Http2",
       "okhttp3.internal.http2.Hpack",
       "okhttp3.internal.ws.RealWebSocket",
       "okhttp3.internal.io.FileSystem",
       "okhttp3.Cache$CacheRequestImpl$1",
       "okhttp3.MediaType",
       "okhttp3.CookieJar",
       "okhttp3.Request",
       "okhttp3.Cache$Entry",
       "okhttp3.internal.http.HttpMethod",
       "okhttp3.internal.cache.DiskLruCache",
       "okhttp3.internal.cache.DiskLruCache$Editor",
       "okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider",
       "okhttp3.internal.http2.Ping",
       "okhttp3.RequestBody$2",
       "okhttp3.Handshake",
       "okhttp3.RequestBody$3",
       "okhttp3.Call$Factory",
       "okhttp3.internal.cache.CacheStrategy",
       "okhttp3.internal.cache2.FileOperator",
       "okhttp3.CipherSuite$1",
       "okhttp3.CacheControl",
       "okhttp3.internal.http1.Http1Codec$1",
       "okhttp3.CookieJar$1",
       "okhttp3.EventListener$1",
       "okhttp3.EventListener$2",
       "okhttp3.EventListener",
       "okhttp3.Response$Builder",
       "okhttp3.Response",
       "okhttp3.Call",
       "okhttp3.Callback",
       "okhttp3.Authenticator$1",
       "okhttp3.internal.platform.OptionalMethod",
       "okhttp3.internal.http1.Http1Codec$UnknownLengthSource",
       "okhttp3.internal.connection.RealConnection$1",
       "okhttp3.internal.http2.Settings",
       "okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex",
       "okhttp3.internal.http.RequestLine",
       "okhttp3.OkHttpClient",
       "okhttp3.ConnectionSpec$Builder",
       "okhttp3.internal.platform.JdkWithJettyBootPlatform",
       "okhttp3.internal.connection.ConnectionSpecSelector",
       "okhttp3.MultipartBody$Builder",
       "okhttp3.Authenticator",
       "okhttp3.FormBody$Builder",
       "okhttp3.CertificatePinner",
       "okhttp3.internal.http1.Http1Codec$ChunkedSource",
       "okhttp3.internal.cache.CacheRequest",
       "okhttp3.internal.http2.Hpack$Reader",
       "okhttp3.FormBody",
       "okhttp3.CipherSuite",
       "okhttp3.internal.http1.Http1Codec$FixedLengthSource",
       "okhttp3.internal.http2.Http2Stream$StreamTimeout",
       "okhttp3.internal.Util",
       "okhttp3.Interceptor",
       "okhttp3.internal.http2.Http2Connection",
       "okhttp3.ConnectionPool$1",
       "okhttp3.WebSocket",
       "okhttp3.internal.http1.Http1Codec$FixedLengthSink",
       "okhttp3.internal.http2.Http2Reader",
       "okhttp3.CertificatePinner$Builder",
       "okhttp3.internal.http.CallServerInterceptor",
       "okhttp3.internal.io.FileSystem$1",
       "okhttp3.internal.http2.Http2Connection$Builder",
       "okhttp3.EventListener$Factory",
       "okhttp3.HttpUrl$Builder",
       "okhttp3.internal.http.HttpCodec",
       "okhttp3.internal.tls.DistinguishedNameParser",
       "okhttp3.internal.http2.Http2Connection$Listener$1",
       "okhttp3.OkHttpClient$Builder",
       "okhttp3.internal.platform.Platform",
       "okhttp3.internal.http2.Huffman$Node",
       "okhttp3.internal.http2.Http2Stream$FramingSink",
       "okhttp3.internal.Version",
       "okhttp3.internal.connection.ConnectInterceptor",
       "okhttp3.internal.connection.RouteDatabase",
       "okhttp3.internal.http2.StreamResetException",
       "okhttp3.internal.http2.Http2Reader$ContinuationSource",
       "okhttp3.Headers",
       "okhttp3.RequestBody",
       "okhttp3.internal.http2.PushObserver",
       "okhttp3.internal.http.HttpDate$1",
       "okhttp3.Cookie$Builder",
       "okhttp3.package-info",
       "okhttp3.internal.http2.Http2Reader$Handler",
       "okhttp3.Dns$1",
       "okhttp3.internal.Util$1",
       "okhttp3.internal.ws.WebSocketProtocol",
       "okhttp3.internal.Util$2",
       "okhttp3.internal.ws.WebSocketReader$FrameCallback",
       "okhttp3.Dns",
       "okhttp3.internal.platform.Jdk9Platform",
       "okhttp3.internal.ws.WebSocketReader",
       "okhttp3.internal.ws.WebSocketWriter$FrameSink",
       "okhttp3.internal.http.HttpHeaders",
       "okhttp3.Cache",
       "okhttp3.Request$Builder",
       "okhttp3.internal.ws.RealWebSocket$PingRunnable",
       "okhttp3.CacheControl$Builder",
       "okhttp3.internal.cache.CacheInterceptor",
       "okhttp3.internal.http2.Http2Connection$ReaderRunnable$3",
       "okhttp3.internal.http2.Http2Connection$ReaderRunnable$2",
       "okhttp3.Address",
       "okhttp3.Dispatcher",
       "okhttp3.Route",
       "okhttp3.internal.ws.RealWebSocket$Message",
       "okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex",
       "okhttp3.Headers$Builder",
       "okhttp3.internal.http2.Hpack$Writer",
       "okhttp3.internal.cache2.Relay$RelaySource",
       "okhttp3.ResponseBody",
       "okhttp3.HttpUrl$1",
       "okhttp3.internal.tls.CertificateChainCleaner",
       "okhttp3.internal.cache2.Relay",
       "okhttp3.Connection",
       "okhttp3.internal.cache.CacheInterceptor$1",
       "okhttp3.internal.connection.StreamAllocation$StreamAllocationReference",
       "okhttp3.internal.cache.DiskLruCache$Editor$1",
       "okhttp3.MultipartBody",
       "okhttp3.internal.http2.Http2Writer",
       "okhttp3.internal.http.RealResponseBody",
       "okhttp3.internal.ws.RealWebSocket$Streams",
       "okhttp3.CertificatePinner$Pin",
       "okhttp3.internal.http.UnrepeatableRequestBody",
       "okhttp3.internal.cache.InternalCache",
       "okhttp3.internal.http1.Http1Codec",
       "okhttp3.MultipartBody$Part",
       "okhttp3.Challenge",
       "okhttp3.Cache$CacheRequestImpl",
       "okhttp3.internal.tls.BasicCertificateChainCleaner",
       "okhttp3.internal.cache.DiskLruCache$Snapshot",
       "okhttp3.internal.http.RetryAndFollowUpInterceptor",
       "okhttp3.WebSocketListener",
       "okhttp3.internal.http2.Huffman",
       "okhttp3.internal.Internal",
       "okhttp3.internal.http2.Http2Connection$7",
       "okhttp3.internal.http2.Http2Connection$6",
       "okhttp3.internal.http2.Http2Connection$3",
       "okhttp3.internal.http2.Http2Connection$2",
       "okhttp3.internal.http2.Http2Connection$5",
       "okhttp3.internal.http2.Http2Connection$4",
       "okhttp3.internal.http2.Http2Connection$1",
       "okhttp3.Cache$CacheResponseBody$1",
       "okhttp3.internal.http2.ConnectionShutdownException",
       "okhttp3.ResponseBody$1",
       "okhttp3.internal.ws.RealWebSocket$Close",
       "okhttp3.internal.http.BridgeInterceptor",
       "okhttp3.internal.connection.RouteException",
       "okhttp3.internal.http2.Http2Connection$ReaderRunnable$1",
       "okhttp3.ConnectionPool",
       "okhttp3.internal.NamedRunnable",
       "okhttp3.HttpUrl$Builder$ParseResult",
       "okhttp3.WebSocket$Factory",
       "okhttp3.internal.ws.WebSocketWriter",
       "okhttp3.internal.ws.RealWebSocket$1",
       "okhttp3.internal.ws.RealWebSocket$2",
       "okhttp3.internal.http2.ErrorCode",
       "okhttp3.RealCall",
       "okhttp3.internal.cache.DiskLruCache$1",
       "okhttp3.internal.cache.DiskLruCache$3",
       "okhttp3.internal.cache.DiskLruCache$2",
       "okhttp3.internal.connection.StreamAllocation",
       "okhttp3.Cache$CacheResponseBody",
       "okhttp3.ConnectionSpec",
       "okhttp3.internal.platform.AndroidPlatform",
       "okhttp3.internal.http2.Http2Connection$Listener",
       "okhttp3.internal.http2.PushObserver$1",
       "okhttp3.internal.http.RealInterceptorChain",
       "okhttp3.internal.http.StatusLine",
       "okhttp3.internal.http1.Http1Codec$AbstractSource",
       "okhttp3.Credentials",
       "okhttp3.internal.http2.Http2Connection$ReaderRunnable",
       "okhttp3.Protocol",
       "okhttp3.HttpUrl",
       "okhttp3.internal.connection.RealConnection",
       "okhttp3.internal.connection.RouteSelector",
       "okhttp3.ResponseBody$BomAwareReader",
       "okhttp3.internal.cache.CacheStrategy$Factory",
       "okhttp3.Cookie",
       "okhttp3.internal.http2.Header",
       "okhttp3.internal.ws.RealWebSocket$CancelRunnable",
       "okhttp3.internal.tls.OkHostnameVerifier",
       "okhttp3.internal.tls.TrustRootIndex",
       "okhttp3.internal.publicsuffix.PublicSuffixDatabase",
       "okhttp3.internal.http2.Http2Stream",
       "okhttp3.internal.http2.Http2Codec$StreamFinishingSource",
       "okhttp3.internal.http2.Http2Codec",
       "okhttp3.Interceptor$Chain",
       "okhttp3.internal.cache.DiskLruCache$Entry",
       "okhttp3.internal.platform.AndroidPlatform$CloseGuard",
       "okhttp3.TlsVersion",
       "okhttp3.internal.http2.Http2Stream$FramingSource",
       "okhttp3.RealCall$AsyncCall"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "com.squareup.okio:okio:jar:1.13.0:compile",
        "coordinates": "com.squareup.okio:okio:1.13.0",
        "groupId": "com.squareup.okio",
        "artifactId": "okio",
        "version": "1.13.0",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 81811,
        "type": "transitive",
        "status": "bloated",
        "parent": "com.squareup.okhttp3:okhttp:jar:3.8.1:compile",
        "allTypes": [
         "okio.RealBufferedSource$1",
         "okio.Base64",
         "okio.Okio",
         "okio.Pipe$PipeSink",
         "okio.RealBufferedSource",
         "okio.Source",
         "okio.HashingSink",
         "okio.Timeout$1",
         "okio.Okio$1",
         "okio.Okio$4",
         "okio.Options",
         "okio.Okio$2",
         "okio.Sink",
         "okio.Okio$3",
         "okio.Timeout",
         "okio.AsyncTimeout",
         "okio.BufferedSink",
         "okio.ByteString",
         "okio.ForwardingSource",
         "okio.ForwardingTimeout",
         "okio.GzipSource",
         "okio.AsyncTimeout$1",
         "okio.AsyncTimeout$2",
         "okio.Segment",
         "okio.Util",
         "okio.SegmentPool",
         "okio.Buffer",
         "okio.RealBufferedSink$1",
         "okio.Pipe",
         "okio.package-info",
         "okio.DeflaterSink",
         "okio.RealBufferedSink",
         "okio.SegmentedByteString",
         "okio.Utf8",
         "okio.AsyncTimeout$Watchdog",
         "okio.BufferedSource",
         "okio.GzipSink",
         "okio.HashingSource",
         "okio.ForwardingSink",
         "okio.Pipe$PipeSource",
         "okio.Buffer$2",
         "okio.Buffer$1",
         "okio.InflaterSource"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     }
    ]
   },
   {
    "id": "org.slf4j:slf4j-nop:jar:1.7.5:compile",
    "coordinates": "org.slf4j:slf4j-nop:1.7.5",
    "groupId": "org.slf4j",
    "artifactId": "slf4j-nop",
    "version": "1.7.5",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 4091,
    "type": "direct",
    "status": "bloated",
    "parent": "ib-ai:ib-ai:jar:0.0.1",
    "allTypes": [
     "org.slf4j.impl.StaticLoggerBinder",
     "org.slf4j.impl.StaticMDCBinder",
     "org.slf4j.impl.StaticMarkerBinder"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "org.slf4j:slf4j-api:jar:1.7.5:compile",
      "coordinates": "org.slf4j:slf4j-api:1.7.5",
      "groupId": "org.slf4j",
      "artifactId": "slf4j-api",
      "version": "1.7.5",
      "scope": "compile",
      "packaging": "jar",
      "omitted": true,
      "type": "unknown",
      "status": "unknown",
      "parent": "org.slf4j:slf4j-nop:jar:1.7.5:compile",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     }
    ]
   },
   {
    "id": "com.github.Arraying:Kotys:jar:0.3.0:compile",
    "coordinates": "com.github.Arraying:Kotys:0.3.0",
    "groupId": "com.github.Arraying",
    "artifactId": "Kotys",
    "version": "0.3.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 22919,
    "type": "direct",
    "status": "bloated",
    "parent": "ib-ai:ib-ai:jar:0.0.1",
    "allTypes": [
     "de.arraying.kotys.JSONTokenizer$1",
     "de.arraying.kotys.JSONParser$BiReturn",
     "de.arraying.kotys.JSONTokenizer$Type",
     "de.arraying.kotys.JSON",
     "de.arraying.kotys.JSONORM",
     "de.arraying.kotys.JSONTokenizer",
     "de.arraying.kotys.JSONParser$1",
     "de.arraying.kotys.JSONArray",
     "de.arraying.kotys.JSONField",
     "de.arraying.kotys.JSONParser",
     "de.arraying.kotys.JSONTokenizer$Token",
     "de.arraying.kotys.JSONORM$FieldContainer",
     "de.arraying.kotys.JSONUtil",
     "de.arraying.kotys.JSONFormatter",
     "de.arraying.kotys.JSONContainer"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": []
   },
   {
    "id": "org.jetbrains.kotlin:kotlin-stdlib-jre8:jar:1.2.0:compile",
    "coordinates": "org.jetbrains.kotlin:kotlin-stdlib-jre8:1.2.0",
    "groupId": "org.jetbrains.kotlin",
    "artifactId": "kotlin-stdlib-jre8",
    "version": "1.2.0",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 11695,
    "type": "direct",
    "status": "bloated",
    "parent": "ib-ai:ib-ai:jar:0.0.1",
    "allTypes": [
     "kotlin.streams.StreamsKt$asStream$1",
     "kotlin.text.RegexExtensionsJRE8Kt",
     "kotlin.streams.StreamsKt",
     "kotlin.streams.StreamsKt$asSequence$$inlined$Sequence$2",
     "kotlin.internal.JRE8PlatformImplementations",
     "kotlin.streams.StreamsKt$asSequence$$inlined$Sequence$1",
     "kotlin.collections.CollectionsJRE8Kt",
     "kotlin.streams.StreamsKt$asSequence$$inlined$Sequence$4",
     "kotlin.streams.StreamsKt$asSequence$$inlined$Sequence$3"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "org.jetbrains.kotlin:kotlin-stdlib:jar:1.2.0:compile",
      "coordinates": "org.jetbrains.kotlin:kotlin-stdlib:1.2.0",
      "groupId": "org.jetbrains.kotlin",
      "artifactId": "kotlin-stdlib",
      "version": "1.2.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 930811,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.jetbrains.kotlin:kotlin-stdlib-jre8:jar:1.2.0:compile",
      "allTypes": [
       "kotlin.text.ScreenFloatValueRegEx",
       "kotlin.annotation.AnnotationRetention",
       "kotlin.text.StringsKt__IndentKt$getIndentFunction$1",
       "kotlin.internal.NoInfer",
       "kotlin.jvm.internal.markers.KMutableList",
       "kotlin.io.ConsoleKt",
       "kotlin.io.AccessDeniedException",
       "kotlin.KotlinVersion",
       "kotlin.KotlinVersion$Companion",
       "kotlin.coroutines.experimental.CoroutinesKt",
       "kotlin.reflect.KAnnotatedElement",
       "kotlin.coroutines.experimental.CombinedContext",
       "kotlin.jvm.internal.PropertyReference0",
       "kotlin.sequences.SequencesKt___SequencesKt$elementAt$1",
       "kotlin.jvm.internal.PropertyReference2",
       "kotlin.DslMarker",
       "kotlin.jvm.internal.PropertyReference1",
       "kotlin.reflect.KFunction",
       "kotlin.text.StringsKt__IndentKt$getIndentFunction$2",
       "kotlin.text.CharsKt__CharJVMKt",
       "kotlin.io.FileTreeWalk",
       "kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$then$1",
       "kotlin.io.FileSystemException",
       "kotlin.jvm.internal.Ref$BooleanRef",
       "kotlin.ranges.ClosedFloatingPointRange$DefaultImpls",
       "kotlin.reflect.KTypeProjection",
       "kotlin.system.TimingKt",
       "kotlin.jvm.internal.MutableLocalVariableReference",
       "kotlin.reflect.KProperty0$Getter",
       "kotlin.io.ConsoleKt$stdin$2",
       "kotlin.reflect.KMutableProperty$Setter",
       "kotlin.Unit",
       "kotlin.collections.SetsKt",
       "kotlin.jvm.internal.StringCompanionObject",
       "kotlin.sequences.IndexingSequence$iterator$1",
       "kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1",
       "kotlin.jvm.internal.PropertyReference2Impl",
       "kotlin.collections.AbstractMap$values$1",
       "kotlin.coroutines.experimental.SafeContinuation",
       "kotlin.collections.RingBuffer$iterator$1",
       "kotlin.text.SystemProperties",
       "kotlin.ArrayIntrinsicsKt",
       "kotlin.jvm.internal.PropertyReference",
       "kotlin.LazyThreadSafetyMode",
       "kotlin.text.CharsetsKt",
       "kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1",
       "kotlin.sequences.DropSequence",
       "kotlin.io.FileAlreadyExistsException",
       "kotlin.internal.contracts.CallsInPlace",
       "kotlin.collections.AbstractCollection",
       "kotlin.coroutines.experimental.CoroutineContext$plus$1",
       "kotlin.properties.Delegates",
       "kotlin.reflect.KParameter$Kind",
       "kotlin.jvm.internal.IntCompanionObject",
       "kotlin.internal.AccessibleLateinitPropertyLiteral",
       "kotlin.collections.ShortIterator",
       "kotlin.annotation.AnnotationTarget",
       "kotlin.reflect.KType$DefaultImpls",
       "kotlin.jvm.internal.LongCompanionObject",
       "kotlin.text.Regex$Serialized",
       "kotlin.text.StringsKt",
       "kotlin.collections.AbstractList$SubList",
       "kotlin.ranges.LongProgressionIterator",
       "kotlin.collections.ReversedList",
       "kotlin.jvm.internal.Ref$ShortRef",
       "kotlin.jvm.JvmSynthetic",
       "kotlin.io.FileTreeWalk$FileTreeWalkIterator",
       "kotlin.sequences.SubSequence",
       "kotlin.internal.InlineOnly",
       "kotlin.reflect.KType",
       "kotlin.collections.MapsKt___MapsKt",
       "kotlin.collections.ArraysKt__ArraysKt",
       "kotlin.internal.OnlyInputTypes",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsFirst$1",
       "kotlin.jvm.internal.LongSpreadBuilder",
       "kotlin.io.LinesSequence",
       "kotlin.io.FilePathComponents",
       "kotlin.collections.AbstractIterator",
       "kotlin.ranges.CharProgression",
       "kotlin.LateinitKt",
       "kotlin.ReplaceWith",
       "kotlin.text.StringsKt__StringBuilderJVMKt",
       "kotlin.collections.MovingSubList",
       "kotlin.collections.IndexedValue",
       "kotlin.text.MatcherMatchResult",
       "kotlin.collections.CollectionsKt__CollectionsKt",
       "kotlin.internal.DynamicExtension",
       "kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics",
       "kotlin.internal.contracts.ConditionalEffect",
       "kotlin.sequences.SequencesKt___SequencesKt$onEach$1",
       "kotlin.PreconditionsKt",
       "kotlin.sequences.ConstrainedOnceSequence",
       "kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1",
       "kotlin.io.FilesKt__FilePathComponentsKt",
       "kotlin.StandardKt__SynchronizedKt",
       "kotlin.ExtensionFunctionType",
       "kotlin.text.CharsKt__CharKt",
       "kotlin.reflect.KDeclarationContainer",
       "kotlin.jvm.internal.MutablePropertyReference",
       "kotlin.collections.FloatIterator",
       "kotlin.jvm.JvmOverloads",
       "kotlin.text.StringsKt__IndentKt",
       "kotlin.TypeAliasesKt",
       "kotlin.SynchronizedLazyImpl",
       "kotlin.jvm.internal.ArrayIterator",
       "kotlin.jvm.JvmSuppressWildcards",
       "kotlin.comparisons.ComparisonsKt",
       "kotlin.properties.ReadWriteProperty",
       "kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1",
       "kotlin.collections.CollectionsKt",
       "kotlin.internal.HidesMembers",
       "kotlin.ParameterName",
       "kotlin.collections.SlidingWindowKt",
       "kotlin.jvm.Strictfp",
       "kotlin.coroutines.experimental.AbstractCoroutineContextElement",
       "kotlin.collections.RingBuffer",
       "kotlin.collections.AbstractList",
       "kotlin.reflect.KClass",
       "kotlin.io.ByteStreamsKt",
       "kotlin.coroutines.experimental.SafeContinuation$Companion",
       "kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings",
       "kotlin.TuplesKt",
       "kotlin.io.SerializableKt",
       "kotlin.UninitializedPropertyAccessException",
       "kotlin.reflect.KVariance",
       "kotlin.text.StringsKt__StringsKt$splitToSequence$2",
       "kotlin.collections.ArraysKt___ArraysKt$groupingBy$1",
       "kotlin.jvm.internal.ClassReference",
       "kotlin.text.StringsKt__StringsKt$splitToSequence$1",
       "kotlin.coroutines.experimental.SequenceBuilderKt",
       "kotlin.sequences.MergingSequence$iterator$1",
       "kotlin.text.MatcherMatchResult$groupValues$1",
       "kotlin.jvm.internal.markers.KMutableIterator",
       "kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1",
       "kotlin.jvm.internal.markers.KMutableIterable",
       "kotlin.reflect.KMutableProperty",
       "kotlin.reflect.KCallable$DefaultImpls",
       "kotlin.jvm.JvmField",
       "kotlin.text.MatchGroupCollection",
       "kotlin.KotlinNullPointerException",
       "kotlin.jvm.JvmMultifileClass",
       "kotlin.collections.CollectionsKt___CollectionsKt",
       "kotlin.collections.AbstractMutableMap",
       "kotlin.ranges.CharRange$Companion",
       "kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1",
       "kotlin.SinceKotlin",
       "kotlin.InitializedLazyImpl",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1",
       "kotlin.collections.AbstractIterator$WhenMappings",
       "kotlin.jvm.internal.CollectionToArray",
       "kotlin.jvm.internal.PrimitiveSpreadBuilder",
       "kotlin.system.ProcessKt",
       "kotlin.jvm.internal.PackageReference",
       "kotlin.jvm.internal.Ref$ObjectRef",
       "kotlin.collections.ArraysKt___ArraysKt$asList$7",
       "kotlin.collections.ArraysKt___ArraysKt$asList$8",
       "kotlin.collections.ArraysKt___ArraysKt$asList$5",
       "kotlin.collections.ArraysKt___ArraysKt$asList$6",
       "kotlin.text.StringsKt__StringsKt",
       "kotlin.collections.ArraysKt___ArraysKt$asList$3",
       "kotlin.collections.ArraysKt___ArraysKt$asList$4",
       "kotlin.collections.ArraysKt___ArraysKt$asList$1",
       "kotlin.collections.ArraysKt___ArraysKt$asList$2",
       "kotlin.reflect.KProperty2",
       "kotlin.reflect.KTypeParameter",
       "kotlin.jvm.functions.Function3",
       "kotlin.jvm.functions.Function4",
       "kotlin.jvm.functions.Function1",
       "kotlin.jvm.functions.Function2",
       "kotlin.jvm.functions.Function0",
       "kotlin.io.FilesKt__FileReadWriteKt",
       "kotlin.jvm.functions.Function9",
       "kotlin.collections.AbstractSet$Companion",
       "kotlin.jvm.functions.Function7",
       "kotlin.jvm.functions.Function8",
       "kotlin.jvm.functions.Function5",
       "kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1",
       "kotlin.jvm.functions.Function6",
       "kotlin.reflect.KProperty1",
       "kotlin.reflect.KProperty0",
       "kotlin.sequences.SequencesKt__SequencesKt",
       "kotlin.collections.CollectionsKt__MutableCollectionsKt",
       "kotlin.MathKt__BigIntegersKt",
       "kotlin.coroutines.experimental.CoroutineContext$Element",
       "kotlin.jvm.internal.ArrayByteIterator",
       "kotlin.collections.State",
       "kotlin.sequences.FilteringSequence",
       "kotlin.collections.ArrayAsCollection",
       "kotlin.sequences.FilteringSequence$iterator$1",
       "kotlin.text.MatcherMatchResult$groups$1",
       "kotlin.UNINITIALIZED_VALUE",
       "kotlin.jvm.internal.PropertyReference0Impl",
       "kotlin.jvm.internal.ShortCompanionObject",
       "kotlin.concurrent.LocksKt",
       "kotlin.jvm.internal.FunctionReference",
       "kotlin.ranges.ClosedRange$DefaultImpls",
       "kotlin.jvm.JvmName",
       "kotlin.jvm.internal.MutablePropertyReference2Impl",
       "kotlin.jvm.internal.ClassBasedDeclarationContainer",
       "kotlin.jvm.internal.CallableReference",
       "kotlin.coroutines.experimental.jvm.internal.CoroutineImpl",
       "kotlin.jvm.internal.Ref$ByteRef",
       "kotlin.collections.CollectionsKt__ReversedViewsKt",
       "kotlin.Triple",
       "kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls",
       "kotlin.io.FilesKt__UtilsKt",
       "kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState",
       "kotlin.LazyKt",
       "kotlin.reflect.KMutableProperty2",
       "kotlin.reflect.KMutableProperty1",
       "kotlin.reflect.KMutableProperty0",
       "kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1",
       "kotlin.sequences.SubSequence$iterator$1",
       "kotlin.collections.EmptyIterator",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsLast$1",
       "kotlin.UnsafeLazyImpl",
       "kotlin.concurrent.TimersKt$timerTask$1",
       "kotlin.sequences.TransformingSequence",
       "kotlin.io.FileTreeWalk$DirectoryState",
       "kotlin.Pair",
       "kotlin.sequences.SequencesKt___SequencesKt$minus$1",
       "kotlin.ranges.LongProgression",
       "kotlin.collections.AbstractMutableSet",
       "kotlin.sequences.SequencesKt___SequencesKt$minus$3",
       "kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1",
       "kotlin.text.StringsKt__IndentKt$prependIndent$1",
       "kotlin.coroutines.experimental.SequenceBuilder",
       "kotlin.sequences.SequencesKt___SequencesKt$minus$2",
       "kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2",
       "kotlin.sequences.SequencesKt___SequencesKt$minus$4",
       "kotlin.text.Regex",
       "kotlin.jvm.internal.CallableReference$NoReceiver",
       "kotlin.jvm.internal.markers.KMutableSet",
       "kotlin.jvm.internal.ArrayBooleanIterator",
       "kotlin.MathKt__NumbersKt",
       "kotlin.io.FilesKt__UtilsKt$copyRecursively$2",
       "kotlin.io.FilesKt__UtilsKt$copyRecursively$1",
       "kotlin.jvm.internal.TypeIntrinsics",
       "kotlin.jvm.internal.MutablePropertyReference0Impl",
       "kotlin.collections.CollectionsKt__IterablesKt",
       "kotlin.MathKt__BigDecimalsKt",
       "kotlin.text.RegexKt",
       "kotlin.sequences.SequencesKt___SequencesKt$distinct$1",
       "kotlin.collections.AbstractMap$keys$1$iterator$1",
       "kotlin.annotation.Repeatable",
       "kotlin.io.FileWalkDirection",
       "kotlin.jvm.internal.ArrayDoubleIterator",
       "kotlin.properties.Delegates$vetoable$1",
       "kotlin.text.StringsKt__StringNumberConversionsKt",
       "kotlin.sequences.TransformingSequence$iterator$1",
       "kotlin.text.StringsKt___StringsKt$withIndex$1",
       "kotlin.collections.AbstractList$ListIteratorImpl",
       "kotlin.sequences.TakeWhileSequence",
       "kotlin.properties.ObservableProperty",
       "kotlin.annotation.Retention",
       "kotlin.collections.AbstractMap$Companion",
       "kotlin.jvm.internal.ArrayIntIterator",
       "kotlin.ranges.RangesKt__RangesKt",
       "kotlin.sequences.MergingSequence",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1",
       "kotlin.reflect.KTypeProjection$Companion",
       "kotlin.collections.SlidingWindowKt$windowedIterator$1",
       "kotlin.PreconditionsKt__PreconditionsKt",
       "kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenDescending$1",
       "kotlin.collections.CollectionsKt__IteratorsKt$iterator$1",
       "kotlin.coroutines.experimental.SafeContinuation$Fail",
       "kotlin.jvm.internal.PropertyReference1Impl",
       "kotlin.sequences.TakeSequence$iterator$1",
       "kotlin.text.MatchResult$DefaultImpls",
       "kotlin.jvm.internal.FloatSpreadBuilder",
       "kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1",
       "kotlin.jvm.JvmStatic",
       "kotlin.SafePublicationLazyImpl",
       "kotlin._Assertions",
       "kotlin.internal.ContractsDsl",
       "kotlin.text.MatcherMatchResult$groups$1$iterator$1",
       "kotlin.ranges.IntProgression",
       "kotlin.collections.AbstractMap",
       "kotlin.io.LinesSequence$iterator$1",
       "kotlin.jvm.internal.FunctionImpl",
       "kotlin.sequences.GeneratorSequence$iterator$1",
       "kotlin.sequences.SequencesKt__SequencesKt$Sequence$1",
       "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3",
       "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2",
       "kotlin.ranges.CharProgression$Companion",
       "kotlin.jvm.internal.ArrayLongIterator",
       "kotlin.concurrent.TimersKt",
       "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5",
       "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4",
       "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7",
       "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6",
       "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9",
       "kotlin.sequences.IndexingSequence",
       "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8",
       "kotlin.jvm.Synchronized",
       "kotlin.jvm.internal.MutablePropertyReference1Impl",
       "kotlin.io.OnErrorAction",
       "kotlin.jvm.internal.ByteSpreadBuilder",
       "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1",
       "kotlin.text.CharDirectionality$Companion",
       "kotlin.collections.AbstractMutableCollection",
       "kotlin.internal.PlatformImplementationsKt",
       "kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1",
       "kotlin.collections.GroupingKt",
       "kotlin.coroutines.experimental.intrinsics.IntrinsicsJvmKt",
       "kotlin.collections.MapWithDefaultImpl",
       "kotlin.ranges.ClosedDoubleRange",
       "kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1",
       "kotlin.jvm.JvmClassMappingKt",
       "kotlin.io.FilesKt__FileTreeWalkKt",
       "kotlin.internal.contracts.SimpleEffect",
       "kotlin.sequences.SequencesKt___SequencesKt$zip$1",
       "kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1",
       "kotlin.collections.MapsKt__MapsJVMKt",
       "kotlin.jvm.internal.markers.KMappedMarker",
       "kotlin.ranges.ClosedRange",
       "kotlin.Deprecated",
       "kotlin.jvm.internal.FunctionBase",
       "kotlin.reflect.KMutableProperty0$Setter",
       "kotlin.jvm.internal.Reflection",
       "kotlin.text.MatchResult",
       "kotlin.collections.AbstractMap$toString$1",
       "kotlin.jvm.Transient",
       "kotlin.text.CharCategory",
       "kotlin.jvm.internal.IntSpreadBuilder",
       "kotlin.ranges.ClosedFloatingPointRange",
       "kotlin.sequences.DistinctSequence",
       "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9",
       "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8",
       "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7",
       "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6",
       "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5",
       "kotlin.io.FilesKt__FileReadWriteKt$readLines$1",
       "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4",
       "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3",
       "kotlin.jvm.internal.unsafe.MonitorKt",
       "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2",
       "kotlin.io.ByteStreamsKt$iterator$1",
       "kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1",
       "kotlin.collections.AbstractCollection$toString$1",
       "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1",
       "kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$2",
       "kotlin.text.MatchResult$Destructured",
       "kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt",
       "kotlin.concurrent.ThreadsKt",
       "kotlin.collections.IntIterator",
       "kotlin.collections.MutableMapWithDefault",
       "kotlin.collections.DoubleIterator",
       "kotlin.jvm.internal.ArrayShortIterator",
       "kotlin.comparisons.ReversedComparator",
       "kotlin.text.DelimitedRangesSequence",
       "kotlin.reflect.KVisibility",
       "kotlin.internal.contracts.ContractBuilderKt",
       "kotlin.text.StringsKt__RegexExtensionsKt",
       "kotlin.collections.LongIterator",
       "kotlin.ranges.RangesKt",
       "kotlin.properties.ReadOnlyProperty",
       "kotlin.Function",
       "kotlin.internal.Exact",
       "kotlin.concurrent.ThreadsKt$thread$thread$1",
       "kotlin.TypeCastException",
       "kotlin.io.FileTreeWalk$WalkState",
       "kotlin.collections.ArraysKt___ArraysKt",
       "kotlin.collections.IndexingIterator",
       "kotlin.collections.IndexingIterable",
       "kotlin.Lazy",
       "kotlin.coroutines.experimental.CoroutineContext",
       "kotlin.text.MatchGroup",
       "kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls",
       "kotlin.internal.RequireKotlin",
       "kotlin.collections.ReversedListReadOnly",
       "kotlin.DeprecationLevel",
       "kotlin.reflect.KFunction$DefaultImpls",
       "kotlin.jvm.internal.Ref$DoubleRef",
       "kotlin.jvm.internal.ByteCompanionObject",
       "kotlin.collections.TypeAliasesKt",
       "kotlin.jvm.internal.Lambda",
       "kotlin.jvm.KotlinReflectionNotSupportedError",
       "kotlin.jvm.PurelyImplements",
       "kotlin.io.ExceptionsKt",
       "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$1",
       "kotlin.sequences.SequencesKt",
       "kotlin.coroutines.experimental.RestrictsSuspension",
       "kotlin.jvm.JvmVersion",
       "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$2",
       "kotlin.jvm.internal.markers.KMutableMap",
       "kotlin.ranges.IntProgression$Companion",
       "kotlin.collections.MutableMapWithDefaultImpl",
       "kotlin.jvm.JvmWildcard",
       "kotlin.reflect.KClass$DefaultImpls",
       "kotlin.jvm.internal.CharCompanionObject",
       "kotlin.comparisons.ReverseOrderComparator",
       "kotlin.internal.PlatformDependent",
       "kotlin.sequences.TakeWhileSequence$iterator$1",
       "kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState",
       "kotlin.text.DelimitedRangesSequence$iterator$1",
       "kotlin.ranges.ComparableRange",
       "kotlin.collections.SetsKt___SetsKt",
       "kotlin.reflect.KParameter$DefaultImpls",
       "kotlin.text.Regex$findAll$2",
       "kotlin.jvm.internal.CharSpreadBuilder",
       "kotlin.text.Regex$findAll$1",
       "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt",
       "kotlin.MathKt",
       "kotlin.LazyKt$WhenMappings",
       "kotlin.ranges.IntProgressionIterator",
       "kotlin.collections.AbstractMap$values$1$iterator$1",
       "kotlin.collections.EmptyMap",
       "kotlin.collections.AbstractList$IteratorImpl",
       "kotlin.text.CharDirectionality$Companion$directionalityMap$2",
       "kotlin.ranges.CharProgressionIterator",
       "kotlin.ranges.LongRange$Companion",
       "kotlin.jvm.internal.FunctionReferenceImpl",
       "kotlin.coroutines.experimental.ContinuationInterceptor",
       "kotlin.StandardKt__StandardKt",
       "kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1",
       "kotlin.coroutines.experimental.Continuation",
       "kotlin.reflect.KProperty2$Getter",
       "kotlin.text.Charsets",
       "kotlin.text.Regex$Companion",
       "kotlin.coroutines.experimental.SequenceBuilderIterator",
       "kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2",
       "kotlin.collections.AbstractSet",
       "kotlin.io.TextStreamsKt$readLines$1",
       "kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4",
       "kotlin.collections.MapsKt__MapsKt",
       "kotlin.internal.contracts.ContractBuilder",
       "kotlin.jvm.internal.DoubleCompanionObject",
       "kotlin.collections.CollectionsKt__IteratorsKt",
       "kotlin.collections.CollectionsKt__IterablesKt$Iterable$1",
       "kotlin.text.TypeAliasesKt",
       "kotlin.collections.EmptyList",
       "kotlin.ranges.LongRange",
       "kotlin.io.CloseableKt",
       "kotlin.sequences.SequencesKt___SequencesKt$flatMap$1",
       "kotlin.ranges.RangesKt___RangesKt",
       "kotlin.reflect.KParameter",
       "kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1",
       "kotlin.ranges.LongProgression$Companion",
       "kotlin.internal.RequireKotlinVersionKind",
       "kotlin.ranges.IntRange$Companion",
       "kotlin.comparisons.ComparisonsKt___ComparisonsKt",
       "kotlin.jvm.internal.ArrayCharIterator",
       "kotlin.jvm.internal.LocalVariableReferencesKt",
       "kotlin.text.StringsKt___StringsKt$groupingBy$1",
       "kotlin.text.Regex$Serialized$Companion",
       "kotlin.collections.MapsKt",
       "kotlin.text.StringsKt___StringsKt",
       "kotlin.collections.ArraysKt___ArraysKt$withIndex$2",
       "kotlin.collections.ArraysKt___ArraysKt$withIndex$1",
       "kotlin.io.ConstantsKt",
       "kotlin.jvm.internal.InlineMarker",
       "kotlin.reflect.KMutableProperty1$Setter",
       "kotlin.collections.ArraysKt___ArraysKt$withIndex$6",
       "kotlin.collections.ArraysKt___ArraysKt$withIndex$5",
       "kotlin.io.TextStreamsKt",
       "kotlin.internal.contracts.ContractBuilder$DefaultImpls",
       "kotlin.collections.ArraysKt___ArraysKt$withIndex$4",
       "kotlin.collections.ArraysKt___ArraysKt$withIndex$3",
       "kotlin.annotation.Target",
       "kotlin.sequences.DropTakeSequence",
       "kotlin.PreconditionsKt__AssertionsJVMKt",
       "kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1",
       "kotlin.collections.ArraysKt___ArraysKt$withIndex$9",
       "kotlin.collections.ArraysKt___ArraysKt$withIndex$8",
       "kotlin.collections.ArraysKt___ArraysKt$withIndex$7",
       "kotlin.collections.ByteIterator",
       "kotlin.internal.contracts.Effect",
       "kotlin.jvm.internal.SpreadBuilder",
       "kotlin.jvm.internal.FloatCompanionObject",
       "kotlin.collections.CharIterator",
       "kotlin.jvm.internal.Ref$IntRef",
       "kotlin.text.Regex$fromInt$$inlined$apply$lambda$1",
       "kotlin.reflect.KProperty$DefaultImpls",
       "kotlin.jvm.internal.Ref",
       "kotlin.sequences.DropWhileSequence",
       "kotlin.jvm.internal.Intrinsics",
       "kotlin.jvm.internal.BooleanSpreadBuilder",
       "kotlin.text.StringsKt__StringsJVMKt",
       "kotlin.SafePublicationLazyImpl$Companion",
       "kotlin.jvm.JvmPackageName",
       "kotlin.coroutines.experimental.CombinedContext$toString$1",
       "kotlin.sequences.FlatteningSequence$iterator$1",
       "kotlin.coroutines.experimental.CoroutineContext$Key",
       "kotlin.jvm.internal.markers.KMutableListIterator",
       "kotlin.sequences.TransformingIndexedSequence$iterator$1",
       "kotlin.sequences.TransformingIndexedSequence",
       "kotlin.sequences.DropSequence$iterator$1",
       "kotlin.jvm.internal.ArrayIteratorKt",
       "kotlin.reflect.KProperty$Accessor",
       "kotlin.jvm.internal.ShortSpreadBuilder",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt",
       "kotlin.experimental.BitwiseOperationsKt",
       "kotlin.UnsafeVariance",
       "kotlin.properties.Delegates$observable$1",
       "kotlin.text.CharCategory$Companion$categoryMap$2",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3",
       "kotlin.internal.PureReifiable",
       "kotlin.text.StringsKt___StringsKt$windowedSequence$1",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2",
       "kotlin.text.StringsKt___StringsKt$windowedSequence$2",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1",
       "kotlin.collections.BooleanIterator",
       "kotlin.properties.NotNullVar",
       "kotlin.jvm.internal.markers.KMutableCollection",
       "kotlin.coroutines.experimental.CoroutineContext$DefaultImpls",
       "kotlin.collections.AbstractMutableList",
       "kotlin.jvm.internal.LocalVariableReference",
       "kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2",
       "kotlin.coroutines.experimental.EmptyCoroutineContext",
       "kotlin.ExceptionsKt__ExceptionsKt",
       "kotlin.NotImplementedError",
       "kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1",
       "kotlin.sequences.FlatteningSequence",
       "kotlin.collections.MapWithDefault",
       "kotlin.reflect.KProperty1$Getter",
       "kotlin.ranges.ClosedFloatRange",
       "kotlin.collections.MapAccessorsKt",
       "kotlin.Metadata",
       "kotlin.sequences.TakeSequence",
       "kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1",
       "kotlin.collections.AbstractList$Companion",
       "kotlin.text.RegexOption",
       "kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1",
       "kotlin.collections.ArraysKt__ArraysJVMKt",
       "kotlin.io.FilesKt",
       "kotlin.math.MathKt",
       "kotlin.reflect.KProperty",
       "kotlin.internal.contracts.Returns",
       "kotlin.internal.contracts.ReturnsNotNull",
       "kotlin.comparisons.NaturalOrderComparator",
       "kotlin.StandardKt",
       "kotlin.reflect.KCallable",
       "kotlin.jvm.Volatile",
       "kotlin.io.ConsoleKt$stdin$2$1",
       "kotlin.ranges.IntRange",
       "kotlin.text.FlagEnum",
       "kotlin.annotation.MustBeDocumented",
       "kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1",
       "kotlin.text.StringsKt___StringsKt$chunkedSequence$1",
       "kotlin.sequences.Sequence",
       "kotlin.text.Typography",
       "kotlin.internal.contracts.InvocationKind",
       "kotlin.text.CharsKt",
       "kotlin.jvm.internal.EnumCompanionObject",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2",
       "kotlin.jvm.internal.MutablePropertyReference2",
       "kotlin.jvm.internal.MutablePropertyReference1",
       "kotlin.collections.MapsKt__MapWithDefaultKt",
       "kotlin.jvm.internal.MutablePropertyReference0",
       "kotlin.jvm.internal.Ref$CharRef",
       "kotlin.collections.EmptySet",
       "kotlin.Suppress",
       "kotlin.text.MatchNamedGroupCollection",
       "kotlin.sequences.SequencesKt___SequencesKt",
       "kotlin.jvm.Throws",
       "kotlin.text.StringsKt__StringBuilderKt",
       "kotlin.io.TerminateException",
       "kotlin.collections.AbstractMap$keys$1",
       "kotlin.jvm.internal.DoubleSpreadBuilder",
       "kotlin.text.StringsKt___StringsKt$windowed$1",
       "kotlin.text.StringsKt__StringsKt$iterator$1",
       "kotlin.sequences.DistinctIterator",
       "kotlin.jvm.functions.Function18",
       "kotlin.internal.PlatformImplementations",
       "kotlin.jvm.functions.Function19",
       "kotlin.collections.ArraysUtilJVM",
       "kotlin.ranges.CharRange",
       "kotlin.jvm.functions.Function14",
       "kotlin.jvm.functions.Function15",
       "kotlin.jvm.functions.Function16",
       "kotlin.jvm.functions.Function17",
       "kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1",
       "kotlin.text.CharDirectionality",
       "kotlin.collections.ArraysKt",
       "kotlin.jvm.functions.Function10",
       "kotlin.jvm.functions.Function11",
       "kotlin.io.NoSuchFileException",
       "kotlin.jvm.functions.Function12",
       "kotlin.jvm.functions.Function13",
       "kotlin.jvm.internal.Ref$LongRef",
       "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt$buildContinuationByInvokeCall$continuation$1",
       "kotlin.coroutines.experimental.ContinuationInterceptor$Key",
       "kotlin.jvm.internal.Ref$FloatRef",
       "kotlin.reflect.KClassifier",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1",
       "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2",
       "kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1",
       "kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2",
       "kotlin.jvm.internal.DefaultConstructorMarker",
       "kotlin.sequences.DropWhileSequence$iterator$1",
       "kotlin.jvm.internal.ReflectionFactory",
       "kotlin.sequences.SequencesKt___SequencesKt$sorted$1",
       "kotlin.jvm.internal.ArrayFloatIterator",
       "kotlin.internal.LowPriorityInOverloadResolution",
       "kotlin.jvm.internal.MagicApiIntrinsics",
       "kotlin.sequences.GeneratorSequence",
       "kotlin.collections.SetsKt__SetsKt",
       "kotlin.internal.ProgressionUtilKt",
       "kotlin.NoWhenBranchMatchedException",
       "kotlin.jvm.internal.ArrayIteratorsKt",
       "kotlin.ExceptionsKt",
       "kotlin.jvm.functions.Function21",
       "kotlin.jvm.functions.Function22",
       "kotlin.PublishedApi",
       "kotlin.sequences.EmptySequence",
       "kotlin.reflect.KMutableProperty2$Setter",
       "kotlin.jvm.functions.Function20",
       "kotlin.sequences.SequencesKt__SequencesKt$flatten$3",
       "kotlin.jvm.internal.markers.KMutableMap$Entry",
       "kotlin.collections.Grouping",
       "kotlin.sequences.SequencesKt__SequencesKt$flatten$1",
       "kotlin.text.CharCategory$Companion",
       "kotlin.reflect.KProperty$Getter",
       "kotlin.sequences.SequencesKt__SequencesKt$flatten$2"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "org.jetbrains:annotations:jar:13.0:compile",
        "coordinates": "org.jetbrains:annotations:13.0",
        "groupId": "org.jetbrains",
        "artifactId": "annotations",
        "version": "13.0",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 17536,
        "type": "transitive",
        "status": "bloated",
        "parent": "org.jetbrains.kotlin:kotlin-stdlib:jar:1.2.0:compile",
        "allTypes": [
         "org.intellij.lang.annotations.JdkConstants$CalendarMonth",
         "org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy",
         "org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment",
         "org.intellij.lang.annotations.JdkConstants$CursorType",
         "org.intellij.lang.annotations.JdkConstants$TitledBorderJustification",
         "org.jetbrains.annotations.NonNls",
         "org.intellij.lang.annotations.PrintFormatPattern",
         "org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis",
         "org.jetbrains.annotations.Nls",
         "org.intellij.lang.annotations.JdkConstants$PatternFlags",
         "org.intellij.lang.annotations.PrintFormat",
         "org.intellij.lang.annotations.JdkConstants$TabPlacement",
         "org.intellij.lang.annotations.JdkConstants$AdjustableOrientation",
         "org.intellij.lang.annotations.JdkConstants$HorizontalAlignment",
         "org.intellij.lang.annotations.Pattern",
         "org.jetbrains.annotations.PropertyKey",
         "org.intellij.lang.annotations.JdkConstants",
         "org.intellij.lang.annotations.Language",
         "org.intellij.lang.annotations.JdkConstants$InputEventMask",
         "org.intellij.lang.annotations.JdkConstants$TreeSelectionMode",
         "org.intellij.lang.annotations.Subst",
         "org.jetbrains.annotations.TestOnly",
         "org.intellij.lang.annotations.Flow",
         "org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition",
         "org.intellij.lang.annotations.MagicConstant",
         "org.jetbrains.annotations.Nullable",
         "org.jetbrains.annotations.Contract",
         "org.intellij.lang.annotations.Identifier",
         "org.intellij.lang.annotations.RegExp",
         "org.intellij.lang.annotations.JdkConstants$FontStyle",
         "org.intellij.lang.annotations.JdkConstants$ListSelectionMode",
         "org.jetbrains.annotations.NotNull"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     },
     {
      "id": "org.jetbrains.kotlin:kotlin-stdlib-jre7:jar:1.2.0:compile",
      "coordinates": "org.jetbrains.kotlin:kotlin-stdlib-jre7:1.2.0",
      "groupId": "org.jetbrains.kotlin",
      "artifactId": "kotlin-stdlib-jre7",
      "version": "1.2.0",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 2858,
      "type": "transitive",
      "status": "bloated",
      "parent": "org.jetbrains.kotlin:kotlin-stdlib-jre8:jar:1.2.0:compile",
      "allTypes": [
       "kotlin.AutoCloseableKt",
       "kotlin.internal.JRE7PlatformImplementations"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "org.jetbrains.kotlin:kotlin-stdlib:jar:1.2.0:compile",
        "coordinates": "org.jetbrains.kotlin:kotlin-stdlib:1.2.0",
        "groupId": "org.jetbrains.kotlin",
        "artifactId": "kotlin-stdlib",
        "version": "1.2.0",
        "scope": "compile",
        "packaging": "jar",
        "omitted": true,
        "size": 930811,
        "type": "transitive",
        "status": "bloated",
        "parent": "org.jetbrains.kotlin:kotlin-stdlib-jre7:jar:1.2.0:compile",
        "allTypes": [
         "kotlin.text.ScreenFloatValueRegEx",
         "kotlin.annotation.AnnotationRetention",
         "kotlin.text.StringsKt__IndentKt$getIndentFunction$1",
         "kotlin.internal.NoInfer",
         "kotlin.jvm.internal.markers.KMutableList",
         "kotlin.io.ConsoleKt",
         "kotlin.io.AccessDeniedException",
         "kotlin.KotlinVersion",
         "kotlin.KotlinVersion$Companion",
         "kotlin.coroutines.experimental.CoroutinesKt",
         "kotlin.reflect.KAnnotatedElement",
         "kotlin.coroutines.experimental.CombinedContext",
         "kotlin.jvm.internal.PropertyReference0",
         "kotlin.sequences.SequencesKt___SequencesKt$elementAt$1",
         "kotlin.jvm.internal.PropertyReference2",
         "kotlin.DslMarker",
         "kotlin.jvm.internal.PropertyReference1",
         "kotlin.reflect.KFunction",
         "kotlin.text.StringsKt__IndentKt$getIndentFunction$2",
         "kotlin.text.CharsKt__CharJVMKt",
         "kotlin.io.FileTreeWalk",
         "kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$then$1",
         "kotlin.io.FileSystemException",
         "kotlin.jvm.internal.Ref$BooleanRef",
         "kotlin.ranges.ClosedFloatingPointRange$DefaultImpls",
         "kotlin.reflect.KTypeProjection",
         "kotlin.system.TimingKt",
         "kotlin.jvm.internal.MutableLocalVariableReference",
         "kotlin.reflect.KProperty0$Getter",
         "kotlin.io.ConsoleKt$stdin$2",
         "kotlin.reflect.KMutableProperty$Setter",
         "kotlin.Unit",
         "kotlin.collections.SetsKt",
         "kotlin.jvm.internal.StringCompanionObject",
         "kotlin.sequences.IndexingSequence$iterator$1",
         "kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1",
         "kotlin.jvm.internal.PropertyReference2Impl",
         "kotlin.collections.AbstractMap$values$1",
         "kotlin.coroutines.experimental.SafeContinuation",
         "kotlin.collections.RingBuffer$iterator$1",
         "kotlin.text.SystemProperties",
         "kotlin.ArrayIntrinsicsKt",
         "kotlin.jvm.internal.PropertyReference",
         "kotlin.LazyThreadSafetyMode",
         "kotlin.text.CharsetsKt",
         "kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1",
         "kotlin.sequences.DropSequence",
         "kotlin.io.FileAlreadyExistsException",
         "kotlin.internal.contracts.CallsInPlace",
         "kotlin.collections.AbstractCollection",
         "kotlin.coroutines.experimental.CoroutineContext$plus$1",
         "kotlin.properties.Delegates",
         "kotlin.reflect.KParameter$Kind",
         "kotlin.jvm.internal.IntCompanionObject",
         "kotlin.internal.AccessibleLateinitPropertyLiteral",
         "kotlin.collections.ShortIterator",
         "kotlin.annotation.AnnotationTarget",
         "kotlin.reflect.KType$DefaultImpls",
         "kotlin.jvm.internal.LongCompanionObject",
         "kotlin.text.Regex$Serialized",
         "kotlin.text.StringsKt",
         "kotlin.collections.AbstractList$SubList",
         "kotlin.ranges.LongProgressionIterator",
         "kotlin.collections.ReversedList",
         "kotlin.jvm.internal.Ref$ShortRef",
         "kotlin.jvm.JvmSynthetic",
         "kotlin.io.FileTreeWalk$FileTreeWalkIterator",
         "kotlin.sequences.SubSequence",
         "kotlin.internal.InlineOnly",
         "kotlin.reflect.KType",
         "kotlin.collections.MapsKt___MapsKt",
         "kotlin.collections.ArraysKt__ArraysKt",
         "kotlin.internal.OnlyInputTypes",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsFirst$1",
         "kotlin.jvm.internal.LongSpreadBuilder",
         "kotlin.io.LinesSequence",
         "kotlin.io.FilePathComponents",
         "kotlin.collections.AbstractIterator",
         "kotlin.ranges.CharProgression",
         "kotlin.LateinitKt",
         "kotlin.ReplaceWith",
         "kotlin.text.StringsKt__StringBuilderJVMKt",
         "kotlin.collections.MovingSubList",
         "kotlin.collections.IndexedValue",
         "kotlin.text.MatcherMatchResult",
         "kotlin.collections.CollectionsKt__CollectionsKt",
         "kotlin.internal.DynamicExtension",
         "kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics",
         "kotlin.internal.contracts.ConditionalEffect",
         "kotlin.sequences.SequencesKt___SequencesKt$onEach$1",
         "kotlin.PreconditionsKt",
         "kotlin.sequences.ConstrainedOnceSequence",
         "kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1",
         "kotlin.io.FilesKt__FilePathComponentsKt",
         "kotlin.StandardKt__SynchronizedKt",
         "kotlin.ExtensionFunctionType",
         "kotlin.text.CharsKt__CharKt",
         "kotlin.reflect.KDeclarationContainer",
         "kotlin.jvm.internal.MutablePropertyReference",
         "kotlin.collections.FloatIterator",
         "kotlin.jvm.JvmOverloads",
         "kotlin.text.StringsKt__IndentKt",
         "kotlin.TypeAliasesKt",
         "kotlin.SynchronizedLazyImpl",
         "kotlin.jvm.internal.ArrayIterator",
         "kotlin.jvm.JvmSuppressWildcards",
         "kotlin.comparisons.ComparisonsKt",
         "kotlin.properties.ReadWriteProperty",
         "kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1",
         "kotlin.collections.CollectionsKt",
         "kotlin.internal.HidesMembers",
         "kotlin.ParameterName",
         "kotlin.collections.SlidingWindowKt",
         "kotlin.jvm.Strictfp",
         "kotlin.coroutines.experimental.AbstractCoroutineContextElement",
         "kotlin.collections.RingBuffer",
         "kotlin.collections.AbstractList",
         "kotlin.reflect.KClass",
         "kotlin.io.ByteStreamsKt",
         "kotlin.coroutines.experimental.SafeContinuation$Companion",
         "kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings",
         "kotlin.TuplesKt",
         "kotlin.io.SerializableKt",
         "kotlin.UninitializedPropertyAccessException",
         "kotlin.reflect.KVariance",
         "kotlin.text.StringsKt__StringsKt$splitToSequence$2",
         "kotlin.collections.ArraysKt___ArraysKt$groupingBy$1",
         "kotlin.jvm.internal.ClassReference",
         "kotlin.text.StringsKt__StringsKt$splitToSequence$1",
         "kotlin.coroutines.experimental.SequenceBuilderKt",
         "kotlin.sequences.MergingSequence$iterator$1",
         "kotlin.text.MatcherMatchResult$groupValues$1",
         "kotlin.jvm.internal.markers.KMutableIterator",
         "kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1",
         "kotlin.jvm.internal.markers.KMutableIterable",
         "kotlin.reflect.KMutableProperty",
         "kotlin.reflect.KCallable$DefaultImpls",
         "kotlin.jvm.JvmField",
         "kotlin.text.MatchGroupCollection",
         "kotlin.KotlinNullPointerException",
         "kotlin.jvm.JvmMultifileClass",
         "kotlin.collections.CollectionsKt___CollectionsKt",
         "kotlin.collections.AbstractMutableMap",
         "kotlin.ranges.CharRange$Companion",
         "kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1",
         "kotlin.SinceKotlin",
         "kotlin.InitializedLazyImpl",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1",
         "kotlin.collections.AbstractIterator$WhenMappings",
         "kotlin.jvm.internal.CollectionToArray",
         "kotlin.jvm.internal.PrimitiveSpreadBuilder",
         "kotlin.system.ProcessKt",
         "kotlin.jvm.internal.PackageReference",
         "kotlin.jvm.internal.Ref$ObjectRef",
         "kotlin.collections.ArraysKt___ArraysKt$asList$7",
         "kotlin.collections.ArraysKt___ArraysKt$asList$8",
         "kotlin.collections.ArraysKt___ArraysKt$asList$5",
         "kotlin.collections.ArraysKt___ArraysKt$asList$6",
         "kotlin.text.StringsKt__StringsKt",
         "kotlin.collections.ArraysKt___ArraysKt$asList$3",
         "kotlin.collections.ArraysKt___ArraysKt$asList$4",
         "kotlin.collections.ArraysKt___ArraysKt$asList$1",
         "kotlin.collections.ArraysKt___ArraysKt$asList$2",
         "kotlin.reflect.KProperty2",
         "kotlin.reflect.KTypeParameter",
         "kotlin.jvm.functions.Function3",
         "kotlin.jvm.functions.Function4",
         "kotlin.jvm.functions.Function1",
         "kotlin.jvm.functions.Function2",
         "kotlin.jvm.functions.Function0",
         "kotlin.io.FilesKt__FileReadWriteKt",
         "kotlin.jvm.functions.Function9",
         "kotlin.collections.AbstractSet$Companion",
         "kotlin.jvm.functions.Function7",
         "kotlin.jvm.functions.Function8",
         "kotlin.jvm.functions.Function5",
         "kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1",
         "kotlin.jvm.functions.Function6",
         "kotlin.reflect.KProperty1",
         "kotlin.reflect.KProperty0",
         "kotlin.sequences.SequencesKt__SequencesKt",
         "kotlin.collections.CollectionsKt__MutableCollectionsKt",
         "kotlin.MathKt__BigIntegersKt",
         "kotlin.coroutines.experimental.CoroutineContext$Element",
         "kotlin.jvm.internal.ArrayByteIterator",
         "kotlin.collections.State",
         "kotlin.sequences.FilteringSequence",
         "kotlin.collections.ArrayAsCollection",
         "kotlin.sequences.FilteringSequence$iterator$1",
         "kotlin.text.MatcherMatchResult$groups$1",
         "kotlin.UNINITIALIZED_VALUE",
         "kotlin.jvm.internal.PropertyReference0Impl",
         "kotlin.jvm.internal.ShortCompanionObject",
         "kotlin.concurrent.LocksKt",
         "kotlin.jvm.internal.FunctionReference",
         "kotlin.ranges.ClosedRange$DefaultImpls",
         "kotlin.jvm.JvmName",
         "kotlin.jvm.internal.MutablePropertyReference2Impl",
         "kotlin.jvm.internal.ClassBasedDeclarationContainer",
         "kotlin.jvm.internal.CallableReference",
         "kotlin.coroutines.experimental.jvm.internal.CoroutineImpl",
         "kotlin.jvm.internal.Ref$ByteRef",
         "kotlin.collections.CollectionsKt__ReversedViewsKt",
         "kotlin.Triple",
         "kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls",
         "kotlin.io.FilesKt__UtilsKt",
         "kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState",
         "kotlin.LazyKt",
         "kotlin.reflect.KMutableProperty2",
         "kotlin.reflect.KMutableProperty1",
         "kotlin.reflect.KMutableProperty0",
         "kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1",
         "kotlin.sequences.SubSequence$iterator$1",
         "kotlin.collections.EmptyIterator",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsLast$1",
         "kotlin.UnsafeLazyImpl",
         "kotlin.concurrent.TimersKt$timerTask$1",
         "kotlin.sequences.TransformingSequence",
         "kotlin.io.FileTreeWalk$DirectoryState",
         "kotlin.Pair",
         "kotlin.sequences.SequencesKt___SequencesKt$minus$1",
         "kotlin.ranges.LongProgression",
         "kotlin.collections.AbstractMutableSet",
         "kotlin.sequences.SequencesKt___SequencesKt$minus$3",
         "kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1",
         "kotlin.text.StringsKt__IndentKt$prependIndent$1",
         "kotlin.coroutines.experimental.SequenceBuilder",
         "kotlin.sequences.SequencesKt___SequencesKt$minus$2",
         "kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2",
         "kotlin.sequences.SequencesKt___SequencesKt$minus$4",
         "kotlin.text.Regex",
         "kotlin.jvm.internal.CallableReference$NoReceiver",
         "kotlin.jvm.internal.markers.KMutableSet",
         "kotlin.jvm.internal.ArrayBooleanIterator",
         "kotlin.MathKt__NumbersKt",
         "kotlin.io.FilesKt__UtilsKt$copyRecursively$2",
         "kotlin.io.FilesKt__UtilsKt$copyRecursively$1",
         "kotlin.jvm.internal.TypeIntrinsics",
         "kotlin.jvm.internal.MutablePropertyReference0Impl",
         "kotlin.collections.CollectionsKt__IterablesKt",
         "kotlin.MathKt__BigDecimalsKt",
         "kotlin.text.RegexKt",
         "kotlin.sequences.SequencesKt___SequencesKt$distinct$1",
         "kotlin.collections.AbstractMap$keys$1$iterator$1",
         "kotlin.annotation.Repeatable",
         "kotlin.io.FileWalkDirection",
         "kotlin.jvm.internal.ArrayDoubleIterator",
         "kotlin.properties.Delegates$vetoable$1",
         "kotlin.text.StringsKt__StringNumberConversionsKt",
         "kotlin.sequences.TransformingSequence$iterator$1",
         "kotlin.text.StringsKt___StringsKt$withIndex$1",
         "kotlin.collections.AbstractList$ListIteratorImpl",
         "kotlin.sequences.TakeWhileSequence",
         "kotlin.properties.ObservableProperty",
         "kotlin.annotation.Retention",
         "kotlin.collections.AbstractMap$Companion",
         "kotlin.jvm.internal.ArrayIntIterator",
         "kotlin.ranges.RangesKt__RangesKt",
         "kotlin.sequences.MergingSequence",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1",
         "kotlin.reflect.KTypeProjection$Companion",
         "kotlin.collections.SlidingWindowKt$windowedIterator$1",
         "kotlin.PreconditionsKt__PreconditionsKt",
         "kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenDescending$1",
         "kotlin.collections.CollectionsKt__IteratorsKt$iterator$1",
         "kotlin.coroutines.experimental.SafeContinuation$Fail",
         "kotlin.jvm.internal.PropertyReference1Impl",
         "kotlin.sequences.TakeSequence$iterator$1",
         "kotlin.text.MatchResult$DefaultImpls",
         "kotlin.jvm.internal.FloatSpreadBuilder",
         "kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1",
         "kotlin.jvm.JvmStatic",
         "kotlin.SafePublicationLazyImpl",
         "kotlin._Assertions",
         "kotlin.internal.ContractsDsl",
         "kotlin.text.MatcherMatchResult$groups$1$iterator$1",
         "kotlin.ranges.IntProgression",
         "kotlin.collections.AbstractMap",
         "kotlin.io.LinesSequence$iterator$1",
         "kotlin.jvm.internal.FunctionImpl",
         "kotlin.sequences.GeneratorSequence$iterator$1",
         "kotlin.sequences.SequencesKt__SequencesKt$Sequence$1",
         "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3",
         "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2",
         "kotlin.ranges.CharProgression$Companion",
         "kotlin.jvm.internal.ArrayLongIterator",
         "kotlin.concurrent.TimersKt",
         "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5",
         "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4",
         "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7",
         "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6",
         "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9",
         "kotlin.sequences.IndexingSequence",
         "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8",
         "kotlin.jvm.Synchronized",
         "kotlin.jvm.internal.MutablePropertyReference1Impl",
         "kotlin.io.OnErrorAction",
         "kotlin.jvm.internal.ByteSpreadBuilder",
         "kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1",
         "kotlin.text.CharDirectionality$Companion",
         "kotlin.collections.AbstractMutableCollection",
         "kotlin.internal.PlatformImplementationsKt",
         "kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1",
         "kotlin.collections.GroupingKt",
         "kotlin.coroutines.experimental.intrinsics.IntrinsicsJvmKt",
         "kotlin.collections.MapWithDefaultImpl",
         "kotlin.ranges.ClosedDoubleRange",
         "kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1",
         "kotlin.jvm.JvmClassMappingKt",
         "kotlin.io.FilesKt__FileTreeWalkKt",
         "kotlin.internal.contracts.SimpleEffect",
         "kotlin.sequences.SequencesKt___SequencesKt$zip$1",
         "kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1",
         "kotlin.collections.MapsKt__MapsJVMKt",
         "kotlin.jvm.internal.markers.KMappedMarker",
         "kotlin.ranges.ClosedRange",
         "kotlin.Deprecated",
         "kotlin.jvm.internal.FunctionBase",
         "kotlin.reflect.KMutableProperty0$Setter",
         "kotlin.jvm.internal.Reflection",
         "kotlin.text.MatchResult",
         "kotlin.collections.AbstractMap$toString$1",
         "kotlin.jvm.Transient",
         "kotlin.text.CharCategory",
         "kotlin.jvm.internal.IntSpreadBuilder",
         "kotlin.ranges.ClosedFloatingPointRange",
         "kotlin.sequences.DistinctSequence",
         "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9",
         "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8",
         "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7",
         "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6",
         "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5",
         "kotlin.io.FilesKt__FileReadWriteKt$readLines$1",
         "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4",
         "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3",
         "kotlin.jvm.internal.unsafe.MonitorKt",
         "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2",
         "kotlin.io.ByteStreamsKt$iterator$1",
         "kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1",
         "kotlin.collections.AbstractCollection$toString$1",
         "kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1",
         "kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$2",
         "kotlin.text.MatchResult$Destructured",
         "kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt",
         "kotlin.concurrent.ThreadsKt",
         "kotlin.collections.IntIterator",
         "kotlin.collections.MutableMapWithDefault",
         "kotlin.collections.DoubleIterator",
         "kotlin.jvm.internal.ArrayShortIterator",
         "kotlin.comparisons.ReversedComparator",
         "kotlin.text.DelimitedRangesSequence",
         "kotlin.reflect.KVisibility",
         "kotlin.internal.contracts.ContractBuilderKt",
         "kotlin.text.StringsKt__RegexExtensionsKt",
         "kotlin.collections.LongIterator",
         "kotlin.ranges.RangesKt",
         "kotlin.properties.ReadOnlyProperty",
         "kotlin.Function",
         "kotlin.internal.Exact",
         "kotlin.concurrent.ThreadsKt$thread$thread$1",
         "kotlin.TypeCastException",
         "kotlin.io.FileTreeWalk$WalkState",
         "kotlin.collections.ArraysKt___ArraysKt",
         "kotlin.collections.IndexingIterator",
         "kotlin.collections.IndexingIterable",
         "kotlin.Lazy",
         "kotlin.coroutines.experimental.CoroutineContext",
         "kotlin.text.MatchGroup",
         "kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls",
         "kotlin.internal.RequireKotlin",
         "kotlin.collections.ReversedListReadOnly",
         "kotlin.DeprecationLevel",
         "kotlin.reflect.KFunction$DefaultImpls",
         "kotlin.jvm.internal.Ref$DoubleRef",
         "kotlin.jvm.internal.ByteCompanionObject",
         "kotlin.collections.TypeAliasesKt",
         "kotlin.jvm.internal.Lambda",
         "kotlin.jvm.KotlinReflectionNotSupportedError",
         "kotlin.jvm.PurelyImplements",
         "kotlin.io.ExceptionsKt",
         "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$1",
         "kotlin.sequences.SequencesKt",
         "kotlin.coroutines.experimental.RestrictsSuspension",
         "kotlin.jvm.JvmVersion",
         "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$2",
         "kotlin.jvm.internal.markers.KMutableMap",
         "kotlin.ranges.IntProgression$Companion",
         "kotlin.collections.MutableMapWithDefaultImpl",
         "kotlin.jvm.JvmWildcard",
         "kotlin.reflect.KClass$DefaultImpls",
         "kotlin.jvm.internal.CharCompanionObject",
         "kotlin.comparisons.ReverseOrderComparator",
         "kotlin.internal.PlatformDependent",
         "kotlin.sequences.TakeWhileSequence$iterator$1",
         "kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState",
         "kotlin.text.DelimitedRangesSequence$iterator$1",
         "kotlin.ranges.ComparableRange",
         "kotlin.collections.SetsKt___SetsKt",
         "kotlin.reflect.KParameter$DefaultImpls",
         "kotlin.text.Regex$findAll$2",
         "kotlin.jvm.internal.CharSpreadBuilder",
         "kotlin.text.Regex$findAll$1",
         "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt",
         "kotlin.MathKt",
         "kotlin.LazyKt$WhenMappings",
         "kotlin.ranges.IntProgressionIterator",
         "kotlin.collections.AbstractMap$values$1$iterator$1",
         "kotlin.collections.EmptyMap",
         "kotlin.collections.AbstractList$IteratorImpl",
         "kotlin.text.CharDirectionality$Companion$directionalityMap$2",
         "kotlin.ranges.CharProgressionIterator",
         "kotlin.ranges.LongRange$Companion",
         "kotlin.jvm.internal.FunctionReferenceImpl",
         "kotlin.coroutines.experimental.ContinuationInterceptor",
         "kotlin.StandardKt__StandardKt",
         "kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1",
         "kotlin.coroutines.experimental.Continuation",
         "kotlin.reflect.KProperty2$Getter",
         "kotlin.text.Charsets",
         "kotlin.text.Regex$Companion",
         "kotlin.coroutines.experimental.SequenceBuilderIterator",
         "kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2",
         "kotlin.collections.AbstractSet",
         "kotlin.io.TextStreamsKt$readLines$1",
         "kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4",
         "kotlin.collections.MapsKt__MapsKt",
         "kotlin.internal.contracts.ContractBuilder",
         "kotlin.jvm.internal.DoubleCompanionObject",
         "kotlin.collections.CollectionsKt__IteratorsKt",
         "kotlin.collections.CollectionsKt__IterablesKt$Iterable$1",
         "kotlin.text.TypeAliasesKt",
         "kotlin.collections.EmptyList",
         "kotlin.ranges.LongRange",
         "kotlin.io.CloseableKt",
         "kotlin.sequences.SequencesKt___SequencesKt$flatMap$1",
         "kotlin.ranges.RangesKt___RangesKt",
         "kotlin.reflect.KParameter",
         "kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1",
         "kotlin.ranges.LongProgression$Companion",
         "kotlin.internal.RequireKotlinVersionKind",
         "kotlin.ranges.IntRange$Companion",
         "kotlin.comparisons.ComparisonsKt___ComparisonsKt",
         "kotlin.jvm.internal.ArrayCharIterator",
         "kotlin.jvm.internal.LocalVariableReferencesKt",
         "kotlin.text.StringsKt___StringsKt$groupingBy$1",
         "kotlin.text.Regex$Serialized$Companion",
         "kotlin.collections.MapsKt",
         "kotlin.text.StringsKt___StringsKt",
         "kotlin.collections.ArraysKt___ArraysKt$withIndex$2",
         "kotlin.collections.ArraysKt___ArraysKt$withIndex$1",
         "kotlin.io.ConstantsKt",
         "kotlin.jvm.internal.InlineMarker",
         "kotlin.reflect.KMutableProperty1$Setter",
         "kotlin.collections.ArraysKt___ArraysKt$withIndex$6",
         "kotlin.collections.ArraysKt___ArraysKt$withIndex$5",
         "kotlin.io.TextStreamsKt",
         "kotlin.internal.contracts.ContractBuilder$DefaultImpls",
         "kotlin.collections.ArraysKt___ArraysKt$withIndex$4",
         "kotlin.collections.ArraysKt___ArraysKt$withIndex$3",
         "kotlin.annotation.Target",
         "kotlin.sequences.DropTakeSequence",
         "kotlin.PreconditionsKt__AssertionsJVMKt",
         "kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1",
         "kotlin.collections.ArraysKt___ArraysKt$withIndex$9",
         "kotlin.collections.ArraysKt___ArraysKt$withIndex$8",
         "kotlin.collections.ArraysKt___ArraysKt$withIndex$7",
         "kotlin.collections.ByteIterator",
         "kotlin.internal.contracts.Effect",
         "kotlin.jvm.internal.SpreadBuilder",
         "kotlin.jvm.internal.FloatCompanionObject",
         "kotlin.collections.CharIterator",
         "kotlin.jvm.internal.Ref$IntRef",
         "kotlin.text.Regex$fromInt$$inlined$apply$lambda$1",
         "kotlin.reflect.KProperty$DefaultImpls",
         "kotlin.jvm.internal.Ref",
         "kotlin.sequences.DropWhileSequence",
         "kotlin.jvm.internal.Intrinsics",
         "kotlin.jvm.internal.BooleanSpreadBuilder",
         "kotlin.text.StringsKt__StringsJVMKt",
         "kotlin.SafePublicationLazyImpl$Companion",
         "kotlin.jvm.JvmPackageName",
         "kotlin.coroutines.experimental.CombinedContext$toString$1",
         "kotlin.sequences.FlatteningSequence$iterator$1",
         "kotlin.coroutines.experimental.CoroutineContext$Key",
         "kotlin.jvm.internal.markers.KMutableListIterator",
         "kotlin.sequences.TransformingIndexedSequence$iterator$1",
         "kotlin.sequences.TransformingIndexedSequence",
         "kotlin.sequences.DropSequence$iterator$1",
         "kotlin.jvm.internal.ArrayIteratorKt",
         "kotlin.reflect.KProperty$Accessor",
         "kotlin.jvm.internal.ShortSpreadBuilder",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt",
         "kotlin.experimental.BitwiseOperationsKt",
         "kotlin.UnsafeVariance",
         "kotlin.properties.Delegates$observable$1",
         "kotlin.text.CharCategory$Companion$categoryMap$2",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3",
         "kotlin.internal.PureReifiable",
         "kotlin.text.StringsKt___StringsKt$windowedSequence$1",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2",
         "kotlin.text.StringsKt___StringsKt$windowedSequence$2",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1",
         "kotlin.collections.BooleanIterator",
         "kotlin.properties.NotNullVar",
         "kotlin.jvm.internal.markers.KMutableCollection",
         "kotlin.coroutines.experimental.CoroutineContext$DefaultImpls",
         "kotlin.collections.AbstractMutableList",
         "kotlin.jvm.internal.LocalVariableReference",
         "kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2",
         "kotlin.coroutines.experimental.EmptyCoroutineContext",
         "kotlin.ExceptionsKt__ExceptionsKt",
         "kotlin.NotImplementedError",
         "kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1",
         "kotlin.sequences.FlatteningSequence",
         "kotlin.collections.MapWithDefault",
         "kotlin.reflect.KProperty1$Getter",
         "kotlin.ranges.ClosedFloatRange",
         "kotlin.collections.MapAccessorsKt",
         "kotlin.Metadata",
         "kotlin.sequences.TakeSequence",
         "kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1",
         "kotlin.collections.AbstractList$Companion",
         "kotlin.text.RegexOption",
         "kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1",
         "kotlin.collections.ArraysKt__ArraysJVMKt",
         "kotlin.io.FilesKt",
         "kotlin.math.MathKt",
         "kotlin.reflect.KProperty",
         "kotlin.internal.contracts.Returns",
         "kotlin.internal.contracts.ReturnsNotNull",
         "kotlin.comparisons.NaturalOrderComparator",
         "kotlin.StandardKt",
         "kotlin.reflect.KCallable",
         "kotlin.jvm.Volatile",
         "kotlin.io.ConsoleKt$stdin$2$1",
         "kotlin.ranges.IntRange",
         "kotlin.text.FlagEnum",
         "kotlin.annotation.MustBeDocumented",
         "kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1",
         "kotlin.text.StringsKt___StringsKt$chunkedSequence$1",
         "kotlin.sequences.Sequence",
         "kotlin.text.Typography",
         "kotlin.internal.contracts.InvocationKind",
         "kotlin.text.CharsKt",
         "kotlin.jvm.internal.EnumCompanionObject",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2",
         "kotlin.jvm.internal.MutablePropertyReference2",
         "kotlin.jvm.internal.MutablePropertyReference1",
         "kotlin.collections.MapsKt__MapWithDefaultKt",
         "kotlin.jvm.internal.MutablePropertyReference0",
         "kotlin.jvm.internal.Ref$CharRef",
         "kotlin.collections.EmptySet",
         "kotlin.Suppress",
         "kotlin.text.MatchNamedGroupCollection",
         "kotlin.sequences.SequencesKt___SequencesKt",
         "kotlin.jvm.Throws",
         "kotlin.text.StringsKt__StringBuilderKt",
         "kotlin.io.TerminateException",
         "kotlin.collections.AbstractMap$keys$1",
         "kotlin.jvm.internal.DoubleSpreadBuilder",
         "kotlin.text.StringsKt___StringsKt$windowed$1",
         "kotlin.text.StringsKt__StringsKt$iterator$1",
         "kotlin.sequences.DistinctIterator",
         "kotlin.jvm.functions.Function18",
         "kotlin.internal.PlatformImplementations",
         "kotlin.jvm.functions.Function19",
         "kotlin.collections.ArraysUtilJVM",
         "kotlin.ranges.CharRange",
         "kotlin.jvm.functions.Function14",
         "kotlin.jvm.functions.Function15",
         "kotlin.jvm.functions.Function16",
         "kotlin.jvm.functions.Function17",
         "kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1",
         "kotlin.text.CharDirectionality",
         "kotlin.collections.ArraysKt",
         "kotlin.jvm.functions.Function10",
         "kotlin.jvm.functions.Function11",
         "kotlin.io.NoSuchFileException",
         "kotlin.jvm.functions.Function12",
         "kotlin.jvm.functions.Function13",
         "kotlin.jvm.internal.Ref$LongRef",
         "kotlin.coroutines.experimental.intrinsics.IntrinsicsKt$buildContinuationByInvokeCall$continuation$1",
         "kotlin.coroutines.experimental.ContinuationInterceptor$Key",
         "kotlin.jvm.internal.Ref$FloatRef",
         "kotlin.reflect.KClassifier",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1",
         "kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2",
         "kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1",
         "kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2",
         "kotlin.jvm.internal.DefaultConstructorMarker",
         "kotlin.sequences.DropWhileSequence$iterator$1",
         "kotlin.jvm.internal.ReflectionFactory",
         "kotlin.sequences.SequencesKt___SequencesKt$sorted$1",
         "kotlin.jvm.internal.ArrayFloatIterator",
         "kotlin.internal.LowPriorityInOverloadResolution",
         "kotlin.jvm.internal.MagicApiIntrinsics",
         "kotlin.sequences.GeneratorSequence",
         "kotlin.collections.SetsKt__SetsKt",
         "kotlin.internal.ProgressionUtilKt",
         "kotlin.NoWhenBranchMatchedException",
         "kotlin.jvm.internal.ArrayIteratorsKt",
         "kotlin.ExceptionsKt",
         "kotlin.jvm.functions.Function21",
         "kotlin.jvm.functions.Function22",
         "kotlin.PublishedApi",
         "kotlin.sequences.EmptySequence",
         "kotlin.reflect.KMutableProperty2$Setter",
         "kotlin.jvm.functions.Function20",
         "kotlin.sequences.SequencesKt__SequencesKt$flatten$3",
         "kotlin.jvm.internal.markers.KMutableMap$Entry",
         "kotlin.collections.Grouping",
         "kotlin.sequences.SequencesKt__SequencesKt$flatten$1",
         "kotlin.text.CharCategory$Companion",
         "kotlin.reflect.KProperty$Getter",
         "kotlin.sequences.SequencesKt__SequencesKt$flatten$2"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     }
    ]
   },
   {
    "id": "org.jetbrains.kotlin:kotlin-test:jar:1.2.0:test",
    "coordinates": "org.jetbrains.kotlin:kotlin-test:1.2.0",
    "groupId": "org.jetbrains.kotlin",
    "artifactId": "kotlin-test",
    "version": "1.2.0",
    "scope": "test",
    "packaging": "jar",
    "omitted": false,
    "size": 28677,
    "type": "direct",
    "status": "bloated",
    "parent": "ib-ai:ib-ai:jar:0.0.1",
    "allTypes": [
     "kotlin.test.Asserter$assertNotNull$1",
     "kotlin.test.DefaultAsserter",
     "kotlin.test.Asserter$assertTrue$1",
     "kotlin.test.Asserter$assertSame$1",
     "kotlin.test.AssertionsKt",
     "kotlin.test.Asserter$DefaultImpls",
     "kotlin.test.AsserterContributor",
     "kotlin.test.AssertionsKt__AssertionsKt",
     "kotlin.test.CollectionAssertionsKt$elementAtShouldComply$1",
     "kotlin.test.Asserter$assertNull$1",
     "kotlin.test.Asserter$assertNotEquals$1",
     "kotlin.test.CollectionAssertionsKt$containsAll$1",
     "kotlin.test.CollectionAssertionsKt",
     "kotlin.test.Asserter$assertNotSame$1",
     "kotlin.test.CollectionAssertionSession",
     "kotlin.test.UtilsKt",
     "kotlin.test.AssertionsKt__AssertionsImplKt",
     "kotlin.test.Asserter$assertEquals$1",
     "kotlin.test.Asserter",
     "kotlin.test.AsserterLookupKt"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "org.jetbrains.kotlin:kotlin-stdlib:jar:1.2.0:test",
      "coordinates": "org.jetbrains.kotlin:kotlin-stdlib:1.2.0",
      "groupId": "org.jetbrains.kotlin",
      "artifactId": "kotlin-stdlib",
      "version": "1.2.0",
      "scope": "test",
      "packaging": "jar",
      "omitted": true,
      "size": 930811,
      "type": "unknown",
      "status": "unknown",
      "parent": "org.jetbrains.kotlin:kotlin-test:jar:1.2.0:test",
      "allTypes": [],
      "usedTypes": [],
      "usageRatio": -1.0,
      "children": []
     }
    ]
   },
   {
    "id": "biz.paluch.redis:lettuce:jar:5.0.0.Beta1:compile",
    "coordinates": "biz.paluch.redis:lettuce:5.0.0.Beta1",
    "groupId": "biz.paluch.redis",
    "artifactId": "lettuce",
    "version": "5.0.0.Beta1",
    "scope": "compile",
    "packaging": "jar",
    "omitted": false,
    "size": 954968,
    "type": "direct",
    "status": "bloated",
    "parent": "ib-ai:ib-ai:jar:0.0.1",
    "allTypes": [
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionListAsyncCommands",
     "com.lambdaworks.redis.metrics.DefaultCommandLatencyCollector$PauseDetectorWrapper$1",
     "com.lambdaworks.redis.RedisChannelInitializerImpl",
     "com.lambdaworks.redis.dynamic.output.OutputType",
     "com.lambdaworks.redis.dynamic.DefaultRedisCommandsMetadata",
     "com.lambdaworks.redis.dynamic.domain.Timeout",
     "com.lambdaworks.redis.output.KeyStreamingChannel",
     "com.lambdaworks.redis.protocol.Command",
     "com.lambdaworks.redis.ScoredValue",
     "com.lambdaworks.redis.internal.AbstractInvocationHandler$MethodTranslator",
     "com.lambdaworks.redis.protocol.RedisStateMachine$Netty41LongProcessor",
     "com.lambdaworks.redis.dynamic.DefaultMethodParametersAccessor$BindableParameterIterator",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionHLLCommands",
     "com.lambdaworks.redis.cluster.ClusterTopologyRefreshOptions$1",
     "com.lambdaworks.redis.GeoArgs",
     "com.lambdaworks.redis.metrics.DefaultCommandLatencyCollectorOptions$Builder",
     "com.lambdaworks.redis.ScoredValueScanCursor",
     "com.lambdaworks.redis.metrics.DefaultCommandLatencyCollectorOptions$1",
     "com.lambdaworks.redis.RedisCommandExecutionException",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionServerCommands",
     "com.lambdaworks.redis.output.BooleanListOutput",
     "com.lambdaworks.redis.cluster.api.reactive.RedisClusterReactiveCommands",
     "com.lambdaworks.redis.BitFieldArgs$OverflowType",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionHashCommands",
     "com.lambdaworks.redis.masterslave.MasterSlaveConnectionProvider$ConnectionKey",
     "com.lambdaworks.redis.ReadFromImpl",
     "com.lambdaworks.redis.cluster.ClusterTopologyRefreshOptions$RefreshTrigger",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionSetAsyncCommands",
     "com.lambdaworks.redis.pubsub.RedisPubSubReactiveCommandsImpl",
     "com.lambdaworks.redis.cluster.PartitionsConsensus",
     "com.lambdaworks.redis.cluster.ClusterTopologyRefreshOptions",
     "com.lambdaworks.redis.cluster.NodeSelectionInvocationHandler",
     "com.lambdaworks.redis.dynamic.CodecAwareMethodParametersAccessor",
     "com.lambdaworks.redis.api.reactive.BaseRedisReactiveCommands",
     "com.lambdaworks.redis.pubsub.RedisPubSubAsyncCommandsImpl",
     "com.lambdaworks.redis.ReadFromImpl$ReadFromNearest",
     "com.lambdaworks.redis.dynamic.support.TypeVariableTypeInformation",
     "com.lambdaworks.redis.masterslave.StatefulRedisMasterSlaveConnection",
     "com.lambdaworks.redis.cluster.topology.TopologyComparators$LatencyComparator",
     "com.lambdaworks.redis.protocol.DefaultEndpoint$1",
     "com.lambdaworks.redis.cluster.PartitionsConsensusImpl$HealthyMajority",
     "com.lambdaworks.redis.models.command.CommandDetail",
     "com.lambdaworks.redis.event.metrics.DefaultCommandLatencyEventPublisher",
     "com.lambdaworks.redis.cluster.api.sync.RedisAdvancedClusterCommands",
     "com.lambdaworks.redis.output.KeyListOutput",
     "com.lambdaworks.redis.protocol.CommandHandler",
     "com.lambdaworks.redis.dynamic.CommandFactory",
     "com.lambdaworks.redis.cluster.DynamicSyncNodeSelection",
     "com.lambdaworks.redis.metrics.CommandLatencyId",
     "com.lambdaworks.redis.dynamic.parameter.MethodParametersAccessor",
     "com.lambdaworks.redis.BitFieldArgs$Get",
     "com.lambdaworks.redis.models.role.RedisNodeDescription",
     "com.lambdaworks.redis.dynamic.intercept.MethodInvocation",
     "com.lambdaworks.redis.support.RedisClusterClientFactoryBean",
     "com.lambdaworks.redis.Value",
     "com.lambdaworks.redis.protocol.HasQueuedCommands",
     "com.lambdaworks.redis.cluster.ClusterConnectionProvider$Intent",
     "com.lambdaworks.redis.output.ScanOutput",
     "com.lambdaworks.redis.CompositeArgument",
     "com.lambdaworks.redis.output.KeyValueScanStreamingOutput",
     "com.lambdaworks.redis.internal.LettuceSets",
     "com.lambdaworks.redis.cluster.PooledClusterConnectionProvider$1",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$MethodInvokeTypeProvider",
     "com.lambdaworks.redis.ValueScanCursor",
     "com.lambdaworks.redis.event.connection.DisconnectedEvent",
     "com.lambdaworks.redis.masterslave.MasterSlaveTopologyRefresh$TimedAsyncCommand",
     "com.lambdaworks.redis.models.role.RedisInstance",
     "com.lambdaworks.redis.sentinel.api.StatefulRedisSentinelConnection",
     "com.lambdaworks.redis.output.GeoCoordinatesValueListOutput",
     "com.lambdaworks.redis.output.ScoredValueScanStreamingOutput",
     "com.lambdaworks.redis.EpollProvider",
     "com.lambdaworks.redis.dynamic.RedisCommandFactory$CommandFactoryExecutorMethodInterceptor",
     "com.lambdaworks.redis.ScanArgs",
     "com.lambdaworks.redis.internal.AbstractInvocationHandler",
     "com.lambdaworks.redis.masterslave.SentinelTopologyRefresh$SentinelReconnectMessagePredicate",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelection",
     "com.lambdaworks.redis.protocol.CompleteableCommand",
     "com.lambdaworks.redis.api.reactive.RedisHLLReactiveCommands",
     "com.lambdaworks.redis.output.DefaultTransactionResult",
     "com.lambdaworks.redis.sentinel.RedisSentinelReactiveCommandsImpl",
     "com.lambdaworks.redis.support.ConnectionPoolSupport$RedisPooledObjectFactory",
     "com.lambdaworks.redis.protocol.ReconnectionListener",
     "com.lambdaworks.redis.api.async.RedisScriptingAsyncCommands",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionKeyAsyncCommands",
     "com.lambdaworks.redis.protocol.CommandArgs$IntegerCache",
     "com.lambdaworks.redis.cluster.ClusterTopologyRefreshScheduler$ClusterTopologyRefreshTask",
     "com.lambdaworks.redis.PlainChannelInitializer",
     "com.lambdaworks.redis.SocketOptions$1",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionScriptingAsyncCommands",
     "com.lambdaworks.redis.BitFieldArgs$Offset",
     "com.lambdaworks.redis.metrics.DefaultCommandLatencyCollector$1",
     "com.lambdaworks.redis.output.StringListOutput",
     "com.lambdaworks.redis.api.reactive.RedisKeyReactiveCommands",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$ClusterKeyScanCursor",
     "com.lambdaworks.redis.api.sync.RedisCommands",
     "com.lambdaworks.redis.output.DateOutput",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionServerAsyncCommands",
     "com.lambdaworks.redis.resource.DnsResolver",
     "com.lambdaworks.redis.metrics.CommandMetrics$CommandLatency",
     "com.lambdaworks.redis.output.StreamingChannel",
     "com.lambdaworks.redis.protocol.RedisStateMachine",
     "com.lambdaworks.redis.RedisPublisher$State$2",
     "com.lambdaworks.redis.masterslave.ReadOnlyCommands",
     "com.lambdaworks.redis.RedisPublisher$State$1",
     "com.lambdaworks.redis.dynamic.annotation.Value",
     "com.lambdaworks.redis.models.role.ReplicationPartner",
     "com.lambdaworks.redis.RedisPublisher$State$5",
     "com.lambdaworks.redis.dynamic.segment.CommandSegment$Constant",
     "com.lambdaworks.redis.output.StringValueListOutput",
     "com.lambdaworks.redis.RedisPublisher$State$4",
     "com.lambdaworks.redis.RedisPublisher$State$3",
     "com.lambdaworks.redis.protocol.SharedLock",
     "com.lambdaworks.redis.BitFieldArgs$Overflow",
     "com.lambdaworks.redis.pubsub.PubSubCommandBuilder",
     "com.lambdaworks.redis.KeyValue",
     "com.lambdaworks.redis.AbstractRedisReactiveCommands",
     "com.lambdaworks.redis.cluster.api.async.RedisAdvancedClusterAsyncCommands",
     "com.lambdaworks.redis.event.DefaultEventBus",
     "com.lambdaworks.redis.models.command.CommandDetail$Flag",
     "com.lambdaworks.redis.protocol.RedisStateMachine$1",
     "com.lambdaworks.redis.dynamic.DefaultMethodParametersAccessor",
     "com.lambdaworks.redis.KillArgs",
     "com.lambdaworks.redis.protocol.Endpoint",
     "com.lambdaworks.redis.pubsub.RedisPubSubAdapter",
     "com.lambdaworks.redis.dynamic.ReactiveWrappers",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$SerializableTypeProxy",
     "com.lambdaworks.redis.cluster.ClusterEventListener$1",
     "com.lambdaworks.redis.internal.HostAndPort",
     "com.lambdaworks.redis.dynamic.RedisCommandFactory",
     "com.lambdaworks.redis.event.EventBus",
     "com.lambdaworks.redis.cluster.PooledClusterConnectionProvider",
     "com.lambdaworks.redis.sentinel.StatefulRedisSentinelConnectionImpl",
     "com.lambdaworks.redis.cluster.models.slots.ClusterSlotRange",
     "com.lambdaworks.redis.cluster.SyncExecutionsImpl",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$MethodParameterTypeProvider",
     "com.lambdaworks.redis.output.ValueValueListOutput",
     "com.lambdaworks.redis.pubsub.api.reactive.RedisPubSubReactiveCommands",
     "com.lambdaworks.redis.AbstractRedisClient",
     "com.lambdaworks.redis.output.ListOfMapsOutput",
     "com.lambdaworks.redis.ConnectionEvents$Reset",
     "com.lambdaworks.redis.TransactionResult",
     "com.lambdaworks.redis.cluster.api.async.AsyncNodeSelection",
     "com.lambdaworks.redis.cluster.ClusterDistributionChannelWriter",
     "com.lambdaworks.redis.dynamic.support.StandardReflectionParameterNameDiscoverer",
     "com.lambdaworks.redis.SslConnectionBuilder$SslChannelInitializer",
     "com.lambdaworks.redis.output.ValueScanOutput",
     "com.lambdaworks.redis.dynamic.annotation.CommandNaming$Strategy",
     "com.lambdaworks.redis.dynamic.parameter.Parameter",
     "com.lambdaworks.redis.support.RedisClientFactoryBean",
     "com.lambdaworks.redis.dynamic.ReactiveCommandSegmentCommandFactory",
     "com.lambdaworks.redis.LettuceFutures",
     "com.lambdaworks.redis.CloseEvents",
     "com.lambdaworks.redis.protocol.ConnectionWatchdog",
     "com.lambdaworks.redis.masterslave.MasterSlaveConnectionProvider$Intent",
     "com.lambdaworks.redis.api.reactive.RedisTransactionalReactiveCommands",
     "com.lambdaworks.redis.output.GeoWithinListOutput",
     "com.lambdaworks.redis.support.LettuceCdiExtension",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionHLLAsyncCommands",
     "com.lambdaworks.redis.output.MapOutput",
     "com.lambdaworks.redis.protocol.ChannelLogDescriptor",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$TypeProxyInvocationHandler",
     "com.lambdaworks.redis.metrics.DefaultCommandLatencyCollector$Latencies",
     "com.lambdaworks.redis.RedisAsyncCommandsImpl",
     "com.lambdaworks.redis.masterslave.MasterSlaveChannelWriter",
     "com.lambdaworks.redis.protocol.DefaultEndpoint$Reliability",
     "com.lambdaworks.redis.RedisClient$Timeout",
     "com.lambdaworks.redis.RedisChannelHandler",
     "com.lambdaworks.redis.ConnectionId",
     "com.lambdaworks.redis.RedisURI$1",
     "com.lambdaworks.redis.BackpressureUtils",
     "com.lambdaworks.redis.dynamic.annotation.Param",
     "com.lambdaworks.redis.api.async.RedisTransactionalAsyncCommands",
     "com.lambdaworks.redis.pubsub.api.async.RedisPubSubAsyncCommands",
     "com.lambdaworks.redis.support.ConnectionPoolSupport$DelegateCloseToConnectionInvocationHandler",
     "com.lambdaworks.redis.metrics.DefaultCommandLatencyCollector",
     "com.lambdaworks.redis.output.ScoredValueScanOutput",
     "com.lambdaworks.redis.api.async.RedisKeyAsyncCommands",
     "com.lambdaworks.redis.dynamic.support.TypeDiscoverer$TypeVariableMapVariableResolver",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$FieldTypeProvider",
     "com.lambdaworks.redis.dynamic.CommandMethodVerifier$CommandMatches",
     "com.lambdaworks.redis.cluster.ClusterCommand",
     "com.lambdaworks.redis.Limit",
     "com.lambdaworks.redis.cluster.RedisAdvancedClusterReactiveCommandsImpl",
     "com.lambdaworks.redis.codec.CompressionCodec$CompressionType",
     "com.lambdaworks.redis.cluster.StatefulRedisClusterConnectionImpl",
     "com.lambdaworks.redis.cluster.RedisAdvancedClusterAsyncCommandsImpl",
     "com.lambdaworks.redis.codec.ByteArrayCodec",
     "com.lambdaworks.redis.ConnectionBuilder",
     "com.lambdaworks.redis.output.ValueStreamingOutput",
     "com.lambdaworks.redis.masterslave.SentinelTopologyRefresh$TimedSemaphore",
     "com.lambdaworks.redis.dynamic.output.OutputRegistry$KeySurrogate",
     "com.lambdaworks.redis.protocol.BaseRedisCommandBuilder",
     "com.lambdaworks.redis.cluster.PartitionsConsensusImpl",
     "com.lambdaworks.redis.pubsub.StatefulRedisPubSubConnection",
     "com.lambdaworks.redis.dynamic.output.CommandOutputFactory",
     "com.lambdaworks.redis.dynamic.segment.AnnotationCommandSegmentFactory$CommandSegmentParser",
     "com.lambdaworks.redis.codec.StringCodec",
     "com.lambdaworks.redis.api.sync.RedisHLLCommands",
     "com.lambdaworks.redis.event.connection.ConnectionActivatedEvent",
     "com.lambdaworks.redis.sentinel.RedisSentinelAsyncCommandsImpl",
     "com.lambdaworks.redis.protocol.RedisCommand",
     "com.lambdaworks.redis.output.KeyStreamingOutput",
     "com.lambdaworks.redis.masterslave.MasterSlaveTopologyRefresh",
     "com.lambdaworks.redis.masterslave.SentinelTopologyRefresh$PubSubMessageActionScheduler",
     "com.lambdaworks.redis.protocol.ConnectionFacade",
     "com.lambdaworks.redis.protocol.CommandArgs$ExperimentalByteArrayCodec",
     "com.lambdaworks.redis.event.connection.ConnectionEvent",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$DefaultTypeProvider",
     "com.lambdaworks.redis.ZStoreArgs",
     "com.lambdaworks.redis.dynamic.RedisCommandFactory$DefaultRedisCommandFactoryResolver",
     "com.lambdaworks.redis.protocol.DefaultEndpoint$RetryListener",
     "com.lambdaworks.redis.dynamic.support.GenericArrayTypeInformation",
     "com.lambdaworks.redis.sentinel.api.sync.RedisSentinelCommands",
     "com.lambdaworks.redis.masterslave.SentinelTopologyRefresh",
     "com.lambdaworks.redis.RedisPublisher$1",
     "com.lambdaworks.redis.sentinel.RedisSentinelAsyncCommandsImpl$1",
     "com.lambdaworks.redis.ScanCursor$ImmutableScanCursor",
     "com.lambdaworks.redis.StatefulRedisConnectionImpl",
     "com.lambdaworks.redis.resource.Delay$StatefulDelay",
     "com.lambdaworks.redis.protocol.CommandWrapper",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$ScanCursorMapper",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionCommands",
     "com.lambdaworks.redis.BitFieldArgs$Set",
     "com.lambdaworks.redis.resource.ExponentialDelay",
     "com.lambdaworks.redis.cluster.api.reactive.RedisAdvancedClusterReactiveCommands",
     "com.lambdaworks.redis.RedisPublisher$CompositeSubscriber",
     "com.lambdaworks.redis.sentinel.api.async.RedisSentinelAsyncCommands",
     "com.lambdaworks.redis.metrics.DefaultCommandLatencyCollector$PauseDetectorWrapper",
     "com.lambdaworks.redis.pubsub.PubSubCommandArgs",
     "com.lambdaworks.redis.dynamic.codec.AnnotationRedisCodecResolver$Voted",
     "com.lambdaworks.redis.FutureSyncInvocationHandler",
     "com.lambdaworks.redis.BitFieldArgs$IncrBy",
     "com.lambdaworks.redis.api.sync.RedisHashCommands",
     "com.lambdaworks.redis.pubsub.RedisPubSubReactiveCommandsImpl$1",
     "com.lambdaworks.redis.pubsub.RedisPubSubReactiveCommandsImpl$2",
     "com.lambdaworks.redis.pubsub.PubSubOutput$Type",
     "com.lambdaworks.redis.resource.ConstantDelay",
     "com.lambdaworks.redis.protocol.RedisStateMachine$State",
     "com.lambdaworks.redis.dynamic.RedisCommandFactory$ReactiveCommandFactoryExecutorMethodInterceptor",
     "com.lambdaworks.redis.cluster.StatefulRedisClusterConnectionImpl$ClusterFutureSyncInvocationHandler",
     "com.lambdaworks.redis.codec.CompressionCodec",
     "com.lambdaworks.redis.cluster.ClusterClientOptions",
     "com.lambdaworks.redis.resource.DnsResolvers",
     "com.lambdaworks.redis.event.connection.ConnectionDeactivatedEvent",
     "com.lambdaworks.redis.api.reactive.RedisStringReactiveCommands",
     "com.lambdaworks.redis.dynamic.support.ResolvableType$WildcardBounds",
     "com.lambdaworks.redis.ReadFromImpl$ReadFromMaster",
     "com.lambdaworks.redis.SetArgs$Builder",
     "com.lambdaworks.redis.api.reactive.RedisReactiveCommands",
     "com.lambdaworks.redis.ZStoreArgs$Aggregate",
     "com.lambdaworks.redis.dynamic.output.CommandOutputFactoryResolver",
     "com.lambdaworks.redis.cluster.ClusterEventListener",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$2$1",
     "com.lambdaworks.redis.masterslave.ReadOnlyCommands$CommandName",
     "com.lambdaworks.redis.pubsub.PubSubCommandHandler",
     "com.lambdaworks.redis.models.role.RedisInstance$Role",
     "com.lambdaworks.redis.models.command.CommandDetailParser",
     "com.lambdaworks.redis.dynamic.annotation.CommandNaming$LetterCase",
     "com.lambdaworks.redis.cluster.ClusterTopologyRefreshOptions$Builder",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionSortedSetCommands",
     "com.lambdaworks.redis.RedisChannelWriter",
     "com.lambdaworks.redis.dynamic.intercept.DefaultMethodInvocation",
     "com.lambdaworks.redis.dynamic.output.CodecAwareOutputFactoryResolver",
     "com.lambdaworks.redis.MapScanCursor",
     "com.lambdaworks.redis.masterslave.Timeout",
     "com.lambdaworks.redis.models.role.RoleParser",
     "com.lambdaworks.redis.protocol.WithLatency",
     "com.lambdaworks.redis.RedisPublisher$State",
     "com.lambdaworks.redis.dynamic.CommandMethodSyntaxException",
     "com.lambdaworks.redis.KillArgs$Builder",
     "com.lambdaworks.redis.protocol.CommandHandler$1",
     "com.lambdaworks.redis.StreamScanCursor",
     "com.lambdaworks.redis.GeoWithin",
     "com.lambdaworks.redis.masterslave.StaticMasterSlaveTopologyProvider",
     "com.lambdaworks.redis.cluster.DynamicNodeSelection",
     "com.lambdaworks.redis.ZStoreArgs$1",
     "com.lambdaworks.redis.dynamic.parameter.Parameters",
     "com.lambdaworks.redis.dynamic.annotation.Key",
     "com.lambdaworks.redis.output.ArrayOutput",
     "com.lambdaworks.redis.dynamic.annotation.CommandNaming",
     "com.lambdaworks.redis.RedisPublisher$SubscriptionCommand",
     "com.lambdaworks.redis.event.metrics.MetricEventPublisher",
     "com.lambdaworks.redis.SslOptions$Builder",
     "com.lambdaworks.redis.cluster.AbstractNodeSelection",
     "com.lambdaworks.redis.event.metrics.DefaultCommandLatencyEventPublisher$1",
     "com.lambdaworks.redis.output.ScoredValueStreamingChannel",
     "com.lambdaworks.redis.resource.DirContextDnsResolver$StackPreference",
     "com.lambdaworks.redis.RedisConnectionStateListener",
     "com.lambdaworks.redis.dynamic.CommandSegmentCommandFactory",
     "com.lambdaworks.redis.output.KeyValueStreamingChannel",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$TypeProvider",
     "com.lambdaworks.redis.ChannelGroupListener",
     "com.lambdaworks.redis.masterslave.RedisMasterSlaveNode",
     "com.lambdaworks.redis.BitFieldArgs$1",
     "com.lambdaworks.redis.protocol.ReconnectionListener$1",
     "com.lambdaworks.redis.cluster.api.async.RedisClusterAsyncCommands",
     "com.lambdaworks.redis.pubsub.PubSubOutput",
     "com.lambdaworks.redis.RedisCommandInterruptedException",
     "com.lambdaworks.redis.support.ConnectionPoolSupport",
     "com.lambdaworks.redis.protocol.ProtocolKeyword",
     "com.lambdaworks.redis.dynamic.output.OutputRegistryCommandOutputFactoryResolver",
     "com.lambdaworks.redis.dynamic.support.ResolvableType$WildcardBounds$Kind",
     "com.lambdaworks.redis.SslConnectionBuilder$SslChannelInitializer$2",
     "com.lambdaworks.redis.SslConnectionBuilder$SslChannelInitializer$1",
     "com.lambdaworks.redis.api.async.BaseRedisAsyncCommands",
     "com.lambdaworks.redis.codec.RedisCodec",
     "com.lambdaworks.redis.cluster.RoundRobinSocketAddressSupplier",
     "com.lambdaworks.redis.dynamic.intercept.InvocationProxyFactory",
     "com.lambdaworks.redis.api.StatefulRedisConnection",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionListCommands",
     "com.lambdaworks.redis.cluster.PartitionsConsensusImpl$VotedPartitions",
     "com.lambdaworks.redis.models.role.RoleParser$1",
     "com.lambdaworks.redis.output.MultiOutput",
     "com.lambdaworks.redis.dynamic.RedisCommandFactory$ReactiveRedisCommandFactoryResolver",
     "com.lambdaworks.redis.output.DoubleOutput",
     "com.lambdaworks.redis.output.ListSubscriber",
     "com.lambdaworks.redis.api.async.RedisServerAsyncCommands",
     "com.lambdaworks.redis.cluster.ClusterTopologyRefreshScheduler$Timeout",
     "com.lambdaworks.redis.codec.Utf8StringCodec",
     "com.lambdaworks.redis.masterslave.MasterSlaveTopologyRefresh$RedisUriComparator",
     "com.lambdaworks.redis.masterslave.SentinelTopologyRefresh$MessagePredicate",
     "com.lambdaworks.redis.dynamic.CommandMethodVerifier",
     "com.lambdaworks.redis.dynamic.support.ReflectionUtils",
     "com.lambdaworks.redis.output.KeyValueStreamingOutput",
     "com.lambdaworks.redis.resource.Futures",
     "com.lambdaworks.redis.masterslave.MasterSlaveUtils",
     "com.lambdaworks.redis.cluster.StaticAsyncNodeSelection",
     "com.lambdaworks.redis.dynamic.output.OutputSelector",
     "com.lambdaworks.redis.SslOptions$1",
     "com.lambdaworks.redis.ScriptOutputType",
     "com.lambdaworks.codec.Base16",
     "com.lambdaworks.redis.metrics.DefaultCommandLatencyCollectorOptions",
     "com.lambdaworks.redis.dynamic.parameter.ExecutionSpecificParameters$ExecutionAwareParameter",
     "com.lambdaworks.redis.MigrateArgs",
     "com.lambdaworks.redis.cluster.models.slots.ClusterSlotsParser$1",
     "com.lambdaworks.redis.BitFieldArgs$Builder",
     "com.lambdaworks.redis.protocol.CommandArgs$SingularArgument",
     "com.lambdaworks.redis.dynamic.support.ReflectionUtils$MethodCallback",
     "com.lambdaworks.redis.masterslave.MasterSlaveConnectionProvider",
     "com.lambdaworks.redis.dynamic.support.ParentTypeAwareTypeInformation",
     "com.lambdaworks.redis.sentinel.SentinelCommandBuilder",
     "com.lambdaworks.redis.cluster.topology.Connections",
     "com.lambdaworks.redis.support.ConnectionPoolSupport$1",
     "com.lambdaworks.redis.api.reactive.RedisSortedSetReactiveCommands",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionStringAsyncCommands",
     "com.lambdaworks.redis.dynamic.support.ParameterNameDiscoverer",
     "com.lambdaworks.redis.masterslave.SentinelTopologyRefresh$TopologyRefreshMessagePredicate",
     "com.lambdaworks.redis.resource.DefaultClientResources",
     "com.lambdaworks.redis.event.Event",
     "com.lambdaworks.redis.resource.DirContextDnsResolver",
     "com.lambdaworks.redis.cluster.MultiNodeExecution",
     "com.lambdaworks.redis.protocol.CommandArgs$KeyArgument",
     "com.lambdaworks.redis.api.reactive.RedisHashReactiveCommands",
     "com.lambdaworks.redis.api.reactive.RedisListReactiveCommands",
     "com.lambdaworks.redis.ConnectionPoint",
     "com.lambdaworks.redis.dynamic.segment.CommandSegment$NamedParameter",
     "com.lambdaworks.redis.dynamic.support.CompositeParameterNameDiscoverer",
     "com.lambdaworks.redis.RedisReactiveCommandsImpl",
     "com.lambdaworks.redis.resource.EventLoopGroupProvider",
     "com.lambdaworks.redis.api.reactive.RedisGeoReactiveCommands",
     "com.lambdaworks.redis.masterslave.MasterSlaveConnectionProvider$1",
     "com.lambdaworks.redis.api.sync.RedisGeoCommands",
     "com.lambdaworks.redis.output.ValueStreamingChannel",
     "com.lambdaworks.redis.LettuceStrings",
     "com.lambdaworks.redis.event.connection.ConnectedEvent",
     "com.lambdaworks.redis.masterslave.TopologyProvider",
     "com.lambdaworks.redis.output.ValueOutput",
     "com.lambdaworks.redis.protocol.BaseRedisCommandBuilder$1",
     "com.lambdaworks.redis.RedisPublisher$RedisSubscription",
     "com.lambdaworks.redis.api.async.RedisAsyncCommands",
     "com.lambdaworks.redis.protocol.CommandArgs$BytesArgument",
     "com.lambdaworks.redis.resource.Futures$1",
     "com.lambdaworks.redis.protocol.CommandArgs$ByteBufferArgument",
     "com.lambdaworks.redis.BitFieldArgs$BitFieldType",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionGeoAsyncCommands",
     "com.lambdaworks.redis.resource.DefaultEventLoopGroupProvider",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$1$1",
     "com.lambdaworks.redis.cluster.StaticSyncNodeSelection",
     "com.lambdaworks.redis.dynamic.support.ResolvableType$DefaultVariableResolver",
     "com.lambdaworks.redis.cluster.api.async.BaseNodeSelectionAsyncCommands",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$ClusterStreamScanCursor",
     "com.lambdaworks.redis.models.role.RedisSentinelInstance",
     "com.lambdaworks.redis.GeoCoordinates",
     "com.lambdaworks.redis.cluster.event.ClusterTopologyChangedEvent",
     "com.lambdaworks.redis.pubsub.PubSubEndpoint",
     "com.lambdaworks.redis.dynamic.output.VoidOutput",
     "com.lambdaworks.redis.dynamic.support.ReflectionUtils$FieldFilter",
     "com.lambdaworks.redis.cluster.ReadOnlyCommands$CommandName",
     "com.lambdaworks.redis.ConnectionEvents",
     "com.lambdaworks.redis.dynamic.codec.AnnotationRedisCodecResolver",
     "com.lambdaworks.redis.RedisConnectionException",
     "com.lambdaworks.redis.cluster.RedisClusterClient",
     "com.lambdaworks.redis.ReadFromImpl$ReadFromMasterPreferred",
     "com.lambdaworks.redis.sentinel.api.reactive.RedisSentinelReactiveCommands",
     "com.lambdaworks.redis.internal.LettuceClassUtils",
     "com.lambdaworks.redis.api.sync.RedisServerCommands",
     "com.lambdaworks.redis.output.IntegerOutput",
     "com.lambdaworks.redis.support.ConnectionPoolSupport$ReturnObjectOnCloseInvocationHandler",
     "com.lambdaworks.redis.dynamic.support.ClassTypeInformation",
     "com.lambdaworks.redis.CloseEvents$CloseListener",
     "com.lambdaworks.redis.protocol.DefaultEndpoint",
     "com.lambdaworks.redis.resource.DecorrelatedJitterDelay",
     "com.lambdaworks.redis.PlainChannelInitializer$1",
     "com.lambdaworks.redis.GeoRadiusStoreArgs",
     "com.lambdaworks.redis.support.AbstractCdiBean",
     "com.lambdaworks.redis.cluster.api.sync.Executions",
     "com.lambdaworks.redis.cluster.PartitionsConsensusImpl$KnownMajority",
     "com.lambdaworks.redis.dynamic.segment.CommandSegments$StringCommandType",
     "com.lambdaworks.redis.cluster.RedisClusterClient$NodeConnectionFactoryImpl",
     "com.lambdaworks.redis.output.NestedMultiOutput",
     "com.lambdaworks.redis.resource.DefaultClientResources$1",
     "com.lambdaworks.redis.cluster.RoundRobin",
     "com.lambdaworks.redis.dynamic.segment.AnnotationCommandSegmentFactory",
     "com.lambdaworks.redis.dynamic.support.ResolvableType$TypeVariablesVariableResolver",
     "com.lambdaworks.redis.api.async.RedisGeoAsyncCommands",
     "com.lambdaworks.redis.dynamic.support.ReflectionUtils$MethodFilter",
     "com.lambdaworks.redis.ConnectionEventTrigger",
     "com.lambdaworks.redis.dynamic.Commands",
     "com.lambdaworks.redis.dynamic.output.OutputRegistry",
     "com.lambdaworks.redis.SetArgs",
     "com.lambdaworks.redis.output.ScoredValueListOutput",
     "com.lambdaworks.redis.SslOptions",
     "com.lambdaworks.redis.api.reactive.RedisSetReactiveCommands",
     "com.lambdaworks.redis.cluster.PooledClusterConnectionProvider$ConnectionKey",
     "com.lambdaworks.redis.masterslave.MasterSlaveTopologyProvider",
     "com.lambdaworks.redis.resource.Futures$PromiseAggregator",
     "com.lambdaworks.redis.ZAddArgs",
     "com.lambdaworks.redis.RedisURI$Builder",
     "com.lambdaworks.redis.dynamic.support.TypeDiscoverer",
     "com.lambdaworks.redis.RedisClient",
     "com.lambdaworks.redis.cluster.api.sync.BaseNodeSelectionCommands",
     "com.lambdaworks.redis.cluster.topology.RedisClusterNodeSnapshot",
     "com.lambdaworks.redis.ClientOptions",
     "com.lambdaworks.redis.protocol.TransactionalCommand",
     "com.lambdaworks.redis.RedisCommandTimeoutException",
     "com.lambdaworks.redis.cluster.ReadOnlyCommands",
     "com.lambdaworks.redis.output.ByteArrayOutput",
     "com.lambdaworks.redis.cluster.ClusterNodeEndpoint",
     "com.lambdaworks.redis.JavaRuntime",
     "com.lambdaworks.redis.api.sync.RedisScriptingCommands",
     "com.lambdaworks.redis.internal.LettuceAssert",
     "com.lambdaworks.redis.RedisURI",
     "com.lambdaworks.redis.dynamic.support.ResolvableType$1",
     "com.lambdaworks.redis.cluster.ClusterScanSupport",
     "com.lambdaworks.redis.event.connection.ConnectionEventSupport",
     "com.lambdaworks.redis.protocol.CommandArgs",
     "com.lambdaworks.redis.internal.LettuceFactories",
     "com.lambdaworks.redis.BitFieldArgs$SubCommand",
     "com.lambdaworks.redis.cluster.ClusterClientOptions$Builder",
     "com.lambdaworks.codec.CRC16",
     "com.lambdaworks.redis.output.BooleanOutput",
     "com.lambdaworks.redis.protocol.LettuceCharsets",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionScriptingCommands",
     "com.lambdaworks.redis.codec.ByteBufferInputStream",
     "com.lambdaworks.redis.ZAddArgs$Builder",
     "com.lambdaworks.redis.api.sync.RedisSetCommands",
     "com.lambdaworks.redis.codec.ToByteBufEncoder",
     "com.lambdaworks.redis.dynamic.support.AnnotationParameterNameDiscoverer",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionStringCommands",
     "com.lambdaworks.redis.dynamic.support.ResolvableType$VariableResolver",
     "com.lambdaworks.redis.output.CommandOutput",
     "com.lambdaworks.redis.RedisFuture",
     "com.lambdaworks.redis.dynamic.parameter.ExecutionSpecificParameters",
     "com.lambdaworks.redis.protocol.CommandHandler$LifecycleState",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionSetCommands",
     "com.lambdaworks.redis.dynamic.intercept.MethodInterceptor",
     "com.lambdaworks.redis.protocol.ConnectionWatchdog$2",
     "com.lambdaworks.redis.cluster.models.slots.ClusterSlotsParser",
     "com.lambdaworks.redis.SortArgs$Builder",
     "com.lambdaworks.redis.protocol.ConnectionWatchdog$1",
     "com.lambdaworks.redis.cluster.topology.ClusterTopologyRefresh",
     "com.lambdaworks.redis.protocol.CommandArgs$ValueArgument",
     "com.lambdaworks.redis.ClientOptions$Builder",
     "com.lambdaworks.redis.cluster.PipelinedRedisFuture",
     "com.lambdaworks.redis.api.reactive.RedisScriptingReactiveCommands",
     "com.lambdaworks.redis.metrics.CommandLatencyCollector",
     "com.lambdaworks.redis.ZStoreArgs$Builder",
     "com.lambdaworks.redis.dynamic.segment.CommandSegments",
     "com.lambdaworks.redis.output.MapScanOutput",
     "com.lambdaworks.redis.cluster.api.NodeSelectionSupport",
     "com.lambdaworks.redis.dynamic.output.OutputRegistry$ValueSurrogate",
     "com.lambdaworks.redis.api.sync.RedisListCommands",
     "com.lambdaworks.redis.models.role.RedisSlaveInstance$State",
     "com.lambdaworks.redis.masterslave.StatefulRedisMasterSlaveConnectionImpl",
     "com.lambdaworks.redis.protocol.RedisStateMachine$LongProcessor",
     "com.lambdaworks.redis.MigrateArgs$Builder",
     "com.lambdaworks.redis.support.RedisClusterClientCdiBean",
     "com.lambdaworks.redis.event.DefaultEventPublisherOptions",
     "com.lambdaworks.redis.KeyScanCursor",
     "com.lambdaworks.redis.dynamic.RedisCommandFactory$RedisCommandFactoryResolver",
     "com.lambdaworks.redis.protocol.CommandArgs$StringArgument",
     "com.lambdaworks.redis.cluster.models.partitions.RedisClusterNode$NodeFlag",
     "com.lambdaworks.redis.ConnectionEvents$Reconnect",
     "com.lambdaworks.redis.protocol.CommandArgs$IntegerArgument",
     "com.lambdaworks.redis.cluster.topology.TimedAsyncCommand",
     "com.lambdaworks.redis.ReadFrom$Nodes",
     "com.lambdaworks.redis.support.LettuceFactoryBeanSupport",
     "com.lambdaworks.redis.protocol.CommandType",
     "com.lambdaworks.redis.RedisCommandBuilder",
     "com.lambdaworks.redis.SortArgs",
     "com.lambdaworks.redis.resource.ClientResources",
     "com.lambdaworks.redis.protocol.CommandArgs$1",
     "com.lambdaworks.redis.pubsub.api.reactive.PatternMessage",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionGeoCommands",
     "com.lambdaworks.redis.RedisChannelInitializer",
     "com.lambdaworks.redis.api.sync.RedisSortedSetCommands",
     "com.lambdaworks.redis.masterslave.MasterSlave",
     "com.lambdaworks.redis.pubsub.RedisPubSubListener",
     "com.lambdaworks.redis.internal.LettuceLists",
     "com.lambdaworks.redis.output.ValueListOutput",
     "com.lambdaworks.redis.cluster.AsyncExecutionsImpl",
     "com.lambdaworks.redis.codec.CompressionCodec$CompressingValueCodecWrapper",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$2",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$1",
     "com.lambdaworks.redis.pubsub.api.sync.RedisPubSubCommands",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$4",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$3",
     "com.lambdaworks.redis.dynamic.codec.RedisCodecResolver",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$3",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$2",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper$1",
     "com.lambdaworks.redis.protocol.DecoratedCommand",
     "com.lambdaworks.redis.event.DefaultEventPublisherOptions$Builder",
     "com.lambdaworks.redis.RedisPublisher",
     "com.lambdaworks.redis.cluster.topology.TopologyComparators",
     "com.lambdaworks.redis.event.EventPublisherOptions",
     "com.lambdaworks.redis.event.metrics.CommandLatencyEvent",
     "com.lambdaworks.redis.cluster.ClusterConnectionProvider",
     "com.lambdaworks.redis.cluster.models.partitions.RedisClusterNode",
     "com.lambdaworks.redis.protocol.ReconnectionHandler",
     "com.lambdaworks.redis.output.KeyValueListOutput",
     "com.lambdaworks.redis.models.role.RedisMasterInstance",
     "com.lambdaworks.redis.dynamic.CommandCreationException",
     "com.lambdaworks.redis.output.StreamingOutput",
     "com.lambdaworks.redis.pubsub.PubSubOutput$1",
     "com.lambdaworks.redis.protocol.QueuedCommands",
     "com.lambdaworks.redis.pubsub.api.reactive.ChannelMessage",
     "com.lambdaworks.redis.cluster.PooledClusterConnectionProvider$ConnectionFactory",
     "com.lambdaworks.redis.cluster.topology.NodeTopologyView",
     "com.lambdaworks.redis.dynamic.segment.CommandSegment",
     "com.lambdaworks.redis.metrics.MetricCollector",
     "com.lambdaworks.redis.support.RedisClientCdiBean",
     "com.lambdaworks.redis.cluster.ClusterTopologyRefreshScheduler",
     "com.lambdaworks.redis.resource.FullJitterDelay",
     "com.lambdaworks.redis.cluster.ClusterScanSupport$ClusterScanCursor",
     "com.lambdaworks.redis.cluster.topology.NodeConnectionFactory",
     "com.lambdaworks.redis.dynamic.ParameterBinder",
     "com.lambdaworks.redis.dynamic.RedisCommandsMetadata",
     "com.lambdaworks.redis.pubsub.PubSubEndpoint$1",
     "com.lambdaworks.redis.dynamic.support.ResolvableType",
     "com.lambdaworks.redis.masterslave.MasterSlaveTopologyRefresh$LatencyComparator",
     "com.lambdaworks.redis.resource.Delay",
     "com.lambdaworks.redis.output.KeyValueOutput",
     "com.lambdaworks.redis.SslConnectionBuilder",
     "com.lambdaworks.redis.api.StatefulConnection",
     "com.lambdaworks.redis.RedisException",
     "com.lambdaworks.redis.dynamic.support.GenericTypeResolver",
     "com.lambdaworks.redis.cluster.models.partitions.Partitions",
     "com.lambdaworks.redis.Range$Boundary",
     "com.lambdaworks.redis.dynamic.segment.CommandSegment$IndexedParameter",
     "com.lambdaworks.redis.api.async.RedisSortedSetAsyncCommands",
     "com.lambdaworks.redis.ScanCursor",
     "com.lambdaworks.redis.protocol.CommandArgs$DoubleArgument",
     "com.lambdaworks.redis.dynamic.support.ParametrizedTypeInformation",
     "com.lambdaworks.redis.api.sync.RedisTransactionalCommands",
     "com.lambdaworks.redis.cluster.StaticNodeSelection",
     "com.lambdaworks.redis.output.KeyScanStreamingOutput",
     "com.lambdaworks.redis.output.ValueSetOutput",
     "com.lambdaworks.redis.api.sync.RedisStringCommands",
     "com.lambdaworks.redis.cluster.SlotHash",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionAsyncCommands",
     "com.lambdaworks.redis.GeoArgs$Unit",
     "com.lambdaworks.redis.cluster.topology.Requests",
     "com.lambdaworks.redis.metrics.CommandLatencyCollectorOptions",
     "com.lambdaworks.redis.SocketOptions$Builder",
     "com.lambdaworks.redis.dynamic.segment.CommandSegment$ArgumentContribution",
     "com.lambdaworks.redis.masterslave.SentinelTopologyRefresh$1",
     "com.lambdaworks.redis.ConnectionEvents$Activated",
     "com.lambdaworks.redis.ScanArgs$Builder",
     "com.lambdaworks.redis.cluster.PartitionAccessor",
     "com.lambdaworks.redis.api.async.RedisStringAsyncCommands",
     "com.lambdaworks.redis.cluster.ReconnectEventListener",
     "com.lambdaworks.redis.dynamic.segment.CommandSegmentFactory",
     "com.lambdaworks.redis.support.ClientResourcesFactoryBean",
     "com.lambdaworks.redis.output.ScoredValueStreamingOutput",
     "com.lambdaworks.redis.api.async.RedisSetAsyncCommands",
     "com.lambdaworks.redis.metrics.CommandMetrics",
     "com.lambdaworks.redis.cluster.topology.TopologyComparators$ClientCountComparator",
     "com.lambdaworks.redis.dynamic.annotation.Command",
     "com.lambdaworks.redis.output.ValueScanStreamingOutput",
     "com.lambdaworks.redis.cluster.api.sync.RedisClusterCommands",
     "com.lambdaworks.redis.ReadFrom",
     "com.lambdaworks.redis.api.async.RedisHashAsyncCommands",
     "com.lambdaworks.redis.cluster.models.partitions.ClusterPartitionParser",
     "com.lambdaworks.redis.cluster.RedisClusterClient$NodeConnectionFactoryImpl$1",
     "com.lambdaworks.redis.event.DefaultEventPublisherOptions$1",
     "com.lambdaworks.redis.BitFieldArgs",
     "com.lambdaworks.redis.masterslave.MasterSlaveConnectionProvider$ConnectionFactory",
     "com.lambdaworks.redis.api.async.RedisListAsyncCommands",
     "com.lambdaworks.redis.dynamic.support.ResolvableType$SyntheticParameterizedType",
     "com.lambdaworks.redis.SocketOptions",
     "com.lambdaworks.redis.masterslave.SentinelTopologyProvider",
     "com.lambdaworks.redis.dynamic.support.ReflectionUtils$FieldCallback",
     "com.lambdaworks.redis.dynamic.support.TypeWrapper",
     "com.lambdaworks.redis.output.KeyScanOutput",
     "com.lambdaworks.redis.cluster.topology.NodeTopologyViews",
     "com.lambdaworks.redis.models.role.RedisSlaveInstance",
     "com.lambdaworks.redis.protocol.CommandKeyword",
     "com.lambdaworks.redis.cluster.api.async.AsyncExecutions",
     "com.lambdaworks.redis.cluster.topology.TopologyComparators$RedisURIComparator",
     "com.lambdaworks.redis.output.KeyOutput",
     "com.lambdaworks.redis.cluster.DynamicAsyncNodeSelection",
     "com.lambdaworks.redis.dynamic.intercept.InvocationProxyFactory$InterceptorChainInvocationHandler$1",
     "com.lambdaworks.redis.dynamic.output.CommandOutputResolverSupport",
     "com.lambdaworks.redis.output.StatusOutput",
     "com.lambdaworks.redis.cluster.api.StatefulRedisClusterConnection",
     "com.lambdaworks.redis.dynamic.CommandMethod",
     "com.lambdaworks.redis.pubsub.StatefulRedisPubSubConnectionImpl",
     "com.lambdaworks.redis.protocol.AsyncCommand",
     "com.lambdaworks.redis.cluster.RedisClusterClient$1",
     "com.lambdaworks.redis.ClientOptions$DisconnectedBehavior",
     "com.lambdaworks.redis.cluster.api.sync.NodeSelectionKeyCommands",
     "com.lambdaworks.redis.dynamic.intercept.InvocationProxyFactory$InterceptorChainInvocationHandler",
     "com.lambdaworks.redis.resource.EqualJitterDelay",
     "com.lambdaworks.redis.api.async.RedisHLLAsyncCommands",
     "com.lambdaworks.redis.api.sync.RedisKeyCommands",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionSortedSetAsyncCommands",
     "com.lambdaworks.redis.cluster.api.async.NodeSelectionHashAsyncCommands",
     "com.lambdaworks.redis.output.GeoCoordinatesListOutput",
     "com.lambdaworks.redis.resource.DefaultClientResources$Builder",
     "com.lambdaworks.redis.api.reactive.RedisServerReactiveCommands",
     "com.lambdaworks.redis.KillArgs$Type",
     "com.lambdaworks.redis.AbstractRedisAsyncCommands",
     "com.lambdaworks.redis.dynamic.support.TypeInformation",
     "com.lambdaworks.redis.protocol.RedisStateMachine$State$Type",
     "com.lambdaworks.redis.protocol.DefaultEndpoint$AtMostOnceWriteListener",
     "com.lambdaworks.redis.ReadFromImpl$ReadFromSlave",
     "com.lambdaworks.redis.Range",
     "com.lambdaworks.redis.GeoArgs$Sort",
     "com.lambdaworks.redis.api.sync.BaseRedisCommands",
     "com.lambdaworks.redis.resource.SocketAddressResolver",
     "com.lambdaworks.redis.output.StreamingOutput$Subscriber",
     "com.lambdaworks.redis.protocol.CommandEncoder",
     "com.lambdaworks.redis.cluster.topology.TopologyComparators$PredefinedRedisClusterNodeComparator",
     "com.lambdaworks.redis.dynamic.support.MethodParameter"
    ],
    "usedTypes": [],
    "usageRatio": 0.0,
    "children": [
     {
      "id": "io.projectreactor:reactor-core:jar:3.0.3.RELEASE:compile",
      "coordinates": "io.projectreactor:reactor-core:3.0.3.RELEASE",
      "groupId": "io.projectreactor",
      "artifactId": "reactor-core",
      "version": "3.0.3.RELEASE",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 1016975,
      "type": "transitive",
      "status": "bloated",
      "parent": "biz.paluch.redis:lettuce:jar:5.0.0.Beta1:compile",
      "allTypes": [
       "reactor.core.publisher.FluxOnAssembly",
       "reactor.core.publisher.FluxConcatMap$WeakScalarSubscription",
       "reactor.core.publisher.Operators$SubscriberAdapter",
       "reactor.core.publisher.FluxMaterialize",
       "reactor.core.publisher.FluxRange",
       "reactor.core.publisher.FluxConcatMap$FluxConcatMapSupport",
       "reactor.core.publisher.RingBuffer",
       "reactor.core.publisher.FluxSampleTimeout$ThrottleTimeoutMain",
       "reactor.core.publisher.FluxTakeLast$TakeLastManySubscriber",
       "reactor.core.publisher.MonoCount",
       "reactor.core.publisher.FluxRepeat",
       "reactor.core.publisher.FluxSampleFirst",
       "reactor.core.publisher.AssemblyOp",
       "reactor.core.publisher.MonoReduce$AggregateSubscriber",
       "reactor.core.publisher.MonoTimeout",
       "reactor.core.publisher.NotFunMultiProducer",
       "reactor.core.publisher.FluxInterval",
       "reactor.core.publisher.MonoElementAt$ElementAtSubscriber",
       "reactor.core.Cancellation",
       "reactor.core.publisher.DrainUtils",
       "reactor.core.publisher.FluxFilterFuseable",
       "reactor.core.publisher.ParallelCollect",
       "reactor.core.publisher.MonoFilter",
       "reactor.core.publisher.FluxCallable",
       "reactor.core.publisher.FluxWindowOnCancel$WindowOnCancelSubscriber",
       "reactor.adapter.JdkFlowAdapter$SubscriberToRS",
       "reactor.core.publisher.SerializedSubscriber$LinkedArrayNode",
       "reactor.core.publisher.MonoPublishOn",
       "reactor.core.publisher.FluxSink$OverflowStrategy",
       "reactor.core.publisher.MonoDetach",
       "reactor.adapter.JdkFlowAdapter$1",
       "reactor.util.concurrent.SpscArrayQueue",
       "reactor.core.publisher.WorkQueueProcessor$QueueSubscriberLoop",
       "reactor.core.publisher.FluxSampleFirst$ThrottleFirstMain",
       "reactor.core.Loopback",
       "reactor.core.publisher.FluxWindowBoundary",
       "reactor.core.publisher.FluxPublish",
       "reactor.util.concurrent.WaitStrategy$LiteBlocking",
       "reactor.core.publisher.RingBuffer$Reader",
       "reactor.core.publisher.FluxCallableOnAssembly",
       "reactor.core.publisher.MonoThenIgnore",
       "reactor.core.publisher.FluxWindowTimeOrSize$WindowAction",
       "reactor.core.publisher.MonoSingle$SingleSubscriber",
       "reactor.core.scheduler.Schedulers$SchedulerThreadFactory",
       "reactor.core.publisher.FluxSource",
       "reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber",
       "reactor.core.publisher.FluxMapSignal",
       "reactor.core.publisher.WorkQueueProcessor",
       "reactor.core.publisher.FluxDistinct$DistinctConditionalSubscriber",
       "reactor.core.publisher.MonoNext",
       "reactor.core.publisher.FluxZipIterable",
       "reactor.core.publisher.EmitterProcessor",
       "reactor.core.publisher.FluxRepeatPredicate$RepeatPredicateSubscriber",
       "reactor.core.Producer",
       "reactor.core.scheduler.SingleScheduler$SingleWorker",
       "reactor.core.publisher.LambdaFirstSubscriber",
       "reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber",
       "reactor.core.publisher.MonoSource$FuseableMonoSource",
       "reactor.core.publisher.FluxBufferStartEnd$BufferStartEndEnder",
       "reactor.core.publisher.ParallelSortedJoin",
       "reactor.core.Exceptions$ReactiveException",
       "reactor.core.publisher.FluxHandleFuseable$HandleFuseableConditionalSubscriber",
       "reactor.core.publisher.FluxTakeWhile",
       "reactor.core.publisher.FluxDematerialize",
       "reactor.util.concurrent.WaitStrategy$PhasedOff",
       "reactor.core.scheduler.SingleTimedScheduler$SingleTimedSchedulerWorker",
       "reactor.core.publisher.FluxIterable$IterableSubscription",
       "reactor.core.publisher.FluxTakeUntilOther",
       "reactor.core.publisher.FluxBufferStartEnd$BufferStartEndStarter",
       "reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber",
       "reactor.core.publisher.ParallelUnorderedJoin$JoinInnerSubscriber",
       "reactor.core.publisher.MonoPeek$AfterSuccess",
       "reactor.core.publisher.FluxUsing$UsingConditionalSubscriber",
       "reactor.core.publisher.FluxTimeout",
       "reactor.core.publisher.BlockingIterable",
       "reactor.core.publisher.MonoDelay",
       "reactor.core.scheduler.ExecutorScheduler$ExecutorPlainRunnable",
       "reactor.core.scheduler.Schedulers$Factory",
       "reactor.core.publisher.Hooks",
       "reactor.core.publisher.FluxDistinct$DistinctFuseableSubscriber",
       "reactor.core.publisher.FluxMap",
       "reactor.core.publisher.FluxPeek",
       "reactor.core.publisher.FluxCreate$LatestAsyncSink",
       "reactor.core.publisher.FluxHide",
       "reactor.core.publisher.FluxWindowTimeOrSize$WindowAction$1",
       "reactor.core.publisher.MonoSubscribeOnCallable",
       "reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber",
       "reactor.util.Logger",
       "reactor.core.publisher.FluxZip$PairwiseZipper",
       "reactor.core.publisher.FluxZip$ZipInner",
       "reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber",
       "reactor.core.publisher.BlockingSink",
       "reactor.util.Loggers$LoggerFactory",
       "reactor.core.publisher.MonoTakeLastOne",
       "reactor.core.publisher.FluxPublish$InnerSubscription",
       "reactor.core.publisher.FluxSkip",
       "reactor.core.publisher.ReplayProcessor$SizeAndTimeBoundReplayBuffer",
       "reactor.core.publisher.FluxWindowStartEnd$NewWindow",
       "reactor.core.publisher.SingleProducerSequencer",
       "reactor.core.publisher.FluxBufferTimeOrSize",
       "reactor.core.publisher.SuppressFuseableSubscriber",
       "reactor.core.publisher.FluxZip$ZipCoordinator",
       "reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber",
       "reactor.core.publisher.FluxPublishOn",
       "reactor.core.publisher.ParallelReduceFull",
       "reactor.core.publisher.FluxConcatMap$ConcatMapInner",
       "reactor.core.publisher.MonoCallableOnAssembly",
       "reactor.core.publisher.FluxSample$SampleOtherSubscriber",
       "reactor.core.publisher.ParallelSortedJoin$SortedJoinSubscription",
       "reactor.core.publisher.FluxOnBackpressureLatest",
       "reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber",
       "reactor.core.publisher.RhsPadding",
       "reactor.core.scheduler.ExecutorServiceScheduler$ExecutorServiceWorker",
       "reactor.core.publisher.ReplayProcessor$ReplaySubscription",
       "reactor.core.publisher.FluxTakeUntil$TakeUntilPredicateSubscriber",
       "reactor.core.scheduler.SingleScheduler",
       "reactor.core.scheduler.Scheduler$1",
       "reactor.core.publisher.RingBufferFields",
       "reactor.core.publisher.FluxCombineLatest$CombineLatestCoordinator",
       "reactor.core.publisher.FluxSkipUntil",
       "reactor.core.publisher.FluxCombineLatest",
       "reactor.core.publisher.FluxProcessor",
       "reactor.core.publisher.MonoEmpty",
       "reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber",
       "reactor.core.publisher.FluxMerge",
       "reactor.core.scheduler.Scheduler$Worker",
       "reactor.core.publisher.ReplayProcessor$SizeBoundReplayBuffer$Node",
       "reactor.core.publisher.MonoFlatMap$FlattenSubscriber",
       "reactor.core.publisher.FluxGroupJoin$GroupJoinSubscription",
       "reactor.util.Loggers$1",
       "reactor.core.publisher.MonoPeek$OnTerminate",
       "reactor.core.publisher.FluxRepeatWhen",
       "reactor.core.publisher.FluxMergeSequential",
       "reactor.core.publisher.ParallelGroup",
       "reactor.core.publisher.EventLoopProcessor$Slot",
       "reactor.core.publisher.FluxPublishMulticast$CancelFuseableMulticaster",
       "reactor.util.concurrent.QueueSupplier$OneQueue",
       "reactor.core.publisher.FluxRepeatWhen$RepeatWhenMainSubscriber",
       "reactor.core.publisher.MonoRetry",
       "reactor.core.publisher.FluxError$ErrorSubscription",
       "reactor.core.publisher.FluxDetach$DetachSubscriber",
       "reactor.core.publisher.MonoProcessor",
       "reactor.core.publisher.FluxRepeatWhen$RepeatWhenOtherSubscriber",
       "reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber",
       "reactor.util.concurrent.WaitStrategy$Yielding",
       "reactor.adapter.JdkFlowAdapter$FlowSubscriber",
       "reactor.util.concurrent.WaitStrategy$Parking",
       "reactor.core.publisher.ParallelReduceFull$SlotPair",
       "reactor.core.publisher.ParallelUnorderedFilter",
       "reactor.core.publisher.FluxOnAssembly$OnAssemblyException",
       "reactor.core.publisher.ParallelUnorderedMap",
       "reactor.core.publisher.FluxTakeUntilOther$TakeUntilOtherSubscriber",
       "reactor.core.publisher.FluxWindowTimeOrSize$Window",
       "reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber",
       "reactor.core.Fuseable$ScalarCallable",
       "reactor.core.publisher.FluxGroupJoin$LeftRightEndSubscriber",
       "reactor.util.concurrent.QueueSupplier",
       "reactor.core.Fuseable$SynchronousSubscription",
       "reactor.core.publisher.FluxFilter$FilterConditionalSubscriber",
       "reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber",
       "reactor.core.publisher.FluxTake$TakeSubscriber",
       "reactor.core.publisher.FluxOnBackpressureDrop$DropSubscriber",
       "reactor.core.publisher.MonoSubscribeOn$MonoSubscribeOnSubscriber",
       "reactor.core.publisher.NotFunRingBuffer",
       "reactor.core.Exceptions$BubblingException",
       "reactor.core.publisher.Hooks$OperatorHook",
       "reactor.core.publisher.ParallelUnorderedRunOn",
       "reactor.util.Loggers$Slf4JLogger",
       "reactor.util.function.Tuples",
       "reactor.core.publisher.MonoFilterFuseable",
       "reactor.core.publisher.FluxJoin$GroupJoinSubscription",
       "reactor.core.publisher.FluxPublishMulticast$FluxPublishMulticaster",
       "reactor.core.publisher.MonoCallable",
       "reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber",
       "reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber",
       "reactor.core.publisher.MonoNever",
       "reactor.core.publisher.FluxScan$AccumulateSubscriber",
       "reactor.util.Loggers",
       "reactor.core.Trackable",
       "reactor.core.publisher.MonoOtherwiseIfEmpty",
       "reactor.core.Exceptions$CancelException",
       "reactor.core.publisher.FluxDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber",
       "reactor.core.publisher.MonoSupplier",
       "reactor.core.publisher.FluxDistinctFuseable",
       "reactor.core.scheduler.SingleTimedScheduler$TimedScheduledRunnable",
       "reactor.core.publisher.FluxMap$MapConditionalSubscriber",
       "reactor.core.publisher.FluxUsing$UsingSubscriber",
       "reactor.core.scheduler.Schedulers$1",
       "reactor.core.publisher.MonoHasElements$HasElementsSubscriber",
       "reactor.core.Receiver",
       "reactor.core.Exceptions$ErrorCallbackNotImplemented",
       "reactor.core.publisher.MonoIgnoreThen$IgnoreElementsSubscriber",
       "reactor.core.publisher.ParallelFlatMap",
       "reactor.adapter.JdkFlowAdapter$FlowPublisherAsFlux",
       "reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
       "reactor.core.publisher.FluxHandle$HandleConditionalSubscriber",
       "reactor.core.publisher.FluxSwitchIfEmpty",
       "reactor.core.publisher.Operators$DeferredSubscription",
       "reactor.core.publisher.MonoError",
       "reactor.core.publisher.FluxGroupBy$GroupByMain",
       "reactor.core.publisher.Operators$EmptySubscription",
       "reactor.core.publisher.TopicProcessor$TopicSubscriberLoop$1",
       "reactor.core.publisher.FluxJust",
       "reactor.core.publisher.SingleProducerSequencerFields",
       "reactor.core.publisher.FluxUsing$UsingFuseableSubscriber",
       "reactor.core.publisher.MonoRetryWhen",
       "reactor.core.publisher.FluxTimeout$CancelledIndexedCancellable",
       "reactor.core.publisher.UnsafeRingBuffer",
       "reactor.core.publisher.EventLoopProcessor$RequestTask",
       "reactor.core.publisher.FluxPublishMulticast$CancelMulticaster",
       "reactor.core.publisher.MonoSequenceEqual$EqualCoordinator",
       "reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux",
       "reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber",
       "reactor.core.publisher.MonoSingle",
       "reactor.core.publisher.MonoSink",
       "reactor.core.publisher.FluxTakeLast",
       "reactor.core.publisher.FluxSource$FuseableFluxSource",
       "reactor.core.publisher.EventLoopProcessor$EventLoopContext",
       "reactor.core.publisher.MonoMapFuseable",
       "reactor.core.scheduler.ImmediateScheduler",
       "reactor.core.publisher.ConnectableFlux",
       "reactor.core.publisher.FluxBufferBoundary$BufferBoundaryMain",
       "reactor.core.publisher.FluxSubscribeOnValue",
       "reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber",
       "reactor.core.scheduler.ExecutorScheduler$WorkerDelete",
       "reactor.core.publisher.MonoPeekFuseable",
       "reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber",
       "reactor.core.MultiReceiver",
       "reactor.core.scheduler.ElasticScheduler$CachedWorker$CachedTask",
       "reactor.core.publisher.BlockingSink$Emission",
       "reactor.core.publisher.SerializedSubscriber",
       "reactor.util.concurrent.SpscArrayQueueProducer",
       "reactor.core.publisher.FluxAutoConnect",
       "reactor.core.publisher.FluxJoin",
       "reactor.core.publisher.MonoToCompletableFuture",
       "reactor.core.publisher.FluxCreate$SerializedSink",
       "reactor.core.Fuseable$QueueSubscription",
       "reactor.util.concurrent.WaitStrategy",
       "reactor.core.publisher.MonoThenIgnore$MonoThenIgnoreSubscriber",
       "reactor.core.publisher.ParallelUnorderedPeek",
       "reactor.core.publisher.FluxWindowStartEnd$WindowStartEndMainSubscriber",
       "reactor.core.publisher.FluxRefCount$State$InnerSubscriber",
       "reactor.core.publisher.MonoWhen$MonoWhenCoordinator",
       "reactor.core.publisher.MonoPeek$OnSuccess",
       "reactor.core.scheduler.ImmediateScheduler$ImmediateSchedulerWorker",
       "reactor.core.publisher.MonoRetryPredicate",
       "reactor.core.publisher.MonoFirst",
       "reactor.core.publisher.FluxRetryWhen",
       "reactor.core.publisher.FluxAutoConnectFuseable",
       "reactor.core.publisher.FluxHide$HideSubscriber",
       "reactor.core.scheduler.ParallelScheduler$ParallelWorker$ParallelWorkerTask",
       "reactor.core.publisher.EventLoopProcessor",
       "reactor.core.publisher.AtomicSequence",
       "reactor.core.publisher.FluxSkipUntil$SkipWhileSubscriber",
       "reactor.core.publisher.DirectProcessor",
       "reactor.core.publisher.FluxResume",
       "reactor.core.publisher.FluxRepeat$RepeatSubscriber",
       "reactor.core.publisher.FluxFirstEmitting",
       "reactor.core.scheduler.ExecutorScheduler$ExecutorSchedulerTrampolineWorker",
       "reactor.core.scheduler.ExecutorScheduler$ExecutorTrackedRunnable",
       "reactor.core.publisher.Signal",
       "reactor.core.publisher.SignalType",
       "reactor.util.concurrent.WaitStrategy$AlertException",
       "reactor.core.publisher.FluxDefaultIfEmpty",
       "reactor.core.publisher.FluxDelaySubscription$DelaySubscriptionOtherSubscriber",
       "reactor.core.publisher.FluxWindowStartEnd",
       "reactor.util.concurrent.QueueSupplier$QueueIterator",
       "reactor.core.publisher.FluxGenerate",
       "reactor.core.publisher.FluxTakeLastOne",
       "reactor.core.publisher.FluxHandleFuseable",
       "reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription",
       "reactor.core.publisher.FluxScanSeed",
       "reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber",
       "reactor.util.function.Tuple3",
       "reactor.util.function.Tuple2",
       "reactor.util.function.Tuple5",
       "reactor.core.publisher.FluxEmpty",
       "reactor.util.function.Tuple4",
       "reactor.core.scheduler.ParallelScheduler",
       "reactor.util.function.Tuple7",
       "reactor.util.function.Tuple6",
       "reactor.core.publisher.FluxWithLatestFrom$WithLatestFromOtherSubscriber",
       "reactor.util.function.Tuple8",
       "reactor.core.publisher.FluxRange$RangeSubscription",
       "reactor.core.publisher.Operators$ScalarSubscription",
       "reactor.core.publisher.FluxTake",
       "reactor.core.publisher.SignalLogger",
       "reactor.core.publisher.BlockingIterable$SubscriberIterator",
       "reactor.core.publisher.MonoReduceSeed$ReduceSubscriber",
       "reactor.core.publisher.FluxMergeSequential$FluxMergeSequentialSupport",
       "reactor.core.scheduler.Schedulers",
       "reactor.core.publisher.MonoCancelOn",
       "reactor.core.publisher.FluxCreate",
       "reactor.core.publisher.FluxGroupJoin$JoinSupport",
       "reactor.core.publisher.FluxReplay$InnerSubscription",
       "reactor.core.publisher.MonoSubscribeOn",
       "reactor.core.publisher.FluxRange$RangeSubscriptionConditional",
       "reactor.core.publisher.FluxOnBackpressureBuffer",
       "reactor.util.concurrent.WaitStrategy$Blocking",
       "reactor.core.publisher.FluxReplay",
       "reactor.core.publisher.FluxSubscribeOnValue$ScheduledEmpty",
       "reactor.core.publisher.LambdaSubscriber",
       "reactor.core.publisher.FluxSubscribeOn$SourceSubscribeTask",
       "reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber",
       "reactor.core.publisher.FluxArray$ArrayConditionalSubscription",
       "reactor.util.concurrent.OpenHashSet",
       "reactor.core.publisher.FluxDistinctUntilChanged$DistinctUntilChangedSubscriber",
       "reactor.core.publisher.FluxUsing",
       "reactor.core.publisher.MonoWhen",
       "reactor.core.publisher.FluxOnBackpressureLatest$LatestSubscriber",
       "reactor.core.publisher.MonoDelay$MonoDelayRunnable",
       "reactor.core.publisher.ParallelUnorderedJoin",
       "reactor.core.publisher.ParallelReduceFull$ParallelReduceFullInnerSubscriber",
       "reactor.core.publisher.SequenceGroups",
       "reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber",
       "reactor.core.publisher.FluxWindow$WindowSkipSubscriber",
       "reactor.core.publisher.FluxCreate$IgnoreSink",
       "reactor.core.publisher.FluxResume$ResumeSubscriber",
       "reactor.core.publisher.MonoThenIgnore$MonoThenAcceptSubscriber",
       "reactor.core.publisher.ParallelSortedJoin$SortedJoinInnerSubscriber",
       "reactor.core.publisher.FluxBuffer$BufferSkipSubscriber",
       "reactor.core.publisher.FluxTakeFuseable",
       "reactor.core.publisher.RingBuffer$Sequence",
       "reactor.core.publisher.FluxConcatMap$ConcatMapImmediate",
       "reactor.core.publisher.MonoThenIgnore$MonoThenIgnoreMain",
       "reactor.core.publisher.FluxWindowTimeOrSize",
       "reactor.core.publisher.MonoAll$AllSubscriber",
       "reactor.core.publisher.MonoHide",
       "reactor.core.publisher.FluxWindow$WindowOverlapSubscriber",
       "reactor.core.publisher.MonoCollectList",
       "reactor.core.publisher.FluxPeek$PeekSubscriber",
       "reactor.core.publisher.FluxSkipLast$SkipLastSubscriber",
       "reactor.core.publisher.Operators$CancelledSubscription",
       "reactor.core.publisher.FluxSkipLast",
       "reactor.core.publisher.MonoSequenceEqual$EqualSubscriber",
       "reactor.core.publisher.Flux$1",
       "reactor.core.publisher.EventLoopProcessor$EventLoopFactory",
       "reactor.core.publisher.Flux$2",
       "reactor.core.publisher.Flux$3",
       "reactor.core.publisher.FluxArray",
       "reactor.core.publisher.FluxBuffer$BufferExactSubscriber",
       "reactor.core.scheduler.Schedulers$CachedTimedScheduler",
       "reactor.core.publisher.MonoCount$CountSubscriber",
       "reactor.core.publisher.FluxCreate$ErrorAsyncSink",
       "reactor.core.publisher.FluxSkipWhile$SkipWhileSubscriber",
       "reactor.core.publisher.ParallelFlux",
       "reactor.core.scheduler.ExecutorScheduler$ExecutorSchedulerWorker",
       "reactor.adapter.JdkFlowAdapter$PublisherAsFlowPublisher",
       "reactor.core.Fuseable",
       "reactor.core.publisher.ParallelUnorderedSource",
       "reactor.core.scheduler.Schedulers$CachedScheduler",
       "reactor.core.publisher.FluxDetach",
       "reactor.core.publisher.FluxPeekFuseable",
       "reactor.core.publisher.FluxAwaitOnSubscribe",
       "reactor.core.publisher.FluxFilter",
       "reactor.core.publisher.FluxFilter$FilterSubscriber",
       "reactor.core.publisher.SignalPeek",
       "reactor.core.publisher.FluxWindowOnCancel",
       "reactor.core.publisher.TopicProcessor",
       "reactor.core.publisher.FluxOnBackpressureDrop",
       "reactor.core.publisher.FluxScanSeed$ScanSubscriber",
       "reactor.core.publisher.FluxGenerate$GenerateSubscription",
       "reactor.core.publisher.MonoReduce",
       "reactor.core.publisher.ParallelReduce$ParallelReduceSubscriber",
       "reactor.core.publisher.FluxRefCount",
       "reactor.core.publisher.MonoOnAssembly",
       "reactor.core.publisher.FluxSubscribeOnCallable",
       "reactor.core.publisher.MonoSequenceEqual",
       "reactor.core.publisher.FluxSkip$SkipSubscriber",
       "reactor.core.publisher.FluxFirstEmitting$FirstEmittingSubscriber",
       "reactor.core.publisher.MonoJust",
       "reactor.core.publisher.FluxTake$TakeConditionalSubscriber",
       "reactor.core.publisher.FluxCreate$BaseSink",
       "reactor.core.publisher.FluxOnBackpressureBuffer$BackpressureBufferSubscriber",
       "reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber",
       "reactor.core.publisher.FluxSample$SampleMainSubscriber",
       "reactor.core.publisher.FluxHandle$HandleSubscriber",
       "reactor.core.publisher.FluxFlattenIterable",
       "reactor.core.publisher.MonoHasElements",
       "reactor.core.publisher.FluxPublishMulticast",
       "reactor.util.Loggers$JdkLogger",
       "reactor.core.publisher.SynchronousSink",
       "reactor.core.publisher.FluxNever",
       "reactor.core.publisher.Flux",
       "reactor.core.publisher.Wrapped",
       "reactor.core.publisher.MonoSource",
       "reactor.core.publisher.FluxMapSignal$FluxMapSignalSubscriber",
       "reactor.util.Loggers$Slf4JLoggerFactory",
       "reactor.core.publisher.MonoCreate$DefaultMonoSink",
       "reactor.core.publisher.MonoOtherwise",
       "reactor.core.publisher.FluxBufferStartEnd",
       "reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber",
       "reactor.core.publisher.FluxReplay$State",
       "reactor.core.publisher.UnicastProcessor",
       "reactor.util.concurrent.SpscArrayQueueCold",
       "reactor.core.publisher.ParallelCollect$ParallelCollectSubscriber",
       "reactor.core.publisher.MonoUsing",
       "reactor.core.publisher.FluxGroupBy",
       "reactor.core.publisher.FluxError",
       "reactor.core.publisher.MonoStreamCollector",
       "reactor.core.publisher.Value",
       "reactor.core.publisher.FluxWindowStartEnd$WindowStartEndEnder",
       "reactor.core.publisher.FluxJust$WeakScalarSubscription",
       "reactor.core.MultiProducer",
       "reactor.core.publisher.FluxMaterialize$MaterializeAction",
       "reactor.core.publisher.FluxInterval$IntervalRunnable",
       "reactor.core.publisher.FluxRetry$RetrySubscriber",
       "reactor.core.publisher.FluxRefCount$State",
       "reactor.core.publisher.MonoPublishOn$MonoPublishOnSubscriber",
       "reactor.core.publisher.FluxDelaySubscription$DelaySubscriptionOtherSubscriber$DelaySubscriptionMainSubscriber",
       "reactor.core.publisher.BlockingSingleSubscriber",
       "reactor.core.publisher.ParallelUnorderedConcatMap",
       "reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber",
       "reactor.core.publisher.FluxConcatArray",
       "reactor.core.publisher.ParallelReduce",
       "reactor.core.publisher.WorkQueueProcessor$QueueSubscriberLoop$1",
       "reactor.core.publisher.MonoElementAt",
       "reactor.core.scheduler.SingleWorkerScheduler",
       "reactor.core.publisher.FluxWithLatestFrom",
       "reactor.core.publisher.ParallelUnorderedSource$ParallelDispatcher",
       "reactor.core.publisher.FluxSample",
       "reactor.core.publisher.FluxWindow",
       "reactor.core.publisher.FluxBatch$BatchAction$1",
       "reactor.core.publisher.MonoAwaitOnSubscribe",
       "reactor.core.publisher.FluxZip$ZipSingleSubscriber",
       "reactor.core.scheduler.ExecutorServiceScheduler",
       "reactor.core.publisher.LhsPadding",
       "reactor.core.publisher.FluxPublishOn$PublishOnSubscriber",
       "reactor.core.publisher.MonoCollect$CollectSubscriber",
       "reactor.core.publisher.MonoAll",
       "reactor.core.publisher.MonoIgnoreThen",
       "reactor.core.publisher.MonoCreate",
       "reactor.core.scheduler.ExecutorServiceScheduler$ScheduledRunnable",
       "reactor.core.publisher.FluxWithLatestFrom$WithLatestFromSubscriber",
       "reactor.core.publisher.BlockingFirstSubscriber",
       "reactor.core.publisher.FluxCreate$BufferAsyncSink",
       "reactor.core.publisher.ReplayProcessor$ReplayProcessorSubscription",
       "reactor.core.publisher.FluxSwitchMap$SwitchMapMain",
       "reactor.core.publisher.FluxSampleTimeout",
       "reactor.core.publisher.FluxPublish$State",
       "reactor.core.publisher.FluxSkipUntilOther",
       "reactor.core.publisher.ReplayProcessor$SizeBoundReplayBuffer",
       "reactor.core.publisher.FluxFlatMap$FlatMapInner",
       "reactor.core.publisher.FluxWindowBoundary$WindowBoundaryOther",
       "reactor.core.publisher.FluxSkipUntilOther$SkipUntilOtherSubscriber",
       "reactor.core.scheduler.ElasticScheduler$CachedWorker",
       "reactor.core.publisher.TopicProcessor$TopicSubscriberLoop",
       "reactor.core.publisher.FluxHandle",
       "reactor.core.publisher.FluxFlatMap",
       "reactor.core.Exceptions$1",
       "reactor.core.publisher.FluxTimeout$IndexedCancellable",
       "reactor.core.publisher.FluxZipIterable$ZipSubscriber",
       "reactor.core.publisher.ReplayProcessor",
       "reactor.core.publisher.FluxCombineLatest$CombineLatestInner",
       "reactor.core.publisher.MonoFlatMap",
       "reactor.core.Fuseable$ConditionalSubscriber",
       "reactor.core.publisher.FluxZip",
       "reactor.core.publisher.MonoDefer",
       "reactor.core.publisher.FluxSkipWhile",
       "reactor.core.scheduler.ElasticScheduler",
       "reactor.core.publisher.FluxBuffer$BufferOverlappingSubscriber",
       "reactor.core.publisher.RingBufferPad",
       "reactor.core.publisher.FluxConcatMap$ConcatMapDelayed",
       "reactor.core.publisher.FluxCancelOn",
       "reactor.core.publisher.MonoMap",
       "reactor.core.publisher.MonoWhen$MonoWhenSubscriber",
       "reactor.core.publisher.FluxSkipUntilOther$SkipUntilMainSubscriber",
       "reactor.core.publisher.FluxDefer",
       "reactor.core.publisher.ParallelUnorderedJoin$JoinSubscription",
       "reactor.core.publisher.FluxTake$TakeFuseableSubscriber",
       "reactor.core.publisher.FluxSampleTimeout$ThrottleTimeoutOther",
       "reactor.core.publisher.FluxSampleFirst$ThrottleFirstOther",
       "reactor.core.publisher.FluxPublishOn$PublishOnConditionalSubscriber",
       "reactor.core.publisher.FluxBufferBoundary$BufferBoundaryOther",
       "reactor.core.scheduler.TimedScheduler",
       "reactor.core.publisher.FluxConcatArray$ConcatArrayDelayErrorSubscriber",
       "reactor.core.publisher.FluxBuffer",
       "reactor.core.publisher.MultiProducerRingBuffer",
       "reactor.core.publisher.Hooks$OnOperatorCreate",
       "reactor.core.publisher.MonoReduceSeed",
       "reactor.core.publisher.FluxAwaitOnSubscribe$PostOnSubscribeSubscriber",
       "reactor.util.function.Tuples$1",
       "reactor.core.publisher.ParallelReduceFull$ParallelReduceFullMainSubscriber",
       "reactor.core.publisher.FluxIterable",
       "reactor.core.publisher.FluxCancelOn$CancelSubscriber",
       "reactor.core.publisher.FluxArray$ArraySubscription",
       "reactor.core.publisher.FluxDematerialize$DematerializeSubscriber",
       "reactor.core.publisher.FluxFirstEmitting$RaceCoordinator",
       "reactor.core.publisher.SingleProducerSequencerPad",
       "reactor.core.scheduler.SingleTimedScheduler",
       "reactor.core.scheduler.TimedScheduler$TimedWorker",
       "reactor.core.Exceptions",
       "reactor.core.publisher.FluxConcatIterable",
       "reactor.core.publisher.ReplayProcessor$UnboundedReplayBuffer",
       "reactor.core.publisher.FluxMap$MapSubscriber",
       "reactor.util.Loggers$JdkLoggerFactory",
       "reactor.core.publisher.FluxSubscribeOnValue$ScheduledScalar",
       "reactor.core.publisher.ParallelFluxHide",
       "reactor.core.publisher.FluxDelaySubscription",
       "reactor.core.publisher.FluxCreate$1",
       "reactor.core.publisher.FluxSubscribeOn",
       "reactor.core.scheduler.SingleTimedScheduler$TimedPeriodicScheduledRunnable",
       "reactor.core.publisher.FluxBatch",
       "reactor.core.publisher.ReplayProcessor$SizeAndTimeBoundReplayBuffer$TimedNode",
       "reactor.core.publisher.Mono",
       "reactor.core.publisher.FluxDistinct",
       "reactor.core.publisher.ParallelUnorderedFrom",
       "reactor.core.publisher.MonoAny",
       "reactor.core.publisher.DirectProcessor$DirectProcessorSubscription",
       "reactor.util.concurrent.WaitStrategy$Sleeping",
       "reactor.core.scheduler.ParallelScheduler$ParallelWorker",
       "reactor.core.publisher.FluxTakeUntil",
       "reactor.core.publisher.MonoAny$AnySubscriber",
       "reactor.core.publisher.MonoElapsed",
       "reactor.core.publisher.BlockingLastSubscriber",
       "reactor.core.publisher.FluxRepeatPredicate",
       "reactor.core.publisher.FluxGroupJoin",
       "reactor.core.publisher.ParallelUnorderedSource$ParallelDispatcher$1",
       "reactor.core.publisher.FluxCombineLatest$SourceAndArray",
       "reactor.core.publisher.FluxTakeLast$TakeLastZeroSubscriber",
       "reactor.core.publisher.Signal$1",
       "reactor.core.publisher.FluxCreate$NoOverflowBaseAsyncSink",
       "reactor.core.publisher.FluxSwitchMap",
       "reactor.core.publisher.NotFunRingBufferFields",
       "reactor.core.publisher.FluxDistinctUntilChanged",
       "reactor.core.publisher.FluxConcatMap",
       "reactor.core.publisher.FluxWindow$WindowExactSubscriber",
       "reactor.core.scheduler.SingleScheduler$SingleWorker$SingleWorkerTask",
       "reactor.core.publisher.FluxRetry",
       "reactor.util.concurrent.SpscArrayQueueConsumer",
       "reactor.util.concurrent.WaitStrategy$BusySpin",
       "reactor.core.publisher.UnsafeSupport",
       "reactor.core.publisher.ReplayProcessor$ReplayBuffer",
       "reactor.util.concurrent.SpscArrayQueueP3",
       "reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber",
       "reactor.util.concurrent.SpscArrayQueueP2",
       "reactor.util.concurrent.SpscArrayQueueP1",
       "reactor.core.publisher.MonoCompletableFuture",
       "reactor.core.publisher.GroupedFlux",
       "reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber",
       "reactor.core.publisher.MonoDematerialize",
       "reactor.core.publisher.FluxElapsed",
       "reactor.adapter.JdkFlowAdapter",
       "reactor.core.publisher.MonoThenMap$MonoThenApplyMain",
       "reactor.core.publisher.FluxScan",
       "reactor.core.publisher.FluxBatch$BatchAction",
       "reactor.core.publisher.ParallelGroup$ParallelInnerGroup",
       "reactor.core.publisher.FluxGroupJoin$LeftRightSubscriber",
       "reactor.core.publisher.MonoFlatMap$FlattenSubscriber$InnerSubscriber",
       "reactor.core.publisher.FluxBufferStartEnd$BufferStartEndMainSubscriber",
       "reactor.core.publisher.FluxRetryPredicate",
       "reactor.util.concurrent.SpscLinkedArrayQueue",
       "reactor.core.publisher.FluxOnAssembly$OnAssemblyConditionalSubscriber",
       "reactor.core.publisher.MonoSubscribeOnValue",
       "reactor.core.publisher.FluxSink",
       "reactor.core.scheduler.Scheduler",
       "reactor.core.publisher.FluxCreate$DropAsyncSink",
       "reactor.core.publisher.SpscFreeListTracker",
       "reactor.core.publisher.FluxMergeSequential$MergeSequentialInner",
       "reactor.core.publisher.SignalType$1",
       "reactor.core.publisher.FluxMapFuseable",
       "reactor.core.publisher.FluxWindowStartEnd$WindowStartEndStarter",
       "reactor.core.publisher.MonoThenMap",
       "reactor.core.publisher.FluxBufferTimeOrSize$BufferAction",
       "reactor.core.publisher.FluxPublishMulticast$PublishClientSubscription",
       "reactor.core.scheduler.ExecutorScheduler",
       "reactor.core.publisher.Operators$MonoSubscriber",
       "reactor.core.publisher.MonoProcessor$NoopProcessor",
       "reactor.core.publisher.MonoThenMap$MonoThenApplyMain$SecondSubscriber",
       "reactor.core.publisher.ParallelFluxOnAssembly",
       "reactor.core.publisher.ConnectableFluxOnAssembly",
       "reactor.core.publisher.MonoStreamCollector$StreamCollectorSubscriber",
       "reactor.core.publisher.Operators",
       "reactor.core.publisher.MonoRunnable",
       "reactor.core.publisher.FluxTimeout$TimeoutOtherSubscriber",
       "reactor.core.publisher.EmitterProcessor$EmitterSubscriber",
       "reactor.core.publisher.UnsafeSequence",
       "reactor.core.publisher.FluxStream",
       "reactor.core.publisher.FluxConcatMap$1",
       "reactor.core.publisher.FluxDistinct$DistinctSubscriber",
       "reactor.core.publisher.FluxFlatMap$FlatMapMain",
       "reactor.core.publisher.MonoPeek",
       "reactor.core.publisher.MonoDefaultIfEmpty",
       "reactor.core.publisher.MonoDelaySubscription",
       "reactor.core.publisher.MonoNext$NextSubscriber",
       "reactor.core.publisher.MonoCollect",
       "reactor.core.publisher.FluxZip$ZipSingleCoordinator",
       "reactor.core.publisher.RingBufferProducer",
       "reactor.core.publisher.MonoHandle",
       "reactor.core.publisher.FluxBufferBoundary",
       "reactor.core.publisher.FluxWindowBoundary$WindowBoundaryMain",
       "reactor.core.publisher.FluxMergeSequential$MergeSequentialMain",
       "reactor.core.scheduler.ElasticScheduler$ExecutorServiceExpiry",
       "reactor.core.publisher.FluxConcatMap$ErrorMode",
       "reactor.core.publisher.FluxSwitchMap$SwitchMapInner",
       "reactor.core.publisher.DelegateProcessor",
       "reactor.core.publisher.FluxIterable$IterableSubscriptionConditional",
       "reactor.core.scheduler.SingleTimedScheduler$CancelFuture",
       "reactor.core.publisher.MonoHandleFuseable",
       "reactor.core.publisher.FluxElapsed$ElapsedSubscriber"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "org.reactivestreams:reactive-streams:jar:1.0.0:compile",
        "coordinates": "org.reactivestreams:reactive-streams:1.0.0",
        "groupId": "org.reactivestreams",
        "artifactId": "reactive-streams",
        "version": "1.0.0",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 2042,
        "type": "transitive",
        "status": "bloated",
        "parent": "io.projectreactor:reactor-core:jar:3.0.3.RELEASE:compile",
        "allTypes": [
         "org.reactivestreams.Processor",
         "org.reactivestreams.Publisher",
         "org.reactivestreams.Subscription",
         "org.reactivestreams.Subscriber"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       }
      ]
     },
     {
      "id": "io.netty:netty-common:jar:4.1.6.Final:compile",
      "coordinates": "io.netty:netty-common:4.1.6.Final",
      "groupId": "io.netty",
      "artifactId": "netty-common",
      "version": "4.1.6.Final",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 686664,
      "type": "transitive",
      "status": "bloated",
      "parent": "biz.paluch.redis:lettuce:jar:5.0.0.Beta1:compile",
      "allTypes": [
       "io.netty.util.internal.PlatformDependent0",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesTask",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Traverser",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReservationNode",
       "io.netty.util.concurrent.MultithreadEventExecutorGroup$1",
       "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction",
       "io.netty.util.collection.ShortObjectMap",
       "io.netty.util.concurrent.FastThreadLocalThread",
       "io.netty.util.concurrent.UnaryPromiseNotifier",
       "io.netty.util.collection.IntCollections$EmptyMap",
       "io.netty.util.internal.ThreadLocalRandom",
       "io.netty.util.collection.LongObjectMap",
       "io.netty.util.internal.chmv8.ForkJoinTask",
       "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue",
       "io.netty.util.internal.PromiseNotificationUtil",
       "io.netty.util.internal.PlatformDependent0$3",
       "io.netty.util.internal.PlatformDependent0$4",
       "io.netty.util.collection.ByteObjectHashMap$MapEntry",
       "io.netty.util.internal.PlatformDependent0$5",
       "io.netty.util.internal.PlatformDependent0$6",
       "io.netty.util.HashedWheelTimer$HashedWheelBucket",
       "io.netty.util.internal.PlatformDependent0$1",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachKeyTask",
       "io.netty.util.concurrent.DefaultProgressivePromise",
       "io.netty.util.internal.PlatformDependent0$2",
       "io.netty.util.internal.chmv8.ForkJoinPool$1",
       "io.netty.util.internal.chmv8.ForkJoinPool$2",
       "io.netty.util.internal.PlatformDependent0$7",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachValueTask",
       "io.netty.util.concurrent.AbstractScheduledEventExecutor",
       "io.netty.util.internal.PlatformDependent0$8",
       "io.netty.util.DomainNameMappingBuilder$1",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask",
       "io.netty.util.internal.PlatformDependent$1",
       "io.netty.util.internal.logging.JdkLoggerFactory",
       "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
       "io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode",
       "io.netty.util.concurrent.EventExecutorChooserFactory",
       "io.netty.util.internal.StringUtil",
       "io.netty.util.internal.chmv8.ForkJoinPool$EmptyTask",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchEntriesTask",
       "io.netty.util.internal.logging.AbstractInternalLogger",
       "io.netty.util.DomainNameMapping",
       "io.netty.util.internal.ThrowableUtil",
       "io.netty.util.TimerTask",
       "io.netty.util.internal.logging.FormattingTuple",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction",
       "io.netty.util.collection.LongObjectMap$PrimitiveEntry",
       "io.netty.util.ReferenceCountUtil$ReleasingTask",
       "io.netty.util.internal.logging.Log4JLoggerFactory",
       "io.netty.util.internal.UnpaddedInternalThreadLocalMap",
       "io.netty.util.HashedWheelTimer$HashedWheelTimeout",
       "io.netty.util.collection.CharObjectHashMap$2$1",
       "io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory",
       "io.netty.util.collection.LongCollections$UnmodifiableMap",
       "io.netty.util.concurrent.SingleThreadEventExecutor$5",
       "io.netty.util.concurrent.SingleThreadEventExecutor$4",
       "io.netty.util.concurrent.DefaultEventExecutor",
       "io.netty.util.collection.IntCollections$UnmodifiableMap$1",
       "io.netty.util.collection.CharCollections$UnmodifiableMap",
       "io.netty.util.concurrent.SingleThreadEventExecutor$1",
       "io.netty.util.concurrent.SingleThreadEventExecutor$3",
       "io.netty.util.concurrent.SingleThreadEventExecutor$2",
       "io.netty.util.collection.CharObjectHashMap$KeySet",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToIntTask",
       "io.netty.util.concurrent.Future",
       "io.netty.util.HashingStrategy$1",
       "io.netty.util.collection.IntCollections$1",
       "io.netty.util.concurrent.DefaultThreadFactory",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToIntTask",
       "io.netty.util.collection.ShortObjectHashMap",
       "io.netty.util.ThreadDeathWatcher$1",
       "io.netty.util.collection.IntObjectHashMap$1",
       "io.netty.util.collection.IntObjectHashMap$2",
       "io.netty.util.Recycler$Handle",
       "io.netty.util.internal.UnsafeAtomicLongFieldUpdater",
       "io.netty.util.internal.chmv8.ForkJoinPool$WorkQueue",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator",
       "io.netty.util.internal.PlatformDependent$AtomicLongCounter",
       "io.netty.util.internal.PriorityQueueNode",
       "io.netty.util.internal.MacAddressUtil",
       "io.netty.util.internal.logging.CommonsLogger",
       "io.netty.util.collection.ShortObjectHashMap$EntrySet",
       "io.netty.util.concurrent.PromiseTask$RunnableAdapter",
       "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad0",
       "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad1",
       "io.netty.util.internal.ReadOnlyIterator",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySpliterator",
       "io.netty.util.collection.ByteObjectHashMap$EntrySet",
       "io.netty.util.NetUtil$1",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Action",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceKeysTask",
       "io.netty.util.collection.ShortObjectHashMap$MapEntry",
       "io.netty.util.collection.LongCollections$UnmodifiableMap$1",
       "io.netty.util.collection.CharObjectHashMap$MapIterator",
       "io.netty.util.internal.InternalThreadLocalMap",
       "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToIntTask",
       "io.netty.util.ResourceLeak",
       "io.netty.util.HashingStrategy",
       "io.netty.util.internal.MathUtil",
       "io.netty.util.ThreadDeathWatcher$Watcher",
       "io.netty.util.concurrent.BlockingOperationException",
       "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueConsumerField",
       "io.netty.util.collection.ByteObjectHashMap$MapIterator",
       "io.netty.util.collection.ShortObjectMap$PrimitiveEntry",
       "io.netty.util.collection.IntCollections$UnmodifiableMap",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedValueTask",
       "io.netty.util.collection.ShortObjectHashMap$PrimitiveIterator",
       "io.netty.util.BooleanSupplier$1",
       "io.netty.util.DomainMappingBuilder",
       "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier",
       "io.netty.util.BooleanSupplier$2",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$1",
       "io.netty.util.internal.shaded.org.jctools.queues.QueueProgressIndicators",
       "io.netty.util.collection.ShortCollections$UnmodifiableMap",
       "io.netty.util.collection.ShortCollections$EmptyMap",
       "io.netty.util.concurrent.DefaultPromise$2",
       "io.netty.util.concurrent.DefaultPromise$1",
       "io.netty.util.collection.ShortCollections$UnmodifiableMap$EntryImpl",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueSpliterator",
       "io.netty.util.collection.ByteObjectHashMap",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node",
       "io.netty.util.AsciiString",
       "io.netty.util.AsciiString$DefaultCharEqualityComparator",
       "io.netty.util.concurrent.DefaultPromise$4",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToDoubleTask",
       "io.netty.util.concurrent.DefaultPromise$3",
       "io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory$1",
       "io.netty.util.internal.chmv8.ForkJoinWorkerThread",
       "io.netty.util.concurrent.DefaultEventExecutorGroup",
       "io.netty.util.CharsetUtil",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeBin",
       "io.netty.util.concurrent.UnorderedThreadPoolEventExecutor$RunnableScheduledFutureTask",
       "io.netty.util.ThreadDeathWatcher$Entry",
       "io.netty.util.concurrent.GenericProgressiveFutureListener",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt",
       "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue",
       "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue",
       "io.netty.util.internal.shaded.org.jctools.queues.SparsePaddedCircularArrayOffsetCalculator",
       "io.netty.util.collection.IntObjectHashMap$MapEntry",
       "io.netty.util.collection.CharCollections$1",
       "io.netty.util.ReferenceCountUtil",
       "io.netty.util.concurrent.ProgressivePromise",
       "io.netty.util.collection.ShortCollections$1",
       "io.netty.util.collection.IntObjectHashMap$EntrySet",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachMappingTask",
       "io.netty.util.Constant",
       "io.netty.util.concurrent.RejectedExecutionHandlers$1",
       "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue",
       "io.netty.util.concurrent.CompleteFuture",
       "io.netty.util.concurrent.RejectedExecutionHandlers$2",
       "io.netty.util.collection.ByteObjectHashMap$KeySet",
       "io.netty.util.ResourceLeakException",
       "io.netty.util.Recycler$DefaultHandle",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceValuesTask",
       "io.netty.util.collection.LongObjectHashMap$2$1",
       "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscLinkedAtomicQueue",
       "io.netty.util.collection.LongObjectHashMap$PrimitiveIterator",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueMidPad",
       "io.netty.util.concurrent.ImmediateEventExecutor$2",
       "io.netty.util.concurrent.ImmediateEventExecutor$1",
       "io.netty.util.internal.UnsafeAtomicIntegerFieldUpdater",
       "io.netty.util.collection.IntObjectHashMap$KeySet",
       "io.netty.util.collection.CharCollections$UnmodifiableMap$IteratorImpl",
       "io.netty.util.internal.UnsafeAtomicReferenceFieldUpdater",
       "io.netty.util.collection.ByteCollections$UnmodifiableMap$1",
       "io.netty.util.ByteProcessor$IndexOfProcessor",
       "io.netty.util.concurrent.SingleThreadEventExecutor",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysTask",
       "io.netty.util.ByteProcessor",
       "io.netty.util.Recycler$WeakOrderQueue$Link",
       "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueueL0Pad",
       "io.netty.util.collection.ByteObjectHashMap$KeySet$1",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchValuesTask",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue",
       "io.netty.util.internal.RecyclableArrayList$1",
       "io.netty.util.internal.logging.InternalLoggerFactory",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterHashCode",
       "io.netty.util.collection.ByteCollections",
       "io.netty.util.collection.ByteCollections$1",
       "io.netty.util.Recycler$WeakOrderQueue",
       "io.netty.util.internal.chmv8.Striped64",
       "io.netty.util.HashedWheelTimer$1",
       "io.netty.util.internal.logging.Log4JLogger",
       "io.netty.util.internal.NativeLibraryUtil",
       "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueue",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView",
       "io.netty.util.DomainNameMappingBuilder",
       "io.netty.util.internal.AppendableCharSequence",
       "io.netty.util.concurrent.PromiseCombiner",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueColdProducerFields",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator",
       "io.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory",
       "io.netty.util.HashedWheelTimer",
       "io.netty.util.internal.NativeLibraryLoader",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask",
       "io.netty.util.DefaultAttributeMap$DefaultAttribute",
       "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentSequencedCircularArrayQueue",
       "io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise",
       "io.netty.util.HashedWheelTimer$Worker",
       "io.netty.util.internal.RecyclableArrayList",
       "io.netty.util.collection.CharCollections",
       "io.netty.util.collection.ShortCollections$UnmodifiableMap$1",
       "io.netty.util.IntSupplier",
       "io.netty.util.collection.LongCollections$UnmodifiableMap$EntryImpl",
       "io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode",
       "io.netty.util.concurrent.DefaultEventExecutorChooserFactory$GenericEventExecutorChooser",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToLongTask",
       "io.netty.util.concurrent.PromiseCombiner$1",
       "io.netty.util.internal.ConstantTimeUtils",
       "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchKeysTask",
       "io.netty.util.collection.ShortObjectHashMap$KeySet$1",
       "io.netty.util.NetUtil",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun",
       "io.netty.util.concurrent.DefaultEventExecutorChooserFactory",
       "io.netty.util.internal.logging.Log4J2LoggerFactory",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueConsumerFields",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsTask",
       "io.netty.util.concurrent.FailedFuture",
       "io.netty.util.internal.SystemPropertyUtil$1",
       "io.netty.util.AttributeMap",
       "io.netty.util.IllegalReferenceCountException",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL1Pad",
       "io.netty.util.collection.ShortObjectHashMap$KeySet",
       "io.netty.util.internal.logging.CommonsLoggerFactory",
       "io.netty.util.concurrent.ScheduledFuture",
       "io.netty.util.collection.CharObjectHashMap$PrimitiveIterator",
       "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable",
       "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition",
       "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueL1Pad",
       "io.netty.util.internal.TypeParameterMatcher",
       "io.netty.util.concurrent.AbstractEventExecutorGroup",
       "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue",
       "io.netty.util.internal.NativeLibraryLoader$1",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedKeyTask",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchMappingsTask",
       "io.netty.util.internal.NativeLibraryLoader$2",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToLongTask",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode",
       "io.netty.util.internal.PriorityQueue$1",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceEntriesTask",
       "io.netty.util.collection.LongObjectHashMap$KeySet",
       "io.netty.util.ByteProcessor$1",
       "io.netty.util.internal.logging.InternalLogger",
       "io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator",
       "io.netty.util.concurrent.EventExecutor",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView",
       "io.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction",
       "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef",
       "io.netty.util.collection.ByteCollections$UnmodifiableMap",
       "io.netty.util.internal.ThreadLocalRandom$3",
       "io.netty.util.internal.LongCounter",
       "io.netty.util.internal.ThreadLocalRandom$4",
       "io.netty.util.ByteProcessor$4",
       "io.netty.util.ByteProcessor$3",
       "io.netty.util.internal.ThreadLocalRandom$1",
       "io.netty.util.ByteProcessor$2",
       "io.netty.util.internal.ThreadLocalRandom$2",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedMappingTask",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedEntryTask",
       "io.netty.util.ResourceLeakHint",
       "io.netty.util.internal.logging.Log4J2Logger",
       "io.netty.util.collection.CharObjectHashMap$KeySet$1",
       "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer",
       "io.netty.util.collection.ShortObjectHashMap$1",
       "io.netty.util.concurrent.ImmediateEventExecutor",
       "io.netty.util.collection.ShortObjectHashMap$2",
       "io.netty.util.Recycler$3",
       "io.netty.util.Recycler$1",
       "io.netty.util.Recycler$2",
       "io.netty.util.Attribute",
       "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner",
       "io.netty.util.concurrent.AbstractFuture",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL2Pad",
       "io.netty.util.Signal$1",
       "io.netty.util.ReferenceCounted",
       "io.netty.util.concurrent.DefaultFutureListeners",
       "io.netty.util.internal.NoOpTypeParameterMatcher",
       "io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess",
       "io.netty.util.collection.CharCollections$EmptyMap",
       "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueL2Pad",
       "io.netty.util.ResourceLeakDetectorFactory",
       "io.netty.util.collection.IntObjectHashMap$KeySet$1",
       "io.netty.util.collection.LongCollections",
       "io.netty.util.internal.JavassistTypeParameterMatcherGenerator",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesTask",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForwardingNode",
       "io.netty.util.internal.ConcurrentSet",
       "io.netty.util.internal.chmv8.ForkJoinPool",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Segment",
       "io.netty.util.AbstractConstant",
       "io.netty.util.AsciiString$GeneralCaseInsensitiveCharEqualityComparator",
       "io.netty.util.concurrent.GlobalEventExecutor",
       "io.netty.util.collection.CharObjectMap",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueuePad2",
       "io.netty.util.internal.Cleaner0",
       "io.netty.util.collection.LongObjectHashMap$KeySet$1",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueuePad3",
       "io.netty.util.internal.PlatformDependent",
       "io.netty.util.collection.ByteCollections$EmptyMap",
       "io.netty.util.concurrent.OrderedEventExecutor",
       "io.netty.util.concurrent.UnorderedThreadPoolEventExecutor",
       "io.netty.util.collection.CharCollections$UnmodifiableMap$EntryImpl",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueuePad1",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachEntryTask",
       "io.netty.util.AsciiString$AsciiCaseInsensitiveCharEqualityComparator",
       "io.netty.util.collection.IntCollections",
       "io.netty.util.Version",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask",
       "io.netty.util.collection.ByteObjectMap",
       "io.netty.util.collection.CharObjectHashMap",
       "io.netty.util.collection.CharObjectMap$PrimitiveEntry",
       "io.netty.util.collection.ShortObjectHashMap$MapIterator",
       "io.netty.util.AsciiString$2",
       "io.netty.util.internal.PriorityQueue",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterCell",
       "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToLongTask",
       "io.netty.util.AsciiString$1",
       "io.netty.util.concurrent.AbstractEventExecutor",
       "io.netty.util.collection.ByteObjectHashMap$PrimitiveIterator",
       "io.netty.util.collection.IntObjectMap",
       "io.netty.util.collection.ByteCollections$UnmodifiableMap$EntryImpl",
       "io.netty.util.ThreadDeathWatcher",
       "io.netty.util.collection.ShortCollections$UnmodifiableMap$IteratorImpl",
       "io.netty.util.internal.logging.MessageFormatter",
       "io.netty.util.concurrent.GenericFutureListener",
       "io.netty.util.collection.IntObjectHashMap$MapIterator",
       "io.netty.util.collection.IntObjectMap$PrimitiveEntry",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong",
       "io.netty.util.collection.LongObjectHashMap$2",
       "io.netty.util.collection.ByteCollections$UnmodifiableMap$IteratorImpl",
       "io.netty.util.collection.LongObjectHashMap$1",
       "io.netty.util.ByteProcessor$IndexNotOfProcessor",
       "io.netty.util.concurrent.GlobalEventExecutor$1",
       "io.netty.util.AttributeKey",
       "io.netty.util.concurrent.ScheduledFutureTask",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueProducerFields",
       "io.netty.util.concurrent.RejectedExecutionHandlers",
       "io.netty.util.concurrent.PromiseNotifier",
       "io.netty.util.collection.ByteObjectMap$PrimitiveEntry",
       "io.netty.util.collection.CharCollections$UnmodifiableMap$1",
       "io.netty.util.collection.CharObjectHashMap$EntrySet",
       "io.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode",
       "io.netty.util.collection.LongCollections$1",
       "io.netty.util.collection.IntObjectHashMap",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySpliterator",
       "io.netty.util.concurrent.RejectedExecutionHandler",
       "io.netty.util.internal.logging.Slf4JLoggerFactory",
       "io.netty.util.concurrent.SucceededFuture",
       "io.netty.util.collection.LongCollections$EmptyMap",
       "io.netty.util.collection.ByteObjectHashMap$2",
       "io.netty.util.collection.ByteObjectHashMap$1",
       "io.netty.util.concurrent.DefaultPromise$CauseHolder",
       "io.netty.util.Recycler",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueTailField",
       "io.netty.util.collection.LongObjectHashMap$MapIterator",
       "io.netty.util.AttributeKey$1",
       "io.netty.util.internal.shaded.org.jctools.util.Pow2",
       "io.netty.util.concurrent.NonStickyEventExecutorGroup",
       "io.netty.util.concurrent.ThreadProperties",
       "io.netty.util.internal.chmv8.Striped64$1",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueHeadLimitField",
       "io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping",
       "io.netty.util.internal.shaded.org.jctools.util.JvmInfo",
       "io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue",
       "io.netty.util.ResourceLeakDetector$Level",
       "io.netty.util.internal.chmv8.LongAdderV8",
       "io.netty.util.concurrent.ProgressiveFuture",
       "io.netty.util.internal.chmv8.ForkJoinTask$1",
       "io.netty.util.internal.PlatformDependent$Mpsc",
       "io.netty.util.concurrent.PromiseTask",
       "io.netty.util.internal.logging.AbstractInternalLogger$1",
       "io.netty.util.internal.PendingWrite$1",
       "io.netty.util.internal.shaded.org.jctools.queues.CircularArrayOffsetCalculator",
       "io.netty.util.internal.EmptyArrays",
       "io.netty.util.concurrent.NonStickyEventExecutorGroup$1",
       "io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher",
       "io.netty.util.internal.chmv8.ForkJoinPool$DefaultForkJoinWorkerThreadFactory",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToIntTask",
       "io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise",
       "io.netty.util.concurrent.Promise",
       "io.netty.util.internal.logging.Slf4JLoggerFactory$1",
       "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable",
       "io.netty.util.collection.CharObjectHashMap$1",
       "io.netty.util.collection.ByteObjectHashMap$2$1",
       "io.netty.util.collection.CharObjectHashMap$2",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToLongTask",
       "io.netty.util.internal.PriorityQueue$PriorityQueueIterator",
       "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef",
       "io.netty.util.collection.CharObjectHashMap$MapEntry",
       "io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry",
       "io.netty.util.collection.IntCollections$UnmodifiableMap$IteratorImpl",
       "io.netty.util.ConstantPool",
       "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator",
       "io.netty.util.collection.ShortCollections",
       "io.netty.util.collection.LongObjectHashMap",
       "io.netty.util.BooleanSupplier",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView",
       "io.netty.util.internal.UnstableApi",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue",
       "io.netty.util.internal.chmv8.CountedCompleter$1",
       "io.netty.util.internal.ObjectUtil",
       "io.netty.util.internal.logging.JdkLogger",
       "io.netty.util.Mapping",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble",
       "io.netty.util.internal.chmv8.CountedCompleter",
       "io.netty.util.concurrent.FutureListener",
       "io.netty.util.AsciiString$CharEqualityComparator",
       "io.netty.util.internal.logging.InternalLogLevel",
       "io.netty.util.ResourceLeakDetector",
       "io.netty.util.concurrent.PromiseAggregator",
       "io.netty.util.concurrent.DefaultPromise",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong",
       "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueProducerField",
       "io.netty.util.Timer",
       "io.netty.util.collection.IntCollections$UnmodifiableMap$EntryImpl",
       "io.netty.util.AsyncMapping",
       "io.netty.util.collection.IntObjectHashMap$2$1",
       "io.netty.util.concurrent.ImmediateExecutor",
       "io.netty.util.concurrent.MultithreadEventExecutorGroup",
       "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerField",
       "io.netty.util.Recycler$Stack",
       "io.netty.util.AbstractReferenceCounted",
       "io.netty.util.collection.ShortObjectHashMap$2$1",
       "io.netty.util.collection.LongObjectHashMap$EntrySet",
       "io.netty.util.internal.logging.Slf4JLogger",
       "io.netty.util.concurrent.DefaultEventExecutorChooserFactory$PowerOfTowEventExecutorChooser",
       "io.netty.util.internal.chmv8.ForkJoinPool$ManagedBlocker",
       "io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser",
       "io.netty.util.DefaultAttributeMap",
       "io.netty.util.concurrent.FastThreadLocal",
       "io.netty.util.internal.OutOfDirectMemoryError",
       "io.netty.util.concurrent.AbstractScheduledEventExecutor$2",
       "io.netty.util.internal.IntegerHolder",
       "io.netty.util.concurrent.AbstractScheduledEventExecutor$1",
       "io.netty.util.Timeout",
       "io.netty.util.internal.PlatformDependent$Mpsc$1",
       "io.netty.util.collection.LongObjectHashMap$MapEntry",
       "io.netty.util.internal.chmv8.Striped64$Cell",
       "io.netty.util.internal.PendingWrite",
       "io.netty.util.concurrent.EventExecutorGroup",
       "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy",
       "io.netty.util.internal.shaded.org.jctools.queues.PaddedCircularArrayOffsetCalculator",
       "io.netty.util.concurrent.SingleThreadEventExecutor$DefaultThreadProperties",
       "io.netty.util.internal.SystemPropertyUtil",
       "io.netty.util.concurrent.ThreadPerTaskExecutor",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt",
       "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToDoubleTask",
       "io.netty.util.collection.LongCollections$UnmodifiableMap$IteratorImpl",
       "io.netty.util.Signal",
       "io.netty.util.Signal$SignalConstant"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": []
     },
     {
      "id": "io.netty:netty-transport:jar:4.1.6.Final:compile",
      "coordinates": "io.netty:netty-transport:4.1.6.Final",
      "groupId": "io.netty",
      "artifactId": "netty-transport",
      "version": "4.1.6.Final",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 427007,
      "type": "transitive",
      "status": "bloated",
      "parent": "biz.paluch.redis:lettuce:jar:5.0.0.Beta1:compile",
      "allTypes": [
       "io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException",
       "io.netty.channel.pool.FixedChannelPool$AcquireTask",
       "io.netty.channel.group.DefaultChannelGroup",
       "io.netty.channel.ChannelInboundHandlerAdapter",
       "io.netty.bootstrap.Bootstrap$2",
       "io.netty.bootstrap.Bootstrap$3",
       "io.netty.channel.DefaultMessageSizeEstimator$1",
       "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask",
       "io.netty.channel.socket.DatagramChannel",
       "io.netty.channel.socket.oio.OioSocketChannel$3",
       "io.netty.channel.socket.oio.OioSocketChannel$2",
       "io.netty.channel.socket.oio.OioSocketChannel$1",
       "io.netty.channel.nio.NioEventLoop$1",
       "io.netty.channel.socket.InternetProtocolFamily",
       "io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig",
       "io.netty.channel.nio.NioEventLoop$2",
       "io.netty.channel.nio.NioEventLoop$3",
       "io.netty.channel.nio.NioEventLoop$4",
       "io.netty.channel.nio.NioEventLoop$5",
       "io.netty.channel.nio.NioEventLoop$6",
       "io.netty.channel.MaxMessagesRecvByteBufAllocator",
       "io.netty.bootstrap.Bootstrap$1",
       "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1",
       "io.netty.channel.ChannelOutboundHandlerAdapter",
       "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2",
       "io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint",
       "io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1",
       "io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise",
       "io.netty.channel.group.ChannelMatchers$ClassMatcher",
       "io.netty.channel.oio.AbstractOioMessageChannel",
       "io.netty.channel.pool.ChannelHealthChecker",
       "io.netty.channel.ChannelOutboundBuffer$MessageProcessor",
       "io.netty.channel.AbstractChannelHandlerContext$WriteTask",
       "io.netty.channel.ChannelPipelineException",
       "io.netty.channel.socket.ServerSocketChannelConfig",
       "io.netty.channel.PendingWriteQueue$PendingWrite",
       "io.netty.channel.socket.nio.NioDatagramChannel",
       "io.netty.channel.pool.AbstractChannelPoolHandler",
       "io.netty.channel.group.VoidChannelGroupFuture",
       "io.netty.bootstrap.BootstrapConfig",
       "io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator",
       "io.netty.channel.ChannelOption",
       "io.netty.channel.SucceededChannelFuture",
       "io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction",
       "io.netty.channel.embedded.EmbeddedChannel$1",
       "io.netty.channel.embedded.EmbeddedChannel$2",
       "io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl",
       "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask",
       "io.netty.channel.socket.oio.OioSocketChannel",
       "io.netty.channel.group.ChannelMatcher",
       "io.netty.channel.AbstractChannelHandlerContext",
       "io.netty.channel.CoalescingBufferQueue",
       "io.netty.channel.ChannelMetadata",
       "io.netty.channel.ChannelOutboundBuffer$1",
       "io.netty.channel.ThreadPerChannelEventLoopGroup$1",
       "io.netty.channel.ChannelOutboundBuffer$2",
       "io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint",
       "io.netty.channel.ChannelOutboundBuffer$3",
       "io.netty.channel.CombinedChannelDuplexHandler",
       "io.netty.channel.ChannelOutboundHandler",
       "io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask",
       "io.netty.channel.SelectStrategy",
       "io.netty.channel.ThreadPerChannelEventLoopGroup",
       "io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig",
       "io.netty.channel.socket.nio.NioSocketChannel$1",
       "io.netty.channel.oio.AbstractOioChannel$DefaultOioUnsafe",
       "io.netty.channel.pool.SimpleChannelPool",
       "io.netty.channel.SimpleChannelInboundHandler",
       "io.netty.channel.nio.NioEventLoop",
       "io.netty.channel.pool.ChannelPool",
       "io.netty.channel.nio.AbstractNioByteChannel",
       "io.netty.channel.socket.oio.OioServerSocketChannelConfig",
       "io.netty.channel.MultithreadEventLoopGroup",
       "io.netty.channel.embedded.EmbeddedChannel$State",
       "io.netty.channel.ChannelId",
       "io.netty.channel.embedded.EmbeddedChannel$EmbeddedChannelPipeline",
       "io.netty.channel.embedded.EmbeddedEventLoop",
       "io.netty.channel.local.LocalServerChannel$1",
       "io.netty.channel.local.LocalServerChannel$2",
       "io.netty.channel.DefaultChannelProgressivePromise",
       "io.netty.channel.socket.nio.NioSocketChannel$5",
       "io.netty.channel.MessageSizeEstimator",
       "io.netty.channel.socket.nio.NioSocketChannel$4",
       "io.netty.channel.socket.nio.NioSocketChannel$3",
       "io.netty.channel.ChannelProgressiveFuture",
       "io.netty.channel.socket.nio.NioSocketChannel$2",
       "io.netty.channel.MaxBytesRecvByteBufAllocator",
       "io.netty.channel.socket.nio.NioSocketChannel$6",
       "io.netty.channel.socket.DatagramPacket",
       "io.netty.channel.pool.ChannelPoolHandler",
       "io.netty.channel.group.ChannelMatchers$1",
       "io.netty.channel.socket.nio.NioServerSocketChannel$1",
       "io.netty.bootstrap.AbstractBootstrap$2",
       "io.netty.bootstrap.AbstractBootstrap$1",
       "io.netty.channel.AbstractEventLoop",
       "io.netty.channel.ConnectTimeoutException",
       "io.netty.channel.ChannelHandlerAdapter",
       "io.netty.channel.socket.nio.NioServerSocketChannel",
       "io.netty.channel.AbstractChannel$AbstractUnsafe",
       "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1",
       "io.netty.channel.EventLoop",
       "io.netty.channel.nio.AbstractNioMessageChannel",
       "io.netty.channel.nio.NioEventLoopGroup",
       "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext",
       "io.netty.channel.local.LocalChannel$6",
       "io.netty.channel.embedded.EmbeddedSocketAddress",
       "io.netty.channel.local.LocalChannel$2",
       "io.netty.channel.local.LocalEventLoopGroup",
       "io.netty.channel.nio.AbstractNioMessageChannel$1",
       "io.netty.channel.local.LocalChannel$3",
       "io.netty.channel.local.LocalChannel$4",
       "io.netty.channel.SingleThreadEventLoop",
       "io.netty.channel.local.LocalChannel$5",
       "io.netty.channel.DefaultFileRegion",
       "io.netty.channel.PendingWriteQueue$1",
       "io.netty.channel.local.LocalChannel$1",
       "io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1",
       "io.netty.channel.ChannelFutureListener$3",
       "io.netty.channel.ChannelFutureListener$2",
       "io.netty.channel.socket.oio.OioDatagramChannel",
       "io.netty.channel.ChannelFutureListener$1",
       "io.netty.channel.socket.ChannelInputShutdownEvent",
       "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1",
       "io.netty.channel.socket.oio.DefaultOioSocketChannelConfig",
       "io.netty.channel.ChannelHandlerContext",
       "io.netty.channel.FixedRecvByteBufAllocator",
       "io.netty.bootstrap.ServerBootstrap$1",
       "io.netty.channel.ChannelFutureListener",
       "io.netty.channel.AbstractChannelHandlerContext$WriteTask$1",
       "io.netty.channel.AdaptiveRecvByteBufAllocator",
       "io.netty.channel.pool.FixedChannelPool$TimeoutTask",
       "io.netty.channel.nio.AbstractNioChannel",
       "io.netty.channel.FileRegion",
       "io.netty.channel.nio.AbstractNioChannel$NioUnsafe",
       "io.netty.channel.ChannelProgressivePromise",
       "io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe",
       "io.netty.channel.EventLoopGroup",
       "io.netty.channel.embedded.EmbeddedChannelId",
       "io.netty.channel.AbstractServerChannel$DefaultServerUnsafe",
       "io.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry",
       "io.netty.channel.oio.OioByteStreamChannel$2",
       "io.netty.channel.oio.OioByteStreamChannel$1",
       "io.netty.channel.Channel$Unsafe",
       "io.netty.channel.VoidChannelPromise",
       "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1",
       "io.netty.channel.oio.AbstractOioByteChannel",
       "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2",
       "io.netty.bootstrap.ServerBootstrap$1$1",
       "io.netty.channel.group.ChannelMatchers$InvertMatcher",
       "io.netty.channel.FixedRecvByteBufAllocator$HandleImpl",
       "io.netty.channel.ChannelOutboundBuffer$Entry$1",
       "io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe",
       "io.netty.channel.nio.SelectedSelectionKeySet",
       "io.netty.channel.local.LocalServerChannel",
       "io.netty.channel.ChannelInboundHandler",
       "io.netty.channel.socket.oio.OioServerSocketChannel",
       "io.netty.bootstrap.AbstractBootstrapConfig",
       "io.netty.channel.socket.oio.OioSocketChannelConfig",
       "io.netty.channel.DefaultMessageSizeEstimator",
       "io.netty.channel.DefaultMaxBytesRecvByteBufAllocator",
       "io.netty.channel.local.LocalAddress",
       "io.netty.channel.AbstractServerChannel$1",
       "io.netty.channel.FailedChannelFuture",
       "io.netty.channel.DefaultChannelHandlerContext",
       "io.netty.channel.socket.SocketChannel",
       "io.netty.channel.local.LocalChannel$State",
       "io.netty.channel.ChannelHandler$Sharable",
       "io.netty.channel.AbstractChannel$AnnotatedSocketException",
       "io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback",
       "io.netty.channel.RecvByteBufAllocator",
       "io.netty.channel.ChannelPipeline",
       "io.netty.channel.oio.OioByteStreamChannel",
       "io.netty.channel.RecvByteBufAllocator$DelegatingHandle",
       "io.netty.channel.ServerChannel",
       "io.netty.channel.socket.nio.ProtocolFamilyConverter$1",
       "io.netty.channel.nio.AbstractNioByteChannel$1",
       "io.netty.channel.embedded.EmbeddedChannel$DefaultUnsafe",
       "io.netty.channel.ChannelException",
       "io.netty.channel.ChannelFlushPromiseNotifier",
       "io.netty.channel.AbstractChannelHandlerContext$2",
       "io.netty.channel.AbstractChannelHandlerContext$1",
       "io.netty.channel.ChannelProgressiveFutureListener",
       "io.netty.channel.pool.FixedChannelPool$AcquireListener",
       "io.netty.channel.AbstractChannelHandlerContext$4",
       "io.netty.channel.AbstractChannelHandlerContext$3",
       "io.netty.channel.AbstractChannelHandlerContext$6",
       "io.netty.channel.ThreadPerChannelEventLoop$1",
       "io.netty.channel.AbstractChannelHandlerContext$5",
       "io.netty.channel.ThreadPerChannelEventLoop$2",
       "io.netty.channel.VoidChannelPromise$1",
       "io.netty.channel.AbstractChannelHandlerContext$8",
       "io.netty.channel.AbstractChannelHandlerContext$7",
       "io.netty.channel.pool.ChannelPoolMap",
       "io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle",
       "io.netty.channel.AbstractChannelHandlerContext$9",
       "io.netty.channel.CompleteChannelFuture",
       "io.netty.channel.ChannelOption$1",
       "io.netty.channel.DefaultEventLoop",
       "io.netty.channel.AbstractChannel",
       "io.netty.channel.AddressedEnvelope",
       "io.netty.bootstrap.ChannelFactory",
       "io.netty.channel.MessageSizeEstimator$Handle",
       "io.netty.channel.socket.ServerSocketChannel",
       "io.netty.channel.PendingWriteQueue$PendingWrite$1",
       "io.netty.channel.ThreadPerChannelEventLoop",
       "io.netty.channel.ChannelFactory",
       "io.netty.channel.DefaultSelectStrategyFactory",
       "io.netty.channel.group.DefaultChannelGroupFuture$1",
       "io.netty.channel.group.ChannelGroupException",
       "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe",
       "io.netty.channel.DefaultEventLoopGroup",
       "io.netty.channel.local.LocalChannelRegistry",
       "io.netty.channel.AbstractChannel$AnnotatedConnectException",
       "io.netty.channel.Channel",
       "io.netty.bootstrap.Bootstrap",
       "io.netty.channel.RecvByteBufAllocator$Handle",
       "io.netty.channel.ReflectiveChannelFactory",
       "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask",
       "io.netty.channel.group.ChannelGroupFuture",
       "io.netty.channel.local.LocalChannel$LocalUnsafe",
       "io.netty.channel.AbstractChannel$AbstractUnsafe$1",
       "io.netty.channel.pool.ChannelHealthChecker$1",
       "io.netty.channel.DefaultAddressedEnvelope",
       "io.netty.channel.DefaultChannelPipeline$TailContext",
       "io.netty.channel.DefaultChannelConfig",
       "io.netty.channel.AbstractChannel$AbstractUnsafe$7",
       "io.netty.channel.AbstractChannelHandlerContext$11",
       "io.netty.channel.AbstractChannel$AbstractUnsafe$6",
       "io.netty.channel.AbstractChannelHandlerContext$10",
       "io.netty.channel.AbstractChannelHandlerContext$13",
       "io.netty.channel.nio.NioTask",
       "io.netty.channel.AbstractServerChannel",
       "io.netty.channel.AbstractChannelHandlerContext$12",
       "io.netty.channel.AbstractChannel$AbstractUnsafe$8",
       "io.netty.channel.AbstractChannel$AbstractUnsafe$3",
       "io.netty.channel.AbstractChannel$AbstractUnsafe$2",
       "io.netty.channel.AbstractChannel$AbstractUnsafe$5",
       "io.netty.channel.AbstractChannel$AbstractUnsafe$4",
       "io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe",
       "io.netty.channel.DefaultMessageSizeEstimator$HandleImpl",
       "io.netty.channel.ChannelPromise",
       "io.netty.channel.local.LocalChannel",
       "io.netty.channel.socket.DefaultSocketChannelConfig",
       "io.netty.channel.pool.FixedChannelPool",
       "io.netty.bootstrap.AbstractBootstrap",
       "io.netty.channel.SelectStrategyFactory",
       "io.netty.channel.DefaultChannelPromise",
       "io.netty.channel.group.CombinedIterator",
       "io.netty.channel.ChannelDuplexHandler",
       "io.netty.channel.pool.SimpleChannelPool$3",
       "io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl",
       "io.netty.channel.pool.SimpleChannelPool$2",
       "io.netty.channel.DefaultChannelId",
       "io.netty.channel.pool.SimpleChannelPool$5",
       "io.netty.channel.group.ChannelGroup",
       "io.netty.channel.pool.SimpleChannelPool$4",
       "io.netty.channel.ChannelInitializer",
       "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
       "io.netty.channel.pool.SimpleChannelPool$6",
       "io.netty.channel.oio.AbstractOioChannel",
       "io.netty.channel.group.DefaultChannelGroup$1",
       "io.netty.channel.pool.SimpleChannelPool$1",
       "io.netty.channel.ChannelOutboundBuffer",
       "io.netty.channel.AbstractChannelHandlerContext$15",
       "io.netty.channel.AbstractChannelHandlerContext$14",
       "io.netty.channel.AbstractChannelHandlerContext$16",
       "io.netty.channel.ChannelOutboundInvoker",
       "io.netty.channel.CombinedChannelDuplexHandler$1",
       "io.netty.channel.ChannelOutboundBuffer$Entry",
       "io.netty.channel.DefaultChannelPipeline",
       "io.netty.bootstrap.ServerBootstrapConfig",
       "io.netty.channel.group.ChannelGroupFutureListener",
       "io.netty.channel.socket.nio.NioSocketChannel",
       "io.netty.channel.nio.AbstractNioChannel$2",
       "io.netty.channel.WriteBufferWaterMark",
       "io.netty.channel.AbstractEventLoopGroup",
       "io.netty.channel.socket.SocketChannelConfig",
       "io.netty.channel.socket.DefaultServerSocketChannelConfig",
       "io.netty.channel.pool.FixedChannelPool$6",
       "io.netty.channel.nio.AbstractNioChannel$1",
       "io.netty.channel.socket.nio.NioDatagramChannelConfig",
       "io.netty.channel.pool.FixedChannelPool$3",
       "io.netty.channel.pool.FixedChannelPool$2",
       "io.netty.channel.EventLoopException",
       "io.netty.channel.DefaultChannelPipeline$HeadContext",
       "io.netty.channel.pool.FixedChannelPool$5",
       "io.netty.channel.pool.FixedChannelPool$4",
       "io.netty.channel.socket.DatagramChannelConfig",
       "io.netty.channel.pool.FixedChannelPool$1",
       "io.netty.channel.socket.DuplexChannel",
       "io.netty.channel.oio.AbstractOioChannel$1",
       "io.netty.channel.oio.AbstractOioChannel$2",
       "io.netty.channel.oio.AbstractOioChannel$3",
       "io.netty.channel.socket.nio.ProtocolFamilyConverter",
       "io.netty.channel.group.ChannelMatchers$InstanceMatcher",
       "io.netty.channel.group.ChannelMatchers",
       "io.netty.channel.PendingWriteQueue",
       "io.netty.channel.embedded.EmbeddedChannel",
       "io.netty.channel.oio.OioEventLoopGroup",
       "io.netty.channel.group.ChannelMatchers$CompositeMatcher",
       "io.netty.channel.ChannelPromiseNotifier",
       "io.netty.channel.ChannelInboundInvoker",
       "io.netty.channel.SingleThreadEventLoop$NonWakeupRunnable",
       "io.netty.channel.ChannelFuture",
       "io.netty.channel.AbstractChannel$CloseFuture",
       "io.netty.channel.group.DefaultChannelGroupFuture",
       "io.netty.channel.ChannelConfig",
       "io.netty.channel.DefaultChannelPipeline$9",
       "io.netty.channel.DefaultChannelPipeline$6",
       "io.netty.bootstrap.ServerBootstrap",
       "io.netty.channel.DefaultChannelPipeline$5",
       "io.netty.channel.DefaultSelectStrategy",
       "io.netty.channel.DefaultChannelPipeline$8",
       "io.netty.channel.ChannelHandler",
       "io.netty.channel.DefaultChannelPipeline$7",
       "io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig",
       "io.netty.channel.socket.DefaultDatagramChannelConfig",
       "io.netty.channel.pool.AbstractChannelPoolMap",
       "io.netty.channel.ChannelPromiseAggregator",
       "io.netty.channel.DefaultChannelPipeline$2",
       "io.netty.channel.local.PreferHeapByteBufAllocator",
       "io.netty.channel.DefaultChannelPipeline$1",
       "io.netty.channel.DefaultChannelPipeline$4",
       "io.netty.channel.DefaultChannelPipeline$3"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "io.netty:netty-buffer:jar:4.1.6.Final:compile",
        "coordinates": "io.netty:netty-buffer:4.1.6.Final",
        "groupId": "io.netty",
        "artifactId": "netty-buffer",
        "version": "4.1.6.Final",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 253503,
        "type": "transitive",
        "status": "bloated",
        "parent": "io.netty:netty-transport:jar:4.1.6.Final:compile",
        "allTypes": [
         "io.netty.buffer.PooledSlicedByteBuf$1",
         "io.netty.buffer.ReadOnlyByteBuf",
         "io.netty.buffer.ByteBufUtil$1",
         "io.netty.buffer.ByteBufUtil$2",
         "io.netty.buffer.ByteBufHolder",
         "io.netty.buffer.CompositeByteBuf$Component",
         "io.netty.buffer.UnsafeByteBufUtil",
         "io.netty.buffer.DuplicatedByteBuf",
         "io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache",
         "io.netty.buffer.PoolArena$HeapArena",
         "io.netty.buffer.PooledDirectByteBuf",
         "io.netty.buffer.AbstractUnsafeSwappedByteBuf",
         "io.netty.buffer.DefaultByteBufHolder",
         "io.netty.buffer.UnsafeDirectSwappedByteBuf",
         "io.netty.buffer.PooledSlicedByteBuf",
         "io.netty.buffer.PooledByteBufAllocator",
         "io.netty.buffer.UnpooledDirectByteBuf",
         "io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry",
         "io.netty.buffer.AbstractReferenceCountedByteBuf",
         "io.netty.buffer.UnpooledHeapByteBuf",
         "io.netty.buffer.UnpooledByteBufAllocator",
         "io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache",
         "io.netty.buffer.AdvancedLeakAwareByteBuf",
         "io.netty.buffer.FixedCompositeByteBuf",
         "io.netty.buffer.PooledUnsafeDirectByteBuf$1",
         "io.netty.buffer.FixedCompositeByteBuf$Component",
         "io.netty.buffer.PoolArena$SizeClass",
         "io.netty.buffer.SimpleLeakAwareByteBuf",
         "io.netty.buffer.UnsafeHeapSwappedByteBuf",
         "io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache",
         "io.netty.buffer.PooledByteBuf",
         "io.netty.buffer.PoolThreadCache$MemoryRegionCache$1",
         "io.netty.buffer.PooledDuplicatedByteBuf$1",
         "io.netty.buffer.AbstractPooledDerivedByteBuf",
         "io.netty.buffer.PoolArena$1",
         "io.netty.buffer.PooledUnsafeHeapByteBuf$1",
         "io.netty.buffer.ByteBufUtil$HexUtil",
         "io.netty.buffer.PooledHeapByteBuf",
         "io.netty.buffer.PoolArena$DirectArena",
         "io.netty.buffer.ReadOnlyUnsafeDirectByteBuf",
         "io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf",
         "io.netty.buffer.AdvancedLeakAwareCompositeByteBuf",
         "io.netty.buffer.UnreleasableByteBuf",
         "io.netty.buffer.ByteBufAllocator",
         "io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1",
         "io.netty.buffer.PoolChunkList",
         "io.netty.buffer.PoolSubpageMetric",
         "io.netty.buffer.WrappedCompositeByteBuf",
         "io.netty.buffer.SwappedByteBuf",
         "io.netty.buffer.PoolSubpage",
         "io.netty.buffer.Unpooled",
         "io.netty.buffer.ReadOnlyByteBufferBuf",
         "io.netty.buffer.ByteBufProcessor$10",
         "io.netty.buffer.UnpooledUnsafeHeapByteBuf",
         "io.netty.buffer.AbstractByteBuf",
         "io.netty.buffer.HeapByteBufUtil",
         "io.netty.buffer.ByteBufProcessor",
         "io.netty.buffer.UnpooledUnsafeDirectByteBuf",
         "io.netty.buffer.PoolArena",
         "io.netty.buffer.AbstractByteBufAllocator",
         "io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1",
         "io.netty.buffer.WrappedUnpooledUnsafeDirectByteBuf",
         "io.netty.buffer.ByteBufOutputStream",
         "io.netty.buffer.PoolArenaMetric",
         "io.netty.buffer.PooledDirectByteBuf$1",
         "io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf",
         "io.netty.buffer.CompositeByteBuf",
         "io.netty.buffer.UnpooledDuplicatedByteBuf",
         "io.netty.buffer.PoolThreadCache",
         "io.netty.buffer.PooledDuplicatedByteBuf",
         "io.netty.buffer.PooledUnsafeHeapByteBuf",
         "io.netty.buffer.PooledHeapByteBuf$1",
         "io.netty.buffer.PoolChunk",
         "io.netty.buffer.PoolChunkMetric",
         "io.netty.buffer.AbstractDerivedByteBuf",
         "io.netty.buffer.UnpooledSlicedByteBuf",
         "io.netty.buffer.AbstractByteBufAllocator$1",
         "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator",
         "io.netty.buffer.PooledUnsafeDirectByteBuf",
         "io.netty.buffer.ByteBuf",
         "io.netty.buffer.SimpleLeakAwareCompositeByteBuf",
         "io.netty.buffer.SlicedByteBuf",
         "io.netty.buffer.ByteBufInputStream",
         "io.netty.buffer.PoolThreadCache$1",
         "io.netty.buffer.PoolThreadCache$MemoryRegionCache",
         "io.netty.buffer.AbstractUnpooledSlicedByteBuf",
         "io.netty.buffer.ByteBufProcessor$1",
         "io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf",
         "io.netty.buffer.WrappedByteBuf",
         "io.netty.buffer.ByteBufProcessor$2",
         "io.netty.buffer.ByteBufProcessor$5",
         "io.netty.buffer.ByteBufProcessor$6",
         "io.netty.buffer.ByteBufProcessor$3",
         "io.netty.buffer.ByteBufUtil",
         "io.netty.buffer.PoolChunkListMetric",
         "io.netty.buffer.ByteBufProcessor$4",
         "io.netty.buffer.CompositeByteBuf$1",
         "io.netty.buffer.ByteBufProcessor$9",
         "io.netty.buffer.EmptyByteBuf",
         "io.netty.buffer.ByteBufProcessor$7",
         "io.netty.buffer.ByteBufProcessor$8",
         "io.netty.buffer.PoolThreadCache$2"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": [
         {
          "id": "io.netty:netty-common:jar:4.1.6.Final:compile",
          "coordinates": "io.netty:netty-common:4.1.6.Final",
          "groupId": "io.netty",
          "artifactId": "netty-common",
          "version": "4.1.6.Final",
          "scope": "compile",
          "packaging": "jar",
          "omitted": true,
          "size": 686664,
          "type": "transitive",
          "status": "bloated",
          "parent": "io.netty:netty-buffer:jar:4.1.6.Final:compile",
          "allTypes": [
           "io.netty.util.internal.PlatformDependent0",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Traverser",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReservationNode",
           "io.netty.util.concurrent.MultithreadEventExecutorGroup$1",
           "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction",
           "io.netty.util.collection.ShortObjectMap",
           "io.netty.util.concurrent.FastThreadLocalThread",
           "io.netty.util.concurrent.UnaryPromiseNotifier",
           "io.netty.util.collection.IntCollections$EmptyMap",
           "io.netty.util.internal.ThreadLocalRandom",
           "io.netty.util.collection.LongObjectMap",
           "io.netty.util.internal.chmv8.ForkJoinTask",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue",
           "io.netty.util.internal.PromiseNotificationUtil",
           "io.netty.util.internal.PlatformDependent0$3",
           "io.netty.util.internal.PlatformDependent0$4",
           "io.netty.util.collection.ByteObjectHashMap$MapEntry",
           "io.netty.util.internal.PlatformDependent0$5",
           "io.netty.util.internal.PlatformDependent0$6",
           "io.netty.util.HashedWheelTimer$HashedWheelBucket",
           "io.netty.util.internal.PlatformDependent0$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachKeyTask",
           "io.netty.util.concurrent.DefaultProgressivePromise",
           "io.netty.util.internal.PlatformDependent0$2",
           "io.netty.util.internal.chmv8.ForkJoinPool$1",
           "io.netty.util.internal.chmv8.ForkJoinPool$2",
           "io.netty.util.internal.PlatformDependent0$7",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachValueTask",
           "io.netty.util.concurrent.AbstractScheduledEventExecutor",
           "io.netty.util.internal.PlatformDependent0$8",
           "io.netty.util.DomainNameMappingBuilder$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask",
           "io.netty.util.internal.PlatformDependent$1",
           "io.netty.util.internal.logging.JdkLoggerFactory",
           "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
           "io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode",
           "io.netty.util.concurrent.EventExecutorChooserFactory",
           "io.netty.util.internal.StringUtil",
           "io.netty.util.internal.chmv8.ForkJoinPool$EmptyTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchEntriesTask",
           "io.netty.util.internal.logging.AbstractInternalLogger",
           "io.netty.util.DomainNameMapping",
           "io.netty.util.internal.ThrowableUtil",
           "io.netty.util.TimerTask",
           "io.netty.util.internal.logging.FormattingTuple",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction",
           "io.netty.util.collection.LongObjectMap$PrimitiveEntry",
           "io.netty.util.ReferenceCountUtil$ReleasingTask",
           "io.netty.util.internal.logging.Log4JLoggerFactory",
           "io.netty.util.internal.UnpaddedInternalThreadLocalMap",
           "io.netty.util.HashedWheelTimer$HashedWheelTimeout",
           "io.netty.util.collection.CharObjectHashMap$2$1",
           "io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory",
           "io.netty.util.collection.LongCollections$UnmodifiableMap",
           "io.netty.util.concurrent.SingleThreadEventExecutor$5",
           "io.netty.util.concurrent.SingleThreadEventExecutor$4",
           "io.netty.util.concurrent.DefaultEventExecutor",
           "io.netty.util.collection.IntCollections$UnmodifiableMap$1",
           "io.netty.util.collection.CharCollections$UnmodifiableMap",
           "io.netty.util.concurrent.SingleThreadEventExecutor$1",
           "io.netty.util.concurrent.SingleThreadEventExecutor$3",
           "io.netty.util.concurrent.SingleThreadEventExecutor$2",
           "io.netty.util.collection.CharObjectHashMap$KeySet",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToIntTask",
           "io.netty.util.concurrent.Future",
           "io.netty.util.HashingStrategy$1",
           "io.netty.util.collection.IntCollections$1",
           "io.netty.util.concurrent.DefaultThreadFactory",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToIntTask",
           "io.netty.util.collection.ShortObjectHashMap",
           "io.netty.util.ThreadDeathWatcher$1",
           "io.netty.util.collection.IntObjectHashMap$1",
           "io.netty.util.collection.IntObjectHashMap$2",
           "io.netty.util.Recycler$Handle",
           "io.netty.util.internal.UnsafeAtomicLongFieldUpdater",
           "io.netty.util.internal.chmv8.ForkJoinPool$WorkQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator",
           "io.netty.util.internal.PlatformDependent$AtomicLongCounter",
           "io.netty.util.internal.PriorityQueueNode",
           "io.netty.util.internal.MacAddressUtil",
           "io.netty.util.internal.logging.CommonsLogger",
           "io.netty.util.collection.ShortObjectHashMap$EntrySet",
           "io.netty.util.concurrent.PromiseTask$RunnableAdapter",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad0",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad1",
           "io.netty.util.internal.ReadOnlyIterator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySpliterator",
           "io.netty.util.collection.ByteObjectHashMap$EntrySet",
           "io.netty.util.NetUtil$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Action",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceKeysTask",
           "io.netty.util.collection.ShortObjectHashMap$MapEntry",
           "io.netty.util.collection.LongCollections$UnmodifiableMap$1",
           "io.netty.util.collection.CharObjectHashMap$MapIterator",
           "io.netty.util.internal.InternalThreadLocalMap",
           "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToIntTask",
           "io.netty.util.ResourceLeak",
           "io.netty.util.HashingStrategy",
           "io.netty.util.internal.MathUtil",
           "io.netty.util.ThreadDeathWatcher$Watcher",
           "io.netty.util.concurrent.BlockingOperationException",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueConsumerField",
           "io.netty.util.collection.ByteObjectHashMap$MapIterator",
           "io.netty.util.collection.ShortObjectMap$PrimitiveEntry",
           "io.netty.util.collection.IntCollections$UnmodifiableMap",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedValueTask",
           "io.netty.util.collection.ShortObjectHashMap$PrimitiveIterator",
           "io.netty.util.BooleanSupplier$1",
           "io.netty.util.DomainMappingBuilder",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier",
           "io.netty.util.BooleanSupplier$2",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$1",
           "io.netty.util.internal.shaded.org.jctools.queues.QueueProgressIndicators",
           "io.netty.util.collection.ShortCollections$UnmodifiableMap",
           "io.netty.util.collection.ShortCollections$EmptyMap",
           "io.netty.util.concurrent.DefaultPromise$2",
           "io.netty.util.concurrent.DefaultPromise$1",
           "io.netty.util.collection.ShortCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueSpliterator",
           "io.netty.util.collection.ByteObjectHashMap",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node",
           "io.netty.util.AsciiString",
           "io.netty.util.AsciiString$DefaultCharEqualityComparator",
           "io.netty.util.concurrent.DefaultPromise$4",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToDoubleTask",
           "io.netty.util.concurrent.DefaultPromise$3",
           "io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory$1",
           "io.netty.util.internal.chmv8.ForkJoinWorkerThread",
           "io.netty.util.concurrent.DefaultEventExecutorGroup",
           "io.netty.util.CharsetUtil",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeBin",
           "io.netty.util.concurrent.UnorderedThreadPoolEventExecutor$RunnableScheduledFutureTask",
           "io.netty.util.ThreadDeathWatcher$Entry",
           "io.netty.util.concurrent.GenericProgressiveFutureListener",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue",
           "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue",
           "io.netty.util.internal.shaded.org.jctools.queues.SparsePaddedCircularArrayOffsetCalculator",
           "io.netty.util.collection.IntObjectHashMap$MapEntry",
           "io.netty.util.collection.CharCollections$1",
           "io.netty.util.ReferenceCountUtil",
           "io.netty.util.concurrent.ProgressivePromise",
           "io.netty.util.collection.ShortCollections$1",
           "io.netty.util.collection.IntObjectHashMap$EntrySet",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachMappingTask",
           "io.netty.util.Constant",
           "io.netty.util.concurrent.RejectedExecutionHandlers$1",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue",
           "io.netty.util.concurrent.CompleteFuture",
           "io.netty.util.concurrent.RejectedExecutionHandlers$2",
           "io.netty.util.collection.ByteObjectHashMap$KeySet",
           "io.netty.util.ResourceLeakException",
           "io.netty.util.Recycler$DefaultHandle",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceValuesTask",
           "io.netty.util.collection.LongObjectHashMap$2$1",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscLinkedAtomicQueue",
           "io.netty.util.collection.LongObjectHashMap$PrimitiveIterator",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueMidPad",
           "io.netty.util.concurrent.ImmediateEventExecutor$2",
           "io.netty.util.concurrent.ImmediateEventExecutor$1",
           "io.netty.util.internal.UnsafeAtomicIntegerFieldUpdater",
           "io.netty.util.collection.IntObjectHashMap$KeySet",
           "io.netty.util.collection.CharCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.internal.UnsafeAtomicReferenceFieldUpdater",
           "io.netty.util.collection.ByteCollections$UnmodifiableMap$1",
           "io.netty.util.ByteProcessor$IndexOfProcessor",
           "io.netty.util.concurrent.SingleThreadEventExecutor",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysTask",
           "io.netty.util.ByteProcessor",
           "io.netty.util.Recycler$WeakOrderQueue$Link",
           "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueueL0Pad",
           "io.netty.util.collection.ByteObjectHashMap$KeySet$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchValuesTask",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue",
           "io.netty.util.internal.RecyclableArrayList$1",
           "io.netty.util.internal.logging.InternalLoggerFactory",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterHashCode",
           "io.netty.util.collection.ByteCollections",
           "io.netty.util.collection.ByteCollections$1",
           "io.netty.util.Recycler$WeakOrderQueue",
           "io.netty.util.internal.chmv8.Striped64",
           "io.netty.util.HashedWheelTimer$1",
           "io.netty.util.internal.logging.Log4JLogger",
           "io.netty.util.internal.NativeLibraryUtil",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView",
           "io.netty.util.DomainNameMappingBuilder",
           "io.netty.util.internal.AppendableCharSequence",
           "io.netty.util.concurrent.PromiseCombiner",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueColdProducerFields",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator",
           "io.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory",
           "io.netty.util.HashedWheelTimer",
           "io.netty.util.internal.NativeLibraryLoader",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask",
           "io.netty.util.DefaultAttributeMap$DefaultAttribute",
           "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentSequencedCircularArrayQueue",
           "io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise",
           "io.netty.util.HashedWheelTimer$Worker",
           "io.netty.util.internal.RecyclableArrayList",
           "io.netty.util.collection.CharCollections",
           "io.netty.util.collection.ShortCollections$UnmodifiableMap$1",
           "io.netty.util.IntSupplier",
           "io.netty.util.collection.LongCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode",
           "io.netty.util.concurrent.DefaultEventExecutorChooserFactory$GenericEventExecutorChooser",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToLongTask",
           "io.netty.util.concurrent.PromiseCombiner$1",
           "io.netty.util.internal.ConstantTimeUtils",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchKeysTask",
           "io.netty.util.collection.ShortObjectHashMap$KeySet$1",
           "io.netty.util.NetUtil",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun",
           "io.netty.util.concurrent.DefaultEventExecutorChooserFactory",
           "io.netty.util.internal.logging.Log4J2LoggerFactory",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueConsumerFields",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsTask",
           "io.netty.util.concurrent.FailedFuture",
           "io.netty.util.internal.SystemPropertyUtil$1",
           "io.netty.util.AttributeMap",
           "io.netty.util.IllegalReferenceCountException",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL1Pad",
           "io.netty.util.collection.ShortObjectHashMap$KeySet",
           "io.netty.util.internal.logging.CommonsLoggerFactory",
           "io.netty.util.concurrent.ScheduledFuture",
           "io.netty.util.collection.CharObjectHashMap$PrimitiveIterator",
           "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueL1Pad",
           "io.netty.util.internal.TypeParameterMatcher",
           "io.netty.util.concurrent.AbstractEventExecutorGroup",
           "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue",
           "io.netty.util.internal.NativeLibraryLoader$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedKeyTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchMappingsTask",
           "io.netty.util.internal.NativeLibraryLoader$2",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToLongTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode",
           "io.netty.util.internal.PriorityQueue$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceEntriesTask",
           "io.netty.util.collection.LongObjectHashMap$KeySet",
           "io.netty.util.ByteProcessor$1",
           "io.netty.util.internal.logging.InternalLogger",
           "io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator",
           "io.netty.util.concurrent.EventExecutor",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView",
           "io.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef",
           "io.netty.util.collection.ByteCollections$UnmodifiableMap",
           "io.netty.util.internal.ThreadLocalRandom$3",
           "io.netty.util.internal.LongCounter",
           "io.netty.util.internal.ThreadLocalRandom$4",
           "io.netty.util.ByteProcessor$4",
           "io.netty.util.ByteProcessor$3",
           "io.netty.util.internal.ThreadLocalRandom$1",
           "io.netty.util.ByteProcessor$2",
           "io.netty.util.internal.ThreadLocalRandom$2",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedMappingTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedEntryTask",
           "io.netty.util.ResourceLeakHint",
           "io.netty.util.internal.logging.Log4J2Logger",
           "io.netty.util.collection.CharObjectHashMap$KeySet$1",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer",
           "io.netty.util.collection.ShortObjectHashMap$1",
           "io.netty.util.concurrent.ImmediateEventExecutor",
           "io.netty.util.collection.ShortObjectHashMap$2",
           "io.netty.util.Recycler$3",
           "io.netty.util.Recycler$1",
           "io.netty.util.Recycler$2",
           "io.netty.util.Attribute",
           "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner",
           "io.netty.util.concurrent.AbstractFuture",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL2Pad",
           "io.netty.util.Signal$1",
           "io.netty.util.ReferenceCounted",
           "io.netty.util.concurrent.DefaultFutureListeners",
           "io.netty.util.internal.NoOpTypeParameterMatcher",
           "io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess",
           "io.netty.util.collection.CharCollections$EmptyMap",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueL2Pad",
           "io.netty.util.ResourceLeakDetectorFactory",
           "io.netty.util.collection.IntObjectHashMap$KeySet$1",
           "io.netty.util.collection.LongCollections",
           "io.netty.util.internal.JavassistTypeParameterMatcherGenerator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForwardingNode",
           "io.netty.util.internal.ConcurrentSet",
           "io.netty.util.internal.chmv8.ForkJoinPool",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Segment",
           "io.netty.util.AbstractConstant",
           "io.netty.util.AsciiString$GeneralCaseInsensitiveCharEqualityComparator",
           "io.netty.util.concurrent.GlobalEventExecutor",
           "io.netty.util.collection.CharObjectMap",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueuePad2",
           "io.netty.util.internal.Cleaner0",
           "io.netty.util.collection.LongObjectHashMap$KeySet$1",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueuePad3",
           "io.netty.util.internal.PlatformDependent",
           "io.netty.util.collection.ByteCollections$EmptyMap",
           "io.netty.util.concurrent.OrderedEventExecutor",
           "io.netty.util.concurrent.UnorderedThreadPoolEventExecutor",
           "io.netty.util.collection.CharCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueuePad1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachEntryTask",
           "io.netty.util.AsciiString$AsciiCaseInsensitiveCharEqualityComparator",
           "io.netty.util.collection.IntCollections",
           "io.netty.util.Version",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask",
           "io.netty.util.collection.ByteObjectMap",
           "io.netty.util.collection.CharObjectHashMap",
           "io.netty.util.collection.CharObjectMap$PrimitiveEntry",
           "io.netty.util.collection.ShortObjectHashMap$MapIterator",
           "io.netty.util.AsciiString$2",
           "io.netty.util.internal.PriorityQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterCell",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToLongTask",
           "io.netty.util.AsciiString$1",
           "io.netty.util.concurrent.AbstractEventExecutor",
           "io.netty.util.collection.ByteObjectHashMap$PrimitiveIterator",
           "io.netty.util.collection.IntObjectMap",
           "io.netty.util.collection.ByteCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.ThreadDeathWatcher",
           "io.netty.util.collection.ShortCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.internal.logging.MessageFormatter",
           "io.netty.util.concurrent.GenericFutureListener",
           "io.netty.util.collection.IntObjectHashMap$MapIterator",
           "io.netty.util.collection.IntObjectMap$PrimitiveEntry",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong",
           "io.netty.util.collection.LongObjectHashMap$2",
           "io.netty.util.collection.ByteCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.collection.LongObjectHashMap$1",
           "io.netty.util.ByteProcessor$IndexNotOfProcessor",
           "io.netty.util.concurrent.GlobalEventExecutor$1",
           "io.netty.util.AttributeKey",
           "io.netty.util.concurrent.ScheduledFutureTask",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueProducerFields",
           "io.netty.util.concurrent.RejectedExecutionHandlers",
           "io.netty.util.concurrent.PromiseNotifier",
           "io.netty.util.collection.ByteObjectMap$PrimitiveEntry",
           "io.netty.util.collection.CharCollections$UnmodifiableMap$1",
           "io.netty.util.collection.CharObjectHashMap$EntrySet",
           "io.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode",
           "io.netty.util.collection.LongCollections$1",
           "io.netty.util.collection.IntObjectHashMap",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySpliterator",
           "io.netty.util.concurrent.RejectedExecutionHandler",
           "io.netty.util.internal.logging.Slf4JLoggerFactory",
           "io.netty.util.concurrent.SucceededFuture",
           "io.netty.util.collection.LongCollections$EmptyMap",
           "io.netty.util.collection.ByteObjectHashMap$2",
           "io.netty.util.collection.ByteObjectHashMap$1",
           "io.netty.util.concurrent.DefaultPromise$CauseHolder",
           "io.netty.util.Recycler",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueTailField",
           "io.netty.util.collection.LongObjectHashMap$MapIterator",
           "io.netty.util.AttributeKey$1",
           "io.netty.util.internal.shaded.org.jctools.util.Pow2",
           "io.netty.util.concurrent.NonStickyEventExecutorGroup",
           "io.netty.util.concurrent.ThreadProperties",
           "io.netty.util.internal.chmv8.Striped64$1",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueHeadLimitField",
           "io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping",
           "io.netty.util.internal.shaded.org.jctools.util.JvmInfo",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue",
           "io.netty.util.ResourceLeakDetector$Level",
           "io.netty.util.internal.chmv8.LongAdderV8",
           "io.netty.util.concurrent.ProgressiveFuture",
           "io.netty.util.internal.chmv8.ForkJoinTask$1",
           "io.netty.util.internal.PlatformDependent$Mpsc",
           "io.netty.util.concurrent.PromiseTask",
           "io.netty.util.internal.logging.AbstractInternalLogger$1",
           "io.netty.util.internal.PendingWrite$1",
           "io.netty.util.internal.shaded.org.jctools.queues.CircularArrayOffsetCalculator",
           "io.netty.util.internal.EmptyArrays",
           "io.netty.util.concurrent.NonStickyEventExecutorGroup$1",
           "io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher",
           "io.netty.util.internal.chmv8.ForkJoinPool$DefaultForkJoinWorkerThreadFactory",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToIntTask",
           "io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise",
           "io.netty.util.concurrent.Promise",
           "io.netty.util.internal.logging.Slf4JLoggerFactory$1",
           "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable",
           "io.netty.util.collection.CharObjectHashMap$1",
           "io.netty.util.collection.ByteObjectHashMap$2$1",
           "io.netty.util.collection.CharObjectHashMap$2",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToLongTask",
           "io.netty.util.internal.PriorityQueue$PriorityQueueIterator",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef",
           "io.netty.util.collection.CharObjectHashMap$MapEntry",
           "io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry",
           "io.netty.util.collection.IntCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.ConstantPool",
           "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator",
           "io.netty.util.collection.ShortCollections",
           "io.netty.util.collection.LongObjectHashMap",
           "io.netty.util.BooleanSupplier",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView",
           "io.netty.util.internal.UnstableApi",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue",
           "io.netty.util.internal.chmv8.CountedCompleter$1",
           "io.netty.util.internal.ObjectUtil",
           "io.netty.util.internal.logging.JdkLogger",
           "io.netty.util.Mapping",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble",
           "io.netty.util.internal.chmv8.CountedCompleter",
           "io.netty.util.concurrent.FutureListener",
           "io.netty.util.AsciiString$CharEqualityComparator",
           "io.netty.util.internal.logging.InternalLogLevel",
           "io.netty.util.ResourceLeakDetector",
           "io.netty.util.concurrent.PromiseAggregator",
           "io.netty.util.concurrent.DefaultPromise",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueProducerField",
           "io.netty.util.Timer",
           "io.netty.util.collection.IntCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.AsyncMapping",
           "io.netty.util.collection.IntObjectHashMap$2$1",
           "io.netty.util.concurrent.ImmediateExecutor",
           "io.netty.util.concurrent.MultithreadEventExecutorGroup",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerField",
           "io.netty.util.Recycler$Stack",
           "io.netty.util.AbstractReferenceCounted",
           "io.netty.util.collection.ShortObjectHashMap$2$1",
           "io.netty.util.collection.LongObjectHashMap$EntrySet",
           "io.netty.util.internal.logging.Slf4JLogger",
           "io.netty.util.concurrent.DefaultEventExecutorChooserFactory$PowerOfTowEventExecutorChooser",
           "io.netty.util.internal.chmv8.ForkJoinPool$ManagedBlocker",
           "io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser",
           "io.netty.util.DefaultAttributeMap",
           "io.netty.util.concurrent.FastThreadLocal",
           "io.netty.util.internal.OutOfDirectMemoryError",
           "io.netty.util.concurrent.AbstractScheduledEventExecutor$2",
           "io.netty.util.internal.IntegerHolder",
           "io.netty.util.concurrent.AbstractScheduledEventExecutor$1",
           "io.netty.util.Timeout",
           "io.netty.util.internal.PlatformDependent$Mpsc$1",
           "io.netty.util.collection.LongObjectHashMap$MapEntry",
           "io.netty.util.internal.chmv8.Striped64$Cell",
           "io.netty.util.internal.PendingWrite",
           "io.netty.util.concurrent.EventExecutorGroup",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy",
           "io.netty.util.internal.shaded.org.jctools.queues.PaddedCircularArrayOffsetCalculator",
           "io.netty.util.concurrent.SingleThreadEventExecutor$DefaultThreadProperties",
           "io.netty.util.internal.SystemPropertyUtil",
           "io.netty.util.concurrent.ThreadPerTaskExecutor",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToDoubleTask",
           "io.netty.util.collection.LongCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.Signal",
           "io.netty.util.Signal$SignalConstant"
          ],
          "usedTypes": [],
          "usageRatio": 0.0,
          "children": []
         }
        ]
       },
       {
        "id": "io.netty:netty-resolver:jar:4.1.6.Final:compile",
        "coordinates": "io.netty:netty-resolver:4.1.6.Final",
        "groupId": "io.netty",
        "artifactId": "netty-resolver",
        "version": "4.1.6.Final",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 27949,
        "type": "transitive",
        "status": "bloated",
        "parent": "io.netty:netty-transport:jar:4.1.6.Final:compile",
        "allTypes": [
         "io.netty.resolver.AddressResolver",
         "io.netty.resolver.DefaultHostsFileEntriesResolver",
         "io.netty.resolver.NameResolver",
         "io.netty.resolver.RoundRobinInetSocketAddressResolver",
         "io.netty.resolver.InetNameResolver",
         "io.netty.resolver.AbstractAddressResolver",
         "io.netty.resolver.SimpleNameResolver",
         "io.netty.resolver.NoopAddressResolverGroup",
         "io.netty.resolver.AddressResolverGroup",
         "io.netty.resolver.HostsFileEntriesResolver",
         "io.netty.resolver.CompositeNameResolver$1",
         "io.netty.resolver.DefaultNameResolver",
         "io.netty.resolver.InetSocketAddressResolver",
         "io.netty.resolver.RoundRobinInetSocketAddressResolver$1",
         "io.netty.resolver.CompositeNameResolver$2",
         "io.netty.resolver.InetSocketAddressResolver$2",
         "io.netty.resolver.DefaultAddressResolverGroup",
         "io.netty.resolver.NoopAddressResolver",
         "io.netty.resolver.InetSocketAddressResolver$1",
         "io.netty.resolver.CompositeNameResolver",
         "io.netty.resolver.HostsFileParser",
         "io.netty.resolver.AddressResolverGroup$1"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": [
         {
          "id": "io.netty:netty-common:jar:4.1.6.Final:compile",
          "coordinates": "io.netty:netty-common:4.1.6.Final",
          "groupId": "io.netty",
          "artifactId": "netty-common",
          "version": "4.1.6.Final",
          "scope": "compile",
          "packaging": "jar",
          "omitted": true,
          "size": 686664,
          "type": "transitive",
          "status": "bloated",
          "parent": "io.netty:netty-resolver:jar:4.1.6.Final:compile",
          "allTypes": [
           "io.netty.util.internal.PlatformDependent0",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Traverser",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReservationNode",
           "io.netty.util.concurrent.MultithreadEventExecutorGroup$1",
           "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction",
           "io.netty.util.collection.ShortObjectMap",
           "io.netty.util.concurrent.FastThreadLocalThread",
           "io.netty.util.concurrent.UnaryPromiseNotifier",
           "io.netty.util.collection.IntCollections$EmptyMap",
           "io.netty.util.internal.ThreadLocalRandom",
           "io.netty.util.collection.LongObjectMap",
           "io.netty.util.internal.chmv8.ForkJoinTask",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue",
           "io.netty.util.internal.PromiseNotificationUtil",
           "io.netty.util.internal.PlatformDependent0$3",
           "io.netty.util.internal.PlatformDependent0$4",
           "io.netty.util.collection.ByteObjectHashMap$MapEntry",
           "io.netty.util.internal.PlatformDependent0$5",
           "io.netty.util.internal.PlatformDependent0$6",
           "io.netty.util.HashedWheelTimer$HashedWheelBucket",
           "io.netty.util.internal.PlatformDependent0$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachKeyTask",
           "io.netty.util.concurrent.DefaultProgressivePromise",
           "io.netty.util.internal.PlatformDependent0$2",
           "io.netty.util.internal.chmv8.ForkJoinPool$1",
           "io.netty.util.internal.chmv8.ForkJoinPool$2",
           "io.netty.util.internal.PlatformDependent0$7",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachValueTask",
           "io.netty.util.concurrent.AbstractScheduledEventExecutor",
           "io.netty.util.internal.PlatformDependent0$8",
           "io.netty.util.DomainNameMappingBuilder$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BulkTask",
           "io.netty.util.internal.PlatformDependent$1",
           "io.netty.util.internal.logging.JdkLoggerFactory",
           "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
           "io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode",
           "io.netty.util.concurrent.EventExecutorChooserFactory",
           "io.netty.util.internal.StringUtil",
           "io.netty.util.internal.chmv8.ForkJoinPool$EmptyTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchEntriesTask",
           "io.netty.util.internal.logging.AbstractInternalLogger",
           "io.netty.util.DomainNameMapping",
           "io.netty.util.internal.ThrowableUtil",
           "io.netty.util.TimerTask",
           "io.netty.util.internal.logging.FormattingTuple",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BiAction",
           "io.netty.util.collection.LongObjectMap$PrimitiveEntry",
           "io.netty.util.ReferenceCountUtil$ReleasingTask",
           "io.netty.util.internal.logging.Log4JLoggerFactory",
           "io.netty.util.internal.UnpaddedInternalThreadLocalMap",
           "io.netty.util.HashedWheelTimer$HashedWheelTimeout",
           "io.netty.util.collection.CharObjectHashMap$2$1",
           "io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory",
           "io.netty.util.collection.LongCollections$UnmodifiableMap",
           "io.netty.util.concurrent.SingleThreadEventExecutor$5",
           "io.netty.util.concurrent.SingleThreadEventExecutor$4",
           "io.netty.util.concurrent.DefaultEventExecutor",
           "io.netty.util.collection.IntCollections$UnmodifiableMap$1",
           "io.netty.util.collection.CharCollections$UnmodifiableMap",
           "io.netty.util.concurrent.SingleThreadEventExecutor$1",
           "io.netty.util.concurrent.SingleThreadEventExecutor$3",
           "io.netty.util.concurrent.SingleThreadEventExecutor$2",
           "io.netty.util.collection.CharObjectHashMap$KeySet",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToIntTask",
           "io.netty.util.concurrent.Future",
           "io.netty.util.HashingStrategy$1",
           "io.netty.util.collection.IntCollections$1",
           "io.netty.util.concurrent.DefaultThreadFactory",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToIntTask",
           "io.netty.util.collection.ShortObjectHashMap",
           "io.netty.util.ThreadDeathWatcher$1",
           "io.netty.util.collection.IntObjectHashMap$1",
           "io.netty.util.collection.IntObjectHashMap$2",
           "io.netty.util.Recycler$Handle",
           "io.netty.util.internal.UnsafeAtomicLongFieldUpdater",
           "io.netty.util.internal.chmv8.ForkJoinPool$WorkQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator",
           "io.netty.util.internal.PlatformDependent$AtomicLongCounter",
           "io.netty.util.internal.PriorityQueueNode",
           "io.netty.util.internal.MacAddressUtil",
           "io.netty.util.internal.logging.CommonsLogger",
           "io.netty.util.collection.ShortObjectHashMap$EntrySet",
           "io.netty.util.concurrent.PromiseTask$RunnableAdapter",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad0",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad1",
           "io.netty.util.internal.ReadOnlyIterator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySpliterator",
           "io.netty.util.collection.ByteObjectHashMap$EntrySet",
           "io.netty.util.NetUtil$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Action",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceKeysTask",
           "io.netty.util.collection.ShortObjectHashMap$MapEntry",
           "io.netty.util.collection.LongCollections$UnmodifiableMap$1",
           "io.netty.util.collection.CharObjectHashMap$MapIterator",
           "io.netty.util.internal.InternalThreadLocalMap",
           "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToIntTask",
           "io.netty.util.ResourceLeak",
           "io.netty.util.HashingStrategy",
           "io.netty.util.internal.MathUtil",
           "io.netty.util.ThreadDeathWatcher$Watcher",
           "io.netty.util.concurrent.BlockingOperationException",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueConsumerField",
           "io.netty.util.collection.ByteObjectHashMap$MapIterator",
           "io.netty.util.collection.ShortObjectMap$PrimitiveEntry",
           "io.netty.util.collection.IntCollections$UnmodifiableMap",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedValueTask",
           "io.netty.util.collection.ShortObjectHashMap$PrimitiveIterator",
           "io.netty.util.BooleanSupplier$1",
           "io.netty.util.DomainMappingBuilder",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier",
           "io.netty.util.BooleanSupplier$2",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$1",
           "io.netty.util.internal.shaded.org.jctools.queues.QueueProgressIndicators",
           "io.netty.util.collection.ShortCollections$UnmodifiableMap",
           "io.netty.util.collection.ShortCollections$EmptyMap",
           "io.netty.util.concurrent.DefaultPromise$2",
           "io.netty.util.concurrent.DefaultPromise$1",
           "io.netty.util.collection.ShortCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueSpliterator",
           "io.netty.util.collection.ByteObjectHashMap",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node",
           "io.netty.util.AsciiString",
           "io.netty.util.AsciiString$DefaultCharEqualityComparator",
           "io.netty.util.concurrent.DefaultPromise$4",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToDoubleTask",
           "io.netty.util.concurrent.DefaultPromise$3",
           "io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory$1",
           "io.netty.util.internal.chmv8.ForkJoinWorkerThread",
           "io.netty.util.concurrent.DefaultEventExecutorGroup",
           "io.netty.util.CharsetUtil",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeBin",
           "io.netty.util.concurrent.UnorderedThreadPoolEventExecutor$RunnableScheduledFutureTask",
           "io.netty.util.ThreadDeathWatcher$Entry",
           "io.netty.util.concurrent.GenericProgressiveFutureListener",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$IntByIntToInt",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue",
           "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue",
           "io.netty.util.internal.shaded.org.jctools.queues.SparsePaddedCircularArrayOffsetCalculator",
           "io.netty.util.collection.IntObjectHashMap$MapEntry",
           "io.netty.util.collection.CharCollections$1",
           "io.netty.util.ReferenceCountUtil",
           "io.netty.util.concurrent.ProgressivePromise",
           "io.netty.util.collection.ShortCollections$1",
           "io.netty.util.collection.IntObjectHashMap$EntrySet",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$LongByLongToLong",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachMappingTask",
           "io.netty.util.Constant",
           "io.netty.util.concurrent.RejectedExecutionHandlers$1",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue",
           "io.netty.util.concurrent.CompleteFuture",
           "io.netty.util.concurrent.RejectedExecutionHandlers$2",
           "io.netty.util.collection.ByteObjectHashMap$KeySet",
           "io.netty.util.ResourceLeakException",
           "io.netty.util.Recycler$DefaultHandle",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceValuesTask",
           "io.netty.util.collection.LongObjectHashMap$2$1",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscLinkedAtomicQueue",
           "io.netty.util.collection.LongObjectHashMap$PrimitiveIterator",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueMidPad",
           "io.netty.util.concurrent.ImmediateEventExecutor$2",
           "io.netty.util.concurrent.ImmediateEventExecutor$1",
           "io.netty.util.internal.UnsafeAtomicIntegerFieldUpdater",
           "io.netty.util.collection.IntObjectHashMap$KeySet",
           "io.netty.util.collection.CharCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.internal.UnsafeAtomicReferenceFieldUpdater",
           "io.netty.util.collection.ByteCollections$UnmodifiableMap$1",
           "io.netty.util.ByteProcessor$IndexOfProcessor",
           "io.netty.util.concurrent.SingleThreadEventExecutor",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysTask",
           "io.netty.util.ByteProcessor",
           "io.netty.util.Recycler$WeakOrderQueue$Link",
           "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueueL0Pad",
           "io.netty.util.collection.ByteObjectHashMap$KeySet$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchValuesTask",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue",
           "io.netty.util.internal.RecyclableArrayList$1",
           "io.netty.util.internal.logging.InternalLoggerFactory",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterHashCode",
           "io.netty.util.collection.ByteCollections",
           "io.netty.util.collection.ByteCollections$1",
           "io.netty.util.Recycler$WeakOrderQueue",
           "io.netty.util.internal.chmv8.Striped64",
           "io.netty.util.HashedWheelTimer$1",
           "io.netty.util.internal.logging.Log4JLogger",
           "io.netty.util.internal.NativeLibraryUtil",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView",
           "io.netty.util.DomainNameMappingBuilder",
           "io.netty.util.internal.AppendableCharSequence",
           "io.netty.util.concurrent.PromiseCombiner",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueColdProducerFields",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator",
           "io.netty.util.internal.chmv8.ForkJoinPool$ForkJoinWorkerThreadFactory",
           "io.netty.util.HashedWheelTimer",
           "io.netty.util.internal.NativeLibraryLoader",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask",
           "io.netty.util.DefaultAttributeMap$DefaultAttribute",
           "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentSequencedCircularArrayQueue",
           "io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise",
           "io.netty.util.HashedWheelTimer$Worker",
           "io.netty.util.internal.RecyclableArrayList",
           "io.netty.util.collection.CharCollections",
           "io.netty.util.collection.ShortCollections$UnmodifiableMap$1",
           "io.netty.util.IntSupplier",
           "io.netty.util.collection.LongCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode",
           "io.netty.util.concurrent.DefaultEventExecutorChooserFactory$GenericEventExecutorChooser",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToLongTask",
           "io.netty.util.concurrent.PromiseCombiner$1",
           "io.netty.util.internal.ConstantTimeUtils",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchKeysTask",
           "io.netty.util.collection.ShortObjectHashMap$KeySet$1",
           "io.netty.util.NetUtil",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BiFun",
           "io.netty.util.concurrent.DefaultEventExecutorChooserFactory",
           "io.netty.util.internal.logging.Log4J2LoggerFactory",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueConsumerFields",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsTask",
           "io.netty.util.concurrent.FailedFuture",
           "io.netty.util.internal.SystemPropertyUtil$1",
           "io.netty.util.AttributeMap",
           "io.netty.util.IllegalReferenceCountException",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL1Pad",
           "io.netty.util.collection.ShortObjectHashMap$KeySet",
           "io.netty.util.internal.logging.CommonsLoggerFactory",
           "io.netty.util.concurrent.ScheduledFuture",
           "io.netty.util.collection.CharObjectHashMap$PrimitiveIterator",
           "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueL1Pad",
           "io.netty.util.internal.TypeParameterMatcher",
           "io.netty.util.concurrent.AbstractEventExecutorGroup",
           "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue",
           "io.netty.util.internal.NativeLibraryLoader$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedKeyTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$SearchMappingsTask",
           "io.netty.util.internal.NativeLibraryLoader$2",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceValuesToLongTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeNode",
           "io.netty.util.internal.PriorityQueue$1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ReduceEntriesTask",
           "io.netty.util.collection.LongObjectHashMap$KeySet",
           "io.netty.util.ByteProcessor$1",
           "io.netty.util.internal.logging.InternalLogger",
           "io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Fun",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator",
           "io.netty.util.concurrent.EventExecutor",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView",
           "io.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef",
           "io.netty.util.collection.ByteCollections$UnmodifiableMap",
           "io.netty.util.internal.ThreadLocalRandom$3",
           "io.netty.util.internal.LongCounter",
           "io.netty.util.internal.ThreadLocalRandom$4",
           "io.netty.util.ByteProcessor$4",
           "io.netty.util.ByteProcessor$3",
           "io.netty.util.internal.ThreadLocalRandom$1",
           "io.netty.util.ByteProcessor$2",
           "io.netty.util.internal.ThreadLocalRandom$2",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedMappingTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachTransformedEntryTask",
           "io.netty.util.ResourceLeakHint",
           "io.netty.util.internal.logging.Log4J2Logger",
           "io.netty.util.collection.CharObjectHashMap$KeySet$1",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer",
           "io.netty.util.collection.ShortObjectHashMap$1",
           "io.netty.util.concurrent.ImmediateEventExecutor",
           "io.netty.util.collection.ShortObjectHashMap$2",
           "io.netty.util.Recycler$3",
           "io.netty.util.Recycler$1",
           "io.netty.util.Recycler$2",
           "io.netty.util.Attribute",
           "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner",
           "io.netty.util.concurrent.AbstractFuture",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL2Pad",
           "io.netty.util.Signal$1",
           "io.netty.util.ReferenceCounted",
           "io.netty.util.concurrent.DefaultFutureListeners",
           "io.netty.util.internal.NoOpTypeParameterMatcher",
           "io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess",
           "io.netty.util.collection.CharCollections$EmptyMap",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueL2Pad",
           "io.netty.util.ResourceLeakDetectorFactory",
           "io.netty.util.collection.IntObjectHashMap$KeySet$1",
           "io.netty.util.collection.LongCollections",
           "io.netty.util.internal.JavassistTypeParameterMatcherGenerator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesTask",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForwardingNode",
           "io.netty.util.internal.ConcurrentSet",
           "io.netty.util.internal.chmv8.ForkJoinPool",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Segment",
           "io.netty.util.AbstractConstant",
           "io.netty.util.AsciiString$GeneralCaseInsensitiveCharEqualityComparator",
           "io.netty.util.concurrent.GlobalEventExecutor",
           "io.netty.util.collection.CharObjectMap",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueuePad2",
           "io.netty.util.internal.Cleaner0",
           "io.netty.util.collection.LongObjectHashMap$KeySet$1",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueuePad3",
           "io.netty.util.internal.PlatformDependent",
           "io.netty.util.collection.ByteCollections$EmptyMap",
           "io.netty.util.concurrent.OrderedEventExecutor",
           "io.netty.util.concurrent.UnorderedThreadPoolEventExecutor",
           "io.netty.util.collection.CharCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueuePad1",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ForEachEntryTask",
           "io.netty.util.AsciiString$AsciiCaseInsensitiveCharEqualityComparator",
           "io.netty.util.collection.IntCollections",
           "io.netty.util.Version",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToInt",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask",
           "io.netty.util.collection.ByteObjectMap",
           "io.netty.util.collection.CharObjectHashMap",
           "io.netty.util.collection.CharObjectMap$PrimitiveEntry",
           "io.netty.util.collection.ShortObjectHashMap$MapIterator",
           "io.netty.util.AsciiString$2",
           "io.netty.util.internal.PriorityQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CounterCell",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToLongTask",
           "io.netty.util.AsciiString$1",
           "io.netty.util.concurrent.AbstractEventExecutor",
           "io.netty.util.collection.ByteObjectHashMap$PrimitiveIterator",
           "io.netty.util.collection.IntObjectMap",
           "io.netty.util.collection.ByteCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.ThreadDeathWatcher",
           "io.netty.util.collection.ShortCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.internal.logging.MessageFormatter",
           "io.netty.util.concurrent.GenericFutureListener",
           "io.netty.util.collection.IntObjectHashMap$MapIterator",
           "io.netty.util.collection.IntObjectMap$PrimitiveEntry",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToLong",
           "io.netty.util.collection.LongObjectHashMap$2",
           "io.netty.util.collection.ByteCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.collection.LongObjectHashMap$1",
           "io.netty.util.ByteProcessor$IndexNotOfProcessor",
           "io.netty.util.concurrent.GlobalEventExecutor$1",
           "io.netty.util.AttributeKey",
           "io.netty.util.concurrent.ScheduledFutureTask",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueProducerFields",
           "io.netty.util.concurrent.RejectedExecutionHandlers",
           "io.netty.util.concurrent.PromiseNotifier",
           "io.netty.util.collection.ByteObjectMap$PrimitiveEntry",
           "io.netty.util.collection.CharCollections$UnmodifiableMap$1",
           "io.netty.util.collection.CharObjectHashMap$EntrySet",
           "io.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode",
           "io.netty.util.collection.LongCollections$1",
           "io.netty.util.collection.IntObjectHashMap",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySpliterator",
           "io.netty.util.concurrent.RejectedExecutionHandler",
           "io.netty.util.internal.logging.Slf4JLoggerFactory",
           "io.netty.util.concurrent.SucceededFuture",
           "io.netty.util.collection.LongCollections$EmptyMap",
           "io.netty.util.collection.ByteObjectHashMap$2",
           "io.netty.util.collection.ByteObjectHashMap$1",
           "io.netty.util.concurrent.DefaultPromise$CauseHolder",
           "io.netty.util.Recycler",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueTailField",
           "io.netty.util.collection.LongObjectHashMap$MapIterator",
           "io.netty.util.AttributeKey$1",
           "io.netty.util.internal.shaded.org.jctools.util.Pow2",
           "io.netty.util.concurrent.NonStickyEventExecutorGroup",
           "io.netty.util.concurrent.ThreadProperties",
           "io.netty.util.internal.chmv8.Striped64$1",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueHeadLimitField",
           "io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping",
           "io.netty.util.internal.shaded.org.jctools.util.JvmInfo",
           "io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue",
           "io.netty.util.ResourceLeakDetector$Level",
           "io.netty.util.internal.chmv8.LongAdderV8",
           "io.netty.util.concurrent.ProgressiveFuture",
           "io.netty.util.internal.chmv8.ForkJoinTask$1",
           "io.netty.util.internal.PlatformDependent$Mpsc",
           "io.netty.util.concurrent.PromiseTask",
           "io.netty.util.internal.logging.AbstractInternalLogger$1",
           "io.netty.util.internal.PendingWrite$1",
           "io.netty.util.internal.shaded.org.jctools.queues.CircularArrayOffsetCalculator",
           "io.netty.util.internal.EmptyArrays",
           "io.netty.util.concurrent.NonStickyEventExecutorGroup$1",
           "io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher",
           "io.netty.util.internal.chmv8.ForkJoinPool$DefaultForkJoinWorkerThreadFactory",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceEntriesToIntTask",
           "io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise",
           "io.netty.util.concurrent.Promise",
           "io.netty.util.internal.logging.Slf4JLoggerFactory$1",
           "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable",
           "io.netty.util.collection.CharObjectHashMap$1",
           "io.netty.util.collection.ByteObjectHashMap$2$1",
           "io.netty.util.collection.CharObjectHashMap$2",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceMappingsToLongTask",
           "io.netty.util.internal.PriorityQueue$PriorityQueueIterator",
           "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef",
           "io.netty.util.collection.CharObjectHashMap$MapEntry",
           "io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry",
           "io.netty.util.collection.IntCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.ConstantPool",
           "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator",
           "io.netty.util.collection.ShortCollections",
           "io.netty.util.collection.LongObjectHashMap",
           "io.netty.util.BooleanSupplier",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView",
           "io.netty.util.internal.UnstableApi",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue",
           "io.netty.util.internal.chmv8.CountedCompleter$1",
           "io.netty.util.internal.ObjectUtil",
           "io.netty.util.internal.logging.JdkLogger",
           "io.netty.util.Mapping",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectToDouble",
           "io.netty.util.internal.chmv8.CountedCompleter",
           "io.netty.util.concurrent.FutureListener",
           "io.netty.util.AsciiString$CharEqualityComparator",
           "io.netty.util.internal.logging.InternalLogLevel",
           "io.netty.util.ResourceLeakDetector",
           "io.netty.util.concurrent.PromiseAggregator",
           "io.netty.util.concurrent.DefaultPromise",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong",
           "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueProducerField",
           "io.netty.util.Timer",
           "io.netty.util.collection.IntCollections$UnmodifiableMap$EntryImpl",
           "io.netty.util.AsyncMapping",
           "io.netty.util.collection.IntObjectHashMap$2$1",
           "io.netty.util.concurrent.ImmediateExecutor",
           "io.netty.util.concurrent.MultithreadEventExecutorGroup",
           "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerField",
           "io.netty.util.Recycler$Stack",
           "io.netty.util.AbstractReferenceCounted",
           "io.netty.util.collection.ShortObjectHashMap$2$1",
           "io.netty.util.collection.LongObjectHashMap$EntrySet",
           "io.netty.util.internal.logging.Slf4JLogger",
           "io.netty.util.concurrent.DefaultEventExecutorChooserFactory$PowerOfTowEventExecutorChooser",
           "io.netty.util.internal.chmv8.ForkJoinPool$ManagedBlocker",
           "io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser",
           "io.netty.util.DefaultAttributeMap",
           "io.netty.util.concurrent.FastThreadLocal",
           "io.netty.util.internal.OutOfDirectMemoryError",
           "io.netty.util.concurrent.AbstractScheduledEventExecutor$2",
           "io.netty.util.internal.IntegerHolder",
           "io.netty.util.concurrent.AbstractScheduledEventExecutor$1",
           "io.netty.util.Timeout",
           "io.netty.util.internal.PlatformDependent$Mpsc$1",
           "io.netty.util.collection.LongObjectHashMap$MapEntry",
           "io.netty.util.internal.chmv8.Striped64$Cell",
           "io.netty.util.internal.PendingWrite",
           "io.netty.util.concurrent.EventExecutorGroup",
           "io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy",
           "io.netty.util.internal.shaded.org.jctools.queues.PaddedCircularArrayOffsetCalculator",
           "io.netty.util.concurrent.SingleThreadEventExecutor$DefaultThreadProperties",
           "io.netty.util.internal.SystemPropertyUtil",
           "io.netty.util.concurrent.ThreadPerTaskExecutor",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt",
           "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapReduceKeysToDoubleTask",
           "io.netty.util.collection.LongCollections$UnmodifiableMap$IteratorImpl",
           "io.netty.util.Signal",
           "io.netty.util.Signal$SignalConstant"
          ],
          "usedTypes": [],
          "usageRatio": 0.0,
          "children": []
         }
        ]
       }
      ]
     },
     {
      "id": "io.netty:netty-handler:jar:4.1.6.Final:compile",
      "coordinates": "io.netty:netty-handler:4.1.6.Final",
      "groupId": "io.netty",
      "artifactId": "netty-handler",
      "version": "4.1.6.Final",
      "scope": "compile",
      "packaging": "jar",
      "omitted": false,
      "size": 319556,
      "type": "transitive",
      "status": "bloated",
      "parent": "biz.paluch.redis:lettuce:jar:5.0.0.Beta1:compile",
      "allTypes": [
       "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelectionListener",
       "io.netty.handler.traffic.TrafficCounter",
       "io.netty.handler.ssl.ReferenceCountedOpenSslContext$1",
       "io.netty.handler.ssl.ApplicationProtocolAccessor",
       "io.netty.handler.flush.FlushConsolidationHandler",
       "io.netty.handler.ssl.JdkApplicationProtocolNegotiator",
       "io.netty.handler.stream.ChunkedWriteHandler",
       "io.netty.handler.ssl.ReferenceCountedOpenSslContext$5",
       "io.netty.handler.ssl.OpenSslSessionTicketKey",
       "io.netty.handler.ssl.ReferenceCountedOpenSslContext$4",
       "io.netty.handler.ssl.ReferenceCountedOpenSslContext$3",
       "io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback",
       "io.netty.handler.traffic.GlobalTrafficShapingHandler$PerChannel",
       "io.netty.handler.ssl.ReferenceCountedOpenSslContext$2",
       "io.netty.handler.ssl.util.SimpleTrustManagerFactory$2",
       "io.netty.handler.ssl.util.SimpleTrustManagerFactory$1",
       "io.netty.handler.ssl.ClientAuth",
       "io.netty.handler.ipfilter.UniqueIpFilter$1",
       "io.netty.handler.ssl.ApplicationProtocolNegotiator",
       "io.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask",
       "io.netty.handler.timeout.IdleState",
       "io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$TrustManagerVerifyCallback",
       "io.netty.handler.ssl.ApplicationProtocolConfig",
       "io.netty.handler.timeout.IdleStateEvent",
       "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector",
       "io.netty.handler.ssl.SslContext$1",
       "io.netty.handler.stream.ChunkedStream",
       "io.netty.handler.stream.ChunkedNioFile",
       "io.netty.handler.ssl.OpenSslCertificateException",
       "io.netty.handler.ssl.OpenSslServerContext",
       "io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1",
       "io.netty.handler.ssl.SslHandler",
       "io.netty.handler.ssl.OpenSslSessionContext$EmptyEnumeration",
       "io.netty.handler.ssl.JdkSslClientContext",
       "io.netty.handler.ipfilter.IpFilterRule",
       "io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator",
       "io.netty.handler.timeout.IdleStateHandler$2",
       "io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator",
       "io.netty.handler.ssl.util.SimpleTrustManagerFactory",
       "io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator",
       "io.netty.handler.ssl.DelegatingSslContext",
       "io.netty.handler.traffic.GlobalTrafficShapingHandler",
       "io.netty.handler.ssl.util.InsecureTrustManagerFactory",
       "io.netty.handler.ssl.OpenSslSessionStats",
       "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory",
       "io.netty.handler.ssl.JdkSslSession",
       "io.netty.handler.ssl.PemReader",
       "io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState",
       "io.netty.handler.stream.ChunkedNioStream",
       "io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask",
       "io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator",
       "io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator",
       "io.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi",
       "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler",
       "io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ExtendedTrustManagerVerifyCallback",
       "io.netty.handler.ssl.SslContextBuilder",
       "io.netty.handler.ssl.JdkNpnSslEngine$2",
       "io.netty.handler.ssl.JdkNpnSslEngine$1",
       "io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier",
       "io.netty.handler.ssl.SniHandler$AsyncMappingAdapter",
       "io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext",
       "io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$TrustManagerVerifyCallback",
       "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory",
       "io.netty.handler.traffic.GlobalTrafficShapingHandler$ToSend",
       "io.netty.handler.ssl.ReferenceCountedOpenSslEngine",
       "io.netty.handler.timeout.WriteTimeoutException",
       "io.netty.handler.ssl.ApplicationProtocolConfig$Protocol",
       "io.netty.handler.ipfilter.IpSubnetFilterRule",
       "io.netty.handler.ssl.JdkNpnSslEngine",
       "io.netty.handler.ssl.OpenSslClientContext",
       "io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext",
       "io.netty.handler.ssl.NotSslRecordException",
       "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$1",
       "io.netty.handler.ssl.OpenSslEngineMap",
       "io.netty.handler.timeout.ReadTimeoutHandler",
       "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$4",
       "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$2",
       "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$3",
       "io.netty.handler.ssl.ReferenceCountedOpenSslServerContext",
       "io.netty.handler.ssl.CipherSuiteConverter",
       "io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque$1",
       "io.netty.handler.ssl.OpenSslSessionContext",
       "io.netty.handler.ssl.SslHandler$LazyChannelPromise",
       "io.netty.handler.ipfilter.IpFilterRuleType",
       "io.netty.handler.ssl.IdentityCipherSuiteFilter",
       "io.netty.handler.ssl.OpenSslX509Certificate",
       "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener",
       "io.netty.handler.logging.LoggingHandler",
       "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelector",
       "io.netty.handler.ssl.util.InsecureTrustManagerFactory$1",
       "io.netty.handler.ssl.JdkAlpnSslEngine$2",
       "io.netty.handler.ssl.SslHandler$3",
       "io.netty.handler.ssl.SslHandler$2",
       "io.netty.handler.ssl.JdkAlpnSslEngine$1",
       "io.netty.handler.ssl.SslHandler$1",
       "io.netty.handler.ssl.SslHandler$7",
       "io.netty.handler.ssl.SslHandler$6",
       "io.netty.handler.ssl.SslHandler$5",
       "io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask",
       "io.netty.handler.ssl.SslHandler$4",
       "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$2",
       "io.netty.handler.ssl.SslHandler$9",
       "io.netty.handler.ssl.SslHandler$8",
       "io.netty.handler.ssl.SupportedCipherSuiteFilter",
       "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$PerChannel",
       "io.netty.handler.timeout.WriteTimeoutHandler",
       "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelectionListener",
       "io.netty.handler.flow.FlowControlHandler$1",
       "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1",
       "io.netty.handler.traffic.AbstractTrafficShapingHandler",
       "io.netty.handler.ssl.util.SelfSignedCertificate",
       "io.netty.handler.ssl.SniHandler$Selection",
       "io.netty.handler.ssl.OpenSslContext",
       "io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule",
       "io.netty.handler.timeout.TimeoutException",
       "io.netty.handler.ssl.SslParametersUtils",
       "io.netty.handler.ssl.SslProvider",
       "io.netty.handler.ipfilter.AbstractRemoteAddressFilter",
       "io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator",
       "io.netty.handler.flow.FlowControlHandler",
       "io.netty.handler.ssl.PemEncoded",
       "io.netty.handler.ssl.PemX509Certificate",
       "io.netty.handler.stream.ChunkedWriteHandler$1",
       "io.netty.handler.stream.ChunkedWriteHandler$2",
       "io.netty.handler.ssl.OpenSslServerSessionContext",
       "io.netty.handler.ssl.CipherSuiteFilter",
       "io.netty.handler.stream.ChunkedWriteHandler$3",
       "io.netty.handler.stream.ChunkedWriteHandler$4",
       "io.netty.handler.ssl.OpenSsl$2",
       "io.netty.handler.traffic.AbstractTrafficShapingHandler$ReopenReadTimerTask",
       "io.netty.handler.ssl.OpenSsl$1",
       "io.netty.handler.ssl.SniHandler$1",
       "io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1",
       "io.netty.handler.ipfilter.IpSubnetFilterRule$1",
       "io.netty.handler.ssl.JdkSslContext",
       "io.netty.handler.ssl.OpenSslKeyMaterialManager",
       "io.netty.handler.traffic.ChannelTrafficShapingHandler",
       "io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslCertificateRequestedCallback",
       "io.netty.handler.ssl.ReferenceCountedOpenSslContext$DefaultOpenSslEngineMap",
       "io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask",
       "io.netty.handler.logging.LogLevel",
       "io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1",
       "io.netty.handler.ssl.util.FingerprintTrustManagerFactory$2",
       "io.netty.handler.ssl.JdkSslEngine",
       "io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator",
       "io.netty.handler.ssl.ReferenceCountedOpenSslEngine$OpenSslSession",
       "io.netty.handler.ssl.util.X509TrustManagerWrapper",
       "io.netty.handler.ssl.SslUtils",
       "io.netty.handler.ssl.OpenSslSessionContext$1",
       "io.netty.handler.ipfilter.UniqueIpFilter",
       "io.netty.handler.traffic.GlobalChannelTrafficCounter$MixedTrafficMonitoringTask",
       "io.netty.handler.ssl.util.ThreadLocalInsecureRandom",
       "io.netty.handler.ssl.JdkSslContext$1",
       "io.netty.handler.traffic.ChannelTrafficShapingHandler$1",
       "io.netty.handler.ssl.OpenSsl",
       "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$ToSend",
       "io.netty.handler.ssl.SslContext",
       "io.netty.handler.ipfilter.RuleBasedIpFilter",
       "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1$1",
       "io.netty.handler.ssl.ReferenceCountedOpenSslContext",
       "io.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask",
       "io.netty.handler.ssl.OpenSslExtendedKeyMaterialManager",
       "io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator",
       "io.netty.handler.ssl.PemValue",
       "io.netty.handler.flush.FlushConsolidationHandler$1",
       "io.netty.handler.ssl.PemPrivateKey",
       "io.netty.handler.ssl.util.FingerprintTrustManagerFactory",
       "io.netty.handler.ssl.ApplicationProtocolNegotiationHandler",
       "io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator$1",
       "io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator",
       "io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior",
       "io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque",
       "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector",
       "io.netty.handler.ipfilter.IpSubnetFilterRule$Ip6SubnetFilterRule",
       "io.netty.handler.stream.ChunkedInput",
       "io.netty.handler.ssl.ReferenceCountedOpenSslEngine$1",
       "io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2",
       "io.netty.handler.timeout.IdleStateHandler$1",
       "io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory",
       "io.netty.handler.ssl.SniHandler",
       "io.netty.handler.stream.ChunkedWriteHandler$PendingWrite",
       "io.netty.handler.ssl.OpenSslEngine",
       "io.netty.handler.stream.ChunkedFile",
       "io.netty.handler.traffic.GlobalTrafficShapingHandler$1",
       "io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior",
       "io.netty.handler.timeout.ReadTimeoutException",
       "io.netty.handler.ssl.SslHandshakeCompletionEvent",
       "io.netty.handler.ssl.ApplicationProtocolUtil",
       "io.netty.handler.ssl.JdkAlpnSslEngine",
       "io.netty.handler.traffic.GlobalChannelTrafficCounter",
       "io.netty.handler.traffic.TrafficCounter$1",
       "io.netty.handler.ssl.ReferenceCountedOpenSslClientContext",
       "io.netty.handler.ssl.ApplicationProtocolNames",
       "io.netty.handler.timeout.IdleStateHandler",
       "io.netty.handler.ssl.JdkSslServerContext",
       "io.netty.handler.ssl.OpenSslJavaxX509Certificate",
       "io.netty.handler.traffic.ChannelTrafficShapingHandler$ToSend"
      ],
      "usedTypes": [],
      "usageRatio": 0.0,
      "children": [
       {
        "id": "io.netty:netty-buffer:jar:4.1.6.Final:compile",
        "coordinates": "io.netty:netty-buffer:4.1.6.Final",
        "groupId": "io.netty",
        "artifactId": "netty-buffer",
        "version": "4.1.6.Final",
        "scope": "compile",
        "packaging": "jar",
        "omitted": true,
        "size": 253503,
        "type": "transitive",
        "status": "bloated",
        "parent": "io.netty:netty-handler:jar:4.1.6.Final:compile",
        "allTypes": [
         "io.netty.buffer.PooledSlicedByteBuf$1",
         "io.netty.buffer.ReadOnlyByteBuf",
         "io.netty.buffer.ByteBufUtil$1",
         "io.netty.buffer.ByteBufUtil$2",
         "io.netty.buffer.ByteBufHolder",
         "io.netty.buffer.CompositeByteBuf$Component",
         "io.netty.buffer.UnsafeByteBufUtil",
         "io.netty.buffer.DuplicatedByteBuf",
         "io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache",
         "io.netty.buffer.PoolArena$HeapArena",
         "io.netty.buffer.PooledDirectByteBuf",
         "io.netty.buffer.AbstractUnsafeSwappedByteBuf",
         "io.netty.buffer.DefaultByteBufHolder",
         "io.netty.buffer.UnsafeDirectSwappedByteBuf",
         "io.netty.buffer.PooledSlicedByteBuf",
         "io.netty.buffer.PooledByteBufAllocator",
         "io.netty.buffer.UnpooledDirectByteBuf",
         "io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry",
         "io.netty.buffer.AbstractReferenceCountedByteBuf",
         "io.netty.buffer.UnpooledHeapByteBuf",
         "io.netty.buffer.UnpooledByteBufAllocator",
         "io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache",
         "io.netty.buffer.AdvancedLeakAwareByteBuf",
         "io.netty.buffer.FixedCompositeByteBuf",
         "io.netty.buffer.PooledUnsafeDirectByteBuf$1",
         "io.netty.buffer.FixedCompositeByteBuf$Component",
         "io.netty.buffer.PoolArena$SizeClass",
         "io.netty.buffer.SimpleLeakAwareByteBuf",
         "io.netty.buffer.UnsafeHeapSwappedByteBuf",
         "io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache",
         "io.netty.buffer.PooledByteBuf",
         "io.netty.buffer.PoolThreadCache$MemoryRegionCache$1",
         "io.netty.buffer.PooledDuplicatedByteBuf$1",
         "io.netty.buffer.AbstractPooledDerivedByteBuf",
         "io.netty.buffer.PoolArena$1",
         "io.netty.buffer.PooledUnsafeHeapByteBuf$1",
         "io.netty.buffer.ByteBufUtil$HexUtil",
         "io.netty.buffer.PooledHeapByteBuf",
         "io.netty.buffer.PoolArena$DirectArena",
         "io.netty.buffer.ReadOnlyUnsafeDirectByteBuf",
         "io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf",
         "io.netty.buffer.AdvancedLeakAwareCompositeByteBuf",
         "io.netty.buffer.UnreleasableByteBuf",
         "io.netty.buffer.ByteBufAllocator",
         "io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1",
         "io.netty.buffer.PoolChunkList",
         "io.netty.buffer.PoolSubpageMetric",
         "io.netty.buffer.WrappedCompositeByteBuf",
         "io.netty.buffer.SwappedByteBuf",
         "io.netty.buffer.PoolSubpage",
         "io.netty.buffer.Unpooled",
         "io.netty.buffer.ReadOnlyByteBufferBuf",
         "io.netty.buffer.ByteBufProcessor$10",
         "io.netty.buffer.UnpooledUnsafeHeapByteBuf",
         "io.netty.buffer.AbstractByteBuf",
         "io.netty.buffer.HeapByteBufUtil",
         "io.netty.buffer.ByteBufProcessor",
         "io.netty.buffer.UnpooledUnsafeDirectByteBuf",
         "io.netty.buffer.PoolArena",
         "io.netty.buffer.AbstractByteBufAllocator",
         "io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1",
         "io.netty.buffer.WrappedUnpooledUnsafeDirectByteBuf",
         "io.netty.buffer.ByteBufOutputStream",
         "io.netty.buffer.PoolArenaMetric",
         "io.netty.buffer.PooledDirectByteBuf$1",
         "io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf",
         "io.netty.buffer.CompositeByteBuf",
         "io.netty.buffer.UnpooledDuplicatedByteBuf",
         "io.netty.buffer.PoolThreadCache",
         "io.netty.buffer.PooledDuplicatedByteBuf",
         "io.netty.buffer.PooledUnsafeHeapByteBuf",
         "io.netty.buffer.PooledHeapByteBuf$1",
         "io.netty.buffer.PoolChunk",
         "io.netty.buffer.PoolChunkMetric",
         "io.netty.buffer.AbstractDerivedByteBuf",
         "io.netty.buffer.UnpooledSlicedByteBuf",
         "io.netty.buffer.AbstractByteBufAllocator$1",
         "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator",
         "io.netty.buffer.PooledUnsafeDirectByteBuf",
         "io.netty.buffer.ByteBuf",
         "io.netty.buffer.SimpleLeakAwareCompositeByteBuf",
         "io.netty.buffer.SlicedByteBuf",
         "io.netty.buffer.ByteBufInputStream",
         "io.netty.buffer.PoolThreadCache$1",
         "io.netty.buffer.PoolThreadCache$MemoryRegionCache",
         "io.netty.buffer.AbstractUnpooledSlicedByteBuf",
         "io.netty.buffer.ByteBufProcessor$1",
         "io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf",
         "io.netty.buffer.WrappedByteBuf",
         "io.netty.buffer.ByteBufProcessor$2",
         "io.netty.buffer.ByteBufProcessor$5",
         "io.netty.buffer.ByteBufProcessor$6",
         "io.netty.buffer.ByteBufProcessor$3",
         "io.netty.buffer.ByteBufUtil",
         "io.netty.buffer.PoolChunkListMetric",
         "io.netty.buffer.ByteBufProcessor$4",
         "io.netty.buffer.CompositeByteBuf$1",
         "io.netty.buffer.ByteBufProcessor$9",
         "io.netty.buffer.EmptyByteBuf",
         "io.netty.buffer.ByteBufProcessor$7",
         "io.netty.buffer.ByteBufProcessor$8",
         "io.netty.buffer.PoolThreadCache$2"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "io.netty:netty-transport:jar:4.1.6.Final:compile",
        "coordinates": "io.netty:netty-transport:4.1.6.Final",
        "groupId": "io.netty",
        "artifactId": "netty-transport",
        "version": "4.1.6.Final",
        "scope": "compile",
        "packaging": "jar",
        "omitted": true,
        "size": 427007,
        "type": "transitive",
        "status": "bloated",
        "parent": "io.netty:netty-handler:jar:4.1.6.Final:compile",
        "allTypes": [
         "io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException",
         "io.netty.channel.pool.FixedChannelPool$AcquireTask",
         "io.netty.channel.group.DefaultChannelGroup",
         "io.netty.channel.ChannelInboundHandlerAdapter",
         "io.netty.bootstrap.Bootstrap$2",
         "io.netty.bootstrap.Bootstrap$3",
         "io.netty.channel.DefaultMessageSizeEstimator$1",
         "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask",
         "io.netty.channel.socket.DatagramChannel",
         "io.netty.channel.socket.oio.OioSocketChannel$3",
         "io.netty.channel.socket.oio.OioSocketChannel$2",
         "io.netty.channel.socket.oio.OioSocketChannel$1",
         "io.netty.channel.nio.NioEventLoop$1",
         "io.netty.channel.socket.InternetProtocolFamily",
         "io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig",
         "io.netty.channel.nio.NioEventLoop$2",
         "io.netty.channel.nio.NioEventLoop$3",
         "io.netty.channel.nio.NioEventLoop$4",
         "io.netty.channel.nio.NioEventLoop$5",
         "io.netty.channel.nio.NioEventLoop$6",
         "io.netty.channel.MaxMessagesRecvByteBufAllocator",
         "io.netty.bootstrap.Bootstrap$1",
         "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1",
         "io.netty.channel.ChannelOutboundHandlerAdapter",
         "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2",
         "io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint",
         "io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1",
         "io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise",
         "io.netty.channel.group.ChannelMatchers$ClassMatcher",
         "io.netty.channel.oio.AbstractOioMessageChannel",
         "io.netty.channel.pool.ChannelHealthChecker",
         "io.netty.channel.ChannelOutboundBuffer$MessageProcessor",
         "io.netty.channel.AbstractChannelHandlerContext$WriteTask",
         "io.netty.channel.ChannelPipelineException",
         "io.netty.channel.socket.ServerSocketChannelConfig",
         "io.netty.channel.PendingWriteQueue$PendingWrite",
         "io.netty.channel.socket.nio.NioDatagramChannel",
         "io.netty.channel.pool.AbstractChannelPoolHandler",
         "io.netty.channel.group.VoidChannelGroupFuture",
         "io.netty.bootstrap.BootstrapConfig",
         "io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator",
         "io.netty.channel.ChannelOption",
         "io.netty.channel.SucceededChannelFuture",
         "io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction",
         "io.netty.channel.embedded.EmbeddedChannel$1",
         "io.netty.channel.embedded.EmbeddedChannel$2",
         "io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl",
         "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask",
         "io.netty.channel.socket.oio.OioSocketChannel",
         "io.netty.channel.group.ChannelMatcher",
         "io.netty.channel.AbstractChannelHandlerContext",
         "io.netty.channel.CoalescingBufferQueue",
         "io.netty.channel.ChannelMetadata",
         "io.netty.channel.ChannelOutboundBuffer$1",
         "io.netty.channel.ThreadPerChannelEventLoopGroup$1",
         "io.netty.channel.ChannelOutboundBuffer$2",
         "io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint",
         "io.netty.channel.ChannelOutboundBuffer$3",
         "io.netty.channel.CombinedChannelDuplexHandler",
         "io.netty.channel.ChannelOutboundHandler",
         "io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask",
         "io.netty.channel.SelectStrategy",
         "io.netty.channel.ThreadPerChannelEventLoopGroup",
         "io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig",
         "io.netty.channel.socket.nio.NioSocketChannel$1",
         "io.netty.channel.oio.AbstractOioChannel$DefaultOioUnsafe",
         "io.netty.channel.pool.SimpleChannelPool",
         "io.netty.channel.SimpleChannelInboundHandler",
         "io.netty.channel.nio.NioEventLoop",
         "io.netty.channel.pool.ChannelPool",
         "io.netty.channel.nio.AbstractNioByteChannel",
         "io.netty.channel.socket.oio.OioServerSocketChannelConfig",
         "io.netty.channel.MultithreadEventLoopGroup",
         "io.netty.channel.embedded.EmbeddedChannel$State",
         "io.netty.channel.ChannelId",
         "io.netty.channel.embedded.EmbeddedChannel$EmbeddedChannelPipeline",
         "io.netty.channel.embedded.EmbeddedEventLoop",
         "io.netty.channel.local.LocalServerChannel$1",
         "io.netty.channel.local.LocalServerChannel$2",
         "io.netty.channel.DefaultChannelProgressivePromise",
         "io.netty.channel.socket.nio.NioSocketChannel$5",
         "io.netty.channel.MessageSizeEstimator",
         "io.netty.channel.socket.nio.NioSocketChannel$4",
         "io.netty.channel.socket.nio.NioSocketChannel$3",
         "io.netty.channel.ChannelProgressiveFuture",
         "io.netty.channel.socket.nio.NioSocketChannel$2",
         "io.netty.channel.MaxBytesRecvByteBufAllocator",
         "io.netty.channel.socket.nio.NioSocketChannel$6",
         "io.netty.channel.socket.DatagramPacket",
         "io.netty.channel.pool.ChannelPoolHandler",
         "io.netty.channel.group.ChannelMatchers$1",
         "io.netty.channel.socket.nio.NioServerSocketChannel$1",
         "io.netty.bootstrap.AbstractBootstrap$2",
         "io.netty.bootstrap.AbstractBootstrap$1",
         "io.netty.channel.AbstractEventLoop",
         "io.netty.channel.ConnectTimeoutException",
         "io.netty.channel.ChannelHandlerAdapter",
         "io.netty.channel.socket.nio.NioServerSocketChannel",
         "io.netty.channel.AbstractChannel$AbstractUnsafe",
         "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1",
         "io.netty.channel.EventLoop",
         "io.netty.channel.nio.AbstractNioMessageChannel",
         "io.netty.channel.nio.NioEventLoopGroup",
         "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext",
         "io.netty.channel.local.LocalChannel$6",
         "io.netty.channel.embedded.EmbeddedSocketAddress",
         "io.netty.channel.local.LocalChannel$2",
         "io.netty.channel.local.LocalEventLoopGroup",
         "io.netty.channel.nio.AbstractNioMessageChannel$1",
         "io.netty.channel.local.LocalChannel$3",
         "io.netty.channel.local.LocalChannel$4",
         "io.netty.channel.SingleThreadEventLoop",
         "io.netty.channel.local.LocalChannel$5",
         "io.netty.channel.DefaultFileRegion",
         "io.netty.channel.PendingWriteQueue$1",
         "io.netty.channel.local.LocalChannel$1",
         "io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1",
         "io.netty.channel.ChannelFutureListener$3",
         "io.netty.channel.ChannelFutureListener$2",
         "io.netty.channel.socket.oio.OioDatagramChannel",
         "io.netty.channel.ChannelFutureListener$1",
         "io.netty.channel.socket.ChannelInputShutdownEvent",
         "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1",
         "io.netty.channel.socket.oio.DefaultOioSocketChannelConfig",
         "io.netty.channel.ChannelHandlerContext",
         "io.netty.channel.FixedRecvByteBufAllocator",
         "io.netty.bootstrap.ServerBootstrap$1",
         "io.netty.channel.ChannelFutureListener",
         "io.netty.channel.AbstractChannelHandlerContext$WriteTask$1",
         "io.netty.channel.AdaptiveRecvByteBufAllocator",
         "io.netty.channel.pool.FixedChannelPool$TimeoutTask",
         "io.netty.channel.nio.AbstractNioChannel",
         "io.netty.channel.FileRegion",
         "io.netty.channel.nio.AbstractNioChannel$NioUnsafe",
         "io.netty.channel.ChannelProgressivePromise",
         "io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe",
         "io.netty.channel.EventLoopGroup",
         "io.netty.channel.embedded.EmbeddedChannelId",
         "io.netty.channel.AbstractServerChannel$DefaultServerUnsafe",
         "io.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry",
         "io.netty.channel.oio.OioByteStreamChannel$2",
         "io.netty.channel.oio.OioByteStreamChannel$1",
         "io.netty.channel.Channel$Unsafe",
         "io.netty.channel.VoidChannelPromise",
         "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1",
         "io.netty.channel.oio.AbstractOioByteChannel",
         "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2",
         "io.netty.bootstrap.ServerBootstrap$1$1",
         "io.netty.channel.group.ChannelMatchers$InvertMatcher",
         "io.netty.channel.FixedRecvByteBufAllocator$HandleImpl",
         "io.netty.channel.ChannelOutboundBuffer$Entry$1",
         "io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe",
         "io.netty.channel.nio.SelectedSelectionKeySet",
         "io.netty.channel.local.LocalServerChannel",
         "io.netty.channel.ChannelInboundHandler",
         "io.netty.channel.socket.oio.OioServerSocketChannel",
         "io.netty.bootstrap.AbstractBootstrapConfig",
         "io.netty.channel.socket.oio.OioSocketChannelConfig",
         "io.netty.channel.DefaultMessageSizeEstimator",
         "io.netty.channel.DefaultMaxBytesRecvByteBufAllocator",
         "io.netty.channel.local.LocalAddress",
         "io.netty.channel.AbstractServerChannel$1",
         "io.netty.channel.FailedChannelFuture",
         "io.netty.channel.DefaultChannelHandlerContext",
         "io.netty.channel.socket.SocketChannel",
         "io.netty.channel.local.LocalChannel$State",
         "io.netty.channel.ChannelHandler$Sharable",
         "io.netty.channel.AbstractChannel$AnnotatedSocketException",
         "io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback",
         "io.netty.channel.RecvByteBufAllocator",
         "io.netty.channel.ChannelPipeline",
         "io.netty.channel.oio.OioByteStreamChannel",
         "io.netty.channel.RecvByteBufAllocator$DelegatingHandle",
         "io.netty.channel.ServerChannel",
         "io.netty.channel.socket.nio.ProtocolFamilyConverter$1",
         "io.netty.channel.nio.AbstractNioByteChannel$1",
         "io.netty.channel.embedded.EmbeddedChannel$DefaultUnsafe",
         "io.netty.channel.ChannelException",
         "io.netty.channel.ChannelFlushPromiseNotifier",
         "io.netty.channel.AbstractChannelHandlerContext$2",
         "io.netty.channel.AbstractChannelHandlerContext$1",
         "io.netty.channel.ChannelProgressiveFutureListener",
         "io.netty.channel.pool.FixedChannelPool$AcquireListener",
         "io.netty.channel.AbstractChannelHandlerContext$4",
         "io.netty.channel.AbstractChannelHandlerContext$3",
         "io.netty.channel.AbstractChannelHandlerContext$6",
         "io.netty.channel.ThreadPerChannelEventLoop$1",
         "io.netty.channel.AbstractChannelHandlerContext$5",
         "io.netty.channel.ThreadPerChannelEventLoop$2",
         "io.netty.channel.VoidChannelPromise$1",
         "io.netty.channel.AbstractChannelHandlerContext$8",
         "io.netty.channel.AbstractChannelHandlerContext$7",
         "io.netty.channel.pool.ChannelPoolMap",
         "io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle",
         "io.netty.channel.AbstractChannelHandlerContext$9",
         "io.netty.channel.CompleteChannelFuture",
         "io.netty.channel.ChannelOption$1",
         "io.netty.channel.DefaultEventLoop",
         "io.netty.channel.AbstractChannel",
         "io.netty.channel.AddressedEnvelope",
         "io.netty.bootstrap.ChannelFactory",
         "io.netty.channel.MessageSizeEstimator$Handle",
         "io.netty.channel.socket.ServerSocketChannel",
         "io.netty.channel.PendingWriteQueue$PendingWrite$1",
         "io.netty.channel.ThreadPerChannelEventLoop",
         "io.netty.channel.ChannelFactory",
         "io.netty.channel.DefaultSelectStrategyFactory",
         "io.netty.channel.group.DefaultChannelGroupFuture$1",
         "io.netty.channel.group.ChannelGroupException",
         "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe",
         "io.netty.channel.DefaultEventLoopGroup",
         "io.netty.channel.local.LocalChannelRegistry",
         "io.netty.channel.AbstractChannel$AnnotatedConnectException",
         "io.netty.channel.Channel",
         "io.netty.bootstrap.Bootstrap",
         "io.netty.channel.RecvByteBufAllocator$Handle",
         "io.netty.channel.ReflectiveChannelFactory",
         "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask",
         "io.netty.channel.group.ChannelGroupFuture",
         "io.netty.channel.local.LocalChannel$LocalUnsafe",
         "io.netty.channel.AbstractChannel$AbstractUnsafe$1",
         "io.netty.channel.pool.ChannelHealthChecker$1",
         "io.netty.channel.DefaultAddressedEnvelope",
         "io.netty.channel.DefaultChannelPipeline$TailContext",
         "io.netty.channel.DefaultChannelConfig",
         "io.netty.channel.AbstractChannel$AbstractUnsafe$7",
         "io.netty.channel.AbstractChannelHandlerContext$11",
         "io.netty.channel.AbstractChannel$AbstractUnsafe$6",
         "io.netty.channel.AbstractChannelHandlerContext$10",
         "io.netty.channel.AbstractChannelHandlerContext$13",
         "io.netty.channel.nio.NioTask",
         "io.netty.channel.AbstractServerChannel",
         "io.netty.channel.AbstractChannelHandlerContext$12",
         "io.netty.channel.AbstractChannel$AbstractUnsafe$8",
         "io.netty.channel.AbstractChannel$AbstractUnsafe$3",
         "io.netty.channel.AbstractChannel$AbstractUnsafe$2",
         "io.netty.channel.AbstractChannel$AbstractUnsafe$5",
         "io.netty.channel.AbstractChannel$AbstractUnsafe$4",
         "io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe",
         "io.netty.channel.DefaultMessageSizeEstimator$HandleImpl",
         "io.netty.channel.ChannelPromise",
         "io.netty.channel.local.LocalChannel",
         "io.netty.channel.socket.DefaultSocketChannelConfig",
         "io.netty.channel.pool.FixedChannelPool",
         "io.netty.bootstrap.AbstractBootstrap",
         "io.netty.channel.SelectStrategyFactory",
         "io.netty.channel.DefaultChannelPromise",
         "io.netty.channel.group.CombinedIterator",
         "io.netty.channel.ChannelDuplexHandler",
         "io.netty.channel.pool.SimpleChannelPool$3",
         "io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl",
         "io.netty.channel.pool.SimpleChannelPool$2",
         "io.netty.channel.DefaultChannelId",
         "io.netty.channel.pool.SimpleChannelPool$5",
         "io.netty.channel.group.ChannelGroup",
         "io.netty.channel.pool.SimpleChannelPool$4",
         "io.netty.channel.ChannelInitializer",
         "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
         "io.netty.channel.pool.SimpleChannelPool$6",
         "io.netty.channel.oio.AbstractOioChannel",
         "io.netty.channel.group.DefaultChannelGroup$1",
         "io.netty.channel.pool.SimpleChannelPool$1",
         "io.netty.channel.ChannelOutboundBuffer",
         "io.netty.channel.AbstractChannelHandlerContext$15",
         "io.netty.channel.AbstractChannelHandlerContext$14",
         "io.netty.channel.AbstractChannelHandlerContext$16",
         "io.netty.channel.ChannelOutboundInvoker",
         "io.netty.channel.CombinedChannelDuplexHandler$1",
         "io.netty.channel.ChannelOutboundBuffer$Entry",
         "io.netty.channel.DefaultChannelPipeline",
         "io.netty.bootstrap.ServerBootstrapConfig",
         "io.netty.channel.group.ChannelGroupFutureListener",
         "io.netty.channel.socket.nio.NioSocketChannel",
         "io.netty.channel.nio.AbstractNioChannel$2",
         "io.netty.channel.WriteBufferWaterMark",
         "io.netty.channel.AbstractEventLoopGroup",
         "io.netty.channel.socket.SocketChannelConfig",
         "io.netty.channel.socket.DefaultServerSocketChannelConfig",
         "io.netty.channel.pool.FixedChannelPool$6",
         "io.netty.channel.nio.AbstractNioChannel$1",
         "io.netty.channel.socket.nio.NioDatagramChannelConfig",
         "io.netty.channel.pool.FixedChannelPool$3",
         "io.netty.channel.pool.FixedChannelPool$2",
         "io.netty.channel.EventLoopException",
         "io.netty.channel.DefaultChannelPipeline$HeadContext",
         "io.netty.channel.pool.FixedChannelPool$5",
         "io.netty.channel.pool.FixedChannelPool$4",
         "io.netty.channel.socket.DatagramChannelConfig",
         "io.netty.channel.pool.FixedChannelPool$1",
         "io.netty.channel.socket.DuplexChannel",
         "io.netty.channel.oio.AbstractOioChannel$1",
         "io.netty.channel.oio.AbstractOioChannel$2",
         "io.netty.channel.oio.AbstractOioChannel$3",
         "io.netty.channel.socket.nio.ProtocolFamilyConverter",
         "io.netty.channel.group.ChannelMatchers$InstanceMatcher",
         "io.netty.channel.group.ChannelMatchers",
         "io.netty.channel.PendingWriteQueue",
         "io.netty.channel.embedded.EmbeddedChannel",
         "io.netty.channel.oio.OioEventLoopGroup",
         "io.netty.channel.group.ChannelMatchers$CompositeMatcher",
         "io.netty.channel.ChannelPromiseNotifier",
         "io.netty.channel.ChannelInboundInvoker",
         "io.netty.channel.SingleThreadEventLoop$NonWakeupRunnable",
         "io.netty.channel.ChannelFuture",
         "io.netty.channel.AbstractChannel$CloseFuture",
         "io.netty.channel.group.DefaultChannelGroupFuture",
         "io.netty.channel.ChannelConfig",
         "io.netty.channel.DefaultChannelPipeline$9",
         "io.netty.channel.DefaultChannelPipeline$6",
         "io.netty.bootstrap.ServerBootstrap",
         "io.netty.channel.DefaultChannelPipeline$5",
         "io.netty.channel.DefaultSelectStrategy",
         "io.netty.channel.DefaultChannelPipeline$8",
         "io.netty.channel.ChannelHandler",
         "io.netty.channel.DefaultChannelPipeline$7",
         "io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig",
         "io.netty.channel.socket.DefaultDatagramChannelConfig",
         "io.netty.channel.pool.AbstractChannelPoolMap",
         "io.netty.channel.ChannelPromiseAggregator",
         "io.netty.channel.DefaultChannelPipeline$2",
         "io.netty.channel.local.PreferHeapByteBufAllocator",
         "io.netty.channel.DefaultChannelPipeline$1",
         "io.netty.channel.DefaultChannelPipeline$4",
         "io.netty.channel.DefaultChannelPipeline$3"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": []
       },
       {
        "id": "io.netty:netty-codec:jar:4.1.6.Final:compile",
        "coordinates": "io.netty:netty-codec:4.1.6.Final",
        "groupId": "io.netty",
        "artifactId": "netty-codec",
        "version": "4.1.6.Final",
        "scope": "compile",
        "packaging": "jar",
        "omitted": false,
        "size": 304557,
        "type": "transitive",
        "status": "bloated",
        "parent": "io.netty:netty-handler:jar:4.1.6.Final:compile",
        "allTypes": [
         "io.netty.handler.codec.compression.FastLz",
         "io.netty.handler.codec.ByteToMessageCodec$Encoder",
         "io.netty.handler.codec.compression.CompressionException",
         "io.netty.handler.codec.PrematureChannelClosureException",
         "io.netty.handler.codec.serialization.ClassLoaderClassResolver",
         "io.netty.handler.codec.compression.ZlibEncoder",
         "io.netty.handler.codec.marshalling.CompatibleMarshallingDecoder",
         "io.netty.handler.codec.compression.Bzip2Decoder$State",
         "io.netty.handler.codec.compression.Bzip2HuffmanStageEncoder",
         "io.netty.handler.codec.compression.CompressionUtil",
         "io.netty.handler.codec.HeadersUtils$CharSequenceDelegatingStringSet",
         "io.netty.handler.codec.base64.Base64",
         "io.netty.handler.codec.compression.Bzip2BlockCompressor",
         "io.netty.handler.codec.compression.SnappyFramedDecoder",
         "io.netty.handler.codec.serialization.ObjectDecoderInputStream",
         "io.netty.handler.codec.CodecException",
         "io.netty.handler.codec.compression.SnappyFrameDecoder$1",
         "io.netty.handler.codec.bytes.ByteArrayDecoder",
         "io.netty.handler.codec.marshalling.ChannelBufferByteInput",
         "io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException",
         "io.netty.handler.codec.compression.JZlibEncoder",
         "io.netty.handler.codec.marshalling.MarshallingDecoder",
         "io.netty.handler.codec.ProtocolDetectionState",
         "io.netty.handler.codec.compression.LzmaFrameEncoder",
         "io.netty.handler.codec.HeadersUtils$DelegatingStringSet",
         "io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType",
         "io.netty.handler.codec.HeadersUtils",
         "io.netty.handler.codec.compression.ByteBufChecksum$1",
         "io.netty.handler.codec.DelimiterBasedFrameDecoder",
         "io.netty.handler.codec.compression.Bzip2Encoder$1",
         "io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType",
         "io.netty.handler.codec.DefaultHeadersImpl",
         "io.netty.handler.codec.compression.Bzip2Encoder$2",
         "io.netty.handler.codec.MessageToMessageCodec",
         "io.netty.handler.codec.compression.Bzip2Encoder$3",
         "io.netty.handler.codec.compression.Bzip2Encoder$4",
         "io.netty.handler.codec.DefaultHeaders$HeaderDateFormat$1",
         "io.netty.handler.codec.LineBasedFrameDecoder",
         "io.netty.handler.codec.serialization.ClassResolvers",
         "io.netty.handler.codec.string.StringDecoder",
         "io.netty.handler.codec.protobuf.ProtobufEncoder",
         "io.netty.handler.codec.compression.Lz4FrameDecoder",
         "io.netty.handler.codec.serialization.ObjectDecoder",
         "io.netty.handler.codec.serialization.ClassResolver",
         "io.netty.handler.codec.compression.FastLzFrameEncoder",
         "io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender",
         "io.netty.handler.codec.DefaultHeaders$1",
         "io.netty.handler.codec.compression.LzfDecoder",
         "io.netty.handler.codec.compression.JdkZlibDecoder",
         "io.netty.handler.codec.HeadersUtils$StringIterator",
         "io.netty.handler.codec.compression.Snappy$1",
         "io.netty.handler.codec.compression.Crc32c",
         "io.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider",
         "io.netty.handler.codec.compression.Bzip2Decoder$1",
         "io.netty.handler.codec.serialization.CachingClassResolver",
         "io.netty.handler.codec.compression.Bzip2BlockCompressor$1",
         "io.netty.handler.codec.compression.JZlibEncoder$3",
         "io.netty.handler.codec.compression.JZlibEncoder$1",
         "io.netty.handler.codec.compression.JZlibEncoder$2",
         "io.netty.handler.codec.CharSequenceValueConverter",
         "io.netty.handler.codec.ByteToMessageDecoder$2",
         "io.netty.handler.codec.ByteToMessageDecoder$1",
         "io.netty.handler.codec.HeadersUtils$StringEntryIterator",
         "io.netty.handler.codec.ReplayingDecoder",
         "io.netty.handler.codec.DatagramPacketDecoder",
         "io.netty.handler.codec.marshalling.UnmarshallerProvider",
         "io.netty.handler.codec.serialization.CompactObjectOutputStream",
         "io.netty.handler.codec.DefaultHeaders$NameValidator",
         "io.netty.handler.codec.AsciiHeadersEncoder",
         "io.netty.handler.codec.compression.LzfEncoder",
         "io.netty.handler.codec.compression.Lz4FrameDecoder$State",
         "io.netty.handler.codec.compression.JdkZlibEncoder",
         "io.netty.handler.codec.ByteToMessageDecoder",
         "io.netty.handler.codec.MessageAggregator$1",
         "io.netty.handler.codec.compression.Bzip2Decoder",
         "io.netty.handler.codec.MessageToByteEncoder",
         "io.netty.handler.codec.compression.Lz4FrameEncoder$1",
         "io.netty.handler.codec.compression.Lz4FrameEncoder$2",
         "io.netty.handler.codec.compression.ByteBufChecksum",
         "io.netty.handler.codec.compression.Bzip2MoveToFrontTable",
         "io.netty.handler.codec.marshalling.ThreadLocalUnmarshallerProvider",
         "io.netty.handler.codec.marshalling.ThreadLocalMarshallerProvider",
         "io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder",
         "io.netty.handler.codec.compression.Lz4FrameEncoder$3",
         "io.netty.handler.codec.HeadersUtils$1",
         "io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult",
         "io.netty.handler.codec.ValueConverter",
         "io.netty.handler.codec.protobuf.ProtobufDecoderNano",
         "io.netty.handler.codec.DecoderResultProvider",
         "io.netty.handler.codec.base64.Base64Dialect",
         "io.netty.handler.codec.compression.Snappy$State",
         "io.netty.handler.codec.bytes.ByteArrayEncoder",
         "io.netty.handler.codec.serialization.ObjectEncoder",
         "io.netty.handler.codec.compression.JdkZlibDecoder$GzipState",
         "io.netty.handler.codec.compression.Lz4FrameDecoder$1",
         "io.netty.handler.codec.compression.JdkZlibDecoder$1",
         "io.netty.handler.codec.compression.JZlibDecoder",
         "io.netty.handler.codec.xml.XmlFrameDecoder",
         "io.netty.handler.codec.compression.Bzip2BlockDecompressor",
         "io.netty.handler.codec.compression.LzfDecoder$State",
         "io.netty.handler.codec.CodecUtil",
         "io.netty.handler.codec.compression.LzfDecoder$1",
         "io.netty.handler.codec.serialization.CompactObjectInputStream",
         "io.netty.handler.codec.compression.ZlibDecoder",
         "io.netty.handler.codec.ByteToMessageCodec$1",
         "io.netty.handler.codec.UnsupportedValueConverter",
         "io.netty.handler.codec.ByteToMessageDecoder$Cumulator",
         "io.netty.handler.codec.compression.SnappyFramedEncoder",
         "io.netty.handler.codec.AsciiHeadersEncoder$NewlineType",
         "io.netty.handler.codec.MessageAggregationException",
         "io.netty.handler.codec.LengthFieldPrepender",
         "io.netty.handler.codec.serialization.CompatibleObjectEncoder",
         "io.netty.handler.codec.json.JsonObjectDecoder",
         "io.netty.handler.codec.marshalling.CompatibleMarshallingEncoder",
         "io.netty.handler.codec.DecoderException",
         "io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder",
         "io.netty.handler.codec.compression.Bzip2Constants",
         "io.netty.handler.codec.ProtocolDetectionResult",
         "io.netty.handler.codec.string.LineEncoder",
         "io.netty.handler.codec.ReplayingDecoderByteBuf",
         "io.netty.handler.codec.CodecOutputList$1",
         "io.netty.handler.codec.protobuf.ProtobufEncoderNano",
         "io.netty.handler.codec.compression.Lz4FrameEncoder",
         "io.netty.handler.codec.ByteToMessageCodec",
         "io.netty.handler.codec.string.StringEncoder",
         "io.netty.handler.codec.TooLongFrameException",
         "io.netty.handler.codec.DefaultHeaders$HeaderDateFormat",
         "io.netty.handler.codec.compression.Snappy",
         "io.netty.handler.codec.DefaultHeaders",
         "io.netty.handler.codec.FixedLengthFrameDecoder",
         "io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget",
         "io.netty.handler.codec.EmptyHeaders",
         "io.netty.handler.codec.protobuf.ProtobufDecoder",
         "io.netty.handler.codec.compression.Bzip2Rand",
         "io.netty.handler.codec.string.LineSeparator",
         "io.netty.handler.codec.Headers",
         "io.netty.handler.codec.marshalling.MarshallingEncoder",
         "io.netty.handler.codec.DecoderResult",
         "io.netty.handler.codec.marshalling.DefaultMarshallerProvider",
         "io.netty.handler.codec.marshalling.LimitingByteInput",
         "io.netty.handler.codec.DatagramPacketEncoder",
         "io.netty.handler.codec.compression.Bzip2Encoder",
         "io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum",
         "io.netty.handler.codec.compression.Bzip2DivSufSort",
         "io.netty.handler.codec.marshalling.DefaultUnmarshallerProvider",
         "io.netty.handler.codec.Delimiters",
         "io.netty.handler.codec.HeadersUtils$StringEntry",
         "io.netty.handler.codec.EncoderException",
         "io.netty.handler.codec.compression.DecompressionException",
         "io.netty.handler.codec.compression.Crc32",
         "io.netty.handler.codec.serialization.ReferenceMap",
         "io.netty.handler.codec.MessageToMessageEncoder",
         "io.netty.handler.codec.compression.Bzip2BitWriter",
         "io.netty.handler.codec.compression.ByteBufChecksum$SlowByteBufChecksum",
         "io.netty.handler.codec.MessageToMessageCodec$2",
         "io.netty.handler.codec.MessageToMessageCodec$1",
         "io.netty.handler.codec.compression.JdkZlibEncoder$4",
         "io.netty.handler.codec.compression.FastLzFrameDecoder",
         "io.netty.handler.codec.compression.Bzip2BitReader",
         "io.netty.handler.codec.AsciiHeadersEncoder$1",
         "io.netty.handler.codec.marshalling.ChannelBufferByteOutput",
         "io.netty.handler.codec.MessageAggregator",
         "io.netty.handler.codec.compression.ZlibCodecFactory",
         "io.netty.handler.codec.compression.Bzip2HuffmanAllocator",
         "io.netty.handler.codec.compression.JdkZlibEncoder$1",
         "io.netty.handler.codec.DefaultHeaders$HeaderEntry",
         "io.netty.handler.codec.compression.JdkZlibEncoder$2",
         "io.netty.handler.codec.CodecOutputList",
         "io.netty.handler.codec.compression.JdkZlibEncoder$3",
         "io.netty.handler.codec.DefaultHeaders$NameValidator$1",
         "io.netty.handler.codec.DefaultHeaders$HeaderIterator",
         "io.netty.handler.codec.MessageToMessageDecoder",
         "io.netty.handler.codec.LengthFieldBasedFrameDecoder",
         "io.netty.handler.codec.compression.Lz4Constants",
         "io.netty.handler.codec.compression.FastLzFrameDecoder$State",
         "io.netty.handler.codec.base64.Base64Decoder",
         "io.netty.handler.codec.compression.ZlibUtil",
         "io.netty.handler.codec.serialization.SoftReferenceMap",
         "io.netty.handler.codec.serialization.ObjectEncoderOutputStream",
         "io.netty.handler.codec.compression.SnappyFrameEncoder",
         "io.netty.handler.codec.compression.ZlibWrapper",
         "io.netty.handler.codec.compression.SnappyFrameDecoder",
         "io.netty.handler.codec.compression.Bzip2Encoder$State",
         "io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder",
         "io.netty.handler.codec.compression.FastLzFrameDecoder$1",
         "io.netty.handler.codec.compression.ZlibUtil$1",
         "io.netty.handler.codec.UnsupportedMessageTypeException",
         "io.netty.handler.codec.marshalling.MarshallerProvider",
         "io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry",
         "io.netty.handler.codec.base64.Base64Encoder",
         "io.netty.handler.codec.CorruptedFrameException",
         "io.netty.handler.codec.serialization.WeakReferenceMap"
        ],
        "usedTypes": [],
        "usageRatio": 0.0,
        "children": [
         {
          "id": "io.netty:netty-transport:jar:4.1.6.Final:compile",
          "coordinates": "io.netty:netty-transport:4.1.6.Final",
          "groupId": "io.netty",
          "artifactId": "netty-transport",
          "version": "4.1.6.Final",
          "scope": "compile",
          "packaging": "jar",
          "omitted": true,
          "size": 427007,
          "type": "transitive",
          "status": "bloated",
          "parent": "io.netty:netty-codec:jar:4.1.6.Final:compile",
          "allTypes": [
           "io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException",
           "io.netty.channel.pool.FixedChannelPool$AcquireTask",
           "io.netty.channel.group.DefaultChannelGroup",
           "io.netty.channel.ChannelInboundHandlerAdapter",
           "io.netty.bootstrap.Bootstrap$2",
           "io.netty.bootstrap.Bootstrap$3",
           "io.netty.channel.DefaultMessageSizeEstimator$1",
           "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask",
           "io.netty.channel.socket.DatagramChannel",
           "io.netty.channel.socket.oio.OioSocketChannel$3",
           "io.netty.channel.socket.oio.OioSocketChannel$2",
           "io.netty.channel.socket.oio.OioSocketChannel$1",
           "io.netty.channel.nio.NioEventLoop$1",
           "io.netty.channel.socket.InternetProtocolFamily",
           "io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig",
           "io.netty.channel.nio.NioEventLoop$2",
           "io.netty.channel.nio.NioEventLoop$3",
           "io.netty.channel.nio.NioEventLoop$4",
           "io.netty.channel.nio.NioEventLoop$5",
           "io.netty.channel.nio.NioEventLoop$6",
           "io.netty.channel.MaxMessagesRecvByteBufAllocator",
           "io.netty.bootstrap.Bootstrap$1",
           "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1",
           "io.netty.channel.ChannelOutboundHandlerAdapter",
           "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2",
           "io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint",
           "io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1",
           "io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise",
           "io.netty.channel.group.ChannelMatchers$ClassMatcher",
           "io.netty.channel.oio.AbstractOioMessageChannel",
           "io.netty.channel.pool.ChannelHealthChecker",
           "io.netty.channel.ChannelOutboundBuffer$MessageProcessor",
           "io.netty.channel.AbstractChannelHandlerContext$WriteTask",
           "io.netty.channel.ChannelPipelineException",
           "io.netty.channel.socket.ServerSocketChannelConfig",
           "io.netty.channel.PendingWriteQueue$PendingWrite",
           "io.netty.channel.socket.nio.NioDatagramChannel",
           "io.netty.channel.pool.AbstractChannelPoolHandler",
           "io.netty.channel.group.VoidChannelGroupFuture",
           "io.netty.bootstrap.BootstrapConfig",
           "io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator",
           "io.netty.channel.ChannelOption",
           "io.netty.channel.SucceededChannelFuture",
           "io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction",
           "io.netty.channel.embedded.EmbeddedChannel$1",
           "io.netty.channel.embedded.EmbeddedChannel$2",
           "io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl",
           "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask",
           "io.netty.channel.socket.oio.OioSocketChannel",
           "io.netty.channel.group.ChannelMatcher",
           "io.netty.channel.AbstractChannelHandlerContext",
           "io.netty.channel.CoalescingBufferQueue",
           "io.netty.channel.ChannelMetadata",
           "io.netty.channel.ChannelOutboundBuffer$1",
           "io.netty.channel.ThreadPerChannelEventLoopGroup$1",
           "io.netty.channel.ChannelOutboundBuffer$2",
           "io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint",
           "io.netty.channel.ChannelOutboundBuffer$3",
           "io.netty.channel.CombinedChannelDuplexHandler",
           "io.netty.channel.ChannelOutboundHandler",
           "io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask",
           "io.netty.channel.SelectStrategy",
           "io.netty.channel.ThreadPerChannelEventLoopGroup",
           "io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig",
           "io.netty.channel.socket.nio.NioSocketChannel$1",
           "io.netty.channel.oio.AbstractOioChannel$DefaultOioUnsafe",
           "io.netty.channel.pool.SimpleChannelPool",
           "io.netty.channel.SimpleChannelInboundHandler",
           "io.netty.channel.nio.NioEventLoop",
           "io.netty.channel.pool.ChannelPool",
           "io.netty.channel.nio.AbstractNioByteChannel",
           "io.netty.channel.socket.oio.OioServerSocketChannelConfig",
           "io.netty.channel.MultithreadEventLoopGroup",
           "io.netty.channel.embedded.EmbeddedChannel$State",
           "io.netty.channel.ChannelId",
           "io.netty.channel.embedded.EmbeddedChannel$EmbeddedChannelPipeline",
           "io.netty.channel.embedded.EmbeddedEventLoop",
           "io.netty.channel.local.LocalServerChannel$1",
           "io.netty.channel.local.LocalServerChannel$2",
           "io.netty.channel.DefaultChannelProgressivePromise",
           "io.netty.channel.socket.nio.NioSocketChannel$5",
           "io.netty.channel.MessageSizeEstimator",
           "io.netty.channel.socket.nio.NioSocketChannel$4",
           "io.netty.channel.socket.nio.NioSocketChannel$3",
           "io.netty.channel.ChannelProgressiveFuture",
           "io.netty.channel.socket.nio.NioSocketChannel$2",
           "io.netty.channel.MaxBytesRecvByteBufAllocator",
           "io.netty.channel.socket.nio.NioSocketChannel$6",
           "io.netty.channel.socket.DatagramPacket",
           "io.netty.channel.pool.ChannelPoolHandler",
           "io.netty.channel.group.ChannelMatchers$1",
           "io.netty.channel.socket.nio.NioServerSocketChannel$1",
           "io.netty.bootstrap.AbstractBootstrap$2",
           "io.netty.bootstrap.AbstractBootstrap$1",
           "io.netty.channel.AbstractEventLoop",
           "io.netty.channel.ConnectTimeoutException",
           "io.netty.channel.ChannelHandlerAdapter",
           "io.netty.channel.socket.nio.NioServerSocketChannel",
           "io.netty.channel.AbstractChannel$AbstractUnsafe",
           "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1",
           "io.netty.channel.EventLoop",
           "io.netty.channel.nio.AbstractNioMessageChannel",
           "io.netty.channel.nio.NioEventLoopGroup",
           "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext",
           "io.netty.channel.local.LocalChannel$6",
           "io.netty.channel.embedded.EmbeddedSocketAddress",
           "io.netty.channel.local.LocalChannel$2",
           "io.netty.channel.local.LocalEventLoopGroup",
           "io.netty.channel.nio.AbstractNioMessageChannel$1",
           "io.netty.channel.local.LocalChannel$3",
           "io.netty.channel.local.LocalChannel$4",
           "io.netty.channel.SingleThreadEventLoop",
           "io.netty.channel.local.LocalChannel$5",
           "io.netty.channel.DefaultFileRegion",
           "io.netty.channel.PendingWriteQueue$1",
           "io.netty.channel.local.LocalChannel$1",
           "io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask$1",
           "io.netty.channel.ChannelFutureListener$3",
           "io.netty.channel.ChannelFutureListener$2",
           "io.netty.channel.socket.oio.OioDatagramChannel",
           "io.netty.channel.ChannelFutureListener$1",
           "io.netty.channel.socket.ChannelInputShutdownEvent",
           "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1",
           "io.netty.channel.socket.oio.DefaultOioSocketChannelConfig",
           "io.netty.channel.ChannelHandlerContext",
           "io.netty.channel.FixedRecvByteBufAllocator",
           "io.netty.bootstrap.ServerBootstrap$1",
           "io.netty.channel.ChannelFutureListener",
           "io.netty.channel.AbstractChannelHandlerContext$WriteTask$1",
           "io.netty.channel.AdaptiveRecvByteBufAllocator",
           "io.netty.channel.pool.FixedChannelPool$TimeoutTask",
           "io.netty.channel.nio.AbstractNioChannel",
           "io.netty.channel.FileRegion",
           "io.netty.channel.nio.AbstractNioChannel$NioUnsafe",
           "io.netty.channel.ChannelProgressivePromise",
           "io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe",
           "io.netty.channel.EventLoopGroup",
           "io.netty.channel.embedded.EmbeddedChannelId",
           "io.netty.channel.AbstractServerChannel$DefaultServerUnsafe",
           "io.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry",
           "io.netty.channel.oio.OioByteStreamChannel$2",
           "io.netty.channel.oio.OioByteStreamChannel$1",
           "io.netty.channel.Channel$Unsafe",
           "io.netty.channel.VoidChannelPromise",
           "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1",
           "io.netty.channel.oio.AbstractOioByteChannel",
           "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2",
           "io.netty.bootstrap.ServerBootstrap$1$1",
           "io.netty.channel.group.ChannelMatchers$InvertMatcher",
           "io.netty.channel.FixedRecvByteBufAllocator$HandleImpl",
           "io.netty.channel.ChannelOutboundBuffer$Entry$1",
           "io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe",
           "io.netty.channel.nio.SelectedSelectionKeySet",
           "io.netty.channel.local.LocalServerChannel",
           "io.netty.channel.ChannelInboundHandler",
           "io.netty.channel.socket.oio.OioServerSocketChannel",
           "io.netty.bootstrap.AbstractBootstrapConfig",
           "io.netty.channel.socket.oio.OioSocketChannelConfig",
           "io.netty.channel.DefaultMessageSizeEstimator",
           "io.netty.channel.DefaultMaxBytesRecvByteBufAllocator",
           "io.netty.channel.local.LocalAddress",
           "io.netty.channel.AbstractServerChannel$1",
           "io.netty.channel.FailedChannelFuture",
           "io.netty.channel.DefaultChannelHandlerContext",
           "io.netty.channel.socket.SocketChannel",
           "io.netty.channel.local.LocalChannel$State",
           "io.netty.channel.ChannelHandler$Sharable",
           "io.netty.channel.AbstractChannel$AnnotatedSocketException",
           "io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback",
           "io.netty.channel.RecvByteBufAllocator",
           "io.netty.channel.ChannelPipeline",
           "io.netty.channel.oio.OioByteStreamChannel",
           "io.netty.channel.RecvByteBufAllocator$DelegatingHandle",
           "io.netty.channel.ServerChannel",
           "io.netty.channel.socket.nio.ProtocolFamilyConverter$1",
           "io.netty.channel.nio.AbstractNioByteChannel$1",
           "io.netty.channel.embedded.EmbeddedChannel$DefaultUnsafe",
           "io.netty.channel.ChannelException",
           "io.netty.channel.ChannelFlushPromiseNotifier",
           "io.netty.channel.AbstractChannelHandlerContext$2",
           "io.netty.channel.AbstractChannelHandlerContext$1",
           "io.netty.channel.ChannelProgressiveFutureListener",
           "io.netty.channel.pool.FixedChannelPool$AcquireListener",
           "io.netty.channel.AbstractChannelHandlerContext$4",
           "io.netty.channel.AbstractChannelHandlerContext$3",
           "io.netty.channel.AbstractChannelHandlerContext$6",
           "io.netty.channel.ThreadPerChannelEventLoop$1",
           "io.netty.channel.AbstractChannelHandlerContext$5",
           "io.netty.channel.ThreadPerChannelEventLoop$2",
           "io.netty.channel.VoidChannelPromise$1",
           "io.netty.channel.AbstractChannelHandlerContext$8",
           "io.netty.channel.AbstractChannelHandlerContext$7",
           "io.netty.channel.pool.ChannelPoolMap",
           "io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle",
           "io.netty.channel.AbstractChannelHandlerContext$9",
           "io.netty.channel.CompleteChannelFuture",
           "io.netty.channel.ChannelOption$1",
           "io.netty.channel.DefaultEventLoop",
           "io.netty.channel.AbstractChannel",
           "io.netty.channel.AddressedEnvelope",
           "io.netty.bootstrap.ChannelFactory",
           "io.netty.channel.MessageSizeEstimator$Handle",
           "io.netty.channel.socket.ServerSocketChannel",
           "io.netty.channel.PendingWriteQueue$PendingWrite$1",
           "io.netty.channel.ThreadPerChannelEventLoop",
           "io.netty.channel.ChannelFactory",
           "io.netty.channel.DefaultSelectStrategyFactory",
           "io.netty.channel.group.DefaultChannelGroupFuture$1",
           "io.netty.channel.group.ChannelGroupException",
           "io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe",
           "io.netty.channel.DefaultEventLoopGroup",
           "io.netty.channel.local.LocalChannelRegistry",
           "io.netty.channel.AbstractChannel$AnnotatedConnectException",
           "io.netty.channel.Channel",
           "io.netty.bootstrap.Bootstrap",
           "io.netty.channel.RecvByteBufAllocator$Handle",
           "io.netty.channel.ReflectiveChannelFactory",
           "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask",
           "io.netty.channel.group.ChannelGroupFuture",
           "io.netty.channel.local.LocalChannel$LocalUnsafe",
           "io.netty.channel.AbstractChannel$AbstractUnsafe$1",
           "io.netty.channel.pool.ChannelHealthChecker$1",
           "io.netty.channel.DefaultAddressedEnvelope",
           "io.netty.channel.DefaultChannelPipeline$TailContext",
           "io.netty.channel.DefaultChannelConfig",
           "io.netty.channel.AbstractChannel$AbstractUnsafe$7",
           "io.netty.channel.AbstractChannelHandlerContext$11",
           "io.netty.channel.AbstractChannel$AbstractUnsafe$6",
           "io.netty.channel.AbstractChannelHandlerContext$10",
           "io.netty.channel.AbstractChannelHandlerContext$13",
           "io.netty.channel.nio.NioTask",
           "io.netty.channel.AbstractServerChannel",
           "io.netty.channel.AbstractChannelHandlerContext$12",
           "io.netty.channel.AbstractChannel$AbstractUnsafe$8",
           "io.netty.channel.AbstractChannel$AbstractUnsafe$3",
           "io.netty.channel.AbstractChannel$AbstractUnsafe$2",
           "io.netty.channel.AbstractChannel$AbstractUnsafe$5",
           "io.netty.channel.AbstractChannel$AbstractUnsafe$4",
           "io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe",
           "io.netty.channel.DefaultMessageSizeEstimator$HandleImpl",
           "io.netty.channel.ChannelPromise",
           "io.netty.channel.local.LocalChannel",
           "io.netty.channel.socket.DefaultSocketChannelConfig",
           "io.netty.channel.pool.FixedChannelPool",
           "io.netty.bootstrap.AbstractBootstrap",
           "io.netty.channel.SelectStrategyFactory",
           "io.netty.channel.DefaultChannelPromise",
           "io.netty.channel.group.CombinedIterator",
           "io.netty.channel.ChannelDuplexHandler",
           "io.netty.channel.pool.SimpleChannelPool$3",
           "io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl",
           "io.netty.channel.pool.SimpleChannelPool$2",
           "io.netty.channel.DefaultChannelId",
           "io.netty.channel.pool.SimpleChannelPool$5",
           "io.netty.channel.group.ChannelGroup",
           "io.netty.channel.pool.SimpleChannelPool$4",
           "io.netty.channel.ChannelInitializer",
           "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
           "io.netty.channel.pool.SimpleChannelPool$6",
           "io.netty.channel.oio.AbstractOioChannel",
           "io.netty.channel.group.DefaultChannelGroup$1",
           "io.netty.channel.pool.SimpleChannelPool$1",
           "io.netty.channel.ChannelOutboundBuffer",
           "io.netty.channel.AbstractChannelHandlerContext$15",
           "io.netty.channel.AbstractChannelHandlerContext$14",
           "io.netty.channel.AbstractChannelHandlerContext$16",
           "io.netty.channel.ChannelOutboundInvoker",
           "io.netty.channel.CombinedChannelDuplexHandler$1",
           "io.netty.channel.ChannelOutboundBuffer$Entry",
           "io.netty.channel.DefaultChannelPipeline",
           "io.netty.bootstrap.ServerBootstrapConfig",
           "io.netty.channel.group.ChannelGroupFutureListener",
           "io.netty.channel.socket.nio.NioSocketChannel",
           "io.netty.channel.nio.AbstractNioChannel$2",
           "io.netty.channel.WriteBufferWaterMark",
           "io.netty.channel.AbstractEventLoopGroup",
           "io.netty.channel.socket.SocketChannelConfig",
           "io.netty.channel.socket.DefaultServerSocketChannelConfig",
           "io.netty.channel.pool.FixedChannelPool$6",
           "io.netty.channel.nio.AbstractNioChannel$1",
           "io.netty.channel.socket.nio.NioDatagramChannelConfig",
           "io.netty.channel.pool.FixedChannelPool$3",
           "io.netty.channel.pool.FixedChannelPool$2",
           "io.netty.channel.EventLoopException",
           "io.netty.channel.DefaultChannelPipeline$HeadContext",
           "io.netty.channel.pool.FixedChannelPool$5",
           "io.netty.channel.pool.FixedChannelPool$4",
           "io.netty.channel.socket.DatagramChannelConfig",
           "io.netty.channel.pool.FixedChannelPool$1",
           "io.netty.channel.socket.DuplexChannel",
           "io.netty.channel.oio.AbstractOioChannel$1",
           "io.netty.channel.oio.AbstractOioChannel$2",
           "io.netty.channel.oio.AbstractOioChannel$3",
           "io.netty.channel.socket.nio.ProtocolFamilyConverter",
           "io.netty.channel.group.ChannelMatchers$InstanceMatcher",
           "io.netty.channel.group.ChannelMatchers",
           "io.netty.channel.PendingWriteQueue",
           "io.netty.channel.embedded.EmbeddedChannel",
           "io.netty.channel.oio.OioEventLoopGroup",
           "io.netty.channel.group.ChannelMatchers$CompositeMatcher",
           "io.netty.channel.ChannelPromiseNotifier",
           "io.netty.channel.ChannelInboundInvoker",
           "io.netty.channel.SingleThreadEventLoop$NonWakeupRunnable",
           "io.netty.channel.ChannelFuture",
           "io.netty.channel.AbstractChannel$CloseFuture",
           "io.netty.channel.group.DefaultChannelGroupFuture",
           "io.netty.channel.ChannelConfig",
           "io.netty.channel.DefaultChannelPipeline$9",
           "io.netty.channel.DefaultChannelPipeline$6",
           "io.netty.bootstrap.ServerBootstrap",
           "io.netty.channel.DefaultChannelPipeline$5",
           "io.netty.channel.DefaultSelectStrategy",
           "io.netty.channel.DefaultChannelPipeline$8",
           "io.netty.channel.ChannelHandler",
           "io.netty.channel.DefaultChannelPipeline$7",
           "io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig",
           "io.netty.channel.socket.DefaultDatagramChannelConfig",
           "io.netty.channel.pool.AbstractChannelPoolMap",
           "io.netty.channel.ChannelPromiseAggregator",
           "io.netty.channel.DefaultChannelPipeline$2",
           "io.netty.channel.local.PreferHeapByteBufAllocator",
           "io.netty.channel.DefaultChannelPipeline$1",
           "io.netty.channel.DefaultChannelPipeline$4",
           "io.netty.channel.DefaultChannelPipeline$3"
          ],
          "usedTypes": [],
          "usageRatio": 0.0,
          "children": []
         }
        ]
       }
      ]
     }
    ]
   }
  ]
 }
}